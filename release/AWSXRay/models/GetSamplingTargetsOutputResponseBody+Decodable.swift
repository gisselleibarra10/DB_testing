// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSamplingTargetsOutputResponseBody: Swift.Equatable {
    let samplingTargetDocuments: [XRayClientTypes.SamplingTargetDocument]?
    let lastRuleModification: ClientRuntime.Date?
    let unprocessedStatistics: [XRayClientTypes.UnprocessedStatistics]?
}

extension GetSamplingTargetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastRuleModification = "LastRuleModification"
        case samplingTargetDocuments = "SamplingTargetDocuments"
        case unprocessedStatistics = "UnprocessedStatistics"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let samplingTargetDocumentsContainer = try containerValues.decodeIfPresent([XRayClientTypes.SamplingTargetDocument?].self, forKey: .samplingTargetDocuments)
        var samplingTargetDocumentsDecoded0:[XRayClientTypes.SamplingTargetDocument]? = nil
        if let samplingTargetDocumentsContainer = samplingTargetDocumentsContainer {
            samplingTargetDocumentsDecoded0 = [XRayClientTypes.SamplingTargetDocument]()
            for structure0 in samplingTargetDocumentsContainer {
                if let structure0 = structure0 {
                    samplingTargetDocumentsDecoded0?.append(structure0)
                }
            }
        }
        samplingTargetDocuments = samplingTargetDocumentsDecoded0
        let lastRuleModificationDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastRuleModification)
        lastRuleModification = lastRuleModificationDecoded
        let unprocessedStatisticsContainer = try containerValues.decodeIfPresent([XRayClientTypes.UnprocessedStatistics?].self, forKey: .unprocessedStatistics)
        var unprocessedStatisticsDecoded0:[XRayClientTypes.UnprocessedStatistics]? = nil
        if let unprocessedStatisticsContainer = unprocessedStatisticsContainer {
            unprocessedStatisticsDecoded0 = [XRayClientTypes.UnprocessedStatistics]()
            for structure0 in unprocessedStatisticsContainer {
                if let structure0 = structure0 {
                    unprocessedStatisticsDecoded0?.append(structure0)
                }
            }
        }
        unprocessedStatistics = unprocessedStatisticsDecoded0
    }
}
