// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSamplingStatisticSummariesOutputResponseBody: Swift.Equatable {
    let samplingStatisticSummaries: [XRayClientTypes.SamplingStatisticSummary]?
    let nextToken: Swift.String?
}

extension GetSamplingStatisticSummariesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case samplingStatisticSummaries = "SamplingStatisticSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let samplingStatisticSummariesContainer = try containerValues.decodeIfPresent([XRayClientTypes.SamplingStatisticSummary?].self, forKey: .samplingStatisticSummaries)
        var samplingStatisticSummariesDecoded0:[XRayClientTypes.SamplingStatisticSummary]? = nil
        if let samplingStatisticSummariesContainer = samplingStatisticSummariesContainer {
            samplingStatisticSummariesDecoded0 = [XRayClientTypes.SamplingStatisticSummary]()
            for structure0 in samplingStatisticSummariesContainer {
                if let structure0 = structure0 {
                    samplingStatisticSummariesDecoded0?.append(structure0)
                }
            }
        }
        samplingStatisticSummaries = samplingStatisticSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
