// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetTracesOutputResponseBody: Swift.Equatable {
    let traces: [XRayClientTypes.Trace]?
    let unprocessedTraceIds: [Swift.String]?
    let nextToken: Swift.String?
}

extension BatchGetTracesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case traces = "Traces"
        case unprocessedTraceIds = "UnprocessedTraceIds"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tracesContainer = try containerValues.decodeIfPresent([XRayClientTypes.Trace?].self, forKey: .traces)
        var tracesDecoded0:[XRayClientTypes.Trace]? = nil
        if let tracesContainer = tracesContainer {
            tracesDecoded0 = [XRayClientTypes.Trace]()
            for structure0 in tracesContainer {
                if let structure0 = structure0 {
                    tracesDecoded0?.append(structure0)
                }
            }
        }
        traces = tracesDecoded0
        let unprocessedTraceIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .unprocessedTraceIds)
        var unprocessedTraceIdsDecoded0:[Swift.String]? = nil
        if let unprocessedTraceIdsContainer = unprocessedTraceIdsContainer {
            unprocessedTraceIdsDecoded0 = [Swift.String]()
            for string0 in unprocessedTraceIdsContainer {
                if let string0 = string0 {
                    unprocessedTraceIdsDecoded0?.append(string0)
                }
            }
        }
        unprocessedTraceIds = unprocessedTraceIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
