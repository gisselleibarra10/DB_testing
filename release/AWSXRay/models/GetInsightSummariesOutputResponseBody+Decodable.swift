// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInsightSummariesOutputResponseBody: Swift.Equatable {
    let insightSummaries: [XRayClientTypes.InsightSummary]?
    let nextToken: Swift.String?
}

extension GetInsightSummariesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case insightSummaries = "InsightSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let insightSummariesContainer = try containerValues.decodeIfPresent([XRayClientTypes.InsightSummary?].self, forKey: .insightSummaries)
        var insightSummariesDecoded0:[XRayClientTypes.InsightSummary]? = nil
        if let insightSummariesContainer = insightSummariesContainer {
            insightSummariesDecoded0 = [XRayClientTypes.InsightSummary]()
            for structure0 in insightSummariesContainer {
                if let structure0 = structure0 {
                    insightSummariesDecoded0?.append(structure0)
                }
            }
        }
        insightSummaries = insightSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
