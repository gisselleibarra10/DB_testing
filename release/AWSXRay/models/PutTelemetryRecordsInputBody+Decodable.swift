// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutTelemetryRecordsInputBody: Swift.Equatable {
    let telemetryRecords: [XRayClientTypes.TelemetryRecord]?
    let eC2InstanceId: Swift.String?
    let hostname: Swift.String?
    let resourceARN: Swift.String?
}

extension PutTelemetryRecordsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eC2InstanceId = "EC2InstanceId"
        case hostname = "Hostname"
        case resourceARN = "ResourceARN"
        case telemetryRecords = "TelemetryRecords"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let telemetryRecordsContainer = try containerValues.decodeIfPresent([XRayClientTypes.TelemetryRecord?].self, forKey: .telemetryRecords)
        var telemetryRecordsDecoded0:[XRayClientTypes.TelemetryRecord]? = nil
        if let telemetryRecordsContainer = telemetryRecordsContainer {
            telemetryRecordsDecoded0 = [XRayClientTypes.TelemetryRecord]()
            for structure0 in telemetryRecordsContainer {
                if let structure0 = structure0 {
                    telemetryRecordsDecoded0?.append(structure0)
                }
            }
        }
        telemetryRecords = telemetryRecordsDecoded0
        let eC2InstanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eC2InstanceId)
        eC2InstanceId = eC2InstanceIdDecoded
        let hostnameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hostname)
        hostname = hostnameDecoded
        let resourceARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceARN)
        resourceARN = resourceARNDecoded
    }
}
