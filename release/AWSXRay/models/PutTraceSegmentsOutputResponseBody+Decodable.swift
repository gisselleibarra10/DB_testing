// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutTraceSegmentsOutputResponseBody: Swift.Equatable {
    let unprocessedTraceSegments: [XRayClientTypes.UnprocessedTraceSegment]?
}

extension PutTraceSegmentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case unprocessedTraceSegments = "UnprocessedTraceSegments"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let unprocessedTraceSegmentsContainer = try containerValues.decodeIfPresent([XRayClientTypes.UnprocessedTraceSegment?].self, forKey: .unprocessedTraceSegments)
        var unprocessedTraceSegmentsDecoded0:[XRayClientTypes.UnprocessedTraceSegment]? = nil
        if let unprocessedTraceSegmentsContainer = unprocessedTraceSegmentsContainer {
            unprocessedTraceSegmentsDecoded0 = [XRayClientTypes.UnprocessedTraceSegment]()
            for structure0 in unprocessedTraceSegmentsContainer {
                if let structure0 = structure0 {
                    unprocessedTraceSegmentsDecoded0?.append(structure0)
                }
            }
        }
        unprocessedTraceSegments = unprocessedTraceSegmentsDecoded0
    }
}
