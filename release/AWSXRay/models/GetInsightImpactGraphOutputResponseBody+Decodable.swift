// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInsightImpactGraphOutputResponseBody: Swift.Equatable {
    let insightId: Swift.String?
    let startTime: ClientRuntime.Date?
    let endTime: ClientRuntime.Date?
    let serviceGraphStartTime: ClientRuntime.Date?
    let serviceGraphEndTime: ClientRuntime.Date?
    let services: [XRayClientTypes.InsightImpactGraphService]?
    let nextToken: Swift.String?
}

extension GetInsightImpactGraphOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case endTime = "EndTime"
        case insightId = "InsightId"
        case nextToken = "NextToken"
        case serviceGraphEndTime = "ServiceGraphEndTime"
        case serviceGraphStartTime = "ServiceGraphStartTime"
        case services = "Services"
        case startTime = "StartTime"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let insightIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .insightId)
        insightId = insightIdDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let serviceGraphStartTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .serviceGraphStartTime)
        serviceGraphStartTime = serviceGraphStartTimeDecoded
        let serviceGraphEndTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .serviceGraphEndTime)
        serviceGraphEndTime = serviceGraphEndTimeDecoded
        let servicesContainer = try containerValues.decodeIfPresent([XRayClientTypes.InsightImpactGraphService?].self, forKey: .services)
        var servicesDecoded0:[XRayClientTypes.InsightImpactGraphService]? = nil
        if let servicesContainer = servicesContainer {
            servicesDecoded0 = [XRayClientTypes.InsightImpactGraphService]()
            for structure0 in servicesContainer {
                if let structure0 = structure0 {
                    servicesDecoded0?.append(structure0)
                }
            }
        }
        services = servicesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
