// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension XRayClientTypes {
    /// X-Ray reevaluates insights periodically until they are resolved, and records each intermediate state in an event. You can review incident events in the Impact Timeline on the Inspect page in the X-Ray console.
    public struct InsightEvent: Swift.Equatable {
        /// The impact statistics of the client side service. This includes the number of requests to the client service and whether the requests were faults or okay.
        public var clientRequestImpactStatistics: XRayClientTypes.RequestImpactStatistics?
        /// The time, in Unix seconds, at which the event was recorded.
        public var eventTime: ClientRuntime.Date?
        /// The impact statistics of the root cause service. This includes the number of requests to the client service and whether the requests were faults or okay.
        public var rootCauseServiceRequestImpactStatistics: XRayClientTypes.RequestImpactStatistics?
        /// A brief description of the event.
        public var summary: Swift.String?
        /// The service during the event that is most impacted by the incident.
        public var topAnomalousServices: [XRayClientTypes.AnomalousService]?

        public init (
            clientRequestImpactStatistics: XRayClientTypes.RequestImpactStatistics? = nil,
            eventTime: ClientRuntime.Date? = nil,
            rootCauseServiceRequestImpactStatistics: XRayClientTypes.RequestImpactStatistics? = nil,
            summary: Swift.String? = nil,
            topAnomalousServices: [XRayClientTypes.AnomalousService]? = nil
        )
        {
            self.clientRequestImpactStatistics = clientRequestImpactStatistics
            self.eventTime = eventTime
            self.rootCauseServiceRequestImpactStatistics = rootCauseServiceRequestImpactStatistics
            self.summary = summary
            self.topAnomalousServices = topAnomalousServices
        }
    }

}
