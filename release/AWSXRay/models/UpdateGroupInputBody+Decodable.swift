// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGroupInputBody: Swift.Equatable {
    let groupName: Swift.String?
    let groupARN: Swift.String?
    let filterExpression: Swift.String?
    let insightsConfiguration: XRayClientTypes.InsightsConfiguration?
}

extension UpdateGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterExpression = "FilterExpression"
        case groupARN = "GroupARN"
        case groupName = "GroupName"
        case insightsConfiguration = "InsightsConfiguration"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groupName)
        groupName = groupNameDecoded
        let groupARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groupARN)
        groupARN = groupARNDecoded
        let filterExpressionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filterExpression)
        filterExpression = filterExpressionDecoded
        let insightsConfigurationDecoded = try containerValues.decodeIfPresent(XRayClientTypes.InsightsConfiguration.self, forKey: .insightsConfiguration)
        insightsConfiguration = insightsConfigurationDecoded
    }
}
