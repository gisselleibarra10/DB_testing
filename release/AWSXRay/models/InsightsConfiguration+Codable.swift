// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension XRayClientTypes.InsightsConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case insightsEnabled = "InsightsEnabled"
        case notificationsEnabled = "NotificationsEnabled"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let insightsEnabled = self.insightsEnabled {
            try encodeContainer.encode(insightsEnabled, forKey: .insightsEnabled)
        }
        if let notificationsEnabled = self.notificationsEnabled {
            try encodeContainer.encode(notificationsEnabled, forKey: .notificationsEnabled)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let insightsEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .insightsEnabled)
        insightsEnabled = insightsEnabledDecoded
        let notificationsEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .notificationsEnabled)
        notificationsEnabled = notificationsEnabledDecoded
    }
}
