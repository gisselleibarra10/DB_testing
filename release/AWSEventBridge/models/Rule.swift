// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EventBridgeClientTypes {
    /// Contains information about a rule in Amazon EventBridge.
    public struct Rule: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the rule.
        public var arn: Swift.String?
        /// The description of the rule.
        public var description: Swift.String?
        /// The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.
        public var eventBusName: Swift.String?
        /// The event pattern of the rule. For more information, see [Events and Event Patterns](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html) in the Amazon EventBridge User Guide.
        public var eventPattern: Swift.String?
        /// If the rule was created on behalf of your account by an Amazon Web Services service, this field displays the principal name of the service that created the rule.
        public var managedBy: Swift.String?
        /// The name of the rule.
        public var name: Swift.String?
        /// The Amazon Resource Name (ARN) of the role that is used for target invocation. If you're setting an event bus in another account as the target and that account granted permission to your account through an organization instead of directly by the account ID, you must specify a RoleArn with proper permissions in the Target structure, instead of here in this parameter.
        public var roleArn: Swift.String?
        /// The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)". For more information, see [Creating an Amazon EventBridge rule that runs on a schedule](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-create-rule-schedule.html).
        public var scheduleExpression: Swift.String?
        /// The state of the rule.
        public var state: EventBridgeClientTypes.RuleState?

        public init (
            arn: Swift.String? = nil,
            description: Swift.String? = nil,
            eventBusName: Swift.String? = nil,
            eventPattern: Swift.String? = nil,
            managedBy: Swift.String? = nil,
            name: Swift.String? = nil,
            roleArn: Swift.String? = nil,
            scheduleExpression: Swift.String? = nil,
            state: EventBridgeClientTypes.RuleState? = nil
        )
        {
            self.arn = arn
            self.description = description
            self.eventBusName = eventBusName
            self.eventPattern = eventPattern
            self.managedBy = managedBy
            self.name = name
            self.roleArn = roleArn
            self.scheduleExpression = scheduleExpression
            self.state = state
        }
    }

}
