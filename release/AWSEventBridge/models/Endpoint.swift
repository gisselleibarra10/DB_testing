// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EventBridgeClientTypes {
    /// An global endpoint used to improve your application's availability by making it regional-fault tolerant. For more information about global endpoints, see [Making applications Regional-fault tolerant with global endpoints and event replication](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html) in the Amazon EventBridge User Guide..
    public struct Endpoint: Swift.Equatable {
        /// The ARN of the endpoint.
        public var arn: Swift.String?
        /// The time the endpoint was created.
        public var creationTime: ClientRuntime.Date?
        /// A description for the endpoint.
        public var description: Swift.String?
        /// The URL subdomain of the endpoint. For example, if the URL for Endpoint is abcde.veo.endpoints.event.amazonaws.com, then the EndpointId is abcde.veo.
        public var endpointId: Swift.String?
        /// The URL of the endpoint.
        public var endpointUrl: Swift.String?
        /// The event buses being used by the endpoint.
        public var eventBuses: [EventBridgeClientTypes.EndpointEventBus]?
        /// The last time the endpoint was modified.
        public var lastModifiedTime: ClientRuntime.Date?
        /// The name of the endpoint.
        public var name: Swift.String?
        /// Whether event replication was enabled or disabled for this endpoint.
        public var replicationConfig: EventBridgeClientTypes.ReplicationConfig?
        /// The ARN of the role used by event replication for the endpoint.
        public var roleArn: Swift.String?
        /// The routing configuration of the endpoint.
        public var routingConfig: EventBridgeClientTypes.RoutingConfig?
        /// The current state of the endpoint.
        public var state: EventBridgeClientTypes.EndpointState?
        /// The reason the endpoint is in its current state.
        public var stateReason: Swift.String?

        public init (
            arn: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            endpointId: Swift.String? = nil,
            endpointUrl: Swift.String? = nil,
            eventBuses: [EventBridgeClientTypes.EndpointEventBus]? = nil,
            lastModifiedTime: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            replicationConfig: EventBridgeClientTypes.ReplicationConfig? = nil,
            roleArn: Swift.String? = nil,
            routingConfig: EventBridgeClientTypes.RoutingConfig? = nil,
            state: EventBridgeClientTypes.EndpointState? = nil,
            stateReason: Swift.String? = nil
        )
        {
            self.arn = arn
            self.creationTime = creationTime
            self.description = description
            self.endpointId = endpointId
            self.endpointUrl = endpointUrl
            self.eventBuses = eventBuses
            self.lastModifiedTime = lastModifiedTime
            self.name = name
            self.replicationConfig = replicationConfig
            self.roleArn = roleArn
            self.routingConfig = routingConfig
            self.state = state
            self.stateReason = stateReason
        }
    }

}
