// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeauthorizeConnectionOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: DeauthorizeConnectionOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.connectionArn = output.connectionArn
            self.connectionState = output.connectionState
            self.creationTime = output.creationTime
            self.lastAuthorizedTime = output.lastAuthorizedTime
            self.lastModifiedTime = output.lastModifiedTime
        } else {
            self.connectionArn = nil
            self.connectionState = nil
            self.creationTime = nil
            self.lastAuthorizedTime = nil
            self.lastModifiedTime = nil
        }
    }
}
