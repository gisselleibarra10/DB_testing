// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateApiDestinationInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionArn = "ConnectionArn"
        case description = "Description"
        case httpMethod = "HttpMethod"
        case invocationEndpoint = "InvocationEndpoint"
        case invocationRateLimitPerSecond = "InvocationRateLimitPerSecond"
        case name = "Name"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionArn = self.connectionArn {
            try encodeContainer.encode(connectionArn, forKey: .connectionArn)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let httpMethod = self.httpMethod {
            try encodeContainer.encode(httpMethod.rawValue, forKey: .httpMethod)
        }
        if let invocationEndpoint = self.invocationEndpoint {
            try encodeContainer.encode(invocationEndpoint, forKey: .invocationEndpoint)
        }
        if let invocationRateLimitPerSecond = self.invocationRateLimitPerSecond {
            try encodeContainer.encode(invocationRateLimitPerSecond, forKey: .invocationRateLimitPerSecond)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }
}
