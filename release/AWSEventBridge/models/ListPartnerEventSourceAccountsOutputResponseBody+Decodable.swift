// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPartnerEventSourceAccountsOutputResponseBody: Swift.Equatable {
    let partnerEventSourceAccounts: [EventBridgeClientTypes.PartnerEventSourceAccount]?
    let nextToken: Swift.String?
}

extension ListPartnerEventSourceAccountsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case partnerEventSourceAccounts = "PartnerEventSourceAccounts"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partnerEventSourceAccountsContainer = try containerValues.decodeIfPresent([EventBridgeClientTypes.PartnerEventSourceAccount?].self, forKey: .partnerEventSourceAccounts)
        var partnerEventSourceAccountsDecoded0:[EventBridgeClientTypes.PartnerEventSourceAccount]? = nil
        if let partnerEventSourceAccountsContainer = partnerEventSourceAccountsContainer {
            partnerEventSourceAccountsDecoded0 = [EventBridgeClientTypes.PartnerEventSourceAccount]()
            for structure0 in partnerEventSourceAccountsContainer {
                if let structure0 = structure0 {
                    partnerEventSourceAccountsDecoded0?.append(structure0)
                }
            }
        }
        partnerEventSourceAccounts = partnerEventSourceAccountsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
