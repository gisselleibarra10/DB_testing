// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeReplayOutputResponse: Swift.Equatable {
    /// The description of the replay.
    public var description: Swift.String?
    /// A ReplayDestination object that contains details about the replay.
    public var destination: EventBridgeClientTypes.ReplayDestination?
    /// The time stamp for the last event that was replayed from the archive.
    public var eventEndTime: ClientRuntime.Date?
    /// The time that the event was last replayed.
    public var eventLastReplayedTime: ClientRuntime.Date?
    /// The ARN of the archive events were replayed from.
    public var eventSourceArn: Swift.String?
    /// The time stamp of the first event that was last replayed from the archive.
    public var eventStartTime: ClientRuntime.Date?
    /// The ARN of the replay.
    public var replayArn: Swift.String?
    /// A time stamp for the time that the replay stopped.
    public var replayEndTime: ClientRuntime.Date?
    /// The name of the replay.
    public var replayName: Swift.String?
    /// A time stamp for the time that the replay started.
    public var replayStartTime: ClientRuntime.Date?
    /// The current state of the replay.
    public var state: EventBridgeClientTypes.ReplayState?
    /// The reason that the replay is in the current state.
    public var stateReason: Swift.String?

    public init (
        description: Swift.String? = nil,
        destination: EventBridgeClientTypes.ReplayDestination? = nil,
        eventEndTime: ClientRuntime.Date? = nil,
        eventLastReplayedTime: ClientRuntime.Date? = nil,
        eventSourceArn: Swift.String? = nil,
        eventStartTime: ClientRuntime.Date? = nil,
        replayArn: Swift.String? = nil,
        replayEndTime: ClientRuntime.Date? = nil,
        replayName: Swift.String? = nil,
        replayStartTime: ClientRuntime.Date? = nil,
        state: EventBridgeClientTypes.ReplayState? = nil,
        stateReason: Swift.String? = nil
    )
    {
        self.description = description
        self.destination = destination
        self.eventEndTime = eventEndTime
        self.eventLastReplayedTime = eventLastReplayedTime
        self.eventSourceArn = eventSourceArn
        self.eventStartTime = eventStartTime
        self.replayArn = replayArn
        self.replayEndTime = replayEndTime
        self.replayName = replayName
        self.replayStartTime = replayStartTime
        self.state = state
        self.stateReason = stateReason
    }
}
