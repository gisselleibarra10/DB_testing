// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EventBridgeClientTypes {
    /// Contains the parameters needed for you to provide custom input to a target based on one or more pieces of data extracted from the event.
    public struct InputTransformer: Swift.Equatable {
        /// Map of JSON paths to be extracted from the event. You can then insert these in the template in InputTemplate to produce the output you want to be sent to the target. InputPathsMap is an array key-value pairs, where each value is a valid JSON path. You can have as many as 100 key-value pairs. You must use JSON dot notation, not bracket notation. The keys cannot start with "Amazon Web Services."
        public var inputPathsMap: [Swift.String:Swift.String]?
        /// Input template where you specify placeholders that will be filled with the values of the keys from InputPathsMap to customize the data sent to the target. Enclose each InputPathsMaps value in brackets: <value> The InputTemplate must be valid JSON. If InputTemplate is a JSON object (surrounded by curly braces), the following restrictions apply:
        ///
        /// * The placeholder cannot be used as an object key.
        ///
        ///
        /// The following example shows the syntax for using InputPathsMap and InputTemplate.  "InputTransformer":
        ///     {
        ///
        ///
        ///     "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
        ///
        ///
        ///     "InputTemplate": " is in state "
        ///
        /// } To have the InputTemplate include quote marks within a JSON string, escape each quote marks with a slash, as in the following example:  "InputTransformer":
        ///     {
        ///
        ///
        ///     "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
        ///
        ///
        ///     "InputTemplate": " is in state """
        ///
        /// } The InputTemplate can also be valid JSON with varibles in quotes or out, as in the following example:  "InputTransformer":
        ///     {
        ///
        ///
        ///     "InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},
        ///
        ///
        ///     "InputTemplate": '{"myInstance": ,"myStatus": " is in state """}'
        ///
        ///
        ///     }
        /// This member is required.
        public var inputTemplate: Swift.String?

        public init (
            inputPathsMap: [Swift.String:Swift.String]? = nil,
            inputTemplate: Swift.String? = nil
        )
        {
            self.inputPathsMap = inputPathsMap
            self.inputTemplate = inputTemplate
        }
    }

}
