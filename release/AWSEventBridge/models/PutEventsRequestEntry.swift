// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EventBridgeClientTypes {
    /// Represents an event to be submitted.
    public struct PutEventsRequestEntry: Swift.Equatable {
        /// A valid JSON object. There is no other schema imposed. The JSON object may contain fields and nested subobjects.
        public var detail: Swift.String?
        /// Free-form string used to decide what fields to expect in the event detail.
        public var detailType: Swift.String?
        /// The name or ARN of the event bus to receive the event. Only the rules that are associated with this event bus are used to match the event. If you omit this, the default event bus is used. If you're using a global endpoint with a custom bus, you must enter the name, not the ARN, of the event bus in either the primary or secondary Region here and the corresponding event bus in the other Region will be determined based on the endpoint referenced by the EndpointId.
        public var eventBusName: Swift.String?
        /// Amazon Web Services resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present.
        public var resources: [Swift.String]?
        /// The source of the event.
        public var source: Swift.String?
        /// The time stamp of the event, per [RFC3339](https://www.rfc-editor.org/rfc/rfc3339.txt). If no time stamp is provided, the time stamp of the [PutEvents](https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html) call is used.
        public var time: ClientRuntime.Date?
        /// An X-Ray trace header, which is an http header (X-Amzn-Trace-Id) that contains the trace-id associated with the event. To learn more about X-Ray trace headers, see [Tracing header](https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-tracingheader) in the X-Ray Developer Guide.
        public var traceHeader: Swift.String?

        public init (
            detail: Swift.String? = nil,
            detailType: Swift.String? = nil,
            eventBusName: Swift.String? = nil,
            resources: [Swift.String]? = nil,
            source: Swift.String? = nil,
            time: ClientRuntime.Date? = nil,
            traceHeader: Swift.String? = nil
        )
        {
            self.detail = detail
            self.detailType = detailType
            self.eventBusName = eventBusName
            self.resources = resources
            self.source = source
            self.time = time
            self.traceHeader = traceHeader
        }
    }

}
