// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeApiDestinationOutputResponse: Swift.Equatable {
    /// The ARN of the API destination retrieved.
    public var apiDestinationArn: Swift.String?
    /// The state of the API destination retrieved.
    public var apiDestinationState: EventBridgeClientTypes.ApiDestinationState?
    /// The ARN of the connection specified for the API destination retrieved.
    public var connectionArn: Swift.String?
    /// A time stamp for the time that the API destination was created.
    public var creationTime: ClientRuntime.Date?
    /// The description for the API destination retrieved.
    public var description: Swift.String?
    /// The method to use to connect to the HTTP endpoint.
    public var httpMethod: EventBridgeClientTypes.ApiDestinationHttpMethod?
    /// The URL to use to connect to the HTTP endpoint.
    public var invocationEndpoint: Swift.String?
    /// The maximum number of invocations per second to specified for the API destination. Note that if you set the invocation rate maximum to a value lower the rate necessary to send all events received on to the destination HTTP endpoint, some events may not be delivered within the 24-hour retry window. If you plan to set the rate lower than the rate necessary to deliver all events, consider using a dead-letter queue to catch events that are not delivered within 24 hours.
    public var invocationRateLimitPerSecond: Swift.Int?
    /// A time stamp for the time that the API destination was last modified.
    public var lastModifiedTime: ClientRuntime.Date?
    /// The name of the API destination retrieved.
    public var name: Swift.String?

    public init (
        apiDestinationArn: Swift.String? = nil,
        apiDestinationState: EventBridgeClientTypes.ApiDestinationState? = nil,
        connectionArn: Swift.String? = nil,
        creationTime: ClientRuntime.Date? = nil,
        description: Swift.String? = nil,
        httpMethod: EventBridgeClientTypes.ApiDestinationHttpMethod? = nil,
        invocationEndpoint: Swift.String? = nil,
        invocationRateLimitPerSecond: Swift.Int? = nil,
        lastModifiedTime: ClientRuntime.Date? = nil,
        name: Swift.String? = nil
    )
    {
        self.apiDestinationArn = apiDestinationArn
        self.apiDestinationState = apiDestinationState
        self.connectionArn = connectionArn
        self.creationTime = creationTime
        self.description = description
        self.httpMethod = httpMethod
        self.invocationEndpoint = invocationEndpoint
        self.invocationRateLimitPerSecond = invocationRateLimitPerSecond
        self.lastModifiedTime = lastModifiedTime
        self.name = name
    }
}
