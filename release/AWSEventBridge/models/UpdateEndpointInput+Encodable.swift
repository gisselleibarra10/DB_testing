// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateEndpointInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case eventBuses = "EventBuses"
        case name = "Name"
        case replicationConfig = "ReplicationConfig"
        case roleArn = "RoleArn"
        case routingConfig = "RoutingConfig"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let eventBuses = eventBuses {
            var eventBusesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .eventBuses)
            for endpointeventbuslist0 in eventBuses {
                try eventBusesContainer.encode(endpointeventbuslist0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let replicationConfig = self.replicationConfig {
            try encodeContainer.encode(replicationConfig, forKey: .replicationConfig)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let routingConfig = self.routingConfig {
            try encodeContainer.encode(routingConfig, forKey: .routingConfig)
        }
    }
}
