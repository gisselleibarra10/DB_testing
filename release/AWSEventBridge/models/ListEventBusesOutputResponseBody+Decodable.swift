// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEventBusesOutputResponseBody: Swift.Equatable {
    let eventBuses: [EventBridgeClientTypes.EventBus]?
    let nextToken: Swift.String?
}

extension ListEventBusesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventBuses = "EventBuses"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventBusesContainer = try containerValues.decodeIfPresent([EventBridgeClientTypes.EventBus?].self, forKey: .eventBuses)
        var eventBusesDecoded0:[EventBridgeClientTypes.EventBus]? = nil
        if let eventBusesContainer = eventBusesContainer {
            eventBusesDecoded0 = [EventBridgeClientTypes.EventBus]()
            for structure0 in eventBusesContainer {
                if let structure0 = structure0 {
                    eventBusesDecoded0?.append(structure0)
                }
            }
        }
        eventBuses = eventBusesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
