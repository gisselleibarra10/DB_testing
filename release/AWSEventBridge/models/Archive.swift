// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EventBridgeClientTypes {
    /// An Archive object that contains details about an archive.
    public struct Archive: Swift.Equatable {
        /// The name of the archive.
        public var archiveName: Swift.String?
        /// The time stamp for the time that the archive was created.
        public var creationTime: ClientRuntime.Date?
        /// The number of events in the archive.
        public var eventCount: Swift.Int
        /// The ARN of the event bus associated with the archive. Only events from this event bus are sent to the archive.
        public var eventSourceArn: Swift.String?
        /// The number of days to retain events in the archive before they are deleted.
        public var retentionDays: Swift.Int?
        /// The size of the archive, in bytes.
        public var sizeBytes: Swift.Int
        /// The current state of the archive.
        public var state: EventBridgeClientTypes.ArchiveState?
        /// A description for the reason that the archive is in the current state.
        public var stateReason: Swift.String?

        public init (
            archiveName: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            eventCount: Swift.Int = 0,
            eventSourceArn: Swift.String? = nil,
            retentionDays: Swift.Int? = nil,
            sizeBytes: Swift.Int = 0,
            state: EventBridgeClientTypes.ArchiveState? = nil,
            stateReason: Swift.String? = nil
        )
        {
            self.archiveName = archiveName
            self.creationTime = creationTime
            self.eventCount = eventCount
            self.eventSourceArn = eventSourceArn
            self.retentionDays = retentionDays
            self.sizeBytes = sizeBytes
            self.state = state
            self.stateReason = stateReason
        }
    }

}
