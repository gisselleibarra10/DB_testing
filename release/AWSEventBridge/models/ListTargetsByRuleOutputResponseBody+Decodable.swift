// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTargetsByRuleOutputResponseBody: Swift.Equatable {
    let targets: [EventBridgeClientTypes.Target]?
    let nextToken: Swift.String?
}

extension ListTargetsByRuleOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case targets = "Targets"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetsContainer = try containerValues.decodeIfPresent([EventBridgeClientTypes.Target?].self, forKey: .targets)
        var targetsDecoded0:[EventBridgeClientTypes.Target]? = nil
        if let targetsContainer = targetsContainer {
            targetsDecoded0 = [EventBridgeClientTypes.Target]()
            for structure0 in targetsContainer {
                if let structure0 = structure0 {
                    targetsDecoded0?.append(structure0)
                }
            }
        }
        targets = targetsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
