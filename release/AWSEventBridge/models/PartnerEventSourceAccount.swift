// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EventBridgeClientTypes {
    /// The Amazon Web Services account that a partner event source has been offered to.
    public struct PartnerEventSourceAccount: Swift.Equatable {
        /// The Amazon Web Services account ID that the partner event source was offered to.
        public var account: Swift.String?
        /// The date and time the event source was created.
        public var creationTime: ClientRuntime.Date?
        /// The date and time that the event source will expire, if the Amazon Web Services account doesn't create a matching event bus for it.
        public var expirationTime: ClientRuntime.Date?
        /// The state of the event source. If it is ACTIVE, you have already created a matching event bus for this event source, and that event bus is active. If it is PENDING, either you haven't yet created a matching event bus, or that event bus is deactivated. If it is DELETED, you have created a matching event bus, but the event source has since been deleted.
        public var state: EventBridgeClientTypes.EventSourceState?

        public init (
            account: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            expirationTime: ClientRuntime.Date? = nil,
            state: EventBridgeClientTypes.EventSourceState? = nil
        )
        {
            self.account = account
            self.creationTime = creationTime
            self.expirationTime = expirationTime
            self.state = state
        }
    }

}
