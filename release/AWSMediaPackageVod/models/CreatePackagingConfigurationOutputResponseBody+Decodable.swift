// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreatePackagingConfigurationOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let cmafPackage: MediaPackageVodClientTypes.CmafPackage?
    let dashPackage: MediaPackageVodClientTypes.DashPackage?
    let hlsPackage: MediaPackageVodClientTypes.HlsPackage?
    let id: Swift.String?
    let mssPackage: MediaPackageVodClientTypes.MssPackage?
    let packagingGroupId: Swift.String?
    let tags: [Swift.String:Swift.String]?
}

extension CreatePackagingConfigurationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "arn"
        case cmafPackage = "cmafPackage"
        case dashPackage = "dashPackage"
        case hlsPackage = "hlsPackage"
        case id = "id"
        case mssPackage = "mssPackage"
        case packagingGroupId = "packagingGroupId"
        case tags = "tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let cmafPackageDecoded = try containerValues.decodeIfPresent(MediaPackageVodClientTypes.CmafPackage.self, forKey: .cmafPackage)
        cmafPackage = cmafPackageDecoded
        let dashPackageDecoded = try containerValues.decodeIfPresent(MediaPackageVodClientTypes.DashPackage.self, forKey: .dashPackage)
        dashPackage = dashPackageDecoded
        let hlsPackageDecoded = try containerValues.decodeIfPresent(MediaPackageVodClientTypes.HlsPackage.self, forKey: .hlsPackage)
        hlsPackage = hlsPackageDecoded
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let mssPackageDecoded = try containerValues.decodeIfPresent(MediaPackageVodClientTypes.MssPackage.self, forKey: .mssPackage)
        mssPackage = mssPackageDecoded
        let packagingGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .packagingGroupId)
        packagingGroupId = packagingGroupIdDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, __string0) in tagsContainer {
                if let __string0 = __string0 {
                    tagsDecoded0?[key0] = __string0
                }
            }
        }
        tags = tagsDecoded0
    }
}
