// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListActionTypesOutputResponseBody: Swift.Equatable {
    let actionTypes: [CodePipelineClientTypes.ActionType]?
    let nextToken: Swift.String?
}

extension ListActionTypesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionTypes
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionTypesContainer = try containerValues.decodeIfPresent([CodePipelineClientTypes.ActionType?].self, forKey: .actionTypes)
        var actionTypesDecoded0:[CodePipelineClientTypes.ActionType]? = nil
        if let actionTypesContainer = actionTypesContainer {
            actionTypesDecoded0 = [CodePipelineClientTypes.ActionType]()
            for structure0 in actionTypesContainer {
                if let structure0 = structure0 {
                    actionTypesDecoded0?.append(structure0)
                }
            }
        }
        actionTypes = actionTypesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
