// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutApprovalResultInputBody: Swift.Equatable {
    let pipelineName: Swift.String?
    let stageName: Swift.String?
    let actionName: Swift.String?
    let result: CodePipelineClientTypes.ApprovalResult?
    let token: Swift.String?
}

extension PutApprovalResultInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionName
        case pipelineName
        case result
        case stageName
        case token
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineName)
        pipelineName = pipelineNameDecoded
        let stageNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stageName)
        stageName = stageNameDecoded
        let actionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionName)
        actionName = actionNameDecoded
        let resultDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.ApprovalResult.self, forKey: .result)
        result = resultDecoded
        let tokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .token)
        token = tokenDecoded
    }
}
