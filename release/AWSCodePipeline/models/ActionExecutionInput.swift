// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodePipelineClientTypes {
    /// Input information used for an action execution.
    public struct ActionExecutionInput: Swift.Equatable {
        /// Represents information about an action type.
        public var actionTypeId: CodePipelineClientTypes.ActionTypeId?
        /// Configuration data for an action execution.
        public var configuration: [Swift.String:Swift.String]?
        /// Details of input artifacts of the action that correspond to the action execution.
        public var inputArtifacts: [CodePipelineClientTypes.ArtifactDetail]?
        /// The variable namespace associated with the action. All variables produced as output by this action fall under this namespace.
        public var namespace: Swift.String?
        /// The AWS Region for the action, such as us-east-1.
        public var region: Swift.String?
        /// Configuration data for an action execution with all variable references replaced with their real values for the execution.
        public var resolvedConfiguration: [Swift.String:Swift.String]?
        /// The ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.
        public var roleArn: Swift.String?

        public init (
            actionTypeId: CodePipelineClientTypes.ActionTypeId? = nil,
            configuration: [Swift.String:Swift.String]? = nil,
            inputArtifacts: [CodePipelineClientTypes.ArtifactDetail]? = nil,
            namespace: Swift.String? = nil,
            region: Swift.String? = nil,
            resolvedConfiguration: [Swift.String:Swift.String]? = nil,
            roleArn: Swift.String? = nil
        )
        {
            self.actionTypeId = actionTypeId
            self.configuration = configuration
            self.inputArtifacts = inputArtifacts
            self.namespace = namespace
            self.region = region
            self.resolvedConfiguration = resolvedConfiguration
            self.roleArn = roleArn
        }
    }

}
