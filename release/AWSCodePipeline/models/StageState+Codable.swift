// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodePipelineClientTypes.StageState: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionStates
        case inboundExecution
        case inboundTransitionState
        case latestExecution
        case stageName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionStates = actionStates {
            var actionStatesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .actionStates)
            for actionstatelist0 in actionStates {
                try actionStatesContainer.encode(actionstatelist0)
            }
        }
        if let inboundExecution = self.inboundExecution {
            try encodeContainer.encode(inboundExecution, forKey: .inboundExecution)
        }
        if let inboundTransitionState = self.inboundTransitionState {
            try encodeContainer.encode(inboundTransitionState, forKey: .inboundTransitionState)
        }
        if let latestExecution = self.latestExecution {
            try encodeContainer.encode(latestExecution, forKey: .latestExecution)
        }
        if let stageName = self.stageName {
            try encodeContainer.encode(stageName, forKey: .stageName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stageNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stageName)
        stageName = stageNameDecoded
        let inboundExecutionDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.StageExecution.self, forKey: .inboundExecution)
        inboundExecution = inboundExecutionDecoded
        let inboundTransitionStateDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.TransitionState.self, forKey: .inboundTransitionState)
        inboundTransitionState = inboundTransitionStateDecoded
        let actionStatesContainer = try containerValues.decodeIfPresent([CodePipelineClientTypes.ActionState?].self, forKey: .actionStates)
        var actionStatesDecoded0:[CodePipelineClientTypes.ActionState]? = nil
        if let actionStatesContainer = actionStatesContainer {
            actionStatesDecoded0 = [CodePipelineClientTypes.ActionState]()
            for structure0 in actionStatesContainer {
                if let structure0 = structure0 {
                    actionStatesDecoded0?.append(structure0)
                }
            }
        }
        actionStates = actionStatesDecoded0
        let latestExecutionDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.StageExecution.self, forKey: .latestExecution)
        latestExecution = latestExecutionDecoded
    }
}
