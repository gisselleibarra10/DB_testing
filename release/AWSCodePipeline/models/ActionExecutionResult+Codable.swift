// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodePipelineClientTypes.ActionExecutionResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case externalExecutionId
        case externalExecutionSummary
        case externalExecutionUrl
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let externalExecutionId = self.externalExecutionId {
            try encodeContainer.encode(externalExecutionId, forKey: .externalExecutionId)
        }
        if let externalExecutionSummary = self.externalExecutionSummary {
            try encodeContainer.encode(externalExecutionSummary, forKey: .externalExecutionSummary)
        }
        if let externalExecutionUrl = self.externalExecutionUrl {
            try encodeContainer.encode(externalExecutionUrl, forKey: .externalExecutionUrl)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let externalExecutionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .externalExecutionId)
        externalExecutionId = externalExecutionIdDecoded
        let externalExecutionSummaryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .externalExecutionSummary)
        externalExecutionSummary = externalExecutionSummaryDecoded
        let externalExecutionUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .externalExecutionUrl)
        externalExecutionUrl = externalExecutionUrlDecoded
    }
}
