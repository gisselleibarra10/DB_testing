// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodePipelineClientTypes.ActionTypeExecutor: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configuration
        case jobTimeout
        case policyStatementsTemplate
        case type
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configuration = self.configuration {
            try encodeContainer.encode(configuration, forKey: .configuration)
        }
        if let jobTimeout = self.jobTimeout {
            try encodeContainer.encode(jobTimeout, forKey: .jobTimeout)
        }
        if let policyStatementsTemplate = self.policyStatementsTemplate {
            try encodeContainer.encode(policyStatementsTemplate, forKey: .policyStatementsTemplate)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.ExecutorConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
        let typeDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.ExecutorType.self, forKey: .type)
        type = typeDecoded
        let policyStatementsTemplateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyStatementsTemplate)
        policyStatementsTemplate = policyStatementsTemplateDecoded
        let jobTimeoutDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .jobTimeout)
        jobTimeout = jobTimeoutDecoded
    }
}
