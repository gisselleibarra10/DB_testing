// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodePipelineClientTypes {
    /// Represents other information about a job required for a job worker to complete the job.
    public struct JobData: Swift.Equatable {
        /// Represents information about an action configuration.
        public var actionConfiguration: CodePipelineClientTypes.ActionConfiguration?
        /// Represents information about an action type.
        public var actionTypeId: CodePipelineClientTypes.ActionTypeId?
        /// Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the S3 bucket used to store artifacts for the pipeline in AWS CodePipeline.
        public var artifactCredentials: CodePipelineClientTypes.AWSSessionCredentials?
        /// A system-generated token, such as a AWS CodeDeploy deployment ID, required by a job to continue the job asynchronously.
        public var continuationToken: Swift.String?
        /// Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key.
        public var encryptionKey: CodePipelineClientTypes.EncryptionKey?
        /// The artifact supplied to the job.
        public var inputArtifacts: [CodePipelineClientTypes.Artifact]?
        /// The output of the job.
        public var outputArtifacts: [CodePipelineClientTypes.Artifact]?
        /// Represents information about a pipeline to a job worker. Includes pipelineArn and pipelineExecutionId for custom jobs.
        public var pipelineContext: CodePipelineClientTypes.PipelineContext?

        public init (
            actionConfiguration: CodePipelineClientTypes.ActionConfiguration? = nil,
            actionTypeId: CodePipelineClientTypes.ActionTypeId? = nil,
            artifactCredentials: CodePipelineClientTypes.AWSSessionCredentials? = nil,
            continuationToken: Swift.String? = nil,
            encryptionKey: CodePipelineClientTypes.EncryptionKey? = nil,
            inputArtifacts: [CodePipelineClientTypes.Artifact]? = nil,
            outputArtifacts: [CodePipelineClientTypes.Artifact]? = nil,
            pipelineContext: CodePipelineClientTypes.PipelineContext? = nil
        )
        {
            self.actionConfiguration = actionConfiguration
            self.actionTypeId = actionTypeId
            self.artifactCredentials = artifactCredentials
            self.continuationToken = continuationToken
            self.encryptionKey = encryptionKey
            self.inputArtifacts = inputArtifacts
            self.outputArtifacts = outputArtifacts
            self.pipelineContext = pipelineContext
        }
    }

}
