// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodePipelineClientTypes {
    public enum TriggerType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case cloudwatchevent
        case createpipeline
        case pollforsourcechanges
        case putactionrevision
        case startpipelineexecution
        case webhook
        case sdkUnknown(Swift.String)

        public static var allCases: [TriggerType] {
            return [
                .cloudwatchevent,
                .createpipeline,
                .pollforsourcechanges,
                .putactionrevision,
                .startpipelineexecution,
                .webhook,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .cloudwatchevent: return "CloudWatchEvent"
            case .createpipeline: return "CreatePipeline"
            case .pollforsourcechanges: return "PollForSourceChanges"
            case .putactionrevision: return "PutActionRevision"
            case .startpipelineexecution: return "StartPipelineExecution"
            case .webhook: return "Webhook"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = TriggerType(rawValue: rawValue) ?? TriggerType.sdkUnknown(rawValue)
        }
    }
}
