// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelinesOutputResponseBody: Swift.Equatable {
    let pipelines: [CodePipelineClientTypes.PipelineSummary]?
    let nextToken: Swift.String?
}

extension ListPipelinesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case pipelines
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelinesContainer = try containerValues.decodeIfPresent([CodePipelineClientTypes.PipelineSummary?].self, forKey: .pipelines)
        var pipelinesDecoded0:[CodePipelineClientTypes.PipelineSummary]? = nil
        if let pipelinesContainer = pipelinesContainer {
            pipelinesDecoded0 = [CodePipelineClientTypes.PipelineSummary]()
            for structure0 in pipelinesContainer {
                if let structure0 = structure0 {
                    pipelinesDecoded0?.append(structure0)
                }
            }
        }
        pipelines = pipelinesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
