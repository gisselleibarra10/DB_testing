// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutWebhookInputBody: Swift.Equatable {
    let webhook: CodePipelineClientTypes.WebhookDefinition?
    let tags: [CodePipelineClientTypes.Tag]?
}

extension PutWebhookInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case tags
        case webhook
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let webhookDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.WebhookDefinition.self, forKey: .webhook)
        webhook = webhookDecoded
        let tagsContainer = try containerValues.decodeIfPresent([CodePipelineClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[CodePipelineClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [CodePipelineClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
