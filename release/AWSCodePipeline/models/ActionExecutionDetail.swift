// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodePipelineClientTypes {
    /// Returns information about an execution of an action, including the action execution ID, and the name, version, and timing of the action.
    public struct ActionExecutionDetail: Swift.Equatable {
        /// The action execution ID.
        public var actionExecutionId: Swift.String?
        /// The name of the action.
        public var actionName: Swift.String?
        /// Input details for the action execution, such as role ARN, Region, and input artifacts.
        public var input: CodePipelineClientTypes.ActionExecutionInput?
        /// The last update time of the action execution.
        public var lastUpdateTime: ClientRuntime.Date?
        /// Output details for the action execution, such as the action execution result.
        public var output: CodePipelineClientTypes.ActionExecutionOutput?
        /// The pipeline execution ID for the action execution.
        public var pipelineExecutionId: Swift.String?
        /// The version of the pipeline where the action was run.
        public var pipelineVersion: Swift.Int?
        /// The name of the stage that contains the action.
        public var stageName: Swift.String?
        /// The start time of the action execution.
        public var startTime: ClientRuntime.Date?
        /// The status of the action execution. Status categories are InProgress, Succeeded, and Failed.
        public var status: CodePipelineClientTypes.ActionExecutionStatus?

        public init (
            actionExecutionId: Swift.String? = nil,
            actionName: Swift.String? = nil,
            input: CodePipelineClientTypes.ActionExecutionInput? = nil,
            lastUpdateTime: ClientRuntime.Date? = nil,
            output: CodePipelineClientTypes.ActionExecutionOutput? = nil,
            pipelineExecutionId: Swift.String? = nil,
            pipelineVersion: Swift.Int? = nil,
            stageName: Swift.String? = nil,
            startTime: ClientRuntime.Date? = nil,
            status: CodePipelineClientTypes.ActionExecutionStatus? = nil
        )
        {
            self.actionExecutionId = actionExecutionId
            self.actionName = actionName
            self.input = input
            self.lastUpdateTime = lastUpdateTime
            self.output = output
            self.pipelineExecutionId = pipelineExecutionId
            self.pipelineVersion = pipelineVersion
            self.stageName = stageName
            self.startTime = startTime
            self.status = status
        }
    }

}
