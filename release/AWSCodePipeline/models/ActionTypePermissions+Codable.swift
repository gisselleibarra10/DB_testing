// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodePipelineClientTypes.ActionTypePermissions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowedAccounts
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allowedAccounts = allowedAccounts {
            var allowedAccountsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .allowedAccounts)
            for allowedaccounts0 in allowedAccounts {
                try allowedAccountsContainer.encode(allowedaccounts0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allowedAccountsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .allowedAccounts)
        var allowedAccountsDecoded0:[Swift.String]? = nil
        if let allowedAccountsContainer = allowedAccountsContainer {
            allowedAccountsDecoded0 = [Swift.String]()
            for string0 in allowedAccountsContainer {
                if let string0 = string0 {
                    allowedAccountsDecoded0?.append(string0)
                }
            }
        }
        allowedAccounts = allowedAccountsDecoded0
    }
}
