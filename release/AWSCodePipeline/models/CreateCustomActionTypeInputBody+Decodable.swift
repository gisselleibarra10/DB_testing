// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateCustomActionTypeInputBody: Swift.Equatable {
    let category: CodePipelineClientTypes.ActionCategory?
    let provider: Swift.String?
    let version: Swift.String?
    let settings: CodePipelineClientTypes.ActionTypeSettings?
    let configurationProperties: [CodePipelineClientTypes.ActionConfigurationProperty]?
    let inputArtifactDetails: CodePipelineClientTypes.ArtifactDetails?
    let outputArtifactDetails: CodePipelineClientTypes.ArtifactDetails?
    let tags: [CodePipelineClientTypes.Tag]?
}

extension CreateCustomActionTypeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case category
        case configurationProperties
        case inputArtifactDetails
        case outputArtifactDetails
        case provider
        case settings
        case tags
        case version
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let categoryDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.ActionCategory.self, forKey: .category)
        category = categoryDecoded
        let providerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .provider)
        provider = providerDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
        let settingsDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.ActionTypeSettings.self, forKey: .settings)
        settings = settingsDecoded
        let configurationPropertiesContainer = try containerValues.decodeIfPresent([CodePipelineClientTypes.ActionConfigurationProperty?].self, forKey: .configurationProperties)
        var configurationPropertiesDecoded0:[CodePipelineClientTypes.ActionConfigurationProperty]? = nil
        if let configurationPropertiesContainer = configurationPropertiesContainer {
            configurationPropertiesDecoded0 = [CodePipelineClientTypes.ActionConfigurationProperty]()
            for structure0 in configurationPropertiesContainer {
                if let structure0 = structure0 {
                    configurationPropertiesDecoded0?.append(structure0)
                }
            }
        }
        configurationProperties = configurationPropertiesDecoded0
        let inputArtifactDetailsDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.ArtifactDetails.self, forKey: .inputArtifactDetails)
        inputArtifactDetails = inputArtifactDetailsDecoded
        let outputArtifactDetailsDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.ArtifactDetails.self, forKey: .outputArtifactDetails)
        outputArtifactDetails = outputArtifactDetailsDecoded
        let tagsContainer = try containerValues.decodeIfPresent([CodePipelineClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[CodePipelineClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [CodePipelineClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
