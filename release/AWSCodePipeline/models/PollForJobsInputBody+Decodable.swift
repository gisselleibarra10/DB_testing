// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PollForJobsInputBody: Swift.Equatable {
    let actionTypeId: CodePipelineClientTypes.ActionTypeId?
    let maxBatchSize: Swift.Int?
    let queryParam: [Swift.String:Swift.String]?
}

extension PollForJobsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionTypeId
        case maxBatchSize
        case queryParam
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionTypeIdDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.ActionTypeId.self, forKey: .actionTypeId)
        actionTypeId = actionTypeIdDecoded
        let maxBatchSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxBatchSize)
        maxBatchSize = maxBatchSizeDecoded
        let queryParamContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .queryParam)
        var queryParamDecoded0: [Swift.String:Swift.String]? = nil
        if let queryParamContainer = queryParamContainer {
            queryParamDecoded0 = [Swift.String:Swift.String]()
            for (key0, actionconfigurationqueryablevalue0) in queryParamContainer {
                if let actionconfigurationqueryablevalue0 = actionconfigurationqueryablevalue0 {
                    queryParamDecoded0?[key0] = actionconfigurationqueryablevalue0
                }
            }
        }
        queryParam = queryParamDecoded0
    }
}
