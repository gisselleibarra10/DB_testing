// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodePipelineClientTypes {
    /// Represents information about an action declaration.
    public struct ActionDeclaration: Swift.Equatable {
        /// Specifies the action type and the provider of the action.
        /// This member is required.
        public var actionTypeId: CodePipelineClientTypes.ActionTypeId?
        /// The action's configuration. These are key-value pairs that specify input values for an action. For more information, see [Action Structure Requirements in CodePipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements). For the list of configuration properties for the AWS CloudFormation action type in CodePipeline, see [Configuration Properties Reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-action-reference.html) in the AWS CloudFormation User Guide. For template snippets with examples, see [Using Parameter Override Functions with CodePipeline Pipelines](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-parameter-override-functions.html) in the AWS CloudFormation User Guide. The values can be represented in either JSON or YAML format. For example, the JSON configuration item format is as follows: JSON: "Configuration" : { Key : Value },
        public var configuration: [Swift.String:Swift.String]?
        /// The name or ID of the artifact consumed by the action, such as a test or build artifact.
        public var inputArtifacts: [CodePipelineClientTypes.InputArtifact]?
        /// The action declaration's name.
        /// This member is required.
        public var name: Swift.String?
        /// The variable namespace associated with the action. All variables produced as output by this action fall under this namespace.
        public var namespace: Swift.String?
        /// The name or ID of the result of the action declaration, such as a test or build artifact.
        public var outputArtifacts: [CodePipelineClientTypes.OutputArtifact]?
        /// The action declaration's AWS Region, such as us-east-1.
        public var region: Swift.String?
        /// The ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.
        public var roleArn: Swift.String?
        /// The order in which actions are run.
        public var runOrder: Swift.Int?

        public init (
            actionTypeId: CodePipelineClientTypes.ActionTypeId? = nil,
            configuration: [Swift.String:Swift.String]? = nil,
            inputArtifacts: [CodePipelineClientTypes.InputArtifact]? = nil,
            name: Swift.String? = nil,
            namespace: Swift.String? = nil,
            outputArtifacts: [CodePipelineClientTypes.OutputArtifact]? = nil,
            region: Swift.String? = nil,
            roleArn: Swift.String? = nil,
            runOrder: Swift.Int? = nil
        )
        {
            self.actionTypeId = actionTypeId
            self.configuration = configuration
            self.inputArtifacts = inputArtifacts
            self.name = name
            self.namespace = namespace
            self.outputArtifacts = outputArtifacts
            self.region = region
            self.roleArn = roleArn
            self.runOrder = runOrder
        }
    }

}
