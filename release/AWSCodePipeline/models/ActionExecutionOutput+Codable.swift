// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodePipelineClientTypes.ActionExecutionOutput: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case executionResult
        case outputArtifacts
        case outputVariables
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let executionResult = self.executionResult {
            try encodeContainer.encode(executionResult, forKey: .executionResult)
        }
        if let outputArtifacts = outputArtifacts {
            var outputArtifactsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .outputArtifacts)
            for artifactdetaillist0 in outputArtifacts {
                try outputArtifactsContainer.encode(artifactdetaillist0)
            }
        }
        if let outputVariables = outputVariables {
            var outputVariablesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .outputVariables)
            for (dictKey0, outputvariablesmap0) in outputVariables {
                try outputVariablesContainer.encode(outputvariablesmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outputArtifactsContainer = try containerValues.decodeIfPresent([CodePipelineClientTypes.ArtifactDetail?].self, forKey: .outputArtifacts)
        var outputArtifactsDecoded0:[CodePipelineClientTypes.ArtifactDetail]? = nil
        if let outputArtifactsContainer = outputArtifactsContainer {
            outputArtifactsDecoded0 = [CodePipelineClientTypes.ArtifactDetail]()
            for structure0 in outputArtifactsContainer {
                if let structure0 = structure0 {
                    outputArtifactsDecoded0?.append(structure0)
                }
            }
        }
        outputArtifacts = outputArtifactsDecoded0
        let executionResultDecoded = try containerValues.decodeIfPresent(CodePipelineClientTypes.ActionExecutionResult.self, forKey: .executionResult)
        executionResult = executionResultDecoded
        let outputVariablesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .outputVariables)
        var outputVariablesDecoded0: [Swift.String:Swift.String]? = nil
        if let outputVariablesContainer = outputVariablesContainer {
            outputVariablesDecoded0 = [Swift.String:Swift.String]()
            for (key0, outputvariablesvalue0) in outputVariablesContainer {
                if let outputvariablesvalue0 = outputvariablesvalue0 {
                    outputVariablesDecoded0?[key0] = outputvariablesvalue0
                }
            }
        }
        outputVariables = outputVariablesDecoded0
    }
}
