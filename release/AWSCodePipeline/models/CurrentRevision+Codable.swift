// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodePipelineClientTypes.CurrentRevision: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case changeIdentifier
        case created
        case revision
        case revisionSummary
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let changeIdentifier = self.changeIdentifier {
            try encodeContainer.encode(changeIdentifier, forKey: .changeIdentifier)
        }
        if let created = self.created {
            try encodeContainer.encode(created.timeIntervalSince1970, forKey: .created)
        }
        if let revision = self.revision {
            try encodeContainer.encode(revision, forKey: .revision)
        }
        if let revisionSummary = self.revisionSummary {
            try encodeContainer.encode(revisionSummary, forKey: .revisionSummary)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let revisionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .revision)
        revision = revisionDecoded
        let changeIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .changeIdentifier)
        changeIdentifier = changeIdentifierDecoded
        let createdDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .created)
        created = createdDecoded
        let revisionSummaryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .revisionSummary)
        revisionSummary = revisionSummaryDecoded
    }
}
