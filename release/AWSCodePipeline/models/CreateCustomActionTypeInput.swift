// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input of a CreateCustomActionType operation.
public struct CreateCustomActionTypeInput: Swift.Equatable {
    /// The category of the custom action, such as a build action or a test action.
    /// This member is required.
    public var category: CodePipelineClientTypes.ActionCategory?
    /// The configuration properties for the custom action. You can refer to a name in the configuration properties of the custom action within the URL templates by following the format of {Config:name}, as long as the configuration property is both required and not secret. For more information, see [Create a Custom Action for a Pipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html).
    public var configurationProperties: [CodePipelineClientTypes.ActionConfigurationProperty]?
    /// The details of the input artifact for the action, such as its commit ID.
    /// This member is required.
    public var inputArtifactDetails: CodePipelineClientTypes.ArtifactDetails?
    /// The details of the output artifact of the action, such as its commit ID.
    /// This member is required.
    public var outputArtifactDetails: CodePipelineClientTypes.ArtifactDetails?
    /// The provider of the service used in the custom action, such as AWS CodeDeploy.
    /// This member is required.
    public var provider: Swift.String?
    /// URLs that provide users information about this custom action.
    public var settings: CodePipelineClientTypes.ActionTypeSettings?
    /// The tags for the custom action.
    public var tags: [CodePipelineClientTypes.Tag]?
    /// The version identifier of the custom action.
    /// This member is required.
    public var version: Swift.String?

    public init (
        category: CodePipelineClientTypes.ActionCategory? = nil,
        configurationProperties: [CodePipelineClientTypes.ActionConfigurationProperty]? = nil,
        inputArtifactDetails: CodePipelineClientTypes.ArtifactDetails? = nil,
        outputArtifactDetails: CodePipelineClientTypes.ArtifactDetails? = nil,
        provider: Swift.String? = nil,
        settings: CodePipelineClientTypes.ActionTypeSettings? = nil,
        tags: [CodePipelineClientTypes.Tag]? = nil,
        version: Swift.String? = nil
    )
    {
        self.category = category
        self.configurationProperties = configurationProperties
        self.inputArtifactDetails = inputArtifactDetails
        self.outputArtifactDetails = outputArtifactDetails
        self.provider = provider
        self.settings = settings
        self.tags = tags
        self.version = version
    }
}
