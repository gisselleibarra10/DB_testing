// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodePipelineClientTypes {
    /// Represents information about an action type.
    public struct ActionTypeId: Swift.Equatable {
        /// A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.
        ///
        /// * Source
        ///
        /// * Build
        ///
        /// * Test
        ///
        /// * Deploy
        ///
        /// * Invoke
        ///
        /// * Approval
        /// This member is required.
        public var category: CodePipelineClientTypes.ActionCategory?
        /// The creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS, ThirdParty, and Custom. For more information, see [Valid Action Types and Providers in CodePipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers).
        /// This member is required.
        public var owner: CodePipelineClientTypes.ActionOwner?
        /// The provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see [Valid Action Types and Providers in CodePipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers).
        /// This member is required.
        public var provider: Swift.String?
        /// A string that describes the action version.
        /// This member is required.
        public var version: Swift.String?

        public init (
            category: CodePipelineClientTypes.ActionCategory? = nil,
            owner: CodePipelineClientTypes.ActionOwner? = nil,
            provider: Swift.String? = nil,
            version: Swift.String? = nil
        )
        {
            self.category = category
            self.owner = owner
            self.provider = provider
            self.version = version
        }
    }

}
