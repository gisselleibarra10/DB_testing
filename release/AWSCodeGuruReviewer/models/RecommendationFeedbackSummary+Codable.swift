// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeGuruReviewerClientTypes.RecommendationFeedbackSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case reactions = "Reactions"
        case recommendationId = "RecommendationId"
        case userId = "UserId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let reactions = reactions {
            var reactionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .reactions)
            for reactions0 in reactions {
                try reactionsContainer.encode(reactions0.rawValue)
            }
        }
        if let recommendationId = self.recommendationId {
            try encodeContainer.encode(recommendationId, forKey: .recommendationId)
        }
        if let userId = self.userId {
            try encodeContainer.encode(userId, forKey: .userId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recommendationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recommendationId)
        recommendationId = recommendationIdDecoded
        let reactionsContainer = try containerValues.decodeIfPresent([CodeGuruReviewerClientTypes.Reaction?].self, forKey: .reactions)
        var reactionsDecoded0:[CodeGuruReviewerClientTypes.Reaction]? = nil
        if let reactionsContainer = reactionsContainer {
            reactionsDecoded0 = [CodeGuruReviewerClientTypes.Reaction]()
            for string0 in reactionsContainer {
                if let string0 = string0 {
                    reactionsDecoded0?.append(string0)
                }
            }
        }
        reactions = reactionsDecoded0
        let userIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userId)
        userId = userIdDecoded
    }
}
