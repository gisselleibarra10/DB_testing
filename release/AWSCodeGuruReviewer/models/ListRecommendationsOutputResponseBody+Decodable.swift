// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecommendationsOutputResponseBody: Swift.Equatable {
    let recommendationSummaries: [CodeGuruReviewerClientTypes.RecommendationSummary]?
    let nextToken: Swift.String?
}

extension ListRecommendationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case recommendationSummaries = "RecommendationSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recommendationSummariesContainer = try containerValues.decodeIfPresent([CodeGuruReviewerClientTypes.RecommendationSummary?].self, forKey: .recommendationSummaries)
        var recommendationSummariesDecoded0:[CodeGuruReviewerClientTypes.RecommendationSummary]? = nil
        if let recommendationSummariesContainer = recommendationSummariesContainer {
            recommendationSummariesDecoded0 = [CodeGuruReviewerClientTypes.RecommendationSummary]()
            for structure0 in recommendationSummariesContainer {
                if let structure0 = structure0 {
                    recommendationSummariesDecoded0?.append(structure0)
                }
            }
        }
        recommendationSummaries = recommendationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
