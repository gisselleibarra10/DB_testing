// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCodeReviewsOutputResponseBody: Swift.Equatable {
    let codeReviewSummaries: [CodeGuruReviewerClientTypes.CodeReviewSummary]?
    let nextToken: Swift.String?
}

extension ListCodeReviewsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case codeReviewSummaries = "CodeReviewSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeReviewSummariesContainer = try containerValues.decodeIfPresent([CodeGuruReviewerClientTypes.CodeReviewSummary?].self, forKey: .codeReviewSummaries)
        var codeReviewSummariesDecoded0:[CodeGuruReviewerClientTypes.CodeReviewSummary]? = nil
        if let codeReviewSummariesContainer = codeReviewSummariesContainer {
            codeReviewSummariesDecoded0 = [CodeGuruReviewerClientTypes.CodeReviewSummary]()
            for structure0 in codeReviewSummariesContainer {
                if let structure0 = structure0 {
                    codeReviewSummariesDecoded0?.append(structure0)
                }
            }
        }
        codeReviewSummaries = codeReviewSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
