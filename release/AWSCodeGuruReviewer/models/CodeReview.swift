// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeGuruReviewerClientTypes {
    /// Information about a code review. A code review belongs to the associated repository that contains the reviewed code.
    public struct CodeReview: Swift.Equatable {
        /// The types of analysis performed during a repository analysis or a pull request review. You can specify either Security, CodeQuality, or both.
        public var analysisTypes: [CodeGuruReviewerClientTypes.AnalysisType]?
        /// The Amazon Resource Name (ARN) of the [RepositoryAssociation](https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html) that contains the reviewed source code. You can retrieve associated repository ARNs by calling [ListRepositoryAssociations](https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html).
        public var associationArn: Swift.String?
        /// The Amazon Resource Name (ARN) of the [CodeReview](https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html) object.
        public var codeReviewArn: Swift.String?
        /// The state of the aws-codeguru-reviewer.yml configuration file that allows the configuration of the CodeGuru Reviewer analysis. The file either exists, doesn't exist, or exists with errors at the root directory of your repository.
        public var configFileState: CodeGuruReviewerClientTypes.ConfigFileState?
        /// The time, in milliseconds since the epoch, when the code review was created.
        public var createdTimeStamp: ClientRuntime.Date?
        /// The time, in milliseconds since the epoch, when the code review was last updated.
        public var lastUpdatedTimeStamp: ClientRuntime.Date?
        /// The statistics from the code review.
        public var metrics: CodeGuruReviewerClientTypes.Metrics?
        /// The name of the code review.
        public var name: Swift.String?
        /// The owner of the repository. For an Amazon Web Services CodeCommit repository, this is the Amazon Web Services account ID of the account that owns the repository. For a GitHub, GitHub Enterprise Server, or Bitbucket repository, this is the username for the account that owns the repository. For an S3 repository, it can be the username or Amazon Web Services account ID.
        public var owner: Swift.String?
        /// The type of repository that contains the reviewed code (for example, GitHub or Bitbucket).
        public var providerType: CodeGuruReviewerClientTypes.ProviderType?
        /// The pull request ID for the code review.
        public var pullRequestId: Swift.String?
        /// The name of the repository.
        public var repositoryName: Swift.String?
        /// The type of the source code for the code review.
        public var sourceCodeType: CodeGuruReviewerClientTypes.SourceCodeType?
        /// The valid code review states are:
        ///
        /// * Completed: The code review is complete.
        ///
        /// * Pending: The code review started and has not completed or failed.
        ///
        /// * Failed: The code review failed.
        ///
        /// * Deleting: The code review is being deleted.
        public var state: CodeGuruReviewerClientTypes.JobState?
        /// The reason for the state of the code review.
        public var stateReason: Swift.String?
        /// The type of code review.
        public var type: CodeGuruReviewerClientTypes.ModelType?

        public init (
            analysisTypes: [CodeGuruReviewerClientTypes.AnalysisType]? = nil,
            associationArn: Swift.String? = nil,
            codeReviewArn: Swift.String? = nil,
            configFileState: CodeGuruReviewerClientTypes.ConfigFileState? = nil,
            createdTimeStamp: ClientRuntime.Date? = nil,
            lastUpdatedTimeStamp: ClientRuntime.Date? = nil,
            metrics: CodeGuruReviewerClientTypes.Metrics? = nil,
            name: Swift.String? = nil,
            owner: Swift.String? = nil,
            providerType: CodeGuruReviewerClientTypes.ProviderType? = nil,
            pullRequestId: Swift.String? = nil,
            repositoryName: Swift.String? = nil,
            sourceCodeType: CodeGuruReviewerClientTypes.SourceCodeType? = nil,
            state: CodeGuruReviewerClientTypes.JobState? = nil,
            stateReason: Swift.String? = nil,
            type: CodeGuruReviewerClientTypes.ModelType? = nil
        )
        {
            self.analysisTypes = analysisTypes
            self.associationArn = associationArn
            self.codeReviewArn = codeReviewArn
            self.configFileState = configFileState
            self.createdTimeStamp = createdTimeStamp
            self.lastUpdatedTimeStamp = lastUpdatedTimeStamp
            self.metrics = metrics
            self.name = name
            self.owner = owner
            self.providerType = providerType
            self.pullRequestId = pullRequestId
            self.repositoryName = repositoryName
            self.sourceCodeType = sourceCodeType
            self.state = state
            self.stateReason = stateReason
            self.type = type
        }
    }

}
