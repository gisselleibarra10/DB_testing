// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutRecommendationFeedbackInputBody: Swift.Equatable {
    let codeReviewArn: Swift.String?
    let recommendationId: Swift.String?
    let reactions: [CodeGuruReviewerClientTypes.Reaction]?
}

extension PutRecommendationFeedbackInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case codeReviewArn = "CodeReviewArn"
        case reactions = "Reactions"
        case recommendationId = "RecommendationId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeReviewArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .codeReviewArn)
        codeReviewArn = codeReviewArnDecoded
        let recommendationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recommendationId)
        recommendationId = recommendationIdDecoded
        let reactionsContainer = try containerValues.decodeIfPresent([CodeGuruReviewerClientTypes.Reaction?].self, forKey: .reactions)
        var reactionsDecoded0:[CodeGuruReviewerClientTypes.Reaction]? = nil
        if let reactionsContainer = reactionsContainer {
            reactionsDecoded0 = [CodeGuruReviewerClientTypes.Reaction]()
            for string0 in reactionsContainer {
                if let string0 = string0 {
                    reactionsDecoded0?.append(string0)
                }
            }
        }
        reactions = reactionsDecoded0
    }
}
