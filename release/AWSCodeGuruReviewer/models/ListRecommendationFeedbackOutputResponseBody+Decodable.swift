// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecommendationFeedbackOutputResponseBody: Swift.Equatable {
    let recommendationFeedbackSummaries: [CodeGuruReviewerClientTypes.RecommendationFeedbackSummary]?
    let nextToken: Swift.String?
}

extension ListRecommendationFeedbackOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case recommendationFeedbackSummaries = "RecommendationFeedbackSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recommendationFeedbackSummariesContainer = try containerValues.decodeIfPresent([CodeGuruReviewerClientTypes.RecommendationFeedbackSummary?].self, forKey: .recommendationFeedbackSummaries)
        var recommendationFeedbackSummariesDecoded0:[CodeGuruReviewerClientTypes.RecommendationFeedbackSummary]? = nil
        if let recommendationFeedbackSummariesContainer = recommendationFeedbackSummariesContainer {
            recommendationFeedbackSummariesDecoded0 = [CodeGuruReviewerClientTypes.RecommendationFeedbackSummary]()
            for structure0 in recommendationFeedbackSummariesContainer {
                if let structure0 = structure0 {
                    recommendationFeedbackSummariesDecoded0?.append(structure0)
                }
            }
        }
        recommendationFeedbackSummaries = recommendationFeedbackSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
