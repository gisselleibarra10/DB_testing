// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeGuruReviewerClientTypes.Repository: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bitbucket = "Bitbucket"
        case codeCommit = "CodeCommit"
        case gitHubEnterpriseServer = "GitHubEnterpriseServer"
        case s3Bucket = "S3Bucket"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bitbucket = self.bitbucket {
            try encodeContainer.encode(bitbucket, forKey: .bitbucket)
        }
        if let codeCommit = self.codeCommit {
            try encodeContainer.encode(codeCommit, forKey: .codeCommit)
        }
        if let gitHubEnterpriseServer = self.gitHubEnterpriseServer {
            try encodeContainer.encode(gitHubEnterpriseServer, forKey: .gitHubEnterpriseServer)
        }
        if let s3Bucket = self.s3Bucket {
            try encodeContainer.encode(s3Bucket, forKey: .s3Bucket)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeCommitDecoded = try containerValues.decodeIfPresent(CodeGuruReviewerClientTypes.CodeCommitRepository.self, forKey: .codeCommit)
        codeCommit = codeCommitDecoded
        let bitbucketDecoded = try containerValues.decodeIfPresent(CodeGuruReviewerClientTypes.ThirdPartySourceRepository.self, forKey: .bitbucket)
        bitbucket = bitbucketDecoded
        let gitHubEnterpriseServerDecoded = try containerValues.decodeIfPresent(CodeGuruReviewerClientTypes.ThirdPartySourceRepository.self, forKey: .gitHubEnterpriseServer)
        gitHubEnterpriseServer = gitHubEnterpriseServerDecoded
        let s3BucketDecoded = try containerValues.decodeIfPresent(CodeGuruReviewerClientTypes.S3Repository.self, forKey: .s3Bucket)
        s3Bucket = s3BucketDecoded
    }
}
