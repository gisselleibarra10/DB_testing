// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRepositoryAssociationsOutputResponseBody: Swift.Equatable {
    let repositoryAssociationSummaries: [CodeGuruReviewerClientTypes.RepositoryAssociationSummary]?
    let nextToken: Swift.String?
}

extension ListRepositoryAssociationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case repositoryAssociationSummaries = "RepositoryAssociationSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryAssociationSummariesContainer = try containerValues.decodeIfPresent([CodeGuruReviewerClientTypes.RepositoryAssociationSummary?].self, forKey: .repositoryAssociationSummaries)
        var repositoryAssociationSummariesDecoded0:[CodeGuruReviewerClientTypes.RepositoryAssociationSummary]? = nil
        if let repositoryAssociationSummariesContainer = repositoryAssociationSummariesContainer {
            repositoryAssociationSummariesDecoded0 = [CodeGuruReviewerClientTypes.RepositoryAssociationSummary]()
            for structure0 in repositoryAssociationSummariesContainer {
                if let structure0 = structure0 {
                    repositoryAssociationSummariesDecoded0?.append(structure0)
                }
            }
        }
        repositoryAssociationSummaries = repositoryAssociationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
