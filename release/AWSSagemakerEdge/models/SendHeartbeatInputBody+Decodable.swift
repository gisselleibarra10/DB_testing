// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendHeartbeatInputBody: Swift.Equatable {
    let agentMetrics: [SagemakerEdgeClientTypes.EdgeMetric]?
    let models: [SagemakerEdgeClientTypes.Model]?
    let agentVersion: Swift.String?
    let deviceName: Swift.String?
    let deviceFleetName: Swift.String?
    let deploymentResult: SagemakerEdgeClientTypes.DeploymentResult?
}

extension SendHeartbeatInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case agentMetrics = "AgentMetrics"
        case agentVersion = "AgentVersion"
        case deploymentResult = "DeploymentResult"
        case deviceFleetName = "DeviceFleetName"
        case deviceName = "DeviceName"
        case models = "Models"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let agentMetricsContainer = try containerValues.decodeIfPresent([SagemakerEdgeClientTypes.EdgeMetric?].self, forKey: .agentMetrics)
        var agentMetricsDecoded0:[SagemakerEdgeClientTypes.EdgeMetric]? = nil
        if let agentMetricsContainer = agentMetricsContainer {
            agentMetricsDecoded0 = [SagemakerEdgeClientTypes.EdgeMetric]()
            for structure0 in agentMetricsContainer {
                if let structure0 = structure0 {
                    agentMetricsDecoded0?.append(structure0)
                }
            }
        }
        agentMetrics = agentMetricsDecoded0
        let modelsContainer = try containerValues.decodeIfPresent([SagemakerEdgeClientTypes.Model?].self, forKey: .models)
        var modelsDecoded0:[SagemakerEdgeClientTypes.Model]? = nil
        if let modelsContainer = modelsContainer {
            modelsDecoded0 = [SagemakerEdgeClientTypes.Model]()
            for structure0 in modelsContainer {
                if let structure0 = structure0 {
                    modelsDecoded0?.append(structure0)
                }
            }
        }
        models = modelsDecoded0
        let agentVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .agentVersion)
        agentVersion = agentVersionDecoded
        let deviceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceName)
        deviceName = deviceNameDecoded
        let deviceFleetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceFleetName)
        deviceFleetName = deviceFleetNameDecoded
        let deploymentResultDecoded = try containerValues.decodeIfPresent(SagemakerEdgeClientTypes.DeploymentResult.self, forKey: .deploymentResult)
        deploymentResult = deploymentResultDecoded
    }
}
