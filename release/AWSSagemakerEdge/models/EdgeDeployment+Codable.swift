// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SagemakerEdgeClientTypes.EdgeDeployment: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case definitions = "Definitions"
        case deploymentName = "DeploymentName"
        case failureHandlingPolicy = "FailureHandlingPolicy"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let definitions = definitions {
            var definitionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .definitions)
            for definitions0 in definitions {
                try definitionsContainer.encode(definitions0)
            }
        }
        if let deploymentName = self.deploymentName {
            try encodeContainer.encode(deploymentName, forKey: .deploymentName)
        }
        if let failureHandlingPolicy = self.failureHandlingPolicy {
            try encodeContainer.encode(failureHandlingPolicy.rawValue, forKey: .failureHandlingPolicy)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deploymentName)
        deploymentName = deploymentNameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(SagemakerEdgeClientTypes.DeploymentType.self, forKey: .type)
        type = typeDecoded
        let failureHandlingPolicyDecoded = try containerValues.decodeIfPresent(SagemakerEdgeClientTypes.FailureHandlingPolicy.self, forKey: .failureHandlingPolicy)
        failureHandlingPolicy = failureHandlingPolicyDecoded
        let definitionsContainer = try containerValues.decodeIfPresent([SagemakerEdgeClientTypes.Definition?].self, forKey: .definitions)
        var definitionsDecoded0:[SagemakerEdgeClientTypes.Definition]? = nil
        if let definitionsContainer = definitionsContainer {
            definitionsDecoded0 = [SagemakerEdgeClientTypes.Definition]()
            for structure0 in definitionsContainer {
                if let structure0 = structure0 {
                    definitionsDecoded0?.append(structure0)
                }
            }
        }
        definitions = definitionsDecoded0
    }
}
