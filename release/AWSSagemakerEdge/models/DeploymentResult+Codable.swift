// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SagemakerEdgeClientTypes.DeploymentResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deploymentEndTime = "DeploymentEndTime"
        case deploymentModels = "DeploymentModels"
        case deploymentName = "DeploymentName"
        case deploymentStartTime = "DeploymentStartTime"
        case deploymentStatus = "DeploymentStatus"
        case deploymentStatusMessage = "DeploymentStatusMessage"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deploymentEndTime = self.deploymentEndTime {
            try encodeContainer.encode(deploymentEndTime.timeIntervalSince1970, forKey: .deploymentEndTime)
        }
        if let deploymentModels = deploymentModels {
            var deploymentModelsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .deploymentModels)
            for deploymentmodels0 in deploymentModels {
                try deploymentModelsContainer.encode(deploymentmodels0)
            }
        }
        if let deploymentName = self.deploymentName {
            try encodeContainer.encode(deploymentName, forKey: .deploymentName)
        }
        if let deploymentStartTime = self.deploymentStartTime {
            try encodeContainer.encode(deploymentStartTime.timeIntervalSince1970, forKey: .deploymentStartTime)
        }
        if let deploymentStatus = self.deploymentStatus {
            try encodeContainer.encode(deploymentStatus, forKey: .deploymentStatus)
        }
        if let deploymentStatusMessage = self.deploymentStatusMessage {
            try encodeContainer.encode(deploymentStatusMessage, forKey: .deploymentStatusMessage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deploymentName)
        deploymentName = deploymentNameDecoded
        let deploymentStatusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deploymentStatus)
        deploymentStatus = deploymentStatusDecoded
        let deploymentStatusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deploymentStatusMessage)
        deploymentStatusMessage = deploymentStatusMessageDecoded
        let deploymentStartTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .deploymentStartTime)
        deploymentStartTime = deploymentStartTimeDecoded
        let deploymentEndTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .deploymentEndTime)
        deploymentEndTime = deploymentEndTimeDecoded
        let deploymentModelsContainer = try containerValues.decodeIfPresent([SagemakerEdgeClientTypes.DeploymentModel?].self, forKey: .deploymentModels)
        var deploymentModelsDecoded0:[SagemakerEdgeClientTypes.DeploymentModel]? = nil
        if let deploymentModelsContainer = deploymentModelsContainer {
            deploymentModelsDecoded0 = [SagemakerEdgeClientTypes.DeploymentModel]()
            for structure0 in deploymentModelsContainer {
                if let structure0 = structure0 {
                    deploymentModelsDecoded0?.append(structure0)
                }
            }
        }
        deploymentModels = deploymentModelsDecoded0
    }
}
