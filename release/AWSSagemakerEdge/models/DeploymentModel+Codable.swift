// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SagemakerEdgeClientTypes.DeploymentModel: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case desiredState = "DesiredState"
        case modelHandle = "ModelHandle"
        case modelName = "ModelName"
        case modelVersion = "ModelVersion"
        case rollbackFailureReason = "RollbackFailureReason"
        case state = "State"
        case status = "Status"
        case statusReason = "StatusReason"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let desiredState = self.desiredState {
            try encodeContainer.encode(desiredState.rawValue, forKey: .desiredState)
        }
        if let modelHandle = self.modelHandle {
            try encodeContainer.encode(modelHandle, forKey: .modelHandle)
        }
        if let modelName = self.modelName {
            try encodeContainer.encode(modelName, forKey: .modelName)
        }
        if let modelVersion = self.modelVersion {
            try encodeContainer.encode(modelVersion, forKey: .modelVersion)
        }
        if let rollbackFailureReason = self.rollbackFailureReason {
            try encodeContainer.encode(rollbackFailureReason, forKey: .rollbackFailureReason)
        }
        if let state = self.state {
            try encodeContainer.encode(state.rawValue, forKey: .state)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let statusReason = self.statusReason {
            try encodeContainer.encode(statusReason, forKey: .statusReason)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelHandleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelHandle)
        modelHandle = modelHandleDecoded
        let modelNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelName)
        modelName = modelNameDecoded
        let modelVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelVersion)
        modelVersion = modelVersionDecoded
        let desiredStateDecoded = try containerValues.decodeIfPresent(SagemakerEdgeClientTypes.ModelState.self, forKey: .desiredState)
        desiredState = desiredStateDecoded
        let stateDecoded = try containerValues.decodeIfPresent(SagemakerEdgeClientTypes.ModelState.self, forKey: .state)
        state = stateDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SagemakerEdgeClientTypes.DeploymentStatus.self, forKey: .status)
        status = statusDecoded
        let statusReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusReason)
        statusReason = statusReasonDecoded
        let rollbackFailureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rollbackFailureReason)
        rollbackFailureReason = rollbackFailureReasonDecoded
    }
}
