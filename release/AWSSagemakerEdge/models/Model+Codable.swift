// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SagemakerEdgeClientTypes.Model: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case latestInference = "LatestInference"
        case latestSampleTime = "LatestSampleTime"
        case modelMetrics = "ModelMetrics"
        case modelName = "ModelName"
        case modelVersion = "ModelVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let latestInference = self.latestInference {
            try encodeContainer.encode(latestInference.timeIntervalSince1970, forKey: .latestInference)
        }
        if let latestSampleTime = self.latestSampleTime {
            try encodeContainer.encode(latestSampleTime.timeIntervalSince1970, forKey: .latestSampleTime)
        }
        if let modelMetrics = modelMetrics {
            var modelMetricsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .modelMetrics)
            for edgemetrics0 in modelMetrics {
                try modelMetricsContainer.encode(edgemetrics0)
            }
        }
        if let modelName = self.modelName {
            try encodeContainer.encode(modelName, forKey: .modelName)
        }
        if let modelVersion = self.modelVersion {
            try encodeContainer.encode(modelVersion, forKey: .modelVersion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelName)
        modelName = modelNameDecoded
        let modelVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelVersion)
        modelVersion = modelVersionDecoded
        let latestSampleTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .latestSampleTime)
        latestSampleTime = latestSampleTimeDecoded
        let latestInferenceDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .latestInference)
        latestInference = latestInferenceDecoded
        let modelMetricsContainer = try containerValues.decodeIfPresent([SagemakerEdgeClientTypes.EdgeMetric?].self, forKey: .modelMetrics)
        var modelMetricsDecoded0:[SagemakerEdgeClientTypes.EdgeMetric]? = nil
        if let modelMetricsContainer = modelMetricsContainer {
            modelMetricsDecoded0 = [SagemakerEdgeClientTypes.EdgeMetric]()
            for structure0 in modelMetricsContainer {
                if let structure0 = structure0 {
                    modelMetricsDecoded0?.append(structure0)
                }
            }
        }
        modelMetrics = modelMetricsDecoded0
    }
}
