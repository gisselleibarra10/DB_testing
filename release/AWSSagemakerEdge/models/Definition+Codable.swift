// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SagemakerEdgeClientTypes.Definition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case checksum = "Checksum"
        case modelHandle = "ModelHandle"
        case s3Url = "S3Url"
        case state = "State"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let checksum = self.checksum {
            try encodeContainer.encode(checksum, forKey: .checksum)
        }
        if let modelHandle = self.modelHandle {
            try encodeContainer.encode(modelHandle, forKey: .modelHandle)
        }
        if let s3Url = self.s3Url {
            try encodeContainer.encode(s3Url, forKey: .s3Url)
        }
        if let state = self.state {
            try encodeContainer.encode(state.rawValue, forKey: .state)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelHandleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelHandle)
        modelHandle = modelHandleDecoded
        let s3UrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3Url)
        s3Url = s3UrlDecoded
        let checksumDecoded = try containerValues.decodeIfPresent(SagemakerEdgeClientTypes.Checksum.self, forKey: .checksum)
        checksum = checksumDecoded
        let stateDecoded = try containerValues.decodeIfPresent(SagemakerEdgeClientTypes.ModelState.self, forKey: .state)
        state = stateDecoded
    }
}
