// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAttachmentsOutputResponseBody: Swift.Equatable {
    let attachments: [NetworkManagerClientTypes.Attachment]?
    let nextToken: Swift.String?
}

extension ListAttachmentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attachments = "Attachments"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachmentsContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.Attachment?].self, forKey: .attachments)
        var attachmentsDecoded0:[NetworkManagerClientTypes.Attachment]? = nil
        if let attachmentsContainer = attachmentsContainer {
            attachmentsDecoded0 = [NetworkManagerClientTypes.Attachment]()
            for structure0 in attachmentsContainer {
                if let structure0 = structure0 {
                    attachmentsDecoded0?.append(structure0)
                }
            }
        }
        attachments = attachmentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
