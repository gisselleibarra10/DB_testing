// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkManagerClientTypes.ConnectAttachment: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attachment = "Attachment"
        case options = "Options"
        case transportAttachmentId = "TransportAttachmentId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attachment = self.attachment {
            try encodeContainer.encode(attachment, forKey: .attachment)
        }
        if let options = self.options {
            try encodeContainer.encode(options, forKey: .options)
        }
        if let transportAttachmentId = self.transportAttachmentId {
            try encodeContainer.encode(transportAttachmentId, forKey: .transportAttachmentId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachmentDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.Attachment.self, forKey: .attachment)
        attachment = attachmentDecoded
        let transportAttachmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transportAttachmentId)
        transportAttachmentId = transportAttachmentIdDecoded
        let optionsDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.ConnectAttachmentOptions.self, forKey: .options)
        options = optionsDecoded
    }
}
