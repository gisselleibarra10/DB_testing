// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDevicesOutputResponseBody: Swift.Equatable {
    let devices: [NetworkManagerClientTypes.Device]?
    let nextToken: Swift.String?
}

extension GetDevicesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case devices = "Devices"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let devicesContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.Device?].self, forKey: .devices)
        var devicesDecoded0:[NetworkManagerClientTypes.Device]? = nil
        if let devicesContainer = devicesContainer {
            devicesDecoded0 = [NetworkManagerClientTypes.Device]()
            for structure0 in devicesContainer {
                if let structure0 = structure0 {
                    devicesDecoded0?.append(structure0)
                }
            }
        }
        devices = devicesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
