// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetNetworkTelemetryOutputResponseBody: Swift.Equatable {
    let networkTelemetry: [NetworkManagerClientTypes.NetworkTelemetry]?
    let nextToken: Swift.String?
}

extension GetNetworkTelemetryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case networkTelemetry = "NetworkTelemetry"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let networkTelemetryContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.NetworkTelemetry?].self, forKey: .networkTelemetry)
        var networkTelemetryDecoded0:[NetworkManagerClientTypes.NetworkTelemetry]? = nil
        if let networkTelemetryContainer = networkTelemetryContainer {
            networkTelemetryDecoded0 = [NetworkManagerClientTypes.NetworkTelemetry]()
            for structure0 in networkTelemetryContainer {
                if let structure0 = structure0 {
                    networkTelemetryDecoded0?.append(structure0)
                }
            }
        }
        networkTelemetry = networkTelemetryDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
