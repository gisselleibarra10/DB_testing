// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConnectPeersOutputResponseBody: Swift.Equatable {
    let connectPeers: [NetworkManagerClientTypes.ConnectPeerSummary]?
    let nextToken: Swift.String?
}

extension ListConnectPeersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectPeers = "ConnectPeers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectPeersContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.ConnectPeerSummary?].self, forKey: .connectPeers)
        var connectPeersDecoded0:[NetworkManagerClientTypes.ConnectPeerSummary]? = nil
        if let connectPeersContainer = connectPeersContainer {
            connectPeersDecoded0 = [NetworkManagerClientTypes.ConnectPeerSummary]()
            for structure0 in connectPeersContainer {
                if let structure0 = structure0 {
                    connectPeersDecoded0?.append(structure0)
                }
            }
        }
        connectPeers = connectPeersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
