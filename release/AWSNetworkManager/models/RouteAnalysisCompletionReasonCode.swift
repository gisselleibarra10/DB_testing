// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension NetworkManagerClientTypes {
    public enum RouteAnalysisCompletionReasonCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case blackholeRouteForDestinationFound
        case cyclicPathDetected
        case inactiveRouteForDestinationFound
        case maxHopsExceeded
        case noDestinationArnProvided
        case possibleMiddlebox
        case routeNotFound
        case transitGatewayAttachment
        case transitGatewayAttachmentNotFound
        case transitGatewayAttachmentNotInTransitGateway
        case transitGatewayAttachmentStableRouteTableNotFound
        case sdkUnknown(Swift.String)

        public static var allCases: [RouteAnalysisCompletionReasonCode] {
            return [
                .blackholeRouteForDestinationFound,
                .cyclicPathDetected,
                .inactiveRouteForDestinationFound,
                .maxHopsExceeded,
                .noDestinationArnProvided,
                .possibleMiddlebox,
                .routeNotFound,
                .transitGatewayAttachment,
                .transitGatewayAttachmentNotFound,
                .transitGatewayAttachmentNotInTransitGateway,
                .transitGatewayAttachmentStableRouteTableNotFound,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .blackholeRouteForDestinationFound: return "BLACKHOLE_ROUTE_FOR_DESTINATION_FOUND"
            case .cyclicPathDetected: return "CYCLIC_PATH_DETECTED"
            case .inactiveRouteForDestinationFound: return "INACTIVE_ROUTE_FOR_DESTINATION_FOUND"
            case .maxHopsExceeded: return "MAX_HOPS_EXCEEDED"
            case .noDestinationArnProvided: return "NO_DESTINATION_ARN_PROVIDED"
            case .possibleMiddlebox: return "POSSIBLE_MIDDLEBOX"
            case .routeNotFound: return "ROUTE_NOT_FOUND"
            case .transitGatewayAttachment: return "TRANSIT_GATEWAY_ATTACHMENT_ATTACH_ARN_NO_MATCH"
            case .transitGatewayAttachmentNotFound: return "TRANSIT_GATEWAY_ATTACHMENT_NOT_FOUND"
            case .transitGatewayAttachmentNotInTransitGateway: return "TRANSIT_GATEWAY_ATTACHMENT_NOT_IN_TRANSIT_GATEWAY"
            case .transitGatewayAttachmentStableRouteTableNotFound: return "TRANSIT_GATEWAY_ATTACHMENT_STABLE_ROUTE_TABLE_NOT_FOUND"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = RouteAnalysisCompletionReasonCode(rawValue: rawValue) ?? RouteAnalysisCompletionReasonCode.sdkUnknown(rawValue)
        }
    }
}
