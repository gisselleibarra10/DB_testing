// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkManagerClientTypes.TransitGatewayRouteTableAttachment: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attachment = "Attachment"
        case peeringId = "PeeringId"
        case transitGatewayRouteTableArn = "TransitGatewayRouteTableArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attachment = self.attachment {
            try encodeContainer.encode(attachment, forKey: .attachment)
        }
        if let peeringId = self.peeringId {
            try encodeContainer.encode(peeringId, forKey: .peeringId)
        }
        if let transitGatewayRouteTableArn = self.transitGatewayRouteTableArn {
            try encodeContainer.encode(transitGatewayRouteTableArn, forKey: .transitGatewayRouteTableArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachmentDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.Attachment.self, forKey: .attachment)
        attachment = attachmentDecoded
        let peeringIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .peeringId)
        peeringId = peeringIdDecoded
        let transitGatewayRouteTableArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transitGatewayRouteTableArn)
        transitGatewayRouteTableArn = transitGatewayRouteTableArnDecoded
    }
}
