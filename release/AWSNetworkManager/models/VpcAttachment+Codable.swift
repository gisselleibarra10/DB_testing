// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkManagerClientTypes.VpcAttachment: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attachment = "Attachment"
        case options = "Options"
        case subnetArns = "SubnetArns"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attachment = self.attachment {
            try encodeContainer.encode(attachment, forKey: .attachment)
        }
        if let options = self.options {
            try encodeContainer.encode(options, forKey: .options)
        }
        if let subnetArns = subnetArns {
            var subnetArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .subnetArns)
            for subnetarnlist0 in subnetArns {
                try subnetArnsContainer.encode(subnetarnlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachmentDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.Attachment.self, forKey: .attachment)
        attachment = attachmentDecoded
        let subnetArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .subnetArns)
        var subnetArnsDecoded0:[Swift.String]? = nil
        if let subnetArnsContainer = subnetArnsContainer {
            subnetArnsDecoded0 = [Swift.String]()
            for string0 in subnetArnsContainer {
                if let string0 = string0 {
                    subnetArnsDecoded0?.append(string0)
                }
            }
        }
        subnetArns = subnetArnsDecoded0
        let optionsDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.VpcOptions.self, forKey: .options)
        options = optionsDecoded
    }
}
