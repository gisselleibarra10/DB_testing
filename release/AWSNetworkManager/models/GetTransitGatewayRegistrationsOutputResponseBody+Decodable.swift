// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTransitGatewayRegistrationsOutputResponseBody: Swift.Equatable {
    let transitGatewayRegistrations: [NetworkManagerClientTypes.TransitGatewayRegistration]?
    let nextToken: Swift.String?
}

extension GetTransitGatewayRegistrationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case transitGatewayRegistrations = "TransitGatewayRegistrations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transitGatewayRegistrationsContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.TransitGatewayRegistration?].self, forKey: .transitGatewayRegistrations)
        var transitGatewayRegistrationsDecoded0:[NetworkManagerClientTypes.TransitGatewayRegistration]? = nil
        if let transitGatewayRegistrationsContainer = transitGatewayRegistrationsContainer {
            transitGatewayRegistrationsDecoded0 = [NetworkManagerClientTypes.TransitGatewayRegistration]()
            for structure0 in transitGatewayRegistrationsContainer {
                if let structure0 = structure0 {
                    transitGatewayRegistrationsDecoded0?.append(structure0)
                }
            }
        }
        transitGatewayRegistrations = transitGatewayRegistrationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
