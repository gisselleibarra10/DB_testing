// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateConnectAttachmentInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case coreNetworkId = "CoreNetworkId"
        case edgeLocation = "EdgeLocation"
        case options = "Options"
        case tags = "Tags"
        case transportAttachmentId = "TransportAttachmentId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let coreNetworkId = self.coreNetworkId {
            try encodeContainer.encode(coreNetworkId, forKey: .coreNetworkId)
        }
        if let edgeLocation = self.edgeLocation {
            try encodeContainer.encode(edgeLocation, forKey: .edgeLocation)
        }
        if let options = self.options {
            try encodeContainer.encode(options, forKey: .options)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
        if let transportAttachmentId = self.transportAttachmentId {
            try encodeContainer.encode(transportAttachmentId, forKey: .transportAttachmentId)
        }
    }
}
