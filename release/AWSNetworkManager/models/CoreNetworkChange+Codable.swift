// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkManagerClientTypes.CoreNetworkChange: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case action = "Action"
        case identifier = "Identifier"
        case identifierPath = "IdentifierPath"
        case newValues = "NewValues"
        case previousValues = "PreviousValues"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let action = self.action {
            try encodeContainer.encode(action.rawValue, forKey: .action)
        }
        if let identifier = self.identifier {
            try encodeContainer.encode(identifier, forKey: .identifier)
        }
        if let identifierPath = self.identifierPath {
            try encodeContainer.encode(identifierPath, forKey: .identifierPath)
        }
        if let newValues = self.newValues {
            try encodeContainer.encode(newValues, forKey: .newValues)
        }
        if let previousValues = self.previousValues {
            try encodeContainer.encode(previousValues, forKey: .previousValues)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.ChangeType.self, forKey: .type)
        type = typeDecoded
        let actionDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.ChangeAction.self, forKey: .action)
        action = actionDecoded
        let identifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identifier)
        identifier = identifierDecoded
        let previousValuesDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.CoreNetworkChangeValues.self, forKey: .previousValues)
        previousValues = previousValuesDecoded
        let newValuesDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.CoreNetworkChangeValues.self, forKey: .newValues)
        newValues = newValuesDecoded
        let identifierPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identifierPath)
        identifierPath = identifierPathDecoded
    }
}
