// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkManagerClientTypes.ConnectPeerConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bgpConfigurations = "BgpConfigurations"
        case coreNetworkAddress = "CoreNetworkAddress"
        case insideCidrBlocks = "InsideCidrBlocks"
        case peerAddress = "PeerAddress"
        case `protocol` = "Protocol"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bgpConfigurations = bgpConfigurations {
            var bgpConfigurationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .bgpConfigurations)
            for connectpeerbgpconfigurationlist0 in bgpConfigurations {
                try bgpConfigurationsContainer.encode(connectpeerbgpconfigurationlist0)
            }
        }
        if let coreNetworkAddress = self.coreNetworkAddress {
            try encodeContainer.encode(coreNetworkAddress, forKey: .coreNetworkAddress)
        }
        if let insideCidrBlocks = insideCidrBlocks {
            var insideCidrBlocksContainer = encodeContainer.nestedUnkeyedContainer(forKey: .insideCidrBlocks)
            for constrainedstringlist0 in insideCidrBlocks {
                try insideCidrBlocksContainer.encode(constrainedstringlist0)
            }
        }
        if let peerAddress = self.peerAddress {
            try encodeContainer.encode(peerAddress, forKey: .peerAddress)
        }
        if let `protocol` = self.`protocol` {
            try encodeContainer.encode(`protocol`.rawValue, forKey: .`protocol`)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let coreNetworkAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .coreNetworkAddress)
        coreNetworkAddress = coreNetworkAddressDecoded
        let peerAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .peerAddress)
        peerAddress = peerAddressDecoded
        let insideCidrBlocksContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .insideCidrBlocks)
        var insideCidrBlocksDecoded0:[Swift.String]? = nil
        if let insideCidrBlocksContainer = insideCidrBlocksContainer {
            insideCidrBlocksDecoded0 = [Swift.String]()
            for string0 in insideCidrBlocksContainer {
                if let string0 = string0 {
                    insideCidrBlocksDecoded0?.append(string0)
                }
            }
        }
        insideCidrBlocks = insideCidrBlocksDecoded0
        let protocolDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.TunnelProtocol.self, forKey: .protocol)
        `protocol` = protocolDecoded
        let bgpConfigurationsContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.ConnectPeerBgpConfiguration?].self, forKey: .bgpConfigurations)
        var bgpConfigurationsDecoded0:[NetworkManagerClientTypes.ConnectPeerBgpConfiguration]? = nil
        if let bgpConfigurationsContainer = bgpConfigurationsContainer {
            bgpConfigurationsDecoded0 = [NetworkManagerClientTypes.ConnectPeerBgpConfiguration]()
            for structure0 in bgpConfigurationsContainer {
                if let structure0 = structure0 {
                    bgpConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        bgpConfigurations = bgpConfigurationsDecoded0
    }
}
