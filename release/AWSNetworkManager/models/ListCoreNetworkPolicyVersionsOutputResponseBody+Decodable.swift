// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCoreNetworkPolicyVersionsOutputResponseBody: Swift.Equatable {
    let coreNetworkPolicyVersions: [NetworkManagerClientTypes.CoreNetworkPolicyVersion]?
    let nextToken: Swift.String?
}

extension ListCoreNetworkPolicyVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case coreNetworkPolicyVersions = "CoreNetworkPolicyVersions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let coreNetworkPolicyVersionsContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.CoreNetworkPolicyVersion?].self, forKey: .coreNetworkPolicyVersions)
        var coreNetworkPolicyVersionsDecoded0:[NetworkManagerClientTypes.CoreNetworkPolicyVersion]? = nil
        if let coreNetworkPolicyVersionsContainer = coreNetworkPolicyVersionsContainer {
            coreNetworkPolicyVersionsDecoded0 = [NetworkManagerClientTypes.CoreNetworkPolicyVersion]()
            for structure0 in coreNetworkPolicyVersionsContainer {
                if let structure0 = structure0 {
                    coreNetworkPolicyVersionsDecoded0?.append(structure0)
                }
            }
        }
        coreNetworkPolicyVersions = coreNetworkPolicyVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
