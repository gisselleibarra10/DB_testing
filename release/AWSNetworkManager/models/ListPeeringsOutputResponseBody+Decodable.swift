// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPeeringsOutputResponseBody: Swift.Equatable {
    let peerings: [NetworkManagerClientTypes.Peering]?
    let nextToken: Swift.String?
}

extension ListPeeringsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case peerings = "Peerings"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let peeringsContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.Peering?].self, forKey: .peerings)
        var peeringsDecoded0:[NetworkManagerClientTypes.Peering]? = nil
        if let peeringsContainer = peeringsContainer {
            peeringsDecoded0 = [NetworkManagerClientTypes.Peering]()
            for structure0 in peeringsContainer {
                if let structure0 = structure0 {
                    peeringsDecoded0?.append(structure0)
                }
            }
        }
        peerings = peeringsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
