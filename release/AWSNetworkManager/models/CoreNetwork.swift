// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkManagerClientTypes {
    /// Describes a core network.
    public struct CoreNetwork: Swift.Equatable {
        /// The ARN of a core network.
        public var coreNetworkArn: Swift.String?
        /// The ID of a core network.
        public var coreNetworkId: Swift.String?
        /// The timestamp when a core network was created.
        public var createdAt: ClientRuntime.Date?
        /// The description of a core network.
        public var description: Swift.String?
        /// The edges within a core network.
        public var edges: [NetworkManagerClientTypes.CoreNetworkEdge]?
        /// The ID of the global network that your core network is a part of.
        public var globalNetworkId: Swift.String?
        /// The segments within a core network.
        public var segments: [NetworkManagerClientTypes.CoreNetworkSegment]?
        /// The current state of a core network.
        public var state: NetworkManagerClientTypes.CoreNetworkState?
        /// The list of key-value tags associated with a core network.
        public var tags: [NetworkManagerClientTypes.Tag]?

        public init (
            coreNetworkArn: Swift.String? = nil,
            coreNetworkId: Swift.String? = nil,
            createdAt: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            edges: [NetworkManagerClientTypes.CoreNetworkEdge]? = nil,
            globalNetworkId: Swift.String? = nil,
            segments: [NetworkManagerClientTypes.CoreNetworkSegment]? = nil,
            state: NetworkManagerClientTypes.CoreNetworkState? = nil,
            tags: [NetworkManagerClientTypes.Tag]? = nil
        )
        {
            self.coreNetworkArn = coreNetworkArn
            self.coreNetworkId = coreNetworkId
            self.createdAt = createdAt
            self.description = description
            self.edges = edges
            self.globalNetworkId = globalNetworkId
            self.segments = segments
            self.state = state
            self.tags = tags
        }
    }

}
