// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkManagerClientTypes.PathComponent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationCidrBlock = "DestinationCidrBlock"
        case resource = "Resource"
        case sequence = "Sequence"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destinationCidrBlock = self.destinationCidrBlock {
            try encodeContainer.encode(destinationCidrBlock, forKey: .destinationCidrBlock)
        }
        if let resource = self.resource {
            try encodeContainer.encode(resource, forKey: .resource)
        }
        if let sequence = self.sequence {
            try encodeContainer.encode(sequence, forKey: .sequence)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sequenceDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sequence)
        sequence = sequenceDecoded
        let resourceDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.NetworkResourceSummary.self, forKey: .resource)
        resource = resourceDecoded
        let destinationCidrBlockDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationCidrBlock)
        destinationCidrBlock = destinationCidrBlockDecoded
    }
}
