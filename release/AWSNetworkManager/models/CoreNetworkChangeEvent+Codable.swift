// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkManagerClientTypes.CoreNetworkChangeEvent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case action = "Action"
        case eventTime = "EventTime"
        case identifierPath = "IdentifierPath"
        case status = "Status"
        case type = "Type"
        case values = "Values"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let action = self.action {
            try encodeContainer.encode(action.rawValue, forKey: .action)
        }
        if let eventTime = self.eventTime {
            try encodeContainer.encode(eventTime.timeIntervalSince1970, forKey: .eventTime)
        }
        if let identifierPath = self.identifierPath {
            try encodeContainer.encode(identifierPath, forKey: .identifierPath)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
        if let values = self.values {
            try encodeContainer.encode(values, forKey: .values)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.ChangeType.self, forKey: .type)
        type = typeDecoded
        let actionDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.ChangeAction.self, forKey: .action)
        action = actionDecoded
        let identifierPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identifierPath)
        identifierPath = identifierPathDecoded
        let eventTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .eventTime)
        eventTime = eventTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.ChangeStatus.self, forKey: .status)
        status = statusDecoded
        let valuesDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.CoreNetworkChangeEventValues.self, forKey: .values)
        values = valuesDecoded
    }
}
