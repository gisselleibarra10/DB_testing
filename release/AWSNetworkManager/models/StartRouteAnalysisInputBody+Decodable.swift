// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartRouteAnalysisInputBody: Swift.Equatable {
    let source: NetworkManagerClientTypes.RouteAnalysisEndpointOptionsSpecification?
    let destination: NetworkManagerClientTypes.RouteAnalysisEndpointOptionsSpecification?
    let includeReturnPath: Swift.Bool
    let useMiddleboxes: Swift.Bool
}

extension StartRouteAnalysisInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destination = "Destination"
        case includeReturnPath = "IncludeReturnPath"
        case source = "Source"
        case useMiddleboxes = "UseMiddleboxes"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.RouteAnalysisEndpointOptionsSpecification.self, forKey: .source)
        source = sourceDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.RouteAnalysisEndpointOptionsSpecification.self, forKey: .destination)
        destination = destinationDecoded
        let includeReturnPathDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeReturnPath) ?? false
        includeReturnPath = includeReturnPathDecoded
        let useMiddleboxesDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .useMiddleboxes) ?? false
        useMiddleboxes = useMiddleboxesDecoded
    }
}
