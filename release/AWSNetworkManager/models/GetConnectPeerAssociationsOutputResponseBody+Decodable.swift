// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetConnectPeerAssociationsOutputResponseBody: Swift.Equatable {
    let connectPeerAssociations: [NetworkManagerClientTypes.ConnectPeerAssociation]?
    let nextToken: Swift.String?
}

extension GetConnectPeerAssociationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectPeerAssociations = "ConnectPeerAssociations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectPeerAssociationsContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.ConnectPeerAssociation?].self, forKey: .connectPeerAssociations)
        var connectPeerAssociationsDecoded0:[NetworkManagerClientTypes.ConnectPeerAssociation]? = nil
        if let connectPeerAssociationsContainer = connectPeerAssociationsContainer {
            connectPeerAssociationsDecoded0 = [NetworkManagerClientTypes.ConnectPeerAssociation]()
            for structure0 in connectPeerAssociationsContainer {
                if let structure0 = structure0 {
                    connectPeerAssociationsDecoded0?.append(structure0)
                }
            }
        }
        connectPeerAssociations = connectPeerAssociationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
