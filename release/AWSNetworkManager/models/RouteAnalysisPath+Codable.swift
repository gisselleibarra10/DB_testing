// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkManagerClientTypes.RouteAnalysisPath: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case completionStatus = "CompletionStatus"
        case path = "Path"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let completionStatus = self.completionStatus {
            try encodeContainer.encode(completionStatus, forKey: .completionStatus)
        }
        if let path = path {
            var pathContainer = encodeContainer.nestedUnkeyedContainer(forKey: .path)
            for pathcomponentlist0 in path {
                try pathContainer.encode(pathcomponentlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let completionStatusDecoded = try containerValues.decodeIfPresent(NetworkManagerClientTypes.RouteAnalysisCompletion.self, forKey: .completionStatus)
        completionStatus = completionStatusDecoded
        let pathContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.PathComponent?].self, forKey: .path)
        var pathDecoded0:[NetworkManagerClientTypes.PathComponent]? = nil
        if let pathContainer = pathContainer {
            pathDecoded0 = [NetworkManagerClientTypes.PathComponent]()
            for structure0 in pathContainer {
                if let structure0 = structure0 {
                    pathDecoded0?.append(structure0)
                }
            }
        }
        path = pathDecoded0
    }
}
