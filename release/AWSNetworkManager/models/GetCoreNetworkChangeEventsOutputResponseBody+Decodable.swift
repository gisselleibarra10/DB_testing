// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCoreNetworkChangeEventsOutputResponseBody: Swift.Equatable {
    let coreNetworkChangeEvents: [NetworkManagerClientTypes.CoreNetworkChangeEvent]?
    let nextToken: Swift.String?
}

extension GetCoreNetworkChangeEventsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case coreNetworkChangeEvents = "CoreNetworkChangeEvents"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let coreNetworkChangeEventsContainer = try containerValues.decodeIfPresent([NetworkManagerClientTypes.CoreNetworkChangeEvent?].self, forKey: .coreNetworkChangeEvents)
        var coreNetworkChangeEventsDecoded0:[NetworkManagerClientTypes.CoreNetworkChangeEvent]? = nil
        if let coreNetworkChangeEventsContainer = coreNetworkChangeEventsContainer {
            coreNetworkChangeEventsDecoded0 = [NetworkManagerClientTypes.CoreNetworkChangeEvent]()
            for structure0 in coreNetworkChangeEventsContainer {
                if let structure0 = structure0 {
                    coreNetworkChangeEventsDecoded0?.append(structure0)
                }
            }
        }
        coreNetworkChangeEvents = coreNetworkChangeEventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
