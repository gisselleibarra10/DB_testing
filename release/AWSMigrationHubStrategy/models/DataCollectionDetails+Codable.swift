// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MigrationHubStrategyClientTypes.DataCollectionDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case completionTime
        case failed
        case inProgress
        case servers
        case startTime
        case status
        case success
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let completionTime = self.completionTime {
            try encodeContainer.encode(completionTime.timeIntervalSince1970, forKey: .completionTime)
        }
        if let failed = self.failed {
            try encodeContainer.encode(failed, forKey: .failed)
        }
        if let inProgress = self.inProgress {
            try encodeContainer.encode(inProgress, forKey: .inProgress)
        }
        if let servers = self.servers {
            try encodeContainer.encode(servers, forKey: .servers)
        }
        if let startTime = self.startTime {
            try encodeContainer.encode(startTime.timeIntervalSince1970, forKey: .startTime)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let success = self.success {
            try encodeContainer.encode(success, forKey: .success)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(MigrationHubStrategyClientTypes.AssessmentStatus.self, forKey: .status)
        status = statusDecoded
        let serversDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .servers)
        servers = serversDecoded
        let failedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failed)
        failed = failedDecoded
        let successDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .success)
        success = successDecoded
        let inProgressDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .inProgress)
        inProgress = inProgressDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let completionTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .completionTime)
        completionTime = completionTimeDecoded
    }
}
