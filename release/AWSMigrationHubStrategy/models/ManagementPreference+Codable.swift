// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MigrationHubStrategyClientTypes.ManagementPreference: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case awsmanagedresources = "awsManagedResources"
        case nopreference = "noPreference"
        case sdkUnknown
        case selfmanageresources = "selfManageResources"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .awsmanagedresources(awsmanagedresources):
                try container.encode(awsmanagedresources, forKey: .awsmanagedresources)
            case let .nopreference(nopreference):
                try container.encode(nopreference, forKey: .nopreference)
            case let .selfmanageresources(selfmanageresources):
                try container.encode(selfmanageresources, forKey: .selfmanageresources)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let awsmanagedresourcesDecoded = try values.decodeIfPresent(MigrationHubStrategyClientTypes.AwsManagedResources.self, forKey: .awsmanagedresources)
        if let awsmanagedresources = awsmanagedresourcesDecoded {
            self = .awsmanagedresources(awsmanagedresources)
            return
        }
        let selfmanageresourcesDecoded = try values.decodeIfPresent(MigrationHubStrategyClientTypes.SelfManageResources.self, forKey: .selfmanageresources)
        if let selfmanageresources = selfmanageresourcesDecoded {
            self = .selfmanageresources(selfmanageresources)
            return
        }
        let nopreferenceDecoded = try values.decodeIfPresent(MigrationHubStrategyClientTypes.NoManagementPreference.self, forKey: .nopreference)
        if let nopreference = nopreferenceDecoded {
            self = .nopreference(nopreference)
            return
        }
        self = .sdkUnknown("")
    }
}
