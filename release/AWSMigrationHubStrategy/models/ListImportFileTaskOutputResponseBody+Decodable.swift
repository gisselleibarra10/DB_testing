// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImportFileTaskOutputResponseBody: Swift.Equatable {
    let taskInfos: [MigrationHubStrategyClientTypes.ImportFileTaskInformation]?
    let nextToken: Swift.String?
}

extension ListImportFileTaskOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case taskInfos
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskInfosContainer = try containerValues.decodeIfPresent([MigrationHubStrategyClientTypes.ImportFileTaskInformation?].self, forKey: .taskInfos)
        var taskInfosDecoded0:[MigrationHubStrategyClientTypes.ImportFileTaskInformation]? = nil
        if let taskInfosContainer = taskInfosContainer {
            taskInfosDecoded0 = [MigrationHubStrategyClientTypes.ImportFileTaskInformation]()
            for structure0 in taskInfosContainer {
                if let structure0 = structure0 {
                    taskInfosDecoded0?.append(structure0)
                }
            }
        }
        taskInfos = taskInfosDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
