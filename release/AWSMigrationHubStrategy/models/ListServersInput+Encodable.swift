// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListServersInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterValue
        case groupIdFilter
        case maxResults
        case nextToken
        case serverCriteria
        case sort
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filterValue = self.filterValue {
            try encodeContainer.encode(filterValue, forKey: .filterValue)
        }
        if let groupIdFilter = groupIdFilter {
            var groupIdFilterContainer = encodeContainer.nestedUnkeyedContainer(forKey: .groupIdFilter)
            for groupids0 in groupIdFilter {
                try groupIdFilterContainer.encode(groupids0)
            }
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let serverCriteria = self.serverCriteria {
            try encodeContainer.encode(serverCriteria.rawValue, forKey: .serverCriteria)
        }
        if let sort = self.sort {
            try encodeContainer.encode(sort.rawValue, forKey: .sort)
        }
    }
}
