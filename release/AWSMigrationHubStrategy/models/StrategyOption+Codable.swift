// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MigrationHubStrategyClientTypes.StrategyOption: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case isPreferred
        case strategy
        case targetDestination
        case toolName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let isPreferred = self.isPreferred {
            try encodeContainer.encode(isPreferred, forKey: .isPreferred)
        }
        if let strategy = self.strategy {
            try encodeContainer.encode(strategy.rawValue, forKey: .strategy)
        }
        if let targetDestination = self.targetDestination {
            try encodeContainer.encode(targetDestination.rawValue, forKey: .targetDestination)
        }
        if let toolName = self.toolName {
            try encodeContainer.encode(toolName.rawValue, forKey: .toolName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let strategyDecoded = try containerValues.decodeIfPresent(MigrationHubStrategyClientTypes.Strategy.self, forKey: .strategy)
        strategy = strategyDecoded
        let toolNameDecoded = try containerValues.decodeIfPresent(MigrationHubStrategyClientTypes.TransformationToolName.self, forKey: .toolName)
        toolName = toolNameDecoded
        let targetDestinationDecoded = try containerValues.decodeIfPresent(MigrationHubStrategyClientTypes.TargetDestination.self, forKey: .targetDestination)
        targetDestination = targetDestinationDecoded
        let isPreferredDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isPreferred)
        isPreferred = isPreferredDecoded
    }
}
