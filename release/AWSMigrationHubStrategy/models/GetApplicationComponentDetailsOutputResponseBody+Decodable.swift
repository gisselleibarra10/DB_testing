// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetApplicationComponentDetailsOutputResponseBody: Swift.Equatable {
    let applicationComponentDetail: MigrationHubStrategyClientTypes.ApplicationComponentDetail?
    let associatedApplications: [MigrationHubStrategyClientTypes.AssociatedApplication]?
    let moreApplicationResource: Swift.Bool?
    let associatedServerIds: [Swift.String]?
}

extension GetApplicationComponentDetailsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationComponentDetail
        case associatedApplications
        case associatedServerIds
        case moreApplicationResource
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationComponentDetailDecoded = try containerValues.decodeIfPresent(MigrationHubStrategyClientTypes.ApplicationComponentDetail.self, forKey: .applicationComponentDetail)
        applicationComponentDetail = applicationComponentDetailDecoded
        let associatedApplicationsContainer = try containerValues.decodeIfPresent([MigrationHubStrategyClientTypes.AssociatedApplication?].self, forKey: .associatedApplications)
        var associatedApplicationsDecoded0:[MigrationHubStrategyClientTypes.AssociatedApplication]? = nil
        if let associatedApplicationsContainer = associatedApplicationsContainer {
            associatedApplicationsDecoded0 = [MigrationHubStrategyClientTypes.AssociatedApplication]()
            for structure0 in associatedApplicationsContainer {
                if let structure0 = structure0 {
                    associatedApplicationsDecoded0?.append(structure0)
                }
            }
        }
        associatedApplications = associatedApplicationsDecoded0
        let moreApplicationResourceDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .moreApplicationResource)
        moreApplicationResource = moreApplicationResourceDecoded
        let associatedServerIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .associatedServerIds)
        var associatedServerIdsDecoded0:[Swift.String]? = nil
        if let associatedServerIdsContainer = associatedServerIdsContainer {
            associatedServerIdsDecoded0 = [Swift.String]()
            for string0 in associatedServerIdsContainer {
                if let string0 = string0 {
                    associatedServerIdsDecoded0?.append(string0)
                }
            }
        }
        associatedServerIds = associatedServerIdsDecoded0
    }
}
