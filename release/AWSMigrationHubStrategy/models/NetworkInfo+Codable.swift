// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MigrationHubStrategyClientTypes.NetworkInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case interfaceName
        case ipAddress
        case macAddress
        case netMask
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let interfaceName = self.interfaceName {
            try encodeContainer.encode(interfaceName, forKey: .interfaceName)
        }
        if let ipAddress = self.ipAddress {
            try encodeContainer.encode(ipAddress, forKey: .ipAddress)
        }
        if let macAddress = self.macAddress {
            try encodeContainer.encode(macAddress, forKey: .macAddress)
        }
        if let netMask = self.netMask {
            try encodeContainer.encode(netMask, forKey: .netMask)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let interfaceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .interfaceName)
        interfaceName = interfaceNameDecoded
        let ipAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipAddress)
        ipAddress = ipAddressDecoded
        let macAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .macAddress)
        macAddress = macAddressDecoded
        let netMaskDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .netMask)
        netMask = netMaskDecoded
    }
}
