// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MigrationHubStrategyClientTypes.DatabaseMigrationPreference: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case heterogeneous
        case homogeneous
        case nopreference = "noPreference"
        case sdkUnknown
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .heterogeneous(heterogeneous):
                try container.encode(heterogeneous, forKey: .heterogeneous)
            case let .homogeneous(homogeneous):
                try container.encode(homogeneous, forKey: .homogeneous)
            case let .nopreference(nopreference):
                try container.encode(nopreference, forKey: .nopreference)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let heterogeneousDecoded = try values.decodeIfPresent(MigrationHubStrategyClientTypes.Heterogeneous.self, forKey: .heterogeneous)
        if let heterogeneous = heterogeneousDecoded {
            self = .heterogeneous(heterogeneous)
            return
        }
        let homogeneousDecoded = try values.decodeIfPresent(MigrationHubStrategyClientTypes.Homogeneous.self, forKey: .homogeneous)
        if let homogeneous = homogeneousDecoded {
            self = .homogeneous(homogeneous)
            return
        }
        let nopreferenceDecoded = try values.decodeIfPresent(MigrationHubStrategyClientTypes.NoDatabaseMigrationPreference.self, forKey: .nopreference)
        if let nopreference = nopreferenceDecoded {
            self = .nopreference(nopreference)
            return
        }
        self = .sdkUnknown("")
    }
}
