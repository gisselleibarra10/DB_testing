// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MigrationHubStrategyClientTypes {
    public enum TargetDestination: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case amazonDocumentdb
        case amazonDynamodb
        case amazonElasticCloudCompute
        case amazonElasticContainerService
        case amazonElasticKubernetesService
        case amazonRds
        case amazonRdsMysql
        case amazonRdsPostgresql
        case auroraMysql
        case auroraPostgresql
        case awsElasticBeanstalk
        case awsFargate
        case noneSpecified
        case sdkUnknown(Swift.String)

        public static var allCases: [TargetDestination] {
            return [
                .amazonDocumentdb,
                .amazonDynamodb,
                .amazonElasticCloudCompute,
                .amazonElasticContainerService,
                .amazonElasticKubernetesService,
                .amazonRds,
                .amazonRdsMysql,
                .amazonRdsPostgresql,
                .auroraMysql,
                .auroraPostgresql,
                .awsElasticBeanstalk,
                .awsFargate,
                .noneSpecified,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .amazonDocumentdb: return "Amazon DocumentDB"
            case .amazonDynamodb: return "Amazon DynamoDB"
            case .amazonElasticCloudCompute: return "Amazon Elastic Cloud Compute (EC2)"
            case .amazonElasticContainerService: return "Amazon Elastic Container Service (ECS)"
            case .amazonElasticKubernetesService: return "Amazon Elastic Kubernetes Service (EKS)"
            case .amazonRds: return "Amazon Relational Database Service"
            case .amazonRdsMysql: return "Amazon Relational Database Service on MySQL"
            case .amazonRdsPostgresql: return "Amazon Relational Database Service on PostgreSQL"
            case .auroraMysql: return "Aurora MySQL"
            case .auroraPostgresql: return "Aurora PostgreSQL"
            case .awsElasticBeanstalk: return "AWS Elastic BeanStalk"
            case .awsFargate: return "AWS Fargate"
            case .noneSpecified: return "None specified"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = TargetDestination(rawValue: rawValue) ?? TargetDestination.sdkUnknown(rawValue)
        }
    }
}
