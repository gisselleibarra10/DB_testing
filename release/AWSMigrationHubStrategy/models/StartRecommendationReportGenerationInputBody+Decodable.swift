// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartRecommendationReportGenerationInputBody: Swift.Equatable {
    let outputFormat: MigrationHubStrategyClientTypes.OutputFormat?
    let groupIdFilter: [MigrationHubStrategyClientTypes.Group]?
}

extension StartRecommendationReportGenerationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groupIdFilter
        case outputFormat
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outputFormatDecoded = try containerValues.decodeIfPresent(MigrationHubStrategyClientTypes.OutputFormat.self, forKey: .outputFormat)
        outputFormat = outputFormatDecoded
        let groupIdFilterContainer = try containerValues.decodeIfPresent([MigrationHubStrategyClientTypes.Group?].self, forKey: .groupIdFilter)
        var groupIdFilterDecoded0:[MigrationHubStrategyClientTypes.Group]? = nil
        if let groupIdFilterContainer = groupIdFilterContainer {
            groupIdFilterDecoded0 = [MigrationHubStrategyClientTypes.Group]()
            for structure0 in groupIdFilterContainer {
                if let structure0 = structure0 {
                    groupIdFilterDecoded0?.append(structure0)
                }
            }
        }
        groupIdFilter = groupIdFilterDecoded0
    }
}
