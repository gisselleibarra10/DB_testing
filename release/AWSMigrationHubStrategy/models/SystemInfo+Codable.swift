// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MigrationHubStrategyClientTypes.SystemInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cpuArchitecture
        case fileSystemType
        case networkInfoList
        case osInfo
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cpuArchitecture = self.cpuArchitecture {
            try encodeContainer.encode(cpuArchitecture, forKey: .cpuArchitecture)
        }
        if let fileSystemType = self.fileSystemType {
            try encodeContainer.encode(fileSystemType, forKey: .fileSystemType)
        }
        if let networkInfoList = networkInfoList {
            var networkInfoListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .networkInfoList)
            for networkinfolist0 in networkInfoList {
                try networkInfoListContainer.encode(networkinfolist0)
            }
        }
        if let osInfo = self.osInfo {
            try encodeContainer.encode(osInfo, forKey: .osInfo)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let osInfoDecoded = try containerValues.decodeIfPresent(MigrationHubStrategyClientTypes.OSInfo.self, forKey: .osInfo)
        osInfo = osInfoDecoded
        let fileSystemTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fileSystemType)
        fileSystemType = fileSystemTypeDecoded
        let networkInfoListContainer = try containerValues.decodeIfPresent([MigrationHubStrategyClientTypes.NetworkInfo?].self, forKey: .networkInfoList)
        var networkInfoListDecoded0:[MigrationHubStrategyClientTypes.NetworkInfo]? = nil
        if let networkInfoListContainer = networkInfoListContainer {
            networkInfoListDecoded0 = [MigrationHubStrategyClientTypes.NetworkInfo]()
            for structure0 in networkInfoListContainer {
                if let structure0 = structure0 {
                    networkInfoListDecoded0?.append(structure0)
                }
            }
        }
        networkInfoList = networkInfoListDecoded0
        let cpuArchitectureDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cpuArchitecture)
        cpuArchitecture = cpuArchitectureDecoded
    }
}
