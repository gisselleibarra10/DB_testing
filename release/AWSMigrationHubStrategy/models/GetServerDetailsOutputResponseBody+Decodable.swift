// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetServerDetailsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let serverDetail: MigrationHubStrategyClientTypes.ServerDetail?
    let associatedApplications: [MigrationHubStrategyClientTypes.AssociatedApplication]?
}

extension GetServerDetailsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associatedApplications
        case nextToken
        case serverDetail
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let serverDetailDecoded = try containerValues.decodeIfPresent(MigrationHubStrategyClientTypes.ServerDetail.self, forKey: .serverDetail)
        serverDetail = serverDetailDecoded
        let associatedApplicationsContainer = try containerValues.decodeIfPresent([MigrationHubStrategyClientTypes.AssociatedApplication?].self, forKey: .associatedApplications)
        var associatedApplicationsDecoded0:[MigrationHubStrategyClientTypes.AssociatedApplication]? = nil
        if let associatedApplicationsContainer = associatedApplicationsContainer {
            associatedApplicationsDecoded0 = [MigrationHubStrategyClientTypes.AssociatedApplication]()
            for structure0 in associatedApplicationsContainer {
                if let structure0 = structure0 {
                    associatedApplicationsDecoded0?.append(structure0)
                }
            }
        }
        associatedApplications = associatedApplicationsDecoded0
    }
}
