// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input of an UpdateDeploymentGroup operation.
public struct UpdateDeploymentGroupInput: Swift.Equatable {
    /// Information to add or change about Amazon CloudWatch alarms when the deployment group is updated.
    public var alarmConfiguration: CodeDeployClientTypes.AlarmConfiguration?
    /// The application name that corresponds to the deployment group to update.
    /// This member is required.
    public var applicationName: Swift.String?
    /// Information for an automatic rollback configuration that is added or changed when a deployment group is updated.
    public var autoRollbackConfiguration: CodeDeployClientTypes.AutoRollbackConfiguration?
    /// The replacement list of Auto Scaling groups to be included in the deployment group, if you want to change them. To keep the Auto Scaling groups, enter their names. To remove Auto Scaling groups, do not enter any Auto Scaling group names.
    public var autoScalingGroups: [Swift.String]?
    /// Information about blue/green deployment options for a deployment group.
    public var blueGreenDeploymentConfiguration: CodeDeployClientTypes.BlueGreenDeploymentConfiguration?
    /// The current name of the deployment group.
    /// This member is required.
    public var currentDeploymentGroupName: Swift.String?
    /// The replacement deployment configuration name to use, if you want to change it.
    public var deploymentConfigName: Swift.String?
    /// Information about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.
    public var deploymentStyle: CodeDeployClientTypes.DeploymentStyle?
    /// The replacement set of Amazon EC2 tags on which to filter, if you want to change them. To keep the existing tags, enter their names. To remove tags, do not enter any tag names.
    public var ec2TagFilters: [CodeDeployClientTypes.EC2TagFilter]?
    /// Information about groups of tags applied to on-premises instances. The deployment group includes only EC2 instances identified by all the tag groups.
    public var ec2TagSet: CodeDeployClientTypes.EC2TagSet?
    /// The target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format :.
    public var ecsServices: [CodeDeployClientTypes.ECSService]?
    /// Information about the load balancer used in a deployment.
    public var loadBalancerInfo: CodeDeployClientTypes.LoadBalancerInfo?
    /// The new name of the deployment group, if you want to change it.
    public var newDeploymentGroupName: Swift.String?
    /// The replacement set of on-premises instance tags on which to filter, if you want to change them. To keep the existing tags, enter their names. To remove tags, do not enter any tag names.
    public var onPremisesInstanceTagFilters: [CodeDeployClientTypes.TagFilter]?
    /// Information about an on-premises instance tag set. The deployment group includes only on-premises instances identified by all the tag groups.
    public var onPremisesTagSet: CodeDeployClientTypes.OnPremisesTagSet?
    /// Indicates what happens when new EC2 instances are launched mid-deployment and do not receive the deployed application revision. If this option is set to UPDATE or is unspecified, CodeDeploy initiates one or more 'auto-update outdated instances' deployments to apply the deployed application revision to the new EC2 instances. If this option is set to IGNORE, CodeDeploy does not initiate a deployment to update the new EC2 instances. This may result in instances having different revisions.
    public var outdatedInstancesStrategy: CodeDeployClientTypes.OutdatedInstancesStrategy?
    /// A replacement ARN for the service role, if you want to change it.
    public var serviceRoleArn: Swift.String?
    /// Information about triggers to change when the deployment group is updated. For examples, see [Edit a Trigger in a CodeDeploy Deployment Group](https://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-edit.html) in the AWS CodeDeploy User Guide.
    public var triggerConfigurations: [CodeDeployClientTypes.TriggerConfig]?

    public init (
        alarmConfiguration: CodeDeployClientTypes.AlarmConfiguration? = nil,
        applicationName: Swift.String? = nil,
        autoRollbackConfiguration: CodeDeployClientTypes.AutoRollbackConfiguration? = nil,
        autoScalingGroups: [Swift.String]? = nil,
        blueGreenDeploymentConfiguration: CodeDeployClientTypes.BlueGreenDeploymentConfiguration? = nil,
        currentDeploymentGroupName: Swift.String? = nil,
        deploymentConfigName: Swift.String? = nil,
        deploymentStyle: CodeDeployClientTypes.DeploymentStyle? = nil,
        ec2TagFilters: [CodeDeployClientTypes.EC2TagFilter]? = nil,
        ec2TagSet: CodeDeployClientTypes.EC2TagSet? = nil,
        ecsServices: [CodeDeployClientTypes.ECSService]? = nil,
        loadBalancerInfo: CodeDeployClientTypes.LoadBalancerInfo? = nil,
        newDeploymentGroupName: Swift.String? = nil,
        onPremisesInstanceTagFilters: [CodeDeployClientTypes.TagFilter]? = nil,
        onPremisesTagSet: CodeDeployClientTypes.OnPremisesTagSet? = nil,
        outdatedInstancesStrategy: CodeDeployClientTypes.OutdatedInstancesStrategy? = nil,
        serviceRoleArn: Swift.String? = nil,
        triggerConfigurations: [CodeDeployClientTypes.TriggerConfig]? = nil
    )
    {
        self.alarmConfiguration = alarmConfiguration
        self.applicationName = applicationName
        self.autoRollbackConfiguration = autoRollbackConfiguration
        self.autoScalingGroups = autoScalingGroups
        self.blueGreenDeploymentConfiguration = blueGreenDeploymentConfiguration
        self.currentDeploymentGroupName = currentDeploymentGroupName
        self.deploymentConfigName = deploymentConfigName
        self.deploymentStyle = deploymentStyle
        self.ec2TagFilters = ec2TagFilters
        self.ec2TagSet = ec2TagSet
        self.ecsServices = ecsServices
        self.loadBalancerInfo = loadBalancerInfo
        self.newDeploymentGroupName = newDeploymentGroupName
        self.onPremisesInstanceTagFilters = onPremisesInstanceTagFilters
        self.onPremisesTagSet = onPremisesTagSet
        self.outdatedInstancesStrategy = outdatedInstancesStrategy
        self.serviceRoleArn = serviceRoleArn
        self.triggerConfigurations = triggerConfigurations
    }
}
