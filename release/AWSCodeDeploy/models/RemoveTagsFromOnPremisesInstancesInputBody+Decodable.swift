// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RemoveTagsFromOnPremisesInstancesInputBody: Swift.Equatable {
    let tags: [CodeDeployClientTypes.Tag]?
    let instanceNames: [Swift.String]?
}

extension RemoveTagsFromOnPremisesInstancesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case instanceNames
        case tags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tagsContainer = try containerValues.decodeIfPresent([CodeDeployClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[CodeDeployClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [CodeDeployClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
        let instanceNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .instanceNames)
        var instanceNamesDecoded0:[Swift.String]? = nil
        if let instanceNamesContainer = instanceNamesContainer {
            instanceNamesDecoded0 = [Swift.String]()
            for string0 in instanceNamesContainer {
                if let string0 = string0 {
                    instanceNamesDecoded0?.append(string0)
                }
            }
        }
        instanceNames = instanceNamesDecoded0
    }
}
