// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeDeployClientTypes.EC2TagSet: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ec2TagSetList
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ec2TagSetList = ec2TagSetList {
            var ec2TagSetListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ec2TagSetList)
            for ec2tagsetlist0 in ec2TagSetList {
                var ec2tagsetlist0Container = ec2TagSetListContainer.nestedUnkeyedContainer()
                for ec2tagfilterlist1 in ec2tagsetlist0 {
                    try ec2tagsetlist0Container.encode(ec2tagfilterlist1)
                }
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ec2TagSetListContainer = try containerValues.decodeIfPresent([[CodeDeployClientTypes.EC2TagFilter?]?].self, forKey: .ec2TagSetList)
        var ec2TagSetListDecoded0:[[CodeDeployClientTypes.EC2TagFilter]]? = nil
        if let ec2TagSetListContainer = ec2TagSetListContainer {
            ec2TagSetListDecoded0 = [[CodeDeployClientTypes.EC2TagFilter]]()
            for list0 in ec2TagSetListContainer {
                var list0Decoded0: [CodeDeployClientTypes.EC2TagFilter]? = nil
                if let list0 = list0 {
                    list0Decoded0 = [CodeDeployClientTypes.EC2TagFilter]()
                    for structure1 in list0 {
                        if let structure1 = structure1 {
                            list0Decoded0?.append(structure1)
                        }
                    }
                }
                if let list0Decoded0 = list0Decoded0 {
                    ec2TagSetListDecoded0?.append(list0Decoded0)
                }
            }
        }
        ec2TagSetList = ec2TagSetListDecoded0
    }
}
