// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeDeployClientTypes.RollbackInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case rollbackDeploymentId
        case rollbackMessage
        case rollbackTriggeringDeploymentId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let rollbackDeploymentId = self.rollbackDeploymentId {
            try encodeContainer.encode(rollbackDeploymentId, forKey: .rollbackDeploymentId)
        }
        if let rollbackMessage = self.rollbackMessage {
            try encodeContainer.encode(rollbackMessage, forKey: .rollbackMessage)
        }
        if let rollbackTriggeringDeploymentId = self.rollbackTriggeringDeploymentId {
            try encodeContainer.encode(rollbackTriggeringDeploymentId, forKey: .rollbackTriggeringDeploymentId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rollbackDeploymentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rollbackDeploymentId)
        rollbackDeploymentId = rollbackDeploymentIdDecoded
        let rollbackTriggeringDeploymentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rollbackTriggeringDeploymentId)
        rollbackTriggeringDeploymentId = rollbackTriggeringDeploymentIdDecoded
        let rollbackMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rollbackMessage)
        rollbackMessage = rollbackMessageDecoded
    }
}
