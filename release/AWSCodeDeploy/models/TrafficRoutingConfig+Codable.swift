// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeDeployClientTypes.TrafficRoutingConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case timeBasedCanary
        case timeBasedLinear
        case type
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let timeBasedCanary = self.timeBasedCanary {
            try encodeContainer.encode(timeBasedCanary, forKey: .timeBasedCanary)
        }
        if let timeBasedLinear = self.timeBasedLinear {
            try encodeContainer.encode(timeBasedLinear, forKey: .timeBasedLinear)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.TrafficRoutingType.self, forKey: .type)
        type = typeDecoded
        let timeBasedCanaryDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.TimeBasedCanary.self, forKey: .timeBasedCanary)
        timeBasedCanary = timeBasedCanaryDecoded
        let timeBasedLinearDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.TimeBasedLinear.self, forKey: .timeBasedLinear)
        timeBasedLinear = timeBasedLinearDecoded
    }
}
