// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeDeployClientTypes.ECSTaskSet: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case desiredCount
        case identifer
        case pendingCount
        case runningCount
        case status
        case targetGroup
        case taskSetLabel
        case trafficWeight
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if desiredCount != 0 {
            try encodeContainer.encode(desiredCount, forKey: .desiredCount)
        }
        if let identifer = self.identifer {
            try encodeContainer.encode(identifer, forKey: .identifer)
        }
        if pendingCount != 0 {
            try encodeContainer.encode(pendingCount, forKey: .pendingCount)
        }
        if runningCount != 0 {
            try encodeContainer.encode(runningCount, forKey: .runningCount)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let targetGroup = self.targetGroup {
            try encodeContainer.encode(targetGroup, forKey: .targetGroup)
        }
        if let taskSetLabel = self.taskSetLabel {
            try encodeContainer.encode(taskSetLabel.rawValue, forKey: .taskSetLabel)
        }
        if trafficWeight != 0.0 {
            try encodeContainer.encode(trafficWeight, forKey: .trafficWeight)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identiferDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identifer)
        identifer = identiferDecoded
        let desiredCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .desiredCount) ?? 0
        desiredCount = desiredCountDecoded
        let pendingCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .pendingCount) ?? 0
        pendingCount = pendingCountDecoded
        let runningCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .runningCount) ?? 0
        runningCount = runningCountDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let trafficWeightDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .trafficWeight) ?? 0.0
        trafficWeight = trafficWeightDecoded
        let targetGroupDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.TargetGroupInfo.self, forKey: .targetGroup)
        targetGroup = targetGroupDecoded
        let taskSetLabelDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.TargetLabel.self, forKey: .taskSetLabel)
        taskSetLabel = taskSetLabelDecoded
    }
}
