// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeDeployClientTypes.BlueGreenDeploymentConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deploymentReadyOption
        case greenFleetProvisioningOption
        case terminateBlueInstancesOnDeploymentSuccess
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deploymentReadyOption = self.deploymentReadyOption {
            try encodeContainer.encode(deploymentReadyOption, forKey: .deploymentReadyOption)
        }
        if let greenFleetProvisioningOption = self.greenFleetProvisioningOption {
            try encodeContainer.encode(greenFleetProvisioningOption, forKey: .greenFleetProvisioningOption)
        }
        if let terminateBlueInstancesOnDeploymentSuccess = self.terminateBlueInstancesOnDeploymentSuccess {
            try encodeContainer.encode(terminateBlueInstancesOnDeploymentSuccess, forKey: .terminateBlueInstancesOnDeploymentSuccess)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let terminateBlueInstancesOnDeploymentSuccessDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.BlueInstanceTerminationOption.self, forKey: .terminateBlueInstancesOnDeploymentSuccess)
        terminateBlueInstancesOnDeploymentSuccess = terminateBlueInstancesOnDeploymentSuccessDecoded
        let deploymentReadyOptionDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.DeploymentReadyOption.self, forKey: .deploymentReadyOption)
        deploymentReadyOption = deploymentReadyOptionDecoded
        let greenFleetProvisioningOptionDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.GreenFleetProvisioningOption.self, forKey: .greenFleetProvisioningOption)
        greenFleetProvisioningOption = greenFleetProvisioningOptionDecoded
    }
}
