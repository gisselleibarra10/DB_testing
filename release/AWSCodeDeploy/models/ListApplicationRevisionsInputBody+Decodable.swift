// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationRevisionsInputBody: Swift.Equatable {
    let applicationName: Swift.String?
    let sortBy: CodeDeployClientTypes.ApplicationRevisionSortBy?
    let sortOrder: CodeDeployClientTypes.SortOrder?
    let s3Bucket: Swift.String?
    let s3KeyPrefix: Swift.String?
    let deployed: CodeDeployClientTypes.ListStateFilterAction?
    let nextToken: Swift.String?
}

extension ListApplicationRevisionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationName
        case deployed
        case nextToken
        case s3Bucket
        case s3KeyPrefix
        case sortBy
        case sortOrder
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.ApplicationRevisionSortBy.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let sortOrderDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.SortOrder.self, forKey: .sortOrder)
        sortOrder = sortOrderDecoded
        let s3BucketDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3Bucket)
        s3Bucket = s3BucketDecoded
        let s3KeyPrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3KeyPrefix)
        s3KeyPrefix = s3KeyPrefixDecoded
        let deployedDecoded = try containerValues.decodeIfPresent(CodeDeployClientTypes.ListStateFilterAction.self, forKey: .deployed)
        deployed = deployedDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
