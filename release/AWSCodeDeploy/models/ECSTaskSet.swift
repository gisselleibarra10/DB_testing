// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodeDeployClientTypes {
    /// Information about a set of Amazon ECS tasks in an AWS CodeDeploy deployment. An Amazon ECS task set includes details such as the desired number of tasks, how many tasks are running, and whether the task set serves production traffic. An AWS CodeDeploy application that uses the Amazon ECS compute platform deploys a containerized application in an Amazon ECS service as a task set.
    public struct ECSTaskSet: Swift.Equatable {
        /// The number of tasks in a task set. During a deployment that uses the Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a new task set and uses this value to determine how many tasks to create. After the updated task set is created, CodeDeploy shifts traffic to the new task set.
        public var desiredCount: Swift.Int
        /// A unique ID of an ECSTaskSet.
        public var identifer: Swift.String?
        /// The number of tasks in the task set that are in the PENDING status during an Amazon ECS deployment. A task in the PENDING state is preparing to enter the RUNNING state. A task set enters the PENDING status when it launches for the first time, or when it is restarted after being in the STOPPED state.
        public var pendingCount: Swift.Int
        /// The number of tasks in the task set that are in the RUNNING status during an Amazon ECS deployment. A task in the RUNNING state is running and ready for use.
        public var runningCount: Swift.Int
        /// The status of the task set. There are three valid task set statuses:
        ///
        /// * PRIMARY: Indicates the task set is serving production traffic.
        ///
        /// * ACTIVE: Indicates the task set is not serving production traffic.
        ///
        /// * DRAINING: Indicates the tasks in the task set are being stopped and their corresponding targets are being deregistered from their target group.
        public var status: Swift.String?
        /// The target group associated with the task set. The target group is used by AWS CodeDeploy to manage traffic to a task set.
        public var targetGroup: CodeDeployClientTypes.TargetGroupInfo?
        /// A label that identifies whether the ECS task set is an original target (BLUE) or a replacement target (GREEN).
        public var taskSetLabel: CodeDeployClientTypes.TargetLabel?
        /// The percentage of traffic served by this task set.
        public var trafficWeight: Swift.Double

        public init (
            desiredCount: Swift.Int = 0,
            identifer: Swift.String? = nil,
            pendingCount: Swift.Int = 0,
            runningCount: Swift.Int = 0,
            status: Swift.String? = nil,
            targetGroup: CodeDeployClientTypes.TargetGroupInfo? = nil,
            taskSetLabel: CodeDeployClientTypes.TargetLabel? = nil,
            trafficWeight: Swift.Double = 0.0
        )
        {
            self.desiredCount = desiredCount
            self.identifer = identifer
            self.pendingCount = pendingCount
            self.runningCount = runningCount
            self.status = status
            self.targetGroup = targetGroup
            self.taskSetLabel = taskSetLabel
            self.trafficWeight = trafficWeight
        }
    }

}
