// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeploymentGroupsOutputResponseBody: Swift.Equatable {
    let applicationName: Swift.String?
    let deploymentGroups: [Swift.String]?
    let nextToken: Swift.String?
}

extension ListDeploymentGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationName
        case deploymentGroups
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let deploymentGroupsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .deploymentGroups)
        var deploymentGroupsDecoded0:[Swift.String]? = nil
        if let deploymentGroupsContainer = deploymentGroupsContainer {
            deploymentGroupsDecoded0 = [Swift.String]()
            for string0 in deploymentGroupsContainer {
                if let string0 = string0 {
                    deploymentGroupsDecoded0?.append(string0)
                }
            }
        }
        deploymentGroups = deploymentGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
