// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input of a ListApplicationRevisions operation.
public struct ListApplicationRevisionsInput: Swift.Equatable {
    /// The name of an AWS CodeDeploy application associated with the IAM user or AWS account.
    /// This member is required.
    public var applicationName: Swift.String?
    /// Whether to list revisions based on whether the revision is the target revision of a deployment group:
    ///
    /// * include: List revisions that are target revisions of a deployment group.
    ///
    /// * exclude: Do not list revisions that are target revisions of a deployment group.
    ///
    /// * ignore: List all revisions.
    public var deployed: CodeDeployClientTypes.ListStateFilterAction?
    /// An identifier returned from the previous ListApplicationRevisions call. It can be used to return the next set of applications in the list.
    public var nextToken: Swift.String?
    /// An Amazon S3 bucket name to limit the search for revisions. If set to null, all of the user's buckets are searched.
    public var s3Bucket: Swift.String?
    /// A key prefix for the set of Amazon S3 objects to limit the search for revisions.
    public var s3KeyPrefix: Swift.String?
    /// The column name to use to sort the list results:
    ///
    /// * registerTime: Sort by the time the revisions were registered with AWS CodeDeploy.
    ///
    /// * firstUsedTime: Sort by the time the revisions were first used in a deployment.
    ///
    /// * lastUsedTime: Sort by the time the revisions were last used in a deployment.
    ///
    ///
    /// If not specified or set to null, the results are returned in an arbitrary order.
    public var sortBy: CodeDeployClientTypes.ApplicationRevisionSortBy?
    /// The order in which to sort the list results:
    ///
    /// * ascending: ascending order.
    ///
    /// * descending: descending order.
    ///
    ///
    /// If not specified, the results are sorted in ascending order. If set to null, the results are sorted in an arbitrary order.
    public var sortOrder: CodeDeployClientTypes.SortOrder?

    public init (
        applicationName: Swift.String? = nil,
        deployed: CodeDeployClientTypes.ListStateFilterAction? = nil,
        nextToken: Swift.String? = nil,
        s3Bucket: Swift.String? = nil,
        s3KeyPrefix: Swift.String? = nil,
        sortBy: CodeDeployClientTypes.ApplicationRevisionSortBy? = nil,
        sortOrder: CodeDeployClientTypes.SortOrder? = nil
    )
    {
        self.applicationName = applicationName
        self.deployed = deployed
        self.nextToken = nextToken
        self.s3Bucket = s3Bucket
        self.s3KeyPrefix = s3KeyPrefix
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
