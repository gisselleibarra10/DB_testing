// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationRevisionsOutputResponseBody: Swift.Equatable {
    let revisions: [CodeDeployClientTypes.RevisionLocation]?
    let nextToken: Swift.String?
}

extension ListApplicationRevisionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case revisions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let revisionsContainer = try containerValues.decodeIfPresent([CodeDeployClientTypes.RevisionLocation?].self, forKey: .revisions)
        var revisionsDecoded0:[CodeDeployClientTypes.RevisionLocation]? = nil
        if let revisionsContainer = revisionsContainer {
            revisionsDecoded0 = [CodeDeployClientTypes.RevisionLocation]()
            for structure0 in revisionsContainer {
                if let structure0 = structure0 {
                    revisionsDecoded0?.append(structure0)
                }
            }
        }
        revisions = revisionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
