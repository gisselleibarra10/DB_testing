// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetTableObjectsInput: Swift.Equatable {
    /// The catalog containing the governed table. Defaults to the callerâ€™s account.
    public var catalogId: Swift.String?
    /// The database containing the governed table.
    /// This member is required.
    public var databaseName: Swift.String?
    /// Specifies how many values to return in a page.
    public var maxResults: Swift.Int?
    /// A continuation token if this is not the first call to retrieve these objects.
    public var nextToken: Swift.String?
    /// A predicate to filter the objects returned based on the partition keys defined in the governed table.
    ///
    /// * The comparison operators supported are: =, >, <, >=, <=
    ///
    /// * The logical operators supported are: AND
    ///
    /// * The data types supported are integer, long, date(yyyy-MM-dd), timestamp(yyyy-MM-dd HH:mm:ssXXX or yyyy-MM-dd HH:mm:ss"), string and decimal.
    public var partitionPredicate: Swift.String?
    /// The time as of when to read the governed table contents. If not set, the most recent transaction commit time is used. Cannot be specified along with TransactionId.
    public var queryAsOfTime: ClientRuntime.Date?
    /// The governed table for which to retrieve objects.
    /// This member is required.
    public var tableName: Swift.String?
    /// The transaction ID at which to read the governed table contents. If this transaction has aborted, an error is returned. If not set, defaults to the most recent committed transaction. Cannot be specified along with QueryAsOfTime.
    public var transactionId: Swift.String?

    public init (
        catalogId: Swift.String? = nil,
        databaseName: Swift.String? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        partitionPredicate: Swift.String? = nil,
        queryAsOfTime: ClientRuntime.Date? = nil,
        tableName: Swift.String? = nil,
        transactionId: Swift.String? = nil
    )
    {
        self.catalogId = catalogId
        self.databaseName = databaseName
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.partitionPredicate = partitionPredicate
        self.queryAsOfTime = queryAsOfTime
        self.tableName = tableName
        self.transactionId = transactionId
    }
}
