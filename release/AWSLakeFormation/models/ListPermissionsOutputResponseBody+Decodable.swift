// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPermissionsOutputResponseBody: Swift.Equatable {
    let principalResourcePermissions: [LakeFormationClientTypes.PrincipalResourcePermissions]?
    let nextToken: Swift.String?
}

extension ListPermissionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case principalResourcePermissions = "PrincipalResourcePermissions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let principalResourcePermissionsContainer = try containerValues.decodeIfPresent([LakeFormationClientTypes.PrincipalResourcePermissions?].self, forKey: .principalResourcePermissions)
        var principalResourcePermissionsDecoded0:[LakeFormationClientTypes.PrincipalResourcePermissions]? = nil
        if let principalResourcePermissionsContainer = principalResourcePermissionsContainer {
            principalResourcePermissionsDecoded0 = [LakeFormationClientTypes.PrincipalResourcePermissions]()
            for structure0 in principalResourcePermissionsContainer {
                if let structure0 = structure0 {
                    principalResourcePermissionsDecoded0?.append(structure0)
                }
            }
        }
        principalResourcePermissions = principalResourcePermissionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
