// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourcesOutputResponseBody: Swift.Equatable {
    let resourceInfoList: [LakeFormationClientTypes.ResourceInfo]?
    let nextToken: Swift.String?
}

extension ListResourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case resourceInfoList = "ResourceInfoList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceInfoListContainer = try containerValues.decodeIfPresent([LakeFormationClientTypes.ResourceInfo?].self, forKey: .resourceInfoList)
        var resourceInfoListDecoded0:[LakeFormationClientTypes.ResourceInfo]? = nil
        if let resourceInfoListContainer = resourceInfoListContainer {
            resourceInfoListDecoded0 = [LakeFormationClientTypes.ResourceInfo]()
            for structure0 in resourceInfoListContainer {
                if let structure0 = structure0 {
                    resourceInfoListDecoded0?.append(structure0)
                }
            }
        }
        resourceInfoList = resourceInfoListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
