// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchDatabasesByLFTagsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let databaseList: [LakeFormationClientTypes.TaggedDatabase]?
}

extension SearchDatabasesByLFTagsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case databaseList = "DatabaseList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let databaseListContainer = try containerValues.decodeIfPresent([LakeFormationClientTypes.TaggedDatabase?].self, forKey: .databaseList)
        var databaseListDecoded0:[LakeFormationClientTypes.TaggedDatabase]? = nil
        if let databaseListContainer = databaseListContainer {
            databaseListDecoded0 = [LakeFormationClientTypes.TaggedDatabase]()
            for structure0 in databaseListContainer {
                if let structure0 = structure0 {
                    databaseListDecoded0?.append(structure0)
                }
            }
        }
        databaseList = databaseListDecoded0
    }
}
