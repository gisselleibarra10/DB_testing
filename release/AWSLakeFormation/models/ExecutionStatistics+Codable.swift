// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LakeFormationClientTypes.ExecutionStatistics: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case averageExecutionTimeMillis = "AverageExecutionTimeMillis"
        case dataScannedBytes = "DataScannedBytes"
        case workUnitsExecutedCount = "WorkUnitsExecutedCount"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if averageExecutionTimeMillis != 0 {
            try encodeContainer.encode(averageExecutionTimeMillis, forKey: .averageExecutionTimeMillis)
        }
        if dataScannedBytes != 0 {
            try encodeContainer.encode(dataScannedBytes, forKey: .dataScannedBytes)
        }
        if workUnitsExecutedCount != 0 {
            try encodeContainer.encode(workUnitsExecutedCount, forKey: .workUnitsExecutedCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let averageExecutionTimeMillisDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .averageExecutionTimeMillis) ?? 0
        averageExecutionTimeMillis = averageExecutionTimeMillisDecoded
        let dataScannedBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .dataScannedBytes) ?? 0
        dataScannedBytes = dataScannedBytesDecoded
        let workUnitsExecutedCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .workUnitsExecutedCount) ?? 0
        workUnitsExecutedCount = workUnitsExecutedCountDecoded
    }
}
