// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LakeFormationClientTypes.ColumnLFTag: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lFTags = "LFTags"
        case name = "Name"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lFTags = lFTags {
            var lFTagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .lFTags)
            for lftagslist0 in lFTags {
                try lFTagsContainer.encode(lftagslist0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let lFTagsContainer = try containerValues.decodeIfPresent([LakeFormationClientTypes.LFTagPair?].self, forKey: .lFTags)
        var lFTagsDecoded0:[LakeFormationClientTypes.LFTagPair]? = nil
        if let lFTagsContainer = lFTagsContainer {
            lFTagsDecoded0 = [LakeFormationClientTypes.LFTagPair]()
            for structure0 in lFTagsContainer {
                if let structure0 = structure0 {
                    lFTagsDecoded0?.append(structure0)
                }
            }
        }
        lFTags = lFTagsDecoded0
    }
}
