// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssumeDecoratedRoleWithSAMLInputBody: Swift.Equatable {
    let sAMLAssertion: Swift.String?
    let roleArn: Swift.String?
    let principalArn: Swift.String?
    let durationSeconds: Swift.Int?
}

extension AssumeDecoratedRoleWithSAMLInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case durationSeconds = "DurationSeconds"
        case principalArn = "PrincipalArn"
        case roleArn = "RoleArn"
        case sAMLAssertion = "SAMLAssertion"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sAMLAssertionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sAMLAssertion)
        sAMLAssertion = sAMLAssertionDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let principalArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .principalArn)
        principalArn = principalArnDecoded
        let durationSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .durationSeconds)
        durationSeconds = durationSecondsDecoded
    }
}
