// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTableObjectsInputBody: Swift.Equatable {
    let catalogId: Swift.String?
    let databaseName: Swift.String?
    let tableName: Swift.String?
    let transactionId: Swift.String?
    let writeOperations: [LakeFormationClientTypes.WriteOperation]?
}

extension UpdateTableObjectsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case catalogId = "CatalogId"
        case databaseName = "DatabaseName"
        case tableName = "TableName"
        case transactionId = "TransactionId"
        case writeOperations = "WriteOperations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let databaseNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .databaseName)
        databaseName = databaseNameDecoded
        let tableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let transactionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transactionId)
        transactionId = transactionIdDecoded
        let writeOperationsContainer = try containerValues.decodeIfPresent([LakeFormationClientTypes.WriteOperation?].self, forKey: .writeOperations)
        var writeOperationsDecoded0:[LakeFormationClientTypes.WriteOperation]? = nil
        if let writeOperationsContainer = writeOperationsContainer {
            writeOperationsDecoded0 = [LakeFormationClientTypes.WriteOperation]()
            for structure0 in writeOperationsContainer {
                if let structure0 = structure0 {
                    writeOperationsDecoded0?.append(structure0)
                }
            }
        }
        writeOperations = writeOperationsDecoded0
    }
}
