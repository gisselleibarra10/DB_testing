// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartQueryPlanningInputBody: Swift.Equatable {
    let queryPlanningContext: LakeFormationClientTypes.QueryPlanningContext?
    let queryString: Swift.String?
}

extension StartQueryPlanningInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case queryPlanningContext = "QueryPlanningContext"
        case queryString = "QueryString"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queryPlanningContextDecoded = try containerValues.decodeIfPresent(LakeFormationClientTypes.QueryPlanningContext.self, forKey: .queryPlanningContext)
        queryPlanningContext = queryPlanningContextDecoded
        let queryStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryString)
        queryString = queryStringDecoded
    }
}
