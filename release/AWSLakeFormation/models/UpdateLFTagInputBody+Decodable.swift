// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateLFTagInputBody: Swift.Equatable {
    let catalogId: Swift.String?
    let tagKey: Swift.String?
    let tagValuesToDelete: [Swift.String]?
    let tagValuesToAdd: [Swift.String]?
}

extension UpdateLFTagInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case catalogId = "CatalogId"
        case tagKey = "TagKey"
        case tagValuesToAdd = "TagValuesToAdd"
        case tagValuesToDelete = "TagValuesToDelete"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let tagKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .tagKey)
        tagKey = tagKeyDecoded
        let tagValuesToDeleteContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .tagValuesToDelete)
        var tagValuesToDeleteDecoded0:[Swift.String]? = nil
        if let tagValuesToDeleteContainer = tagValuesToDeleteContainer {
            tagValuesToDeleteDecoded0 = [Swift.String]()
            for string0 in tagValuesToDeleteContainer {
                if let string0 = string0 {
                    tagValuesToDeleteDecoded0?.append(string0)
                }
            }
        }
        tagValuesToDelete = tagValuesToDeleteDecoded0
        let tagValuesToAddContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .tagValuesToAdd)
        var tagValuesToAddDecoded0:[Swift.String]? = nil
        if let tagValuesToAddContainer = tagValuesToAddContainer {
            tagValuesToAddDecoded0 = [Swift.String]()
            for string0 in tagValuesToAddContainer {
                if let string0 = string0 {
                    tagValuesToAddDecoded0?.append(string0)
                }
            }
        }
        tagValuesToAdd = tagValuesToAddDecoded0
    }
}
