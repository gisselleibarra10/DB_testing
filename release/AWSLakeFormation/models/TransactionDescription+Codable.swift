// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LakeFormationClientTypes.TransactionDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case transactionEndTime = "TransactionEndTime"
        case transactionId = "TransactionId"
        case transactionStartTime = "TransactionStartTime"
        case transactionStatus = "TransactionStatus"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let transactionEndTime = self.transactionEndTime {
            try encodeContainer.encode(transactionEndTime.timeIntervalSince1970, forKey: .transactionEndTime)
        }
        if let transactionId = self.transactionId {
            try encodeContainer.encode(transactionId, forKey: .transactionId)
        }
        if let transactionStartTime = self.transactionStartTime {
            try encodeContainer.encode(transactionStartTime.timeIntervalSince1970, forKey: .transactionStartTime)
        }
        if let transactionStatus = self.transactionStatus {
            try encodeContainer.encode(transactionStatus.rawValue, forKey: .transactionStatus)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transactionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transactionId)
        transactionId = transactionIdDecoded
        let transactionStatusDecoded = try containerValues.decodeIfPresent(LakeFormationClientTypes.TransactionStatus.self, forKey: .transactionStatus)
        transactionStatus = transactionStatusDecoded
        let transactionStartTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .transactionStartTime)
        transactionStartTime = transactionStartTimeDecoded
        let transactionEndTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .transactionEndTime)
        transactionEndTime = transactionEndTimeDecoded
    }
}
