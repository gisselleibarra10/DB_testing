// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTableStorageOptimizersOutputResponseBody: Swift.Equatable {
    let storageOptimizerList: [LakeFormationClientTypes.StorageOptimizer]?
    let nextToken: Swift.String?
}

extension ListTableStorageOptimizersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case storageOptimizerList = "StorageOptimizerList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let storageOptimizerListContainer = try containerValues.decodeIfPresent([LakeFormationClientTypes.StorageOptimizer?].self, forKey: .storageOptimizerList)
        var storageOptimizerListDecoded0:[LakeFormationClientTypes.StorageOptimizer]? = nil
        if let storageOptimizerListContainer = storageOptimizerListContainer {
            storageOptimizerListDecoded0 = [LakeFormationClientTypes.StorageOptimizer]()
            for structure0 in storageOptimizerListContainer {
                if let structure0 = structure0 {
                    storageOptimizerListDecoded0?.append(structure0)
                }
            }
        }
        storageOptimizerList = storageOptimizerListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
