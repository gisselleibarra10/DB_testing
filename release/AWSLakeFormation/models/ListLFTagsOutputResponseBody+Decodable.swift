// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLFTagsOutputResponseBody: Swift.Equatable {
    let lFTags: [LakeFormationClientTypes.LFTagPair]?
    let nextToken: Swift.String?
}

extension ListLFTagsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lFTags = "LFTags"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lFTagsContainer = try containerValues.decodeIfPresent([LakeFormationClientTypes.LFTagPair?].self, forKey: .lFTags)
        var lFTagsDecoded0:[LakeFormationClientTypes.LFTagPair]? = nil
        if let lFTagsContainer = lFTagsContainer {
            lFTagsDecoded0 = [LakeFormationClientTypes.LFTagPair]()
            for structure0 in lFTagsContainer {
                if let structure0 = structure0 {
                    lFTagsDecoded0?.append(structure0)
                }
            }
        }
        lFTags = lFTagsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
