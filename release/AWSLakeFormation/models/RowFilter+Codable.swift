// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LakeFormationClientTypes.RowFilter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allRowsWildcard = "AllRowsWildcard"
        case filterExpression = "FilterExpression"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allRowsWildcard = self.allRowsWildcard {
            try encodeContainer.encode(allRowsWildcard, forKey: .allRowsWildcard)
        }
        if let filterExpression = self.filterExpression {
            try encodeContainer.encode(filterExpression, forKey: .filterExpression)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterExpressionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filterExpression)
        filterExpression = filterExpressionDecoded
        let allRowsWildcardDecoded = try containerValues.decodeIfPresent(LakeFormationClientTypes.AllRowsWildcard.self, forKey: .allRowsWildcard)
        allRowsWildcard = allRowsWildcardDecoded
    }
}
