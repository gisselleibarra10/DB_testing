// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GrantPermissionsInput: Swift.Equatable {
    /// The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
    public var catalogId: Swift.String?
    /// The permissions granted to the principal on the resource. Lake Formation defines privileges to grant and revoke access to metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3. Lake Formation requires that each principal be authorized to perform a specific task on Lake Formation resources.
    /// This member is required.
    public var permissions: [LakeFormationClientTypes.Permission]?
    /// Indicates a list of the granted permissions that the principal may pass to other users. These permissions may only be a subset of the permissions granted in the Privileges.
    public var permissionsWithGrantOption: [LakeFormationClientTypes.Permission]?
    /// The principal to be granted the permissions on the resource. Supported principals are IAM users or IAM roles, and they are defined by their principal type and their ARN. Note that if you define a resource with a particular ARN, then later delete, and recreate a resource with that same ARN, the resource maintains the permissions already granted.
    /// This member is required.
    public var principal: LakeFormationClientTypes.DataLakePrincipal?
    /// The resource to which permissions are to be granted. Resources in Lake Formation are the Data Catalog, databases, and tables.
    /// This member is required.
    public var resource: LakeFormationClientTypes.Resource?

    public init (
        catalogId: Swift.String? = nil,
        permissions: [LakeFormationClientTypes.Permission]? = nil,
        permissionsWithGrantOption: [LakeFormationClientTypes.Permission]? = nil,
        principal: LakeFormationClientTypes.DataLakePrincipal? = nil,
        resource: LakeFormationClientTypes.Resource? = nil
    )
    {
        self.catalogId = catalogId
        self.permissions = permissions
        self.permissionsWithGrantOption = permissionsWithGrantOption
        self.principal = principal
        self.resource = resource
    }
}
