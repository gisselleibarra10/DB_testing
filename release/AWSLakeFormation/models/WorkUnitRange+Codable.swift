// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LakeFormationClientTypes.WorkUnitRange: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case workUnitIdMax = "WorkUnitIdMax"
        case workUnitIdMin = "WorkUnitIdMin"
        case workUnitToken = "WorkUnitToken"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if workUnitIdMax != 0 {
            try encodeContainer.encode(workUnitIdMax, forKey: .workUnitIdMax)
        }
        if workUnitIdMin != 0 {
            try encodeContainer.encode(workUnitIdMin, forKey: .workUnitIdMin)
        }
        if let workUnitToken = self.workUnitToken {
            try encodeContainer.encode(workUnitToken, forKey: .workUnitToken)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workUnitIdMaxDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .workUnitIdMax) ?? 0
        workUnitIdMax = workUnitIdMaxDecoded
        let workUnitIdMinDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .workUnitIdMin) ?? 0
        workUnitIdMin = workUnitIdMinDecoded
        let workUnitTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .workUnitToken)
        workUnitToken = workUnitTokenDecoded
    }
}
