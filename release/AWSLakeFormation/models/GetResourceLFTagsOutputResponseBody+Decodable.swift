// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetResourceLFTagsOutputResponseBody: Swift.Equatable {
    let lFTagOnDatabase: [LakeFormationClientTypes.LFTagPair]?
    let lFTagsOnTable: [LakeFormationClientTypes.LFTagPair]?
    let lFTagsOnColumns: [LakeFormationClientTypes.ColumnLFTag]?
}

extension GetResourceLFTagsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lFTagOnDatabase = "LFTagOnDatabase"
        case lFTagsOnColumns = "LFTagsOnColumns"
        case lFTagsOnTable = "LFTagsOnTable"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lFTagOnDatabaseContainer = try containerValues.decodeIfPresent([LakeFormationClientTypes.LFTagPair?].self, forKey: .lFTagOnDatabase)
        var lFTagOnDatabaseDecoded0:[LakeFormationClientTypes.LFTagPair]? = nil
        if let lFTagOnDatabaseContainer = lFTagOnDatabaseContainer {
            lFTagOnDatabaseDecoded0 = [LakeFormationClientTypes.LFTagPair]()
            for structure0 in lFTagOnDatabaseContainer {
                if let structure0 = structure0 {
                    lFTagOnDatabaseDecoded0?.append(structure0)
                }
            }
        }
        lFTagOnDatabase = lFTagOnDatabaseDecoded0
        let lFTagsOnTableContainer = try containerValues.decodeIfPresent([LakeFormationClientTypes.LFTagPair?].self, forKey: .lFTagsOnTable)
        var lFTagsOnTableDecoded0:[LakeFormationClientTypes.LFTagPair]? = nil
        if let lFTagsOnTableContainer = lFTagsOnTableContainer {
            lFTagsOnTableDecoded0 = [LakeFormationClientTypes.LFTagPair]()
            for structure0 in lFTagsOnTableContainer {
                if let structure0 = structure0 {
                    lFTagsOnTableDecoded0?.append(structure0)
                }
            }
        }
        lFTagsOnTable = lFTagsOnTableDecoded0
        let lFTagsOnColumnsContainer = try containerValues.decodeIfPresent([LakeFormationClientTypes.ColumnLFTag?].self, forKey: .lFTagsOnColumns)
        var lFTagsOnColumnsDecoded0:[LakeFormationClientTypes.ColumnLFTag]? = nil
        if let lFTagsOnColumnsContainer = lFTagsOnColumnsContainer {
            lFTagsOnColumnsDecoded0 = [LakeFormationClientTypes.ColumnLFTag]()
            for structure0 in lFTagsOnColumnsContainer {
                if let structure0 = structure0 {
                    lFTagsOnColumnsDecoded0?.append(structure0)
                }
            }
        }
        lFTagsOnColumns = lFTagsOnColumnsDecoded0
    }
}
