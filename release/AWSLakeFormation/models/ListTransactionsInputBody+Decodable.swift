// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTransactionsInputBody: Swift.Equatable {
    let catalogId: Swift.String?
    let statusFilter: LakeFormationClientTypes.TransactionStatusFilter?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension ListTransactionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case catalogId = "CatalogId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case statusFilter = "StatusFilter"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let statusFilterDecoded = try containerValues.decodeIfPresent(LakeFormationClientTypes.TransactionStatusFilter.self, forKey: .statusFilter)
        statusFilter = statusFilterDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
