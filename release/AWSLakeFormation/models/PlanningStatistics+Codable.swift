// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LakeFormationClientTypes.PlanningStatistics: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case estimatedDataToScanBytes = "EstimatedDataToScanBytes"
        case planningTimeMillis = "PlanningTimeMillis"
        case queueTimeMillis = "QueueTimeMillis"
        case workUnitsGeneratedCount = "WorkUnitsGeneratedCount"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if estimatedDataToScanBytes != 0 {
            try encodeContainer.encode(estimatedDataToScanBytes, forKey: .estimatedDataToScanBytes)
        }
        if planningTimeMillis != 0 {
            try encodeContainer.encode(planningTimeMillis, forKey: .planningTimeMillis)
        }
        if queueTimeMillis != 0 {
            try encodeContainer.encode(queueTimeMillis, forKey: .queueTimeMillis)
        }
        if workUnitsGeneratedCount != 0 {
            try encodeContainer.encode(workUnitsGeneratedCount, forKey: .workUnitsGeneratedCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let estimatedDataToScanBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .estimatedDataToScanBytes) ?? 0
        estimatedDataToScanBytes = estimatedDataToScanBytesDecoded
        let planningTimeMillisDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .planningTimeMillis) ?? 0
        planningTimeMillis = planningTimeMillisDecoded
        let queueTimeMillisDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .queueTimeMillis) ?? 0
        queueTimeMillis = queueTimeMillisDecoded
        let workUnitsGeneratedCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .workUnitsGeneratedCount) ?? 0
        workUnitsGeneratedCount = workUnitsGeneratedCountDecoded
    }
}
