// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeWorkflowExecutionOutputResponseBody: Swift.Equatable {
    let executionInfo: SwfClientTypes.WorkflowExecutionInfo?
    let executionConfiguration: SwfClientTypes.WorkflowExecutionConfiguration?
    let openCounts: SwfClientTypes.WorkflowExecutionOpenCounts?
    let latestActivityTaskTimestamp: ClientRuntime.Date?
    let latestExecutionContext: Swift.String?
}

extension DescribeWorkflowExecutionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case executionConfiguration
        case executionInfo
        case latestActivityTaskTimestamp
        case latestExecutionContext
        case openCounts
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionInfoDecoded = try containerValues.decodeIfPresent(SwfClientTypes.WorkflowExecutionInfo.self, forKey: .executionInfo)
        executionInfo = executionInfoDecoded
        let executionConfigurationDecoded = try containerValues.decodeIfPresent(SwfClientTypes.WorkflowExecutionConfiguration.self, forKey: .executionConfiguration)
        executionConfiguration = executionConfigurationDecoded
        let openCountsDecoded = try containerValues.decodeIfPresent(SwfClientTypes.WorkflowExecutionOpenCounts.self, forKey: .openCounts)
        openCounts = openCountsDecoded
        let latestActivityTaskTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .latestActivityTaskTimestamp)
        latestActivityTaskTimestamp = latestActivityTaskTimestampDecoded
        let latestExecutionContextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .latestExecutionContext)
        latestExecutionContext = latestExecutionContextDecoded
    }
}
