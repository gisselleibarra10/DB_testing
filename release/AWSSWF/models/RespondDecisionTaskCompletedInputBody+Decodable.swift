// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RespondDecisionTaskCompletedInputBody: Swift.Equatable {
    let taskToken: Swift.String?
    let decisions: [SwfClientTypes.Decision]?
    let executionContext: Swift.String?
}

extension RespondDecisionTaskCompletedInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case decisions
        case executionContext
        case taskToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskToken)
        taskToken = taskTokenDecoded
        let decisionsContainer = try containerValues.decodeIfPresent([SwfClientTypes.Decision?].self, forKey: .decisions)
        var decisionsDecoded0:[SwfClientTypes.Decision]? = nil
        if let decisionsContainer = decisionsContainer {
            decisionsDecoded0 = [SwfClientTypes.Decision]()
            for structure0 in decisionsContainer {
                if let structure0 = structure0 {
                    decisionsDecoded0?.append(structure0)
                }
            }
        }
        decisions = decisionsDecoded0
        let executionContextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executionContext)
        executionContext = executionContextDecoded
    }
}
