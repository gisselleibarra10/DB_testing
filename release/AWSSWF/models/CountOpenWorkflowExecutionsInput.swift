// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CountOpenWorkflowExecutionsInput: Swift.Equatable {
    /// The name of the domain containing the workflow executions to count.
    /// This member is required.
    public var domain: Swift.String?
    /// If specified, only workflow executions matching the WorkflowId in the filter are counted. executionFilter, typeFilter and tagFilter are mutually exclusive. You can specify at most one of these in a request.
    public var executionFilter: SwfClientTypes.WorkflowExecutionFilter?
    /// Specifies the start time criteria that workflow executions must meet in order to be counted.
    /// This member is required.
    public var startTimeFilter: SwfClientTypes.ExecutionTimeFilter?
    /// If specified, only executions that have a tag that matches the filter are counted. executionFilter, typeFilter and tagFilter are mutually exclusive. You can specify at most one of these in a request.
    public var tagFilter: SwfClientTypes.TagFilter?
    /// Specifies the type of the workflow executions to be counted. executionFilter, typeFilter and tagFilter are mutually exclusive. You can specify at most one of these in a request.
    public var typeFilter: SwfClientTypes.WorkflowTypeFilter?

    public init (
        domain: Swift.String? = nil,
        executionFilter: SwfClientTypes.WorkflowExecutionFilter? = nil,
        startTimeFilter: SwfClientTypes.ExecutionTimeFilter? = nil,
        tagFilter: SwfClientTypes.TagFilter? = nil,
        typeFilter: SwfClientTypes.WorkflowTypeFilter? = nil
    )
    {
        self.domain = domain
        self.executionFilter = executionFilter
        self.startTimeFilter = startTimeFilter
        self.tagFilter = tagFilter
        self.typeFilter = typeFilter
    }
}
