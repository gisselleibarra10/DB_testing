// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PollForDecisionTaskInputBody: Swift.Equatable {
    let domain: Swift.String?
    let taskList: SwfClientTypes.TaskList?
    let identity: Swift.String?
    let nextPageToken: Swift.String?
    let maximumPageSize: Swift.Int
    let reverseOrder: Swift.Bool
}

extension PollForDecisionTaskInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domain
        case identity
        case maximumPageSize
        case nextPageToken
        case reverseOrder
        case taskList
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domain)
        domain = domainDecoded
        let taskListDecoded = try containerValues.decodeIfPresent(SwfClientTypes.TaskList.self, forKey: .taskList)
        taskList = taskListDecoded
        let identityDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identity)
        identity = identityDecoded
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
        let maximumPageSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maximumPageSize) ?? 0
        maximumPageSize = maximumPageSizeDecoded
        let reverseOrderDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .reverseOrder) ?? false
        reverseOrder = reverseOrderDecoded
    }
}
