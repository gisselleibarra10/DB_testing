// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SwfClientTypes.WorkflowExecutionCancelRequestedEventAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cause
        case externalInitiatedEventId
        case externalWorkflowExecution
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cause = self.cause {
            try encodeContainer.encode(cause.rawValue, forKey: .cause)
        }
        if externalInitiatedEventId != 0 {
            try encodeContainer.encode(externalInitiatedEventId, forKey: .externalInitiatedEventId)
        }
        if let externalWorkflowExecution = self.externalWorkflowExecution {
            try encodeContainer.encode(externalWorkflowExecution, forKey: .externalWorkflowExecution)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let externalWorkflowExecutionDecoded = try containerValues.decodeIfPresent(SwfClientTypes.WorkflowExecution.self, forKey: .externalWorkflowExecution)
        externalWorkflowExecution = externalWorkflowExecutionDecoded
        let externalInitiatedEventIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .externalInitiatedEventId) ?? 0
        externalInitiatedEventId = externalInitiatedEventIdDecoded
        let causeDecoded = try containerValues.decodeIfPresent(SwfClientTypes.WorkflowExecutionCancelRequestedCause.self, forKey: .cause)
        cause = causeDecoded
    }
}
