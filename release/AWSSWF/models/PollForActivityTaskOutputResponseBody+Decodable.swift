// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PollForActivityTaskOutputResponseBody: Swift.Equatable {
    let taskToken: Swift.String?
    let activityId: Swift.String?
    let startedEventId: Swift.Int
    let workflowExecution: SwfClientTypes.WorkflowExecution?
    let activityType: SwfClientTypes.ActivityType?
    let input: Swift.String?
}

extension PollForActivityTaskOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activityId
        case activityType
        case input
        case startedEventId
        case taskToken
        case workflowExecution
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskToken)
        taskToken = taskTokenDecoded
        let activityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .activityId)
        activityId = activityIdDecoded
        let startedEventIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .startedEventId) ?? 0
        startedEventId = startedEventIdDecoded
        let workflowExecutionDecoded = try containerValues.decodeIfPresent(SwfClientTypes.WorkflowExecution.self, forKey: .workflowExecution)
        workflowExecution = workflowExecutionDecoded
        let activityTypeDecoded = try containerValues.decodeIfPresent(SwfClientTypes.ActivityType.self, forKey: .activityType)
        activityType = activityTypeDecoded
        let inputDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .input)
        input = inputDecoded
    }
}
