// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SwfClientTypes {
    /// The configuration settings for a workflow execution including timeout values, tasklist etc. These configuration settings are determined from the defaults specified when registering the workflow type and those specified when starting the workflow execution.
    public struct WorkflowExecutionConfiguration: Swift.Equatable {
        /// The policy to use for the child workflow executions if this workflow execution is terminated, by calling the [TerminateWorkflowExecution] action explicitly or due to an expired timeout. The supported child policies are:
        ///
        /// * TERMINATE – The child executions are terminated.
        ///
        /// * REQUEST_CANCEL – A request to cancel is attempted for each child execution by recording a WorkflowExecutionCancelRequested event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.
        ///
        /// * ABANDON – No action is taken. The child executions continue to run.
        /// This member is required.
        public var childPolicy: SwfClientTypes.ChildPolicy?
        /// The total duration for this workflow execution. The duration is specified in seconds, an integer greater than or equal to 0. You can use NONE to specify unlimited duration.
        /// This member is required.
        public var executionStartToCloseTimeout: Swift.String?
        /// The IAM role attached to the child workflow execution.
        public var lambdaRole: Swift.String?
        /// The task list used for the decision tasks generated for this workflow execution.
        /// This member is required.
        public var taskList: SwfClientTypes.TaskList?
        /// The priority assigned to decision tasks for this workflow execution. Valid values are integers that range from Java's Integer.MIN_VALUE (-2147483648) to Integer.MAX_VALUE (2147483647). Higher numbers indicate higher priority. For more information about setting task priority, see [Setting Task Priority](https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html) in the Amazon SWF Developer Guide.
        public var taskPriority: Swift.String?
        /// The maximum duration allowed for decision tasks for this workflow execution. The duration is specified in seconds, an integer greater than or equal to 0. You can use NONE to specify unlimited duration.
        /// This member is required.
        public var taskStartToCloseTimeout: Swift.String?

        public init (
            childPolicy: SwfClientTypes.ChildPolicy? = nil,
            executionStartToCloseTimeout: Swift.String? = nil,
            lambdaRole: Swift.String? = nil,
            taskList: SwfClientTypes.TaskList? = nil,
            taskPriority: Swift.String? = nil,
            taskStartToCloseTimeout: Swift.String? = nil
        )
        {
            self.childPolicy = childPolicy
            self.executionStartToCloseTimeout = executionStartToCloseTimeout
            self.lambdaRole = lambdaRole
            self.taskList = taskList
            self.taskPriority = taskPriority
            self.taskStartToCloseTimeout = taskStartToCloseTimeout
        }
    }

}
