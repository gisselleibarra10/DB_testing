// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SwfClientTypes {
    /// Event within a workflow execution. A history event can be one of these types:
    ///
    /// * ActivityTaskCancelRequested – A RequestCancelActivityTask decision was received by the system.
    ///
    /// * ActivityTaskCanceled – The activity task was successfully canceled.
    ///
    /// * ActivityTaskCompleted – An activity worker successfully completed an activity task by calling [RespondActivityTaskCompleted].
    ///
    /// * ActivityTaskFailed – An activity worker failed an activity task by calling [RespondActivityTaskFailed].
    ///
    /// * ActivityTaskScheduled – An activity task was scheduled for execution.
    ///
    /// * ActivityTaskStarted – The scheduled activity task was dispatched to a worker.
    ///
    /// * ActivityTaskTimedOut – The activity task timed out.
    ///
    /// * CancelTimerFailed – Failed to process CancelTimer decision. This happens when the decision isn't configured properly, for example no timer exists with the specified timer Id.
    ///
    /// * CancelWorkflowExecutionFailed – A request to cancel a workflow execution failed.
    ///
    /// * ChildWorkflowExecutionCanceled – A child workflow execution, started by this workflow execution, was canceled and closed.
    ///
    /// * ChildWorkflowExecutionCompleted – A child workflow execution, started by this workflow execution, completed successfully and was closed.
    ///
    /// * ChildWorkflowExecutionFailed – A child workflow execution, started by this workflow execution, failed to complete successfully and was closed.
    ///
    /// * ChildWorkflowExecutionStarted – A child workflow execution was successfully started.
    ///
    /// * ChildWorkflowExecutionTerminated – A child workflow execution, started by this workflow execution, was terminated.
    ///
    /// * ChildWorkflowExecutionTimedOut – A child workflow execution, started by this workflow execution, timed out and was closed.
    ///
    /// * CompleteWorkflowExecutionFailed – The workflow execution failed to complete.
    ///
    /// * ContinueAsNewWorkflowExecutionFailed – The workflow execution failed to complete after being continued as a new workflow execution.
    ///
    /// * DecisionTaskCompleted – The decider successfully completed a decision task by calling [RespondDecisionTaskCompleted].
    ///
    /// * DecisionTaskScheduled – A decision task was scheduled for the workflow execution.
    ///
    /// * DecisionTaskStarted – The decision task was dispatched to a decider.
    ///
    /// * DecisionTaskTimedOut – The decision task timed out.
    ///
    /// * ExternalWorkflowExecutionCancelRequested – Request to cancel an external workflow execution was successfully delivered to the target execution.
    ///
    /// * ExternalWorkflowExecutionSignaled – A signal, requested by this workflow execution, was successfully delivered to the target external workflow execution.
    ///
    /// * FailWorkflowExecutionFailed – A request to mark a workflow execution as failed, itself failed.
    ///
    /// * MarkerRecorded – A marker was recorded in the workflow history as the result of a RecordMarker decision.
    ///
    /// * RecordMarkerFailed – A RecordMarker decision was returned as failed.
    ///
    /// * RequestCancelActivityTaskFailed – Failed to process RequestCancelActivityTask decision. This happens when the decision isn't configured properly.
    ///
    /// * RequestCancelExternalWorkflowExecutionFailed – Request to cancel an external workflow execution failed.
    ///
    /// * RequestCancelExternalWorkflowExecutionInitiated – A request was made to request the cancellation of an external workflow execution.
    ///
    /// * ScheduleActivityTaskFailed – Failed to process ScheduleActivityTask decision. This happens when the decision isn't configured properly, for example the activity type specified isn't registered.
    ///
    /// * SignalExternalWorkflowExecutionFailed – The request to signal an external workflow execution failed.
    ///
    /// * SignalExternalWorkflowExecutionInitiated – A request to signal an external workflow was made.
    ///
    /// * StartActivityTaskFailed – A scheduled activity task failed to start.
    ///
    /// * StartChildWorkflowExecutionFailed – Failed to process StartChildWorkflowExecution decision. This happens when the decision isn't configured properly, for example the workflow type specified isn't registered.
    ///
    /// * StartChildWorkflowExecutionInitiated – A request was made to start a child workflow execution.
    ///
    /// * StartTimerFailed – Failed to process StartTimer decision. This happens when the decision isn't configured properly, for example a timer already exists with the specified timer Id.
    ///
    /// * TimerCanceled – A timer, previously started for this workflow execution, was successfully canceled.
    ///
    /// * TimerFired – A timer, previously started for this workflow execution, fired.
    ///
    /// * TimerStarted – A timer was started for the workflow execution due to a StartTimer decision.
    ///
    /// * WorkflowExecutionCancelRequested – A request to cancel this workflow execution was made.
    ///
    /// * WorkflowExecutionCanceled – The workflow execution was successfully canceled and closed.
    ///
    /// * WorkflowExecutionCompleted – The workflow execution was closed due to successful completion.
    ///
    /// * WorkflowExecutionContinuedAsNew – The workflow execution was closed and a new execution of the same type was created with the same workflowId.
    ///
    /// * WorkflowExecutionFailed – The workflow execution closed due to a failure.
    ///
    /// * WorkflowExecutionSignaled – An external signal was received for the workflow execution.
    ///
    /// * WorkflowExecutionStarted – The workflow execution was started.
    ///
    /// * WorkflowExecutionTerminated – The workflow execution was terminated.
    ///
    /// * WorkflowExecutionTimedOut – The workflow execution was closed because a time out was exceeded.
    public struct HistoryEvent: Swift.Equatable {
        /// If the event is of type ActivityTaskcancelRequested then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var activityTaskCancelRequestedEventAttributes: SwfClientTypes.ActivityTaskCancelRequestedEventAttributes?
        /// If the event is of type ActivityTaskCanceled then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var activityTaskCanceledEventAttributes: SwfClientTypes.ActivityTaskCanceledEventAttributes?
        /// If the event is of type ActivityTaskCompleted then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var activityTaskCompletedEventAttributes: SwfClientTypes.ActivityTaskCompletedEventAttributes?
        /// If the event is of type ActivityTaskFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var activityTaskFailedEventAttributes: SwfClientTypes.ActivityTaskFailedEventAttributes?
        /// If the event is of type ActivityTaskScheduled then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var activityTaskScheduledEventAttributes: SwfClientTypes.ActivityTaskScheduledEventAttributes?
        /// If the event is of type ActivityTaskStarted then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var activityTaskStartedEventAttributes: SwfClientTypes.ActivityTaskStartedEventAttributes?
        /// If the event is of type ActivityTaskTimedOut then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var activityTaskTimedOutEventAttributes: SwfClientTypes.ActivityTaskTimedOutEventAttributes?
        /// If the event is of type CancelTimerFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var cancelTimerFailedEventAttributes: SwfClientTypes.CancelTimerFailedEventAttributes?
        /// If the event is of type CancelWorkflowExecutionFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var cancelWorkflowExecutionFailedEventAttributes: SwfClientTypes.CancelWorkflowExecutionFailedEventAttributes?
        /// If the event is of type ChildWorkflowExecutionCanceled then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var childWorkflowExecutionCanceledEventAttributes: SwfClientTypes.ChildWorkflowExecutionCanceledEventAttributes?
        /// If the event is of type ChildWorkflowExecutionCompleted then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var childWorkflowExecutionCompletedEventAttributes: SwfClientTypes.ChildWorkflowExecutionCompletedEventAttributes?
        /// If the event is of type ChildWorkflowExecutionFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var childWorkflowExecutionFailedEventAttributes: SwfClientTypes.ChildWorkflowExecutionFailedEventAttributes?
        /// If the event is of type ChildWorkflowExecutionStarted then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var childWorkflowExecutionStartedEventAttributes: SwfClientTypes.ChildWorkflowExecutionStartedEventAttributes?
        /// If the event is of type ChildWorkflowExecutionTerminated then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var childWorkflowExecutionTerminatedEventAttributes: SwfClientTypes.ChildWorkflowExecutionTerminatedEventAttributes?
        /// If the event is of type ChildWorkflowExecutionTimedOut then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var childWorkflowExecutionTimedOutEventAttributes: SwfClientTypes.ChildWorkflowExecutionTimedOutEventAttributes?
        /// If the event is of type CompleteWorkflowExecutionFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var completeWorkflowExecutionFailedEventAttributes: SwfClientTypes.CompleteWorkflowExecutionFailedEventAttributes?
        /// If the event is of type ContinueAsNewWorkflowExecutionFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var continueAsNewWorkflowExecutionFailedEventAttributes: SwfClientTypes.ContinueAsNewWorkflowExecutionFailedEventAttributes?
        /// If the event is of type DecisionTaskCompleted then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var decisionTaskCompletedEventAttributes: SwfClientTypes.DecisionTaskCompletedEventAttributes?
        /// If the event is of type DecisionTaskScheduled then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var decisionTaskScheduledEventAttributes: SwfClientTypes.DecisionTaskScheduledEventAttributes?
        /// If the event is of type DecisionTaskStarted then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var decisionTaskStartedEventAttributes: SwfClientTypes.DecisionTaskStartedEventAttributes?
        /// If the event is of type DecisionTaskTimedOut then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var decisionTaskTimedOutEventAttributes: SwfClientTypes.DecisionTaskTimedOutEventAttributes?
        /// The system generated ID of the event. This ID uniquely identifies the event with in the workflow execution history.
        /// This member is required.
        public var eventId: Swift.Int
        /// The date and time when the event occurred.
        /// This member is required.
        public var eventTimestamp: ClientRuntime.Date?
        /// The type of the history event.
        /// This member is required.
        public var eventType: SwfClientTypes.EventType?
        /// If the event is of type ExternalWorkflowExecutionCancelRequested then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var externalWorkflowExecutionCancelRequestedEventAttributes: SwfClientTypes.ExternalWorkflowExecutionCancelRequestedEventAttributes?
        /// If the event is of type ExternalWorkflowExecutionSignaled then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var externalWorkflowExecutionSignaledEventAttributes: SwfClientTypes.ExternalWorkflowExecutionSignaledEventAttributes?
        /// If the event is of type FailWorkflowExecutionFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var failWorkflowExecutionFailedEventAttributes: SwfClientTypes.FailWorkflowExecutionFailedEventAttributes?
        /// Provides the details of the LambdaFunctionCompleted event. It isn't set for other event types.
        public var lambdaFunctionCompletedEventAttributes: SwfClientTypes.LambdaFunctionCompletedEventAttributes?
        /// Provides the details of the LambdaFunctionFailed event. It isn't set for other event types.
        public var lambdaFunctionFailedEventAttributes: SwfClientTypes.LambdaFunctionFailedEventAttributes?
        /// Provides the details of the LambdaFunctionScheduled event. It isn't set for other event types.
        public var lambdaFunctionScheduledEventAttributes: SwfClientTypes.LambdaFunctionScheduledEventAttributes?
        /// Provides the details of the LambdaFunctionStarted event. It isn't set for other event types.
        public var lambdaFunctionStartedEventAttributes: SwfClientTypes.LambdaFunctionStartedEventAttributes?
        /// Provides the details of the LambdaFunctionTimedOut event. It isn't set for other event types.
        public var lambdaFunctionTimedOutEventAttributes: SwfClientTypes.LambdaFunctionTimedOutEventAttributes?
        /// If the event is of type MarkerRecorded then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var markerRecordedEventAttributes: SwfClientTypes.MarkerRecordedEventAttributes?
        /// If the event is of type DecisionTaskFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var recordMarkerFailedEventAttributes: SwfClientTypes.RecordMarkerFailedEventAttributes?
        /// If the event is of type RequestCancelActivityTaskFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var requestCancelActivityTaskFailedEventAttributes: SwfClientTypes.RequestCancelActivityTaskFailedEventAttributes?
        /// If the event is of type RequestCancelExternalWorkflowExecutionFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var requestCancelExternalWorkflowExecutionFailedEventAttributes: SwfClientTypes.RequestCancelExternalWorkflowExecutionFailedEventAttributes?
        /// If the event is of type RequestCancelExternalWorkflowExecutionInitiated then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var requestCancelExternalWorkflowExecutionInitiatedEventAttributes: SwfClientTypes.RequestCancelExternalWorkflowExecutionInitiatedEventAttributes?
        /// If the event is of type ScheduleActivityTaskFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var scheduleActivityTaskFailedEventAttributes: SwfClientTypes.ScheduleActivityTaskFailedEventAttributes?
        /// Provides the details of the ScheduleLambdaFunctionFailed event. It isn't set for other event types.
        public var scheduleLambdaFunctionFailedEventAttributes: SwfClientTypes.ScheduleLambdaFunctionFailedEventAttributes?
        /// If the event is of type SignalExternalWorkflowExecutionFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var signalExternalWorkflowExecutionFailedEventAttributes: SwfClientTypes.SignalExternalWorkflowExecutionFailedEventAttributes?
        /// If the event is of type SignalExternalWorkflowExecutionInitiated then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var signalExternalWorkflowExecutionInitiatedEventAttributes: SwfClientTypes.SignalExternalWorkflowExecutionInitiatedEventAttributes?
        /// If the event is of type StartChildWorkflowExecutionFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var startChildWorkflowExecutionFailedEventAttributes: SwfClientTypes.StartChildWorkflowExecutionFailedEventAttributes?
        /// If the event is of type StartChildWorkflowExecutionInitiated then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var startChildWorkflowExecutionInitiatedEventAttributes: SwfClientTypes.StartChildWorkflowExecutionInitiatedEventAttributes?
        /// Provides the details of the StartLambdaFunctionFailed event. It isn't set for other event types.
        public var startLambdaFunctionFailedEventAttributes: SwfClientTypes.StartLambdaFunctionFailedEventAttributes?
        /// If the event is of type StartTimerFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var startTimerFailedEventAttributes: SwfClientTypes.StartTimerFailedEventAttributes?
        /// If the event is of type TimerCanceled then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var timerCanceledEventAttributes: SwfClientTypes.TimerCanceledEventAttributes?
        /// If the event is of type TimerFired then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var timerFiredEventAttributes: SwfClientTypes.TimerFiredEventAttributes?
        /// If the event is of type TimerStarted then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var timerStartedEventAttributes: SwfClientTypes.TimerStartedEventAttributes?
        /// If the event is of type WorkflowExecutionCancelRequested then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var workflowExecutionCancelRequestedEventAttributes: SwfClientTypes.WorkflowExecutionCancelRequestedEventAttributes?
        /// If the event is of type WorkflowExecutionCanceled then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var workflowExecutionCanceledEventAttributes: SwfClientTypes.WorkflowExecutionCanceledEventAttributes?
        /// If the event is of type WorkflowExecutionCompleted then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var workflowExecutionCompletedEventAttributes: SwfClientTypes.WorkflowExecutionCompletedEventAttributes?
        /// If the event is of type WorkflowExecutionContinuedAsNew then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var workflowExecutionContinuedAsNewEventAttributes: SwfClientTypes.WorkflowExecutionContinuedAsNewEventAttributes?
        /// If the event is of type WorkflowExecutionFailed then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var workflowExecutionFailedEventAttributes: SwfClientTypes.WorkflowExecutionFailedEventAttributes?
        /// If the event is of type WorkflowExecutionSignaled then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var workflowExecutionSignaledEventAttributes: SwfClientTypes.WorkflowExecutionSignaledEventAttributes?
        /// If the event is of type WorkflowExecutionStarted then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var workflowExecutionStartedEventAttributes: SwfClientTypes.WorkflowExecutionStartedEventAttributes?
        /// If the event is of type WorkflowExecutionTerminated then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var workflowExecutionTerminatedEventAttributes: SwfClientTypes.WorkflowExecutionTerminatedEventAttributes?
        /// If the event is of type WorkflowExecutionTimedOut then this member is set and provides detailed information about the event. It isn't set for other event types.
        public var workflowExecutionTimedOutEventAttributes: SwfClientTypes.WorkflowExecutionTimedOutEventAttributes?

        public init (
            activityTaskCancelRequestedEventAttributes: SwfClientTypes.ActivityTaskCancelRequestedEventAttributes? = nil,
            activityTaskCanceledEventAttributes: SwfClientTypes.ActivityTaskCanceledEventAttributes? = nil,
            activityTaskCompletedEventAttributes: SwfClientTypes.ActivityTaskCompletedEventAttributes? = nil,
            activityTaskFailedEventAttributes: SwfClientTypes.ActivityTaskFailedEventAttributes? = nil,
            activityTaskScheduledEventAttributes: SwfClientTypes.ActivityTaskScheduledEventAttributes? = nil,
            activityTaskStartedEventAttributes: SwfClientTypes.ActivityTaskStartedEventAttributes? = nil,
            activityTaskTimedOutEventAttributes: SwfClientTypes.ActivityTaskTimedOutEventAttributes? = nil,
            cancelTimerFailedEventAttributes: SwfClientTypes.CancelTimerFailedEventAttributes? = nil,
            cancelWorkflowExecutionFailedEventAttributes: SwfClientTypes.CancelWorkflowExecutionFailedEventAttributes? = nil,
            childWorkflowExecutionCanceledEventAttributes: SwfClientTypes.ChildWorkflowExecutionCanceledEventAttributes? = nil,
            childWorkflowExecutionCompletedEventAttributes: SwfClientTypes.ChildWorkflowExecutionCompletedEventAttributes? = nil,
            childWorkflowExecutionFailedEventAttributes: SwfClientTypes.ChildWorkflowExecutionFailedEventAttributes? = nil,
            childWorkflowExecutionStartedEventAttributes: SwfClientTypes.ChildWorkflowExecutionStartedEventAttributes? = nil,
            childWorkflowExecutionTerminatedEventAttributes: SwfClientTypes.ChildWorkflowExecutionTerminatedEventAttributes? = nil,
            childWorkflowExecutionTimedOutEventAttributes: SwfClientTypes.ChildWorkflowExecutionTimedOutEventAttributes? = nil,
            completeWorkflowExecutionFailedEventAttributes: SwfClientTypes.CompleteWorkflowExecutionFailedEventAttributes? = nil,
            continueAsNewWorkflowExecutionFailedEventAttributes: SwfClientTypes.ContinueAsNewWorkflowExecutionFailedEventAttributes? = nil,
            decisionTaskCompletedEventAttributes: SwfClientTypes.DecisionTaskCompletedEventAttributes? = nil,
            decisionTaskScheduledEventAttributes: SwfClientTypes.DecisionTaskScheduledEventAttributes? = nil,
            decisionTaskStartedEventAttributes: SwfClientTypes.DecisionTaskStartedEventAttributes? = nil,
            decisionTaskTimedOutEventAttributes: SwfClientTypes.DecisionTaskTimedOutEventAttributes? = nil,
            eventId: Swift.Int = 0,
            eventTimestamp: ClientRuntime.Date? = nil,
            eventType: SwfClientTypes.EventType? = nil,
            externalWorkflowExecutionCancelRequestedEventAttributes: SwfClientTypes.ExternalWorkflowExecutionCancelRequestedEventAttributes? = nil,
            externalWorkflowExecutionSignaledEventAttributes: SwfClientTypes.ExternalWorkflowExecutionSignaledEventAttributes? = nil,
            failWorkflowExecutionFailedEventAttributes: SwfClientTypes.FailWorkflowExecutionFailedEventAttributes? = nil,
            lambdaFunctionCompletedEventAttributes: SwfClientTypes.LambdaFunctionCompletedEventAttributes? = nil,
            lambdaFunctionFailedEventAttributes: SwfClientTypes.LambdaFunctionFailedEventAttributes? = nil,
            lambdaFunctionScheduledEventAttributes: SwfClientTypes.LambdaFunctionScheduledEventAttributes? = nil,
            lambdaFunctionStartedEventAttributes: SwfClientTypes.LambdaFunctionStartedEventAttributes? = nil,
            lambdaFunctionTimedOutEventAttributes: SwfClientTypes.LambdaFunctionTimedOutEventAttributes? = nil,
            markerRecordedEventAttributes: SwfClientTypes.MarkerRecordedEventAttributes? = nil,
            recordMarkerFailedEventAttributes: SwfClientTypes.RecordMarkerFailedEventAttributes? = nil,
            requestCancelActivityTaskFailedEventAttributes: SwfClientTypes.RequestCancelActivityTaskFailedEventAttributes? = nil,
            requestCancelExternalWorkflowExecutionFailedEventAttributes: SwfClientTypes.RequestCancelExternalWorkflowExecutionFailedEventAttributes? = nil,
            requestCancelExternalWorkflowExecutionInitiatedEventAttributes: SwfClientTypes.RequestCancelExternalWorkflowExecutionInitiatedEventAttributes? = nil,
            scheduleActivityTaskFailedEventAttributes: SwfClientTypes.ScheduleActivityTaskFailedEventAttributes? = nil,
            scheduleLambdaFunctionFailedEventAttributes: SwfClientTypes.ScheduleLambdaFunctionFailedEventAttributes? = nil,
            signalExternalWorkflowExecutionFailedEventAttributes: SwfClientTypes.SignalExternalWorkflowExecutionFailedEventAttributes? = nil,
            signalExternalWorkflowExecutionInitiatedEventAttributes: SwfClientTypes.SignalExternalWorkflowExecutionInitiatedEventAttributes? = nil,
            startChildWorkflowExecutionFailedEventAttributes: SwfClientTypes.StartChildWorkflowExecutionFailedEventAttributes? = nil,
            startChildWorkflowExecutionInitiatedEventAttributes: SwfClientTypes.StartChildWorkflowExecutionInitiatedEventAttributes? = nil,
            startLambdaFunctionFailedEventAttributes: SwfClientTypes.StartLambdaFunctionFailedEventAttributes? = nil,
            startTimerFailedEventAttributes: SwfClientTypes.StartTimerFailedEventAttributes? = nil,
            timerCanceledEventAttributes: SwfClientTypes.TimerCanceledEventAttributes? = nil,
            timerFiredEventAttributes: SwfClientTypes.TimerFiredEventAttributes? = nil,
            timerStartedEventAttributes: SwfClientTypes.TimerStartedEventAttributes? = nil,
            workflowExecutionCancelRequestedEventAttributes: SwfClientTypes.WorkflowExecutionCancelRequestedEventAttributes? = nil,
            workflowExecutionCanceledEventAttributes: SwfClientTypes.WorkflowExecutionCanceledEventAttributes? = nil,
            workflowExecutionCompletedEventAttributes: SwfClientTypes.WorkflowExecutionCompletedEventAttributes? = nil,
            workflowExecutionContinuedAsNewEventAttributes: SwfClientTypes.WorkflowExecutionContinuedAsNewEventAttributes? = nil,
            workflowExecutionFailedEventAttributes: SwfClientTypes.WorkflowExecutionFailedEventAttributes? = nil,
            workflowExecutionSignaledEventAttributes: SwfClientTypes.WorkflowExecutionSignaledEventAttributes? = nil,
            workflowExecutionStartedEventAttributes: SwfClientTypes.WorkflowExecutionStartedEventAttributes? = nil,
            workflowExecutionTerminatedEventAttributes: SwfClientTypes.WorkflowExecutionTerminatedEventAttributes? = nil,
            workflowExecutionTimedOutEventAttributes: SwfClientTypes.WorkflowExecutionTimedOutEventAttributes? = nil
        )
        {
            self.activityTaskCancelRequestedEventAttributes = activityTaskCancelRequestedEventAttributes
            self.activityTaskCanceledEventAttributes = activityTaskCanceledEventAttributes
            self.activityTaskCompletedEventAttributes = activityTaskCompletedEventAttributes
            self.activityTaskFailedEventAttributes = activityTaskFailedEventAttributes
            self.activityTaskScheduledEventAttributes = activityTaskScheduledEventAttributes
            self.activityTaskStartedEventAttributes = activityTaskStartedEventAttributes
            self.activityTaskTimedOutEventAttributes = activityTaskTimedOutEventAttributes
            self.cancelTimerFailedEventAttributes = cancelTimerFailedEventAttributes
            self.cancelWorkflowExecutionFailedEventAttributes = cancelWorkflowExecutionFailedEventAttributes
            self.childWorkflowExecutionCanceledEventAttributes = childWorkflowExecutionCanceledEventAttributes
            self.childWorkflowExecutionCompletedEventAttributes = childWorkflowExecutionCompletedEventAttributes
            self.childWorkflowExecutionFailedEventAttributes = childWorkflowExecutionFailedEventAttributes
            self.childWorkflowExecutionStartedEventAttributes = childWorkflowExecutionStartedEventAttributes
            self.childWorkflowExecutionTerminatedEventAttributes = childWorkflowExecutionTerminatedEventAttributes
            self.childWorkflowExecutionTimedOutEventAttributes = childWorkflowExecutionTimedOutEventAttributes
            self.completeWorkflowExecutionFailedEventAttributes = completeWorkflowExecutionFailedEventAttributes
            self.continueAsNewWorkflowExecutionFailedEventAttributes = continueAsNewWorkflowExecutionFailedEventAttributes
            self.decisionTaskCompletedEventAttributes = decisionTaskCompletedEventAttributes
            self.decisionTaskScheduledEventAttributes = decisionTaskScheduledEventAttributes
            self.decisionTaskStartedEventAttributes = decisionTaskStartedEventAttributes
            self.decisionTaskTimedOutEventAttributes = decisionTaskTimedOutEventAttributes
            self.eventId = eventId
            self.eventTimestamp = eventTimestamp
            self.eventType = eventType
            self.externalWorkflowExecutionCancelRequestedEventAttributes = externalWorkflowExecutionCancelRequestedEventAttributes
            self.externalWorkflowExecutionSignaledEventAttributes = externalWorkflowExecutionSignaledEventAttributes
            self.failWorkflowExecutionFailedEventAttributes = failWorkflowExecutionFailedEventAttributes
            self.lambdaFunctionCompletedEventAttributes = lambdaFunctionCompletedEventAttributes
            self.lambdaFunctionFailedEventAttributes = lambdaFunctionFailedEventAttributes
            self.lambdaFunctionScheduledEventAttributes = lambdaFunctionScheduledEventAttributes
            self.lambdaFunctionStartedEventAttributes = lambdaFunctionStartedEventAttributes
            self.lambdaFunctionTimedOutEventAttributes = lambdaFunctionTimedOutEventAttributes
            self.markerRecordedEventAttributes = markerRecordedEventAttributes
            self.recordMarkerFailedEventAttributes = recordMarkerFailedEventAttributes
            self.requestCancelActivityTaskFailedEventAttributes = requestCancelActivityTaskFailedEventAttributes
            self.requestCancelExternalWorkflowExecutionFailedEventAttributes = requestCancelExternalWorkflowExecutionFailedEventAttributes
            self.requestCancelExternalWorkflowExecutionInitiatedEventAttributes = requestCancelExternalWorkflowExecutionInitiatedEventAttributes
            self.scheduleActivityTaskFailedEventAttributes = scheduleActivityTaskFailedEventAttributes
            self.scheduleLambdaFunctionFailedEventAttributes = scheduleLambdaFunctionFailedEventAttributes
            self.signalExternalWorkflowExecutionFailedEventAttributes = signalExternalWorkflowExecutionFailedEventAttributes
            self.signalExternalWorkflowExecutionInitiatedEventAttributes = signalExternalWorkflowExecutionInitiatedEventAttributes
            self.startChildWorkflowExecutionFailedEventAttributes = startChildWorkflowExecutionFailedEventAttributes
            self.startChildWorkflowExecutionInitiatedEventAttributes = startChildWorkflowExecutionInitiatedEventAttributes
            self.startLambdaFunctionFailedEventAttributes = startLambdaFunctionFailedEventAttributes
            self.startTimerFailedEventAttributes = startTimerFailedEventAttributes
            self.timerCanceledEventAttributes = timerCanceledEventAttributes
            self.timerFiredEventAttributes = timerFiredEventAttributes
            self.timerStartedEventAttributes = timerStartedEventAttributes
            self.workflowExecutionCancelRequestedEventAttributes = workflowExecutionCancelRequestedEventAttributes
            self.workflowExecutionCanceledEventAttributes = workflowExecutionCanceledEventAttributes
            self.workflowExecutionCompletedEventAttributes = workflowExecutionCompletedEventAttributes
            self.workflowExecutionContinuedAsNewEventAttributes = workflowExecutionContinuedAsNewEventAttributes
            self.workflowExecutionFailedEventAttributes = workflowExecutionFailedEventAttributes
            self.workflowExecutionSignaledEventAttributes = workflowExecutionSignaledEventAttributes
            self.workflowExecutionStartedEventAttributes = workflowExecutionStartedEventAttributes
            self.workflowExecutionTerminatedEventAttributes = workflowExecutionTerminatedEventAttributes
            self.workflowExecutionTimedOutEventAttributes = workflowExecutionTimedOutEventAttributes
        }
    }

}
