// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SwfClientTypes.RecordMarkerFailedEventAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cause
        case decisionTaskCompletedEventId
        case markerName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cause = self.cause {
            try encodeContainer.encode(cause.rawValue, forKey: .cause)
        }
        if decisionTaskCompletedEventId != 0 {
            try encodeContainer.encode(decisionTaskCompletedEventId, forKey: .decisionTaskCompletedEventId)
        }
        if let markerName = self.markerName {
            try encodeContainer.encode(markerName, forKey: .markerName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .markerName)
        markerName = markerNameDecoded
        let causeDecoded = try containerValues.decodeIfPresent(SwfClientTypes.RecordMarkerFailedCause.self, forKey: .cause)
        cause = causeDecoded
        let decisionTaskCompletedEventIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .decisionTaskCompletedEventId) ?? 0
        decisionTaskCompletedEventId = decisionTaskCompletedEventIdDecoded
    }
}
