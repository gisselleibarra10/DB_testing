// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SwfClientTypes.ChildWorkflowExecutionCompletedEventAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case initiatedEventId
        case result
        case startedEventId
        case workflowExecution
        case workflowType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if initiatedEventId != 0 {
            try encodeContainer.encode(initiatedEventId, forKey: .initiatedEventId)
        }
        if let result = self.result {
            try encodeContainer.encode(result, forKey: .result)
        }
        if startedEventId != 0 {
            try encodeContainer.encode(startedEventId, forKey: .startedEventId)
        }
        if let workflowExecution = self.workflowExecution {
            try encodeContainer.encode(workflowExecution, forKey: .workflowExecution)
        }
        if let workflowType = self.workflowType {
            try encodeContainer.encode(workflowType, forKey: .workflowType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workflowExecutionDecoded = try containerValues.decodeIfPresent(SwfClientTypes.WorkflowExecution.self, forKey: .workflowExecution)
        workflowExecution = workflowExecutionDecoded
        let workflowTypeDecoded = try containerValues.decodeIfPresent(SwfClientTypes.WorkflowType.self, forKey: .workflowType)
        workflowType = workflowTypeDecoded
        let resultDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .result)
        result = resultDecoded
        let initiatedEventIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .initiatedEventId) ?? 0
        initiatedEventId = initiatedEventIdDecoded
        let startedEventIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .startedEventId) ?? 0
        startedEventId = startedEventIdDecoded
    }
}
