// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainsOutputResponseBody: Swift.Equatable {
    let domainInfos: [SwfClientTypes.DomainInfo]?
    let nextPageToken: Swift.String?
}

extension ListDomainsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainInfos
        case nextPageToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainInfosContainer = try containerValues.decodeIfPresent([SwfClientTypes.DomainInfo?].self, forKey: .domainInfos)
        var domainInfosDecoded0:[SwfClientTypes.DomainInfo]? = nil
        if let domainInfosContainer = domainInfosContainer {
            domainInfosDecoded0 = [SwfClientTypes.DomainInfo]()
            for structure0 in domainInfosContainer {
                if let structure0 = structure0 {
                    domainInfosDecoded0?.append(structure0)
                }
            }
        }
        domainInfos = domainInfosDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
