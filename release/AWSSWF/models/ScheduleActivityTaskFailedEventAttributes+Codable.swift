// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SwfClientTypes.ScheduleActivityTaskFailedEventAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activityId
        case activityType
        case cause
        case decisionTaskCompletedEventId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let activityId = self.activityId {
            try encodeContainer.encode(activityId, forKey: .activityId)
        }
        if let activityType = self.activityType {
            try encodeContainer.encode(activityType, forKey: .activityType)
        }
        if let cause = self.cause {
            try encodeContainer.encode(cause.rawValue, forKey: .cause)
        }
        if decisionTaskCompletedEventId != 0 {
            try encodeContainer.encode(decisionTaskCompletedEventId, forKey: .decisionTaskCompletedEventId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activityTypeDecoded = try containerValues.decodeIfPresent(SwfClientTypes.ActivityType.self, forKey: .activityType)
        activityType = activityTypeDecoded
        let activityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .activityId)
        activityId = activityIdDecoded
        let causeDecoded = try containerValues.decodeIfPresent(SwfClientTypes.ScheduleActivityTaskFailedCause.self, forKey: .cause)
        cause = causeDecoded
        let decisionTaskCompletedEventIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .decisionTaskCompletedEventId) ?? 0
        decisionTaskCompletedEventId = decisionTaskCompletedEventIdDecoded
    }
}
