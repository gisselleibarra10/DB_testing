// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SwfClientTypes {
    /// Provides the details of the ChildWorkflowExecutionTimedOut event.
    public struct ChildWorkflowExecutionTimedOutEventAttributes: Swift.Equatable {
        /// The ID of the StartChildWorkflowExecutionInitiated event corresponding to the StartChildWorkflowExecution[Decision] to start this child workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.
        /// This member is required.
        public var initiatedEventId: Swift.Int
        /// The ID of the ChildWorkflowExecutionStarted event recorded when this child workflow execution was started. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.
        /// This member is required.
        public var startedEventId: Swift.Int
        /// The type of the timeout that caused the child workflow execution to time out.
        /// This member is required.
        public var timeoutType: SwfClientTypes.WorkflowExecutionTimeoutType?
        /// The child workflow execution that timed out.
        /// This member is required.
        public var workflowExecution: SwfClientTypes.WorkflowExecution?
        /// The type of the child workflow execution.
        /// This member is required.
        public var workflowType: SwfClientTypes.WorkflowType?

        public init (
            initiatedEventId: Swift.Int = 0,
            startedEventId: Swift.Int = 0,
            timeoutType: SwfClientTypes.WorkflowExecutionTimeoutType? = nil,
            workflowExecution: SwfClientTypes.WorkflowExecution? = nil,
            workflowType: SwfClientTypes.WorkflowType? = nil
        )
        {
            self.initiatedEventId = initiatedEventId
            self.startedEventId = startedEventId
            self.timeoutType = timeoutType
            self.workflowExecution = workflowExecution
            self.workflowType = workflowType
        }
    }

}
