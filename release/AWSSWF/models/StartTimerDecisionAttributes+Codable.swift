// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SwfClientTypes.StartTimerDecisionAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case control
        case startToFireTimeout
        case timerId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let control = self.control {
            try encodeContainer.encode(control, forKey: .control)
        }
        if let startToFireTimeout = self.startToFireTimeout {
            try encodeContainer.encode(startToFireTimeout, forKey: .startToFireTimeout)
        }
        if let timerId = self.timerId {
            try encodeContainer.encode(timerId, forKey: .timerId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .timerId)
        timerId = timerIdDecoded
        let controlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .control)
        control = controlDecoded
        let startToFireTimeoutDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .startToFireTimeout)
        startToFireTimeout = startToFireTimeoutDecoded
    }
}
