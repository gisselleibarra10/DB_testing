// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorkflowTypesOutputResponseBody: Swift.Equatable {
    let typeInfos: [SwfClientTypes.WorkflowTypeInfo]?
    let nextPageToken: Swift.String?
}

extension ListWorkflowTypesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextPageToken
        case typeInfos
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeInfosContainer = try containerValues.decodeIfPresent([SwfClientTypes.WorkflowTypeInfo?].self, forKey: .typeInfos)
        var typeInfosDecoded0:[SwfClientTypes.WorkflowTypeInfo]? = nil
        if let typeInfosContainer = typeInfosContainer {
            typeInfosDecoded0 = [SwfClientTypes.WorkflowTypeInfo]()
            for structure0 in typeInfosContainer {
                if let structure0 = structure0 {
                    typeInfosDecoded0?.append(structure0)
                }
            }
        }
        typeInfos = typeInfosDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
