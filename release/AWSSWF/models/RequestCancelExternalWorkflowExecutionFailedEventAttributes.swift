// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SwfClientTypes {
    /// Provides the details of the RequestCancelExternalWorkflowExecutionFailed event.
    public struct RequestCancelExternalWorkflowExecutionFailedEventAttributes: Swift.Equatable {
        /// The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes. If cause is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see [Using IAM to Manage Access to Amazon SWF Workflows](https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html) in the Amazon SWF Developer Guide.
        /// This member is required.
        public var cause: SwfClientTypes.RequestCancelExternalWorkflowExecutionFailedCause?
        /// The data attached to the event that the decider can use in subsequent workflow tasks. This data isn't sent to the workflow execution.
        public var control: Swift.String?
        /// The ID of the DecisionTaskCompleted event corresponding to the decision task that resulted in the RequestCancelExternalWorkflowExecution decision for this cancellation request. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.
        /// This member is required.
        public var decisionTaskCompletedEventId: Swift.Int
        /// The ID of the RequestCancelExternalWorkflowExecutionInitiated event corresponding to the RequestCancelExternalWorkflowExecution decision to cancel this external workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.
        /// This member is required.
        public var initiatedEventId: Swift.Int
        /// The runId of the external workflow execution.
        public var runId: Swift.String?
        /// The workflowId of the external workflow to which the cancel request was to be delivered.
        /// This member is required.
        public var workflowId: Swift.String?

        public init (
            cause: SwfClientTypes.RequestCancelExternalWorkflowExecutionFailedCause? = nil,
            control: Swift.String? = nil,
            decisionTaskCompletedEventId: Swift.Int = 0,
            initiatedEventId: Swift.Int = 0,
            runId: Swift.String? = nil,
            workflowId: Swift.String? = nil
        )
        {
            self.cause = cause
            self.control = control
            self.decisionTaskCompletedEventId = decisionTaskCompletedEventId
            self.initiatedEventId = initiatedEventId
            self.runId = runId
            self.workflowId = workflowId
        }
    }

}
