// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListClosedWorkflowExecutionsInput: Swift.Equatable {
    /// If specified, only workflow executions that match this close status are listed. For example, if TERMINATED is specified, then only TERMINATED workflow executions are listed. closeStatusFilter, executionFilter, typeFilter and tagFilter are mutually exclusive. You can specify at most one of these in a request.
    public var closeStatusFilter: SwfClientTypes.CloseStatusFilter?
    /// If specified, the workflow executions are included in the returned results based on whether their close times are within the range specified by this filter. Also, if this parameter is specified, the returned results are ordered by their close times. startTimeFilter and closeTimeFilter are mutually exclusive. You must specify one of these in a request but not both.
    public var closeTimeFilter: SwfClientTypes.ExecutionTimeFilter?
    /// The name of the domain that contains the workflow executions to list.
    /// This member is required.
    public var domain: Swift.String?
    /// If specified, only workflow executions matching the workflow ID specified in the filter are returned. closeStatusFilter, executionFilter, typeFilter and tagFilter are mutually exclusive. You can specify at most one of these in a request.
    public var executionFilter: SwfClientTypes.WorkflowExecutionFilter?
    /// The maximum number of results that are returned per call. Use nextPageToken to obtain further pages of results.
    public var maximumPageSize: Swift.Int
    /// If NextPageToken is returned there are more results available. The value of NextPageToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 60 seconds. Using an expired pagination token will return a 400 error: "Specified token has exceeded its maximum lifetime". The configured maximumPageSize determines how many results can be returned in a single call.
    public var nextPageToken: Swift.String?
    /// When set to true, returns the results in reverse order. By default the results are returned in descending order of the start or the close time of the executions.
    public var reverseOrder: Swift.Bool
    /// If specified, the workflow executions are included in the returned results based on whether their start times are within the range specified by this filter. Also, if this parameter is specified, the returned results are ordered by their start times. startTimeFilter and closeTimeFilter are mutually exclusive. You must specify one of these in a request but not both.
    public var startTimeFilter: SwfClientTypes.ExecutionTimeFilter?
    /// If specified, only executions that have the matching tag are listed. closeStatusFilter, executionFilter, typeFilter and tagFilter are mutually exclusive. You can specify at most one of these in a request.
    public var tagFilter: SwfClientTypes.TagFilter?
    /// If specified, only executions of the type specified in the filter are returned. closeStatusFilter, executionFilter, typeFilter and tagFilter are mutually exclusive. You can specify at most one of these in a request.
    public var typeFilter: SwfClientTypes.WorkflowTypeFilter?

    public init (
        closeStatusFilter: SwfClientTypes.CloseStatusFilter? = nil,
        closeTimeFilter: SwfClientTypes.ExecutionTimeFilter? = nil,
        domain: Swift.String? = nil,
        executionFilter: SwfClientTypes.WorkflowExecutionFilter? = nil,
        maximumPageSize: Swift.Int = 0,
        nextPageToken: Swift.String? = nil,
        reverseOrder: Swift.Bool = false,
        startTimeFilter: SwfClientTypes.ExecutionTimeFilter? = nil,
        tagFilter: SwfClientTypes.TagFilter? = nil,
        typeFilter: SwfClientTypes.WorkflowTypeFilter? = nil
    )
    {
        self.closeStatusFilter = closeStatusFilter
        self.closeTimeFilter = closeTimeFilter
        self.domain = domain
        self.executionFilter = executionFilter
        self.maximumPageSize = maximumPageSize
        self.nextPageToken = nextPageToken
        self.reverseOrder = reverseOrder
        self.startTimeFilter = startTimeFilter
        self.tagFilter = tagFilter
        self.typeFilter = typeFilter
    }
}
