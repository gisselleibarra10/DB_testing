// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SwfClientTypes.ActivityTaskTimedOutEventAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case details
        case scheduledEventId
        case startedEventId
        case timeoutType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let details = self.details {
            try encodeContainer.encode(details, forKey: .details)
        }
        if scheduledEventId != 0 {
            try encodeContainer.encode(scheduledEventId, forKey: .scheduledEventId)
        }
        if startedEventId != 0 {
            try encodeContainer.encode(startedEventId, forKey: .startedEventId)
        }
        if let timeoutType = self.timeoutType {
            try encodeContainer.encode(timeoutType.rawValue, forKey: .timeoutType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timeoutTypeDecoded = try containerValues.decodeIfPresent(SwfClientTypes.ActivityTaskTimeoutType.self, forKey: .timeoutType)
        timeoutType = timeoutTypeDecoded
        let scheduledEventIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .scheduledEventId) ?? 0
        scheduledEventId = scheduledEventIdDecoded
        let startedEventIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .startedEventId) ?? 0
        startedEventId = startedEventIdDecoded
        let detailsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .details)
        details = detailsDecoded
    }
}
