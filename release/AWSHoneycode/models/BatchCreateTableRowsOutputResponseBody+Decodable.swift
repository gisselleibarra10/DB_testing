// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchCreateTableRowsOutputResponseBody: Swift.Equatable {
    let workbookCursor: Swift.Int
    let createdRows: [Swift.String:Swift.String]?
    let failedBatchItems: [HoneycodeClientTypes.FailedBatchItem]?
}

extension BatchCreateTableRowsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdRows
        case failedBatchItems
        case workbookCursor
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workbookCursorDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .workbookCursor) ?? 0
        workbookCursor = workbookCursorDecoded
        let createdRowsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .createdRows)
        var createdRowsDecoded0: [Swift.String:Swift.String]? = nil
        if let createdRowsContainer = createdRowsContainer {
            createdRowsDecoded0 = [Swift.String:Swift.String]()
            for (key0, rowid0) in createdRowsContainer {
                if let rowid0 = rowid0 {
                    createdRowsDecoded0?[key0] = rowid0
                }
            }
        }
        createdRows = createdRowsDecoded0
        let failedBatchItemsContainer = try containerValues.decodeIfPresent([HoneycodeClientTypes.FailedBatchItem?].self, forKey: .failedBatchItems)
        var failedBatchItemsDecoded0:[HoneycodeClientTypes.FailedBatchItem]? = nil
        if let failedBatchItemsContainer = failedBatchItemsContainer {
            failedBatchItemsDecoded0 = [HoneycodeClientTypes.FailedBatchItem]()
            for structure0 in failedBatchItemsContainer {
                if let structure0 = structure0 {
                    failedBatchItemsDecoded0?.append(structure0)
                }
            }
        }
        failedBatchItems = failedBatchItemsDecoded0
    }
}
