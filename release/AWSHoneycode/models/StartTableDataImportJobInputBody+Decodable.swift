// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartTableDataImportJobInputBody: Swift.Equatable {
    let dataSource: HoneycodeClientTypes.ImportDataSource?
    let dataFormat: HoneycodeClientTypes.ImportSourceDataFormat?
    let importOptions: HoneycodeClientTypes.ImportOptions?
    let clientRequestToken: Swift.String?
}

extension StartTableDataImportJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken
        case dataFormat
        case dataSource
        case importOptions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSourceDecoded = try containerValues.decodeIfPresent(HoneycodeClientTypes.ImportDataSource.self, forKey: .dataSource)
        dataSource = dataSourceDecoded
        let dataFormatDecoded = try containerValues.decodeIfPresent(HoneycodeClientTypes.ImportSourceDataFormat.self, forKey: .dataFormat)
        dataFormat = dataFormatDecoded
        let importOptionsDecoded = try containerValues.decodeIfPresent(HoneycodeClientTypes.ImportOptions.self, forKey: .importOptions)
        importOptions = importOptionsDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
