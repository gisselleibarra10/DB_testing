// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTableDataImportJobOutputResponseBody: Swift.Equatable {
    let jobStatus: HoneycodeClientTypes.TableDataImportJobStatus?
    let message: Swift.String?
    let jobMetadata: HoneycodeClientTypes.TableDataImportJobMetadata?
    let errorCode: HoneycodeClientTypes.ErrorCode?
}

extension DescribeTableDataImportJobOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errorCode
        case jobMetadata
        case jobStatus
        case message
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobStatusDecoded = try containerValues.decodeIfPresent(HoneycodeClientTypes.TableDataImportJobStatus.self, forKey: .jobStatus)
        jobStatus = jobStatusDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let jobMetadataDecoded = try containerValues.decodeIfPresent(HoneycodeClientTypes.TableDataImportJobMetadata.self, forKey: .jobMetadata)
        jobMetadata = jobMetadataDecoded
        let errorCodeDecoded = try containerValues.decodeIfPresent(HoneycodeClientTypes.ErrorCode.self, forKey: .errorCode)
        errorCode = errorCodeDecoded
    }
}
