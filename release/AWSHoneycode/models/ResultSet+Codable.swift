// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HoneycodeClientTypes.ResultSet: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case headers
        case rows
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let headers = headers {
            var headersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .headers)
            for resultheader0 in headers {
                try headersContainer.encode(resultheader0)
            }
        }
        if let rows = rows {
            var rowsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .rows)
            for resultrows0 in rows {
                try rowsContainer.encode(resultrows0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let headersContainer = try containerValues.decodeIfPresent([HoneycodeClientTypes.ColumnMetadata?].self, forKey: .headers)
        var headersDecoded0:[HoneycodeClientTypes.ColumnMetadata]? = nil
        if let headersContainer = headersContainer {
            headersDecoded0 = [HoneycodeClientTypes.ColumnMetadata]()
            for structure0 in headersContainer {
                if let structure0 = structure0 {
                    headersDecoded0?.append(structure0)
                }
            }
        }
        headers = headersDecoded0
        let rowsContainer = try containerValues.decodeIfPresent([HoneycodeClientTypes.ResultRow?].self, forKey: .rows)
        var rowsDecoded0:[HoneycodeClientTypes.ResultRow]? = nil
        if let rowsContainer = rowsContainer {
            rowsDecoded0 = [HoneycodeClientTypes.ResultRow]()
            for structure0 in rowsContainer {
                if let structure0 = structure0 {
                    rowsDecoded0?.append(structure0)
                }
            }
        }
        rows = rowsDecoded0
    }
}
