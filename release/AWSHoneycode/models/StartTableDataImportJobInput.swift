// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartTableDataImportJobInput: Swift.Equatable {
    /// The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.
    /// This member is required.
    public var clientRequestToken: Swift.String?
    /// The format of the data that is being imported. Currently the only option supported is "DELIMITED_TEXT".
    /// This member is required.
    public var dataFormat: HoneycodeClientTypes.ImportSourceDataFormat?
    /// The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.
    /// This member is required.
    public var dataSource: HoneycodeClientTypes.ImportDataSource?
    /// The ID of the table where the rows are being imported. If a table with the specified id could not be found, this API throws ResourceNotFoundException.
    /// This member is required.
    public var destinationTableId: Swift.String?
    /// The options for customizing this import request.
    /// This member is required.
    public var importOptions: HoneycodeClientTypes.ImportOptions?
    /// The ID of the workbook where the rows are being imported. If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
    /// This member is required.
    public var workbookId: Swift.String?

    public init (
        clientRequestToken: Swift.String? = nil,
        dataFormat: HoneycodeClientTypes.ImportSourceDataFormat? = nil,
        dataSource: HoneycodeClientTypes.ImportDataSource? = nil,
        destinationTableId: Swift.String? = nil,
        importOptions: HoneycodeClientTypes.ImportOptions? = nil,
        workbookId: Swift.String? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.dataFormat = dataFormat
        self.dataSource = dataSource
        self.destinationTableId = destinationTableId
        self.importOptions = importOptions
        self.workbookId = workbookId
    }
}
