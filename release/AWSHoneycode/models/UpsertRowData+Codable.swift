// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HoneycodeClientTypes.UpsertRowData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case batchItemId
        case cellsToUpdate
        case filter
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let batchItemId = self.batchItemId {
            try encodeContainer.encode(batchItemId, forKey: .batchItemId)
        }
        if let cellsToUpdate = cellsToUpdate {
            var cellsToUpdateContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .cellsToUpdate)
            for (dictKey0, rowdatainput0) in cellsToUpdate {
                try cellsToUpdateContainer.encode(rowdatainput0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let filter = self.filter {
            try encodeContainer.encode(filter, forKey: .filter)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let batchItemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .batchItemId)
        batchItemId = batchItemIdDecoded
        let filterDecoded = try containerValues.decodeIfPresent(HoneycodeClientTypes.Filter.self, forKey: .filter)
        filter = filterDecoded
        let cellsToUpdateContainer = try containerValues.decodeIfPresent([Swift.String: HoneycodeClientTypes.CellInput?].self, forKey: .cellsToUpdate)
        var cellsToUpdateDecoded0: [Swift.String:HoneycodeClientTypes.CellInput]? = nil
        if let cellsToUpdateContainer = cellsToUpdateContainer {
            cellsToUpdateDecoded0 = [Swift.String:HoneycodeClientTypes.CellInput]()
            for (key0, cellinput0) in cellsToUpdateContainer {
                if let cellinput0 = cellinput0 {
                    cellsToUpdateDecoded0?[key0] = cellinput0
                }
            }
        }
        cellsToUpdate = cellsToUpdateDecoded0
    }
}
