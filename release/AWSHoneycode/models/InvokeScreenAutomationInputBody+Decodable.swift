// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InvokeScreenAutomationInputBody: Swift.Equatable {
    let variables: [Swift.String:HoneycodeClientTypes.VariableValue]?
    let rowId: Swift.String?
    let clientRequestToken: Swift.String?
}

extension InvokeScreenAutomationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken
        case rowId
        case variables
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let variablesContainer = try containerValues.decodeIfPresent([Swift.String: HoneycodeClientTypes.VariableValue?].self, forKey: .variables)
        var variablesDecoded0: [Swift.String:HoneycodeClientTypes.VariableValue]? = nil
        if let variablesContainer = variablesContainer {
            variablesDecoded0 = [Swift.String:HoneycodeClientTypes.VariableValue]()
            for (key0, variablevalue0) in variablesContainer {
                if let variablevalue0 = variablevalue0 {
                    variablesDecoded0?[key0] = variablevalue0
                }
            }
        }
        variables = variablesDecoded0
        let rowIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rowId)
        rowId = rowIdDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
