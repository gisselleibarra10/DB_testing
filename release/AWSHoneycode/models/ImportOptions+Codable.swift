// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HoneycodeClientTypes.ImportOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case delimitedTextOptions
        case destinationOptions
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let delimitedTextOptions = self.delimitedTextOptions {
            try encodeContainer.encode(delimitedTextOptions, forKey: .delimitedTextOptions)
        }
        if let destinationOptions = self.destinationOptions {
            try encodeContainer.encode(destinationOptions, forKey: .destinationOptions)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationOptionsDecoded = try containerValues.decodeIfPresent(HoneycodeClientTypes.DestinationOptions.self, forKey: .destinationOptions)
        destinationOptions = destinationOptionsDecoded
        let delimitedTextOptionsDecoded = try containerValues.decodeIfPresent(HoneycodeClientTypes.DelimitedTextImportOptions.self, forKey: .delimitedTextOptions)
        delimitedTextOptions = delimitedTextOptionsDecoded
    }
}
