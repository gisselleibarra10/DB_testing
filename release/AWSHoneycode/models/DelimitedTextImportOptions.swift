// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension HoneycodeClientTypes {
    /// An object that contains the options relating to parsing delimited text as part of an import request.
    public struct DelimitedTextImportOptions: Swift.Equatable {
        /// The encoding of the data in the input file.
        public var dataCharacterEncoding: HoneycodeClientTypes.ImportDataCharacterEncoding?
        /// The delimiter to use for separating columns in a single row of the input.
        /// This member is required.
        public var delimiter: Swift.String?
        /// Indicates whether the input file has a header row at the top containing the column names.
        public var hasHeaderRow: Swift.Bool
        /// A parameter to indicate whether empty rows should be ignored or be included in the import.
        public var ignoreEmptyRows: Swift.Bool

        public init (
            dataCharacterEncoding: HoneycodeClientTypes.ImportDataCharacterEncoding? = nil,
            delimiter: Swift.String? = nil,
            hasHeaderRow: Swift.Bool = false,
            ignoreEmptyRows: Swift.Bool = false
        )
        {
            self.dataCharacterEncoding = dataCharacterEncoding
            self.delimiter = delimiter
            self.hasHeaderRow = hasHeaderRow
            self.ignoreEmptyRows = ignoreEmptyRows
        }
    }

}
