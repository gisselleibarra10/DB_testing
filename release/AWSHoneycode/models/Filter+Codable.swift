// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HoneycodeClientTypes.Filter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contextRowId
        case formula
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contextRowId = self.contextRowId {
            try encodeContainer.encode(contextRowId, forKey: .contextRowId)
        }
        if let formula = self.formula {
            try encodeContainer.encode(formula, forKey: .formula)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let formulaDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .formula)
        formula = formulaDecoded
        let contextRowIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .contextRowId)
        contextRowId = contextRowIdDecoded
    }
}
