// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchUpdateTableRowsInputBody: Swift.Equatable {
    let rowsToUpdate: [HoneycodeClientTypes.UpdateRowData]?
    let clientRequestToken: Swift.String?
}

extension BatchUpdateTableRowsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken
        case rowsToUpdate
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rowsToUpdateContainer = try containerValues.decodeIfPresent([HoneycodeClientTypes.UpdateRowData?].self, forKey: .rowsToUpdate)
        var rowsToUpdateDecoded0:[HoneycodeClientTypes.UpdateRowData]? = nil
        if let rowsToUpdateContainer = rowsToUpdateContainer {
            rowsToUpdateDecoded0 = [HoneycodeClientTypes.UpdateRowData]()
            for structure0 in rowsToUpdateContainer {
                if let structure0 = structure0 {
                    rowsToUpdateDecoded0?.append(structure0)
                }
            }
        }
        rowsToUpdate = rowsToUpdateDecoded0
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
