// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchCreateTableRowsInputBody: Swift.Equatable {
    let rowsToCreate: [HoneycodeClientTypes.CreateRowData]?
    let clientRequestToken: Swift.String?
}

extension BatchCreateTableRowsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken
        case rowsToCreate
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rowsToCreateContainer = try containerValues.decodeIfPresent([HoneycodeClientTypes.CreateRowData?].self, forKey: .rowsToCreate)
        var rowsToCreateDecoded0:[HoneycodeClientTypes.CreateRowData]? = nil
        if let rowsToCreateContainer = rowsToCreateContainer {
            rowsToCreateDecoded0 = [HoneycodeClientTypes.CreateRowData]()
            for structure0 in rowsToCreateContainer {
                if let structure0 = structure0 {
                    rowsToCreateDecoded0?.append(structure0)
                }
            }
        }
        rowsToCreate = rowsToCreateDecoded0
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
