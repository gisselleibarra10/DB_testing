// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutMetricsClientTypes.Action: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lambdaConfiguration = "LambdaConfiguration"
        case sNSConfiguration = "SNSConfiguration"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lambdaConfiguration = self.lambdaConfiguration {
            try encodeContainer.encode(lambdaConfiguration, forKey: .lambdaConfiguration)
        }
        if let sNSConfiguration = self.sNSConfiguration {
            try encodeContainer.encode(sNSConfiguration, forKey: .sNSConfiguration)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sNSConfigurationDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.SNSConfiguration.self, forKey: .sNSConfiguration)
        sNSConfiguration = sNSConfigurationDecoded
        let lambdaConfigurationDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.LambdaConfiguration.self, forKey: .lambdaConfiguration)
        lambdaConfiguration = lambdaConfigurationDecoded
    }
}
