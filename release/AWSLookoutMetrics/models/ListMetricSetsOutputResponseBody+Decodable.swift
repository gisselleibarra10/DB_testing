// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMetricSetsOutputResponseBody: Swift.Equatable {
    let metricSetSummaryList: [LookoutMetricsClientTypes.MetricSetSummary]?
    let nextToken: Swift.String?
}

extension ListMetricSetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metricSetSummaryList = "MetricSetSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricSetSummaryListContainer = try containerValues.decodeIfPresent([LookoutMetricsClientTypes.MetricSetSummary?].self, forKey: .metricSetSummaryList)
        var metricSetSummaryListDecoded0:[LookoutMetricsClientTypes.MetricSetSummary]? = nil
        if let metricSetSummaryListContainer = metricSetSummaryListContainer {
            metricSetSummaryListDecoded0 = [LookoutMetricsClientTypes.MetricSetSummary]()
            for structure0 in metricSetSummaryListContainer {
                if let structure0 = structure0 {
                    metricSetSummaryListDecoded0?.append(structure0)
                }
            }
        }
        metricSetSummaryList = metricSetSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
