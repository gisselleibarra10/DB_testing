// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAnomalyDetectionExecutionsOutputResponseBody: Swift.Equatable {
    let executionList: [LookoutMetricsClientTypes.ExecutionStatus]?
    let nextToken: Swift.String?
}

extension DescribeAnomalyDetectionExecutionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case executionList = "ExecutionList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionListContainer = try containerValues.decodeIfPresent([LookoutMetricsClientTypes.ExecutionStatus?].self, forKey: .executionList)
        var executionListDecoded0:[LookoutMetricsClientTypes.ExecutionStatus]? = nil
        if let executionListContainer = executionListContainer {
            executionListDecoded0 = [LookoutMetricsClientTypes.ExecutionStatus]()
            for structure0 in executionListContainer {
                if let structure0 = structure0 {
                    executionListDecoded0?.append(structure0)
                }
            }
        }
        executionList = executionListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
