// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutMetricsClientTypes.DetectedMetricSetConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metricSetFrequency = "MetricSetFrequency"
        case metricSource = "MetricSource"
        case offset = "Offset"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let metricSetFrequency = self.metricSetFrequency {
            try encodeContainer.encode(metricSetFrequency, forKey: .metricSetFrequency)
        }
        if let metricSource = self.metricSource {
            try encodeContainer.encode(metricSource, forKey: .metricSource)
        }
        if let offset = self.offset {
            try encodeContainer.encode(offset, forKey: .offset)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let offsetDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.DetectedField.self, forKey: .offset)
        offset = offsetDecoded
        let metricSetFrequencyDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.DetectedField.self, forKey: .metricSetFrequency)
        metricSetFrequency = metricSetFrequencyDecoded
        let metricSourceDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.DetectedMetricSource.self, forKey: .metricSource)
        metricSource = metricSourceDecoded
    }
}
