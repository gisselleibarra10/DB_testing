// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDataQualityMetricsOutputResponseBody: Swift.Equatable {
    let anomalyDetectorDataQualityMetricList: [LookoutMetricsClientTypes.AnomalyDetectorDataQualityMetric]?
}

extension GetDataQualityMetricsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomalyDetectorDataQualityMetricList = "AnomalyDetectorDataQualityMetricList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyDetectorDataQualityMetricListContainer = try containerValues.decodeIfPresent([LookoutMetricsClientTypes.AnomalyDetectorDataQualityMetric?].self, forKey: .anomalyDetectorDataQualityMetricList)
        var anomalyDetectorDataQualityMetricListDecoded0:[LookoutMetricsClientTypes.AnomalyDetectorDataQualityMetric]? = nil
        if let anomalyDetectorDataQualityMetricListContainer = anomalyDetectorDataQualityMetricListContainer {
            anomalyDetectorDataQualityMetricListDecoded0 = [LookoutMetricsClientTypes.AnomalyDetectorDataQualityMetric]()
            for structure0 in anomalyDetectorDataQualityMetricListContainer {
                if let structure0 = structure0 {
                    anomalyDetectorDataQualityMetricListDecoded0?.append(structure0)
                }
            }
        }
        anomalyDetectorDataQualityMetricList = anomalyDetectorDataQualityMetricListDecoded0
    }
}
