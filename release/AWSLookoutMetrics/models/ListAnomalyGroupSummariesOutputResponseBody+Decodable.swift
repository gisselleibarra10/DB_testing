// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAnomalyGroupSummariesOutputResponseBody: Swift.Equatable {
    let anomalyGroupSummaryList: [LookoutMetricsClientTypes.AnomalyGroupSummary]?
    let anomalyGroupStatistics: LookoutMetricsClientTypes.AnomalyGroupStatistics?
    let nextToken: Swift.String?
}

extension ListAnomalyGroupSummariesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomalyGroupStatistics = "AnomalyGroupStatistics"
        case anomalyGroupSummaryList = "AnomalyGroupSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyGroupSummaryListContainer = try containerValues.decodeIfPresent([LookoutMetricsClientTypes.AnomalyGroupSummary?].self, forKey: .anomalyGroupSummaryList)
        var anomalyGroupSummaryListDecoded0:[LookoutMetricsClientTypes.AnomalyGroupSummary]? = nil
        if let anomalyGroupSummaryListContainer = anomalyGroupSummaryListContainer {
            anomalyGroupSummaryListDecoded0 = [LookoutMetricsClientTypes.AnomalyGroupSummary]()
            for structure0 in anomalyGroupSummaryListContainer {
                if let structure0 = structure0 {
                    anomalyGroupSummaryListDecoded0?.append(structure0)
                }
            }
        }
        anomalyGroupSummaryList = anomalyGroupSummaryListDecoded0
        let anomalyGroupStatisticsDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.AnomalyGroupStatistics.self, forKey: .anomalyGroupStatistics)
        anomalyGroupStatistics = anomalyGroupStatisticsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
