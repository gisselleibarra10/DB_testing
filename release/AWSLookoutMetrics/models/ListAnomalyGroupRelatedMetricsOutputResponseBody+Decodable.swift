// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAnomalyGroupRelatedMetricsOutputResponseBody: Swift.Equatable {
    let interMetricImpactList: [LookoutMetricsClientTypes.InterMetricImpactDetails]?
    let nextToken: Swift.String?
}

extension ListAnomalyGroupRelatedMetricsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case interMetricImpactList = "InterMetricImpactList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let interMetricImpactListContainer = try containerValues.decodeIfPresent([LookoutMetricsClientTypes.InterMetricImpactDetails?].self, forKey: .interMetricImpactList)
        var interMetricImpactListDecoded0:[LookoutMetricsClientTypes.InterMetricImpactDetails]? = nil
        if let interMetricImpactListContainer = interMetricImpactListContainer {
            interMetricImpactListDecoded0 = [LookoutMetricsClientTypes.InterMetricImpactDetails]()
            for structure0 in interMetricImpactListContainer {
                if let structure0 = structure0 {
                    interMetricImpactListDecoded0?.append(structure0)
                }
            }
        }
        interMetricImpactList = interMetricImpactListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
