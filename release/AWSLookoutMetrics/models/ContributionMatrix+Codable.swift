// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutMetricsClientTypes.ContributionMatrix: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dimensionContributionList = "DimensionContributionList"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dimensionContributionList = dimensionContributionList {
            var dimensionContributionListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dimensionContributionList)
            for dimensioncontributionlist0 in dimensionContributionList {
                try dimensionContributionListContainer.encode(dimensioncontributionlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dimensionContributionListContainer = try containerValues.decodeIfPresent([LookoutMetricsClientTypes.DimensionContribution?].self, forKey: .dimensionContributionList)
        var dimensionContributionListDecoded0:[LookoutMetricsClientTypes.DimensionContribution]? = nil
        if let dimensionContributionListContainer = dimensionContributionListContainer {
            dimensionContributionListDecoded0 = [LookoutMetricsClientTypes.DimensionContribution]()
            for structure0 in dimensionContributionListContainer {
                if let structure0 = structure0 {
                    dimensionContributionListDecoded0?.append(structure0)
                }
            }
        }
        dimensionContributionList = dimensionContributionListDecoded0
    }
}
