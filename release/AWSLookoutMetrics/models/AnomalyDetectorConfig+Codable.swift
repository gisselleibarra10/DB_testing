// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutMetricsClientTypes.AnomalyDetectorConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomalyDetectorFrequency = "AnomalyDetectorFrequency"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let anomalyDetectorFrequency = self.anomalyDetectorFrequency {
            try encodeContainer.encode(anomalyDetectorFrequency.rawValue, forKey: .anomalyDetectorFrequency)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyDetectorFrequencyDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.Frequency.self, forKey: .anomalyDetectorFrequency)
        anomalyDetectorFrequency = anomalyDetectorFrequencyDecoded
    }
}
