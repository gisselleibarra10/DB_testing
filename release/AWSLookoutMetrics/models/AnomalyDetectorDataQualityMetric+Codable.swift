// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutMetricsClientTypes.AnomalyDetectorDataQualityMetric: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metricSetDataQualityMetricList = "MetricSetDataQualityMetricList"
        case startTimestamp = "StartTimestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let metricSetDataQualityMetricList = metricSetDataQualityMetricList {
            var metricSetDataQualityMetricListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .metricSetDataQualityMetricList)
            for metricsetdataqualitymetriclist0 in metricSetDataQualityMetricList {
                try metricSetDataQualityMetricListContainer.encode(metricsetdataqualitymetriclist0)
            }
        }
        if let startTimestamp = self.startTimestamp {
            try encodeContainer.encode(startTimestamp.timeIntervalSince1970, forKey: .startTimestamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTimestamp)
        startTimestamp = startTimestampDecoded
        let metricSetDataQualityMetricListContainer = try containerValues.decodeIfPresent([LookoutMetricsClientTypes.MetricSetDataQualityMetric?].self, forKey: .metricSetDataQualityMetricList)
        var metricSetDataQualityMetricListDecoded0:[LookoutMetricsClientTypes.MetricSetDataQualityMetric]? = nil
        if let metricSetDataQualityMetricListContainer = metricSetDataQualityMetricListContainer {
            metricSetDataQualityMetricListDecoded0 = [LookoutMetricsClientTypes.MetricSetDataQualityMetric]()
            for structure0 in metricSetDataQualityMetricListContainer {
                if let structure0 = structure0 {
                    metricSetDataQualityMetricListDecoded0?.append(structure0)
                }
            }
        }
        metricSetDataQualityMetricList = metricSetDataQualityMetricListDecoded0
    }
}
