// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSampleDataOutputResponseBody: Swift.Equatable {
    let headerValues: [Swift.String]?
    let sampleRows: [[Swift.String]]?
}

extension GetSampleDataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case headerValues = "HeaderValues"
        case sampleRows = "SampleRows"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let headerValuesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .headerValues)
        var headerValuesDecoded0:[Swift.String]? = nil
        if let headerValuesContainer = headerValuesContainer {
            headerValuesDecoded0 = [Swift.String]()
            for string0 in headerValuesContainer {
                if let string0 = string0 {
                    headerValuesDecoded0?.append(string0)
                }
            }
        }
        headerValues = headerValuesDecoded0
        let sampleRowsContainer = try containerValues.decodeIfPresent([[Swift.String?]?].self, forKey: .sampleRows)
        var sampleRowsDecoded0:[[Swift.String]]? = nil
        if let sampleRowsContainer = sampleRowsContainer {
            sampleRowsDecoded0 = [[Swift.String]]()
            for list0 in sampleRowsContainer {
                var list0Decoded0: [Swift.String]? = nil
                if let list0 = list0 {
                    list0Decoded0 = [Swift.String]()
                    for string1 in list0 {
                        if let string1 = string1 {
                            list0Decoded0?.append(string1)
                        }
                    }
                }
                if let list0Decoded0 = list0Decoded0 {
                    sampleRowsDecoded0?.append(list0Decoded0)
                }
            }
        }
        sampleRows = sampleRowsDecoded0
    }
}
