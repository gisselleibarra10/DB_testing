// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAnomalyGroupRelatedMetricsInputBody: Swift.Equatable {
    let anomalyDetectorArn: Swift.String?
    let anomalyGroupId: Swift.String?
    let relationshipTypeFilter: LookoutMetricsClientTypes.RelationshipType?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension ListAnomalyGroupRelatedMetricsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomalyDetectorArn = "AnomalyDetectorArn"
        case anomalyGroupId = "AnomalyGroupId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case relationshipTypeFilter = "RelationshipTypeFilter"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyDetectorArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .anomalyDetectorArn)
        anomalyDetectorArn = anomalyDetectorArnDecoded
        let anomalyGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .anomalyGroupId)
        anomalyGroupId = anomalyGroupIdDecoded
        let relationshipTypeFilterDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.RelationshipType.self, forKey: .relationshipTypeFilter)
        relationshipTypeFilter = relationshipTypeFilterDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
