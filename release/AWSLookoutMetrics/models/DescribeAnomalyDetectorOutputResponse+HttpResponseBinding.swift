// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeAnomalyDetectorOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: DescribeAnomalyDetectorOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.anomalyDetectorArn = output.anomalyDetectorArn
            self.anomalyDetectorConfig = output.anomalyDetectorConfig
            self.anomalyDetectorDescription = output.anomalyDetectorDescription
            self.anomalyDetectorName = output.anomalyDetectorName
            self.creationTime = output.creationTime
            self.failureReason = output.failureReason
            self.failureType = output.failureType
            self.kmsKeyArn = output.kmsKeyArn
            self.lastModificationTime = output.lastModificationTime
            self.status = output.status
        } else {
            self.anomalyDetectorArn = nil
            self.anomalyDetectorConfig = nil
            self.anomalyDetectorDescription = nil
            self.anomalyDetectorName = nil
            self.creationTime = nil
            self.failureReason = nil
            self.failureType = nil
            self.kmsKeyArn = nil
            self.lastModificationTime = nil
            self.status = nil
        }
    }
}
