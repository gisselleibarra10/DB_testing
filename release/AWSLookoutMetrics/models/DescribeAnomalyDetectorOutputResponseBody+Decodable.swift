// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAnomalyDetectorOutputResponseBody: Swift.Equatable {
    let anomalyDetectorArn: Swift.String?
    let anomalyDetectorName: Swift.String?
    let anomalyDetectorDescription: Swift.String?
    let anomalyDetectorConfig: LookoutMetricsClientTypes.AnomalyDetectorConfigSummary?
    let creationTime: ClientRuntime.Date?
    let lastModificationTime: ClientRuntime.Date?
    let status: LookoutMetricsClientTypes.AnomalyDetectorStatus?
    let failureReason: Swift.String?
    let kmsKeyArn: Swift.String?
    let failureType: LookoutMetricsClientTypes.AnomalyDetectorFailureType?
}

extension DescribeAnomalyDetectorOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomalyDetectorArn = "AnomalyDetectorArn"
        case anomalyDetectorConfig = "AnomalyDetectorConfig"
        case anomalyDetectorDescription = "AnomalyDetectorDescription"
        case anomalyDetectorName = "AnomalyDetectorName"
        case creationTime = "CreationTime"
        case failureReason = "FailureReason"
        case failureType = "FailureType"
        case kmsKeyArn = "KmsKeyArn"
        case lastModificationTime = "LastModificationTime"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyDetectorArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .anomalyDetectorArn)
        anomalyDetectorArn = anomalyDetectorArnDecoded
        let anomalyDetectorNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .anomalyDetectorName)
        anomalyDetectorName = anomalyDetectorNameDecoded
        let anomalyDetectorDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .anomalyDetectorDescription)
        anomalyDetectorDescription = anomalyDetectorDescriptionDecoded
        let anomalyDetectorConfigDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.AnomalyDetectorConfigSummary.self, forKey: .anomalyDetectorConfig)
        anomalyDetectorConfig = anomalyDetectorConfigDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModificationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModificationTime)
        lastModificationTime = lastModificationTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.AnomalyDetectorStatus.self, forKey: .status)
        status = statusDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
        let failureTypeDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.AnomalyDetectorFailureType.self, forKey: .failureType)
        failureType = failureTypeDecoded
    }
}
