// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateAlertInputBody: Swift.Equatable {
    let alertArn: Swift.String?
    let alertDescription: Swift.String?
    let alertSensitivityThreshold: Swift.Int
    let action: LookoutMetricsClientTypes.Action?
    let alertFilters: LookoutMetricsClientTypes.AlertFilters?
}

extension UpdateAlertInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case action = "Action"
        case alertArn = "AlertArn"
        case alertDescription = "AlertDescription"
        case alertFilters = "AlertFilters"
        case alertSensitivityThreshold = "AlertSensitivityThreshold"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alertArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alertArn)
        alertArn = alertArnDecoded
        let alertDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alertDescription)
        alertDescription = alertDescriptionDecoded
        let alertSensitivityThresholdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .alertSensitivityThreshold) ?? 0
        alertSensitivityThreshold = alertSensitivityThresholdDecoded
        let actionDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.Action.self, forKey: .action)
        action = actionDecoded
        let alertFiltersDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.AlertFilters.self, forKey: .alertFilters)
        alertFilters = alertFiltersDecoded
    }
}
