// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutMetricsClientTypes.DetectedField: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case confidence = "Confidence"
        case message = "Message"
        case value = "Value"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let confidence = self.confidence {
            try encodeContainer.encode(confidence.rawValue, forKey: .confidence)
        }
        if let message = self.message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let value = self.value {
            try encodeContainer.encode(value, forKey: .value)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let valueDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.AttributeValue.self, forKey: .value)
        value = valueDecoded
        let confidenceDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.Confidence.self, forKey: .confidence)
        confidence = confidenceDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
    }
}
