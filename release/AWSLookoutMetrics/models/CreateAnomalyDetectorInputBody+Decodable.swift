// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateAnomalyDetectorInputBody: Swift.Equatable {
    let anomalyDetectorName: Swift.String?
    let anomalyDetectorDescription: Swift.String?
    let anomalyDetectorConfig: LookoutMetricsClientTypes.AnomalyDetectorConfig?
    let kmsKeyArn: Swift.String?
    let tags: [Swift.String:Swift.String]?
}

extension CreateAnomalyDetectorInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomalyDetectorConfig = "AnomalyDetectorConfig"
        case anomalyDetectorDescription = "AnomalyDetectorDescription"
        case anomalyDetectorName = "AnomalyDetectorName"
        case kmsKeyArn = "KmsKeyArn"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyDetectorNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .anomalyDetectorName)
        anomalyDetectorName = anomalyDetectorNameDecoded
        let anomalyDetectorDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .anomalyDetectorDescription)
        anomalyDetectorDescription = anomalyDetectorDescriptionDecoded
        let anomalyDetectorConfigDecoded = try containerValues.decodeIfPresent(LookoutMetricsClientTypes.AnomalyDetectorConfig.self, forKey: .anomalyDetectorConfig)
        anomalyDetectorConfig = anomalyDetectorConfigDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
