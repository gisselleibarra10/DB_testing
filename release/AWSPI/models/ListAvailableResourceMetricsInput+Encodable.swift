// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListAvailableResourceMetricsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identifier = "Identifier"
        case maxResults = "MaxResults"
        case metricTypes = "MetricTypes"
        case nextToken = "NextToken"
        case serviceType = "ServiceType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let identifier = self.identifier {
            try encodeContainer.encode(identifier, forKey: .identifier)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let metricTypes = metricTypes {
            var metricTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .metricTypes)
            for metrictypelist0 in metricTypes {
                try metricTypesContainer.encode(metrictypelist0)
            }
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let serviceType = self.serviceType {
            try encodeContainer.encode(serviceType.rawValue, forKey: .serviceType)
        }
    }
}
