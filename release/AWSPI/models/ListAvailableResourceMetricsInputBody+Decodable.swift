// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAvailableResourceMetricsInputBody: Swift.Equatable {
    let serviceType: PiClientTypes.ServiceType?
    let identifier: Swift.String?
    let metricTypes: [Swift.String]?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension ListAvailableResourceMetricsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identifier = "Identifier"
        case maxResults = "MaxResults"
        case metricTypes = "MetricTypes"
        case nextToken = "NextToken"
        case serviceType = "ServiceType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serviceTypeDecoded = try containerValues.decodeIfPresent(PiClientTypes.ServiceType.self, forKey: .serviceType)
        serviceType = serviceTypeDecoded
        let identifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identifier)
        identifier = identifierDecoded
        let metricTypesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .metricTypes)
        var metricTypesDecoded0:[Swift.String]? = nil
        if let metricTypesContainer = metricTypesContainer {
            metricTypesDecoded0 = [Swift.String]()
            for string0 in metricTypesContainer {
                if let string0 = string0 {
                    metricTypesDecoded0?.append(string0)
                }
            }
        }
        metricTypes = metricTypesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
