// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAvailableResourceDimensionsOutputResponseBody: Swift.Equatable {
    let metricDimensions: [PiClientTypes.MetricDimensionGroups]?
    let nextToken: Swift.String?
}

extension ListAvailableResourceDimensionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metricDimensions = "MetricDimensions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricDimensionsContainer = try containerValues.decodeIfPresent([PiClientTypes.MetricDimensionGroups?].self, forKey: .metricDimensions)
        var metricDimensionsDecoded0:[PiClientTypes.MetricDimensionGroups]? = nil
        if let metricDimensionsContainer = metricDimensionsContainer {
            metricDimensionsDecoded0 = [PiClientTypes.MetricDimensionGroups]()
            for structure0 in metricDimensionsContainer {
                if let structure0 = structure0 {
                    metricDimensionsDecoded0?.append(structure0)
                }
            }
        }
        metricDimensions = metricDimensionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
