// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMediaInputBody: Swift.Equatable {
    let streamName: Swift.String?
    let streamARN: Swift.String?
    let startSelector: KinesisVideoMediaClientTypes.StartSelector?
}

extension GetMediaInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case startSelector = "StartSelector"
        case streamARN = "StreamARN"
        case streamName = "StreamName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let streamARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamARN)
        streamARN = streamARNDecoded
        let startSelectorDecoded = try containerValues.decodeIfPresent(KinesisVideoMediaClientTypes.StartSelector.self, forKey: .startSelector)
        startSelector = startSelectorDecoded
    }
}
