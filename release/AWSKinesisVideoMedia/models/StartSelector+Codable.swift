// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisVideoMediaClientTypes.StartSelector: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case afterFragmentNumber = "AfterFragmentNumber"
        case continuationToken = "ContinuationToken"
        case startSelectorType = "StartSelectorType"
        case startTimestamp = "StartTimestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let afterFragmentNumber = self.afterFragmentNumber {
            try encodeContainer.encode(afterFragmentNumber, forKey: .afterFragmentNumber)
        }
        if let continuationToken = self.continuationToken {
            try encodeContainer.encode(continuationToken, forKey: .continuationToken)
        }
        if let startSelectorType = self.startSelectorType {
            try encodeContainer.encode(startSelectorType.rawValue, forKey: .startSelectorType)
        }
        if let startTimestamp = self.startTimestamp {
            try encodeContainer.encode(startTimestamp.timeIntervalSince1970, forKey: .startTimestamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startSelectorTypeDecoded = try containerValues.decodeIfPresent(KinesisVideoMediaClientTypes.StartSelectorType.self, forKey: .startSelectorType)
        startSelectorType = startSelectorTypeDecoded
        let afterFragmentNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .afterFragmentNumber)
        afterFragmentNumber = afterFragmentNumberDecoded
        let startTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTimestamp)
        startTimestamp = startTimestampDecoded
        let continuationTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .continuationToken)
        continuationToken = continuationTokenDecoded
    }
}
