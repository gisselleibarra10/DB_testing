// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ComprehendMedicalClientTypes {
    public enum SNOMEDCTRelationshipType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case acuity
        case direction
        case quality
        case systemOrganSite
        case testUnits
        case testValue
        case sdkUnknown(Swift.String)

        public static var allCases: [SNOMEDCTRelationshipType] {
            return [
                .acuity,
                .direction,
                .quality,
                .systemOrganSite,
                .testUnits,
                .testValue,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .acuity: return "ACUITY"
            case .direction: return "DIRECTION"
            case .quality: return "QUALITY"
            case .systemOrganSite: return "SYSTEM_ORGAN_SITE"
            case .testUnits: return "TEST_UNITS"
            case .testValue: return "TEST_VALUE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SNOMEDCTRelationshipType(rawValue: rawValue) ?? SNOMEDCTRelationshipType.sdkUnknown(rawValue)
        }
    }
}
