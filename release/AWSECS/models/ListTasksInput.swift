// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListTasksInput: Swift.Equatable {
    /// The short name or full Amazon Resource Name (ARN) of the cluster to use when filtering the ListTasks results. If you do not specify a cluster, the default cluster is assumed.
    public var cluster: Swift.String?
    /// The container instance ID or full ARN of the container instance to use when filtering the ListTasks results. Specifying a containerInstance limits the results to tasks that belong to that container instance.
    public var containerInstance: Swift.String?
    /// The task desired status to use when filtering the ListTasks results. Specifying a desiredStatus of STOPPED limits the results to tasks that Amazon ECS has set the desired status to STOPPED. This can be useful for debugging tasks that aren't starting properly or have died or finished. The default status filter is RUNNING, which shows tasks that Amazon ECS has set the desired status to RUNNING. Although you can filter results based on a desired status of PENDING, this doesn't return any results. Amazon ECS never sets the desired status of a task to that value (only a task's lastStatus may have a value of PENDING).
    public var desiredStatus: EcsClientTypes.DesiredStatus?
    /// The name of the task definition family to use when filtering the ListTasks results. Specifying a family limits the results to tasks that belong to that family.
    public var family: Swift.String?
    /// The launch type to use when filtering the ListTasks results.
    public var launchType: EcsClientTypes.LaunchType?
    /// The maximum number of task results that ListTasks returned in paginated output. When this parameter is used, ListTasks only returns maxResults results in a single page along with a nextToken response element. The remaining results of the initial request can be seen by sending another ListTasks request with the returned nextToken value. This value can be between 1 and 100. If this parameter isn't used, then ListTasks returns up to 100 results and a nextToken value if applicable.
    public var maxResults: Swift.Int?
    /// The nextToken value returned from a ListTasks request indicating that more results are available to fulfill the request and further calls will be needed. If maxResults was provided, it's possible the number of results to be fewer than maxResults. This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.
    public var nextToken: Swift.String?
    /// The name of the service to use when filtering the ListTasks results. Specifying a serviceName limits the results to tasks that belong to that service.
    public var serviceName: Swift.String?
    /// The startedBy value to filter the task results with. Specifying a startedBy value limits the results to tasks that were started with that value.
    public var startedBy: Swift.String?

    public init (
        cluster: Swift.String? = nil,
        containerInstance: Swift.String? = nil,
        desiredStatus: EcsClientTypes.DesiredStatus? = nil,
        family: Swift.String? = nil,
        launchType: EcsClientTypes.LaunchType? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        serviceName: Swift.String? = nil,
        startedBy: Swift.String? = nil
    )
    {
        self.cluster = cluster
        self.containerInstance = containerInstance
        self.desiredStatus = desiredStatus
        self.family = family
        self.launchType = launchType
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.serviceName = serviceName
        self.startedBy = startedBy
    }
}
