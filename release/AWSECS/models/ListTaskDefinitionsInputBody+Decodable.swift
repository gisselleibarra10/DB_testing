// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTaskDefinitionsInputBody: Swift.Equatable {
    let familyPrefix: Swift.String?
    let status: EcsClientTypes.TaskDefinitionStatus?
    let sort: EcsClientTypes.SortOrder?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension ListTaskDefinitionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case familyPrefix
        case maxResults
        case nextToken
        case sort
        case status
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let familyPrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .familyPrefix)
        familyPrefix = familyPrefixDecoded
        let statusDecoded = try containerValues.decodeIfPresent(EcsClientTypes.TaskDefinitionStatus.self, forKey: .status)
        status = statusDecoded
        let sortDecoded = try containerValues.decodeIfPresent(EcsClientTypes.SortOrder.self, forKey: .sort)
        sort = sortDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
