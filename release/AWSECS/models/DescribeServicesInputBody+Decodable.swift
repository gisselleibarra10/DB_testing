// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeServicesInputBody: Swift.Equatable {
    let cluster: Swift.String?
    let services: [Swift.String]?
    let include: [EcsClientTypes.ServiceField]?
}

extension DescribeServicesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cluster
        case include
        case services
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cluster)
        cluster = clusterDecoded
        let servicesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .services)
        var servicesDecoded0:[Swift.String]? = nil
        if let servicesContainer = servicesContainer {
            servicesDecoded0 = [Swift.String]()
            for string0 in servicesContainer {
                if let string0 = string0 {
                    servicesDecoded0?.append(string0)
                }
            }
        }
        services = servicesDecoded0
        let includeContainer = try containerValues.decodeIfPresent([EcsClientTypes.ServiceField?].self, forKey: .include)
        var includeDecoded0:[EcsClientTypes.ServiceField]? = nil
        if let includeContainer = includeContainer {
            includeDecoded0 = [EcsClientTypes.ServiceField]()
            for enum0 in includeContainer {
                if let enum0 = enum0 {
                    includeDecoded0?.append(enum0)
                }
            }
        }
        include = includeDecoded0
    }
}
