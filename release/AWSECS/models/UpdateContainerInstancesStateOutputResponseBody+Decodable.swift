// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateContainerInstancesStateOutputResponseBody: Swift.Equatable {
    let containerInstances: [EcsClientTypes.ContainerInstance]?
    let failures: [EcsClientTypes.Failure]?
}

extension UpdateContainerInstancesStateOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case containerInstances
        case failures
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let containerInstancesContainer = try containerValues.decodeIfPresent([EcsClientTypes.ContainerInstance?].self, forKey: .containerInstances)
        var containerInstancesDecoded0:[EcsClientTypes.ContainerInstance]? = nil
        if let containerInstancesContainer = containerInstancesContainer {
            containerInstancesDecoded0 = [EcsClientTypes.ContainerInstance]()
            for structure0 in containerInstancesContainer {
                if let structure0 = structure0 {
                    containerInstancesDecoded0?.append(structure0)
                }
            }
        }
        containerInstances = containerInstancesDecoded0
        let failuresContainer = try containerValues.decodeIfPresent([EcsClientTypes.Failure?].self, forKey: .failures)
        var failuresDecoded0:[EcsClientTypes.Failure]? = nil
        if let failuresContainer = failuresContainer {
            failuresDecoded0 = [EcsClientTypes.Failure]()
            for structure0 in failuresContainer {
                if let structure0 = structure0 {
                    failuresDecoded0?.append(structure0)
                }
            }
        }
        failures = failuresDecoded0
    }
}
