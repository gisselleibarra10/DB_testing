// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTasksOutputResponseBody: Swift.Equatable {
    let tasks: [EcsClientTypes.Task]?
    let failures: [EcsClientTypes.Failure]?
}

extension DescribeTasksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failures
        case tasks
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tasksContainer = try containerValues.decodeIfPresent([EcsClientTypes.Task?].self, forKey: .tasks)
        var tasksDecoded0:[EcsClientTypes.Task]? = nil
        if let tasksContainer = tasksContainer {
            tasksDecoded0 = [EcsClientTypes.Task]()
            for structure0 in tasksContainer {
                if let structure0 = structure0 {
                    tasksDecoded0?.append(structure0)
                }
            }
        }
        tasks = tasksDecoded0
        let failuresContainer = try containerValues.decodeIfPresent([EcsClientTypes.Failure?].self, forKey: .failures)
        var failuresDecoded0:[EcsClientTypes.Failure]? = nil
        if let failuresContainer = failuresContainer {
            failuresDecoded0 = [EcsClientTypes.Failure]()
            for structure0 in failuresContainer {
                if let structure0 = structure0 {
                    failuresDecoded0?.append(structure0)
                }
            }
        }
        failures = failuresDecoded0
    }
}
