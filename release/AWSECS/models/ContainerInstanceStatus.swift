// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EcsClientTypes {
    public enum ContainerInstanceStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case active
        case deregistering
        case draining
        case registering
        case registrationFailed
        case sdkUnknown(Swift.String)

        public static var allCases: [ContainerInstanceStatus] {
            return [
                .active,
                .deregistering,
                .draining,
                .registering,
                .registrationFailed,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .active: return "ACTIVE"
            case .deregistering: return "DEREGISTERING"
            case .draining: return "DRAINING"
            case .registering: return "REGISTERING"
            case .registrationFailed: return "REGISTRATION_FAILED"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ContainerInstanceStatus(rawValue: rawValue) ?? ContainerInstanceStatus.sdkUnknown(rawValue)
        }
    }
}
