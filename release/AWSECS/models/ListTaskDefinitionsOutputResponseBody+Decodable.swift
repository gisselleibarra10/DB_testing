// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTaskDefinitionsOutputResponseBody: Swift.Equatable {
    let taskDefinitionArns: [Swift.String]?
    let nextToken: Swift.String?
}

extension ListTaskDefinitionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case taskDefinitionArns
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskDefinitionArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .taskDefinitionArns)
        var taskDefinitionArnsDecoded0:[Swift.String]? = nil
        if let taskDefinitionArnsContainer = taskDefinitionArnsContainer {
            taskDefinitionArnsDecoded0 = [Swift.String]()
            for string0 in taskDefinitionArnsContainer {
                if let string0 = string0 {
                    taskDefinitionArnsDecoded0?.append(string0)
                }
            }
        }
        taskDefinitionArns = taskDefinitionArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
