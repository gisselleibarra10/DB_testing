// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EcsClientTypes.ContainerInstanceHealthStatus: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case details
        case overallStatus
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let details = details {
            var detailsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .details)
            for instancehealthcheckresultlist0 in details {
                try detailsContainer.encode(instancehealthcheckresultlist0)
            }
        }
        if let overallStatus = self.overallStatus {
            try encodeContainer.encode(overallStatus.rawValue, forKey: .overallStatus)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let overallStatusDecoded = try containerValues.decodeIfPresent(EcsClientTypes.InstanceHealthCheckState.self, forKey: .overallStatus)
        overallStatus = overallStatusDecoded
        let detailsContainer = try containerValues.decodeIfPresent([EcsClientTypes.InstanceHealthCheckResult?].self, forKey: .details)
        var detailsDecoded0:[EcsClientTypes.InstanceHealthCheckResult]? = nil
        if let detailsContainer = detailsContainer {
            detailsDecoded0 = [EcsClientTypes.InstanceHealthCheckResult]()
            for structure0 in detailsContainer {
                if let structure0 = structure0 {
                    detailsDecoded0?.append(structure0)
                }
            }
        }
        details = detailsDecoded0
    }
}
