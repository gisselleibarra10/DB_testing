// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContainerInstancesInputBody: Swift.Equatable {
    let cluster: Swift.String?
    let filter: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let status: EcsClientTypes.ContainerInstanceStatus?
}

extension ListContainerInstancesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cluster
        case filter
        case maxResults
        case nextToken
        case status
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cluster)
        cluster = clusterDecoded
        let filterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filter)
        filter = filterDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let statusDecoded = try containerValues.decodeIfPresent(EcsClientTypes.ContainerInstanceStatus.self, forKey: .status)
        status = statusDecoded
    }
}
