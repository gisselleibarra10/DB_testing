// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SubmitContainerStateChangeInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cluster
        case containerName
        case exitCode
        case networkBindings
        case reason
        case runtimeId
        case status
        case task
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cluster = self.cluster {
            try encodeContainer.encode(cluster, forKey: .cluster)
        }
        if let containerName = self.containerName {
            try encodeContainer.encode(containerName, forKey: .containerName)
        }
        if let exitCode = self.exitCode {
            try encodeContainer.encode(exitCode, forKey: .exitCode)
        }
        if let networkBindings = networkBindings {
            var networkBindingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .networkBindings)
            for networkbindings0 in networkBindings {
                try networkBindingsContainer.encode(networkbindings0)
            }
        }
        if let reason = self.reason {
            try encodeContainer.encode(reason, forKey: .reason)
        }
        if let runtimeId = self.runtimeId {
            try encodeContainer.encode(runtimeId, forKey: .runtimeId)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let task = self.task {
            try encodeContainer.encode(task, forKey: .task)
        }
    }
}
