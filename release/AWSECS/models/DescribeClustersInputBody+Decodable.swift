// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeClustersInputBody: Swift.Equatable {
    let clusters: [Swift.String]?
    let include: [EcsClientTypes.ClusterField]?
}

extension DescribeClustersInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusters
        case include
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clustersContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .clusters)
        var clustersDecoded0:[Swift.String]? = nil
        if let clustersContainer = clustersContainer {
            clustersDecoded0 = [Swift.String]()
            for string0 in clustersContainer {
                if let string0 = string0 {
                    clustersDecoded0?.append(string0)
                }
            }
        }
        clusters = clustersDecoded0
        let includeContainer = try containerValues.decodeIfPresent([EcsClientTypes.ClusterField?].self, forKey: .include)
        var includeDecoded0:[EcsClientTypes.ClusterField]? = nil
        if let includeContainer = includeContainer {
            includeDecoded0 = [EcsClientTypes.ClusterField]()
            for enum0 in includeContainer {
                if let enum0 = enum0 {
                    includeDecoded0?.append(enum0)
                }
            }
        }
        include = includeDecoded0
    }
}
