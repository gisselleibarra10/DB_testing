// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EcsClientTypes.VolumeFrom: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case readOnly
        case sourceContainer
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let readOnly = self.readOnly {
            try encodeContainer.encode(readOnly, forKey: .readOnly)
        }
        if let sourceContainer = self.sourceContainer {
            try encodeContainer.encode(sourceContainer, forKey: .sourceContainer)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceContainerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceContainer)
        sourceContainer = sourceContainerDecoded
        let readOnlyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .readOnly)
        readOnly = readOnlyDecoded
    }
}
