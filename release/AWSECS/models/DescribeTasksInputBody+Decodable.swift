// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTasksInputBody: Swift.Equatable {
    let cluster: Swift.String?
    let tasks: [Swift.String]?
    let include: [EcsClientTypes.TaskField]?
}

extension DescribeTasksInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cluster
        case include
        case tasks
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cluster)
        cluster = clusterDecoded
        let tasksContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .tasks)
        var tasksDecoded0:[Swift.String]? = nil
        if let tasksContainer = tasksContainer {
            tasksDecoded0 = [Swift.String]()
            for string0 in tasksContainer {
                if let string0 = string0 {
                    tasksDecoded0?.append(string0)
                }
            }
        }
        tasks = tasksDecoded0
        let includeContainer = try containerValues.decodeIfPresent([EcsClientTypes.TaskField?].self, forKey: .include)
        var includeDecoded0:[EcsClientTypes.TaskField]? = nil
        if let includeContainer = includeContainer {
            includeDecoded0 = [EcsClientTypes.TaskField]()
            for enum0 in includeContainer {
                if let enum0 = enum0 {
                    includeDecoded0?.append(enum0)
                }
            }
        }
        include = includeDecoded0
    }
}
