// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EcsClientTypes.ManagedAgent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastStartedAt
        case lastStatus
        case name
        case reason
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lastStartedAt = self.lastStartedAt {
            try encodeContainer.encode(lastStartedAt.timeIntervalSince1970, forKey: .lastStartedAt)
        }
        if let lastStatus = self.lastStatus {
            try encodeContainer.encode(lastStatus, forKey: .lastStatus)
        }
        if let name = self.name {
            try encodeContainer.encode(name.rawValue, forKey: .name)
        }
        if let reason = self.reason {
            try encodeContainer.encode(reason, forKey: .reason)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lastStartedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastStartedAt)
        lastStartedAt = lastStartedAtDecoded
        let nameDecoded = try containerValues.decodeIfPresent(EcsClientTypes.ManagedAgentName.self, forKey: .name)
        name = nameDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reason)
        reason = reasonDecoded
        let lastStatusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastStatus)
        lastStatus = lastStatusDecoded
    }
}
