// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCapacityProvidersInputBody: Swift.Equatable {
    let capacityProviders: [Swift.String]?
    let include: [EcsClientTypes.CapacityProviderField]?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension DescribeCapacityProvidersInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case capacityProviders
        case include
        case maxResults
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let capacityProvidersContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .capacityProviders)
        var capacityProvidersDecoded0:[Swift.String]? = nil
        if let capacityProvidersContainer = capacityProvidersContainer {
            capacityProvidersDecoded0 = [Swift.String]()
            for string0 in capacityProvidersContainer {
                if let string0 = string0 {
                    capacityProvidersDecoded0?.append(string0)
                }
            }
        }
        capacityProviders = capacityProvidersDecoded0
        let includeContainer = try containerValues.decodeIfPresent([EcsClientTypes.CapacityProviderField?].self, forKey: .include)
        var includeDecoded0:[EcsClientTypes.CapacityProviderField]? = nil
        if let includeContainer = includeContainer {
            includeDecoded0 = [EcsClientTypes.CapacityProviderField]()
            for enum0 in includeContainer {
                if let enum0 = enum0 {
                    includeDecoded0?.append(enum0)
                }
            }
        }
        include = includeDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
