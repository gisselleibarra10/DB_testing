// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServicesInputBody: Swift.Equatable {
    let cluster: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let launchType: EcsClientTypes.LaunchType?
    let schedulingStrategy: EcsClientTypes.SchedulingStrategy?
}

extension ListServicesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cluster
        case launchType
        case maxResults
        case nextToken
        case schedulingStrategy
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cluster)
        cluster = clusterDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let launchTypeDecoded = try containerValues.decodeIfPresent(EcsClientTypes.LaunchType.self, forKey: .launchType)
        launchType = launchTypeDecoded
        let schedulingStrategyDecoded = try containerValues.decodeIfPresent(EcsClientTypes.SchedulingStrategy.self, forKey: .schedulingStrategy)
        schedulingStrategy = schedulingStrategyDecoded
    }
}
