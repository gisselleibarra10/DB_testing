// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExecuteCommandOutputResponseBody: Swift.Equatable {
    let clusterArn: Swift.String?
    let containerArn: Swift.String?
    let containerName: Swift.String?
    let interactive: Swift.Bool
    let session: EcsClientTypes.Session?
    let taskArn: Swift.String?
}

extension ExecuteCommandOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusterArn
        case containerArn
        case containerName
        case interactive
        case session
        case taskArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterArn)
        clusterArn = clusterArnDecoded
        let containerArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .containerArn)
        containerArn = containerArnDecoded
        let containerNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .containerName)
        containerName = containerNameDecoded
        let interactiveDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .interactive) ?? false
        interactive = interactiveDecoded
        let sessionDecoded = try containerValues.decodeIfPresent(EcsClientTypes.Session.self, forKey: .session)
        session = sessionDecoded
        let taskArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskArn)
        taskArn = taskArnDecoded
    }
}
