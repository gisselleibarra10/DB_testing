// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateClusterInputBody: Swift.Equatable {
    let cluster: Swift.String?
    let settings: [EcsClientTypes.ClusterSetting]?
    let configuration: EcsClientTypes.ClusterConfiguration?
}

extension UpdateClusterInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cluster
        case configuration
        case settings
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cluster)
        cluster = clusterDecoded
        let settingsContainer = try containerValues.decodeIfPresent([EcsClientTypes.ClusterSetting?].self, forKey: .settings)
        var settingsDecoded0:[EcsClientTypes.ClusterSetting]? = nil
        if let settingsContainer = settingsContainer {
            settingsDecoded0 = [EcsClientTypes.ClusterSetting]()
            for structure0 in settingsContainer {
                if let structure0 = structure0 {
                    settingsDecoded0?.append(structure0)
                }
            }
        }
        settings = settingsDecoded0
        let configurationDecoded = try containerValues.decodeIfPresent(EcsClientTypes.ClusterConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
    }
}
