// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAttributesInputBody: Swift.Equatable {
    let cluster: Swift.String?
    let targetType: EcsClientTypes.TargetType?
    let attributeName: Swift.String?
    let attributeValue: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension ListAttributesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributeName
        case attributeValue
        case cluster
        case maxResults
        case nextToken
        case targetType
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cluster)
        cluster = clusterDecoded
        let targetTypeDecoded = try containerValues.decodeIfPresent(EcsClientTypes.TargetType.self, forKey: .targetType)
        targetType = targetTypeDecoded
        let attributeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attributeName)
        attributeName = attributeNameDecoded
        let attributeValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attributeValue)
        attributeValue = attributeValueDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
