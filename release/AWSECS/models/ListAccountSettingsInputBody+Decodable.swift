// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAccountSettingsInputBody: Swift.Equatable {
    let name: EcsClientTypes.SettingName?
    let value: Swift.String?
    let principalArn: Swift.String?
    let effectiveSettings: Swift.Bool
    let nextToken: Swift.String?
    let maxResults: Swift.Int
}

extension ListAccountSettingsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case effectiveSettings
        case maxResults
        case name
        case nextToken
        case principalArn
        case value
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(EcsClientTypes.SettingName.self, forKey: .name)
        name = nameDecoded
        let valueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .value)
        value = valueDecoded
        let principalArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .principalArn)
        principalArn = principalArnDecoded
        let effectiveSettingsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .effectiveSettings) ?? false
        effectiveSettings = effectiveSettingsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults) ?? 0
        maxResults = maxResultsDecoded
    }
}
