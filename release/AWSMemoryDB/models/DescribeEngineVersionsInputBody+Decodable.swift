// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEngineVersionsInputBody: Swift.Equatable {
    let engineVersion: Swift.String?
    let parameterGroupFamily: Swift.String?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
    let defaultOnly: Swift.Bool
}

extension DescribeEngineVersionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultOnly = "DefaultOnly"
        case engineVersion = "EngineVersion"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case parameterGroupFamily = "ParameterGroupFamily"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let engineVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .engineVersion)
        engineVersion = engineVersionDecoded
        let parameterGroupFamilyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parameterGroupFamily)
        parameterGroupFamily = parameterGroupFamilyDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let defaultOnlyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .defaultOnly) ?? false
        defaultOnly = defaultOnlyDecoded
    }
}
