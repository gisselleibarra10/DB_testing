// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MemoryDbClientTypes.ClusterPendingUpdates: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aCLs = "ACLs"
        case resharding = "Resharding"
        case serviceUpdates = "ServiceUpdates"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aCLs = self.aCLs {
            try encodeContainer.encode(aCLs, forKey: .aCLs)
        }
        if let resharding = self.resharding {
            try encodeContainer.encode(resharding, forKey: .resharding)
        }
        if let serviceUpdates = serviceUpdates {
            var serviceUpdatesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .serviceUpdates)
            for pendingmodifiedserviceupdatelist0 in serviceUpdates {
                try serviceUpdatesContainer.encode(pendingmodifiedserviceupdatelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reshardingDecoded = try containerValues.decodeIfPresent(MemoryDbClientTypes.ReshardingStatus.self, forKey: .resharding)
        resharding = reshardingDecoded
        let aCLsDecoded = try containerValues.decodeIfPresent(MemoryDbClientTypes.ACLsUpdateStatus.self, forKey: .aCLs)
        aCLs = aCLsDecoded
        let serviceUpdatesContainer = try containerValues.decodeIfPresent([MemoryDbClientTypes.PendingModifiedServiceUpdate?].self, forKey: .serviceUpdates)
        var serviceUpdatesDecoded0:[MemoryDbClientTypes.PendingModifiedServiceUpdate]? = nil
        if let serviceUpdatesContainer = serviceUpdatesContainer {
            serviceUpdatesDecoded0 = [MemoryDbClientTypes.PendingModifiedServiceUpdate]()
            for structure0 in serviceUpdatesContainer {
                if let structure0 = structure0 {
                    serviceUpdatesDecoded0?.append(structure0)
                }
            }
        }
        serviceUpdates = serviceUpdatesDecoded0
    }
}
