// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSnapshotsInputBody: Swift.Equatable {
    let clusterName: Swift.String?
    let snapshotName: Swift.String?
    let source: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let showDetail: Swift.Bool?
}

extension DescribeSnapshotsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusterName = "ClusterName"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case showDetail = "ShowDetail"
        case snapshotName = "SnapshotName"
        case source = "Source"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterName)
        clusterName = clusterNameDecoded
        let snapshotNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snapshotName)
        snapshotName = snapshotNameDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .source)
        source = sourceDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let showDetailDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .showDetail)
        showDetail = showDetailDecoded
    }
}
