// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeServiceUpdatesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let serviceUpdates: [MemoryDbClientTypes.ServiceUpdate]?
}

extension DescribeServiceUpdatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case serviceUpdates = "ServiceUpdates"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let serviceUpdatesContainer = try containerValues.decodeIfPresent([MemoryDbClientTypes.ServiceUpdate?].self, forKey: .serviceUpdates)
        var serviceUpdatesDecoded0:[MemoryDbClientTypes.ServiceUpdate]? = nil
        if let serviceUpdatesContainer = serviceUpdatesContainer {
            serviceUpdatesDecoded0 = [MemoryDbClientTypes.ServiceUpdate]()
            for structure0 in serviceUpdatesContainer {
                if let structure0 = structure0 {
                    serviceUpdatesDecoded0?.append(structure0)
                }
            }
        }
        serviceUpdates = serviceUpdatesDecoded0
    }
}
