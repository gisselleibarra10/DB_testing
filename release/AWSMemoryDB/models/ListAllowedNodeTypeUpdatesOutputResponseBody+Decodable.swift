// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAllowedNodeTypeUpdatesOutputResponseBody: Swift.Equatable {
    let scaleUpNodeTypes: [Swift.String]?
    let scaleDownNodeTypes: [Swift.String]?
}

extension ListAllowedNodeTypeUpdatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case scaleDownNodeTypes = "ScaleDownNodeTypes"
        case scaleUpNodeTypes = "ScaleUpNodeTypes"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scaleUpNodeTypesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .scaleUpNodeTypes)
        var scaleUpNodeTypesDecoded0:[Swift.String]? = nil
        if let scaleUpNodeTypesContainer = scaleUpNodeTypesContainer {
            scaleUpNodeTypesDecoded0 = [Swift.String]()
            for string0 in scaleUpNodeTypesContainer {
                if let string0 = string0 {
                    scaleUpNodeTypesDecoded0?.append(string0)
                }
            }
        }
        scaleUpNodeTypes = scaleUpNodeTypesDecoded0
        let scaleDownNodeTypesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .scaleDownNodeTypes)
        var scaleDownNodeTypesDecoded0:[Swift.String]? = nil
        if let scaleDownNodeTypesContainer = scaleDownNodeTypesContainer {
            scaleDownNodeTypesDecoded0 = [Swift.String]()
            for string0 in scaleDownNodeTypesContainer {
                if let string0 = string0 {
                    scaleDownNodeTypesDecoded0?.append(string0)
                }
            }
        }
        scaleDownNodeTypes = scaleDownNodeTypesDecoded0
    }
}
