// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEngineVersionsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let engineVersions: [MemoryDbClientTypes.EngineVersionInfo]?
}

extension DescribeEngineVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case engineVersions = "EngineVersions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let engineVersionsContainer = try containerValues.decodeIfPresent([MemoryDbClientTypes.EngineVersionInfo?].self, forKey: .engineVersions)
        var engineVersionsDecoded0:[MemoryDbClientTypes.EngineVersionInfo]? = nil
        if let engineVersionsContainer = engineVersionsContainer {
            engineVersionsDecoded0 = [MemoryDbClientTypes.EngineVersionInfo]()
            for structure0 in engineVersionsContainer {
                if let structure0 = structure0 {
                    engineVersionsDecoded0?.append(structure0)
                }
            }
        }
        engineVersions = engineVersionsDecoded0
    }
}
