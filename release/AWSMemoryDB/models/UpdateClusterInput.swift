// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateClusterInput: Swift.Equatable {
    /// The Access Control List that is associated with the cluster
    public var aCLName: Swift.String?
    /// The name of the cluster to update
    /// This member is required.
    public var clusterName: Swift.String?
    /// The description of the cluster to update
    public var description: Swift.String?
    /// The upgraded version of the engine to be run on the nodes. You can upgrade to a newer engine version, but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster and create it anew with the earlier engine version.
    public var engineVersion: Swift.String?
    /// The maintenance window to update
    public var maintenanceWindow: Swift.String?
    /// A valid node type that you want to scale this cluster up or down to.
    public var nodeType: Swift.String?
    /// The name of the parameter group to update
    public var parameterGroupName: Swift.String?
    /// The number of replicas that will reside in each shard
    public var replicaConfiguration: MemoryDbClientTypes.ReplicaConfigurationRequest?
    /// The SecurityGroupIds to update
    public var securityGroupIds: [Swift.String]?
    /// The number of shards in the cluster
    public var shardConfiguration: MemoryDbClientTypes.ShardConfigurationRequest?
    /// The number of days for which MemoryDB retains automatic cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted.
    public var snapshotRetentionLimit: Swift.Int?
    /// The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your cluster.
    public var snapshotWindow: Swift.String?
    /// The SNS topic ARN to update
    public var snsTopicArn: Swift.String?
    /// The status of the Amazon SNS notification topic. Notifications are sent only if the status is active.
    public var snsTopicStatus: Swift.String?

    public init (
        aCLName: Swift.String? = nil,
        clusterName: Swift.String? = nil,
        description: Swift.String? = nil,
        engineVersion: Swift.String? = nil,
        maintenanceWindow: Swift.String? = nil,
        nodeType: Swift.String? = nil,
        parameterGroupName: Swift.String? = nil,
        replicaConfiguration: MemoryDbClientTypes.ReplicaConfigurationRequest? = nil,
        securityGroupIds: [Swift.String]? = nil,
        shardConfiguration: MemoryDbClientTypes.ShardConfigurationRequest? = nil,
        snapshotRetentionLimit: Swift.Int? = nil,
        snapshotWindow: Swift.String? = nil,
        snsTopicArn: Swift.String? = nil,
        snsTopicStatus: Swift.String? = nil
    )
    {
        self.aCLName = aCLName
        self.clusterName = clusterName
        self.description = description
        self.engineVersion = engineVersion
        self.maintenanceWindow = maintenanceWindow
        self.nodeType = nodeType
        self.parameterGroupName = parameterGroupName
        self.replicaConfiguration = replicaConfiguration
        self.securityGroupIds = securityGroupIds
        self.shardConfiguration = shardConfiguration
        self.snapshotRetentionLimit = snapshotRetentionLimit
        self.snapshotWindow = snapshotWindow
        self.snsTopicArn = snsTopicArn
        self.snsTopicStatus = snsTopicStatus
    }
}
