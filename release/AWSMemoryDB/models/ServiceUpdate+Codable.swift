// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MemoryDbClientTypes.ServiceUpdate: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case autoUpdateStartDate = "AutoUpdateStartDate"
        case clusterName = "ClusterName"
        case description = "Description"
        case nodesUpdated = "NodesUpdated"
        case releaseDate = "ReleaseDate"
        case serviceUpdateName = "ServiceUpdateName"
        case status = "Status"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let autoUpdateStartDate = self.autoUpdateStartDate {
            try encodeContainer.encode(autoUpdateStartDate.timeIntervalSince1970, forKey: .autoUpdateStartDate)
        }
        if let clusterName = self.clusterName {
            try encodeContainer.encode(clusterName, forKey: .clusterName)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let nodesUpdated = self.nodesUpdated {
            try encodeContainer.encode(nodesUpdated, forKey: .nodesUpdated)
        }
        if let releaseDate = self.releaseDate {
            try encodeContainer.encode(releaseDate.timeIntervalSince1970, forKey: .releaseDate)
        }
        if let serviceUpdateName = self.serviceUpdateName {
            try encodeContainer.encode(serviceUpdateName, forKey: .serviceUpdateName)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterName)
        clusterName = clusterNameDecoded
        let serviceUpdateNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serviceUpdateName)
        serviceUpdateName = serviceUpdateNameDecoded
        let releaseDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .releaseDate)
        releaseDate = releaseDateDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let statusDecoded = try containerValues.decodeIfPresent(MemoryDbClientTypes.ServiceUpdateStatus.self, forKey: .status)
        status = statusDecoded
        let typeDecoded = try containerValues.decodeIfPresent(MemoryDbClientTypes.ServiceUpdateType.self, forKey: .type)
        type = typeDecoded
        let nodesUpdatedDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nodesUpdated)
        nodesUpdated = nodesUpdatedDecoded
        let autoUpdateStartDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .autoUpdateStartDate)
        autoUpdateStartDate = autoUpdateStartDateDecoded
    }
}
