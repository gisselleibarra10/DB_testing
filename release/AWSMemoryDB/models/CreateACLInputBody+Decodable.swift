// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateACLInputBody: Swift.Equatable {
    let aCLName: Swift.String?
    let userNames: [Swift.String]?
    let tags: [MemoryDbClientTypes.Tag]?
}

extension CreateACLInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aCLName = "ACLName"
        case tags = "Tags"
        case userNames = "UserNames"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aCLNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .aCLName)
        aCLName = aCLNameDecoded
        let userNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .userNames)
        var userNamesDecoded0:[Swift.String]? = nil
        if let userNamesContainer = userNamesContainer {
            userNamesDecoded0 = [Swift.String]()
            for string0 in userNamesContainer {
                if let string0 = string0 {
                    userNamesDecoded0?.append(string0)
                }
            }
        }
        userNames = userNamesDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([MemoryDbClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[MemoryDbClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [MemoryDbClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
