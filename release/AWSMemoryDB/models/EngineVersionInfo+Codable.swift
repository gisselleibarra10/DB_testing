// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MemoryDbClientTypes.EngineVersionInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enginePatchVersion = "EnginePatchVersion"
        case engineVersion = "EngineVersion"
        case parameterGroupFamily = "ParameterGroupFamily"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let enginePatchVersion = self.enginePatchVersion {
            try encodeContainer.encode(enginePatchVersion, forKey: .enginePatchVersion)
        }
        if let engineVersion = self.engineVersion {
            try encodeContainer.encode(engineVersion, forKey: .engineVersion)
        }
        if let parameterGroupFamily = self.parameterGroupFamily {
            try encodeContainer.encode(parameterGroupFamily, forKey: .parameterGroupFamily)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let engineVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .engineVersion)
        engineVersion = engineVersionDecoded
        let enginePatchVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .enginePatchVersion)
        enginePatchVersion = enginePatchVersionDecoded
        let parameterGroupFamilyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parameterGroupFamily)
        parameterGroupFamily = parameterGroupFamilyDecoded
    }
}
