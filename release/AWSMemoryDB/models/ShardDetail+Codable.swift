// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MemoryDbClientTypes.ShardDetail: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configuration = "Configuration"
        case name = "Name"
        case size = "Size"
        case snapshotCreationTime = "SnapshotCreationTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configuration = self.configuration {
            try encodeContainer.encode(configuration, forKey: .configuration)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let size = self.size {
            try encodeContainer.encode(size, forKey: .size)
        }
        if let snapshotCreationTime = self.snapshotCreationTime {
            try encodeContainer.encode(snapshotCreationTime.timeIntervalSince1970, forKey: .snapshotCreationTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let configurationDecoded = try containerValues.decodeIfPresent(MemoryDbClientTypes.ShardConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
        let sizeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .size)
        size = sizeDecoded
        let snapshotCreationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .snapshotCreationTime)
        snapshotCreationTime = snapshotCreationTimeDecoded
    }
}
