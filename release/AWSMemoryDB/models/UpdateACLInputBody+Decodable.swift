// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateACLInputBody: Swift.Equatable {
    let aCLName: Swift.String?
    let userNamesToAdd: [Swift.String]?
    let userNamesToRemove: [Swift.String]?
}

extension UpdateACLInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aCLName = "ACLName"
        case userNamesToAdd = "UserNamesToAdd"
        case userNamesToRemove = "UserNamesToRemove"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aCLNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .aCLName)
        aCLName = aCLNameDecoded
        let userNamesToAddContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .userNamesToAdd)
        var userNamesToAddDecoded0:[Swift.String]? = nil
        if let userNamesToAddContainer = userNamesToAddContainer {
            userNamesToAddDecoded0 = [Swift.String]()
            for string0 in userNamesToAddContainer {
                if let string0 = string0 {
                    userNamesToAddDecoded0?.append(string0)
                }
            }
        }
        userNamesToAdd = userNamesToAddDecoded0
        let userNamesToRemoveContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .userNamesToRemove)
        var userNamesToRemoveDecoded0:[Swift.String]? = nil
        if let userNamesToRemoveContainer = userNamesToRemoveContainer {
            userNamesToRemoveDecoded0 = [Swift.String]()
            for string0 in userNamesToRemoveContainer {
                if let string0 = string0 {
                    userNamesToRemoveDecoded0?.append(string0)
                }
            }
        }
        userNamesToRemove = userNamesToRemoveDecoded0
    }
}
