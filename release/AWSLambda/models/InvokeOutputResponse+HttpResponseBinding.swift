// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InvokeOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if let executedVersionHeaderValue = httpResponse.headers.value(for: "X-Amz-Executed-Version") {
            self.executedVersion = executedVersionHeaderValue
        } else {
            self.executedVersion = nil
        }
        if let functionErrorHeaderValue = httpResponse.headers.value(for: "X-Amz-Function-Error") {
            self.functionError = functionErrorHeaderValue
        } else {
            self.functionError = nil
        }
        if let logResultHeaderValue = httpResponse.headers.value(for: "X-Amz-Log-Result") {
            self.logResult = logResultHeaderValue
        } else {
            self.logResult = nil
        }
        if case .stream(let reader) = httpResponse.body {
            let data = reader.toBytes().toData()
            self.payload = data
        } else {
            self.payload = nil
        }
        self.statusCode = httpResponse.statusCode.rawValue
    }
}
