// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeleteEventSourceMappingOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: DeleteEventSourceMappingOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.amazonManagedKafkaEventSourceConfig = output.amazonManagedKafkaEventSourceConfig
            self.batchSize = output.batchSize
            self.bisectBatchOnFunctionError = output.bisectBatchOnFunctionError
            self.destinationConfig = output.destinationConfig
            self.eventSourceArn = output.eventSourceArn
            self.filterCriteria = output.filterCriteria
            self.functionArn = output.functionArn
            self.functionResponseTypes = output.functionResponseTypes
            self.lastModified = output.lastModified
            self.lastProcessingResult = output.lastProcessingResult
            self.maximumBatchingWindowInSeconds = output.maximumBatchingWindowInSeconds
            self.maximumRecordAgeInSeconds = output.maximumRecordAgeInSeconds
            self.maximumRetryAttempts = output.maximumRetryAttempts
            self.parallelizationFactor = output.parallelizationFactor
            self.queues = output.queues
            self.selfManagedEventSource = output.selfManagedEventSource
            self.selfManagedKafkaEventSourceConfig = output.selfManagedKafkaEventSourceConfig
            self.sourceAccessConfigurations = output.sourceAccessConfigurations
            self.startingPosition = output.startingPosition
            self.startingPositionTimestamp = output.startingPositionTimestamp
            self.state = output.state
            self.stateTransitionReason = output.stateTransitionReason
            self.topics = output.topics
            self.tumblingWindowInSeconds = output.tumblingWindowInSeconds
            self.uUID = output.uUID
        } else {
            self.amazonManagedKafkaEventSourceConfig = nil
            self.batchSize = nil
            self.bisectBatchOnFunctionError = nil
            self.destinationConfig = nil
            self.eventSourceArn = nil
            self.filterCriteria = nil
            self.functionArn = nil
            self.functionResponseTypes = nil
            self.lastModified = nil
            self.lastProcessingResult = nil
            self.maximumBatchingWindowInSeconds = nil
            self.maximumRecordAgeInSeconds = nil
            self.maximumRetryAttempts = nil
            self.parallelizationFactor = nil
            self.queues = nil
            self.selfManagedEventSource = nil
            self.selfManagedKafkaEventSourceConfig = nil
            self.sourceAccessConfigurations = nil
            self.startingPosition = nil
            self.startingPositionTimestamp = nil
            self.state = nil
            self.stateTransitionReason = nil
            self.topics = nil
            self.tumblingWindowInSeconds = nil
            self.uUID = nil
        }
    }
}
