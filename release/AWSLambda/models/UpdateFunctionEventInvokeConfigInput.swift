// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateFunctionEventInvokeConfigInput: Swift.Equatable {
    /// A destination for events after they have been sent to a function for processing. Destinations
    ///
    /// * Function - The Amazon Resource Name (ARN) of a Lambda function.
    ///
    /// * Queue - The ARN of an SQS queue.
    ///
    /// * Topic - The ARN of an SNS topic.
    ///
    /// * Event Bus - The ARN of an Amazon EventBridge event bus.
    public var destinationConfig: LambdaClientTypes.DestinationConfig?
    /// The name of the Lambda function, version, or alias. Name formats
    ///
    /// * Function name - my-function (name-only), my-function:v1 (with alias).
    ///
    /// * Function ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function.
    ///
    /// * Partial ARN - 123456789012:function:my-function.
    ///
    ///
    /// You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.
    /// This member is required.
    public var functionName: Swift.String?
    /// The maximum age of a request that Lambda sends to a function for processing.
    public var maximumEventAgeInSeconds: Swift.Int?
    /// The maximum number of times to retry when the function returns an error.
    public var maximumRetryAttempts: Swift.Int?
    /// A version number or alias name.
    public var qualifier: Swift.String?

    public init (
        destinationConfig: LambdaClientTypes.DestinationConfig? = nil,
        functionName: Swift.String? = nil,
        maximumEventAgeInSeconds: Swift.Int? = nil,
        maximumRetryAttempts: Swift.Int? = nil,
        qualifier: Swift.String? = nil
    )
    {
        self.destinationConfig = destinationConfig
        self.functionName = functionName
        self.maximumEventAgeInSeconds = maximumEventAgeInSeconds
        self.maximumRetryAttempts = maximumRetryAttempts
        self.qualifier = qualifier
    }
}
