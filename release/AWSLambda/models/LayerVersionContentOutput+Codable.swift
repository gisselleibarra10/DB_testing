// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LambdaClientTypes.LayerVersionContentOutput: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case codeSha256 = "CodeSha256"
        case codeSize = "CodeSize"
        case location = "Location"
        case signingJobArn = "SigningJobArn"
        case signingProfileVersionArn = "SigningProfileVersionArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let codeSha256 = self.codeSha256 {
            try encodeContainer.encode(codeSha256, forKey: .codeSha256)
        }
        if codeSize != 0 {
            try encodeContainer.encode(codeSize, forKey: .codeSize)
        }
        if let location = self.location {
            try encodeContainer.encode(location, forKey: .location)
        }
        if let signingJobArn = self.signingJobArn {
            try encodeContainer.encode(signingJobArn, forKey: .signingJobArn)
        }
        if let signingProfileVersionArn = self.signingProfileVersionArn {
            try encodeContainer.encode(signingProfileVersionArn, forKey: .signingProfileVersionArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let locationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .location)
        location = locationDecoded
        let codeSha256Decoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .codeSha256)
        codeSha256 = codeSha256Decoded
        let codeSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .codeSize) ?? 0
        codeSize = codeSizeDecoded
        let signingProfileVersionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .signingProfileVersionArn)
        signingProfileVersionArn = signingProfileVersionArnDecoded
        let signingJobArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .signingJobArn)
        signingJobArn = signingJobArnDecoded
    }
}
