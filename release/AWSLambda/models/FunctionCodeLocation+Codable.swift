// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LambdaClientTypes.FunctionCodeLocation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case imageUri = "ImageUri"
        case location = "Location"
        case repositoryType = "RepositoryType"
        case resolvedImageUri = "ResolvedImageUri"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let imageUri = self.imageUri {
            try encodeContainer.encode(imageUri, forKey: .imageUri)
        }
        if let location = self.location {
            try encodeContainer.encode(location, forKey: .location)
        }
        if let repositoryType = self.repositoryType {
            try encodeContainer.encode(repositoryType, forKey: .repositoryType)
        }
        if let resolvedImageUri = self.resolvedImageUri {
            try encodeContainer.encode(resolvedImageUri, forKey: .resolvedImageUri)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryType)
        repositoryType = repositoryTypeDecoded
        let locationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .location)
        location = locationDecoded
        let imageUriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imageUri)
        imageUri = imageUriDecoded
        let resolvedImageUriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resolvedImageUri)
        resolvedImageUri = resolvedImageUriDecoded
    }
}
