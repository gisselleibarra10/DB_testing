// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListEventSourceMappingsInput: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of the event source.
    ///
    /// * Amazon Kinesis - The ARN of the data stream or a stream consumer.
    ///
    /// * Amazon DynamoDB Streams - The ARN of the stream.
    ///
    /// * Amazon Simple Queue Service - The ARN of the queue.
    ///
    /// * Amazon Managed Streaming for Apache Kafka - The ARN of the cluster.
    public var eventSourceArn: Swift.String?
    /// The name of the Lambda function. Name formats
    ///
    /// * Function name - MyFunction.
    ///
    /// * Function ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction.
    ///
    /// * Version or Alias ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD.
    ///
    /// * Partial ARN - 123456789012:function:MyFunction.
    ///
    ///
    /// The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.
    public var functionName: Swift.String?
    /// A pagination token returned by a previous call.
    public var marker: Swift.String?
    /// The maximum number of event source mappings to return. Note that ListEventSourceMappings returns a maximum of 100 items in each response, even if you set the number higher.
    public var maxItems: Swift.Int?

    public init (
        eventSourceArn: Swift.String? = nil,
        functionName: Swift.String? = nil,
        marker: Swift.String? = nil,
        maxItems: Swift.Int? = nil
    )
    {
        self.eventSourceArn = eventSourceArn
        self.functionName = functionName
        self.marker = marker
        self.maxItems = maxItems
    }
}
