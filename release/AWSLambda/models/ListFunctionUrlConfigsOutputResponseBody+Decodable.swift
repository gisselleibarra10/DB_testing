// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFunctionUrlConfigsOutputResponseBody: Swift.Equatable {
    let functionUrlConfigs: [LambdaClientTypes.FunctionUrlConfig]?
    let nextMarker: Swift.String?
}

extension ListFunctionUrlConfigsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case functionUrlConfigs = "FunctionUrlConfigs"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let functionUrlConfigsContainer = try containerValues.decodeIfPresent([LambdaClientTypes.FunctionUrlConfig?].self, forKey: .functionUrlConfigs)
        var functionUrlConfigsDecoded0:[LambdaClientTypes.FunctionUrlConfig]? = nil
        if let functionUrlConfigsContainer = functionUrlConfigsContainer {
            functionUrlConfigsDecoded0 = [LambdaClientTypes.FunctionUrlConfig]()
            for structure0 in functionUrlConfigsContainer {
                if let structure0 = structure0 {
                    functionUrlConfigsDecoded0?.append(structure0)
                }
            }
        }
        functionUrlConfigs = functionUrlConfigsDecoded0
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
    }
}
