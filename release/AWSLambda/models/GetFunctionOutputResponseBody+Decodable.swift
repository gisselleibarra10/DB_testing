// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFunctionOutputResponseBody: Swift.Equatable {
    let configuration: LambdaClientTypes.FunctionConfiguration?
    let code: LambdaClientTypes.FunctionCodeLocation?
    let tags: [Swift.String:Swift.String]?
    let concurrency: LambdaClientTypes.Concurrency?
}

extension GetFunctionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case code = "Code"
        case concurrency = "Concurrency"
        case configuration = "Configuration"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationDecoded = try containerValues.decodeIfPresent(LambdaClientTypes.FunctionConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
        let codeDecoded = try containerValues.decodeIfPresent(LambdaClientTypes.FunctionCodeLocation.self, forKey: .code)
        code = codeDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
        let concurrencyDecoded = try containerValues.decodeIfPresent(LambdaClientTypes.Concurrency.self, forKey: .concurrency)
        concurrency = concurrencyDecoded
    }
}
