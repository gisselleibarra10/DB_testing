// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IdentitystoreClientTypes.Name: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case familyName = "FamilyName"
        case formatted = "Formatted"
        case givenName = "GivenName"
        case honorificPrefix = "HonorificPrefix"
        case honorificSuffix = "HonorificSuffix"
        case middleName = "MiddleName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let familyName = self.familyName {
            try encodeContainer.encode(familyName, forKey: .familyName)
        }
        if let formatted = self.formatted {
            try encodeContainer.encode(formatted, forKey: .formatted)
        }
        if let givenName = self.givenName {
            try encodeContainer.encode(givenName, forKey: .givenName)
        }
        if let honorificPrefix = self.honorificPrefix {
            try encodeContainer.encode(honorificPrefix, forKey: .honorificPrefix)
        }
        if let honorificSuffix = self.honorificSuffix {
            try encodeContainer.encode(honorificSuffix, forKey: .honorificSuffix)
        }
        if let middleName = self.middleName {
            try encodeContainer.encode(middleName, forKey: .middleName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let formattedDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .formatted)
        formatted = formattedDecoded
        let familyNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .familyName)
        familyName = familyNameDecoded
        let givenNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .givenName)
        givenName = givenNameDecoded
        let middleNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .middleName)
        middleName = middleNameDecoded
        let honorificPrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .honorificPrefix)
        honorificPrefix = honorificPrefixDecoded
        let honorificSuffixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .honorificSuffix)
        honorificSuffix = honorificSuffixDecoded
    }
}
