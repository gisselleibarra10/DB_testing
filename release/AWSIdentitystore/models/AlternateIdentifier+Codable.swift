// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IdentitystoreClientTypes.AlternateIdentifier: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case externalid = "ExternalId"
        case uniqueattribute = "UniqueAttribute"
        case sdkUnknown
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .externalid(externalid):
                try container.encode(externalid, forKey: .externalid)
            case let .uniqueattribute(uniqueattribute):
                try container.encode(uniqueattribute, forKey: .uniqueattribute)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let externalidDecoded = try values.decodeIfPresent(IdentitystoreClientTypes.ExternalId.self, forKey: .externalid)
        if let externalid = externalidDecoded {
            self = .externalid(externalid)
            return
        }
        let uniqueattributeDecoded = try values.decodeIfPresent(IdentitystoreClientTypes.UniqueAttribute.self, forKey: .uniqueattribute)
        if let uniqueattribute = uniqueattributeDecoded {
            self = .uniqueattribute(uniqueattribute)
            return
        }
        self = .sdkUnknown("")
    }
}
