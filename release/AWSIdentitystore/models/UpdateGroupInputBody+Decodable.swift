// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGroupInputBody: Swift.Equatable {
    let identityStoreId: Swift.String?
    let groupId: Swift.String?
    let operations: [IdentitystoreClientTypes.AttributeOperation]?
}

extension UpdateGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groupId = "GroupId"
        case identityStoreId = "IdentityStoreId"
        case operations = "Operations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityStoreIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityStoreId)
        identityStoreId = identityStoreIdDecoded
        let groupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groupId)
        groupId = groupIdDecoded
        let operationsContainer = try containerValues.decodeIfPresent([IdentitystoreClientTypes.AttributeOperation?].self, forKey: .operations)
        var operationsDecoded0:[IdentitystoreClientTypes.AttributeOperation]? = nil
        if let operationsContainer = operationsContainer {
            operationsDecoded0 = [IdentitystoreClientTypes.AttributeOperation]()
            for structure0 in operationsContainer {
                if let structure0 = structure0 {
                    operationsDecoded0?.append(structure0)
                }
            }
        }
        operations = operationsDecoded0
    }
}
