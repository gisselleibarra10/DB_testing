// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct IsMemberInGroupsInputBody: Swift.Equatable {
    let identityStoreId: Swift.String?
    let memberId: IdentitystoreClientTypes.MemberId?
    let groupIds: [Swift.String]?
}

extension IsMemberInGroupsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groupIds = "GroupIds"
        case identityStoreId = "IdentityStoreId"
        case memberId = "MemberId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityStoreIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityStoreId)
        identityStoreId = identityStoreIdDecoded
        let memberIdDecoded = try containerValues.decodeIfPresent(IdentitystoreClientTypes.MemberId.self, forKey: .memberId)
        memberId = memberIdDecoded
        let groupIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .groupIds)
        var groupIdsDecoded0:[Swift.String]? = nil
        if let groupIdsContainer = groupIdsContainer {
            groupIdsDecoded0 = [Swift.String]()
            for string0 in groupIdsContainer {
                if let string0 = string0 {
                    groupIdsDecoded0?.append(string0)
                }
            }
        }
        groupIds = groupIdsDecoded0
    }
}
