// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateUserInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addresses = "Addresses"
        case displayName = "DisplayName"
        case emails = "Emails"
        case identityStoreId = "IdentityStoreId"
        case locale = "Locale"
        case name = "Name"
        case nickName = "NickName"
        case phoneNumbers = "PhoneNumbers"
        case preferredLanguage = "PreferredLanguage"
        case profileUrl = "ProfileUrl"
        case timezone = "Timezone"
        case title = "Title"
        case userName = "UserName"
        case userType = "UserType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let addresses = addresses {
            var addressesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .addresses)
            for addresses0 in addresses {
                try addressesContainer.encode(addresses0)
            }
        }
        if let displayName = self.displayName {
            try encodeContainer.encode(displayName, forKey: .displayName)
        }
        if let emails = emails {
            var emailsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .emails)
            for emails0 in emails {
                try emailsContainer.encode(emails0)
            }
        }
        if let identityStoreId = self.identityStoreId {
            try encodeContainer.encode(identityStoreId, forKey: .identityStoreId)
        }
        if let locale = self.locale {
            try encodeContainer.encode(locale, forKey: .locale)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let nickName = self.nickName {
            try encodeContainer.encode(nickName, forKey: .nickName)
        }
        if let phoneNumbers = phoneNumbers {
            var phoneNumbersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .phoneNumbers)
            for phonenumbers0 in phoneNumbers {
                try phoneNumbersContainer.encode(phonenumbers0)
            }
        }
        if let preferredLanguage = self.preferredLanguage {
            try encodeContainer.encode(preferredLanguage, forKey: .preferredLanguage)
        }
        if let profileUrl = self.profileUrl {
            try encodeContainer.encode(profileUrl, forKey: .profileUrl)
        }
        if let timezone = self.timezone {
            try encodeContainer.encode(timezone, forKey: .timezone)
        }
        if let title = self.title {
            try encodeContainer.encode(title, forKey: .title)
        }
        if let userName = self.userName {
            try encodeContainer.encode(userName, forKey: .userName)
        }
        if let userType = self.userType {
            try encodeContainer.encode(userType, forKey: .userType)
        }
    }
}
