// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateUserInput: Swift.Equatable {
    /// A list of Address objects containing addresses associated with the user.
    public var addresses: [IdentitystoreClientTypes.Address]?
    /// A string containing the user's name. This value is typically formatted for display when the user is referenced. For example, "John Doe."
    public var displayName: Swift.String?
    /// A list of Email objects containing email addresses associated with the user.
    public var emails: [IdentitystoreClientTypes.Email]?
    /// The globally unique identifier for the identity store.
    /// This member is required.
    public var identityStoreId: Swift.String?
    /// A string containing the user's geographical region or location.
    public var locale: Swift.String?
    /// An object containing the user's name.
    public var name: IdentitystoreClientTypes.Name?
    /// A string containing an alternate name for the user.
    public var nickName: Swift.String?
    /// A list of PhoneNumber objects containing phone numbers associated with the user.
    public var phoneNumbers: [IdentitystoreClientTypes.PhoneNumber]?
    /// A string containing the preferred language of the user. For example, "American English" or "en-us."
    public var preferredLanguage: Swift.String?
    /// A string containing a URL that may be associated with the user.
    public var profileUrl: Swift.String?
    /// A string containing the user's time zone.
    public var timezone: Swift.String?
    /// A string containing the user's title. Possible values are left unspecified given that they depend on each customer's specific needs.
    public var title: Swift.String?
    /// A unique string used to identify the user. The length limit is 128 characters. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store.
    public var userName: Swift.String?
    /// A string indicating the user's type. Possible values depend on each customer's specific needs, so they are left unspecified.
    public var userType: Swift.String?

    public init (
        addresses: [IdentitystoreClientTypes.Address]? = nil,
        displayName: Swift.String? = nil,
        emails: [IdentitystoreClientTypes.Email]? = nil,
        identityStoreId: Swift.String? = nil,
        locale: Swift.String? = nil,
        name: IdentitystoreClientTypes.Name? = nil,
        nickName: Swift.String? = nil,
        phoneNumbers: [IdentitystoreClientTypes.PhoneNumber]? = nil,
        preferredLanguage: Swift.String? = nil,
        profileUrl: Swift.String? = nil,
        timezone: Swift.String? = nil,
        title: Swift.String? = nil,
        userName: Swift.String? = nil,
        userType: Swift.String? = nil
    )
    {
        self.addresses = addresses
        self.displayName = displayName
        self.emails = emails
        self.identityStoreId = identityStoreId
        self.locale = locale
        self.name = name
        self.nickName = nickName
        self.phoneNumbers = phoneNumbers
        self.preferredLanguage = preferredLanguage
        self.profileUrl = profileUrl
        self.timezone = timezone
        self.title = title
        self.userName = userName
        self.userType = userType
    }
}
