// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IdentitystoreClientTypes.Group: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case displayName = "DisplayName"
        case externalIds = "ExternalIds"
        case groupId = "GroupId"
        case identityStoreId = "IdentityStoreId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let displayName = self.displayName {
            try encodeContainer.encode(displayName, forKey: .displayName)
        }
        if let externalIds = externalIds {
            var externalIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .externalIds)
            for externalids0 in externalIds {
                try externalIdsContainer.encode(externalids0)
            }
        }
        if let groupId = self.groupId {
            try encodeContainer.encode(groupId, forKey: .groupId)
        }
        if let identityStoreId = self.identityStoreId {
            try encodeContainer.encode(identityStoreId, forKey: .identityStoreId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groupId)
        groupId = groupIdDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let externalIdsContainer = try containerValues.decodeIfPresent([IdentitystoreClientTypes.ExternalId?].self, forKey: .externalIds)
        var externalIdsDecoded0:[IdentitystoreClientTypes.ExternalId]? = nil
        if let externalIdsContainer = externalIdsContainer {
            externalIdsDecoded0 = [IdentitystoreClientTypes.ExternalId]()
            for structure0 in externalIdsContainer {
                if let structure0 = structure0 {
                    externalIdsDecoded0?.append(structure0)
                }
            }
        }
        externalIds = externalIdsDecoded0
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let identityStoreIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityStoreId)
        identityStoreId = identityStoreIdDecoded
    }
}
