// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGroupMembershipsOutputResponseBody: Swift.Equatable {
    let groupMemberships: [IdentitystoreClientTypes.GroupMembership]?
    let nextToken: Swift.String?
}

extension ListGroupMembershipsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groupMemberships = "GroupMemberships"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupMembershipsContainer = try containerValues.decodeIfPresent([IdentitystoreClientTypes.GroupMembership?].self, forKey: .groupMemberships)
        var groupMembershipsDecoded0:[IdentitystoreClientTypes.GroupMembership]? = nil
        if let groupMembershipsContainer = groupMembershipsContainer {
            groupMembershipsDecoded0 = [IdentitystoreClientTypes.GroupMembership]()
            for structure0 in groupMembershipsContainer {
                if let structure0 = structure0 {
                    groupMembershipsDecoded0?.append(structure0)
                }
            }
        }
        groupMemberships = groupMembershipsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
