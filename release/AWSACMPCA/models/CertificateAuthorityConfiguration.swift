// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AcmPcaClientTypes {
    /// Contains configuration information for your private certificate authority (CA). This includes information about the class of public key algorithm and the key pair that your private CA creates when it issues a certificate. It also includes the signature algorithm that it uses when issuing certificates, and its X.500 distinguished name. You must specify this information when you call the [CreateCertificateAuthority](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html) action.
    public struct CertificateAuthorityConfiguration: Swift.Equatable {
        /// Specifies information to be added to the extension section of the certificate signing request (CSR).
        public var csrExtensions: AcmPcaClientTypes.CsrExtensions?
        /// Type of the public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate. When you create a subordinate CA, you must use a key algorithm supported by the parent CA.
        /// This member is required.
        public var keyAlgorithm: AcmPcaClientTypes.KeyAlgorithm?
        /// Name of the algorithm your private CA uses to sign certificate requests. This parameter should not be confused with the SigningAlgorithm parameter used to sign certificates when they are issued.
        /// This member is required.
        public var signingAlgorithm: AcmPcaClientTypes.SigningAlgorithm?
        /// Structure that contains X.500 distinguished name information for your private CA.
        /// This member is required.
        public var subject: AcmPcaClientTypes.ASN1Subject?

        public init (
            csrExtensions: AcmPcaClientTypes.CsrExtensions? = nil,
            keyAlgorithm: AcmPcaClientTypes.KeyAlgorithm? = nil,
            signingAlgorithm: AcmPcaClientTypes.SigningAlgorithm? = nil,
            subject: AcmPcaClientTypes.ASN1Subject? = nil
        )
        {
            self.csrExtensions = csrExtensions
            self.keyAlgorithm = keyAlgorithm
            self.signingAlgorithm = signingAlgorithm
            self.subject = subject
        }
    }

}
