// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AcmPcaClientTypes.AccessMethod: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessMethodType = "AccessMethodType"
        case customObjectIdentifier = "CustomObjectIdentifier"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessMethodType = self.accessMethodType {
            try encodeContainer.encode(accessMethodType.rawValue, forKey: .accessMethodType)
        }
        if let customObjectIdentifier = self.customObjectIdentifier {
            try encodeContainer.encode(customObjectIdentifier, forKey: .customObjectIdentifier)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customObjectIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customObjectIdentifier)
        customObjectIdentifier = customObjectIdentifierDecoded
        let accessMethodTypeDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.AccessMethodType.self, forKey: .accessMethodType)
        accessMethodType = accessMethodTypeDecoded
    }
}
