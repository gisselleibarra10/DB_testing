// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AcmPcaClientTypes {
    /// Permissions designate which private CA actions can be performed by an Amazon Web Services service or entity. In order for ACM to automatically renew private certificates, you must give the ACM service principal all available permissions (IssueCertificate, GetCertificate, and ListPermissions). Permissions can be assigned with the [CreatePermission](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreatePermission.html) action, removed with the [DeletePermission](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_DeletePermission.html) action, and listed with the [ListPermissions](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListPermissions.html) action.
    public struct Permission: Swift.Equatable {
        /// The private CA actions that can be performed by the designated Amazon Web Services service.
        public var actions: [AcmPcaClientTypes.ActionType]?
        /// The Amazon Resource Number (ARN) of the private CA from which the permission was issued.
        public var certificateAuthorityArn: Swift.String?
        /// The time at which the permission was created.
        public var createdAt: ClientRuntime.Date?
        /// The name of the policy that is associated with the permission.
        public var policy: Swift.String?
        /// The Amazon Web Services service or entity that holds the permission. At this time, the only valid principal is acm.amazonaws.com.
        public var principal: Swift.String?
        /// The ID of the account that assigned the permission.
        public var sourceAccount: Swift.String?

        public init (
            actions: [AcmPcaClientTypes.ActionType]? = nil,
            certificateAuthorityArn: Swift.String? = nil,
            createdAt: ClientRuntime.Date? = nil,
            policy: Swift.String? = nil,
            principal: Swift.String? = nil,
            sourceAccount: Swift.String? = nil
        )
        {
            self.actions = actions
            self.certificateAuthorityArn = certificateAuthorityArn
            self.createdAt = createdAt
            self.policy = policy
            self.principal = principal
            self.sourceAccount = sourceAccount
        }
    }

}
