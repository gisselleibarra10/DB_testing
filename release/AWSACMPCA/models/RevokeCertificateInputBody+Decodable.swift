// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RevokeCertificateInputBody: Swift.Equatable {
    let certificateAuthorityArn: Swift.String?
    let certificateSerial: Swift.String?
    let revocationReason: AcmPcaClientTypes.RevocationReason?
}

extension RevokeCertificateInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateAuthorityArn = "CertificateAuthorityArn"
        case certificateSerial = "CertificateSerial"
        case revocationReason = "RevocationReason"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateAuthorityArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificateAuthorityArn)
        certificateAuthorityArn = certificateAuthorityArnDecoded
        let certificateSerialDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificateSerial)
        certificateSerial = certificateSerialDecoded
        let revocationReasonDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.RevocationReason.self, forKey: .revocationReason)
        revocationReason = revocationReasonDecoded
    }
}
