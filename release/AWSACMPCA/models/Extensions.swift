// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AcmPcaClientTypes {
    /// Contains X.509 extension information for a certificate.
    public struct Extensions: Swift.Equatable {
        /// Contains a sequence of one or more policy information terms, each of which consists of an object identifier (OID) and optional qualifiers. For more information, see NIST's definition of [Object Identifier (OID)](https://csrc.nist.gov/glossary/term/Object_Identifier). In an end-entity certificate, these terms indicate the policy under which the certificate was issued and the purposes for which it may be used. In a CA certificate, these terms limit the set of policies for certification paths that include this certificate.
        public var certificatePolicies: [AcmPcaClientTypes.PolicyInformation]?
        /// Contains a sequence of one or more X.509 extensions, each of which consists of an object identifier (OID), a base64-encoded value, and the critical flag. For more information, see the [Global OID reference database.](https://oidref.com/2.5.29)
        public var customExtensions: [AcmPcaClientTypes.CustomExtension]?
        /// Specifies additional purposes for which the certified public key may be used other than basic purposes indicated in the KeyUsage extension.
        public var extendedKeyUsage: [AcmPcaClientTypes.ExtendedKeyUsage]?
        /// Defines one or more purposes for which the key contained in the certificate can be used. Default value for each option is false.
        public var keyUsage: AcmPcaClientTypes.KeyUsage?
        /// The subject alternative name extension allows identities to be bound to the subject of the certificate. These identities may be included in addition to or in place of the identity in the subject field of the certificate.
        public var subjectAlternativeNames: [AcmPcaClientTypes.GeneralName]?

        public init (
            certificatePolicies: [AcmPcaClientTypes.PolicyInformation]? = nil,
            customExtensions: [AcmPcaClientTypes.CustomExtension]? = nil,
            extendedKeyUsage: [AcmPcaClientTypes.ExtendedKeyUsage]? = nil,
            keyUsage: AcmPcaClientTypes.KeyUsage? = nil,
            subjectAlternativeNames: [AcmPcaClientTypes.GeneralName]? = nil
        )
        {
            self.certificatePolicies = certificatePolicies
            self.customExtensions = customExtensions
            self.extendedKeyUsage = extendedKeyUsage
            self.keyUsage = keyUsage
            self.subjectAlternativeNames = subjectAlternativeNames
        }
    }

}
