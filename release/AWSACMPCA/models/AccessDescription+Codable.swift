// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AcmPcaClientTypes.AccessDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessLocation = "AccessLocation"
        case accessMethod = "AccessMethod"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessLocation = self.accessLocation {
            try encodeContainer.encode(accessLocation, forKey: .accessLocation)
        }
        if let accessMethod = self.accessMethod {
            try encodeContainer.encode(accessMethod, forKey: .accessMethod)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessMethodDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.AccessMethod.self, forKey: .accessMethod)
        accessMethod = accessMethodDecoded
        let accessLocationDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.GeneralName.self, forKey: .accessLocation)
        accessLocation = accessLocationDecoded
    }
}
