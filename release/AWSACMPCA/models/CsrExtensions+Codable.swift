// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AcmPcaClientTypes.CsrExtensions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case keyUsage = "KeyUsage"
        case subjectInformationAccess = "SubjectInformationAccess"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let keyUsage = self.keyUsage {
            try encodeContainer.encode(keyUsage, forKey: .keyUsage)
        }
        if let subjectInformationAccess = subjectInformationAccess {
            var subjectInformationAccessContainer = encodeContainer.nestedUnkeyedContainer(forKey: .subjectInformationAccess)
            for accessdescriptionlist0 in subjectInformationAccess {
                try subjectInformationAccessContainer.encode(accessdescriptionlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyUsageDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.KeyUsage.self, forKey: .keyUsage)
        keyUsage = keyUsageDecoded
        let subjectInformationAccessContainer = try containerValues.decodeIfPresent([AcmPcaClientTypes.AccessDescription?].self, forKey: .subjectInformationAccess)
        var subjectInformationAccessDecoded0:[AcmPcaClientTypes.AccessDescription]? = nil
        if let subjectInformationAccessContainer = subjectInformationAccessContainer {
            subjectInformationAccessDecoded0 = [AcmPcaClientTypes.AccessDescription]()
            for structure0 in subjectInformationAccessContainer {
                if let structure0 = structure0 {
                    subjectInformationAccessDecoded0?.append(structure0)
                }
            }
        }
        subjectInformationAccess = subjectInformationAccessDecoded0
    }
}
