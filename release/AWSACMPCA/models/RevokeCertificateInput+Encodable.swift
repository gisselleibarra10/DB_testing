// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RevokeCertificateInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateAuthorityArn = "CertificateAuthorityArn"
        case certificateSerial = "CertificateSerial"
        case revocationReason = "RevocationReason"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificateAuthorityArn = self.certificateAuthorityArn {
            try encodeContainer.encode(certificateAuthorityArn, forKey: .certificateAuthorityArn)
        }
        if let certificateSerial = self.certificateSerial {
            try encodeContainer.encode(certificateSerial, forKey: .certificateSerial)
        }
        if let revocationReason = self.revocationReason {
            try encodeContainer.encode(revocationReason.rawValue, forKey: .revocationReason)
        }
    }
}
