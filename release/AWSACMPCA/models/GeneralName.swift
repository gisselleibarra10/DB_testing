// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AcmPcaClientTypes {
    /// Describes an ASN.1 X.400 GeneralName as defined in [RFC 5280](https://datatracker.ietf.org/doc/html/rfc5280). Only one of the following naming options should be provided. Providing more than one option results in an InvalidArgsException error.
    public struct GeneralName: Swift.Equatable {
        /// Contains information about the certificate subject. The Subject field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The Subject must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate.
        public var directoryName: AcmPcaClientTypes.ASN1Subject?
        /// Represents GeneralName as a DNS name.
        public var dnsName: Swift.String?
        /// Represents GeneralName as an EdiPartyName object.
        public var ediPartyName: AcmPcaClientTypes.EdiPartyName?
        /// Represents GeneralName as an IPv4 or IPv6 address.
        public var ipAddress: Swift.String?
        /// Represents GeneralName using an OtherName object.
        public var otherName: AcmPcaClientTypes.OtherName?
        /// Represents GeneralName as an object identifier (OID).
        public var registeredId: Swift.String?
        /// Represents GeneralName as an [RFC 822](https://datatracker.ietf.org/doc/html/rfc822) email address.
        public var rfc822Name: Swift.String?
        /// Represents GeneralName as a URI.
        public var uniformResourceIdentifier: Swift.String?

        public init (
            directoryName: AcmPcaClientTypes.ASN1Subject? = nil,
            dnsName: Swift.String? = nil,
            ediPartyName: AcmPcaClientTypes.EdiPartyName? = nil,
            ipAddress: Swift.String? = nil,
            otherName: AcmPcaClientTypes.OtherName? = nil,
            registeredId: Swift.String? = nil,
            rfc822Name: Swift.String? = nil,
            uniformResourceIdentifier: Swift.String? = nil
        )
        {
            self.directoryName = directoryName
            self.dnsName = dnsName
            self.ediPartyName = ediPartyName
            self.ipAddress = ipAddress
            self.otherName = otherName
            self.registeredId = registeredId
            self.rfc822Name = rfc822Name
            self.uniformResourceIdentifier = uniformResourceIdentifier
        }
    }

}
