// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AcmPcaClientTypes.PolicyQualifierInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case policyQualifierId = "PolicyQualifierId"
        case qualifier = "Qualifier"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let policyQualifierId = self.policyQualifierId {
            try encodeContainer.encode(policyQualifierId.rawValue, forKey: .policyQualifierId)
        }
        if let qualifier = self.qualifier {
            try encodeContainer.encode(qualifier, forKey: .qualifier)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyQualifierIdDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.PolicyQualifierId.self, forKey: .policyQualifierId)
        policyQualifierId = policyQualifierIdDecoded
        let qualifierDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.Qualifier.self, forKey: .qualifier)
        qualifier = qualifierDecoded
    }
}
