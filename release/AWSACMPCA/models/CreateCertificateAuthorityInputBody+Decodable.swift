// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateCertificateAuthorityInputBody: Swift.Equatable {
    let certificateAuthorityConfiguration: AcmPcaClientTypes.CertificateAuthorityConfiguration?
    let revocationConfiguration: AcmPcaClientTypes.RevocationConfiguration?
    let certificateAuthorityType: AcmPcaClientTypes.CertificateAuthorityType?
    let idempotencyToken: Swift.String?
    let keyStorageSecurityStandard: AcmPcaClientTypes.KeyStorageSecurityStandard?
    let tags: [AcmPcaClientTypes.Tag]?
}

extension CreateCertificateAuthorityInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateAuthorityConfiguration = "CertificateAuthorityConfiguration"
        case certificateAuthorityType = "CertificateAuthorityType"
        case idempotencyToken = "IdempotencyToken"
        case keyStorageSecurityStandard = "KeyStorageSecurityStandard"
        case revocationConfiguration = "RevocationConfiguration"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateAuthorityConfigurationDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.CertificateAuthorityConfiguration.self, forKey: .certificateAuthorityConfiguration)
        certificateAuthorityConfiguration = certificateAuthorityConfigurationDecoded
        let revocationConfigurationDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.RevocationConfiguration.self, forKey: .revocationConfiguration)
        revocationConfiguration = revocationConfigurationDecoded
        let certificateAuthorityTypeDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.CertificateAuthorityType.self, forKey: .certificateAuthorityType)
        certificateAuthorityType = certificateAuthorityTypeDecoded
        let idempotencyTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .idempotencyToken)
        idempotencyToken = idempotencyTokenDecoded
        let keyStorageSecurityStandardDecoded = try containerValues.decodeIfPresent(AcmPcaClientTypes.KeyStorageSecurityStandard.self, forKey: .keyStorageSecurityStandard)
        keyStorageSecurityStandard = keyStorageSecurityStandardDecoded
        let tagsContainer = try containerValues.decodeIfPresent([AcmPcaClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[AcmPcaClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [AcmPcaClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
