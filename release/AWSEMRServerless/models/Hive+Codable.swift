// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrServerlessClientTypes.Hive: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case initQueryFile
        case parameters
        case query
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let initQueryFile = self.initQueryFile {
            try encodeContainer.encode(initQueryFile, forKey: .initQueryFile)
        }
        if let parameters = self.parameters {
            try encodeContainer.encode(parameters, forKey: .parameters)
        }
        if let query = self.query {
            try encodeContainer.encode(query, forKey: .query)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .query)
        query = queryDecoded
        let initQueryFileDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .initQueryFile)
        initQueryFile = initQueryFileDecoded
        let parametersDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parameters)
        parameters = parametersDecoded
    }
}
