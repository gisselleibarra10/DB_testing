// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrServerlessClientTypes.TotalResourceUtilization: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case memoryGBHour
        case storageGBHour
        case vCPUHour
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let memoryGBHour = self.memoryGBHour {
            try encodeContainer.encode(memoryGBHour, forKey: .memoryGBHour)
        }
        if let storageGBHour = self.storageGBHour {
            try encodeContainer.encode(storageGBHour, forKey: .storageGBHour)
        }
        if let vCPUHour = self.vCPUHour {
            try encodeContainer.encode(vCPUHour, forKey: .vCPUHour)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vCPUHourDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .vCPUHour)
        vCPUHour = vCPUHourDecoded
        let memoryGBHourDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .memoryGBHour)
        memoryGBHour = memoryGBHourDecoded
        let storageGBHourDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .storageGBHour)
        storageGBHour = storageGBHourDecoded
    }
}
