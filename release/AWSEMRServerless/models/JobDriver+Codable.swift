// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrServerlessClientTypes.JobDriver: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hive
        case sdkUnknown
        case sparksubmit = "sparkSubmit"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .hive(hive):
                try container.encode(hive, forKey: .hive)
            case let .sparksubmit(sparksubmit):
                try container.encode(sparksubmit, forKey: .sparksubmit)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let sparksubmitDecoded = try values.decodeIfPresent(EmrServerlessClientTypes.SparkSubmit.self, forKey: .sparksubmit)
        if let sparksubmit = sparksubmitDecoded {
            self = .sparksubmit(sparksubmit)
            return
        }
        let hiveDecoded = try values.decodeIfPresent(EmrServerlessClientTypes.Hive.self, forKey: .hive)
        if let hive = hiveDecoded {
            self = .hive(hive)
            return
        }
        self = .sdkUnknown("")
    }
}
