// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateApplicationInput: Swift.Equatable {
    /// The ID of the application to update.
    /// This member is required.
    public var applicationId: Swift.String?
    /// The configuration for an application to automatically start on job submission.
    public var autoStartConfiguration: EmrServerlessClientTypes.AutoStartConfig?
    /// The configuration for an application to automatically stop after a certain amount of time being idle.
    public var autoStopConfiguration: EmrServerlessClientTypes.AutoStopConfig?
    /// The client idempotency token of the application to update. Its value must be unique for each request.
    /// This member is required.
    public var clientToken: Swift.String?
    /// The capacity to initialize when the application is updated.
    public var initialCapacity: [Swift.String:EmrServerlessClientTypes.InitialCapacityConfig]?
    /// The maximum capacity to allocate when the application is updated. This is cumulative across all workers at any given point in time during the lifespan of the application. No new resources will be created once any one of the defined limits is hit.
    public var maximumCapacity: EmrServerlessClientTypes.MaximumAllowedResources?
    /// The network configuration for customer VPC connectivity.
    public var networkConfiguration: EmrServerlessClientTypes.NetworkConfiguration?

    public init (
        applicationId: Swift.String? = nil,
        autoStartConfiguration: EmrServerlessClientTypes.AutoStartConfig? = nil,
        autoStopConfiguration: EmrServerlessClientTypes.AutoStopConfig? = nil,
        clientToken: Swift.String? = nil,
        initialCapacity: [Swift.String:EmrServerlessClientTypes.InitialCapacityConfig]? = nil,
        maximumCapacity: EmrServerlessClientTypes.MaximumAllowedResources? = nil,
        networkConfiguration: EmrServerlessClientTypes.NetworkConfiguration? = nil
    )
    {
        self.applicationId = applicationId
        self.autoStartConfiguration = autoStartConfiguration
        self.autoStopConfiguration = autoStopConfiguration
        self.clientToken = clientToken
        self.initialCapacity = initialCapacity
        self.maximumCapacity = maximumCapacity
        self.networkConfiguration = networkConfiguration
    }
}
