// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrServerlessClientTypes.AutoStopConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enabled
        case idleTimeoutMinutes
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let enabled = self.enabled {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if let idleTimeoutMinutes = self.idleTimeoutMinutes {
            try encodeContainer.encode(idleTimeoutMinutes, forKey: .idleTimeoutMinutes)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let idleTimeoutMinutesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .idleTimeoutMinutes)
        idleTimeoutMinutes = idleTimeoutMinutesDecoded
    }
}
