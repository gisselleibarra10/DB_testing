// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateApplicationInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case autoStartConfiguration
        case autoStopConfiguration
        case clientToken
        case initialCapacity
        case maximumCapacity
        case networkConfiguration
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let autoStartConfiguration = self.autoStartConfiguration {
            try encodeContainer.encode(autoStartConfiguration, forKey: .autoStartConfiguration)
        }
        if let autoStopConfiguration = self.autoStopConfiguration {
            try encodeContainer.encode(autoStopConfiguration, forKey: .autoStopConfiguration)
        }
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let initialCapacity = initialCapacity {
            var initialCapacityContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .initialCapacity)
            for (dictKey0, initialcapacityconfigmap0) in initialCapacity {
                try initialCapacityContainer.encode(initialcapacityconfigmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let maximumCapacity = self.maximumCapacity {
            try encodeContainer.encode(maximumCapacity, forKey: .maximumCapacity)
        }
        if let networkConfiguration = self.networkConfiguration {
            try encodeContainer.encode(networkConfiguration, forKey: .networkConfiguration)
        }
    }
}
