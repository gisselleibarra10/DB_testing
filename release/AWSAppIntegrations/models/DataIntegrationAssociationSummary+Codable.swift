// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppIntegrationsClientTypes.DataIntegrationAssociationSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientId = "ClientId"
        case dataIntegrationArn = "DataIntegrationArn"
        case dataIntegrationAssociationArn = "DataIntegrationAssociationArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientId = self.clientId {
            try encodeContainer.encode(clientId, forKey: .clientId)
        }
        if let dataIntegrationArn = self.dataIntegrationArn {
            try encodeContainer.encode(dataIntegrationArn, forKey: .dataIntegrationArn)
        }
        if let dataIntegrationAssociationArn = self.dataIntegrationAssociationArn {
            try encodeContainer.encode(dataIntegrationAssociationArn, forKey: .dataIntegrationAssociationArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataIntegrationAssociationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataIntegrationAssociationArn)
        dataIntegrationAssociationArn = dataIntegrationAssociationArnDecoded
        let dataIntegrationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataIntegrationArn)
        dataIntegrationArn = dataIntegrationArnDecoded
        let clientIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientId)
        clientId = clientIdDecoded
    }
}
