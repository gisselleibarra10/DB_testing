// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateJobQueueInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case computeEnvironmentOrder
        case jobQueue
        case priority
        case schedulingPolicyArn
        case state
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let computeEnvironmentOrder = computeEnvironmentOrder {
            var computeEnvironmentOrderContainer = encodeContainer.nestedUnkeyedContainer(forKey: .computeEnvironmentOrder)
            for computeenvironmentorders0 in computeEnvironmentOrder {
                try computeEnvironmentOrderContainer.encode(computeenvironmentorders0)
            }
        }
        if let jobQueue = self.jobQueue {
            try encodeContainer.encode(jobQueue, forKey: .jobQueue)
        }
        if let priority = self.priority {
            try encodeContainer.encode(priority, forKey: .priority)
        }
        if let schedulingPolicyArn = self.schedulingPolicyArn {
            try encodeContainer.encode(schedulingPolicyArn, forKey: .schedulingPolicyArn)
        }
        if let state = self.state {
            try encodeContainer.encode(state.rawValue, forKey: .state)
        }
    }
}
