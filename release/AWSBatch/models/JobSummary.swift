// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension BatchClientTypes {
    /// An object representing summary details of a job.
    public struct JobSummary: Swift.Equatable {
        /// The array properties of the job, if it is an array job.
        public var arrayProperties: BatchClientTypes.ArrayPropertiesSummary?
        /// An object representing the details of the container that's associated with the job.
        public var container: BatchClientTypes.ContainerSummary?
        /// The Unix timestamp (in milliseconds) for when the job was created. For non-array jobs and parent array jobs, this is when the job entered the SUBMITTED state (at the time [SubmitJob] was called). For array child jobs, this is when the child job was spawned by its parent and entered the PENDING state.
        public var createdAt: Swift.Int?
        /// The Amazon Resource Name (ARN) of the job.
        public var jobArn: Swift.String?
        /// The Amazon Resource Name (ARN) of the job definition.
        public var jobDefinition: Swift.String?
        /// The ID of the job.
        /// This member is required.
        public var jobId: Swift.String?
        /// The name of the job.
        /// This member is required.
        public var jobName: Swift.String?
        /// The node properties for a single node in a job summary list. This isn't applicable to jobs that are running on Fargate resources.
        public var nodeProperties: BatchClientTypes.NodePropertiesSummary?
        /// The Unix timestamp for when the job was started (when the job transitioned from the STARTING state to the RUNNING state).
        public var startedAt: Swift.Int?
        /// The current status for the job.
        public var status: BatchClientTypes.JobStatus?
        /// A short, human-readable string to provide additional details about the current status of the job.
        public var statusReason: Swift.String?
        /// The Unix timestamp for when the job was stopped (when the job transitioned from the RUNNING state to a terminal state, such as SUCCEEDED or FAILED).
        public var stoppedAt: Swift.Int?

        public init (
            arrayProperties: BatchClientTypes.ArrayPropertiesSummary? = nil,
            container: BatchClientTypes.ContainerSummary? = nil,
            createdAt: Swift.Int? = nil,
            jobArn: Swift.String? = nil,
            jobDefinition: Swift.String? = nil,
            jobId: Swift.String? = nil,
            jobName: Swift.String? = nil,
            nodeProperties: BatchClientTypes.NodePropertiesSummary? = nil,
            startedAt: Swift.Int? = nil,
            status: BatchClientTypes.JobStatus? = nil,
            statusReason: Swift.String? = nil,
            stoppedAt: Swift.Int? = nil
        )
        {
            self.arrayProperties = arrayProperties
            self.container = container
            self.createdAt = createdAt
            self.jobArn = jobArn
            self.jobDefinition = jobDefinition
            self.jobId = jobId
            self.jobName = jobName
            self.nodeProperties = nodeProperties
            self.startedAt = startedAt
            self.status = status
            self.statusReason = statusReason
            self.stoppedAt = stoppedAt
        }
    }

}
