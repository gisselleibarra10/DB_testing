// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeJobDefinitionsInputBody: Swift.Equatable {
    let jobDefinitions: [Swift.String]?
    let maxResults: Swift.Int?
    let jobDefinitionName: Swift.String?
    let status: Swift.String?
    let nextToken: Swift.String?
}

extension DescribeJobDefinitionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jobDefinitionName
        case jobDefinitions
        case maxResults
        case nextToken
        case status
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobDefinitionsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .jobDefinitions)
        var jobDefinitionsDecoded0:[Swift.String]? = nil
        if let jobDefinitionsContainer = jobDefinitionsContainer {
            jobDefinitionsDecoded0 = [Swift.String]()
            for string0 in jobDefinitionsContainer {
                if let string0 = string0 {
                    jobDefinitionsDecoded0?.append(string0)
                }
            }
        }
        jobDefinitions = jobDefinitionsDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let jobDefinitionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobDefinitionName)
        jobDefinitionName = jobDefinitionNameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
