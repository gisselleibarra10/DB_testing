// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSchedulingPoliciesOutputResponseBody: Swift.Equatable {
    let schedulingPolicies: [BatchClientTypes.SchedulingPolicyListingDetail]?
    let nextToken: Swift.String?
}

extension ListSchedulingPoliciesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case schedulingPolicies
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schedulingPoliciesContainer = try containerValues.decodeIfPresent([BatchClientTypes.SchedulingPolicyListingDetail?].self, forKey: .schedulingPolicies)
        var schedulingPoliciesDecoded0:[BatchClientTypes.SchedulingPolicyListingDetail]? = nil
        if let schedulingPoliciesContainer = schedulingPoliciesContainer {
            schedulingPoliciesDecoded0 = [BatchClientTypes.SchedulingPolicyListingDetail]()
            for structure0 in schedulingPoliciesContainer {
                if let structure0 = structure0 {
                    schedulingPoliciesDecoded0?.append(structure0)
                }
            }
        }
        schedulingPolicies = schedulingPoliciesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
