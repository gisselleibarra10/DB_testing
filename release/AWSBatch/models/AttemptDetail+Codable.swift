// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchClientTypes.AttemptDetail: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case container
        case startedAt
        case statusReason
        case stoppedAt
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let container = self.container {
            try encodeContainer.encode(container, forKey: .container)
        }
        if let startedAt = self.startedAt {
            try encodeContainer.encode(startedAt, forKey: .startedAt)
        }
        if let statusReason = self.statusReason {
            try encodeContainer.encode(statusReason, forKey: .statusReason)
        }
        if let stoppedAt = self.stoppedAt {
            try encodeContainer.encode(stoppedAt, forKey: .stoppedAt)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let containerDecoded = try containerValues.decodeIfPresent(BatchClientTypes.AttemptContainerDetail.self, forKey: .container)
        container = containerDecoded
        let startedAtDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .startedAt)
        startedAt = startedAtDecoded
        let stoppedAtDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .stoppedAt)
        stoppedAt = stoppedAtDecoded
        let statusReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusReason)
        statusReason = statusReasonDecoded
    }
}
