// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchClientTypes.NodeOverrides: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nodePropertyOverrides
        case numNodes
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let nodePropertyOverrides = nodePropertyOverrides {
            var nodePropertyOverridesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .nodePropertyOverrides)
            for nodepropertyoverrides0 in nodePropertyOverrides {
                try nodePropertyOverridesContainer.encode(nodepropertyoverrides0)
            }
        }
        if let numNodes = self.numNodes {
            try encodeContainer.encode(numNodes, forKey: .numNodes)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let numNodesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numNodes)
        numNodes = numNodesDecoded
        let nodePropertyOverridesContainer = try containerValues.decodeIfPresent([BatchClientTypes.NodePropertyOverride?].self, forKey: .nodePropertyOverrides)
        var nodePropertyOverridesDecoded0:[BatchClientTypes.NodePropertyOverride]? = nil
        if let nodePropertyOverridesContainer = nodePropertyOverridesContainer {
            nodePropertyOverridesDecoded0 = [BatchClientTypes.NodePropertyOverride]()
            for structure0 in nodePropertyOverridesContainer {
                if let structure0 = structure0 {
                    nodePropertyOverridesDecoded0?.append(structure0)
                }
            }
        }
        nodePropertyOverrides = nodePropertyOverridesDecoded0
    }
}
