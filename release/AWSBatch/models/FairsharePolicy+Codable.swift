// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchClientTypes.FairsharePolicy: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case computeReservation
        case shareDecaySeconds
        case shareDistribution
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let computeReservation = self.computeReservation {
            try encodeContainer.encode(computeReservation, forKey: .computeReservation)
        }
        if let shareDecaySeconds = self.shareDecaySeconds {
            try encodeContainer.encode(shareDecaySeconds, forKey: .shareDecaySeconds)
        }
        if let shareDistribution = shareDistribution {
            var shareDistributionContainer = encodeContainer.nestedUnkeyedContainer(forKey: .shareDistribution)
            for shareattributeslist0 in shareDistribution {
                try shareDistributionContainer.encode(shareattributeslist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let shareDecaySecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .shareDecaySeconds)
        shareDecaySeconds = shareDecaySecondsDecoded
        let computeReservationDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .computeReservation)
        computeReservation = computeReservationDecoded
        let shareDistributionContainer = try containerValues.decodeIfPresent([BatchClientTypes.ShareAttributes?].self, forKey: .shareDistribution)
        var shareDistributionDecoded0:[BatchClientTypes.ShareAttributes]? = nil
        if let shareDistributionContainer = shareDistributionContainer {
            shareDistributionDecoded0 = [BatchClientTypes.ShareAttributes]()
            for structure0 in shareDistributionContainer {
                if let structure0 = structure0 {
                    shareDistributionDecoded0?.append(structure0)
                }
            }
        }
        shareDistribution = shareDistributionDecoded0
    }
}
