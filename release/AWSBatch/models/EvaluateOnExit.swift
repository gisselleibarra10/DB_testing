// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension BatchClientTypes {
    /// Specifies a set of conditions to be met, and an action to take (RETRY or EXIT) if all conditions are met.
    public struct EvaluateOnExit: Swift.Equatable {
        /// Specifies the action to take if all of the specified conditions (onStatusReason, onReason, and onExitCode) are met. The values aren't case sensitive.
        /// This member is required.
        public var action: BatchClientTypes.RetryAction?
        /// Contains a glob pattern to match against the decimal representation of the ExitCode returned for a job. The pattern can be up to 512 characters in length. It can contain only numbers, and can optionally end with an asterisk (*) so that only the start of the string needs to be an exact match. The string can be between 1 and 512 characters in length.
        public var onExitCode: Swift.String?
        /// Contains a glob pattern to match against the Reason returned for a job. The pattern can be up to 512 characters in length. It can contain letters, numbers, periods (.), colons (:), and white space (including spaces and tabs). It can optionally end with an asterisk (*) so that only the start of the string needs to be an exact match. The string can be between 1 and 512 characters in length.
        public var onReason: Swift.String?
        /// Contains a glob pattern to match against the StatusReason returned for a job. The pattern can be up to 512 characters in length. It can contain letters, numbers, periods (.), colons (:), and white space (including spaces or tabs). It can optionally end with an asterisk (*) so that only the start of the string needs to be an exact match. The string can be between 1 and 512 characters in length.
        public var onStatusReason: Swift.String?

        public init (
            action: BatchClientTypes.RetryAction? = nil,
            onExitCode: Swift.String? = nil,
            onReason: Swift.String? = nil,
            onStatusReason: Swift.String? = nil
        )
        {
            self.action = action
            self.onExitCode = onExitCode
            self.onReason = onReason
            self.onStatusReason = onStatusReason
        }
    }

}
