// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateComputeEnvironmentInputBody: Swift.Equatable {
    let computeEnvironment: Swift.String?
    let state: BatchClientTypes.CEState?
    let unmanagedvCpus: Swift.Int?
    let computeResources: BatchClientTypes.ComputeResourceUpdate?
    let serviceRole: Swift.String?
    let updatePolicy: BatchClientTypes.UpdatePolicy?
}

extension UpdateComputeEnvironmentInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case computeEnvironment
        case computeResources
        case serviceRole
        case state
        case unmanagedvCpus
        case updatePolicy
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let computeEnvironmentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .computeEnvironment)
        computeEnvironment = computeEnvironmentDecoded
        let stateDecoded = try containerValues.decodeIfPresent(BatchClientTypes.CEState.self, forKey: .state)
        state = stateDecoded
        let unmanagedvCpusDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unmanagedvCpus)
        unmanagedvCpus = unmanagedvCpusDecoded
        let computeResourcesDecoded = try containerValues.decodeIfPresent(BatchClientTypes.ComputeResourceUpdate.self, forKey: .computeResources)
        computeResources = computeResourcesDecoded
        let serviceRoleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serviceRole)
        serviceRole = serviceRoleDecoded
        let updatePolicyDecoded = try containerValues.decodeIfPresent(BatchClientTypes.UpdatePolicy.self, forKey: .updatePolicy)
        updatePolicy = updatePolicyDecoded
    }
}
