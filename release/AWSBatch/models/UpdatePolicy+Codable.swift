// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchClientTypes.UpdatePolicy: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jobExecutionTimeoutMinutes
        case terminateJobsOnUpdate
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if jobExecutionTimeoutMinutes != 0 {
            try encodeContainer.encode(jobExecutionTimeoutMinutes, forKey: .jobExecutionTimeoutMinutes)
        }
        if let terminateJobsOnUpdate = self.terminateJobsOnUpdate {
            try encodeContainer.encode(terminateJobsOnUpdate, forKey: .terminateJobsOnUpdate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let terminateJobsOnUpdateDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .terminateJobsOnUpdate)
        terminateJobsOnUpdate = terminateJobsOnUpdateDecoded
        let jobExecutionTimeoutMinutesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .jobExecutionTimeoutMinutes) ?? 0
        jobExecutionTimeoutMinutes = jobExecutionTimeoutMinutesDecoded
    }
}
