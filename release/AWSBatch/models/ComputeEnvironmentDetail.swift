// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension BatchClientTypes {
    /// An object representing an Batch compute environment.
    public struct ComputeEnvironmentDetail: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the compute environment.
        /// This member is required.
        public var computeEnvironmentArn: Swift.String?
        /// The name of the compute environment. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
        /// This member is required.
        public var computeEnvironmentName: Swift.String?
        /// The compute resources defined for the compute environment. For more information, see [Compute environments](https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html) in the Batch User Guide.
        public var computeResources: BatchClientTypes.ComputeResource?
        /// The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.
        public var ecsClusterArn: Swift.String?
        /// The service role associated with the compute environment that allows Batch to make calls to Amazon Web Services API operations on your behalf. For more information, see [Batch service IAM role](https://docs.aws.amazon.com/batch/latest/userguide/service_IAM_role.html) in the Batch User Guide.
        public var serviceRole: Swift.String?
        /// The state of the compute environment. The valid values are ENABLED or DISABLED. If the state is ENABLED, then the Batch scheduler can attempt to place jobs from an associated job queue on the compute resources within the environment. If the compute environment is managed, then it can scale its instances out or in automatically, based on the job queue demand. If the state is DISABLED, then the Batch scheduler doesn't attempt to place jobs within the environment. Jobs in a STARTING or RUNNING state continue to progress normally. Managed compute environments in the DISABLED state don't scale out. However, they scale in to minvCpus value after instances become idle.
        public var state: BatchClientTypes.CEState?
        /// The current status of the compute environment (for example, CREATING or VALID).
        public var status: BatchClientTypes.CEStatus?
        /// A short, human-readable string to provide additional details about the current status of the compute environment.
        public var statusReason: Swift.String?
        /// The tags applied to the compute environment.
        public var tags: [Swift.String:Swift.String]?
        /// The type of the compute environment: MANAGED or UNMANAGED. For more information, see [Compute environments](https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html) in the Batch User Guide.
        public var type: BatchClientTypes.CEType?
        /// The maximum number of VCPUs expected to be used for an unmanaged compute environment.
        public var unmanagedvCpus: Swift.Int?
        /// Specifies the infrastructure update policy for the compute environment. For more information about infrastructure updates, see [Updating compute environments](https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html) in the Batch User Guide.
        public var updatePolicy: BatchClientTypes.UpdatePolicy?

        public init (
            computeEnvironmentArn: Swift.String? = nil,
            computeEnvironmentName: Swift.String? = nil,
            computeResources: BatchClientTypes.ComputeResource? = nil,
            ecsClusterArn: Swift.String? = nil,
            serviceRole: Swift.String? = nil,
            state: BatchClientTypes.CEState? = nil,
            status: BatchClientTypes.CEStatus? = nil,
            statusReason: Swift.String? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            type: BatchClientTypes.CEType? = nil,
            unmanagedvCpus: Swift.Int? = nil,
            updatePolicy: BatchClientTypes.UpdatePolicy? = nil
        )
        {
            self.computeEnvironmentArn = computeEnvironmentArn
            self.computeEnvironmentName = computeEnvironmentName
            self.computeResources = computeResources
            self.ecsClusterArn = ecsClusterArn
            self.serviceRole = serviceRole
            self.state = state
            self.status = status
            self.statusReason = statusReason
            self.tags = tags
            self.type = type
            self.unmanagedvCpus = unmanagedvCpus
            self.updatePolicy = updatePolicy
        }
    }

}
