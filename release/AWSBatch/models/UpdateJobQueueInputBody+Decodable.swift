// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateJobQueueInputBody: Swift.Equatable {
    let jobQueue: Swift.String?
    let state: BatchClientTypes.JQState?
    let schedulingPolicyArn: Swift.String?
    let priority: Swift.Int?
    let computeEnvironmentOrder: [BatchClientTypes.ComputeEnvironmentOrder]?
}

extension UpdateJobQueueInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case computeEnvironmentOrder
        case jobQueue
        case priority
        case schedulingPolicyArn
        case state
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobQueueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobQueue)
        jobQueue = jobQueueDecoded
        let stateDecoded = try containerValues.decodeIfPresent(BatchClientTypes.JQState.self, forKey: .state)
        state = stateDecoded
        let schedulingPolicyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schedulingPolicyArn)
        schedulingPolicyArn = schedulingPolicyArnDecoded
        let priorityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .priority)
        priority = priorityDecoded
        let computeEnvironmentOrderContainer = try containerValues.decodeIfPresent([BatchClientTypes.ComputeEnvironmentOrder?].self, forKey: .computeEnvironmentOrder)
        var computeEnvironmentOrderDecoded0:[BatchClientTypes.ComputeEnvironmentOrder]? = nil
        if let computeEnvironmentOrderContainer = computeEnvironmentOrderContainer {
            computeEnvironmentOrderDecoded0 = [BatchClientTypes.ComputeEnvironmentOrder]()
            for structure0 in computeEnvironmentOrderContainer {
                if let structure0 = structure0 {
                    computeEnvironmentOrderDecoded0?.append(structure0)
                }
            }
        }
        computeEnvironmentOrder = computeEnvironmentOrderDecoded0
    }
}
