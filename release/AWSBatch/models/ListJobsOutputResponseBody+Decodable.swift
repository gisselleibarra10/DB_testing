// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobsOutputResponseBody: Swift.Equatable {
    let jobSummaryList: [BatchClientTypes.JobSummary]?
    let nextToken: Swift.String?
}

extension ListJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jobSummaryList
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobSummaryListContainer = try containerValues.decodeIfPresent([BatchClientTypes.JobSummary?].self, forKey: .jobSummaryList)
        var jobSummaryListDecoded0:[BatchClientTypes.JobSummary]? = nil
        if let jobSummaryListContainer = jobSummaryListContainer {
            jobSummaryListDecoded0 = [BatchClientTypes.JobSummary]()
            for structure0 in jobSummaryListContainer {
                if let structure0 = structure0 {
                    jobSummaryListDecoded0?.append(structure0)
                }
            }
        }
        jobSummaryList = jobSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
