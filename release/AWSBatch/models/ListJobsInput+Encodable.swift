// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListJobsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arrayJobId
        case filters
        case jobQueue
        case jobStatus
        case maxResults
        case multiNodeJobId
        case nextToken
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arrayJobId = self.arrayJobId {
            try encodeContainer.encode(arrayJobId, forKey: .arrayJobId)
        }
        if let filters = filters {
            var filtersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filters)
            for listjobsfilterlist0 in filters {
                try filtersContainer.encode(listjobsfilterlist0)
            }
        }
        if let jobQueue = self.jobQueue {
            try encodeContainer.encode(jobQueue, forKey: .jobQueue)
        }
        if let jobStatus = self.jobStatus {
            try encodeContainer.encode(jobStatus.rawValue, forKey: .jobStatus)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let multiNodeJobId = self.multiNodeJobId {
            try encodeContainer.encode(multiNodeJobId, forKey: .multiNodeJobId)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }
}
