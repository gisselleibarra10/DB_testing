// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RegisterAppInstanceUserEndpointInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowMessages = "AllowMessages"
        case clientRequestToken = "ClientRequestToken"
        case endpointAttributes = "EndpointAttributes"
        case name = "Name"
        case resourceArn = "ResourceArn"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allowMessages = self.allowMessages {
            try encodeContainer.encode(allowMessages.rawValue, forKey: .allowMessages)
        }
        if let clientRequestToken = self.clientRequestToken {
            try encodeContainer.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let endpointAttributes = self.endpointAttributes {
            try encodeContainer.encode(endpointAttributes, forKey: .endpointAttributes)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let resourceArn = self.resourceArn {
            try encodeContainer.encode(resourceArn, forKey: .resourceArn)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }
}
