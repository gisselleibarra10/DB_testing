// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterAppInstanceUserEndpointInputBody: Swift.Equatable {
    let name: Swift.String?
    let type: ChimeSdkIdentityClientTypes.AppInstanceUserEndpointType?
    let resourceArn: Swift.String?
    let endpointAttributes: ChimeSdkIdentityClientTypes.EndpointAttributes?
    let clientRequestToken: Swift.String?
    let allowMessages: ChimeSdkIdentityClientTypes.AllowMessages?
}

extension RegisterAppInstanceUserEndpointInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowMessages = "AllowMessages"
        case clientRequestToken = "ClientRequestToken"
        case endpointAttributes = "EndpointAttributes"
        case name = "Name"
        case resourceArn = "ResourceArn"
        case type = "Type"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(ChimeSdkIdentityClientTypes.AppInstanceUserEndpointType.self, forKey: .type)
        type = typeDecoded
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let endpointAttributesDecoded = try containerValues.decodeIfPresent(ChimeSdkIdentityClientTypes.EndpointAttributes.self, forKey: .endpointAttributes)
        endpointAttributes = endpointAttributesDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let allowMessagesDecoded = try containerValues.decodeIfPresent(ChimeSdkIdentityClientTypes.AllowMessages.self, forKey: .allowMessages)
        allowMessages = allowMessagesDecoded
    }
}
