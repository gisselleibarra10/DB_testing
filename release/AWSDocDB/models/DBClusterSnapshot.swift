// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DocDbClientTypes {
    /// Detailed information about a cluster snapshot.
    public struct DBClusterSnapshot: Swift.Equatable {
        /// Provides the list of Amazon EC2 Availability Zones that instances in the cluster snapshot can be restored in.
        public var availabilityZones: [Swift.String]?
        /// Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).
        public var clusterCreateTime: ClientRuntime.Date?
        /// Specifies the cluster identifier of the cluster that this cluster snapshot was created from.
        public var dBClusterIdentifier: Swift.String?
        /// The Amazon Resource Name (ARN) for the cluster snapshot.
        public var dBClusterSnapshotArn: Swift.String?
        /// Specifies the identifier for the cluster snapshot.
        public var dBClusterSnapshotIdentifier: Swift.String?
        /// Specifies the name of the database engine.
        public var engine: Swift.String?
        /// Provides the version of the database engine for this cluster snapshot.
        public var engineVersion: Swift.String?
        /// If StorageEncrypted is true, the KMS key identifier for the encrypted cluster snapshot.
        public var kmsKeyId: Swift.String?
        /// Provides the master user name for the cluster snapshot.
        public var masterUsername: Swift.String?
        /// Specifies the percentage of the estimated data that has been transferred.
        public var percentProgress: Swift.Int
        /// Specifies the port that the cluster was listening on at the time of the snapshot.
        public var port: Swift.Int
        /// Provides the time when the snapshot was taken, in UTC.
        public var snapshotCreateTime: ClientRuntime.Date?
        /// Provides the type of the cluster snapshot.
        public var snapshotType: Swift.String?
        /// If the cluster snapshot was copied from a source cluster snapshot, the ARN for the source cluster snapshot; otherwise, a null value.
        public var sourceDBClusterSnapshotArn: Swift.String?
        /// Specifies the status of this cluster snapshot.
        public var status: Swift.String?
        /// Specifies whether the cluster snapshot is encrypted.
        public var storageEncrypted: Swift.Bool
        /// Provides the virtual private cloud (VPC) ID that is associated with the cluster snapshot.
        public var vpcId: Swift.String?

        public init (
            availabilityZones: [Swift.String]? = nil,
            clusterCreateTime: ClientRuntime.Date? = nil,
            dBClusterIdentifier: Swift.String? = nil,
            dBClusterSnapshotArn: Swift.String? = nil,
            dBClusterSnapshotIdentifier: Swift.String? = nil,
            engine: Swift.String? = nil,
            engineVersion: Swift.String? = nil,
            kmsKeyId: Swift.String? = nil,
            masterUsername: Swift.String? = nil,
            percentProgress: Swift.Int = 0,
            port: Swift.Int = 0,
            snapshotCreateTime: ClientRuntime.Date? = nil,
            snapshotType: Swift.String? = nil,
            sourceDBClusterSnapshotArn: Swift.String? = nil,
            status: Swift.String? = nil,
            storageEncrypted: Swift.Bool = false,
            vpcId: Swift.String? = nil
        )
        {
            self.availabilityZones = availabilityZones
            self.clusterCreateTime = clusterCreateTime
            self.dBClusterIdentifier = dBClusterIdentifier
            self.dBClusterSnapshotArn = dBClusterSnapshotArn
            self.dBClusterSnapshotIdentifier = dBClusterSnapshotIdentifier
            self.engine = engine
            self.engineVersion = engineVersion
            self.kmsKeyId = kmsKeyId
            self.masterUsername = masterUsername
            self.percentProgress = percentProgress
            self.port = port
            self.snapshotCreateTime = snapshotCreateTime
            self.snapshotType = snapshotType
            self.sourceDBClusterSnapshotArn = sourceDBClusterSnapshotArn
            self.status = status
            self.storageEncrypted = storageEncrypted
            self.vpcId = vpcId
        }
    }

}
