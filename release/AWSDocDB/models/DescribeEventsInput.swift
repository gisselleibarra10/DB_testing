// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Represents the input to [DescribeEvents].
public struct DescribeEventsInput: Swift.Equatable {
    /// The number of minutes to retrieve events for. Default: 60
    public var duration: Swift.Int?
    /// The end of the time interval for which to retrieve events, specified in ISO 8601 format. Example: 2009-07-08T18:00Z
    public var endTime: ClientRuntime.Date?
    /// A list of event categories that trigger notifications for an event notification subscription.
    public var eventCategories: [Swift.String]?
    /// This parameter is not currently supported.
    public var filters: [DocDbClientTypes.Filter]?
    /// An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
    public var marker: Swift.String?
    /// The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token (marker) is included in the response so that the remaining results can be retrieved. Default: 100 Constraints: Minimum 20, maximum 100.
    public var maxRecords: Swift.Int?
    /// The identifier of the event source for which events are returned. If not specified, then all sources are included in the response. Constraints:
    ///
    /// * If SourceIdentifier is provided, SourceType must also be provided.
    ///
    /// * If the source type is DBInstance, a DBInstanceIdentifier must be provided.
    ///
    /// * If the source type is DBSecurityGroup, a DBSecurityGroupName must be provided.
    ///
    /// * If the source type is DBParameterGroup, a DBParameterGroupName must be provided.
    ///
    /// * If the source type is DBSnapshot, a DBSnapshotIdentifier must be provided.
    ///
    /// * Cannot end with a hyphen or contain two consecutive hyphens.
    public var sourceIdentifier: Swift.String?
    /// The event source to retrieve events for. If no value is specified, all events are returned.
    public var sourceType: DocDbClientTypes.SourceType?
    /// The beginning of the time interval to retrieve events for, specified in ISO 8601 format. Example: 2009-07-08T18:00Z
    public var startTime: ClientRuntime.Date?

    public init (
        duration: Swift.Int? = nil,
        endTime: ClientRuntime.Date? = nil,
        eventCategories: [Swift.String]? = nil,
        filters: [DocDbClientTypes.Filter]? = nil,
        marker: Swift.String? = nil,
        maxRecords: Swift.Int? = nil,
        sourceIdentifier: Swift.String? = nil,
        sourceType: DocDbClientTypes.SourceType? = nil,
        startTime: ClientRuntime.Date? = nil
    )
    {
        self.duration = duration
        self.endTime = endTime
        self.eventCategories = eventCategories
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
        self.sourceIdentifier = sourceIdentifier
        self.sourceType = sourceType
        self.startTime = startTime
    }
}
