// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreatePresetInputBody: Swift.Equatable {
    let name: Swift.String?
    let description: Swift.String?
    let container: Swift.String?
    let video: ElasticTranscoderClientTypes.VideoParameters?
    let audio: ElasticTranscoderClientTypes.AudioParameters?
    let thumbnails: ElasticTranscoderClientTypes.Thumbnails?
}

extension CreatePresetInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case audio = "Audio"
        case container = "Container"
        case description = "Description"
        case name = "Name"
        case thumbnails = "Thumbnails"
        case video = "Video"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let containerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .container)
        container = containerDecoded
        let videoDecoded = try containerValues.decodeIfPresent(ElasticTranscoderClientTypes.VideoParameters.self, forKey: .video)
        video = videoDecoded
        let audioDecoded = try containerValues.decodeIfPresent(ElasticTranscoderClientTypes.AudioParameters.self, forKey: .audio)
        audio = audioDecoded
        let thumbnailsDecoded = try containerValues.decodeIfPresent(ElasticTranscoderClientTypes.Thumbnails.self, forKey: .thumbnails)
        thumbnails = thumbnailsDecoded
    }
}
