// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdatePipelineOutputResponseBody: Swift.Equatable {
    let pipeline: ElasticTranscoderClientTypes.Pipeline?
    let warnings: [ElasticTranscoderClientTypes.Warning]?
}

extension UpdatePipelineOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case pipeline = "Pipeline"
        case warnings = "Warnings"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineDecoded = try containerValues.decodeIfPresent(ElasticTranscoderClientTypes.Pipeline.self, forKey: .pipeline)
        pipeline = pipelineDecoded
        let warningsContainer = try containerValues.decodeIfPresent([ElasticTranscoderClientTypes.Warning?].self, forKey: .warnings)
        var warningsDecoded0:[ElasticTranscoderClientTypes.Warning]? = nil
        if let warningsContainer = warningsContainer {
            warningsDecoded0 = [ElasticTranscoderClientTypes.Warning]()
            for structure0 in warningsContainer {
                if let structure0 = structure0 {
                    warningsDecoded0?.append(structure0)
                }
            }
        }
        warnings = warningsDecoded0
    }
}
