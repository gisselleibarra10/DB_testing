// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticTranscoderClientTypes.JobAlbumArt: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case artwork = "Artwork"
        case mergePolicy = "MergePolicy"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let artwork = artwork {
            var artworkContainer = encodeContainer.nestedUnkeyedContainer(forKey: .artwork)
            for artworks0 in artwork {
                try artworkContainer.encode(artworks0)
            }
        }
        if let mergePolicy = self.mergePolicy {
            try encodeContainer.encode(mergePolicy, forKey: .mergePolicy)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mergePolicyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mergePolicy)
        mergePolicy = mergePolicyDecoded
        let artworkContainer = try containerValues.decodeIfPresent([ElasticTranscoderClientTypes.Artwork?].self, forKey: .artwork)
        var artworkDecoded0:[ElasticTranscoderClientTypes.Artwork]? = nil
        if let artworkContainer = artworkContainer {
            artworkDecoded0 = [ElasticTranscoderClientTypes.Artwork]()
            for structure0 in artworkContainer {
                if let structure0 = structure0 {
                    artworkDecoded0?.append(structure0)
                }
            }
        }
        artwork = artworkDecoded0
    }
}
