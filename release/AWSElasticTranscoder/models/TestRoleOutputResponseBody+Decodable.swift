// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestRoleOutputResponseBody: Swift.Equatable {
    let success: Swift.String?
    let messages: [Swift.String]?
}

extension TestRoleOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case messages = "Messages"
        case success = "Success"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .success)
        success = successDecoded
        let messagesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .messages)
        var messagesDecoded0:[Swift.String]? = nil
        if let messagesContainer = messagesContainer {
            messagesDecoded0 = [Swift.String]()
            for string0 in messagesContainer {
                if let string0 = string0 {
                    messagesDecoded0?.append(string0)
                }
            }
        }
        messages = messagesDecoded0
    }
}
