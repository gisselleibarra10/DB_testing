// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticTranscoderClientTypes.Preset: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case audio = "Audio"
        case container = "Container"
        case description = "Description"
        case id = "Id"
        case name = "Name"
        case thumbnails = "Thumbnails"
        case type = "Type"
        case video = "Video"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let audio = self.audio {
            try encodeContainer.encode(audio, forKey: .audio)
        }
        if let container = self.container {
            try encodeContainer.encode(container, forKey: .container)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let thumbnails = self.thumbnails {
            try encodeContainer.encode(thumbnails, forKey: .thumbnails)
        }
        if let type = self.type {
            try encodeContainer.encode(type, forKey: .type)
        }
        if let video = self.video {
            try encodeContainer.encode(video, forKey: .video)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let containerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .container)
        container = containerDecoded
        let audioDecoded = try containerValues.decodeIfPresent(ElasticTranscoderClientTypes.AudioParameters.self, forKey: .audio)
        audio = audioDecoded
        let videoDecoded = try containerValues.decodeIfPresent(ElasticTranscoderClientTypes.VideoParameters.self, forKey: .video)
        video = videoDecoded
        let thumbnailsDecoded = try containerValues.decodeIfPresent(ElasticTranscoderClientTypes.Thumbnails.self, forKey: .thumbnails)
        thumbnails = thumbnailsDecoded
        let typeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .type)
        type = typeDecoded
    }
}
