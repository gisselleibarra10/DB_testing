// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelinesOutputResponseBody: Swift.Equatable {
    let pipelines: [ElasticTranscoderClientTypes.Pipeline]?
    let nextPageToken: Swift.String?
}

extension ListPipelinesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextPageToken = "NextPageToken"
        case pipelines = "Pipelines"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelinesContainer = try containerValues.decodeIfPresent([ElasticTranscoderClientTypes.Pipeline?].self, forKey: .pipelines)
        var pipelinesDecoded0:[ElasticTranscoderClientTypes.Pipeline]? = nil
        if let pipelinesContainer = pipelinesContainer {
            pipelinesDecoded0 = [ElasticTranscoderClientTypes.Pipeline]()
            for structure0 in pipelinesContainer {
                if let structure0 = structure0 {
                    pipelinesDecoded0?.append(structure0)
                }
            }
        }
        pipelines = pipelinesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
