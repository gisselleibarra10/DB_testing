// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticTranscoderClientTypes.Timing: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case finishTimeMillis = "FinishTimeMillis"
        case startTimeMillis = "StartTimeMillis"
        case submitTimeMillis = "SubmitTimeMillis"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let finishTimeMillis = self.finishTimeMillis {
            try encodeContainer.encode(finishTimeMillis, forKey: .finishTimeMillis)
        }
        if let startTimeMillis = self.startTimeMillis {
            try encodeContainer.encode(startTimeMillis, forKey: .startTimeMillis)
        }
        if let submitTimeMillis = self.submitTimeMillis {
            try encodeContainer.encode(submitTimeMillis, forKey: .submitTimeMillis)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let submitTimeMillisDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .submitTimeMillis)
        submitTimeMillis = submitTimeMillisDecoded
        let startTimeMillisDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .startTimeMillis)
        startTimeMillis = startTimeMillisDecoded
        let finishTimeMillisDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .finishTimeMillis)
        finishTimeMillis = finishTimeMillisDecoded
    }
}
