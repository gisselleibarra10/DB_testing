// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Macie2ClientTypes.BucketCountBySharedAccessType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case external = "external"
        case `internal` = "internal"
        case notShared = "notShared"
        case unknown = "unknown"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let external = self.external {
            try encodeContainer.encode(external, forKey: .external)
        }
        if let `internal` = self.`internal` {
            try encodeContainer.encode(`internal`, forKey: .`internal`)
        }
        if let notShared = self.notShared {
            try encodeContainer.encode(notShared, forKey: .notShared)
        }
        if let unknown = self.unknown {
            try encodeContainer.encode(unknown, forKey: .unknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let externalDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .external)
        external = externalDecoded
        let internalDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .internal)
        `internal` = internalDecoded
        let notSharedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .notShared)
        notShared = notSharedDecoded
        let unknownDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unknown)
        unknown = unknownDecoded
    }
}
