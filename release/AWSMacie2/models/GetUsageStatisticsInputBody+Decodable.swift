// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUsageStatisticsInputBody: Swift.Equatable {
    let filterBy: [Macie2ClientTypes.UsageStatisticsFilter]?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
    let sortBy: Macie2ClientTypes.UsageStatisticsSortBy?
    let timeRange: Macie2ClientTypes.TimeRange?
}

extension GetUsageStatisticsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterBy = "filterBy"
        case maxResults = "maxResults"
        case nextToken = "nextToken"
        case sortBy = "sortBy"
        case timeRange = "timeRange"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterByContainer = try containerValues.decodeIfPresent([Macie2ClientTypes.UsageStatisticsFilter?].self, forKey: .filterBy)
        var filterByDecoded0:[Macie2ClientTypes.UsageStatisticsFilter]? = nil
        if let filterByContainer = filterByContainer {
            filterByDecoded0 = [Macie2ClientTypes.UsageStatisticsFilter]()
            for structure0 in filterByContainer {
                if let structure0 = structure0 {
                    filterByDecoded0?.append(structure0)
                }
            }
        }
        filterBy = filterByDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(Macie2ClientTypes.UsageStatisticsSortBy.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let timeRangeDecoded = try containerValues.decodeIfPresent(Macie2ClientTypes.TimeRange.self, forKey: .timeRange)
        timeRange = timeRangeDecoded
    }
}
