// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Macie2ClientTypes.UsageRecord: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountId = "accountId"
        case freeTrialStartDate = "freeTrialStartDate"
        case usage = "usage"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountId = self.accountId {
            try encodeContainer.encode(accountId, forKey: .accountId)
        }
        if let freeTrialStartDate = self.freeTrialStartDate {
            try encodeContainer.encode(freeTrialStartDate.timeIntervalSince1970, forKey: .freeTrialStartDate)
        }
        if let usage = usage {
            var usageContainer = encodeContainer.nestedUnkeyedContainer(forKey: .usage)
            for __listofusagebyaccount0 in usage {
                try usageContainer.encode(__listofusagebyaccount0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let freeTrialStartDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .freeTrialStartDate)
        freeTrialStartDate = freeTrialStartDateDecoded
        let usageContainer = try containerValues.decodeIfPresent([Macie2ClientTypes.UsageByAccount?].self, forKey: .usage)
        var usageDecoded0:[Macie2ClientTypes.UsageByAccount]? = nil
        if let usageContainer = usageContainer {
            usageDecoded0 = [Macie2ClientTypes.UsageByAccount]()
            for structure0 in usageContainer {
                if let structure0 = structure0 {
                    usageDecoded0?.append(structure0)
                }
            }
        }
        usage = usageDecoded0
    }
}
