// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetCustomDataIdentifiersOutputResponseBody: Swift.Equatable {
    let customDataIdentifiers: [Macie2ClientTypes.BatchGetCustomDataIdentifierSummary]?
    let notFoundIdentifierIds: [Swift.String]?
}

extension BatchGetCustomDataIdentifiersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customDataIdentifiers = "customDataIdentifiers"
        case notFoundIdentifierIds = "notFoundIdentifierIds"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customDataIdentifiersContainer = try containerValues.decodeIfPresent([Macie2ClientTypes.BatchGetCustomDataIdentifierSummary?].self, forKey: .customDataIdentifiers)
        var customDataIdentifiersDecoded0:[Macie2ClientTypes.BatchGetCustomDataIdentifierSummary]? = nil
        if let customDataIdentifiersContainer = customDataIdentifiersContainer {
            customDataIdentifiersDecoded0 = [Macie2ClientTypes.BatchGetCustomDataIdentifierSummary]()
            for structure0 in customDataIdentifiersContainer {
                if let structure0 = structure0 {
                    customDataIdentifiersDecoded0?.append(structure0)
                }
            }
        }
        customDataIdentifiers = customDataIdentifiersDecoded0
        let notFoundIdentifierIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .notFoundIdentifierIds)
        var notFoundIdentifierIdsDecoded0:[Swift.String]? = nil
        if let notFoundIdentifierIdsContainer = notFoundIdentifierIdsContainer {
            notFoundIdentifierIdsDecoded0 = [Swift.String]()
            for string0 in notFoundIdentifierIdsContainer {
                if let string0 = string0 {
                    notFoundIdentifierIdsDecoded0?.append(string0)
                }
            }
        }
        notFoundIdentifierIds = notFoundIdentifierIdsDecoded0
    }
}
