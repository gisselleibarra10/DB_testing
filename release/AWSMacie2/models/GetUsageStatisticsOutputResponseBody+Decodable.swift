// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUsageStatisticsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let records: [Macie2ClientTypes.UsageRecord]?
    let timeRange: Macie2ClientTypes.TimeRange?
}

extension GetUsageStatisticsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case records = "records"
        case timeRange = "timeRange"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let recordsContainer = try containerValues.decodeIfPresent([Macie2ClientTypes.UsageRecord?].self, forKey: .records)
        var recordsDecoded0:[Macie2ClientTypes.UsageRecord]? = nil
        if let recordsContainer = recordsContainer {
            recordsDecoded0 = [Macie2ClientTypes.UsageRecord]()
            for structure0 in recordsContainer {
                if let structure0 = structure0 {
                    recordsDecoded0?.append(structure0)
                }
            }
        }
        records = recordsDecoded0
        let timeRangeDecoded = try containerValues.decodeIfPresent(Macie2ClientTypes.TimeRange.self, forKey: .timeRange)
        timeRange = timeRangeDecoded
    }
}
