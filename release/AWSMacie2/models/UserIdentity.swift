// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Macie2ClientTypes {
    /// Provides information about the type and other characteristics of an entity that performed an action on an affected resource.
    public struct UserIdentity: Swift.Equatable {
        /// If the action was performed with temporary security credentials that were obtained using the AssumeRole operation of the Security Token Service (STS) API, the identifiers, session context, and other details about the identity.
        public var assumedRole: Macie2ClientTypes.AssumedRole?
        /// If the action was performed using the credentials for another Amazon Web Services account, the details of that account.
        public var awsAccount: Macie2ClientTypes.AwsAccount?
        /// If the action was performed by an Amazon Web Services account that belongs to an Amazon Web Service, the name of the service.
        public var awsService: Macie2ClientTypes.AwsService?
        /// If the action was performed with temporary security credentials that were obtained using the GetFederationToken operation of the Security Token Service (STS) API, the identifiers, session context, and other details about the identity.
        public var federatedUser: Macie2ClientTypes.FederatedUser?
        /// If the action was performed using the credentials for an Identity and Access Management (IAM) user, the name and other details about the user.
        public var iamUser: Macie2ClientTypes.IamUser?
        /// If the action was performed using the credentials for your Amazon Web Services account, the details of your account.
        public var root: Macie2ClientTypes.UserIdentityRoot?
        /// The type of entity that performed the action.
        public var type: Macie2ClientTypes.UserIdentityType?

        public init (
            assumedRole: Macie2ClientTypes.AssumedRole? = nil,
            awsAccount: Macie2ClientTypes.AwsAccount? = nil,
            awsService: Macie2ClientTypes.AwsService? = nil,
            federatedUser: Macie2ClientTypes.FederatedUser? = nil,
            iamUser: Macie2ClientTypes.IamUser? = nil,
            root: Macie2ClientTypes.UserIdentityRoot? = nil,
            type: Macie2ClientTypes.UserIdentityType? = nil
        )
        {
            self.assumedRole = assumedRole
            self.awsAccount = awsAccount
            self.awsService = awsService
            self.federatedUser = federatedUser
            self.iamUser = iamUser
            self.root = root
            self.type = type
        }
    }

}
