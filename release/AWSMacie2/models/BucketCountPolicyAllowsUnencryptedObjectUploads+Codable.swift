// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Macie2ClientTypes.BucketCountPolicyAllowsUnencryptedObjectUploads: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowsUnencryptedObjectUploads = "allowsUnencryptedObjectUploads"
        case deniesUnencryptedObjectUploads = "deniesUnencryptedObjectUploads"
        case unknown = "unknown"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allowsUnencryptedObjectUploads = self.allowsUnencryptedObjectUploads {
            try encodeContainer.encode(allowsUnencryptedObjectUploads, forKey: .allowsUnencryptedObjectUploads)
        }
        if let deniesUnencryptedObjectUploads = self.deniesUnencryptedObjectUploads {
            try encodeContainer.encode(deniesUnencryptedObjectUploads, forKey: .deniesUnencryptedObjectUploads)
        }
        if let unknown = self.unknown {
            try encodeContainer.encode(unknown, forKey: .unknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allowsUnencryptedObjectUploadsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .allowsUnencryptedObjectUploads)
        allowsUnencryptedObjectUploads = allowsUnencryptedObjectUploadsDecoded
        let deniesUnencryptedObjectUploadsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .deniesUnencryptedObjectUploads)
        deniesUnencryptedObjectUploads = deniesUnencryptedObjectUploadsDecoded
        let unknownDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unknown)
        unknown = unknownDecoded
    }
}
