// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFindingStatisticsOutputResponseBody: Swift.Equatable {
    let countsByGroup: [Macie2ClientTypes.GroupCount]?
}

extension GetFindingStatisticsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case countsByGroup = "countsByGroup"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let countsByGroupContainer = try containerValues.decodeIfPresent([Macie2ClientTypes.GroupCount?].self, forKey: .countsByGroup)
        var countsByGroupDecoded0:[Macie2ClientTypes.GroupCount]? = nil
        if let countsByGroupContainer = countsByGroupContainer {
            countsByGroupDecoded0 = [Macie2ClientTypes.GroupCount]()
            for structure0 in countsByGroupContainer {
                if let structure0 = structure0 {
                    countsByGroupDecoded0?.append(structure0)
                }
            }
        }
        countsByGroup = countsByGroupDecoded0
    }
}
