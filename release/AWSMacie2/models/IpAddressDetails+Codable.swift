// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Macie2ClientTypes.IpAddressDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ipAddressV4 = "ipAddressV4"
        case ipCity = "ipCity"
        case ipCountry = "ipCountry"
        case ipGeoLocation = "ipGeoLocation"
        case ipOwner = "ipOwner"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ipAddressV4 = self.ipAddressV4 {
            try encodeContainer.encode(ipAddressV4, forKey: .ipAddressV4)
        }
        if let ipCity = self.ipCity {
            try encodeContainer.encode(ipCity, forKey: .ipCity)
        }
        if let ipCountry = self.ipCountry {
            try encodeContainer.encode(ipCountry, forKey: .ipCountry)
        }
        if let ipGeoLocation = self.ipGeoLocation {
            try encodeContainer.encode(ipGeoLocation, forKey: .ipGeoLocation)
        }
        if let ipOwner = self.ipOwner {
            try encodeContainer.encode(ipOwner, forKey: .ipOwner)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ipAddressV4Decoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipAddressV4)
        ipAddressV4 = ipAddressV4Decoded
        let ipCityDecoded = try containerValues.decodeIfPresent(Macie2ClientTypes.IpCity.self, forKey: .ipCity)
        ipCity = ipCityDecoded
        let ipCountryDecoded = try containerValues.decodeIfPresent(Macie2ClientTypes.IpCountry.self, forKey: .ipCountry)
        ipCountry = ipCountryDecoded
        let ipGeoLocationDecoded = try containerValues.decodeIfPresent(Macie2ClientTypes.IpGeoLocation.self, forKey: .ipGeoLocation)
        ipGeoLocation = ipGeoLocationDecoded
        let ipOwnerDecoded = try containerValues.decodeIfPresent(Macie2ClientTypes.IpOwner.self, forKey: .ipOwner)
        ipOwner = ipOwnerDecoded
    }
}
