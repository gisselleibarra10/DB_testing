// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFindingsFiltersOutputResponseBody: Swift.Equatable {
    let findingsFilterListItems: [Macie2ClientTypes.FindingsFilterListItem]?
    let nextToken: Swift.String?
}

extension ListFindingsFiltersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case findingsFilterListItems = "findingsFilterListItems"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let findingsFilterListItemsContainer = try containerValues.decodeIfPresent([Macie2ClientTypes.FindingsFilterListItem?].self, forKey: .findingsFilterListItems)
        var findingsFilterListItemsDecoded0:[Macie2ClientTypes.FindingsFilterListItem]? = nil
        if let findingsFilterListItemsContainer = findingsFilterListItemsContainer {
            findingsFilterListItemsDecoded0 = [Macie2ClientTypes.FindingsFilterListItem]()
            for structure0 in findingsFilterListItemsContainer {
                if let structure0 = structure0 {
                    findingsFilterListItemsDecoded0?.append(structure0)
                }
            }
        }
        findingsFilterListItems = findingsFilterListItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
