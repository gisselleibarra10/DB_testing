// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Macie2ClientTypes.BucketCountByEncryptionType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case kmsManaged = "kmsManaged"
        case s3Managed = "s3Managed"
        case unencrypted = "unencrypted"
        case unknown = "unknown"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kmsManaged = self.kmsManaged {
            try encodeContainer.encode(kmsManaged, forKey: .kmsManaged)
        }
        if let s3Managed = self.s3Managed {
            try encodeContainer.encode(s3Managed, forKey: .s3Managed)
        }
        if let unencrypted = self.unencrypted {
            try encodeContainer.encode(unencrypted, forKey: .unencrypted)
        }
        if let unknown = self.unknown {
            try encodeContainer.encode(unknown, forKey: .unknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let kmsManagedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .kmsManaged)
        kmsManaged = kmsManagedDecoded
        let s3ManagedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .s3Managed)
        s3Managed = s3ManagedDecoded
        let unencryptedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unencrypted)
        unencrypted = unencryptedDecoded
        let unknownDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unknown)
        unknown = unknownDecoded
    }
}
