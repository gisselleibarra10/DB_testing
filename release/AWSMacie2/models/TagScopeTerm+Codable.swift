// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Macie2ClientTypes.TagScopeTerm: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case comparator = "comparator"
        case key = "key"
        case tagValues = "tagValues"
        case target = "target"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let comparator = self.comparator {
            try encodeContainer.encode(comparator.rawValue, forKey: .comparator)
        }
        if let key = self.key {
            try encodeContainer.encode(key, forKey: .key)
        }
        if let tagValues = tagValues {
            var tagValuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tagValues)
            for __listoftagvaluepair0 in tagValues {
                try tagValuesContainer.encode(__listoftagvaluepair0)
            }
        }
        if let target = self.target {
            try encodeContainer.encode(target.rawValue, forKey: .target)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let comparatorDecoded = try containerValues.decodeIfPresent(Macie2ClientTypes.JobComparator.self, forKey: .comparator)
        comparator = comparatorDecoded
        let keyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .key)
        key = keyDecoded
        let tagValuesContainer = try containerValues.decodeIfPresent([Macie2ClientTypes.TagValuePair?].self, forKey: .tagValues)
        var tagValuesDecoded0:[Macie2ClientTypes.TagValuePair]? = nil
        if let tagValuesContainer = tagValuesContainer {
            tagValuesDecoded0 = [Macie2ClientTypes.TagValuePair]()
            for structure0 in tagValuesContainer {
                if let structure0 = structure0 {
                    tagValuesDecoded0?.append(structure0)
                }
            }
        }
        tagValues = tagValuesDecoded0
        let targetDecoded = try containerValues.decodeIfPresent(Macie2ClientTypes.TagTarget.self, forKey: .target)
        target = targetDecoded
    }
}
