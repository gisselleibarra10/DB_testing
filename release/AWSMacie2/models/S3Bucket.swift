// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Macie2ClientTypes {
    /// Provides information about the S3 bucket that a finding applies to.
    public struct S3Bucket: Swift.Equatable {
        /// Specifies whether the bucket policy for the bucket requires server-side encryption of objects when objects are uploaded to the bucket. Possible values are:
        ///
        /// * FALSE - The bucket policy requires server-side encryption of new objects. PutObject requests must include the x-amz-server-side-encryption header and the value for that header must be AES256 or aws:kms.
        ///
        /// * TRUE - The bucket doesn't have a bucket policy or it has a bucket policy that doesn't require server-side encryption of new objects. If a bucket policy exists, it doesn't require PutObject requests to include the x-amz-server-side-encryption header and it doesn't require the value for that header to be AES256 or aws:kms.
        ///
        /// * UNKNOWN - Amazon Macie can't determine whether the bucket policy requires server-side encryption of objects.
        public var allowsUnencryptedObjectUploads: Macie2ClientTypes.AllowsUnencryptedObjectUploads?
        /// The Amazon Resource Name (ARN) of the bucket.
        public var arn: Swift.String?
        /// The date and time, in UTC and extended ISO 8601 format, when the bucket was created.
        public var createdAt: ClientRuntime.Date?
        /// The type of server-side encryption that's used by default to encrypt objects in the bucket.
        public var defaultServerSideEncryption: Macie2ClientTypes.ServerSideEncryption?
        /// The name of the bucket.
        public var name: Swift.String?
        /// The display name and canonical user ID for the Amazon Web Services account that owns the bucket.
        public var owner: Macie2ClientTypes.S3BucketOwner?
        /// The permissions settings that determine whether the bucket is publicly accessible.
        public var publicAccess: Macie2ClientTypes.BucketPublicAccess?
        /// The tags that are associated with the bucket.
        public var tags: [Macie2ClientTypes.KeyValuePair]?

        public init (
            allowsUnencryptedObjectUploads: Macie2ClientTypes.AllowsUnencryptedObjectUploads? = nil,
            arn: Swift.String? = nil,
            createdAt: ClientRuntime.Date? = nil,
            defaultServerSideEncryption: Macie2ClientTypes.ServerSideEncryption? = nil,
            name: Swift.String? = nil,
            owner: Macie2ClientTypes.S3BucketOwner? = nil,
            publicAccess: Macie2ClientTypes.BucketPublicAccess? = nil,
            tags: [Macie2ClientTypes.KeyValuePair]? = nil
        )
        {
            self.allowsUnencryptedObjectUploads = allowsUnencryptedObjectUploads
            self.arn = arn
            self.createdAt = createdAt
            self.defaultServerSideEncryption = defaultServerSideEncryption
            self.name = name
            self.owner = owner
            self.publicAccess = publicAccess
            self.tags = tags
        }
    }

}
