// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Macie2ClientTypes {
    /// The current status of the relationship between an account and an associated Amazon Macie administrator account. Possible values are:
    public enum RelationshipStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case accountsuspended
        case created
        case emailverificationfailed
        case emailverificationinprogress
        case enabled
        case invited
        case paused
        case regiondisabled
        case removed
        case resigned
        case sdkUnknown(Swift.String)

        public static var allCases: [RelationshipStatus] {
            return [
                .accountsuspended,
                .created,
                .emailverificationfailed,
                .emailverificationinprogress,
                .enabled,
                .invited,
                .paused,
                .regiondisabled,
                .removed,
                .resigned,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .accountsuspended: return "AccountSuspended"
            case .created: return "Created"
            case .emailverificationfailed: return "EmailVerificationFailed"
            case .emailverificationinprogress: return "EmailVerificationInProgress"
            case .enabled: return "Enabled"
            case .invited: return "Invited"
            case .paused: return "Paused"
            case .regiondisabled: return "RegionDisabled"
            case .removed: return "Removed"
            case .resigned: return "Resigned"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = RelationshipStatus(rawValue: rawValue) ?? RelationshipStatus.sdkUnknown(rawValue)
        }
    }
}
