// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUsageTotalsOutputResponseBody: Swift.Equatable {
    let timeRange: Macie2ClientTypes.TimeRange?
    let usageTotals: [Macie2ClientTypes.UsageTotal]?
}

extension GetUsageTotalsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case timeRange = "timeRange"
        case usageTotals = "usageTotals"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timeRangeDecoded = try containerValues.decodeIfPresent(Macie2ClientTypes.TimeRange.self, forKey: .timeRange)
        timeRange = timeRangeDecoded
        let usageTotalsContainer = try containerValues.decodeIfPresent([Macie2ClientTypes.UsageTotal?].self, forKey: .usageTotals)
        var usageTotalsDecoded0:[Macie2ClientTypes.UsageTotal]? = nil
        if let usageTotalsContainer = usageTotalsContainer {
            usageTotalsDecoded0 = [Macie2ClientTypes.UsageTotal]()
            for structure0 in usageTotalsContainer {
                if let structure0 = structure0 {
                    usageTotalsDecoded0?.append(structure0)
                }
            }
        }
        usageTotals = usageTotalsDecoded0
    }
}
