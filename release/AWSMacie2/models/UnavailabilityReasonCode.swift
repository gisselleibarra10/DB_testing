// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Macie2ClientTypes {
    /// Specifies why occurrences of sensitive data can't be retrieved for a finding. Possible values are:
    public enum UnavailabilityReasonCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case invalidClassificationResult
        case objectExceedsSizeQuota
        case objectUnavailable
        case unsupportedFindingType
        case unsupportedObjectType
        case sdkUnknown(Swift.String)

        public static var allCases: [UnavailabilityReasonCode] {
            return [
                .invalidClassificationResult,
                .objectExceedsSizeQuota,
                .objectUnavailable,
                .unsupportedFindingType,
                .unsupportedObjectType,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .invalidClassificationResult: return "INVALID_CLASSIFICATION_RESULT"
            case .objectExceedsSizeQuota: return "OBJECT_EXCEEDS_SIZE_QUOTA"
            case .objectUnavailable: return "OBJECT_UNAVAILABLE"
            case .unsupportedFindingType: return "UNSUPPORTED_FINDING_TYPE"
            case .unsupportedObjectType: return "UNSUPPORTED_OBJECT_TYPE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = UnavailabilityReasonCode(rawValue: rawValue) ?? UnavailabilityReasonCode.sdkUnknown(rawValue)
        }
    }
}
