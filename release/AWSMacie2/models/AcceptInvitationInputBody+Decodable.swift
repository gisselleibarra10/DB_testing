// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AcceptInvitationInputBody: Swift.Equatable {
    let administratorAccountId: Swift.String?
    let invitationId: Swift.String?
    let masterAccount: Swift.String?
}

extension AcceptInvitationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case administratorAccountId = "administratorAccountId"
        case invitationId = "invitationId"
        case masterAccount = "masterAccount"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let administratorAccountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .administratorAccountId)
        administratorAccountId = administratorAccountIdDecoded
        let invitationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .invitationId)
        invitationId = invitationIdDecoded
        let masterAccountDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .masterAccount)
        masterAccount = masterAccountDecoded
    }
}
