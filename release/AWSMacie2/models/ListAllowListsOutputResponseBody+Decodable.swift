// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAllowListsOutputResponseBody: Swift.Equatable {
    let allowLists: [Macie2ClientTypes.AllowListSummary]?
    let nextToken: Swift.String?
}

extension ListAllowListsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowLists = "allowLists"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allowListsContainer = try containerValues.decodeIfPresent([Macie2ClientTypes.AllowListSummary?].self, forKey: .allowLists)
        var allowListsDecoded0:[Macie2ClientTypes.AllowListSummary]? = nil
        if let allowListsContainer = allowListsContainer {
            allowListsDecoded0 = [Macie2ClientTypes.AllowListSummary]()
            for structure0 in allowListsContainer {
                if let structure0 = structure0 {
                    allowListsDecoded0?.append(structure0)
                }
            }
        }
        allowLists = allowListsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
