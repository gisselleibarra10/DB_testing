// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ApplicationInsightsClientTypes {
    /// Describes the status of the application.
    public struct ApplicationInfo: Swift.Equatable {
        /// Indicates whether auto-configuration is turned on for this application.
        public var autoConfigEnabled: Swift.Bool?
        /// Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
        public var cWEMonitorEnabled: Swift.Bool?
        /// The method used by Application Insights to onboard your resources.
        public var discoveryType: ApplicationInsightsClientTypes.DiscoveryType?
        /// The lifecycle of the application.
        public var lifeCycle: Swift.String?
        /// Indicates whether Application Insights will create opsItems for any problem detected by Application Insights for an application.
        public var opsCenterEnabled: Swift.Bool?
        /// The SNS topic provided to Application Insights that is associated to the created opsItems to receive SNS notifications for opsItem updates.
        public var opsItemSNSTopicArn: Swift.String?
        /// The issues on the user side that block Application Insights from successfully monitoring an application. Example remarks include:
        ///
        /// * “Configuring application, detected 1 Errors, 3 Warnings”
        ///
        /// * “Configuring application, detected 1 Unconfigured Components”
        public var remarks: Swift.String?
        /// The name of the resource group used for the application.
        public var resourceGroupName: Swift.String?

        public init (
            autoConfigEnabled: Swift.Bool? = nil,
            cWEMonitorEnabled: Swift.Bool? = nil,
            discoveryType: ApplicationInsightsClientTypes.DiscoveryType? = nil,
            lifeCycle: Swift.String? = nil,
            opsCenterEnabled: Swift.Bool? = nil,
            opsItemSNSTopicArn: Swift.String? = nil,
            remarks: Swift.String? = nil,
            resourceGroupName: Swift.String? = nil
        )
        {
            self.autoConfigEnabled = autoConfigEnabled
            self.cWEMonitorEnabled = cWEMonitorEnabled
            self.discoveryType = discoveryType
            self.lifeCycle = lifeCycle
            self.opsCenterEnabled = opsCenterEnabled
            self.opsItemSNSTopicArn = opsItemSNSTopicArn
            self.remarks = remarks
            self.resourceGroupName = resourceGroupName
        }
    }

}
