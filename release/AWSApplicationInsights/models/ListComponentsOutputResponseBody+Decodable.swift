// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListComponentsOutputResponseBody: Swift.Equatable {
    let applicationComponentList: [ApplicationInsightsClientTypes.ApplicationComponent]?
    let nextToken: Swift.String?
}

extension ListComponentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationComponentList = "ApplicationComponentList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationComponentListContainer = try containerValues.decodeIfPresent([ApplicationInsightsClientTypes.ApplicationComponent?].self, forKey: .applicationComponentList)
        var applicationComponentListDecoded0:[ApplicationInsightsClientTypes.ApplicationComponent]? = nil
        if let applicationComponentListContainer = applicationComponentListContainer {
            applicationComponentListDecoded0 = [ApplicationInsightsClientTypes.ApplicationComponent]()
            for structure0 in applicationComponentListContainer {
                if let structure0 = structure0 {
                    applicationComponentListDecoded0?.append(structure0)
                }
            }
        }
        applicationComponentList = applicationComponentListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
