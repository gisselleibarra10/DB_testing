// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationsOutputResponseBody: Swift.Equatable {
    let applicationInfoList: [ApplicationInsightsClientTypes.ApplicationInfo]?
    let nextToken: Swift.String?
}

extension ListApplicationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationInfoList = "ApplicationInfoList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationInfoListContainer = try containerValues.decodeIfPresent([ApplicationInsightsClientTypes.ApplicationInfo?].self, forKey: .applicationInfoList)
        var applicationInfoListDecoded0:[ApplicationInsightsClientTypes.ApplicationInfo]? = nil
        if let applicationInfoListContainer = applicationInfoListContainer {
            applicationInfoListDecoded0 = [ApplicationInsightsClientTypes.ApplicationInfo]()
            for structure0 in applicationInfoListContainer {
                if let structure0 = structure0 {
                    applicationInfoListDecoded0?.append(structure0)
                }
            }
        }
        applicationInfoList = applicationInfoListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
