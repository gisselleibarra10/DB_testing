// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApplicationInsightsClientTypes.RelatedObservations: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case observationList = "ObservationList"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let observationList = observationList {
            var observationListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .observationList)
            for observationlist0 in observationList {
                try observationListContainer.encode(observationlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let observationListContainer = try containerValues.decodeIfPresent([ApplicationInsightsClientTypes.Observation?].self, forKey: .observationList)
        var observationListDecoded0:[ApplicationInsightsClientTypes.Observation]? = nil
        if let observationListContainer = observationListContainer {
            observationListDecoded0 = [ApplicationInsightsClientTypes.Observation]()
            for structure0 in observationListContainer {
                if let structure0 = structure0 {
                    observationListDecoded0?.append(structure0)
                }
            }
        }
        observationList = observationListDecoded0
    }
}
