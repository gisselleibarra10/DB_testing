// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConfigurationHistoryOutputResponseBody: Swift.Equatable {
    let eventList: [ApplicationInsightsClientTypes.ConfigurationEvent]?
    let nextToken: Swift.String?
}

extension ListConfigurationHistoryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventList = "EventList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventListContainer = try containerValues.decodeIfPresent([ApplicationInsightsClientTypes.ConfigurationEvent?].self, forKey: .eventList)
        var eventListDecoded0:[ApplicationInsightsClientTypes.ConfigurationEvent]? = nil
        if let eventListContainer = eventListContainer {
            eventListDecoded0 = [ApplicationInsightsClientTypes.ConfigurationEvent]()
            for structure0 in eventListContainer {
                if let structure0 = structure0 {
                    eventListDecoded0?.append(structure0)
                }
            }
        }
        eventList = eventListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
