// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeComponentConfigurationOutputResponseBody: Swift.Equatable {
    let monitor: Swift.Bool?
    let tier: ApplicationInsightsClientTypes.Tier?
    let componentConfiguration: Swift.String?
}

extension DescribeComponentConfigurationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case componentConfiguration = "ComponentConfiguration"
        case monitor = "Monitor"
        case tier = "Tier"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let monitorDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .monitor)
        monitor = monitorDecoded
        let tierDecoded = try containerValues.decodeIfPresent(ApplicationInsightsClientTypes.Tier.self, forKey: .tier)
        tier = tierDecoded
        let componentConfigurationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .componentConfiguration)
        componentConfiguration = componentConfigurationDecoded
    }
}
