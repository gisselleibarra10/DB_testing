// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeComponentOutputResponseBody: Swift.Equatable {
    let applicationComponent: ApplicationInsightsClientTypes.ApplicationComponent?
    let resourceList: [Swift.String]?
}

extension DescribeComponentOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationComponent = "ApplicationComponent"
        case resourceList = "ResourceList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationComponentDecoded = try containerValues.decodeIfPresent(ApplicationInsightsClientTypes.ApplicationComponent.self, forKey: .applicationComponent)
        applicationComponent = applicationComponentDecoded
        let resourceListContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .resourceList)
        var resourceListDecoded0:[Swift.String]? = nil
        if let resourceListContainer = resourceListContainer {
            resourceListDecoded0 = [Swift.String]()
            for string0 in resourceListContainer {
                if let string0 = string0 {
                    resourceListDecoded0?.append(string0)
                }
            }
        }
        resourceList = resourceListDecoded0
    }
}
