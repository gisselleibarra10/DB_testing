// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateComponentInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case componentName = "ComponentName"
        case newComponentName = "NewComponentName"
        case resourceGroupName = "ResourceGroupName"
        case resourceList = "ResourceList"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let componentName = self.componentName {
            try encodeContainer.encode(componentName, forKey: .componentName)
        }
        if let newComponentName = self.newComponentName {
            try encodeContainer.encode(newComponentName, forKey: .newComponentName)
        }
        if let resourceGroupName = self.resourceGroupName {
            try encodeContainer.encode(resourceGroupName, forKey: .resourceGroupName)
        }
        if let resourceList = resourceList {
            var resourceListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .resourceList)
            for resourcelist0 in resourceList {
                try resourceListContainer.encode(resourcelist0)
            }
        }
    }
}
