// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTFleetHubClientTypes.ApplicationSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationCreationDate
        case applicationDescription
        case applicationId
        case applicationLastUpdateDate
        case applicationName
        case applicationState
        case applicationUrl
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if applicationCreationDate != 0 {
            try encodeContainer.encode(applicationCreationDate, forKey: .applicationCreationDate)
        }
        if let applicationDescription = self.applicationDescription {
            try encodeContainer.encode(applicationDescription, forKey: .applicationDescription)
        }
        if let applicationId = self.applicationId {
            try encodeContainer.encode(applicationId, forKey: .applicationId)
        }
        if applicationLastUpdateDate != 0 {
            try encodeContainer.encode(applicationLastUpdateDate, forKey: .applicationLastUpdateDate)
        }
        if let applicationName = self.applicationName {
            try encodeContainer.encode(applicationName, forKey: .applicationName)
        }
        if let applicationState = self.applicationState {
            try encodeContainer.encode(applicationState.rawValue, forKey: .applicationState)
        }
        if let applicationUrl = self.applicationUrl {
            try encodeContainer.encode(applicationUrl, forKey: .applicationUrl)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationId)
        applicationId = applicationIdDecoded
        let applicationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let applicationDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationDescription)
        applicationDescription = applicationDescriptionDecoded
        let applicationUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationUrl)
        applicationUrl = applicationUrlDecoded
        let applicationCreationDateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .applicationCreationDate) ?? 0
        applicationCreationDate = applicationCreationDateDecoded
        let applicationLastUpdateDateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .applicationLastUpdateDate) ?? 0
        applicationLastUpdateDate = applicationLastUpdateDateDecoded
        let applicationStateDecoded = try containerValues.decodeIfPresent(IoTFleetHubClientTypes.ApplicationState.self, forKey: .applicationState)
        applicationState = applicationStateDecoded
    }
}
