// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeApplicationOutputResponseBody: Swift.Equatable {
    let applicationId: Swift.String?
    let applicationArn: Swift.String?
    let applicationName: Swift.String?
    let applicationDescription: Swift.String?
    let applicationUrl: Swift.String?
    let applicationState: IoTFleetHubClientTypes.ApplicationState?
    let applicationCreationDate: Swift.Int
    let applicationLastUpdateDate: Swift.Int
    let roleArn: Swift.String?
    let ssoClientId: Swift.String?
    let errorMessage: Swift.String?
    let tags: [Swift.String:Swift.String]?
}

extension DescribeApplicationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationArn
        case applicationCreationDate
        case applicationDescription
        case applicationId
        case applicationLastUpdateDate
        case applicationName
        case applicationState
        case applicationUrl
        case errorMessage
        case roleArn
        case ssoClientId
        case tags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationId)
        applicationId = applicationIdDecoded
        let applicationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationArn)
        applicationArn = applicationArnDecoded
        let applicationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let applicationDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationDescription)
        applicationDescription = applicationDescriptionDecoded
        let applicationUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationUrl)
        applicationUrl = applicationUrlDecoded
        let applicationStateDecoded = try containerValues.decodeIfPresent(IoTFleetHubClientTypes.ApplicationState.self, forKey: .applicationState)
        applicationState = applicationStateDecoded
        let applicationCreationDateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .applicationCreationDate) ?? 0
        applicationCreationDate = applicationCreationDateDecoded
        let applicationLastUpdateDateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .applicationLastUpdateDate) ?? 0
        applicationLastUpdateDate = applicationLastUpdateDateDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let ssoClientIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ssoClientId)
        ssoClientId = ssoClientIdDecoded
        let errorMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorMessage)
        errorMessage = errorMessageDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
