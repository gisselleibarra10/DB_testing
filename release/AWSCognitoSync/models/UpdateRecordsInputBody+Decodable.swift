// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateRecordsInputBody: Swift.Equatable {
    let deviceId: Swift.String?
    let recordPatches: [CognitoSyncClientTypes.RecordPatch]?
    let syncSessionToken: Swift.String?
}

extension UpdateRecordsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceId = "DeviceId"
        case recordPatches = "RecordPatches"
        case syncSessionToken = "SyncSessionToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceId)
        deviceId = deviceIdDecoded
        let recordPatchesContainer = try containerValues.decodeIfPresent([CognitoSyncClientTypes.RecordPatch?].self, forKey: .recordPatches)
        var recordPatchesDecoded0:[CognitoSyncClientTypes.RecordPatch]? = nil
        if let recordPatchesContainer = recordPatchesContainer {
            recordPatchesDecoded0 = [CognitoSyncClientTypes.RecordPatch]()
            for structure0 in recordPatchesContainer {
                if let structure0 = structure0 {
                    recordPatchesDecoded0?.append(structure0)
                }
            }
        }
        recordPatches = recordPatchesDecoded0
        let syncSessionTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .syncSessionToken)
        syncSessionToken = syncSessionTokenDecoded
    }
}
