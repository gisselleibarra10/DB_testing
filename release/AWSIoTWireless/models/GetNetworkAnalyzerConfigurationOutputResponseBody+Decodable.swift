// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetNetworkAnalyzerConfigurationOutputResponseBody: Swift.Equatable {
    let traceContent: IotWirelessClientTypes.TraceContent?
    let wirelessDevices: [Swift.String]?
    let wirelessGateways: [Swift.String]?
    let description: Swift.String?
    let arn: Swift.String?
    let name: Swift.String?
}

extension GetNetworkAnalyzerConfigurationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case description = "Description"
        case name = "Name"
        case traceContent = "TraceContent"
        case wirelessDevices = "WirelessDevices"
        case wirelessGateways = "WirelessGateways"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let traceContentDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.TraceContent.self, forKey: .traceContent)
        traceContent = traceContentDecoded
        let wirelessDevicesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .wirelessDevices)
        var wirelessDevicesDecoded0:[Swift.String]? = nil
        if let wirelessDevicesContainer = wirelessDevicesContainer {
            wirelessDevicesDecoded0 = [Swift.String]()
            for string0 in wirelessDevicesContainer {
                if let string0 = string0 {
                    wirelessDevicesDecoded0?.append(string0)
                }
            }
        }
        wirelessDevices = wirelessDevicesDecoded0
        let wirelessGatewaysContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .wirelessGateways)
        var wirelessGatewaysDecoded0:[Swift.String]? = nil
        if let wirelessGatewaysContainer = wirelessGatewaysContainer {
            wirelessGatewaysDecoded0 = [Swift.String]()
            for string0 in wirelessGatewaysContainer {
                if let string0 = string0 {
                    wirelessGatewaysDecoded0?.append(string0)
                }
            }
        }
        wirelessGateways = wirelessGatewaysDecoded0
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
    }
}
