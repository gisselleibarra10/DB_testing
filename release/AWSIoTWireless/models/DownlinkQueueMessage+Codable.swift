// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotWirelessClientTypes.DownlinkQueueMessage: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case loRaWAN = "LoRaWAN"
        case messageId = "MessageId"
        case receivedAt = "ReceivedAt"
        case transmitMode = "TransmitMode"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let loRaWAN = self.loRaWAN {
            try encodeContainer.encode(loRaWAN, forKey: .loRaWAN)
        }
        if let messageId = self.messageId {
            try encodeContainer.encode(messageId, forKey: .messageId)
        }
        if let receivedAt = self.receivedAt {
            try encodeContainer.encode(receivedAt, forKey: .receivedAt)
        }
        if let transmitMode = self.transmitMode {
            try encodeContainer.encode(transmitMode, forKey: .transmitMode)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .messageId)
        messageId = messageIdDecoded
        let transmitModeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .transmitMode)
        transmitMode = transmitModeDecoded
        let receivedAtDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .receivedAt)
        receivedAt = receivedAtDecoded
        let loRaWANDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.LoRaWANSendDataToDevice.self, forKey: .loRaWAN)
        loRaWAN = loRaWANDecoded
    }
}
