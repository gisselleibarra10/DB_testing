// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFuotaTaskOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let id: Swift.String?
    let status: IotWirelessClientTypes.FuotaTaskStatus?
    let name: Swift.String?
    let description: Swift.String?
    let loRaWAN: IotWirelessClientTypes.LoRaWANFuotaTaskGetInfo?
    let firmwareUpdateImage: Swift.String?
    let firmwareUpdateRole: Swift.String?
    let createdAt: ClientRuntime.Date?
}

extension GetFuotaTaskOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case createdAt = "CreatedAt"
        case description = "Description"
        case firmwareUpdateImage = "FirmwareUpdateImage"
        case firmwareUpdateRole = "FirmwareUpdateRole"
        case id = "Id"
        case loRaWAN = "LoRaWAN"
        case name = "Name"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.FuotaTaskStatus.self, forKey: .status)
        status = statusDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let loRaWANDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.LoRaWANFuotaTaskGetInfo.self, forKey: .loRaWAN)
        loRaWAN = loRaWANDecoded
        let firmwareUpdateImageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .firmwareUpdateImage)
        firmwareUpdateImage = firmwareUpdateImageDecoded
        let firmwareUpdateRoleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .firmwareUpdateRole)
        firmwareUpdateRole = firmwareUpdateRoleDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
    }
}
