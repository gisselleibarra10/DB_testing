// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListQueuedMessagesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let downlinkQueueMessagesList: [IotWirelessClientTypes.DownlinkQueueMessage]?
}

extension ListQueuedMessagesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case downlinkQueueMessagesList = "DownlinkQueueMessagesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let downlinkQueueMessagesListContainer = try containerValues.decodeIfPresent([IotWirelessClientTypes.DownlinkQueueMessage?].self, forKey: .downlinkQueueMessagesList)
        var downlinkQueueMessagesListDecoded0:[IotWirelessClientTypes.DownlinkQueueMessage]? = nil
        if let downlinkQueueMessagesListContainer = downlinkQueueMessagesListContainer {
            downlinkQueueMessagesListDecoded0 = [IotWirelessClientTypes.DownlinkQueueMessage]()
            for structure0 in downlinkQueueMessagesListContainer {
                if let structure0 = structure0 {
                    downlinkQueueMessagesListDecoded0?.append(structure0)
                }
            }
        }
        downlinkQueueMessagesList = downlinkQueueMessagesListDecoded0
    }
}
