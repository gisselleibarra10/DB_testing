// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotWirelessClientTypes.LoRaWANMulticastGet: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dlClass = "DlClass"
        case numberOfDevicesInGroup = "NumberOfDevicesInGroup"
        case numberOfDevicesRequested = "NumberOfDevicesRequested"
        case rfRegion = "RfRegion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dlClass = self.dlClass {
            try encodeContainer.encode(dlClass.rawValue, forKey: .dlClass)
        }
        if let numberOfDevicesInGroup = self.numberOfDevicesInGroup {
            try encodeContainer.encode(numberOfDevicesInGroup, forKey: .numberOfDevicesInGroup)
        }
        if let numberOfDevicesRequested = self.numberOfDevicesRequested {
            try encodeContainer.encode(numberOfDevicesRequested, forKey: .numberOfDevicesRequested)
        }
        if let rfRegion = self.rfRegion {
            try encodeContainer.encode(rfRegion.rawValue, forKey: .rfRegion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rfRegionDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.SupportedRfRegion.self, forKey: .rfRegion)
        rfRegion = rfRegionDecoded
        let dlClassDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.DlClass.self, forKey: .dlClass)
        dlClass = dlClassDecoded
        let numberOfDevicesRequestedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfDevicesRequested)
        numberOfDevicesRequested = numberOfDevicesRequestedDecoded
        let numberOfDevicesInGroupDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfDevicesInGroup)
        numberOfDevicesInGroup = numberOfDevicesInGroupDecoded
    }
}
