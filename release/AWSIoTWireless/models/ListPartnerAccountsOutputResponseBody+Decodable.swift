// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPartnerAccountsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let sidewalk: [IotWirelessClientTypes.SidewalkAccountInfoWithFingerprint]?
}

extension ListPartnerAccountsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case sidewalk = "Sidewalk"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let sidewalkContainer = try containerValues.decodeIfPresent([IotWirelessClientTypes.SidewalkAccountInfoWithFingerprint?].self, forKey: .sidewalk)
        var sidewalkDecoded0:[IotWirelessClientTypes.SidewalkAccountInfoWithFingerprint]? = nil
        if let sidewalkContainer = sidewalkContainer {
            sidewalkDecoded0 = [IotWirelessClientTypes.SidewalkAccountInfoWithFingerprint]()
            for structure0 in sidewalkContainer {
                if let structure0 = structure0 {
                    sidewalkDecoded0?.append(structure0)
                }
            }
        }
        sidewalk = sidewalkDecoded0
    }
}
