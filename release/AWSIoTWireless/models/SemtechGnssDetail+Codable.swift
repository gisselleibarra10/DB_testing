// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotWirelessClientTypes.SemtechGnssDetail: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fec = "Fec"
        case provider = "Provider"
        case status = "Status"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fec = self.fec {
            try encodeContainer.encode(fec.rawValue, forKey: .fec)
        }
        if let provider = self.provider {
            try encodeContainer.encode(provider.rawValue, forKey: .provider)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let providerDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.PositionSolverProvider.self, forKey: .provider)
        provider = providerDecoded
        let typeDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.PositionSolverType.self, forKey: .type)
        type = typeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.PositionConfigurationStatus.self, forKey: .status)
        status = statusDecoded
        let fecDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.PositionConfigurationFec.self, forKey: .fec)
        fec = fecDecoded
    }
}
