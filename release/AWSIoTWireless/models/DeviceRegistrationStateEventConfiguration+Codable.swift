// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotWirelessClientTypes.DeviceRegistrationStateEventConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case sidewalk = "Sidewalk"
        case wirelessDeviceIdEventTopic = "WirelessDeviceIdEventTopic"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sidewalk = self.sidewalk {
            try encodeContainer.encode(sidewalk, forKey: .sidewalk)
        }
        if let wirelessDeviceIdEventTopic = self.wirelessDeviceIdEventTopic {
            try encodeContainer.encode(wirelessDeviceIdEventTopic.rawValue, forKey: .wirelessDeviceIdEventTopic)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sidewalkDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.SidewalkEventNotificationConfigurations.self, forKey: .sidewalk)
        sidewalk = sidewalkDecoded
        let wirelessDeviceIdEventTopicDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.EventNotificationTopicStatus.self, forKey: .wirelessDeviceIdEventTopic)
        wirelessDeviceIdEventTopic = wirelessDeviceIdEventTopicDecoded
    }
}
