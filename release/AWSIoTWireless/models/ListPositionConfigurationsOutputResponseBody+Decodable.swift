// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPositionConfigurationsOutputResponseBody: Swift.Equatable {
    let positionConfigurationList: [IotWirelessClientTypes.PositionConfigurationItem]?
    let nextToken: Swift.String?
}

extension ListPositionConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case positionConfigurationList = "PositionConfigurationList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let positionConfigurationListContainer = try containerValues.decodeIfPresent([IotWirelessClientTypes.PositionConfigurationItem?].self, forKey: .positionConfigurationList)
        var positionConfigurationListDecoded0:[IotWirelessClientTypes.PositionConfigurationItem]? = nil
        if let positionConfigurationListContainer = positionConfigurationListContainer {
            positionConfigurationListDecoded0 = [IotWirelessClientTypes.PositionConfigurationItem]()
            for structure0 in positionConfigurationListContainer {
                if let structure0 = structure0 {
                    positionConfigurationListDecoded0?.append(structure0)
                }
            }
        }
        positionConfigurationList = positionConfigurationListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
