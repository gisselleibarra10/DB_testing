// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotWirelessClientTypes {
    /// Supported RfRegions
    public enum SupportedRfRegion: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case as9231
        case au915
        case eu868
        case us915
        case sdkUnknown(Swift.String)

        public static var allCases: [SupportedRfRegion] {
            return [
                .as9231,
                .au915,
                .eu868,
                .us915,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .as9231: return "AS923-1"
            case .au915: return "AU915"
            case .eu868: return "EU868"
            case .us915: return "US915"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SupportedRfRegion(rawValue: rawValue) ?? SupportedRfRegion.sdkUnknown(rawValue)
        }
    }
}
