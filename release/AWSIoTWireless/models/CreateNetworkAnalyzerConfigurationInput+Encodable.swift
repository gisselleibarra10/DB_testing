// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateNetworkAnalyzerConfigurationInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case description = "Description"
        case name = "Name"
        case tags = "Tags"
        case traceContent = "TraceContent"
        case wirelessDevices = "WirelessDevices"
        case wirelessGateways = "WirelessGateways"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientRequestToken = self.clientRequestToken {
            try encodeContainer.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
        if let traceContent = self.traceContent {
            try encodeContainer.encode(traceContent, forKey: .traceContent)
        }
        if let wirelessDevices = wirelessDevices {
            var wirelessDevicesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .wirelessDevices)
            for wirelessdevicelist0 in wirelessDevices {
                try wirelessDevicesContainer.encode(wirelessdevicelist0)
            }
        }
        if let wirelessGateways = wirelessGateways {
            var wirelessGatewaysContainer = encodeContainer.nestedUnkeyedContainer(forKey: .wirelessGateways)
            for wirelessgatewaylist0 in wirelessGateways {
                try wirelessGatewaysContainer.encode(wirelessgatewaylist0)
            }
        }
    }
}
