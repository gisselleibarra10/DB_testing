// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotWirelessClientTypes.LoRaWANMulticastSession: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dlDr = "DlDr"
        case dlFreq = "DlFreq"
        case sessionStartTime = "SessionStartTime"
        case sessionTimeout = "SessionTimeout"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dlDr = self.dlDr {
            try encodeContainer.encode(dlDr, forKey: .dlDr)
        }
        if let dlFreq = self.dlFreq {
            try encodeContainer.encode(dlFreq, forKey: .dlFreq)
        }
        if let sessionStartTime = self.sessionStartTime {
            try encodeContainer.encode(sessionStartTime.timeIntervalSince1970, forKey: .sessionStartTime)
        }
        if let sessionTimeout = self.sessionTimeout {
            try encodeContainer.encode(sessionTimeout, forKey: .sessionTimeout)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dlDrDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .dlDr)
        dlDr = dlDrDecoded
        let dlFreqDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .dlFreq)
        dlFreq = dlFreqDecoded
        let sessionStartTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .sessionStartTime)
        sessionStartTime = sessionStartTimeDecoded
        let sessionTimeoutDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sessionTimeout)
        sessionTimeout = sessionTimeoutDecoded
    }
}
