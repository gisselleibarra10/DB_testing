// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotWirelessClientTypes.OtaaV1_0_x: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appEui = "AppEui"
        case appKey = "AppKey"
        case genAppKey = "GenAppKey"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appEui = self.appEui {
            try encodeContainer.encode(appEui, forKey: .appEui)
        }
        if let appKey = self.appKey {
            try encodeContainer.encode(appKey, forKey: .appKey)
        }
        if let genAppKey = self.genAppKey {
            try encodeContainer.encode(genAppKey, forKey: .genAppKey)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appKey)
        appKey = appKeyDecoded
        let appEuiDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appEui)
        appEui = appEuiDecoded
        let genAppKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .genAppKey)
        genAppKey = genAppKeyDecoded
    }
}
