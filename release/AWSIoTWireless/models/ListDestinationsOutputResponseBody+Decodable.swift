// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDestinationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let destinationList: [IotWirelessClientTypes.Destinations]?
}

extension ListDestinationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationList = "DestinationList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let destinationListContainer = try containerValues.decodeIfPresent([IotWirelessClientTypes.Destinations?].self, forKey: .destinationList)
        var destinationListDecoded0:[IotWirelessClientTypes.Destinations]? = nil
        if let destinationListContainer = destinationListContainer {
            destinationListDecoded0 = [IotWirelessClientTypes.Destinations]()
            for structure0 in destinationListContainer {
                if let structure0 = structure0 {
                    destinationListDecoded0?.append(structure0)
                }
            }
        }
        destinationList = destinationListDecoded0
    }
}
