// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEventConfigurationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let eventConfigurationsList: [IotWirelessClientTypes.EventConfigurationItem]?
}

extension ListEventConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventConfigurationsList = "EventConfigurationsList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let eventConfigurationsListContainer = try containerValues.decodeIfPresent([IotWirelessClientTypes.EventConfigurationItem?].self, forKey: .eventConfigurationsList)
        var eventConfigurationsListDecoded0:[IotWirelessClientTypes.EventConfigurationItem]? = nil
        if let eventConfigurationsListContainer = eventConfigurationsListContainer {
            eventConfigurationsListDecoded0 = [IotWirelessClientTypes.EventConfigurationItem]()
            for structure0 in eventConfigurationsListContainer {
                if let structure0 = structure0 {
                    eventConfigurationsListDecoded0?.append(structure0)
                }
            }
        }
        eventConfigurationsList = eventConfigurationsListDecoded0
    }
}
