// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdatePositionInputBody: Swift.Equatable {
    let position: [Swift.Float]?
}

extension UpdatePositionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case position = "Position"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let positionContainer = try containerValues.decodeIfPresent([Swift.Float?].self, forKey: .position)
        var positionDecoded0:[Swift.Float]? = nil
        if let positionContainer = positionContainer {
            positionDecoded0 = [Swift.Float]()
            for float0 in positionContainer {
                if let float0 = float0 {
                    positionDecoded0?.append(float0)
                }
            }
        }
        position = positionDecoded0
    }
}
