// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotWirelessClientTypes.EventConfigurationItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case events = "Events"
        case identifier = "Identifier"
        case identifierType = "IdentifierType"
        case partnerType = "PartnerType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let events = self.events {
            try encodeContainer.encode(events, forKey: .events)
        }
        if let identifier = self.identifier {
            try encodeContainer.encode(identifier, forKey: .identifier)
        }
        if let identifierType = self.identifierType {
            try encodeContainer.encode(identifierType.rawValue, forKey: .identifierType)
        }
        if let partnerType = self.partnerType {
            try encodeContainer.encode(partnerType.rawValue, forKey: .partnerType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identifier)
        identifier = identifierDecoded
        let identifierTypeDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.IdentifierType.self, forKey: .identifierType)
        identifierType = identifierTypeDecoded
        let partnerTypeDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.EventNotificationPartnerType.self, forKey: .partnerType)
        partnerType = partnerTypeDecoded
        let eventsDecoded = try containerValues.decodeIfPresent(IotWirelessClientTypes.EventNotificationItemConfigurations.self, forKey: .events)
        events = eventsDecoded
    }
}
