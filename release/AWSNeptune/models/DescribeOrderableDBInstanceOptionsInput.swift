// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeOrderableDBInstanceOptionsInput: Swift.Equatable {
    /// The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.
    public var dBInstanceClass: Swift.String?
    /// The name of the engine to retrieve DB instance options for.
    /// This member is required.
    public var engine: Swift.String?
    /// The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version.
    public var engineVersion: Swift.String?
    /// This parameter is not currently supported.
    public var filters: [NeptuneClientTypes.Filter]?
    /// The license model filter value. Specify this parameter to show only the available offerings matching the specified license model.
    public var licenseModel: Swift.String?
    /// An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .
    public var marker: Swift.String?
    /// The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. Default: 100 Constraints: Minimum 20, maximum 100.
    public var maxRecords: Swift.Int?
    /// The VPC filter value. Specify this parameter to show only the available VPC or non-VPC offerings.
    public var vpc: Swift.Bool?

    public init (
        dBInstanceClass: Swift.String? = nil,
        engine: Swift.String? = nil,
        engineVersion: Swift.String? = nil,
        filters: [NeptuneClientTypes.Filter]? = nil,
        licenseModel: Swift.String? = nil,
        marker: Swift.String? = nil,
        maxRecords: Swift.Int? = nil,
        vpc: Swift.Bool? = nil
    )
    {
        self.dBInstanceClass = dBInstanceClass
        self.engine = engine
        self.engineVersion = engineVersion
        self.filters = filters
        self.licenseModel = licenseModel
        self.marker = marker
        self.maxRecords = maxRecords
        self.vpc = vpc
    }
}
