// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension NeptuneClientTypes {
    /// Contains a list of available options for a DB instance. This data type is used as a response element in the [DescribeOrderableDBInstanceOptions] action.
    public struct OrderableDBInstanceOption: Swift.Equatable {
        /// A list of Availability Zones for a DB instance.
        public var availabilityZones: [NeptuneClientTypes.AvailabilityZone]?
        /// The DB instance class for a DB instance.
        public var dBInstanceClass: Swift.String?
        /// The engine type of a DB instance.
        public var engine: Swift.String?
        /// The engine version of a DB instance.
        public var engineVersion: Swift.String?
        /// The license model for a DB instance.
        public var licenseModel: Swift.String?
        /// Maximum total provisioned IOPS for a DB instance.
        public var maxIopsPerDbInstance: Swift.Int?
        /// Maximum provisioned IOPS per GiB for a DB instance.
        public var maxIopsPerGib: Swift.Double?
        /// Maximum storage size for a DB instance.
        public var maxStorageSize: Swift.Int?
        /// Minimum total provisioned IOPS for a DB instance.
        public var minIopsPerDbInstance: Swift.Int?
        /// Minimum provisioned IOPS per GiB for a DB instance.
        public var minIopsPerGib: Swift.Double?
        /// Minimum storage size for a DB instance.
        public var minStorageSize: Swift.Int?
        /// Indicates whether a DB instance is Multi-AZ capable.
        public var multiAZCapable: Swift.Bool
        /// Indicates whether a DB instance can have a Read Replica.
        public var readReplicaCapable: Swift.Bool
        /// Indicates the storage type for a DB instance.
        public var storageType: Swift.String?
        /// Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
        public var supportsEnhancedMonitoring: Swift.Bool
        /// A value that indicates whether you can use Neptune global databases with a specific combination of other DB engine attributes.
        public var supportsGlobalDatabases: Swift.Bool
        /// Indicates whether a DB instance supports IAM database authentication.
        public var supportsIAMDatabaseAuthentication: Swift.Bool
        /// Indicates whether a DB instance supports provisioned IOPS.
        public var supportsIops: Swift.Bool
        /// (Not supported by Neptune)
        public var supportsPerformanceInsights: Swift.Bool
        /// Indicates whether a DB instance supports encrypted storage.
        public var supportsStorageEncryption: Swift.Bool
        /// Indicates whether a DB instance is in a VPC.
        public var vpc: Swift.Bool

        public init (
            availabilityZones: [NeptuneClientTypes.AvailabilityZone]? = nil,
            dBInstanceClass: Swift.String? = nil,
            engine: Swift.String? = nil,
            engineVersion: Swift.String? = nil,
            licenseModel: Swift.String? = nil,
            maxIopsPerDbInstance: Swift.Int? = nil,
            maxIopsPerGib: Swift.Double? = nil,
            maxStorageSize: Swift.Int? = nil,
            minIopsPerDbInstance: Swift.Int? = nil,
            minIopsPerGib: Swift.Double? = nil,
            minStorageSize: Swift.Int? = nil,
            multiAZCapable: Swift.Bool = false,
            readReplicaCapable: Swift.Bool = false,
            storageType: Swift.String? = nil,
            supportsEnhancedMonitoring: Swift.Bool = false,
            supportsGlobalDatabases: Swift.Bool = false,
            supportsIAMDatabaseAuthentication: Swift.Bool = false,
            supportsIops: Swift.Bool = false,
            supportsPerformanceInsights: Swift.Bool = false,
            supportsStorageEncryption: Swift.Bool = false,
            vpc: Swift.Bool = false
        )
        {
            self.availabilityZones = availabilityZones
            self.dBInstanceClass = dBInstanceClass
            self.engine = engine
            self.engineVersion = engineVersion
            self.licenseModel = licenseModel
            self.maxIopsPerDbInstance = maxIopsPerDbInstance
            self.maxIopsPerGib = maxIopsPerGib
            self.maxStorageSize = maxStorageSize
            self.minIopsPerDbInstance = minIopsPerDbInstance
            self.minIopsPerGib = minIopsPerGib
            self.minStorageSize = minStorageSize
            self.multiAZCapable = multiAZCapable
            self.readReplicaCapable = readReplicaCapable
            self.storageType = storageType
            self.supportsEnhancedMonitoring = supportsEnhancedMonitoring
            self.supportsGlobalDatabases = supportsGlobalDatabases
            self.supportsIAMDatabaseAuthentication = supportsIAMDatabaseAuthentication
            self.supportsIops = supportsIops
            self.supportsPerformanceInsights = supportsPerformanceInsights
            self.supportsStorageEncryption = supportsStorageEncryption
            self.vpc = vpc
        }
    }

}
