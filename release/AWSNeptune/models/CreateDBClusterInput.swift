// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDBClusterInput: Swift.Equatable {
    /// A list of EC2 Availability Zones that instances in the DB cluster can be created in.
    public var availabilityZones: [Swift.String]?
    /// The number of days for which automated backups are retained. You must specify a minimum value of 1. Default: 1 Constraints:
    ///
    /// * Must be a value from 1 to 35
    public var backupRetentionPeriod: Swift.Int?
    /// (Not supported by Neptune)
    public var characterSetName: Swift.String?
    /// If set to true, tags are copied to any snapshot of the DB cluster that is created.
    public var copyTagsToSnapshot: Swift.Bool?
    /// The DB cluster identifier. This parameter is stored as a lowercase string. Constraints:
    ///
    /// * Must contain from 1 to 63 letters, numbers, or hyphens.
    ///
    /// * First character must be a letter.
    ///
    /// * Cannot end with a hyphen or contain two consecutive hyphens.
    ///
    ///
    /// Example: my-cluster1
    /// This member is required.
    public var dBClusterIdentifier: Swift.String?
    /// The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default is used. Constraints:
    ///
    /// * If supplied, must match the name of an existing DBClusterParameterGroup.
    public var dBClusterParameterGroupName: Swift.String?
    /// A DB subnet group to associate with this DB cluster. Constraints: Must match the name of an existing DBSubnetGroup. Must not be default. Example: mySubnetgroup
    public var dBSubnetGroupName: Swift.String?
    /// The name for your database of up to 64 alpha-numeric characters. If you do not provide a name, Amazon Neptune will not create a database in the DB cluster you are creating.
    public var databaseName: Swift.String?
    /// A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is enabled.
    public var deletionProtection: Swift.Bool?
    /// The list of log types that need to be enabled for exporting to CloudWatch Logs.
    public var enableCloudwatchLogsExports: [Swift.String]?
    /// If set to true, enables Amazon Identity and Access Management (IAM) authentication for the entire DB cluster (this cannot be set at an instance level). Default: false.
    public var enableIAMDatabaseAuthentication: Swift.Bool?
    /// The name of the database engine to be used for this DB cluster. Valid Values: neptune
    /// This member is required.
    public var engine: Swift.String?
    /// The version number of the database engine to use for the new DB cluster. Example: 1.0.2.1
    public var engineVersion: Swift.String?
    /// The ID of the Neptune global database to which this new DB cluster should be added.
    public var globalClusterIdentifier: Swift.String?
    /// The Amazon KMS key identifier for an encrypted DB cluster. The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB cluster with the same Amazon account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key. If an encryption key is not specified in KmsKeyId:
    ///
    /// * If ReplicationSourceIdentifier identifies an encrypted source, then Amazon Neptune will use the encryption key used to encrypt the source. Otherwise, Amazon Neptune will use your default encryption key.
    ///
    /// * If the StorageEncrypted parameter is true and ReplicationSourceIdentifier is not specified, then Amazon Neptune will use your default encryption key.
    ///
    ///
    /// Amazon KMS creates the default encryption key for your Amazon account. Your Amazon account has a different default encryption key for each Amazon Region. If you create a Read Replica of an encrypted DB cluster in another Amazon Region, you must set KmsKeyId to a KMS key ID that is valid in the destination Amazon Region. This key is used to encrypt the Read Replica in that Amazon Region.
    public var kmsKeyId: Swift.String?
    /// Not supported by Neptune.
    public var masterUserPassword: Swift.String?
    /// Not supported by Neptune.
    public var masterUsername: Swift.String?
    /// (Not supported by Neptune)
    public var optionGroupName: Swift.String?
    /// The port number on which the instances in the DB cluster accept connections. Default: 8182
    public var port: Swift.Int?
    /// This parameter is not currently supported.
    public var preSignedUrl: Swift.String?
    /// The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Region. To see the time blocks available, see [ Adjusting the Preferred Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html) in the Amazon Neptune User Guide. Constraints:
    ///
    /// * Must be in the format hh24:mi-hh24:mi.
    ///
    /// * Must be in Universal Coordinated Time (UTC).
    ///
    /// * Must not conflict with the preferred maintenance window.
    ///
    /// * Must be at least 30 minutes.
    public var preferredBackupWindow: Swift.String?
    /// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC). Format: ddd:hh24:mi-ddd:hh24:mi The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Region, occurring on a random day of the week. To see the time blocks available, see [ Adjusting the Preferred Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html) in the Amazon Neptune User Guide. Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun. Constraints: Minimum 30-minute window.
    public var preferredMaintenanceWindow: Swift.String?
    /// The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a Read Replica.
    public var replicationSourceIdentifier: Swift.String?
    /// Specifies whether the DB cluster is encrypted.
    public var storageEncrypted: Swift.Bool?
    /// The tags to assign to the new DB cluster.
    public var tags: [NeptuneClientTypes.Tag]?
    /// A list of EC2 VPC security groups to associate with this DB cluster.
    public var vpcSecurityGroupIds: [Swift.String]?

    public init (
        availabilityZones: [Swift.String]? = nil,
        backupRetentionPeriod: Swift.Int? = nil,
        characterSetName: Swift.String? = nil,
        copyTagsToSnapshot: Swift.Bool? = nil,
        dBClusterIdentifier: Swift.String? = nil,
        dBClusterParameterGroupName: Swift.String? = nil,
        dBSubnetGroupName: Swift.String? = nil,
        databaseName: Swift.String? = nil,
        deletionProtection: Swift.Bool? = nil,
        enableCloudwatchLogsExports: [Swift.String]? = nil,
        enableIAMDatabaseAuthentication: Swift.Bool? = nil,
        engine: Swift.String? = nil,
        engineVersion: Swift.String? = nil,
        globalClusterIdentifier: Swift.String? = nil,
        kmsKeyId: Swift.String? = nil,
        masterUserPassword: Swift.String? = nil,
        masterUsername: Swift.String? = nil,
        optionGroupName: Swift.String? = nil,
        port: Swift.Int? = nil,
        preSignedUrl: Swift.String? = nil,
        preferredBackupWindow: Swift.String? = nil,
        preferredMaintenanceWindow: Swift.String? = nil,
        replicationSourceIdentifier: Swift.String? = nil,
        storageEncrypted: Swift.Bool? = nil,
        tags: [NeptuneClientTypes.Tag]? = nil,
        vpcSecurityGroupIds: [Swift.String]? = nil
    )
    {
        self.availabilityZones = availabilityZones
        self.backupRetentionPeriod = backupRetentionPeriod
        self.characterSetName = characterSetName
        self.copyTagsToSnapshot = copyTagsToSnapshot
        self.dBClusterIdentifier = dBClusterIdentifier
        self.dBClusterParameterGroupName = dBClusterParameterGroupName
        self.dBSubnetGroupName = dBSubnetGroupName
        self.databaseName = databaseName
        self.deletionProtection = deletionProtection
        self.enableCloudwatchLogsExports = enableCloudwatchLogsExports
        self.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication
        self.engine = engine
        self.engineVersion = engineVersion
        self.globalClusterIdentifier = globalClusterIdentifier
        self.kmsKeyId = kmsKeyId
        self.masterUserPassword = masterUserPassword
        self.masterUsername = masterUsername
        self.optionGroupName = optionGroupName
        self.port = port
        self.preSignedUrl = preSignedUrl
        self.preferredBackupWindow = preferredBackupWindow
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.replicationSourceIdentifier = replicationSourceIdentifier
        self.storageEncrypted = storageEncrypted
        self.tags = tags
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
