// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateGlobalClusterInputBody: Swift.Equatable {
    let globalClusterIdentifier: Swift.String?
    let sourceDBClusterIdentifier: Swift.String?
    let engine: Swift.String?
    let engineVersion: Swift.String?
    let deletionProtection: Swift.Bool?
    let storageEncrypted: Swift.Bool?
}

extension CreateGlobalClusterInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deletionProtection = "DeletionProtection"
        case engine = "Engine"
        case engineVersion = "EngineVersion"
        case globalClusterIdentifier = "GlobalClusterIdentifier"
        case sourceDBClusterIdentifier = "SourceDBClusterIdentifier"
        case storageEncrypted = "StorageEncrypted"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let globalClusterIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .globalClusterIdentifier)
        globalClusterIdentifier = globalClusterIdentifierDecoded
        let sourceDBClusterIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceDBClusterIdentifier)
        sourceDBClusterIdentifier = sourceDBClusterIdentifierDecoded
        let engineDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .engine)
        engine = engineDecoded
        let engineVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .engineVersion)
        engineVersion = engineVersionDecoded
        let deletionProtectionDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .deletionProtection)
        deletionProtection = deletionProtectionDecoded
        let storageEncryptedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .storageEncrypted)
        storageEncrypted = storageEncryptedDecoded
    }
}
