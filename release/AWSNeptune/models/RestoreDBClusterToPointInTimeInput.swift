// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct RestoreDBClusterToPointInTimeInput: Swift.Equatable {
    /// The name of the new DB cluster to be created. Constraints:
    ///
    /// * Must contain from 1 to 63 letters, numbers, or hyphens
    ///
    /// * First character must be a letter
    ///
    /// * Cannot end with a hyphen or contain two consecutive hyphens
    /// This member is required.
    public var dBClusterIdentifier: Swift.String?
    /// The name of the DB cluster parameter group to associate with the new DB cluster. Constraints:
    ///
    /// * If supplied, must match the name of an existing DBClusterParameterGroup.
    public var dBClusterParameterGroupName: Swift.String?
    /// The DB subnet group name to use for the new DB cluster. Constraints: If supplied, must match the name of an existing DBSubnetGroup. Example: mySubnetgroup
    public var dBSubnetGroupName: Swift.String?
    /// A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
    public var deletionProtection: Swift.Bool?
    /// The list of logs that the restored DB cluster is to export to CloudWatch Logs.
    public var enableCloudwatchLogsExports: [Swift.String]?
    /// True to enable mapping of Amazon Identity and Access Management (IAM) accounts to database accounts, and otherwise false. Default: false
    public var enableIAMDatabaseAuthentication: Swift.Bool?
    /// The Amazon KMS key identifier to use when restoring an encrypted DB cluster from an encrypted DB cluster. The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same Amazon account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key. You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key that is different than the KMS key used to encrypt the source DB cluster. The new DB cluster is encrypted with the KMS key identified by the KmsKeyId parameter. If you do not specify a value for the KmsKeyId parameter, then the following will occur:
    ///
    /// * If the DB cluster is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the source DB cluster.
    ///
    /// * If the DB cluster is not encrypted, then the restored DB cluster is not encrypted.
    ///
    ///
    /// If DBClusterIdentifier refers to a DB cluster that is not encrypted, then the restore request is rejected.
    public var kmsKeyId: Swift.String?
    /// (Not supported by Neptune)
    public var optionGroupName: Swift.String?
    /// The port number on which the new DB cluster accepts connections. Constraints: Value must be 1150-65535 Default: The same port as the original DB cluster.
    public var port: Swift.Int?
    /// The date and time to restore the DB cluster to. Valid Values: Value must be a time in Universal Coordinated Time (UTC) format Constraints:
    ///
    /// * Must be before the latest restorable time for the DB instance
    ///
    /// * Must be specified if UseLatestRestorableTime parameter is not provided
    ///
    /// * Cannot be specified if UseLatestRestorableTime parameter is true
    ///
    /// * Cannot be specified if RestoreType parameter is copy-on-write
    ///
    ///
    /// Example: 2015-03-07T23:45:00Z
    public var restoreToTime: ClientRuntime.Date?
    /// The type of restore to be performed. You can specify one of the following values:
    ///
    /// * full-copy - The new DB cluster is restored as a full copy of the source DB cluster.
    ///
    /// * copy-on-write - The new DB cluster is restored as a clone of the source DB cluster.
    ///
    ///
    /// If you don't specify a RestoreType value, then the new DB cluster is restored as a full copy of the source DB cluster.
    public var restoreType: Swift.String?
    /// The identifier of the source DB cluster from which to restore. Constraints:
    ///
    /// * Must match the identifier of an existing DBCluster.
    /// This member is required.
    public var sourceDBClusterIdentifier: Swift.String?
    /// The tags to be applied to the restored DB cluster.
    public var tags: [NeptuneClientTypes.Tag]?
    /// A value that is set to true to restore the DB cluster to the latest restorable backup time, and false otherwise. Default: false Constraints: Cannot be specified if RestoreToTime parameter is provided.
    public var useLatestRestorableTime: Swift.Bool
    /// A list of VPC security groups that the new DB cluster belongs to.
    public var vpcSecurityGroupIds: [Swift.String]?

    public init (
        dBClusterIdentifier: Swift.String? = nil,
        dBClusterParameterGroupName: Swift.String? = nil,
        dBSubnetGroupName: Swift.String? = nil,
        deletionProtection: Swift.Bool? = nil,
        enableCloudwatchLogsExports: [Swift.String]? = nil,
        enableIAMDatabaseAuthentication: Swift.Bool? = nil,
        kmsKeyId: Swift.String? = nil,
        optionGroupName: Swift.String? = nil,
        port: Swift.Int? = nil,
        restoreToTime: ClientRuntime.Date? = nil,
        restoreType: Swift.String? = nil,
        sourceDBClusterIdentifier: Swift.String? = nil,
        tags: [NeptuneClientTypes.Tag]? = nil,
        useLatestRestorableTime: Swift.Bool = false,
        vpcSecurityGroupIds: [Swift.String]? = nil
    )
    {
        self.dBClusterIdentifier = dBClusterIdentifier
        self.dBClusterParameterGroupName = dBClusterParameterGroupName
        self.dBSubnetGroupName = dBSubnetGroupName
        self.deletionProtection = deletionProtection
        self.enableCloudwatchLogsExports = enableCloudwatchLogsExports
        self.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication
        self.kmsKeyId = kmsKeyId
        self.optionGroupName = optionGroupName
        self.port = port
        self.restoreToTime = restoreToTime
        self.restoreType = restoreType
        self.sourceDBClusterIdentifier = sourceDBClusterIdentifier
        self.tags = tags
        self.useLatestRestorableTime = useLatestRestorableTime
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
