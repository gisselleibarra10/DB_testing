// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeObjectsOutputResponseBody: Swift.Equatable {
    let pipelineObjects: [DataPipelineClientTypes.PipelineObject]?
    let marker: Swift.String?
    let hasMoreResults: Swift.Bool
}

extension DescribeObjectsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hasMoreResults
        case marker
        case pipelineObjects
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineObjectsContainer = try containerValues.decodeIfPresent([DataPipelineClientTypes.PipelineObject?].self, forKey: .pipelineObjects)
        var pipelineObjectsDecoded0:[DataPipelineClientTypes.PipelineObject]? = nil
        if let pipelineObjectsContainer = pipelineObjectsContainer {
            pipelineObjectsDecoded0 = [DataPipelineClientTypes.PipelineObject]()
            for structure0 in pipelineObjectsContainer {
                if let structure0 = structure0 {
                    pipelineObjectsDecoded0?.append(structure0)
                }
            }
        }
        pipelineObjects = pipelineObjectsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let hasMoreResultsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .hasMoreResults) ?? false
        hasMoreResults = hasMoreResultsDecoded
    }
}
