// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataPipelineClientTypes.Query: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case selectors
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let selectors = selectors {
            var selectorsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .selectors)
            for selectorlist0 in selectors {
                try selectorsContainer.encode(selectorlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let selectorsContainer = try containerValues.decodeIfPresent([DataPipelineClientTypes.Selector?].self, forKey: .selectors)
        var selectorsDecoded0:[DataPipelineClientTypes.Selector]? = nil
        if let selectorsContainer = selectorsContainer {
            selectorsDecoded0 = [DataPipelineClientTypes.Selector]()
            for structure0 in selectorsContainer {
                if let structure0 = structure0 {
                    selectorsDecoded0?.append(structure0)
                }
            }
        }
        selectors = selectorsDecoded0
    }
}
