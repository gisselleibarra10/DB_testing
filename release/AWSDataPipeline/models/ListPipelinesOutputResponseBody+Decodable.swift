// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelinesOutputResponseBody: Swift.Equatable {
    let pipelineIdList: [DataPipelineClientTypes.PipelineIdName]?
    let marker: Swift.String?
    let hasMoreResults: Swift.Bool
}

extension ListPipelinesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hasMoreResults
        case marker
        case pipelineIdList
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineIdListContainer = try containerValues.decodeIfPresent([DataPipelineClientTypes.PipelineIdName?].self, forKey: .pipelineIdList)
        var pipelineIdListDecoded0:[DataPipelineClientTypes.PipelineIdName]? = nil
        if let pipelineIdListContainer = pipelineIdListContainer {
            pipelineIdListDecoded0 = [DataPipelineClientTypes.PipelineIdName]()
            for structure0 in pipelineIdListContainer {
                if let structure0 = structure0 {
                    pipelineIdListDecoded0?.append(structure0)
                }
            }
        }
        pipelineIdList = pipelineIdListDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let hasMoreResultsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .hasMoreResults) ?? false
        hasMoreResults = hasMoreResultsDecoded
    }
}
