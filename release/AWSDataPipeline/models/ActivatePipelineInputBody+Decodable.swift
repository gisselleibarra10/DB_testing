// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ActivatePipelineInputBody: Swift.Equatable {
    let pipelineId: Swift.String?
    let parameterValues: [DataPipelineClientTypes.ParameterValue]?
    let startTimestamp: ClientRuntime.Date?
}

extension ActivatePipelineInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case parameterValues
        case pipelineId
        case startTimestamp
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineId)
        pipelineId = pipelineIdDecoded
        let parameterValuesContainer = try containerValues.decodeIfPresent([DataPipelineClientTypes.ParameterValue?].self, forKey: .parameterValues)
        var parameterValuesDecoded0:[DataPipelineClientTypes.ParameterValue]? = nil
        if let parameterValuesContainer = parameterValuesContainer {
            parameterValuesDecoded0 = [DataPipelineClientTypes.ParameterValue]()
            for structure0 in parameterValuesContainer {
                if let structure0 = structure0 {
                    parameterValuesDecoded0?.append(structure0)
                }
            }
        }
        parameterValues = parameterValuesDecoded0
        let startTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTimestamp)
        startTimestamp = startTimestampDecoded
    }
}
