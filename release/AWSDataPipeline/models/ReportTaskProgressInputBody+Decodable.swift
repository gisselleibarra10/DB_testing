// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ReportTaskProgressInputBody: Swift.Equatable {
    let taskId: Swift.String?
    let fields: [DataPipelineClientTypes.Field]?
}

extension ReportTaskProgressInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fields
        case taskId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskId)
        taskId = taskIdDecoded
        let fieldsContainer = try containerValues.decodeIfPresent([DataPipelineClientTypes.Field?].self, forKey: .fields)
        var fieldsDecoded0:[DataPipelineClientTypes.Field]? = nil
        if let fieldsContainer = fieldsContainer {
            fieldsDecoded0 = [DataPipelineClientTypes.Field]()
            for structure0 in fieldsContainer {
                if let structure0 = structure0 {
                    fieldsDecoded0?.append(structure0)
                }
            }
        }
        fields = fieldsDecoded0
    }
}
