// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateUserSettingsInput: Swift.Equatable {
    /// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. If you do not specify a client token, one is automatically generated by the AWS SDK.
    public var clientToken: Swift.String?
    /// Specifies whether the user can copy text from the streaming session to the local device.
    /// This member is required.
    public var copyAllowed: WorkSpacesWebClientTypes.EnabledType?
    /// The amount of time that a streaming session remains active after users disconnect.
    public var disconnectTimeoutInMinutes: Swift.Int?
    /// Specifies whether the user can download files from the streaming session to the local device.
    /// This member is required.
    public var downloadAllowed: WorkSpacesWebClientTypes.EnabledType?
    /// The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
    public var idleDisconnectTimeoutInMinutes: Swift.Int?
    /// Specifies whether the user can paste text from the local device to the streaming session.
    /// This member is required.
    public var pasteAllowed: WorkSpacesWebClientTypes.EnabledType?
    /// Specifies whether the user can print to the local device.
    /// This member is required.
    public var printAllowed: WorkSpacesWebClientTypes.EnabledType?
    /// The tags to add to the user settings resource. A tag is a key-value pair.
    public var tags: [WorkSpacesWebClientTypes.Tag]?
    /// Specifies whether the user can upload files from the local device to the streaming session.
    /// This member is required.
    public var uploadAllowed: WorkSpacesWebClientTypes.EnabledType?

    public init (
        clientToken: Swift.String? = nil,
        copyAllowed: WorkSpacesWebClientTypes.EnabledType? = nil,
        disconnectTimeoutInMinutes: Swift.Int? = nil,
        downloadAllowed: WorkSpacesWebClientTypes.EnabledType? = nil,
        idleDisconnectTimeoutInMinutes: Swift.Int? = nil,
        pasteAllowed: WorkSpacesWebClientTypes.EnabledType? = nil,
        printAllowed: WorkSpacesWebClientTypes.EnabledType? = nil,
        tags: [WorkSpacesWebClientTypes.Tag]? = nil,
        uploadAllowed: WorkSpacesWebClientTypes.EnabledType? = nil
    )
    {
        self.clientToken = clientToken
        self.copyAllowed = copyAllowed
        self.disconnectTimeoutInMinutes = disconnectTimeoutInMinutes
        self.downloadAllowed = downloadAllowed
        self.idleDisconnectTimeoutInMinutes = idleDisconnectTimeoutInMinutes
        self.pasteAllowed = pasteAllowed
        self.printAllowed = printAllowed
        self.tags = tags
        self.uploadAllowed = uploadAllowed
    }
}
