// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIdentityProvidersOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let identityProviders: [WorkSpacesWebClientTypes.IdentityProviderSummary]?
}

extension ListIdentityProvidersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identityProviders
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let identityProvidersContainer = try containerValues.decodeIfPresent([WorkSpacesWebClientTypes.IdentityProviderSummary?].self, forKey: .identityProviders)
        var identityProvidersDecoded0:[WorkSpacesWebClientTypes.IdentityProviderSummary]? = nil
        if let identityProvidersContainer = identityProvidersContainer {
            identityProvidersDecoded0 = [WorkSpacesWebClientTypes.IdentityProviderSummary]()
            for structure0 in identityProvidersContainer {
                if let structure0 = structure0 {
                    identityProvidersDecoded0?.append(structure0)
                }
            }
        }
        identityProviders = identityProvidersDecoded0
    }
}
