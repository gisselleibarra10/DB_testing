// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WorkSpacesWebClientTypes.BrowserSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associatedPortalArns
        case browserPolicy
        case browserSettingsArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let associatedPortalArns = associatedPortalArns {
            var associatedPortalArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .associatedPortalArns)
            for arnlist0 in associatedPortalArns {
                try associatedPortalArnsContainer.encode(arnlist0)
            }
        }
        if let browserPolicy = self.browserPolicy {
            try encodeContainer.encode(browserPolicy, forKey: .browserPolicy)
        }
        if let browserSettingsArn = self.browserSettingsArn {
            try encodeContainer.encode(browserSettingsArn, forKey: .browserSettingsArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let browserSettingsArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .browserSettingsArn)
        browserSettingsArn = browserSettingsArnDecoded
        let associatedPortalArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .associatedPortalArns)
        var associatedPortalArnsDecoded0:[Swift.String]? = nil
        if let associatedPortalArnsContainer = associatedPortalArnsContainer {
            associatedPortalArnsDecoded0 = [Swift.String]()
            for string0 in associatedPortalArnsContainer {
                if let string0 = string0 {
                    associatedPortalArnsDecoded0?.append(string0)
                }
            }
        }
        associatedPortalArns = associatedPortalArnsDecoded0
        let browserPolicyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .browserPolicy)
        browserPolicy = browserPolicyDecoded
    }
}
