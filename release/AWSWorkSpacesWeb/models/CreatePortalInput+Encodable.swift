// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreatePortalInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case additionalEncryptionContext
        case clientToken
        case customerManagedKey
        case displayName
        case tags
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let additionalEncryptionContext = additionalEncryptionContext {
            var additionalEncryptionContextContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .additionalEncryptionContext)
            for (dictKey0, encryptioncontextmap0) in additionalEncryptionContext {
                try additionalEncryptionContextContainer.encode(encryptioncontextmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let customerManagedKey = self.customerManagedKey {
            try encodeContainer.encode(customerManagedKey, forKey: .customerManagedKey)
        }
        if let displayName = self.displayName {
            try encodeContainer.encode(displayName, forKey: .displayName)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
