// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTrustStoresOutputResponseBody: Swift.Equatable {
    let trustStores: [WorkSpacesWebClientTypes.TrustStoreSummary]?
    let nextToken: Swift.String?
}

extension ListTrustStoresOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case trustStores
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trustStoresContainer = try containerValues.decodeIfPresent([WorkSpacesWebClientTypes.TrustStoreSummary?].self, forKey: .trustStores)
        var trustStoresDecoded0:[WorkSpacesWebClientTypes.TrustStoreSummary]? = nil
        if let trustStoresContainer = trustStoresContainer {
            trustStoresDecoded0 = [WorkSpacesWebClientTypes.TrustStoreSummary]()
            for structure0 in trustStoresContainer {
                if let structure0 = structure0 {
                    trustStoresDecoded0?.append(structure0)
                }
            }
        }
        trustStores = trustStoresDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
