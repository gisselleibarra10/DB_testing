// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBrowserSettingsOutputResponseBody: Swift.Equatable {
    let browserSettings: [WorkSpacesWebClientTypes.BrowserSettingsSummary]?
    let nextToken: Swift.String?
}

extension ListBrowserSettingsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case browserSettings
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let browserSettingsContainer = try containerValues.decodeIfPresent([WorkSpacesWebClientTypes.BrowserSettingsSummary?].self, forKey: .browserSettings)
        var browserSettingsDecoded0:[WorkSpacesWebClientTypes.BrowserSettingsSummary]? = nil
        if let browserSettingsContainer = browserSettingsContainer {
            browserSettingsDecoded0 = [WorkSpacesWebClientTypes.BrowserSettingsSummary]()
            for structure0 in browserSettingsContainer {
                if let structure0 = structure0 {
                    browserSettingsDecoded0?.append(structure0)
                }
            }
        }
        browserSettings = browserSettingsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
