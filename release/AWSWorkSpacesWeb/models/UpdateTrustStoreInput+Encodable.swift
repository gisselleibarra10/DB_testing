// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateTrustStoreInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificatesToAdd
        case certificatesToDelete
        case clientToken
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificatesToAdd = certificatesToAdd {
            var certificatesToAddContainer = encodeContainer.nestedUnkeyedContainer(forKey: .certificatesToAdd)
            for certificatelist0 in certificatesToAdd {
                try certificatesToAddContainer.encode(certificatelist0.base64EncodedString())
            }
        }
        if let certificatesToDelete = certificatesToDelete {
            var certificatesToDeleteContainer = encodeContainer.nestedUnkeyedContainer(forKey: .certificatesToDelete)
            for certificatethumbprintlist0 in certificatesToDelete {
                try certificatesToDeleteContainer.encode(certificatethumbprintlist0)
            }
        }
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
    }
}
