// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RbinClientTypes.RetentionPeriod: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case retentionPeriodUnit = "RetentionPeriodUnit"
        case retentionPeriodValue = "RetentionPeriodValue"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let retentionPeriodUnit = self.retentionPeriodUnit {
            try encodeContainer.encode(retentionPeriodUnit.rawValue, forKey: .retentionPeriodUnit)
        }
        if let retentionPeriodValue = self.retentionPeriodValue {
            try encodeContainer.encode(retentionPeriodValue, forKey: .retentionPeriodValue)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let retentionPeriodValueDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .retentionPeriodValue)
        retentionPeriodValue = retentionPeriodValueDecoded
        let retentionPeriodUnitDecoded = try containerValues.decodeIfPresent(RbinClientTypes.RetentionPeriodUnit.self, forKey: .retentionPeriodUnit)
        retentionPeriodUnit = retentionPeriodUnitDecoded
    }
}
