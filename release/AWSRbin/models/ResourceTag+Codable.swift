// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RbinClientTypes.ResourceTag: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceTagKey = "ResourceTagKey"
        case resourceTagValue = "ResourceTagValue"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourceTagKey = self.resourceTagKey {
            try encodeContainer.encode(resourceTagKey, forKey: .resourceTagKey)
        }
        if let resourceTagValue = self.resourceTagValue {
            try encodeContainer.encode(resourceTagValue, forKey: .resourceTagValue)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceTagKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceTagKey)
        resourceTagKey = resourceTagKeyDecoded
        let resourceTagValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceTagValue)
        resourceTagValue = resourceTagValueDecoded
    }
}
