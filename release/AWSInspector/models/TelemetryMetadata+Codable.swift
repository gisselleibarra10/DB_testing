// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InspectorClientTypes.TelemetryMetadata: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case count
        case dataSize
        case messageType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let count = self.count {
            try encodeContainer.encode(count, forKey: .count)
        }
        if let dataSize = self.dataSize {
            try encodeContainer.encode(dataSize, forKey: .dataSize)
        }
        if let messageType = self.messageType {
            try encodeContainer.encode(messageType, forKey: .messageType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .messageType)
        messageType = messageTypeDecoded
        let countDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .count)
        count = countDecoded
        let dataSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .dataSize)
        dataSize = dataSizeDecoded
    }
}
