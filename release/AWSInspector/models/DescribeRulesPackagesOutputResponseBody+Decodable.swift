// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRulesPackagesOutputResponseBody: Swift.Equatable {
    let rulesPackages: [InspectorClientTypes.RulesPackage]?
    let failedItems: [Swift.String:InspectorClientTypes.FailedItemDetails]?
}

extension DescribeRulesPackagesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failedItems
        case rulesPackages
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rulesPackagesContainer = try containerValues.decodeIfPresent([InspectorClientTypes.RulesPackage?].self, forKey: .rulesPackages)
        var rulesPackagesDecoded0:[InspectorClientTypes.RulesPackage]? = nil
        if let rulesPackagesContainer = rulesPackagesContainer {
            rulesPackagesDecoded0 = [InspectorClientTypes.RulesPackage]()
            for structure0 in rulesPackagesContainer {
                if let structure0 = structure0 {
                    rulesPackagesDecoded0?.append(structure0)
                }
            }
        }
        rulesPackages = rulesPackagesDecoded0
        let failedItemsContainer = try containerValues.decodeIfPresent([Swift.String: InspectorClientTypes.FailedItemDetails?].self, forKey: .failedItems)
        var failedItemsDecoded0: [Swift.String:InspectorClientTypes.FailedItemDetails]? = nil
        if let failedItemsContainer = failedItemsContainer {
            failedItemsDecoded0 = [Swift.String:InspectorClientTypes.FailedItemDetails]()
            for (key0, faileditemdetails0) in failedItemsContainer {
                if let faileditemdetails0 = faileditemdetails0 {
                    failedItemsDecoded0?[key0] = faileditemdetails0
                }
            }
        }
        failedItems = failedItemsDecoded0
    }
}
