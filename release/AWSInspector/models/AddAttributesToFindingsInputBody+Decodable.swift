// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddAttributesToFindingsInputBody: Swift.Equatable {
    let findingArns: [Swift.String]?
    let attributes: [InspectorClientTypes.Attribute]?
}

extension AddAttributesToFindingsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributes
        case findingArns
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let findingArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .findingArns)
        var findingArnsDecoded0:[Swift.String]? = nil
        if let findingArnsContainer = findingArnsContainer {
            findingArnsDecoded0 = [Swift.String]()
            for string0 in findingArnsContainer {
                if let string0 = string0 {
                    findingArnsDecoded0?.append(string0)
                }
            }
        }
        findingArns = findingArnsDecoded0
        let attributesContainer = try containerValues.decodeIfPresent([InspectorClientTypes.Attribute?].self, forKey: .attributes)
        var attributesDecoded0:[InspectorClientTypes.Attribute]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [InspectorClientTypes.Attribute]()
            for structure0 in attributesContainer {
                if let structure0 = structure0 {
                    attributesDecoded0?.append(structure0)
                }
            }
        }
        attributes = attributesDecoded0
    }
}
