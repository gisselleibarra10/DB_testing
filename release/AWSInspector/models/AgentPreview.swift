// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension InspectorClientTypes {
    /// Used as a response element in the [PreviewAgents] action.
    public struct AgentPreview: Swift.Equatable {
        /// The health status of the Amazon Inspector Agent.
        public var agentHealth: InspectorClientTypes.AgentHealth?
        /// The ID of the EC2 instance where the agent is installed.
        /// This member is required.
        public var agentId: Swift.String?
        /// The version of the Amazon Inspector Agent.
        public var agentVersion: Swift.String?
        /// The Auto Scaling group for the EC2 instance where the agent is installed.
        public var autoScalingGroup: Swift.String?
        /// The hostname of the EC2 instance on which the Amazon Inspector Agent is installed.
        public var hostname: Swift.String?
        /// The IP address of the EC2 instance on which the Amazon Inspector Agent is installed.
        public var ipv4Address: Swift.String?
        /// The kernel version of the operating system running on the EC2 instance on which the Amazon Inspector Agent is installed.
        public var kernelVersion: Swift.String?
        /// The operating system running on the EC2 instance on which the Amazon Inspector Agent is installed.
        public var operatingSystem: Swift.String?

        public init (
            agentHealth: InspectorClientTypes.AgentHealth? = nil,
            agentId: Swift.String? = nil,
            agentVersion: Swift.String? = nil,
            autoScalingGroup: Swift.String? = nil,
            hostname: Swift.String? = nil,
            ipv4Address: Swift.String? = nil,
            kernelVersion: Swift.String? = nil,
            operatingSystem: Swift.String? = nil
        )
        {
            self.agentHealth = agentHealth
            self.agentId = agentId
            self.agentVersion = agentVersion
            self.autoScalingGroup = autoScalingGroup
            self.hostname = hostname
            self.ipv4Address = ipv4Address
            self.kernelVersion = kernelVersion
            self.operatingSystem = operatingSystem
        }
    }

}
