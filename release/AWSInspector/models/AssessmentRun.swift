// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InspectorClientTypes {
    /// A snapshot of an Amazon Inspector assessment run that contains the findings of the assessment run . Used as the response element in the [DescribeAssessmentRuns] action.
    public struct AssessmentRun: Swift.Equatable {
        /// The ARN of the assessment run.
        /// This member is required.
        public var arn: Swift.String?
        /// The ARN of the assessment template that is associated with the assessment run.
        /// This member is required.
        public var assessmentTemplateArn: Swift.String?
        /// The assessment run completion time that corresponds to the rules packages evaluation completion time or failure.
        public var completedAt: ClientRuntime.Date?
        /// The time when [StartAssessmentRun] was called.
        /// This member is required.
        public var createdAt: ClientRuntime.Date?
        /// A Boolean value (true or false) that specifies whether the process of collecting data from the agents is completed.
        /// This member is required.
        public var dataCollected: Swift.Bool?
        /// The duration of the assessment run.
        /// This member is required.
        public var durationInSeconds: Swift.Int
        /// Provides a total count of generated findings per severity.
        /// This member is required.
        public var findingCounts: [Swift.String:Swift.Int]?
        /// The auto-generated name for the assessment run.
        /// This member is required.
        public var name: Swift.String?
        /// A list of notifications for the event subscriptions. A notification about a particular generated finding is added to this list only once.
        /// This member is required.
        public var notifications: [InspectorClientTypes.AssessmentRunNotification]?
        /// The rules packages selected for the assessment run.
        /// This member is required.
        public var rulesPackageArns: [Swift.String]?
        /// The time when [StartAssessmentRun] was called.
        public var startedAt: ClientRuntime.Date?
        /// The state of the assessment run.
        /// This member is required.
        public var state: InspectorClientTypes.AssessmentRunState?
        /// The last time when the assessment run's state changed.
        /// This member is required.
        public var stateChangedAt: ClientRuntime.Date?
        /// A list of the assessment run state changes.
        /// This member is required.
        public var stateChanges: [InspectorClientTypes.AssessmentRunStateChange]?
        /// The user-defined attributes that are assigned to every generated finding.
        /// This member is required.
        public var userAttributesForFindings: [InspectorClientTypes.Attribute]?

        public init (
            arn: Swift.String? = nil,
            assessmentTemplateArn: Swift.String? = nil,
            completedAt: ClientRuntime.Date? = nil,
            createdAt: ClientRuntime.Date? = nil,
            dataCollected: Swift.Bool? = nil,
            durationInSeconds: Swift.Int = 0,
            findingCounts: [Swift.String:Swift.Int]? = nil,
            name: Swift.String? = nil,
            notifications: [InspectorClientTypes.AssessmentRunNotification]? = nil,
            rulesPackageArns: [Swift.String]? = nil,
            startedAt: ClientRuntime.Date? = nil,
            state: InspectorClientTypes.AssessmentRunState? = nil,
            stateChangedAt: ClientRuntime.Date? = nil,
            stateChanges: [InspectorClientTypes.AssessmentRunStateChange]? = nil,
            userAttributesForFindings: [InspectorClientTypes.Attribute]? = nil
        )
        {
            self.arn = arn
            self.assessmentTemplateArn = assessmentTemplateArn
            self.completedAt = completedAt
            self.createdAt = createdAt
            self.dataCollected = dataCollected
            self.durationInSeconds = durationInSeconds
            self.findingCounts = findingCounts
            self.name = name
            self.notifications = notifications
            self.rulesPackageArns = rulesPackageArns
            self.startedAt = startedAt
            self.state = state
            self.stateChangedAt = stateChangedAt
            self.stateChanges = stateChanges
            self.userAttributesForFindings = userAttributesForFindings
        }
    }

}
