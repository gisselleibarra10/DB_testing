// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRulesPackagesInputBody: Swift.Equatable {
    let rulesPackageArns: [Swift.String]?
    let locale: InspectorClientTypes.Locale?
}

extension DescribeRulesPackagesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case locale
        case rulesPackageArns
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rulesPackageArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .rulesPackageArns)
        var rulesPackageArnsDecoded0:[Swift.String]? = nil
        if let rulesPackageArnsContainer = rulesPackageArnsContainer {
            rulesPackageArnsDecoded0 = [Swift.String]()
            for string0 in rulesPackageArnsContainer {
                if let string0 = string0 {
                    rulesPackageArnsDecoded0?.append(string0)
                }
            }
        }
        rulesPackageArns = rulesPackageArnsDecoded0
        let localeDecoded = try containerValues.decodeIfPresent(InspectorClientTypes.Locale.self, forKey: .locale)
        locale = localeDecoded
    }
}
