// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetExclusionsPreviewInputBody: Swift.Equatable {
    let assessmentTemplateArn: Swift.String?
    let previewToken: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let locale: InspectorClientTypes.Locale?
}

extension GetExclusionsPreviewInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assessmentTemplateArn
        case locale
        case maxResults
        case nextToken
        case previewToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assessmentTemplateArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assessmentTemplateArn)
        assessmentTemplateArn = assessmentTemplateArnDecoded
        let previewTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .previewToken)
        previewToken = previewTokenDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let localeDecoded = try containerValues.decodeIfPresent(InspectorClientTypes.Locale.self, forKey: .locale)
        locale = localeDecoded
    }
}
