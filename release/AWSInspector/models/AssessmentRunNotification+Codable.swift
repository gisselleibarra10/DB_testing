// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InspectorClientTypes.AssessmentRunNotification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case date
        case error
        case event
        case message
        case snsPublishStatusCode
        case snsTopicArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let date = self.date {
            try encodeContainer.encode(date.timeIntervalSince1970, forKey: .date)
        }
        if let error = self.error {
            try encodeContainer.encode(error, forKey: .error)
        }
        if let event = self.event {
            try encodeContainer.encode(event.rawValue, forKey: .event)
        }
        if let message = self.message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let snsPublishStatusCode = self.snsPublishStatusCode {
            try encodeContainer.encode(snsPublishStatusCode.rawValue, forKey: .snsPublishStatusCode)
        }
        if let snsTopicArn = self.snsTopicArn {
            try encodeContainer.encode(snsTopicArn, forKey: .snsTopicArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .date)
        date = dateDecoded
        let eventDecoded = try containerValues.decodeIfPresent(InspectorClientTypes.InspectorEvent.self, forKey: .event)
        event = eventDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let errorDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .error)
        error = errorDecoded
        let snsTopicArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snsTopicArn)
        snsTopicArn = snsTopicArnDecoded
        let snsPublishStatusCodeDecoded = try containerValues.decodeIfPresent(InspectorClientTypes.AssessmentRunNotificationSnsStatusCode.self, forKey: .snsPublishStatusCode)
        snsPublishStatusCode = snsPublishStatusCodeDecoded
    }
}
