// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeExclusionsInputBody: Swift.Equatable {
    let exclusionArns: [Swift.String]?
    let locale: InspectorClientTypes.Locale?
}

extension DescribeExclusionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exclusionArns
        case locale
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exclusionArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .exclusionArns)
        var exclusionArnsDecoded0:[Swift.String]? = nil
        if let exclusionArnsContainer = exclusionArnsContainer {
            exclusionArnsDecoded0 = [Swift.String]()
            for string0 in exclusionArnsContainer {
                if let string0 = string0 {
                    exclusionArnsDecoded0?.append(string0)
                }
            }
        }
        exclusionArns = exclusionArnsDecoded0
        let localeDecoded = try containerValues.decodeIfPresent(InspectorClientTypes.Locale.self, forKey: .locale)
        locale = localeDecoded
    }
}
