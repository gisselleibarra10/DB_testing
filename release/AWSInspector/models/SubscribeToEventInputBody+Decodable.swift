// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SubscribeToEventInputBody: Swift.Equatable {
    let resourceArn: Swift.String?
    let event: InspectorClientTypes.InspectorEvent?
    let topicArn: Swift.String?
}

extension SubscribeToEventInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case event
        case resourceArn
        case topicArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let eventDecoded = try containerValues.decodeIfPresent(InspectorClientTypes.InspectorEvent.self, forKey: .event)
        event = eventDecoded
        let topicArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .topicArn)
        topicArn = topicArnDecoded
    }
}
