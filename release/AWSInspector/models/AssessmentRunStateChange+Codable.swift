// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InspectorClientTypes.AssessmentRunStateChange: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case state
        case stateChangedAt
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let state = self.state {
            try encodeContainer.encode(state.rawValue, forKey: .state)
        }
        if let stateChangedAt = self.stateChangedAt {
            try encodeContainer.encode(stateChangedAt.timeIntervalSince1970, forKey: .stateChangedAt)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateChangedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .stateChangedAt)
        stateChangedAt = stateChangedAtDecoded
        let stateDecoded = try containerValues.decodeIfPresent(InspectorClientTypes.AssessmentRunState.self, forKey: .state)
        state = stateDecoded
    }
}
