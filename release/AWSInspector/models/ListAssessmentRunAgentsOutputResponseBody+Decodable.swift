// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssessmentRunAgentsOutputResponseBody: Swift.Equatable {
    let assessmentRunAgents: [InspectorClientTypes.AssessmentRunAgent]?
    let nextToken: Swift.String?
}

extension ListAssessmentRunAgentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assessmentRunAgents
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assessmentRunAgentsContainer = try containerValues.decodeIfPresent([InspectorClientTypes.AssessmentRunAgent?].self, forKey: .assessmentRunAgents)
        var assessmentRunAgentsDecoded0:[InspectorClientTypes.AssessmentRunAgent]? = nil
        if let assessmentRunAgentsContainer = assessmentRunAgentsContainer {
            assessmentRunAgentsDecoded0 = [InspectorClientTypes.AssessmentRunAgent]()
            for structure0 in assessmentRunAgentsContainer {
                if let structure0 = structure0 {
                    assessmentRunAgentsDecoded0?.append(structure0)
                }
            }
        }
        assessmentRunAgents = assessmentRunAgentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
