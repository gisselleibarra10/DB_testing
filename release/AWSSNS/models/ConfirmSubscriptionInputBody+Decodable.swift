// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ConfirmSubscriptionInputBody: Swift.Equatable {
    let topicArn: Swift.String?
    let token: Swift.String?
    let authenticateOnUnsubscribe: Swift.String?
}

extension ConfirmSubscriptionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authenticateOnUnsubscribe = "AuthenticateOnUnsubscribe"
        case token = "Token"
        case topicArn = "TopicArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let topicArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .topicArn)
        topicArn = topicArnDecoded
        let tokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .token)
        token = tokenDecoded
        let authenticateOnUnsubscribeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .authenticateOnUnsubscribe)
        authenticateOnUnsubscribe = authenticateOnUnsubscribeDecoded
    }
}
