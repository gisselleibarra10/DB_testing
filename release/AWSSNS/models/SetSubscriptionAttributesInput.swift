// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Input for SetSubscriptionAttributes action.
public struct SetSubscriptionAttributesInput: Swift.Equatable {
    /// A map of attributes with their corresponding values. The following lists the names, descriptions, and values of the special request parameters that this action uses:
    ///
    /// * DeliveryPolicy – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.
    ///
    /// * FilterPolicy – The simple JSON object that lets your subscriber receive only a subset of messages, rather than receiving every message published to the topic.
    ///
    /// * RawMessageDelivery – When set to true, enables raw message delivery to Amazon SQS or HTTP/S endpoints. This eliminates the need for the endpoints to process JSON formatting, which is otherwise created for Amazon SNS metadata.
    ///
    /// * RedrivePolicy – When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can't be delivered due to client errors (for example, when the subscribed endpoint is unreachable) or server errors (for example, when the service that powers the subscribed endpoint becomes unavailable) are held in the dead-letter queue for further analysis or reprocessing.
    ///
    ///
    /// The following attribute applies only to Amazon Kinesis Data Firehose delivery stream subscriptions:
    ///
    /// * SubscriptionRoleArn – The ARN of the IAM role that has the following:
    ///
    /// * Permission to write to the Kinesis Data Firehose delivery stream
    ///
    /// * Amazon SNS listed as a trusted entity
    ///
    ///
    /// Specifying a valid ARN for this attribute is required for Kinesis Data Firehose delivery stream subscriptions. For more information, see [Fanout to Kinesis Data Firehose delivery streams](https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html) in the Amazon SNS Developer Guide.
    /// This member is required.
    public var attributeName: Swift.String?
    /// The new value for the attribute in JSON format.
    public var attributeValue: Swift.String?
    /// The ARN of the subscription to modify.
    /// This member is required.
    public var subscriptionArn: Swift.String?

    public init (
        attributeName: Swift.String? = nil,
        attributeValue: Swift.String? = nil,
        subscriptionArn: Swift.String? = nil
    )
    {
        self.attributeName = attributeName
        self.attributeValue = attributeValue
        self.subscriptionArn = subscriptionArn
    }
}
