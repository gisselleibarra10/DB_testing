// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct PutObjectInput: Swift.Equatable {
    /// Backup job Id for the in-progress backup.
    /// This member is required.
    public var backupJobId: Swift.String?
    /// Inline chunk data to be uploaded.
    public var inlineChunk: ClientRuntime.ByteStream?
    /// Inline chunk checksum
    public var inlineChunkChecksum: Swift.String?
    /// Inline chunk checksum algorithm
    public var inlineChunkChecksumAlgorithm: Swift.String?
    /// Length of the inline chunk data.
    public var inlineChunkLength: Swift.Int
    /// Store user defined metadata like backup checksum, disk ids, restore metadata etc.
    public var metadataString: Swift.String?
    /// object checksum
    public var objectChecksum: Swift.String?
    /// object checksum algorithm
    public var objectChecksumAlgorithm: BackupStorageClientTypes.SummaryChecksumAlgorithm?
    /// The name of the Object to be uploaded.
    /// This member is required.
    public var objectName: Swift.String?
    /// Throw an exception if Object name is already exist.
    public var throwOnDuplicate: Swift.Bool

    public init (
        backupJobId: Swift.String? = nil,
        inlineChunk: ClientRuntime.ByteStream? = nil,
        inlineChunkChecksum: Swift.String? = nil,
        inlineChunkChecksumAlgorithm: Swift.String? = nil,
        inlineChunkLength: Swift.Int = 0,
        metadataString: Swift.String? = nil,
        objectChecksum: Swift.String? = nil,
        objectChecksumAlgorithm: BackupStorageClientTypes.SummaryChecksumAlgorithm? = nil,
        objectName: Swift.String? = nil,
        throwOnDuplicate: Swift.Bool = false
    )
    {
        self.backupJobId = backupJobId
        self.inlineChunk = inlineChunk
        self.inlineChunkChecksum = inlineChunkChecksum
        self.inlineChunkChecksumAlgorithm = inlineChunkChecksumAlgorithm
        self.inlineChunkLength = inlineChunkLength
        self.metadataString = metadataString
        self.objectChecksum = objectChecksum
        self.objectChecksumAlgorithm = objectChecksumAlgorithm
        self.objectName = objectName
        self.throwOnDuplicate = throwOnDuplicate
    }
}
