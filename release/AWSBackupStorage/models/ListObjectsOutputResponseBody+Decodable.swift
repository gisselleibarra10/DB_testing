// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListObjectsOutputResponseBody: Swift.Equatable {
    let objectList: [BackupStorageClientTypes.BackupObject]?
    let nextToken: Swift.String?
}

extension ListObjectsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case objectList = "ObjectList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let objectListContainer = try containerValues.decodeIfPresent([BackupStorageClientTypes.BackupObject?].self, forKey: .objectList)
        var objectListDecoded0:[BackupStorageClientTypes.BackupObject]? = nil
        if let objectListContainer = objectListContainer {
            objectListDecoded0 = [BackupStorageClientTypes.BackupObject]()
            for structure0 in objectListContainer {
                if let structure0 = structure0 {
                    objectListDecoded0?.append(structure0)
                }
            }
        }
        objectList = objectListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
