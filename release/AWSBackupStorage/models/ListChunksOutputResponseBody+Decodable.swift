// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListChunksOutputResponseBody: Swift.Equatable {
    let chunkList: [BackupStorageClientTypes.Chunk]?
    let nextToken: Swift.String?
}

extension ListChunksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case chunkList = "ChunkList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let chunkListContainer = try containerValues.decodeIfPresent([BackupStorageClientTypes.Chunk?].self, forKey: .chunkList)
        var chunkListDecoded0:[BackupStorageClientTypes.Chunk]? = nil
        if let chunkListContainer = chunkListContainer {
            chunkListDecoded0 = [BackupStorageClientTypes.Chunk]()
            for structure0 in chunkListContainer {
                if let structure0 = structure0 {
                    chunkListDecoded0?.append(structure0)
                }
            }
        }
        chunkList = chunkListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
