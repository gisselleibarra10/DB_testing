// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetChunkOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if let checksumHeaderValue = httpResponse.headers.value(for: "x-amz-checksum") {
            self.checksum = checksumHeaderValue
        } else {
            self.checksum = nil
        }
        if let checksumAlgorithmHeaderValue = httpResponse.headers.value(for: "x-amz-checksum-algorithm") {
            self.checksumAlgorithm = BackupStorageClientTypes.DataChecksumAlgorithm(rawValue: checksumAlgorithmHeaderValue)
        } else {
            self.checksumAlgorithm = nil
        }
        if let lengthHeaderValue = httpResponse.headers.value(for: "x-amz-data-length") {
            self.length = Swift.Int(lengthHeaderValue) ?? 0
        } else {
            self.length = 0
        }
        if case .stream(let reader) = httpResponse.body {
            let data = reader
            self.data = data
        } else {
            self.data = nil
        }
    }
}
