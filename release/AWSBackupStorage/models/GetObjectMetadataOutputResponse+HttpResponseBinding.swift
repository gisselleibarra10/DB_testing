// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetObjectMetadataOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if let metadataBlobChecksumHeaderValue = httpResponse.headers.value(for: "x-amz-checksum") {
            self.metadataBlobChecksum = metadataBlobChecksumHeaderValue
        } else {
            self.metadataBlobChecksum = nil
        }
        if let metadataBlobChecksumAlgorithmHeaderValue = httpResponse.headers.value(for: "x-amz-checksum-algorithm") {
            self.metadataBlobChecksumAlgorithm = BackupStorageClientTypes.DataChecksumAlgorithm(rawValue: metadataBlobChecksumAlgorithmHeaderValue)
        } else {
            self.metadataBlobChecksumAlgorithm = nil
        }
        if let metadataBlobLengthHeaderValue = httpResponse.headers.value(for: "x-amz-data-length") {
            self.metadataBlobLength = Swift.Int(metadataBlobLengthHeaderValue) ?? 0
        } else {
            self.metadataBlobLength = 0
        }
        if let metadataStringHeaderValue = httpResponse.headers.value(for: "x-amz-metadata-string") {
            self.metadataString = metadataStringHeaderValue
        } else {
            self.metadataString = nil
        }
        if case .stream(let reader) = httpResponse.body {
            let data = reader
            self.metadataBlob = data
        } else {
            self.metadataBlob = nil
        }
    }
}
