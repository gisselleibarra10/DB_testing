// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct PutChunkInputBodyMiddleware: ClientRuntime.Middleware {
    public let id: Swift.String = "PutChunkInputBodyMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: ClientRuntime.SerializeStepInput<PutChunkInput>,
                  next: H) async throws -> ClientRuntime.OperationOutput<PutChunkOutputResponse>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context
    {
        if let data = input.operationInput.data {
            let datadata = data
            let databody = ClientRuntime.HttpBody.stream(datadata)
            input.builder.withBody(databody)
        }
        return try await next.handle(context: context, input: input)
    }

    public typealias MInput = ClientRuntime.SerializeStepInput<PutChunkInput>
    public typealias MOutput = ClientRuntime.OperationOutput<PutChunkOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
}
