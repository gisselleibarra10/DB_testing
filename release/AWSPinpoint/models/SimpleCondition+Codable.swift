// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.SimpleCondition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventCondition = "EventCondition"
        case segmentCondition = "SegmentCondition"
        case segmentDimensions = "segmentDimensions"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let eventCondition = self.eventCondition {
            try encodeContainer.encode(eventCondition, forKey: .eventCondition)
        }
        if let segmentCondition = self.segmentCondition {
            try encodeContainer.encode(segmentCondition, forKey: .segmentCondition)
        }
        if let segmentDimensions = self.segmentDimensions {
            try encodeContainer.encode(segmentDimensions, forKey: .segmentDimensions)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventConditionDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.EventCondition.self, forKey: .eventCondition)
        eventCondition = eventConditionDecoded
        let segmentConditionDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.SegmentCondition.self, forKey: .segmentCondition)
        segmentCondition = segmentConditionDecoded
        let segmentDimensionsDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.SegmentDimensions.self, forKey: .segmentDimensions)
        segmentDimensions = segmentDimensionsDecoded
    }
}
