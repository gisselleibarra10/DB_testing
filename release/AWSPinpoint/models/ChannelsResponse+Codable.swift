// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.ChannelsResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channels = "Channels"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let channels = channels {
            var channelsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .channels)
            for (dictKey0, mapofchannelresponse0) in channels {
                try channelsContainer.encode(mapofchannelresponse0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelsContainer = try containerValues.decodeIfPresent([Swift.String: PinpointClientTypes.ChannelResponse?].self, forKey: .channels)
        var channelsDecoded0: [Swift.String:PinpointClientTypes.ChannelResponse]? = nil
        if let channelsContainer = channelsContainer {
            channelsDecoded0 = [Swift.String:PinpointClientTypes.ChannelResponse]()
            for (key0, channelresponse0) in channelsContainer {
                if let channelresponse0 = channelresponse0 {
                    channelsDecoded0?[key0] = channelresponse0
                }
            }
        }
        channels = channelsDecoded0
    }
}
