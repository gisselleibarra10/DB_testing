// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.TemplateVersionsResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case item = "Item"
        case message = "Message"
        case nextToken = "NextToken"
        case requestID = "RequestID"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let item = item {
            var itemContainer = encodeContainer.nestedUnkeyedContainer(forKey: .item)
            for listoftemplateversionresponse0 in item {
                try itemContainer.encode(listoftemplateversionresponse0)
            }
        }
        if let message = self.message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let requestID = self.requestID {
            try encodeContainer.encode(requestID, forKey: .requestID)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemContainer = try containerValues.decodeIfPresent([PinpointClientTypes.TemplateVersionResponse?].self, forKey: .item)
        var itemDecoded0:[PinpointClientTypes.TemplateVersionResponse]? = nil
        if let itemContainer = itemContainer {
            itemDecoded0 = [PinpointClientTypes.TemplateVersionResponse]()
            for structure0 in itemContainer {
                if let structure0 = structure0 {
                    itemDecoded0?.append(structure0)
                }
            }
        }
        item = itemDecoded0
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let requestIDDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .requestID)
        requestID = requestIDDecoded
    }
}
