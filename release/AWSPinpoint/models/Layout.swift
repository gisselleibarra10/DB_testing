// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointClientTypes {
    public enum Layout: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case bottomBanner
        case carousel
        case middleBanner
        case mobileFeed
        case overlays
        case topBanner
        case sdkUnknown(Swift.String)

        public static var allCases: [Layout] {
            return [
                .bottomBanner,
                .carousel,
                .middleBanner,
                .mobileFeed,
                .overlays,
                .topBanner,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .bottomBanner: return "BOTTOM_BANNER"
            case .carousel: return "CAROUSEL"
            case .middleBanner: return "MIDDLE_BANNER"
            case .mobileFeed: return "MOBILE_FEED"
            case .overlays: return "OVERLAYS"
            case .topBanner: return "TOP_BANNER"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = Layout(rawValue: rawValue) ?? Layout.sdkUnknown(rawValue)
        }
    }
}
