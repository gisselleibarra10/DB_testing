// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.ExportJobRequest: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case roleArn = "RoleArn"
        case s3UrlPrefix = "S3UrlPrefix"
        case segmentId = "SegmentId"
        case segmentVersion = "SegmentVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let s3UrlPrefix = self.s3UrlPrefix {
            try encodeContainer.encode(s3UrlPrefix, forKey: .s3UrlPrefix)
        }
        if let segmentId = self.segmentId {
            try encodeContainer.encode(segmentId, forKey: .segmentId)
        }
        if let segmentVersion = self.segmentVersion {
            try encodeContainer.encode(segmentVersion, forKey: .segmentVersion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let s3UrlPrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3UrlPrefix)
        s3UrlPrefix = s3UrlPrefixDecoded
        let segmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .segmentId)
        segmentId = segmentIdDecoded
        let segmentVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .segmentVersion)
        segmentVersion = segmentVersionDecoded
    }
}
