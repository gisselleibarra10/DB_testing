// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.SegmentImportResource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channelCounts = "ChannelCounts"
        case externalId = "ExternalId"
        case format = "Format"
        case roleArn = "RoleArn"
        case s3Url = "S3Url"
        case size = "Size"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let channelCounts = channelCounts {
            var channelCountsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .channelCounts)
            for (dictKey0, mapof__integer0) in channelCounts {
                try channelCountsContainer.encode(mapof__integer0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let externalId = self.externalId {
            try encodeContainer.encode(externalId, forKey: .externalId)
        }
        if let format = self.format {
            try encodeContainer.encode(format.rawValue, forKey: .format)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let s3Url = self.s3Url {
            try encodeContainer.encode(s3Url, forKey: .s3Url)
        }
        if let size = self.size {
            try encodeContainer.encode(size, forKey: .size)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelCountsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.Int?].self, forKey: .channelCounts)
        var channelCountsDecoded0: [Swift.String:Swift.Int]? = nil
        if let channelCountsContainer = channelCountsContainer {
            channelCountsDecoded0 = [Swift.String:Swift.Int]()
            for (key0, __integer0) in channelCountsContainer {
                if let __integer0 = __integer0 {
                    channelCountsDecoded0?[key0] = __integer0
                }
            }
        }
        channelCounts = channelCountsDecoded0
        let externalIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .externalId)
        externalId = externalIdDecoded
        let formatDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.Format.self, forKey: .format)
        format = formatDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let s3UrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3Url)
        s3Url = s3UrlDecoded
        let sizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .size)
        size = sizeDecoded
    }
}
