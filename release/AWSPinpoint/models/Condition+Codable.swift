// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.Condition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conditions = "Conditions"
        case `operator` = "Operator"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let conditions = conditions {
            var conditionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .conditions)
            for listofsimplecondition0 in conditions {
                try conditionsContainer.encode(listofsimplecondition0)
            }
        }
        if let `operator` = self.`operator` {
            try encodeContainer.encode(`operator`.rawValue, forKey: .`operator`)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conditionsContainer = try containerValues.decodeIfPresent([PinpointClientTypes.SimpleCondition?].self, forKey: .conditions)
        var conditionsDecoded0:[PinpointClientTypes.SimpleCondition]? = nil
        if let conditionsContainer = conditionsContainer {
            conditionsDecoded0 = [PinpointClientTypes.SimpleCondition]()
            for structure0 in conditionsContainer {
                if let structure0 = structure0 {
                    conditionsDecoded0?.append(structure0)
                }
            }
        }
        conditions = conditionsDecoded0
        let operatorDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.Operator.self, forKey: .operator)
        `operator` = operatorDecoded
    }
}
