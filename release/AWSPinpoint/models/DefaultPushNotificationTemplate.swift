// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointClientTypes {
    /// Specifies the default settings and content for a message template that can be used in messages that are sent through a push notification channel.
    public struct DefaultPushNotificationTemplate: Swift.Equatable {
        /// The action to occur if a recipient taps a push notification that's based on the message template. Valid values are:
        ///
        /// * OPEN_APP - Your app opens or it becomes the foreground app if it was sent to the background. This is the default action.
        ///
        /// * DEEP_LINK - Your app opens and displays a designated user interface in the app. This setting uses the deep-linking features of the iOS and Android platforms.
        ///
        /// * URL - The default mobile browser on the recipient's device opens and loads the web page at a URL that you specify.
        public var action: PinpointClientTypes.Action?
        /// The message body to use in push notifications that are based on the message template.
        public var body: Swift.String?
        /// The sound to play when a recipient receives a push notification that's based on the message template. You can use the default stream or specify the file name of a sound resource that's bundled in your app. On an Android platform, the sound file must reside in /res/raw/. For an iOS platform, this value is the key for the name of a sound file in your app's main bundle or the Library/Sounds folder in your app's data container. If the sound file can't be found or you specify default for the value, the system plays the default alert sound.
        public var sound: Swift.String?
        /// The title to use in push notifications that are based on the message template. This title appears above the notification message on a recipient's device.
        public var title: Swift.String?
        /// The URL to open in a recipient's default mobile browser, if a recipient taps a push notification that's based on the message template and the value of the Action property is URL.
        public var url: Swift.String?

        public init (
            action: PinpointClientTypes.Action? = nil,
            body: Swift.String? = nil,
            sound: Swift.String? = nil,
            title: Swift.String? = nil,
            url: Swift.String? = nil
        )
        {
            self.action = action
            self.body = body
            self.sound = sound
            self.title = title
            self.url = url
        }
    }

}
