// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.ImportJobsResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case item = "Item"
        case nextToken = "NextToken"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let item = item {
            var itemContainer = encodeContainer.nestedUnkeyedContainer(forKey: .item)
            for listofimportjobresponse0 in item {
                try itemContainer.encode(listofimportjobresponse0)
            }
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemContainer = try containerValues.decodeIfPresent([PinpointClientTypes.ImportJobResponse?].self, forKey: .item)
        var itemDecoded0:[PinpointClientTypes.ImportJobResponse]? = nil
        if let itemContainer = itemContainer {
            itemDecoded0 = [PinpointClientTypes.ImportJobResponse]()
            for structure0 in itemContainer {
                if let structure0 = structure0 {
                    itemDecoded0?.append(structure0)
                }
            }
        }
        item = itemDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
