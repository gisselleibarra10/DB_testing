// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointClientTypes {
    /// Provides information about the delivery status and results of sending a message directly to an endpoint.
    public struct EndpointMessageResult: Swift.Equatable {
        /// The endpoint address that the message was delivered to.
        public var address: Swift.String?
        /// The delivery status of the message. Possible values are:
        ///
        /// * DUPLICATE - The endpoint address is a duplicate of another endpoint address. Amazon Pinpoint won't attempt to send the message again.
        ///
        /// * OPT_OUT - The user who's associated with the endpoint has opted out of receiving messages from you. Amazon Pinpoint won't attempt to send the message again.
        ///
        /// * PERMANENT_FAILURE - An error occurred when delivering the message to the endpoint. Amazon Pinpoint won't attempt to send the message again.
        ///
        /// * SUCCESSFUL - The message was successfully delivered to the endpoint.
        ///
        /// * TEMPORARY_FAILURE - A temporary error occurred. Amazon Pinpoint won't attempt to send the message again.
        ///
        /// * THROTTLED - Amazon Pinpoint throttled the operation to send the message to the endpoint.
        ///
        /// * TIMEOUT - The message couldn't be sent within the timeout period.
        ///
        /// * UNKNOWN_FAILURE - An unknown error occurred.
        /// This member is required.
        public var deliveryStatus: PinpointClientTypes.DeliveryStatus?
        /// The unique identifier for the message that was sent.
        public var messageId: Swift.String?
        /// The downstream service status code for delivering the message.
        /// This member is required.
        public var statusCode: Swift.Int?
        /// The status message for delivering the message.
        public var statusMessage: Swift.String?
        /// For push notifications that are sent through the GCM channel, specifies whether the endpoint's device registration token was updated as part of delivering the message.
        public var updatedToken: Swift.String?

        public init (
            address: Swift.String? = nil,
            deliveryStatus: PinpointClientTypes.DeliveryStatus? = nil,
            messageId: Swift.String? = nil,
            statusCode: Swift.Int? = nil,
            statusMessage: Swift.String? = nil,
            updatedToken: Swift.String? = nil
        )
        {
            self.address = address
            self.deliveryStatus = deliveryStatus
            self.messageId = messageId
            self.statusCode = statusCode
            self.statusMessage = statusMessage
            self.updatedToken = updatedToken
        }
    }

}
