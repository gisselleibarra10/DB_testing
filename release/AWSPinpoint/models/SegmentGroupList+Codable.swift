// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.SegmentGroupList: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groups = "Groups"
        case include = "Include"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let groups = groups {
            var groupsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .groups)
            for listofsegmentgroup0 in groups {
                try groupsContainer.encode(listofsegmentgroup0)
            }
        }
        if let include = self.include {
            try encodeContainer.encode(include.rawValue, forKey: .include)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupsContainer = try containerValues.decodeIfPresent([PinpointClientTypes.SegmentGroup?].self, forKey: .groups)
        var groupsDecoded0:[PinpointClientTypes.SegmentGroup]? = nil
        if let groupsContainer = groupsContainer {
            groupsDecoded0 = [PinpointClientTypes.SegmentGroup]()
            for structure0 in groupsContainer {
                if let structure0 = structure0 {
                    groupsDecoded0?.append(structure0)
                }
            }
        }
        groups = groupsDecoded0
        let includeDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.Include.self, forKey: .include)
        include = includeDecoded
    }
}
