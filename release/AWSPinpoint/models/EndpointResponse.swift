// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointClientTypes {
    /// Provides information about the channel type and other settings for an endpoint.
    public struct EndpointResponse: Swift.Equatable {
        /// The destination address for messages or push notifications that you send to the endpoint. The address varies by channel. For example, the address for a push-notification channel is typically the token provided by a push notification service, such as an Apple Push Notification service (APNs) device token or a Firebase Cloud Messaging (FCM) registration token. The address for the SMS channel is a phone number in E.164 format, such as +12065550100. The address for the email channel is an email address.
        public var address: Swift.String?
        /// The unique identifier for the application that's associated with the endpoint.
        public var applicationId: Swift.String?
        /// One or more custom attributes that describe the endpoint by associating a name with an array of values. For example, the value of a custom attribute named Interests might be: ["Science", "Music", "Travel"]. You can use these attributes as filter criteria when you create segments.
        public var attributes: [Swift.String:[Swift.String]]?
        /// The channel that's used when sending messages or push notifications to the endpoint.
        public var channelType: PinpointClientTypes.ChannelType?
        /// A number from 0-99 that represents the cohort that the endpoint is assigned to. Endpoints are grouped into cohorts randomly, and each cohort contains approximately 1 percent of the endpoints for an application. Amazon Pinpoint assigns cohorts to the holdout or treatment allocations for campaigns.
        public var cohortId: Swift.String?
        /// The date and time, in ISO 8601 format, when the endpoint was created.
        public var creationDate: Swift.String?
        /// The demographic information for the endpoint, such as the time zone and platform.
        public var demographic: PinpointClientTypes.EndpointDemographic?
        /// The date and time, in ISO 8601 format, when the endpoint was last updated.
        public var effectiveDate: Swift.String?
        /// Specifies whether messages or push notifications are sent to the endpoint. Possible values are: ACTIVE, messages are sent to the endpoint; and, INACTIVE, messages arenâ€™t sent to the endpoint. Amazon Pinpoint automatically sets this value to ACTIVE when you create an endpoint or update an existing endpoint. Amazon Pinpoint automatically sets this value to INACTIVE if you update another endpoint that has the same address specified by the Address property.
        public var endpointStatus: Swift.String?
        /// The unique identifier that you assigned to the endpoint. The identifier should be a globally unique identifier (GUID) to ensure that it doesn't conflict with other endpoint identifiers that are associated with the application.
        public var id: Swift.String?
        /// The geographic information for the endpoint.
        public var location: PinpointClientTypes.EndpointLocation?
        /// One or more custom metrics that your app reports to Amazon Pinpoint for the endpoint.
        public var metrics: [Swift.String:Swift.Double]?
        /// Specifies whether the user who's associated with the endpoint has opted out of receiving messages and push notifications from you. Possible values are: ALL, the user has opted out and doesn't want to receive any messages or push notifications; and, NONE, the user hasn't opted out and wants to receive all messages and push notifications.
        public var optOut: Swift.String?
        /// The unique identifier for the most recent request to update the endpoint.
        public var requestId: Swift.String?
        /// One or more custom user attributes that your app reports to Amazon Pinpoint for the user who's associated with the endpoint.
        public var user: PinpointClientTypes.EndpointUser?

        public init (
            address: Swift.String? = nil,
            applicationId: Swift.String? = nil,
            attributes: [Swift.String:[Swift.String]]? = nil,
            channelType: PinpointClientTypes.ChannelType? = nil,
            cohortId: Swift.String? = nil,
            creationDate: Swift.String? = nil,
            demographic: PinpointClientTypes.EndpointDemographic? = nil,
            effectiveDate: Swift.String? = nil,
            endpointStatus: Swift.String? = nil,
            id: Swift.String? = nil,
            location: PinpointClientTypes.EndpointLocation? = nil,
            metrics: [Swift.String:Swift.Double]? = nil,
            optOut: Swift.String? = nil,
            requestId: Swift.String? = nil,
            user: PinpointClientTypes.EndpointUser? = nil
        )
        {
            self.address = address
            self.applicationId = applicationId
            self.attributes = attributes
            self.channelType = channelType
            self.cohortId = cohortId
            self.creationDate = creationDate
            self.demographic = demographic
            self.effectiveDate = effectiveDate
            self.endpointStatus = endpointStatus
            self.id = id
            self.location = location
            self.metrics = metrics
            self.optOut = optOut
            self.requestId = requestId
            self.user = user
        }
    }

}
