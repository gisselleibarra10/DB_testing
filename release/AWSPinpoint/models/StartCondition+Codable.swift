// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.StartCondition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case eventStartCondition = "EventStartCondition"
        case segmentStartCondition = "SegmentStartCondition"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let eventStartCondition = self.eventStartCondition {
            try encodeContainer.encode(eventStartCondition, forKey: .eventStartCondition)
        }
        if let segmentStartCondition = self.segmentStartCondition {
            try encodeContainer.encode(segmentStartCondition, forKey: .segmentStartCondition)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let eventStartConditionDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.EventStartCondition.self, forKey: .eventStartCondition)
        eventStartCondition = eventStartConditionDecoded
        let segmentStartConditionDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.SegmentCondition.self, forKey: .segmentStartCondition)
        segmentStartCondition = segmentStartConditionDecoded
    }
}
