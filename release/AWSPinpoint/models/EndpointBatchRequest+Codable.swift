// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.EndpointBatchRequest: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case item = "Item"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let item = item {
            var itemContainer = encodeContainer.nestedUnkeyedContainer(forKey: .item)
            for listofendpointbatchitem0 in item {
                try itemContainer.encode(listofendpointbatchitem0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemContainer = try containerValues.decodeIfPresent([PinpointClientTypes.EndpointBatchItem?].self, forKey: .item)
        var itemDecoded0:[PinpointClientTypes.EndpointBatchItem]? = nil
        if let itemContainer = itemContainer {
            itemDecoded0 = [PinpointClientTypes.EndpointBatchItem]()
            for structure0 in itemContainer {
                if let structure0 = structure0 {
                    itemDecoded0?.append(structure0)
                }
            }
        }
        item = itemDecoded0
    }
}
