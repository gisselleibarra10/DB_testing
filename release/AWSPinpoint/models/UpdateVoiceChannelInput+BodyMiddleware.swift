// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct UpdateVoiceChannelInputBodyMiddleware: ClientRuntime.Middleware {
    public let id: Swift.String = "UpdateVoiceChannelInputBodyMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: ClientRuntime.SerializeStepInput<UpdateVoiceChannelInput>,
                  next: H) async throws -> ClientRuntime.OperationOutput<UpdateVoiceChannelOutputResponse>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context
    {
        do {
            let encoder = context.getEncoder()
            if let voiceChannelRequest = input.operationInput.voiceChannelRequest {
                let voiceChannelRequestdata = try encoder.encode(voiceChannelRequest)
                let voiceChannelRequestbody = ClientRuntime.HttpBody.data(voiceChannelRequestdata)
                input.builder.withBody(voiceChannelRequestbody)
            } else {
                let voiceChannelRequestdata = try encoder.encode(input.operationInput)
                let voiceChannelRequestbody = ClientRuntime.HttpBody.data(voiceChannelRequestdata)
                input.builder.withBody(voiceChannelRequestbody)
            }
        } catch let err {
            throw SdkError<UpdateVoiceChannelOutputError>.client(ClientRuntime.ClientError.serializationFailed(err.localizedDescription))
        }
        return try await next.handle(context: context, input: input)
    }

    public typealias MInput = ClientRuntime.SerializeStepInput<UpdateVoiceChannelInput>
    public typealias MOutput = ClientRuntime.OperationOutput<UpdateVoiceChannelOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
}
