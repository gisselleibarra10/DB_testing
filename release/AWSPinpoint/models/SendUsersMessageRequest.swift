// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointClientTypes {
    /// Specifies the configuration and other settings for a message to send to all the endpoints that are associated with a list of users.
    public struct SendUsersMessageRequest: Swift.Equatable {
        /// A map of custom attribute-value pairs. For a push notification, Amazon Pinpoint adds these attributes to the data.pinpoint object in the body of the notification payload. Amazon Pinpoint also provides these attributes in the events that it generates for users-messages deliveries.
        public var context: [Swift.String:Swift.String]?
        /// The settings and content for the default message and any default messages that you defined for specific channels.
        /// This member is required.
        public var messageConfiguration: PinpointClientTypes.DirectMessageConfiguration?
        /// The message template to use for the message.
        public var templateConfiguration: PinpointClientTypes.TemplateConfiguration?
        /// The unique identifier for tracing the message. This identifier is visible to message recipients.
        public var traceId: Swift.String?
        /// A map that associates user IDs with [EndpointSendConfiguration](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration) objects. You can use an [EndpointSendConfiguration](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration) object to tailor the message for a user by specifying settings such as content overrides and message variables.
        /// This member is required.
        public var users: [Swift.String:PinpointClientTypes.EndpointSendConfiguration]?

        public init (
            context: [Swift.String:Swift.String]? = nil,
            messageConfiguration: PinpointClientTypes.DirectMessageConfiguration? = nil,
            templateConfiguration: PinpointClientTypes.TemplateConfiguration? = nil,
            traceId: Swift.String? = nil,
            users: [Swift.String:PinpointClientTypes.EndpointSendConfiguration]? = nil
        )
        {
            self.context = context
            self.messageConfiguration = messageConfiguration
            self.templateConfiguration = templateConfiguration
            self.traceId = traceId
            self.users = users
        }
    }

}
