// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointClientTypes {
    public enum AttributeType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case after
        case before
        case between
        case contains
        case exclusive
        case inclusive
        case on
        case sdkUnknown(Swift.String)

        public static var allCases: [AttributeType] {
            return [
                .after,
                .before,
                .between,
                .contains,
                .exclusive,
                .inclusive,
                .on,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .after: return "AFTER"
            case .before: return "BEFORE"
            case .between: return "BETWEEN"
            case .contains: return "CONTAINS"
            case .exclusive: return "EXCLUSIVE"
            case .inclusive: return "INCLUSIVE"
            case .on: return "ON"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = AttributeType(rawValue: rawValue) ?? AttributeType.sdkUnknown(rawValue)
        }
    }
}
