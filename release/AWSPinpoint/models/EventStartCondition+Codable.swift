// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.EventStartCondition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventFilter = "EventFilter"
        case segmentId = "SegmentId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let eventFilter = self.eventFilter {
            try encodeContainer.encode(eventFilter, forKey: .eventFilter)
        }
        if let segmentId = self.segmentId {
            try encodeContainer.encode(segmentId, forKey: .segmentId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventFilterDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.EventFilter.self, forKey: .eventFilter)
        eventFilter = eventFilterDecoded
        let segmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .segmentId)
        segmentId = segmentIdDecoded
    }
}
