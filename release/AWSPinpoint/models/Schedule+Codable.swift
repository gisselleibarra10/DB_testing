// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.Schedule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case endTime = "EndTime"
        case eventFilter = "EventFilter"
        case frequency = "Frequency"
        case isLocalTime = "IsLocalTime"
        case quietTime = "QuietTime"
        case startTime = "StartTime"
        case timezone = "Timezone"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let endTime = self.endTime {
            try encodeContainer.encode(endTime, forKey: .endTime)
        }
        if let eventFilter = self.eventFilter {
            try encodeContainer.encode(eventFilter, forKey: .eventFilter)
        }
        if let frequency = self.frequency {
            try encodeContainer.encode(frequency.rawValue, forKey: .frequency)
        }
        if let isLocalTime = self.isLocalTime {
            try encodeContainer.encode(isLocalTime, forKey: .isLocalTime)
        }
        if let quietTime = self.quietTime {
            try encodeContainer.encode(quietTime, forKey: .quietTime)
        }
        if let startTime = self.startTime {
            try encodeContainer.encode(startTime, forKey: .startTime)
        }
        if let timezone = self.timezone {
            try encodeContainer.encode(timezone, forKey: .timezone)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endTime)
        endTime = endTimeDecoded
        let eventFilterDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.CampaignEventFilter.self, forKey: .eventFilter)
        eventFilter = eventFilterDecoded
        let frequencyDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.Frequency.self, forKey: .frequency)
        frequency = frequencyDecoded
        let isLocalTimeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isLocalTime)
        isLocalTime = isLocalTimeDecoded
        let quietTimeDecoded = try containerValues.decodeIfPresent(PinpointClientTypes.QuietTime.self, forKey: .quietTime)
        quietTime = quietTimeDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .startTime)
        startTime = startTimeDecoded
        let timezoneDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .timezone)
        timezone = timezoneDecoded
    }
}
