// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointClientTypes {
    /// Specifies the default settings for a one-time SMS message that's sent directly to an endpoint.
    public struct SMSMessage: Swift.Equatable {
        /// The body of the SMS message.
        public var body: Swift.String?
        /// The entity ID or Principal Entity (PE) id received from the regulatory body for sending SMS in your country.
        public var entityId: Swift.String?
        /// The SMS program name that you provided to AWS Support when you requested your dedicated number.
        public var keyword: Swift.String?
        /// This field is reserved for future use.
        public var mediaUrl: Swift.String?
        /// The SMS message type. Valid values are TRANSACTIONAL (for messages that are critical or time-sensitive, such as a one-time passwords) and PROMOTIONAL (for messsages that aren't critical or time-sensitive, such as marketing messages).
        public var messageType: PinpointClientTypes.MessageType?
        /// The number to send the SMS message from. This value should be one of the dedicated long or short codes that's assigned to your AWS account. If you don't specify a long or short code, Amazon Pinpoint assigns a random long code to the SMS message and sends the message from that code.
        public var originationNumber: Swift.String?
        /// The sender ID to display as the sender of the message on a recipient's device. Support for sender IDs varies by country or region.
        public var senderId: Swift.String?
        /// The message variables to use in the SMS message. You can override the default variables with individual address variables.
        public var substitutions: [Swift.String:[Swift.String]]?
        /// The template ID received from the regulatory body for sending SMS in your country.
        public var templateId: Swift.String?

        public init (
            body: Swift.String? = nil,
            entityId: Swift.String? = nil,
            keyword: Swift.String? = nil,
            mediaUrl: Swift.String? = nil,
            messageType: PinpointClientTypes.MessageType? = nil,
            originationNumber: Swift.String? = nil,
            senderId: Swift.String? = nil,
            substitutions: [Swift.String:[Swift.String]]? = nil,
            templateId: Swift.String? = nil
        )
        {
            self.body = body
            self.entityId = entityId
            self.keyword = keyword
            self.mediaUrl = mediaUrl
            self.messageType = messageType
            self.originationNumber = originationNumber
            self.senderId = senderId
            self.substitutions = substitutions
            self.templateId = templateId
        }
    }

}
