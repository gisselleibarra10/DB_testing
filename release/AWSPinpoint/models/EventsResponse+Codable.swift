// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.EventsResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case results = "Results"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let results = results {
            var resultsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .results)
            for (dictKey0, mapofitemresponse0) in results {
                try resultsContainer.encode(mapofitemresponse0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultsContainer = try containerValues.decodeIfPresent([Swift.String: PinpointClientTypes.ItemResponse?].self, forKey: .results)
        var resultsDecoded0: [Swift.String:PinpointClientTypes.ItemResponse]? = nil
        if let resultsContainer = resultsContainer {
            resultsDecoded0 = [Swift.String:PinpointClientTypes.ItemResponse]()
            for (key0, itemresponse0) in resultsContainer {
                if let itemresponse0 = itemresponse0 {
                    resultsDecoded0?[key0] = itemresponse0
                }
            }
        }
        results = resultsDecoded0
    }
}
