// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.ClosedDays: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cUSTOM = "CUSTOM"
        case eMAIL = "EMAIL"
        case pUSH = "PUSH"
        case sMS = "SMS"
        case vOICE = "VOICE"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cUSTOM = cUSTOM {
            var cUSTOMContainer = encodeContainer.nestedUnkeyedContainer(forKey: .cUSTOM)
            for listofcloseddaysrules0 in cUSTOM {
                try cUSTOMContainer.encode(listofcloseddaysrules0)
            }
        }
        if let eMAIL = eMAIL {
            var eMAILContainer = encodeContainer.nestedUnkeyedContainer(forKey: .eMAIL)
            for listofcloseddaysrules0 in eMAIL {
                try eMAILContainer.encode(listofcloseddaysrules0)
            }
        }
        if let pUSH = pUSH {
            var pUSHContainer = encodeContainer.nestedUnkeyedContainer(forKey: .pUSH)
            for listofcloseddaysrules0 in pUSH {
                try pUSHContainer.encode(listofcloseddaysrules0)
            }
        }
        if let sMS = sMS {
            var sMSContainer = encodeContainer.nestedUnkeyedContainer(forKey: .sMS)
            for listofcloseddaysrules0 in sMS {
                try sMSContainer.encode(listofcloseddaysrules0)
            }
        }
        if let vOICE = vOICE {
            var vOICEContainer = encodeContainer.nestedUnkeyedContainer(forKey: .vOICE)
            for listofcloseddaysrules0 in vOICE {
                try vOICEContainer.encode(listofcloseddaysrules0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eMAILContainer = try containerValues.decodeIfPresent([PinpointClientTypes.ClosedDaysRule?].self, forKey: .eMAIL)
        var eMAILDecoded0:[PinpointClientTypes.ClosedDaysRule]? = nil
        if let eMAILContainer = eMAILContainer {
            eMAILDecoded0 = [PinpointClientTypes.ClosedDaysRule]()
            for structure0 in eMAILContainer {
                if let structure0 = structure0 {
                    eMAILDecoded0?.append(structure0)
                }
            }
        }
        eMAIL = eMAILDecoded0
        let sMSContainer = try containerValues.decodeIfPresent([PinpointClientTypes.ClosedDaysRule?].self, forKey: .sMS)
        var sMSDecoded0:[PinpointClientTypes.ClosedDaysRule]? = nil
        if let sMSContainer = sMSContainer {
            sMSDecoded0 = [PinpointClientTypes.ClosedDaysRule]()
            for structure0 in sMSContainer {
                if let structure0 = structure0 {
                    sMSDecoded0?.append(structure0)
                }
            }
        }
        sMS = sMSDecoded0
        let pUSHContainer = try containerValues.decodeIfPresent([PinpointClientTypes.ClosedDaysRule?].self, forKey: .pUSH)
        var pUSHDecoded0:[PinpointClientTypes.ClosedDaysRule]? = nil
        if let pUSHContainer = pUSHContainer {
            pUSHDecoded0 = [PinpointClientTypes.ClosedDaysRule]()
            for structure0 in pUSHContainer {
                if let structure0 = structure0 {
                    pUSHDecoded0?.append(structure0)
                }
            }
        }
        pUSH = pUSHDecoded0
        let vOICEContainer = try containerValues.decodeIfPresent([PinpointClientTypes.ClosedDaysRule?].self, forKey: .vOICE)
        var vOICEDecoded0:[PinpointClientTypes.ClosedDaysRule]? = nil
        if let vOICEContainer = vOICEContainer {
            vOICEDecoded0 = [PinpointClientTypes.ClosedDaysRule]()
            for structure0 in vOICEContainer {
                if let structure0 = structure0 {
                    vOICEDecoded0?.append(structure0)
                }
            }
        }
        vOICE = vOICEDecoded0
        let cUSTOMContainer = try containerValues.decodeIfPresent([PinpointClientTypes.ClosedDaysRule?].self, forKey: .cUSTOM)
        var cUSTOMDecoded0:[PinpointClientTypes.ClosedDaysRule]? = nil
        if let cUSTOMContainer = cUSTOMContainer {
            cUSTOMDecoded0 = [PinpointClientTypes.ClosedDaysRule]()
            for structure0 in cUSTOMContainer {
                if let structure0 = structure0 {
                    cUSTOMDecoded0?.append(structure0)
                }
            }
        }
        cUSTOM = cUSTOMDecoded0
    }
}
