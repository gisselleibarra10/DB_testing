// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.CustomDeliveryConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deliveryUri = "DeliveryUri"
        case endpointTypes = "EndpointTypes"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deliveryUri = self.deliveryUri {
            try encodeContainer.encode(deliveryUri, forKey: .deliveryUri)
        }
        if let endpointTypes = endpointTypes {
            var endpointTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .endpointTypes)
            for listof__endpointtypeselement0 in endpointTypes {
                try endpointTypesContainer.encode(listof__endpointtypeselement0.rawValue)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliveryUriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deliveryUri)
        deliveryUri = deliveryUriDecoded
        let endpointTypesContainer = try containerValues.decodeIfPresent([PinpointClientTypes.__EndpointTypesElement?].self, forKey: .endpointTypes)
        var endpointTypesDecoded0:[PinpointClientTypes.__EndpointTypesElement]? = nil
        if let endpointTypesContainer = endpointTypesContainer {
            endpointTypesDecoded0 = [PinpointClientTypes.__EndpointTypesElement]()
            for string0 in endpointTypesContainer {
                if let string0 = string0 {
                    endpointTypesDecoded0?.append(string0)
                }
            }
        }
        endpointTypes = endpointTypesDecoded0
    }
}
