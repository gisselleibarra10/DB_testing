// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.OpenHours: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cUSTOM = "CUSTOM"
        case eMAIL = "EMAIL"
        case pUSH = "PUSH"
        case sMS = "SMS"
        case vOICE = "VOICE"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cUSTOM = cUSTOM {
            var cUSTOMContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .cUSTOM)
            for (dictKey0, mapoflistofopenhoursrules0) in cUSTOM {
                try cUSTOMContainer.encode(mapoflistofopenhoursrules0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let eMAIL = eMAIL {
            var eMAILContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .eMAIL)
            for (dictKey0, mapoflistofopenhoursrules0) in eMAIL {
                try eMAILContainer.encode(mapoflistofopenhoursrules0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let pUSH = pUSH {
            var pUSHContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .pUSH)
            for (dictKey0, mapoflistofopenhoursrules0) in pUSH {
                try pUSHContainer.encode(mapoflistofopenhoursrules0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let sMS = sMS {
            var sMSContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .sMS)
            for (dictKey0, mapoflistofopenhoursrules0) in sMS {
                try sMSContainer.encode(mapoflistofopenhoursrules0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let vOICE = vOICE {
            var vOICEContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .vOICE)
            for (dictKey0, mapoflistofopenhoursrules0) in vOICE {
                try vOICEContainer.encode(mapoflistofopenhoursrules0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eMAILContainer = try containerValues.decodeIfPresent([Swift.String: [PinpointClientTypes.OpenHoursRule?]?].self, forKey: .eMAIL)
        var eMAILDecoded0: [Swift.String:[PinpointClientTypes.OpenHoursRule]]? = nil
        if let eMAILContainer = eMAILContainer {
            eMAILDecoded0 = [Swift.String:[PinpointClientTypes.OpenHoursRule]]()
            for (key0, listofopenhoursrules0) in eMAILContainer {
                var listofopenhoursrules0Decoded0: [PinpointClientTypes.OpenHoursRule]? = nil
                if let listofopenhoursrules0 = listofopenhoursrules0 {
                    listofopenhoursrules0Decoded0 = [PinpointClientTypes.OpenHoursRule]()
                    for structure1 in listofopenhoursrules0 {
                        if let structure1 = structure1 {
                            listofopenhoursrules0Decoded0?.append(structure1)
                        }
                    }
                }
                eMAILDecoded0?[key0] = listofopenhoursrules0Decoded0
            }
        }
        eMAIL = eMAILDecoded0
        let sMSContainer = try containerValues.decodeIfPresent([Swift.String: [PinpointClientTypes.OpenHoursRule?]?].self, forKey: .sMS)
        var sMSDecoded0: [Swift.String:[PinpointClientTypes.OpenHoursRule]]? = nil
        if let sMSContainer = sMSContainer {
            sMSDecoded0 = [Swift.String:[PinpointClientTypes.OpenHoursRule]]()
            for (key0, listofopenhoursrules0) in sMSContainer {
                var listofopenhoursrules0Decoded0: [PinpointClientTypes.OpenHoursRule]? = nil
                if let listofopenhoursrules0 = listofopenhoursrules0 {
                    listofopenhoursrules0Decoded0 = [PinpointClientTypes.OpenHoursRule]()
                    for structure1 in listofopenhoursrules0 {
                        if let structure1 = structure1 {
                            listofopenhoursrules0Decoded0?.append(structure1)
                        }
                    }
                }
                sMSDecoded0?[key0] = listofopenhoursrules0Decoded0
            }
        }
        sMS = sMSDecoded0
        let pUSHContainer = try containerValues.decodeIfPresent([Swift.String: [PinpointClientTypes.OpenHoursRule?]?].self, forKey: .pUSH)
        var pUSHDecoded0: [Swift.String:[PinpointClientTypes.OpenHoursRule]]? = nil
        if let pUSHContainer = pUSHContainer {
            pUSHDecoded0 = [Swift.String:[PinpointClientTypes.OpenHoursRule]]()
            for (key0, listofopenhoursrules0) in pUSHContainer {
                var listofopenhoursrules0Decoded0: [PinpointClientTypes.OpenHoursRule]? = nil
                if let listofopenhoursrules0 = listofopenhoursrules0 {
                    listofopenhoursrules0Decoded0 = [PinpointClientTypes.OpenHoursRule]()
                    for structure1 in listofopenhoursrules0 {
                        if let structure1 = structure1 {
                            listofopenhoursrules0Decoded0?.append(structure1)
                        }
                    }
                }
                pUSHDecoded0?[key0] = listofopenhoursrules0Decoded0
            }
        }
        pUSH = pUSHDecoded0
        let vOICEContainer = try containerValues.decodeIfPresent([Swift.String: [PinpointClientTypes.OpenHoursRule?]?].self, forKey: .vOICE)
        var vOICEDecoded0: [Swift.String:[PinpointClientTypes.OpenHoursRule]]? = nil
        if let vOICEContainer = vOICEContainer {
            vOICEDecoded0 = [Swift.String:[PinpointClientTypes.OpenHoursRule]]()
            for (key0, listofopenhoursrules0) in vOICEContainer {
                var listofopenhoursrules0Decoded0: [PinpointClientTypes.OpenHoursRule]? = nil
                if let listofopenhoursrules0 = listofopenhoursrules0 {
                    listofopenhoursrules0Decoded0 = [PinpointClientTypes.OpenHoursRule]()
                    for structure1 in listofopenhoursrules0 {
                        if let structure1 = structure1 {
                            listofopenhoursrules0Decoded0?.append(structure1)
                        }
                    }
                }
                vOICEDecoded0?[key0] = listofopenhoursrules0Decoded0
            }
        }
        vOICE = vOICEDecoded0
        let cUSTOMContainer = try containerValues.decodeIfPresent([Swift.String: [PinpointClientTypes.OpenHoursRule?]?].self, forKey: .cUSTOM)
        var cUSTOMDecoded0: [Swift.String:[PinpointClientTypes.OpenHoursRule]]? = nil
        if let cUSTOMContainer = cUSTOMContainer {
            cUSTOMDecoded0 = [Swift.String:[PinpointClientTypes.OpenHoursRule]]()
            for (key0, listofopenhoursrules0) in cUSTOMContainer {
                var listofopenhoursrules0Decoded0: [PinpointClientTypes.OpenHoursRule]? = nil
                if let listofopenhoursrules0 = listofopenhoursrules0 {
                    listofopenhoursrules0Decoded0 = [PinpointClientTypes.OpenHoursRule]()
                    for structure1 in listofopenhoursrules0 {
                        if let structure1 = structure1 {
                            listofopenhoursrules0Decoded0?.append(structure1)
                        }
                    }
                }
                cUSTOMDecoded0?[key0] = listofopenhoursrules0Decoded0
            }
        }
        cUSTOM = cUSTOMDecoded0
    }
}
