// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointClientTypes {
    /// Send OTP message request parameters.
    public struct SendOTPMessageRequestParameters: Swift.Equatable {
        /// The attempts allowed to validate an OTP.
        public var allowedAttempts: Swift.Int?
        /// The brand name that will be substituted into the OTP message body. Should be owned by calling AWS account.
        /// This member is required.
        public var brandName: Swift.String?
        /// Channel type for the OTP message. Supported values: [SMS].
        /// This member is required.
        public var channel: Swift.String?
        /// The number of characters in the generated OTP.
        public var codeLength: Swift.Int?
        /// The destination identity to send OTP to.
        /// This member is required.
        public var destinationIdentity: Swift.String?
        /// A unique Entity ID received from DLT after entity registration is approved.
        public var entityId: Swift.String?
        /// The language to be used for the outgoing message body containing the OTP.
        public var language: Swift.String?
        /// The origination identity used to send OTP from.
        /// This member is required.
        public var originationIdentity: Swift.String?
        /// Developer-specified reference identifier. Required to match during OTP verification.
        /// This member is required.
        public var referenceId: Swift.String?
        /// A unique Template ID received from DLT after entity registration is approved.
        public var templateId: Swift.String?
        /// The time in minutes before the OTP is no longer valid.
        public var validityPeriod: Swift.Int?

        public init (
            allowedAttempts: Swift.Int? = nil,
            brandName: Swift.String? = nil,
            channel: Swift.String? = nil,
            codeLength: Swift.Int? = nil,
            destinationIdentity: Swift.String? = nil,
            entityId: Swift.String? = nil,
            language: Swift.String? = nil,
            originationIdentity: Swift.String? = nil,
            referenceId: Swift.String? = nil,
            templateId: Swift.String? = nil,
            validityPeriod: Swift.Int? = nil
        )
        {
            self.allowedAttempts = allowedAttempts
            self.brandName = brandName
            self.channel = channel
            self.codeLength = codeLength
            self.destinationIdentity = destinationIdentity
            self.entityId = entityId
            self.language = language
            self.originationIdentity = originationIdentity
            self.referenceId = referenceId
            self.templateId = templateId
            self.validityPeriod = validityPeriod
        }
    }

}
