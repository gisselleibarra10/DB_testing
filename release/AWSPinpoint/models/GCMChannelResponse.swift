// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointClientTypes {
    /// Provides information about the status and settings of the GCM channel for an application. The GCM channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
    public struct GCMChannelResponse: Swift.Equatable {
        /// The unique identifier for the application that the GCM channel applies to.
        public var applicationId: Swift.String?
        /// The date and time when the GCM channel was enabled.
        public var creationDate: Swift.String?
        /// The Web API Key, also referred to as an API_KEY or server key, that you received from Google to communicate with Google services.
        /// This member is required.
        public var credential: Swift.String?
        /// Specifies whether the GCM channel is enabled for the application.
        public var enabled: Swift.Bool?
        /// (Not used) This property is retained only for backward compatibility.
        public var hasCredential: Swift.Bool?
        /// (Deprecated) An identifier for the GCM channel. This property is retained only for backward compatibility.
        public var id: Swift.String?
        /// Specifies whether the GCM channel is archived.
        public var isArchived: Swift.Bool?
        /// The user who last modified the GCM channel.
        public var lastModifiedBy: Swift.String?
        /// The date and time when the GCM channel was last modified.
        public var lastModifiedDate: Swift.String?
        /// The type of messaging or notification platform for the channel. For the GCM channel, this value is GCM.
        /// This member is required.
        public var platform: Swift.String?
        /// The current version of the GCM channel.
        public var version: Swift.Int?

        public init (
            applicationId: Swift.String? = nil,
            creationDate: Swift.String? = nil,
            credential: Swift.String? = nil,
            enabled: Swift.Bool? = nil,
            hasCredential: Swift.Bool? = nil,
            id: Swift.String? = nil,
            isArchived: Swift.Bool? = nil,
            lastModifiedBy: Swift.String? = nil,
            lastModifiedDate: Swift.String? = nil,
            platform: Swift.String? = nil,
            version: Swift.Int? = nil
        )
        {
            self.applicationId = applicationId
            self.creationDate = creationDate
            self.credential = credential
            self.enabled = enabled
            self.hasCredential = hasCredential
            self.id = id
            self.isArchived = isArchived
            self.lastModifiedBy = lastModifiedBy
            self.lastModifiedDate = lastModifiedDate
            self.platform = platform
            self.version = version
        }
    }

}
