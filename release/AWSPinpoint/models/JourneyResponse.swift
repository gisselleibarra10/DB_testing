// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointClientTypes {
    /// Provides information about the status, configuration, and other settings for a journey.
    public struct JourneyResponse: Swift.Equatable {
        /// A map that contains a set of Activity objects, one object for each activity in the journey. For each Activity object, the key is the unique identifier (string) for an activity and the value is the settings for the activity.
        public var activities: [Swift.String:PinpointClientTypes.Activity]?
        /// The unique identifier for the application that the journey applies to.
        /// This member is required.
        public var applicationId: Swift.String?
        /// The time when journey will stop sending messages. QuietTime should be configured first and SendingSchedule should be set to true.
        public var closedDays: PinpointClientTypes.ClosedDays?
        /// The date, in ISO 8601 format, when the journey was created.
        public var creationDate: Swift.String?
        /// The unique identifier for the journey.
        /// This member is required.
        public var id: Swift.String?
        /// The channel-specific configurations for the journey.
        public var journeyChannelSettings: PinpointClientTypes.JourneyChannelSettings?
        /// The date, in ISO 8601 format, when the journey was last modified.
        public var lastModifiedDate: Swift.String?
        /// The messaging and entry limits for the journey.
        public var limits: PinpointClientTypes.JourneyLimits?
        /// Specifies whether the journey's scheduled start and end times use each participant's local time. If this value is true, the schedule uses each participant's local time.
        public var localTime: Swift.Bool?
        /// The name of the journey.
        /// This member is required.
        public var name: Swift.String?
        /// The time when journey allow to send messages. QuietTime should be configured first and SendingSchedule should be set to true.
        public var openHours: PinpointClientTypes.OpenHours?
        /// The quiet time settings for the journey. Quiet time is a specific time range when a journey doesn't send messages to participants, if all the following conditions are met:
        ///
        /// * The EndpointDemographic.Timezone property of the endpoint for the participant is set to a valid value.
        ///
        /// * The current time in the participant's time zone is later than or equal to the time specified by the QuietTime.Start property for the journey.
        ///
        /// * The current time in the participant's time zone is earlier than or equal to the time specified by the QuietTime.End property for the journey.
        ///
        ///
        /// If any of the preceding conditions isn't met, the participant will receive messages from the journey, even if quiet time is enabled.
        public var quietTime: PinpointClientTypes.QuietTime?
        /// The frequency with which Amazon Pinpoint evaluates segment and event data for the journey, as a duration in ISO 8601 format.
        public var refreshFrequency: Swift.String?
        /// Specifies whether a journey should be refreshed on segment update.
        public var refreshOnSegmentUpdate: Swift.Bool?
        /// The schedule settings for the journey.
        public var schedule: PinpointClientTypes.JourneySchedule?
        /// Indicates if journey have Advance Quiet Time (OpenHours and ClosedDays). This flag should be set to true in order to allow (OpenHours and ClosedDays)
        public var sendingSchedule: Swift.Bool?
        /// The unique identifier for the first activity in the journey.
        public var startActivity: Swift.String?
        /// The segment that defines which users are participants in the journey.
        public var startCondition: PinpointClientTypes.StartCondition?
        /// The current status of the journey. Possible values are:
        ///
        /// * DRAFT - The journey is being developed and hasn't been published yet.
        ///
        /// * ACTIVE - The journey has been developed and published. Depending on the journey's schedule, the journey may currently be running or scheduled to start running at a later time. If a journey's status is ACTIVE, you can't add, change, or remove activities from it.
        ///
        /// * COMPLETED - The journey has been published and has finished running. All participants have entered the journey and no participants are waiting to complete the journey or any activities in the journey.
        ///
        /// * CANCELLED - The journey has been stopped. If a journey's status is CANCELLED, you can't add, change, or remove activities or segment settings from the journey.
        ///
        /// * CLOSED - The journey has been published and has started running. It may have also passed its scheduled end time, or passed its scheduled start time and a refresh frequency hasn't been specified for it. If a journey's status is CLOSED, you can't add participants to it, and no existing participants can enter the journey for the first time. However, any existing participants who are currently waiting to start an activity may continue the journey.
        public var state: PinpointClientTypes.State?
        /// This object is not used or supported.
        public var tags: [Swift.String:Swift.String]?
        /// Specifies whether endpoints in quiet hours should enter a wait till the end of their quiet hours.
        public var waitForQuietTime: Swift.Bool?

        public init (
            activities: [Swift.String:PinpointClientTypes.Activity]? = nil,
            applicationId: Swift.String? = nil,
            closedDays: PinpointClientTypes.ClosedDays? = nil,
            creationDate: Swift.String? = nil,
            id: Swift.String? = nil,
            journeyChannelSettings: PinpointClientTypes.JourneyChannelSettings? = nil,
            lastModifiedDate: Swift.String? = nil,
            limits: PinpointClientTypes.JourneyLimits? = nil,
            localTime: Swift.Bool? = nil,
            name: Swift.String? = nil,
            openHours: PinpointClientTypes.OpenHours? = nil,
            quietTime: PinpointClientTypes.QuietTime? = nil,
            refreshFrequency: Swift.String? = nil,
            refreshOnSegmentUpdate: Swift.Bool? = nil,
            schedule: PinpointClientTypes.JourneySchedule? = nil,
            sendingSchedule: Swift.Bool? = nil,
            startActivity: Swift.String? = nil,
            startCondition: PinpointClientTypes.StartCondition? = nil,
            state: PinpointClientTypes.State? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            waitForQuietTime: Swift.Bool? = nil
        )
        {
            self.activities = activities
            self.applicationId = applicationId
            self.closedDays = closedDays
            self.creationDate = creationDate
            self.id = id
            self.journeyChannelSettings = journeyChannelSettings
            self.lastModifiedDate = lastModifiedDate
            self.limits = limits
            self.localTime = localTime
            self.name = name
            self.openHours = openHours
            self.quietTime = quietTime
            self.refreshFrequency = refreshFrequency
            self.refreshOnSegmentUpdate = refreshOnSegmentUpdate
            self.schedule = schedule
            self.sendingSchedule = sendingSchedule
            self.startActivity = startActivity
            self.startCondition = startCondition
            self.state = state
            self.tags = tags
            self.waitForQuietTime = waitForQuietTime
        }
    }

}
