// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointClientTypes.EmailChannelRequest: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationSet = "ConfigurationSet"
        case enabled = "Enabled"
        case fromAddress = "FromAddress"
        case identity = "Identity"
        case roleArn = "RoleArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configurationSet = self.configurationSet {
            try encodeContainer.encode(configurationSet, forKey: .configurationSet)
        }
        if let enabled = self.enabled {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if let fromAddress = self.fromAddress {
            try encodeContainer.encode(fromAddress, forKey: .fromAddress)
        }
        if let identity = self.identity {
            try encodeContainer.encode(identity, forKey: .identity)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationSetDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .configurationSet)
        configurationSet = configurationSetDecoded
        let enabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let fromAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fromAddress)
        fromAddress = fromAddressDecoded
        let identityDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identity)
        identity = identityDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
