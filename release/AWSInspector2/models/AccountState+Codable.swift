// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Inspector2ClientTypes.AccountState: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountId
        case resourceState
        case state
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountId = self.accountId {
            try encodeContainer.encode(accountId, forKey: .accountId)
        }
        if let resourceState = self.resourceState {
            try encodeContainer.encode(resourceState, forKey: .resourceState)
        }
        if let state = self.state {
            try encodeContainer.encode(state, forKey: .state)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let stateDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.State.self, forKey: .state)
        state = stateDecoded
        let resourceStateDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.ResourceState.self, forKey: .resourceState)
        resourceState = resourceStateDecoded
    }
}
