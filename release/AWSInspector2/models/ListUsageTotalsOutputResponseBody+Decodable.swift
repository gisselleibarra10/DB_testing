// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUsageTotalsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let totals: [Inspector2ClientTypes.UsageTotal]?
}

extension ListUsageTotalsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case totals
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let totalsContainer = try containerValues.decodeIfPresent([Inspector2ClientTypes.UsageTotal?].self, forKey: .totals)
        var totalsDecoded0:[Inspector2ClientTypes.UsageTotal]? = nil
        if let totalsContainer = totalsContainer {
            totalsDecoded0 = [Inspector2ClientTypes.UsageTotal]()
            for structure0 in totalsContainer {
                if let structure0 = structure0 {
                    totalsDecoded0?.append(structure0)
                }
            }
        }
        totals = totalsDecoded0
    }
}
