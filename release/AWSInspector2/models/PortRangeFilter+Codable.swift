// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Inspector2ClientTypes.PortRangeFilter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case beginInclusive
        case endInclusive
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let beginInclusive = self.beginInclusive {
            try encodeContainer.encode(beginInclusive, forKey: .beginInclusive)
        }
        if let endInclusive = self.endInclusive {
            try encodeContainer.encode(endInclusive, forKey: .endInclusive)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let beginInclusiveDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .beginInclusive)
        beginInclusive = beginInclusiveDecoded
        let endInclusiveDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .endInclusive)
        endInclusive = endInclusiveDecoded
    }
}
