// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Inspector2ClientTypes {
    public enum ReportingErrorCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case bucketNotFound
        case incompatibleBucketRegion
        case internalError
        case invalidPermissions
        case malformedKmsKey
        case noFindingsFound
        case sdkUnknown(Swift.String)

        public static var allCases: [ReportingErrorCode] {
            return [
                .bucketNotFound,
                .incompatibleBucketRegion,
                .internalError,
                .invalidPermissions,
                .malformedKmsKey,
                .noFindingsFound,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .bucketNotFound: return "BUCKET_NOT_FOUND"
            case .incompatibleBucketRegion: return "INCOMPATIBLE_BUCKET_REGION"
            case .internalError: return "INTERNAL_ERROR"
            case .invalidPermissions: return "INVALID_PERMISSIONS"
            case .malformedKmsKey: return "MALFORMED_KMS_KEY"
            case .noFindingsFound: return "NO_FINDINGS_FOUND"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ReportingErrorCode(rawValue: rawValue) ?? ReportingErrorCode.sdkUnknown(rawValue)
        }
    }
}
