// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Inspector2ClientTypes.CvssScore: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case baseScore
        case scoringVector
        case source
        case version
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let baseScore = self.baseScore {
            try encodeContainer.encode(baseScore, forKey: .baseScore)
        }
        if let scoringVector = self.scoringVector {
            try encodeContainer.encode(scoringVector, forKey: .scoringVector)
        }
        if let source = self.source {
            try encodeContainer.encode(source, forKey: .source)
        }
        if let version = self.version {
            try encodeContainer.encode(version, forKey: .version)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let baseScoreDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .baseScore)
        baseScore = baseScoreDecoded
        let scoringVectorDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .scoringVector)
        scoringVector = scoringVectorDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .source)
        source = sourceDecoded
    }
}
