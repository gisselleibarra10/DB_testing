// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCoverageStatisticsInputBody: Swift.Equatable {
    let filterCriteria: Inspector2ClientTypes.CoverageFilterCriteria?
    let groupBy: Inspector2ClientTypes.GroupKey?
    let nextToken: Swift.String?
}

extension ListCoverageStatisticsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterCriteria
        case groupBy
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterCriteriaDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.CoverageFilterCriteria.self, forKey: .filterCriteria)
        filterCriteria = filterCriteriaDecoded
        let groupByDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.GroupKey.self, forKey: .groupBy)
        groupBy = groupByDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
