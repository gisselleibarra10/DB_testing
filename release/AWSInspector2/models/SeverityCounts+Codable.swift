// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Inspector2ClientTypes.SeverityCounts: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case all
        case critical
        case high
        case medium
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let all = self.all {
            try encodeContainer.encode(all, forKey: .all)
        }
        if let critical = self.critical {
            try encodeContainer.encode(critical, forKey: .critical)
        }
        if let high = self.high {
            try encodeContainer.encode(high, forKey: .high)
        }
        if let medium = self.medium {
            try encodeContainer.encode(medium, forKey: .medium)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .all)
        all = allDecoded
        let mediumDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .medium)
        medium = mediumDecoded
        let highDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .high)
        high = highDecoded
        let criticalDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .critical)
        critical = criticalDecoded
    }
}
