// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Inspector2ClientTypes {
    public enum ErrorCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case accessDenied
        case accountIsIsolated
        case alreadyEnabled
        case disableInProgress
        case disassociateAllMembers
        case enableInProgress
        case eventbridgeThrottled
        case eventbridgeUnavailable
        case internalError
        case resourceNotFound
        case resourceScanNotDisabled
        case ssmThrottled
        case ssmUnavailable
        case suspendInProgress
        case sdkUnknown(Swift.String)

        public static var allCases: [ErrorCode] {
            return [
                .accessDenied,
                .accountIsIsolated,
                .alreadyEnabled,
                .disableInProgress,
                .disassociateAllMembers,
                .enableInProgress,
                .eventbridgeThrottled,
                .eventbridgeUnavailable,
                .internalError,
                .resourceNotFound,
                .resourceScanNotDisabled,
                .ssmThrottled,
                .ssmUnavailable,
                .suspendInProgress,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .accessDenied: return "ACCESS_DENIED"
            case .accountIsIsolated: return "ACCOUNT_IS_ISOLATED"
            case .alreadyEnabled: return "ALREADY_ENABLED"
            case .disableInProgress: return "DISABLE_IN_PROGRESS"
            case .disassociateAllMembers: return "DISASSOCIATE_ALL_MEMBERS"
            case .enableInProgress: return "ENABLE_IN_PROGRESS"
            case .eventbridgeThrottled: return "EVENTBRIDGE_THROTTLED"
            case .eventbridgeUnavailable: return "EVENTBRIDGE_UNAVAILABLE"
            case .internalError: return "INTERNAL_ERROR"
            case .resourceNotFound: return "RESOURCE_NOT_FOUND"
            case .resourceScanNotDisabled: return "RESOURCE_SCAN_NOT_DISABLED"
            case .ssmThrottled: return "SSM_THROTTLED"
            case .ssmUnavailable: return "SSM_UNAVAILABLE"
            case .suspendInProgress: return "SUSPEND_IN_PROGRESS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ErrorCode(rawValue: rawValue) ?? ErrorCode.sdkUnknown(rawValue)
        }
    }
}
