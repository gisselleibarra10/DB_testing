// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFindingsReportStatusOutputResponseBody: Swift.Equatable {
    let reportId: Swift.String?
    let status: Inspector2ClientTypes.ExternalReportStatus?
    let errorCode: Inspector2ClientTypes.ReportingErrorCode?
    let errorMessage: Swift.String?
    let destination: Inspector2ClientTypes.Destination?
    let filterCriteria: Inspector2ClientTypes.FilterCriteria?
}

extension GetFindingsReportStatusOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destination
        case errorCode
        case errorMessage
        case filterCriteria
        case reportId
        case status
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reportIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reportId)
        reportId = reportIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.ExternalReportStatus.self, forKey: .status)
        status = statusDecoded
        let errorCodeDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.ReportingErrorCode.self, forKey: .errorCode)
        errorCode = errorCodeDecoded
        let errorMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorMessage)
        errorMessage = errorMessageDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.Destination.self, forKey: .destination)
        destination = destinationDecoded
        let filterCriteriaDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.FilterCriteria.self, forKey: .filterCriteria)
        filterCriteria = filterCriteriaDecoded
    }
}
