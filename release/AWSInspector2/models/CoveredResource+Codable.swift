// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Inspector2ClientTypes.CoveredResource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountId
        case resourceId
        case resourceMetadata
        case resourceType
        case scanStatus
        case scanType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountId = self.accountId {
            try encodeContainer.encode(accountId, forKey: .accountId)
        }
        if let resourceId = self.resourceId {
            try encodeContainer.encode(resourceId, forKey: .resourceId)
        }
        if let resourceMetadata = self.resourceMetadata {
            try encodeContainer.encode(resourceMetadata, forKey: .resourceMetadata)
        }
        if let resourceType = self.resourceType {
            try encodeContainer.encode(resourceType.rawValue, forKey: .resourceType)
        }
        if let scanStatus = self.scanStatus {
            try encodeContainer.encode(scanStatus, forKey: .scanStatus)
        }
        if let scanType = self.scanType {
            try encodeContainer.encode(scanType.rawValue, forKey: .scanType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceTypeDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.CoverageResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let resourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let accountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let scanTypeDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.ScanType.self, forKey: .scanType)
        scanType = scanTypeDecoded
        let scanStatusDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.ScanStatus.self, forKey: .scanStatus)
        scanStatus = scanStatusDecoded
        let resourceMetadataDecoded = try containerValues.decodeIfPresent(Inspector2ClientTypes.ResourceScanMetadata.self, forKey: .resourceMetadata)
        resourceMetadata = resourceMetadataDecoded
    }
}
