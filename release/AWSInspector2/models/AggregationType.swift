// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Inspector2ClientTypes {
    public enum AggregationType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case account
        case ami
        case awsEc2Instance
        case awsEcrContainer
        case findingType
        case imageLayer
        case package
        case repository
        case title
        case sdkUnknown(Swift.String)

        public static var allCases: [AggregationType] {
            return [
                .account,
                .ami,
                .awsEc2Instance,
                .awsEcrContainer,
                .findingType,
                .imageLayer,
                .package,
                .repository,
                .title,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .account: return "ACCOUNT"
            case .ami: return "AMI"
            case .awsEc2Instance: return "AWS_EC2_INSTANCE"
            case .awsEcrContainer: return "AWS_ECR_CONTAINER"
            case .findingType: return "FINDING_TYPE"
            case .imageLayer: return "IMAGE_LAYER"
            case .package: return "PACKAGE"
            case .repository: return "REPOSITORY"
            case .title: return "TITLE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = AggregationType(rawValue: rawValue) ?? AggregationType.sdkUnknown(rawValue)
        }
    }
}
