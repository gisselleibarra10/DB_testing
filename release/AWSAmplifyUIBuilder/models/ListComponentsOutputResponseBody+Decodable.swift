// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListComponentsOutputResponseBody: Swift.Equatable {
    let entities: [AmplifyUiBuilderClientTypes.ComponentSummary]?
    let nextToken: Swift.String?
}

extension ListComponentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entities
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entitiesContainer = try containerValues.decodeIfPresent([AmplifyUiBuilderClientTypes.ComponentSummary?].self, forKey: .entities)
        var entitiesDecoded0:[AmplifyUiBuilderClientTypes.ComponentSummary]? = nil
        if let entitiesContainer = entitiesContainer {
            entitiesDecoded0 = [AmplifyUiBuilderClientTypes.ComponentSummary]()
            for structure0 in entitiesContainer {
                if let structure0 = structure0 {
                    entitiesDecoded0?.append(structure0)
                }
            }
        }
        entities = entitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
