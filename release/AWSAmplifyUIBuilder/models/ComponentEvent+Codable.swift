// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyUiBuilderClientTypes.ComponentEvent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case action
        case bindingEvent
        case parameters
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let action = self.action {
            try encodeContainer.encode(action, forKey: .action)
        }
        if let bindingEvent = self.bindingEvent {
            try encodeContainer.encode(bindingEvent, forKey: .bindingEvent)
        }
        if let parameters = self.parameters {
            try encodeContainer.encode(parameters, forKey: .parameters)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .action)
        action = actionDecoded
        let parametersDecoded = try containerValues.decodeIfPresent(AmplifyUiBuilderClientTypes.ActionParameters.self, forKey: .parameters)
        parameters = parametersDecoded
        let bindingEventDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bindingEvent)
        bindingEvent = bindingEventDecoded
    }
}
