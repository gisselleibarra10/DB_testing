// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyUiBuilderClientTypes.SectionalElement: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case level
        case orientation
        case position
        case text
        case type
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let level = self.level {
            try encodeContainer.encode(level, forKey: .level)
        }
        if let orientation = self.orientation {
            try encodeContainer.encode(orientation, forKey: .orientation)
        }
        if let position = self.position {
            try encodeContainer.encode(position, forKey: .position)
        }
        if let text = self.text {
            try encodeContainer.encode(text, forKey: .text)
        }
        if let type = self.type {
            try encodeContainer.encode(type, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .type)
        type = typeDecoded
        let positionDecoded = try containerValues.decodeIfPresent(AmplifyUiBuilderClientTypes.FieldPosition.self, forKey: .position)
        position = positionDecoded
        let textDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .text)
        text = textDecoded
        let levelDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .level)
        level = levelDecoded
        let orientationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .orientation)
        orientation = orientationDecoded
    }
}
