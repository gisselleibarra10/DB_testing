// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyUiBuilderClientTypes.ComponentVariant: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case overrides
        case variantValues
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let overrides = overrides {
            var overridesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .overrides)
            for (dictKey0, componentoverrides0) in overrides {
                try overridesContainer.encode(componentoverrides0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let variantValues = variantValues {
            var variantValuesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .variantValues)
            for (dictKey0, componentvariantvalues0) in variantValues {
                try variantValuesContainer.encode(componentvariantvalues0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let variantValuesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .variantValues)
        var variantValuesDecoded0: [Swift.String:Swift.String]? = nil
        if let variantValuesContainer = variantValuesContainer {
            variantValuesDecoded0 = [Swift.String:Swift.String]()
            for (key0, string0) in variantValuesContainer {
                if let string0 = string0 {
                    variantValuesDecoded0?[key0] = string0
                }
            }
        }
        variantValues = variantValuesDecoded0
        let overridesContainer = try containerValues.decodeIfPresent([Swift.String: [Swift.String: Swift.String?]?].self, forKey: .overrides)
        var overridesDecoded0: [Swift.String:[Swift.String:Swift.String]]? = nil
        if let overridesContainer = overridesContainer {
            overridesDecoded0 = [Swift.String:[Swift.String:Swift.String]]()
            for (key0, componentoverridesvalue0) in overridesContainer {
                var componentoverridesvalue0Decoded0: [Swift.String: Swift.String]? = nil
                if let componentoverridesvalue0 = componentoverridesvalue0 {
                    componentoverridesvalue0Decoded0 = [Swift.String: Swift.String]()
                    for (key1, string1) in componentoverridesvalue0 {
                        if let string1 = string1 {
                            componentoverridesvalue0Decoded0?[key1] = string1
                        }
                    }
                }
                overridesDecoded0?[key0] = componentoverridesvalue0Decoded0
            }
        }
        overrides = overridesDecoded0
    }
}
