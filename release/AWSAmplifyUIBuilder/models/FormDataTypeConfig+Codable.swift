// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyUiBuilderClientTypes.FormDataTypeConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSourceType
        case dataTypeName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataSourceType = self.dataSourceType {
            try encodeContainer.encode(dataSourceType.rawValue, forKey: .dataSourceType)
        }
        if let dataTypeName = self.dataTypeName {
            try encodeContainer.encode(dataTypeName, forKey: .dataTypeName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSourceTypeDecoded = try containerValues.decodeIfPresent(AmplifyUiBuilderClientTypes.FormDataSourceType.self, forKey: .dataSourceType)
        dataSourceType = dataSourceTypeDecoded
        let dataTypeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataTypeName)
        dataTypeName = dataTypeNameDecoded
    }
}
