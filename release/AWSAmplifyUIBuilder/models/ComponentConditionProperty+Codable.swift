// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyUiBuilderClientTypes.ComponentConditionProperty: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case `else` = "else"
        case field
        case operand
        case operandType
        case `operator` = "operator"
        case property
        case then
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let `else` = self.`else` {
            try encodeContainer.encode(`else`.value, forKey: .`else`)
        }
        if let field = self.field {
            try encodeContainer.encode(field, forKey: .field)
        }
        if let operand = self.operand {
            try encodeContainer.encode(operand, forKey: .operand)
        }
        if let operandType = self.operandType {
            try encodeContainer.encode(operandType, forKey: .operandType)
        }
        if let `operator` = self.`operator` {
            try encodeContainer.encode(`operator`, forKey: .`operator`)
        }
        if let property = self.property {
            try encodeContainer.encode(property, forKey: .property)
        }
        if let then = self.then {
            try encodeContainer.encode(then.value, forKey: .then)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let propertyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .property)
        property = propertyDecoded
        let fieldDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .field)
        field = fieldDecoded
        let operatorDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .operator)
        `operator` = operatorDecoded
        let operandDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .operand)
        operand = operandDecoded
        let thenDecoded = try containerValues.decodeIfPresent(Box<AmplifyUiBuilderClientTypes.ComponentProperty>.self, forKey: .then)
        then = thenDecoded
        let elseDecoded = try containerValues.decodeIfPresent(Box<AmplifyUiBuilderClientTypes.ComponentProperty>.self, forKey: .else)
        `else` = elseDecoded
        let operandTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .operandType)
        operandType = operandTypeDecoded
    }
}
