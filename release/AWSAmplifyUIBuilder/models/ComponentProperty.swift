// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AmplifyUiBuilderClientTypes {
    /// Describes the configuration for all of a component's properties. Use ComponentProperty to specify the values to render or bind by default.
    public struct ComponentProperty: Swift.Equatable {
        /// The information to bind the component property to data at runtime.
        public var bindingProperties: AmplifyUiBuilderClientTypes.ComponentPropertyBindingProperties?
        /// The information to bind the component property to form data.
        public var bindings: [Swift.String:AmplifyUiBuilderClientTypes.FormBindingElement]?
        /// The information to bind the component property to data at runtime. Use this for collection components.
        public var collectionBindingProperties: AmplifyUiBuilderClientTypes.ComponentPropertyBindingProperties?
        /// The name of the component that is affected by an event.
        public var componentName: Swift.String?
        /// A list of component properties to concatenate to create the value to assign to this component property.
        public var concat: [AmplifyUiBuilderClientTypes.ComponentProperty]?
        /// The conditional expression to use to assign a value to the component property.
        public var condition: AmplifyUiBuilderClientTypes.ComponentConditionProperty?
        /// Specifies whether the user configured the property in Amplify Studio after importing it.
        public var configured: Swift.Bool?
        /// The default value to assign to the component property.
        public var defaultValue: Swift.String?
        /// An event that occurs in your app. Use this for workflow data binding.
        public var event: Swift.String?
        /// The default value assigned to the property when the component is imported into an app.
        public var importedValue: Swift.String?
        /// The data model to use to assign a value to the component property.
        public var model: Swift.String?
        /// The name of the component's property that is affected by an event.
        public var property: Swift.String?
        /// The component type.
        public var type: Swift.String?
        /// An authenticated user attribute to use to assign a value to the component property.
        public var userAttribute: Swift.String?
        /// The value to assign to the component property.
        public var value: Swift.String?

        public init (
            bindingProperties: AmplifyUiBuilderClientTypes.ComponentPropertyBindingProperties? = nil,
            bindings: [Swift.String:AmplifyUiBuilderClientTypes.FormBindingElement]? = nil,
            collectionBindingProperties: AmplifyUiBuilderClientTypes.ComponentPropertyBindingProperties? = nil,
            componentName: Swift.String? = nil,
            concat: [AmplifyUiBuilderClientTypes.ComponentProperty]? = nil,
            condition: AmplifyUiBuilderClientTypes.ComponentConditionProperty? = nil,
            configured: Swift.Bool? = nil,
            defaultValue: Swift.String? = nil,
            event: Swift.String? = nil,
            importedValue: Swift.String? = nil,
            model: Swift.String? = nil,
            property: Swift.String? = nil,
            type: Swift.String? = nil,
            userAttribute: Swift.String? = nil,
            value: Swift.String? = nil
        )
        {
            self.bindingProperties = bindingProperties
            self.bindings = bindings
            self.collectionBindingProperties = collectionBindingProperties
            self.componentName = componentName
            self.concat = concat
            self.condition = condition
            self.configured = configured
            self.defaultValue = defaultValue
            self.event = event
            self.importedValue = importedValue
            self.model = model
            self.property = property
            self.type = type
            self.userAttribute = userAttribute
            self.value = value
        }
    }

}
