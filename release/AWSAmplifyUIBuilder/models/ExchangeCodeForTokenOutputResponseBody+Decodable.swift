// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExchangeCodeForTokenOutputResponseBody: Swift.Equatable {
    let accessToken: Swift.String?
    let expiresIn: Swift.Int?
    let refreshToken: Swift.String?
}

extension ExchangeCodeForTokenOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessToken
        case expiresIn
        case refreshToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accessToken)
        accessToken = accessTokenDecoded
        let expiresInDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .expiresIn)
        expiresIn = expiresInDecoded
        let refreshTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .refreshToken)
        refreshToken = refreshTokenDecoded
    }
}
