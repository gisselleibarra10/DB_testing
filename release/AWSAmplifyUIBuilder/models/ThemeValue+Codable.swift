// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyUiBuilderClientTypes.ThemeValue: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case children
        case value
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let children = children {
            var childrenContainer = encodeContainer.nestedUnkeyedContainer(forKey: .children)
            for themevalueslist0 in children {
                try childrenContainer.encode(themevalueslist0)
            }
        }
        if let value = self.value {
            try encodeContainer.encode(value, forKey: .value)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let valueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .value)
        value = valueDecoded
        let childrenContainer = try containerValues.decodeIfPresent([AmplifyUiBuilderClientTypes.ThemeValues?].self, forKey: .children)
        var childrenDecoded0:[AmplifyUiBuilderClientTypes.ThemeValues]? = nil
        if let childrenContainer = childrenContainer {
            childrenDecoded0 = [AmplifyUiBuilderClientTypes.ThemeValues]()
            for structure0 in childrenContainer {
                if let structure0 = structure0 {
                    childrenDecoded0?.append(structure0)
                }
            }
        }
        children = childrenDecoded0
    }
}
