// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyUiBuilderClientTypes.FormCTA: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cancel
        case clear
        case position
        case submit
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cancel = self.cancel {
            try encodeContainer.encode(cancel, forKey: .cancel)
        }
        if let clear = self.clear {
            try encodeContainer.encode(clear, forKey: .clear)
        }
        if let position = self.position {
            try encodeContainer.encode(position.rawValue, forKey: .position)
        }
        if let submit = self.submit {
            try encodeContainer.encode(submit, forKey: .submit)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let positionDecoded = try containerValues.decodeIfPresent(AmplifyUiBuilderClientTypes.FormButtonsPosition.self, forKey: .position)
        position = positionDecoded
        let clearDecoded = try containerValues.decodeIfPresent(AmplifyUiBuilderClientTypes.FormButton.self, forKey: .clear)
        clear = clearDecoded
        let cancelDecoded = try containerValues.decodeIfPresent(AmplifyUiBuilderClientTypes.FormButton.self, forKey: .cancel)
        cancel = cancelDecoded
        let submitDecoded = try containerValues.decodeIfPresent(AmplifyUiBuilderClientTypes.FormButton.self, forKey: .submit)
        submit = submitDecoded
    }
}
