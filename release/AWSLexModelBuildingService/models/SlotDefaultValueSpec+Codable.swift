// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelBuildingClientTypes.SlotDefaultValueSpec: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultValueList
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultValueList = defaultValueList {
            var defaultValueListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .defaultValueList)
            for slotdefaultvaluelist0 in defaultValueList {
                try defaultValueListContainer.encode(slotdefaultvaluelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let defaultValueListContainer = try containerValues.decodeIfPresent([LexModelBuildingClientTypes.SlotDefaultValue?].self, forKey: .defaultValueList)
        var defaultValueListDecoded0:[LexModelBuildingClientTypes.SlotDefaultValue]? = nil
        if let defaultValueListContainer = defaultValueListContainer {
            defaultValueListDecoded0 = [LexModelBuildingClientTypes.SlotDefaultValue]()
            for structure0 in defaultValueListContainer {
                if let structure0 = structure0 {
                    defaultValueListDecoded0?.append(structure0)
                }
            }
        }
        defaultValueList = defaultValueListDecoded0
    }
}
