// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBuiltinIntentsOutputResponseBody: Swift.Equatable {
    let intents: [LexModelBuildingClientTypes.BuiltinIntentMetadata]?
    let nextToken: Swift.String?
}

extension GetBuiltinIntentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case intents
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let intentsContainer = try containerValues.decodeIfPresent([LexModelBuildingClientTypes.BuiltinIntentMetadata?].self, forKey: .intents)
        var intentsDecoded0:[LexModelBuildingClientTypes.BuiltinIntentMetadata]? = nil
        if let intentsContainer = intentsContainer {
            intentsDecoded0 = [LexModelBuildingClientTypes.BuiltinIntentMetadata]()
            for structure0 in intentsContainer {
                if let structure0 = structure0 {
                    intentsDecoded0?.append(structure0)
                }
            }
        }
        intents = intentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
