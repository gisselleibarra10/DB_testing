// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetExportOutputResponseBody: Swift.Equatable {
    let name: Swift.String?
    let version: Swift.String?
    let resourceType: LexModelBuildingClientTypes.ResourceType?
    let exportType: LexModelBuildingClientTypes.ExportType?
    let exportStatus: LexModelBuildingClientTypes.ExportStatus?
    let failureReason: Swift.String?
    let url: Swift.String?
}

extension GetExportOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exportStatus
        case exportType
        case failureReason
        case name
        case resourceType
        case url
        case version
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(LexModelBuildingClientTypes.ResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let exportTypeDecoded = try containerValues.decodeIfPresent(LexModelBuildingClientTypes.ExportType.self, forKey: .exportType)
        exportType = exportTypeDecoded
        let exportStatusDecoded = try containerValues.decodeIfPresent(LexModelBuildingClientTypes.ExportStatus.self, forKey: .exportStatus)
        exportStatus = exportStatusDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let urlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .url)
        url = urlDecoded
    }
}
