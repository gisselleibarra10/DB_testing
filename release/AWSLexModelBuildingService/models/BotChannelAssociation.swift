// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelBuildingClientTypes {
    /// Represents an association between an Amazon Lex bot and an external messaging platform.
    public struct BotChannelAssociation: Swift.Equatable {
        /// An alias pointing to the specific version of the Amazon Lex bot to which this association is being made.
        public var botAlias: Swift.String?
        /// Provides information necessary to communicate with the messaging platform.
        public var botConfiguration: [Swift.String:Swift.String]?
        /// The name of the Amazon Lex bot to which this association is being made. Currently, Amazon Lex supports associations with Facebook and Slack, and Twilio.
        public var botName: Swift.String?
        /// The date that the association between the Amazon Lex bot and the channel was created.
        public var createdDate: ClientRuntime.Date?
        /// A text description of the association you are creating.
        public var description: Swift.String?
        /// If status is FAILED, Amazon Lex provides the reason that it failed to create the association.
        public var failureReason: Swift.String?
        /// The name of the association between the bot and the channel.
        public var name: Swift.String?
        /// The status of the bot channel.
        ///
        /// * CREATED - The channel has been created and is ready for use.
        ///
        /// * IN_PROGRESS - Channel creation is in progress.
        ///
        /// * FAILED - There was an error creating the channel. For information about the reason for the failure, see the failureReason field.
        public var status: LexModelBuildingClientTypes.ChannelStatus?
        /// Specifies the type of association by indicating the type of channel being established between the Amazon Lex bot and the external messaging platform.
        public var type: LexModelBuildingClientTypes.ChannelType?

        public init (
            botAlias: Swift.String? = nil,
            botConfiguration: [Swift.String:Swift.String]? = nil,
            botName: Swift.String? = nil,
            createdDate: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            failureReason: Swift.String? = nil,
            name: Swift.String? = nil,
            status: LexModelBuildingClientTypes.ChannelStatus? = nil,
            type: LexModelBuildingClientTypes.ChannelType? = nil
        )
        {
            self.botAlias = botAlias
            self.botConfiguration = botConfiguration
            self.botName = botName
            self.createdDate = createdDate
            self.description = description
            self.failureReason = failureReason
            self.name = name
            self.status = status
            self.type = type
        }
    }

}
