// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBotChannelAssociationOutputResponseBody: Swift.Equatable {
    let name: Swift.String?
    let description: Swift.String?
    let botAlias: Swift.String?
    let botName: Swift.String?
    let createdDate: ClientRuntime.Date?
    let type: LexModelBuildingClientTypes.ChannelType?
    let botConfiguration: [Swift.String:Swift.String]?
    let status: LexModelBuildingClientTypes.ChannelStatus?
    let failureReason: Swift.String?
}

extension GetBotChannelAssociationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case botAlias
        case botConfiguration
        case botName
        case createdDate
        case description
        case failureReason
        case name
        case status
        case type
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let botAliasDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botAlias)
        botAlias = botAliasDecoded
        let botNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botName)
        botName = botNameDecoded
        let createdDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdDate)
        createdDate = createdDateDecoded
        let typeDecoded = try containerValues.decodeIfPresent(LexModelBuildingClientTypes.ChannelType.self, forKey: .type)
        type = typeDecoded
        let botConfigurationContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .botConfiguration)
        var botConfigurationDecoded0: [Swift.String:Swift.String]? = nil
        if let botConfigurationContainer = botConfigurationContainer {
            botConfigurationDecoded0 = [Swift.String:Swift.String]()
            for (key0, string0) in botConfigurationContainer {
                if let string0 = string0 {
                    botConfigurationDecoded0?[key0] = string0
                }
            }
        }
        botConfiguration = botConfigurationDecoded0
        let statusDecoded = try containerValues.decodeIfPresent(LexModelBuildingClientTypes.ChannelStatus.self, forKey: .status)
        status = statusDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
    }
}
