// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetMigrationsInput: Swift.Equatable {
    /// The maximum number of migrations to return in the response. The default is 10.
    public var maxResults: Swift.Int?
    /// Filters the list to contain only migrations in the specified state.
    public var migrationStatusEquals: LexModelBuildingClientTypes.MigrationStatus?
    /// A pagination token that fetches the next page of migrations. If the response to this operation is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of migrations, specify the pagination token in the request.
    public var nextToken: Swift.String?
    /// The field to sort the list of migrations by. You can sort by the Amazon Lex V1 bot name or the date and time that the migration was started.
    public var sortByAttribute: LexModelBuildingClientTypes.MigrationSortAttribute?
    /// The order so sort the list.
    public var sortByOrder: LexModelBuildingClientTypes.SortOrder?
    /// Filters the list to contain only bots whose name contains the specified string. The string is matched anywhere in bot name.
    public var v1BotNameContains: Swift.String?

    public init (
        maxResults: Swift.Int? = nil,
        migrationStatusEquals: LexModelBuildingClientTypes.MigrationStatus? = nil,
        nextToken: Swift.String? = nil,
        sortByAttribute: LexModelBuildingClientTypes.MigrationSortAttribute? = nil,
        sortByOrder: LexModelBuildingClientTypes.SortOrder? = nil,
        v1BotNameContains: Swift.String? = nil
    )
    {
        self.maxResults = maxResults
        self.migrationStatusEquals = migrationStatusEquals
        self.nextToken = nextToken
        self.sortByAttribute = sortByAttribute
        self.sortByOrder = sortByOrder
        self.v1BotNameContains = v1BotNameContains
    }
}
