// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelBuildingClientTypes.FollowUpPrompt: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case prompt
        case rejectionStatement
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let prompt = self.prompt {
            try encodeContainer.encode(prompt, forKey: .prompt)
        }
        if let rejectionStatement = self.rejectionStatement {
            try encodeContainer.encode(rejectionStatement, forKey: .rejectionStatement)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let promptDecoded = try containerValues.decodeIfPresent(LexModelBuildingClientTypes.Prompt.self, forKey: .prompt)
        prompt = promptDecoded
        let rejectionStatementDecoded = try containerValues.decodeIfPresent(LexModelBuildingClientTypes.Statement.self, forKey: .rejectionStatement)
        rejectionStatement = rejectionStatementDecoded
    }
}
