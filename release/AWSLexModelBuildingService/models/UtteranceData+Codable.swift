// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelBuildingClientTypes.UtteranceData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case count
        case distinctUsers
        case firstUtteredDate
        case lastUtteredDate
        case utteranceString
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let count = self.count {
            try encodeContainer.encode(count, forKey: .count)
        }
        if let distinctUsers = self.distinctUsers {
            try encodeContainer.encode(distinctUsers, forKey: .distinctUsers)
        }
        if let firstUtteredDate = self.firstUtteredDate {
            try encodeContainer.encode(firstUtteredDate.timeIntervalSince1970, forKey: .firstUtteredDate)
        }
        if let lastUtteredDate = self.lastUtteredDate {
            try encodeContainer.encode(lastUtteredDate.timeIntervalSince1970, forKey: .lastUtteredDate)
        }
        if let utteranceString = self.utteranceString {
            try encodeContainer.encode(utteranceString, forKey: .utteranceString)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let utteranceStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .utteranceString)
        utteranceString = utteranceStringDecoded
        let countDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .count)
        count = countDecoded
        let distinctUsersDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .distinctUsers)
        distinctUsers = distinctUsersDecoded
        let firstUtteredDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .firstUtteredDate)
        firstUtteredDate = firstUtteredDateDecoded
        let lastUtteredDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUtteredDate)
        lastUtteredDate = lastUtteredDateDecoded
    }
}
