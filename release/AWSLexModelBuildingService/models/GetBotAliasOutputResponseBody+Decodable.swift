// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBotAliasOutputResponseBody: Swift.Equatable {
    let name: Swift.String?
    let description: Swift.String?
    let botVersion: Swift.String?
    let botName: Swift.String?
    let lastUpdatedDate: ClientRuntime.Date?
    let createdDate: ClientRuntime.Date?
    let checksum: Swift.String?
    let conversationLogs: LexModelBuildingClientTypes.ConversationLogsResponse?
}

extension GetBotAliasOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case botName
        case botVersion
        case checksum
        case conversationLogs
        case createdDate
        case description
        case lastUpdatedDate
        case name
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let botVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botVersion)
        botVersion = botVersionDecoded
        let botNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botName)
        botName = botNameDecoded
        let lastUpdatedDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedDate)
        lastUpdatedDate = lastUpdatedDateDecoded
        let createdDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdDate)
        createdDate = createdDateDecoded
        let checksumDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .checksum)
        checksum = checksumDecoded
        let conversationLogsDecoded = try containerValues.decodeIfPresent(LexModelBuildingClientTypes.ConversationLogsResponse.self, forKey: .conversationLogs)
        conversationLogs = conversationLogsDecoded
    }
}
