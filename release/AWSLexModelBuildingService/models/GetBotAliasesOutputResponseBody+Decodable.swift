// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBotAliasesOutputResponseBody: Swift.Equatable {
    let botAliases: [LexModelBuildingClientTypes.BotAliasMetadata]?
    let nextToken: Swift.String?
}

extension GetBotAliasesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case botAliases = "BotAliases"
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botAliasesContainer = try containerValues.decodeIfPresent([LexModelBuildingClientTypes.BotAliasMetadata?].self, forKey: .botAliases)
        var botAliasesDecoded0:[LexModelBuildingClientTypes.BotAliasMetadata]? = nil
        if let botAliasesContainer = botAliasesContainer {
            botAliasesDecoded0 = [LexModelBuildingClientTypes.BotAliasMetadata]()
            for structure0 in botAliasesContainer {
                if let structure0 = structure0 {
                    botAliasesDecoded0?.append(structure0)
                }
            }
        }
        botAliases = botAliasesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
