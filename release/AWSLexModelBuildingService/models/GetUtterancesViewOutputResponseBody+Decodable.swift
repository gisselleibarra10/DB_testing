// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUtterancesViewOutputResponseBody: Swift.Equatable {
    let botName: Swift.String?
    let utterances: [LexModelBuildingClientTypes.UtteranceList]?
}

extension GetUtterancesViewOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case botName
        case utterances
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botName)
        botName = botNameDecoded
        let utterancesContainer = try containerValues.decodeIfPresent([LexModelBuildingClientTypes.UtteranceList?].self, forKey: .utterances)
        var utterancesDecoded0:[LexModelBuildingClientTypes.UtteranceList]? = nil
        if let utterancesContainer = utterancesContainer {
            utterancesDecoded0 = [LexModelBuildingClientTypes.UtteranceList]()
            for structure0 in utterancesContainer {
                if let structure0 = structure0 {
                    utterancesDecoded0?.append(structure0)
                }
            }
        }
        utterances = utterancesDecoded0
    }
}
