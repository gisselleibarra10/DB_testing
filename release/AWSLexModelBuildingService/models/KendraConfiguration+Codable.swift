// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelBuildingClientTypes.KendraConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case kendraIndex
        case queryFilterString
        case role
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kendraIndex = self.kendraIndex {
            try encodeContainer.encode(kendraIndex, forKey: .kendraIndex)
        }
        if let queryFilterString = self.queryFilterString {
            try encodeContainer.encode(queryFilterString, forKey: .queryFilterString)
        }
        if let role = self.role {
            try encodeContainer.encode(role, forKey: .role)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let kendraIndexDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kendraIndex)
        kendraIndex = kendraIndexDecoded
        let queryFilterStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryFilterString)
        queryFilterString = queryFilterStringDecoded
        let roleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .role)
        role = roleDecoded
    }
}
