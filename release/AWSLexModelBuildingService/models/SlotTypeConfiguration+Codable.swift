// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelBuildingClientTypes.SlotTypeConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case regexConfiguration
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let regexConfiguration = self.regexConfiguration {
            try encodeContainer.encode(regexConfiguration, forKey: .regexConfiguration)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let regexConfigurationDecoded = try containerValues.decodeIfPresent(LexModelBuildingClientTypes.SlotTypeRegexConfiguration.self, forKey: .regexConfiguration)
        regexConfiguration = regexConfigurationDecoded
    }
}
