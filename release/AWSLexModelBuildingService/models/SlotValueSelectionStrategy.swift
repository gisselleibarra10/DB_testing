// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LexModelBuildingClientTypes {
    public enum SlotValueSelectionStrategy: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case originalValue
        case topResolution
        case sdkUnknown(Swift.String)

        public static var allCases: [SlotValueSelectionStrategy] {
            return [
                .originalValue,
                .topResolution,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .originalValue: return "ORIGINAL_VALUE"
            case .topResolution: return "TOP_RESOLUTION"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SlotValueSelectionStrategy(rawValue: rawValue) ?? SlotValueSelectionStrategy.sdkUnknown(rawValue)
        }
    }
}
