// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBuiltinIntentOutputResponseBody: Swift.Equatable {
    let signature: Swift.String?
    let supportedLocales: [LexModelBuildingClientTypes.Locale]?
    let slots: [LexModelBuildingClientTypes.BuiltinIntentSlot]?
}

extension GetBuiltinIntentOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case signature
        case slots
        case supportedLocales
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let signatureDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .signature)
        signature = signatureDecoded
        let supportedLocalesContainer = try containerValues.decodeIfPresent([LexModelBuildingClientTypes.Locale?].self, forKey: .supportedLocales)
        var supportedLocalesDecoded0:[LexModelBuildingClientTypes.Locale]? = nil
        if let supportedLocalesContainer = supportedLocalesContainer {
            supportedLocalesDecoded0 = [LexModelBuildingClientTypes.Locale]()
            for string0 in supportedLocalesContainer {
                if let string0 = string0 {
                    supportedLocalesDecoded0?.append(string0)
                }
            }
        }
        supportedLocales = supportedLocalesDecoded0
        let slotsContainer = try containerValues.decodeIfPresent([LexModelBuildingClientTypes.BuiltinIntentSlot?].self, forKey: .slots)
        var slotsDecoded0:[LexModelBuildingClientTypes.BuiltinIntentSlot]? = nil
        if let slotsContainer = slotsContainer {
            slotsDecoded0 = [LexModelBuildingClientTypes.BuiltinIntentSlot]()
            for structure0 in slotsContainer {
                if let structure0 = structure0 {
                    slotsDecoded0?.append(structure0)
                }
            }
        }
        slots = slotsDecoded0
    }
}
