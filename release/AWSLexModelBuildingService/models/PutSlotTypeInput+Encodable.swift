// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutSlotTypeInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case checksum
        case createVersion
        case description
        case enumerationValues
        case parentSlotTypeSignature
        case slotTypeConfigurations
        case valueSelectionStrategy
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let checksum = self.checksum {
            try encodeContainer.encode(checksum, forKey: .checksum)
        }
        if let createVersion = self.createVersion {
            try encodeContainer.encode(createVersion, forKey: .createVersion)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let enumerationValues = enumerationValues {
            var enumerationValuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .enumerationValues)
            for enumerationvalues0 in enumerationValues {
                try enumerationValuesContainer.encode(enumerationvalues0)
            }
        }
        if let parentSlotTypeSignature = self.parentSlotTypeSignature {
            try encodeContainer.encode(parentSlotTypeSignature, forKey: .parentSlotTypeSignature)
        }
        if let slotTypeConfigurations = slotTypeConfigurations {
            var slotTypeConfigurationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .slotTypeConfigurations)
            for slottypeconfigurations0 in slotTypeConfigurations {
                try slotTypeConfigurationsContainer.encode(slottypeconfigurations0)
            }
        }
        if let valueSelectionStrategy = self.valueSelectionStrategy {
            try encodeContainer.encode(valueSelectionStrategy.rawValue, forKey: .valueSelectionStrategy)
        }
    }
}
