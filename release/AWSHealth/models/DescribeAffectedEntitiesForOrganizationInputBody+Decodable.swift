// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAffectedEntitiesForOrganizationInputBody: Swift.Equatable {
    let organizationEntityFilters: [HealthClientTypes.EventAccountFilter]?
    let locale: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension DescribeAffectedEntitiesForOrganizationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case locale
        case maxResults
        case nextToken
        case organizationEntityFilters
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationEntityFiltersContainer = try containerValues.decodeIfPresent([HealthClientTypes.EventAccountFilter?].self, forKey: .organizationEntityFilters)
        var organizationEntityFiltersDecoded0:[HealthClientTypes.EventAccountFilter]? = nil
        if let organizationEntityFiltersContainer = organizationEntityFiltersContainer {
            organizationEntityFiltersDecoded0 = [HealthClientTypes.EventAccountFilter]()
            for structure0 in organizationEntityFiltersContainer {
                if let structure0 = structure0 {
                    organizationEntityFiltersDecoded0?.append(structure0)
                }
            }
        }
        organizationEntityFilters = organizationEntityFiltersDecoded0
        let localeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .locale)
        locale = localeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
