// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEventsForOrganizationOutputResponseBody: Swift.Equatable {
    let events: [HealthClientTypes.OrganizationEvent]?
    let nextToken: Swift.String?
}

extension DescribeEventsForOrganizationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case events
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventsContainer = try containerValues.decodeIfPresent([HealthClientTypes.OrganizationEvent?].self, forKey: .events)
        var eventsDecoded0:[HealthClientTypes.OrganizationEvent]? = nil
        if let eventsContainer = eventsContainer {
            eventsDecoded0 = [HealthClientTypes.OrganizationEvent]()
            for structure0 in eventsContainer {
                if let structure0 = structure0 {
                    eventsDecoded0?.append(structure0)
                }
            }
        }
        events = eventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
