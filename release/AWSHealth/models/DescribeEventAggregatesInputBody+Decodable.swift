// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEventAggregatesInputBody: Swift.Equatable {
    let filter: HealthClientTypes.EventFilter?
    let aggregateField: HealthClientTypes.EventAggregateField?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension DescribeEventAggregatesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregateField
        case filter
        case maxResults
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterDecoded = try containerValues.decodeIfPresent(HealthClientTypes.EventFilter.self, forKey: .filter)
        filter = filterDecoded
        let aggregateFieldDecoded = try containerValues.decodeIfPresent(HealthClientTypes.EventAggregateField.self, forKey: .aggregateField)
        aggregateField = aggregateFieldDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
