// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEntityAggregatesOutputResponseBody: Swift.Equatable {
    let entityAggregates: [HealthClientTypes.EntityAggregate]?
}

extension DescribeEntityAggregatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entityAggregates
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entityAggregatesContainer = try containerValues.decodeIfPresent([HealthClientTypes.EntityAggregate?].self, forKey: .entityAggregates)
        var entityAggregatesDecoded0:[HealthClientTypes.EntityAggregate]? = nil
        if let entityAggregatesContainer = entityAggregatesContainer {
            entityAggregatesDecoded0 = [HealthClientTypes.EntityAggregate]()
            for structure0 in entityAggregatesContainer {
                if let structure0 = structure0 {
                    entityAggregatesDecoded0?.append(structure0)
                }
            }
        }
        entityAggregates = entityAggregatesDecoded0
    }
}
