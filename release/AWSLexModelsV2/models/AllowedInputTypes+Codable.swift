// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.AllowedInputTypes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowAudioInput
        case allowDTMFInput
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allowAudioInput = self.allowAudioInput {
            try encodeContainer.encode(allowAudioInput, forKey: .allowAudioInput)
        }
        if let allowDTMFInput = self.allowDTMFInput {
            try encodeContainer.encode(allowDTMFInput, forKey: .allowDTMFInput)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allowAudioInputDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .allowAudioInput)
        allowAudioInput = allowAudioInputDecoded
        let allowDTMFInputDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .allowDTMFInput)
        allowDTMFInput = allowDTMFInputDecoded
    }
}
