// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SearchAssociatedTranscriptsInput: Swift.Equatable {
    /// The unique identifier of the bot associated with the transcripts that you are searching.
    /// This member is required.
    public var botId: Swift.String?
    /// The unique identifier of the bot recommendation associated with the transcripts to search.
    /// This member is required.
    public var botRecommendationId: Swift.String?
    /// The version of the bot containing the transcripts that you are searching.
    /// This member is required.
    public var botVersion: Swift.String?
    /// A list of filter objects.
    /// This member is required.
    public var filters: [LexModelsV2ClientTypes.AssociatedTranscriptFilter]?
    /// The identifier of the language and locale of the transcripts to search. The string must match one of the supported locales. For more information, see [Supported languages](https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
    /// This member is required.
    public var localeId: Swift.String?
    /// The maximum number of bot recommendations to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.
    public var maxResults: Swift.Int?
    /// If the response from the SearchAssociatedTranscriptsRequest operation contains more results than specified in the maxResults parameter, an index is returned in the response. Use that index in the nextIndex parameter to return the next page of results.
    public var nextIndex: Swift.Int?
    /// How SearchResults are ordered. Valid values are Ascending or Descending. The default is Descending.
    public var searchOrder: LexModelsV2ClientTypes.SearchOrder?

    public init (
        botId: Swift.String? = nil,
        botRecommendationId: Swift.String? = nil,
        botVersion: Swift.String? = nil,
        filters: [LexModelsV2ClientTypes.AssociatedTranscriptFilter]? = nil,
        localeId: Swift.String? = nil,
        maxResults: Swift.Int? = nil,
        nextIndex: Swift.Int? = nil,
        searchOrder: LexModelsV2ClientTypes.SearchOrder? = nil
    )
    {
        self.botId = botId
        self.botRecommendationId = botRecommendationId
        self.botVersion = botVersion
        self.filters = filters
        self.localeId = localeId
        self.maxResults = maxResults
        self.nextIndex = nextIndex
        self.searchOrder = searchOrder
    }
}
