// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SearchAssociatedTranscriptsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filters
        case maxResults
        case nextIndex
        case searchOrder
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filters = filters {
            var filtersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filters)
            for associatedtranscriptfilters0 in filters {
                try filtersContainer.encode(associatedtranscriptfilters0)
            }
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextIndex = self.nextIndex {
            try encodeContainer.encode(nextIndex, forKey: .nextIndex)
        }
        if let searchOrder = self.searchOrder {
            try encodeContainer.encode(searchOrder.rawValue, forKey: .searchOrder)
        }
    }
}
