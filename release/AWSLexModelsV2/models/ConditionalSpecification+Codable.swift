// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.ConditionalSpecification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case active
        case conditionalBranches
        case defaultBranch
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let active = self.active {
            try encodeContainer.encode(active, forKey: .active)
        }
        if let conditionalBranches = conditionalBranches {
            var conditionalBranchesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .conditionalBranches)
            for conditionalbranches0 in conditionalBranches {
                try conditionalBranchesContainer.encode(conditionalbranches0)
            }
        }
        if let defaultBranch = self.defaultBranch {
            try encodeContainer.encode(defaultBranch, forKey: .defaultBranch)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .active)
        active = activeDecoded
        let conditionalBranchesContainer = try containerValues.decodeIfPresent([LexModelsV2ClientTypes.ConditionalBranch?].self, forKey: .conditionalBranches)
        var conditionalBranchesDecoded0:[LexModelsV2ClientTypes.ConditionalBranch]? = nil
        if let conditionalBranchesContainer = conditionalBranchesContainer {
            conditionalBranchesDecoded0 = [LexModelsV2ClientTypes.ConditionalBranch]()
            for structure0 in conditionalBranchesContainer {
                if let structure0 = structure0 {
                    conditionalBranchesDecoded0?.append(structure0)
                }
            }
        }
        conditionalBranches = conditionalBranchesDecoded0
        let defaultBranchDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.DefaultConditionalBranch.self, forKey: .defaultBranch)
        defaultBranch = defaultBranchDecoded
    }
}
