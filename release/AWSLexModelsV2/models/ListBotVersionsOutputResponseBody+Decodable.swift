// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBotVersionsOutputResponseBody: Swift.Equatable {
    let botId: Swift.String?
    let botVersionSummaries: [LexModelsV2ClientTypes.BotVersionSummary]?
    let nextToken: Swift.String?
}

extension ListBotVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case botId
        case botVersionSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botId)
        botId = botIdDecoded
        let botVersionSummariesContainer = try containerValues.decodeIfPresent([LexModelsV2ClientTypes.BotVersionSummary?].self, forKey: .botVersionSummaries)
        var botVersionSummariesDecoded0:[LexModelsV2ClientTypes.BotVersionSummary]? = nil
        if let botVersionSummariesContainer = botVersionSummariesContainer {
            botVersionSummariesDecoded0 = [LexModelsV2ClientTypes.BotVersionSummary]()
            for structure0 in botVersionSummariesContainer {
                if let structure0 = structure0 {
                    botVersionSummariesDecoded0?.append(structure0)
                }
            }
        }
        botVersionSummaries = botVersionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
