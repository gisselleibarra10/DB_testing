// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.UtteranceAggregationDuration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case relativeAggregationDuration
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let relativeAggregationDuration = self.relativeAggregationDuration {
            try encodeContainer.encode(relativeAggregationDuration, forKey: .relativeAggregationDuration)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relativeAggregationDurationDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.RelativeAggregationDuration.self, forKey: .relativeAggregationDuration)
        relativeAggregationDuration = relativeAggregationDurationDecoded
    }
}
