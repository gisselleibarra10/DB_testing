// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LexModelsV2ClientTypes {
    /// The object representing the Amazon S3 bucket containing the transcript, as well as the associated metadata.
    public struct S3BucketTranscriptSource: Swift.Equatable {
        /// The ARN of the KMS key that customer use to encrypt their Amazon S3 bucket. Only use this field if your bucket is encrypted using a customer managed KMS key.
        public var kmsKeyArn: Swift.String?
        /// The object that contains a path format that will be applied when Amazon Lex reads the transcript file in the bucket you provide. Specify this object if you only want Lex to read a subset of files in your Amazon S3 bucket.
        public var pathFormat: LexModelsV2ClientTypes.PathFormat?
        /// The name of the bucket containing the transcript and the associated metadata.
        /// This member is required.
        public var s3BucketName: Swift.String?
        /// The object that contains the filter which will be applied when Amazon Lex reads through the Amazon S3 bucket. Specify this object if you want Amazon Lex to read only a subset of the Amazon S3 bucket based on the filter you provide.
        public var transcriptFilter: LexModelsV2ClientTypes.TranscriptFilter?
        /// The format of the transcript content. Currently, Genie only supports the Amazon Lex transcript format.
        /// This member is required.
        public var transcriptFormat: LexModelsV2ClientTypes.TranscriptFormat?

        public init (
            kmsKeyArn: Swift.String? = nil,
            pathFormat: LexModelsV2ClientTypes.PathFormat? = nil,
            s3BucketName: Swift.String? = nil,
            transcriptFilter: LexModelsV2ClientTypes.TranscriptFilter? = nil,
            transcriptFormat: LexModelsV2ClientTypes.TranscriptFormat? = nil
        )
        {
            self.kmsKeyArn = kmsKeyArn
            self.pathFormat = pathFormat
            self.s3BucketName = s3BucketName
            self.transcriptFilter = transcriptFilter
            self.transcriptFormat = transcriptFormat
        }
    }

}
