// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListExportsInput: Swift.Equatable {
    /// The unique identifier that Amazon Lex assigned to the bot.
    public var botId: Swift.String?
    /// The version of the bot to list exports for.
    public var botVersion: Swift.String?
    /// Provides the specification of a filter used to limit the exports in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.
    public var filters: [LexModelsV2ClientTypes.ExportFilter]?
    /// Specifies the resources that should be exported. If you don't specify a resource type in the filters parameter, both bot locales and custom vocabularies are exported.
    public var localeId: Swift.String?
    /// The maximum number of exports to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.
    public var maxResults: Swift.Int?
    /// If the response from the ListExports operation contains more results that specified in the maxResults parameter, a token is returned in the response. Use the returned token in the nextToken parameter of a ListExports request to return the next page of results. For a complete set of results, call the ListExports operation until the nextToken returned in the response is null.
    public var nextToken: Swift.String?
    /// Determines the field that the list of exports is sorted by. You can sort by the LastUpdatedDateTime field in ascending or descending order.
    public var sortBy: LexModelsV2ClientTypes.ExportSortBy?

    public init (
        botId: Swift.String? = nil,
        botVersion: Swift.String? = nil,
        filters: [LexModelsV2ClientTypes.ExportFilter]? = nil,
        localeId: Swift.String? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        sortBy: LexModelsV2ClientTypes.ExportSortBy? = nil
    )
    {
        self.botId = botId
        self.botVersion = botVersion
        self.filters = filters
        self.localeId = localeId
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.sortBy = sortBy
    }
}
