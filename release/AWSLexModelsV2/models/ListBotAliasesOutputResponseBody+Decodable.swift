// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBotAliasesOutputResponseBody: Swift.Equatable {
    let botAliasSummaries: [LexModelsV2ClientTypes.BotAliasSummary]?
    let nextToken: Swift.String?
    let botId: Swift.String?
}

extension ListBotAliasesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case botAliasSummaries
        case botId
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botAliasSummariesContainer = try containerValues.decodeIfPresent([LexModelsV2ClientTypes.BotAliasSummary?].self, forKey: .botAliasSummaries)
        var botAliasSummariesDecoded0:[LexModelsV2ClientTypes.BotAliasSummary]? = nil
        if let botAliasSummariesContainer = botAliasSummariesContainer {
            botAliasSummariesDecoded0 = [LexModelsV2ClientTypes.BotAliasSummary]()
            for structure0 in botAliasSummariesContainer {
                if let structure0 = structure0 {
                    botAliasSummariesDecoded0?.append(structure0)
                }
            }
        }
        botAliasSummaries = botAliasSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let botIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botId)
        botId = botIdDecoded
    }
}
