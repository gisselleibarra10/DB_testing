// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateExportOutputResponseBody: Swift.Equatable {
    let exportId: Swift.String?
    let resourceSpecification: LexModelsV2ClientTypes.ExportResourceSpecification?
    let fileFormat: LexModelsV2ClientTypes.ImportExportFileFormat?
    let exportStatus: LexModelsV2ClientTypes.ExportStatus?
    let creationDateTime: ClientRuntime.Date?
}

extension CreateExportOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationDateTime
        case exportId
        case exportStatus
        case fileFormat
        case resourceSpecification
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exportIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exportId)
        exportId = exportIdDecoded
        let resourceSpecificationDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.ExportResourceSpecification.self, forKey: .resourceSpecification)
        resourceSpecification = resourceSpecificationDecoded
        let fileFormatDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.ImportExportFileFormat.self, forKey: .fileFormat)
        fileFormat = fileFormatDecoded
        let exportStatusDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.ExportStatus.self, forKey: .exportStatus)
        exportStatus = exportStatusDecoded
        let creationDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDateTime)
        creationDateTime = creationDateTimeDecoded
    }
}
