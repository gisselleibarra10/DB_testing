// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartImportOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: StartImportOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.creationDateTime = output.creationDateTime
            self.importId = output.importId
            self.importStatus = output.importStatus
            self.mergeStrategy = output.mergeStrategy
            self.resourceSpecification = output.resourceSpecification
        } else {
            self.creationDateTime = nil
            self.importId = nil
            self.importStatus = nil
            self.mergeStrategy = nil
            self.resourceSpecification = nil
        }
    }
}
