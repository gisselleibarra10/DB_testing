// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LexModelsV2ClientTypes {
    /// Settings used when Amazon Lex successfully captures a slot value from a user.
    public struct SlotCaptureSetting: Swift.Equatable {
        /// A list of conditional branches to evaluate after the slot value is captured.
        public var captureConditional: LexModelsV2ClientTypes.ConditionalSpecification?
        /// Specifies the next step that the bot runs when the slot value is captured before the code hook times out.
        public var captureNextStep: LexModelsV2ClientTypes.DialogState?
        /// Specifies a list of message groups that Amazon Lex uses to respond the user input.
        public var captureResponse: LexModelsV2ClientTypes.ResponseSpecification?
        /// Code hook called after Amazon Lex successfully captures a slot value.
        public var codeHook: LexModelsV2ClientTypes.DialogCodeHookInvocationSetting?
        /// Code hook called when Amazon Lex doesn't capture a slot value.
        public var elicitationCodeHook: LexModelsV2ClientTypes.ElicitationCodeHookInvocationSetting?
        /// A list of conditional branches to evaluate when the slot value isn't captured.
        public var failureConditional: LexModelsV2ClientTypes.ConditionalSpecification?
        /// Specifies the next step that the bot runs when the slot value code is not recognized.
        public var failureNextStep: LexModelsV2ClientTypes.DialogState?
        /// Specifies a list of message groups that Amazon Lex uses to respond the user input.
        public var failureResponse: LexModelsV2ClientTypes.ResponseSpecification?

        public init (
            captureConditional: LexModelsV2ClientTypes.ConditionalSpecification? = nil,
            captureNextStep: LexModelsV2ClientTypes.DialogState? = nil,
            captureResponse: LexModelsV2ClientTypes.ResponseSpecification? = nil,
            codeHook: LexModelsV2ClientTypes.DialogCodeHookInvocationSetting? = nil,
            elicitationCodeHook: LexModelsV2ClientTypes.ElicitationCodeHookInvocationSetting? = nil,
            failureConditional: LexModelsV2ClientTypes.ConditionalSpecification? = nil,
            failureNextStep: LexModelsV2ClientTypes.DialogState? = nil,
            failureResponse: LexModelsV2ClientTypes.ResponseSpecification? = nil
        )
        {
            self.captureConditional = captureConditional
            self.captureNextStep = captureNextStep
            self.captureResponse = captureResponse
            self.codeHook = codeHook
            self.elicitationCodeHook = elicitationCodeHook
            self.failureConditional = failureConditional
            self.failureNextStep = failureNextStep
            self.failureResponse = failureResponse
        }
    }

}
