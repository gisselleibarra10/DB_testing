// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateBotInput: Swift.Equatable {
    /// The name of the bot. The bot name must be unique in the account that creates the bot.
    /// This member is required.
    public var botName: Swift.String?
    /// A list of tags to add to the bot. You can only add tags when you create a bot. You can't use the UpdateBot operation to update tags. To update tags, use the TagResource operation.
    public var botTags: [Swift.String:Swift.String]?
    /// Provides information on additional privacy protections Amazon Lex should use with the bot's data.
    /// This member is required.
    public var dataPrivacy: LexModelsV2ClientTypes.DataPrivacy?
    /// A description of the bot. It appears in lists to help you identify a particular bot.
    public var description: Swift.String?
    /// The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout. You can specify between 60 (1 minute) and 86,400 (24 hours) seconds.
    /// This member is required.
    public var idleSessionTTLInSeconds: Swift.Int?
    /// The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.
    /// This member is required.
    public var roleArn: Swift.String?
    /// A list of tags to add to the test alias for a bot. You can only add tags when you create a bot. You can't use the UpdateAlias operation to update tags. To update tags on the test alias, use the TagResource operation.
    public var testBotAliasTags: [Swift.String:Swift.String]?

    public init (
        botName: Swift.String? = nil,
        botTags: [Swift.String:Swift.String]? = nil,
        dataPrivacy: LexModelsV2ClientTypes.DataPrivacy? = nil,
        description: Swift.String? = nil,
        idleSessionTTLInSeconds: Swift.Int? = nil,
        roleArn: Swift.String? = nil,
        testBotAliasTags: [Swift.String:Swift.String]? = nil
    )
    {
        self.botName = botName
        self.botTags = botTags
        self.dataPrivacy = dataPrivacy
        self.description = description
        self.idleSessionTTLInSeconds = idleSessionTTLInSeconds
        self.roleArn = roleArn
        self.testBotAliasTags = testBotAliasTags
    }
}
