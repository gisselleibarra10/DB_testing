// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LexModelsV2ClientTypes {
    /// Determines if a Lambda function should be invoked for a specific intent.
    public struct FulfillmentCodeHookSettings: Swift.Equatable {
        /// Determines whether the fulfillment code hook is used. When active is false, the code hook doesn't run.
        public var active: Swift.Bool?
        /// Indicates whether a Lambda function should be invoked to fulfill a specific intent.
        /// This member is required.
        public var enabled: Swift.Bool
        /// Provides settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations.
        public var fulfillmentUpdatesSpecification: LexModelsV2ClientTypes.FulfillmentUpdatesSpecification?
        /// Provides settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations.
        public var postFulfillmentStatusSpecification: LexModelsV2ClientTypes.PostFulfillmentStatusSpecification?

        public init (
            active: Swift.Bool? = nil,
            enabled: Swift.Bool = false,
            fulfillmentUpdatesSpecification: LexModelsV2ClientTypes.FulfillmentUpdatesSpecification? = nil,
            postFulfillmentStatusSpecification: LexModelsV2ClientTypes.PostFulfillmentStatusSpecification? = nil
        )
        {
            self.active = active
            self.enabled = enabled
            self.fulfillmentUpdatesSpecification = fulfillmentUpdatesSpecification
            self.postFulfillmentStatusSpecification = postFulfillmentStatusSpecification
        }
    }

}
