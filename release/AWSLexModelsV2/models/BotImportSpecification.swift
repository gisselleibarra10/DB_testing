// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LexModelsV2ClientTypes {
    /// Provides the bot parameters required for importing a bot.
    public struct BotImportSpecification: Swift.Equatable {
        /// The name that Amazon Lex should use for the bot.
        /// This member is required.
        public var botName: Swift.String?
        /// A list of tags to add to the bot. You can only add tags when you import a bot. You can't use the UpdateBot operation to update tags. To update tags, use the TagResource operation.
        public var botTags: [Swift.String:Swift.String]?
        /// By default, data stored by Amazon Lex is encrypted. The DataPrivacy structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot.
        /// This member is required.
        public var dataPrivacy: LexModelsV2ClientTypes.DataPrivacy?
        /// The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout. You can specify between 60 (1 minute) and 86,400 (24 hours) seconds.
        public var idleSessionTTLInSeconds: Swift.Int?
        /// The Amazon Resource Name (ARN) of the IAM role used to build and run the bot.
        /// This member is required.
        public var roleArn: Swift.String?
        /// A list of tags to add to the test alias for a bot. You can only add tags when you import a bot. You can't use the UpdateAlias operation to update tags. To update tags on the test alias, use the TagResource operation.
        public var testBotAliasTags: [Swift.String:Swift.String]?

        public init (
            botName: Swift.String? = nil,
            botTags: [Swift.String:Swift.String]? = nil,
            dataPrivacy: LexModelsV2ClientTypes.DataPrivacy? = nil,
            idleSessionTTLInSeconds: Swift.Int? = nil,
            roleArn: Swift.String? = nil,
            testBotAliasTags: [Swift.String:Swift.String]? = nil
        )
        {
            self.botName = botName
            self.botTags = botTags
            self.dataPrivacy = dataPrivacy
            self.idleSessionTTLInSeconds = idleSessionTTLInSeconds
            self.roleArn = roleArn
            self.testBotAliasTags = testBotAliasTags
        }
    }

}
