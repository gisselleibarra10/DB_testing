// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.LambdaCodeHook: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case codeHookInterfaceVersion
        case lambdaARN
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let codeHookInterfaceVersion = self.codeHookInterfaceVersion {
            try encodeContainer.encode(codeHookInterfaceVersion, forKey: .codeHookInterfaceVersion)
        }
        if let lambdaARN = self.lambdaARN {
            try encodeContainer.encode(lambdaARN, forKey: .lambdaARN)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lambdaARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lambdaARN)
        lambdaARN = lambdaARNDecoded
        let codeHookInterfaceVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .codeHookInterfaceVersion)
        codeHookInterfaceVersion = codeHookInterfaceVersionDecoded
    }
}
