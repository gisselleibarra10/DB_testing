// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.PromptAttemptSpecification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowInterrupt
        case allowedInputTypes
        case audioAndDTMFInputSpecification
        case textInputSpecification
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allowInterrupt = self.allowInterrupt {
            try encodeContainer.encode(allowInterrupt, forKey: .allowInterrupt)
        }
        if let allowedInputTypes = self.allowedInputTypes {
            try encodeContainer.encode(allowedInputTypes, forKey: .allowedInputTypes)
        }
        if let audioAndDTMFInputSpecification = self.audioAndDTMFInputSpecification {
            try encodeContainer.encode(audioAndDTMFInputSpecification, forKey: .audioAndDTMFInputSpecification)
        }
        if let textInputSpecification = self.textInputSpecification {
            try encodeContainer.encode(textInputSpecification, forKey: .textInputSpecification)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allowInterruptDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .allowInterrupt)
        allowInterrupt = allowInterruptDecoded
        let allowedInputTypesDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.AllowedInputTypes.self, forKey: .allowedInputTypes)
        allowedInputTypes = allowedInputTypesDecoded
        let audioAndDTMFInputSpecificationDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.AudioAndDTMFInputSpecification.self, forKey: .audioAndDTMFInputSpecification)
        audioAndDTMFInputSpecification = audioAndDTMFInputSpecificationDecoded
        let textInputSpecificationDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.TextInputSpecification.self, forKey: .textInputSpecification)
        textInputSpecification = textInputSpecificationDecoded
    }
}
