// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateBotInput: Swift.Equatable {
    /// The unique identifier of the bot to update. This identifier is returned by the [CreateBot](https://docs.aws.amazon.com/lexv2/latest/dg/API_CreateBot.html) operation.
    /// This member is required.
    public var botId: Swift.String?
    /// The new name of the bot. The name must be unique in the account that creates the bot.
    /// This member is required.
    public var botName: Swift.String?
    /// Provides information on additional privacy protections Amazon Lex should use with the bot's data.
    /// This member is required.
    public var dataPrivacy: LexModelsV2ClientTypes.DataPrivacy?
    /// A description of the bot.
    public var description: Swift.String?
    /// The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout. You can specify between 60 (1 minute) and 86,400 (24 hours) seconds.
    /// This member is required.
    public var idleSessionTTLInSeconds: Swift.Int?
    /// The Amazon Resource Name (ARN) of an IAM role that has permissions to access the bot.
    /// This member is required.
    public var roleArn: Swift.String?

    public init (
        botId: Swift.String? = nil,
        botName: Swift.String? = nil,
        dataPrivacy: LexModelsV2ClientTypes.DataPrivacy? = nil,
        description: Swift.String? = nil,
        idleSessionTTLInSeconds: Swift.Int? = nil,
        roleArn: Swift.String? = nil
    )
    {
        self.botId = botId
        self.botName = botName
        self.dataPrivacy = dataPrivacy
        self.description = description
        self.idleSessionTTLInSeconds = idleSessionTTLInSeconds
        self.roleArn = roleArn
    }
}
