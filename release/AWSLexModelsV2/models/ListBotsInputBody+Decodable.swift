// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBotsInputBody: Swift.Equatable {
    let sortBy: LexModelsV2ClientTypes.BotSortBy?
    let filters: [LexModelsV2ClientTypes.BotFilter]?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension ListBotsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filters
        case maxResults
        case nextToken
        case sortBy
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sortByDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.BotSortBy.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let filtersContainer = try containerValues.decodeIfPresent([LexModelsV2ClientTypes.BotFilter?].self, forKey: .filters)
        var filtersDecoded0:[LexModelsV2ClientTypes.BotFilter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [LexModelsV2ClientTypes.BotFilter]()
            for structure0 in filtersContainer {
                if let structure0 = structure0 {
                    filtersDecoded0?.append(structure0)
                }
            }
        }
        filters = filtersDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
