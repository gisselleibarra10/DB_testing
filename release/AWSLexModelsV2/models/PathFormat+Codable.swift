// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.PathFormat: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case objectPrefixes
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let objectPrefixes = objectPrefixes {
            var objectPrefixesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .objectPrefixes)
            for objectprefixes0 in objectPrefixes {
                try objectPrefixesContainer.encode(objectprefixes0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let objectPrefixesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .objectPrefixes)
        var objectPrefixesDecoded0:[Swift.String]? = nil
        if let objectPrefixesContainer = objectPrefixesContainer {
            objectPrefixesDecoded0 = [Swift.String]()
            for string0 in objectPrefixesContainer {
                if let string0 = string0 {
                    objectPrefixesDecoded0?.append(string0)
                }
            }
        }
        objectPrefixes = objectPrefixesDecoded0
    }
}
