// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.ImportResourceSpecification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case botImportSpecification
        case botLocaleImportSpecification
        case customVocabularyImportSpecification
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let botImportSpecification = self.botImportSpecification {
            try encodeContainer.encode(botImportSpecification, forKey: .botImportSpecification)
        }
        if let botLocaleImportSpecification = self.botLocaleImportSpecification {
            try encodeContainer.encode(botLocaleImportSpecification, forKey: .botLocaleImportSpecification)
        }
        if let customVocabularyImportSpecification = self.customVocabularyImportSpecification {
            try encodeContainer.encode(customVocabularyImportSpecification, forKey: .customVocabularyImportSpecification)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botImportSpecificationDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.BotImportSpecification.self, forKey: .botImportSpecification)
        botImportSpecification = botImportSpecificationDecoded
        let botLocaleImportSpecificationDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.BotLocaleImportSpecification.self, forKey: .botLocaleImportSpecification)
        botLocaleImportSpecification = botLocaleImportSpecificationDecoded
        let customVocabularyImportSpecificationDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.CustomVocabularyImportSpecification.self, forKey: .customVocabularyImportSpecification)
        customVocabularyImportSpecification = customVocabularyImportSpecificationDecoded
    }
}
