// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.RecommendedIntentSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case intentId
        case intentName
        case sampleUtterancesCount
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let intentId = self.intentId {
            try encodeContainer.encode(intentId, forKey: .intentId)
        }
        if let intentName = self.intentName {
            try encodeContainer.encode(intentName, forKey: .intentName)
        }
        if let sampleUtterancesCount = self.sampleUtterancesCount {
            try encodeContainer.encode(sampleUtterancesCount, forKey: .sampleUtterancesCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let intentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .intentId)
        intentId = intentIdDecoded
        let intentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .intentName)
        intentName = intentNameDecoded
        let sampleUtterancesCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sampleUtterancesCount)
        sampleUtterancesCount = sampleUtterancesCountDecoded
    }
}
