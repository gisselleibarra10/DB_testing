// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListAggregatedUtterancesOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: ListAggregatedUtterancesOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.aggregatedUtterancesSummaries = output.aggregatedUtterancesSummaries
            self.aggregationDuration = output.aggregationDuration
            self.aggregationLastRefreshedDateTime = output.aggregationLastRefreshedDateTime
            self.aggregationWindowEndTime = output.aggregationWindowEndTime
            self.aggregationWindowStartTime = output.aggregationWindowStartTime
            self.botAliasId = output.botAliasId
            self.botId = output.botId
            self.botVersion = output.botVersion
            self.localeId = output.localeId
            self.nextToken = output.nextToken
        } else {
            self.aggregatedUtterancesSummaries = nil
            self.aggregationDuration = nil
            self.aggregationLastRefreshedDateTime = nil
            self.aggregationWindowEndTime = nil
            self.aggregationWindowStartTime = nil
            self.botAliasId = nil
            self.botId = nil
            self.botVersion = nil
            self.localeId = nil
            self.nextToken = nil
        }
    }
}
