// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSlotsOutputResponseBody: Swift.Equatable {
    let botId: Swift.String?
    let botVersion: Swift.String?
    let localeId: Swift.String?
    let intentId: Swift.String?
    let slotSummaries: [LexModelsV2ClientTypes.SlotSummary]?
    let nextToken: Swift.String?
}

extension ListSlotsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case botId
        case botVersion
        case intentId
        case localeId
        case nextToken
        case slotSummaries
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botId)
        botId = botIdDecoded
        let botVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botVersion)
        botVersion = botVersionDecoded
        let localeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .localeId)
        localeId = localeIdDecoded
        let intentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .intentId)
        intentId = intentIdDecoded
        let slotSummariesContainer = try containerValues.decodeIfPresent([LexModelsV2ClientTypes.SlotSummary?].self, forKey: .slotSummaries)
        var slotSummariesDecoded0:[LexModelsV2ClientTypes.SlotSummary]? = nil
        if let slotSummariesContainer = slotSummariesContainer {
            slotSummariesDecoded0 = [LexModelsV2ClientTypes.SlotSummary]()
            for structure0 in slotSummariesContainer {
                if let structure0 = structure0 {
                    slotSummariesDecoded0?.append(structure0)
                }
            }
        }
        slotSummaries = slotSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
