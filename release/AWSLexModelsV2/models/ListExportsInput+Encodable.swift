// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListExportsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case botId
        case botVersion
        case filters
        case localeId
        case maxResults
        case nextToken
        case sortBy
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let botId = self.botId {
            try encodeContainer.encode(botId, forKey: .botId)
        }
        if let botVersion = self.botVersion {
            try encodeContainer.encode(botVersion, forKey: .botVersion)
        }
        if let filters = filters {
            var filtersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filters)
            for exportfilters0 in filters {
                try filtersContainer.encode(exportfilters0)
            }
        }
        if let localeId = self.localeId {
            try encodeContainer.encode(localeId, forKey: .localeId)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let sortBy = self.sortBy {
            try encodeContainer.encode(sortBy, forKey: .sortBy)
        }
    }
}
