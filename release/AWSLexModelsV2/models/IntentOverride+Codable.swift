// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.IntentOverride: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name
        case slots
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let slots = slots {
            var slotsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .slots)
            for (dictKey0, slotvalueoverridemap0) in slots {
                try slotsContainer.encode(slotvalueoverridemap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let slotsContainer = try containerValues.decodeIfPresent([Swift.String: LexModelsV2ClientTypes.SlotValueOverride?].self, forKey: .slots)
        var slotsDecoded0: [Swift.String:LexModelsV2ClientTypes.SlotValueOverride]? = nil
        if let slotsContainer = slotsContainer {
            slotsDecoded0 = [Swift.String:LexModelsV2ClientTypes.SlotValueOverride]()
            for (key0, slotvalueoverride0) in slotsContainer {
                if let slotvalueoverride0 = slotvalueoverride0 {
                    slotsDecoded0?[key0] = slotvalueoverride0
                }
            }
        }
        slots = slotsDecoded0
    }
}
