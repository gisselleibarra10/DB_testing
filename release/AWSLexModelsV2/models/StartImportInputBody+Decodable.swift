// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartImportInputBody: Swift.Equatable {
    let importId: Swift.String?
    let resourceSpecification: LexModelsV2ClientTypes.ImportResourceSpecification?
    let mergeStrategy: LexModelsV2ClientTypes.MergeStrategy?
    let filePassword: Swift.String?
}

extension StartImportInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filePassword
        case importId
        case mergeStrategy
        case resourceSpecification
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let importIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .importId)
        importId = importIdDecoded
        let resourceSpecificationDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.ImportResourceSpecification.self, forKey: .resourceSpecification)
        resourceSpecification = resourceSpecificationDecoded
        let mergeStrategyDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.MergeStrategy.self, forKey: .mergeStrategy)
        mergeStrategy = mergeStrategyDecoded
        let filePasswordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filePassword)
        filePassword = filePasswordDecoded
    }
}
