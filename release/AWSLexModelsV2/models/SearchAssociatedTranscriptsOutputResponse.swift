// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SearchAssociatedTranscriptsOutputResponse: Swift.Equatable {
    /// The object that contains the associated transcript that meet the criteria you specified.
    public var associatedTranscripts: [LexModelsV2ClientTypes.AssociatedTranscript]?
    /// The unique identifier of the bot associated with the transcripts that you are searching.
    public var botId: Swift.String?
    /// The unique identifier of the bot recommendation associated with the transcripts to search.
    public var botRecommendationId: Swift.String?
    /// The version of the bot containing the transcripts that you are searching.
    public var botVersion: Swift.String?
    /// The identifier of the language and locale of the transcripts to search. The string must match one of the supported locales. For more information, see [Supported languages](https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
    public var localeId: Swift.String?
    /// A index that indicates whether there are more results to return in a response to the SearchAssociatedTranscripts operation. If the nextIndex field is present, you send the contents as the nextIndex parameter of a SearchAssociatedTranscriptsRequest operation to get the next page of results.
    public var nextIndex: Swift.Int?
    /// The total number of transcripts returned by the search.
    public var totalResults: Swift.Int?

    public init (
        associatedTranscripts: [LexModelsV2ClientTypes.AssociatedTranscript]? = nil,
        botId: Swift.String? = nil,
        botRecommendationId: Swift.String? = nil,
        botVersion: Swift.String? = nil,
        localeId: Swift.String? = nil,
        nextIndex: Swift.Int? = nil,
        totalResults: Swift.Int? = nil
    )
    {
        self.associatedTranscripts = associatedTranscripts
        self.botId = botId
        self.botRecommendationId = botRecommendationId
        self.botVersion = botVersion
        self.localeId = localeId
        self.nextIndex = nextIndex
        self.totalResults = totalResults
    }
}
