// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.EncryptionSetting: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associatedTranscriptsPassword
        case botLocaleExportPassword
        case kmsKeyArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let associatedTranscriptsPassword = self.associatedTranscriptsPassword {
            try encodeContainer.encode(associatedTranscriptsPassword, forKey: .associatedTranscriptsPassword)
        }
        if let botLocaleExportPassword = self.botLocaleExportPassword {
            try encodeContainer.encode(botLocaleExportPassword, forKey: .botLocaleExportPassword)
        }
        if let kmsKeyArn = self.kmsKeyArn {
            try encodeContainer.encode(kmsKeyArn, forKey: .kmsKeyArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
        let botLocaleExportPasswordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botLocaleExportPassword)
        botLocaleExportPassword = botLocaleExportPasswordDecoded
        let associatedTranscriptsPasswordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .associatedTranscriptsPassword)
        associatedTranscriptsPassword = associatedTranscriptsPasswordDecoded
    }
}
