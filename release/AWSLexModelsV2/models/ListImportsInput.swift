// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListImportsInput: Swift.Equatable {
    /// The unique identifier that Amazon Lex assigned to the bot.
    public var botId: Swift.String?
    /// The version of the bot to list imports for.
    public var botVersion: Swift.String?
    /// Provides the specification of a filter used to limit the bots in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.
    public var filters: [LexModelsV2ClientTypes.ImportFilter]?
    /// Specifies the locale that should be present in the list. If you don't specify a resource type in the filters parameter, the list contains both bot locales and custom vocabularies.
    public var localeId: Swift.String?
    /// The maximum number of imports to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.
    public var maxResults: Swift.Int?
    /// If the response from the ListImports operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use the returned token in the nextToken parameter of a ListImports request to return the next page of results. For a complete set of results, call the ListImports operation until the nextToken returned in the response is null.
    public var nextToken: Swift.String?
    /// Determines the field that the list of imports is sorted by. You can sort by the LastUpdatedDateTime field in ascending or descending order.
    public var sortBy: LexModelsV2ClientTypes.ImportSortBy?

    public init (
        botId: Swift.String? = nil,
        botVersion: Swift.String? = nil,
        filters: [LexModelsV2ClientTypes.ImportFilter]? = nil,
        localeId: Swift.String? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        sortBy: LexModelsV2ClientTypes.ImportSortBy? = nil
    )
    {
        self.botId = botId
        self.botVersion = botVersion
        self.filters = filters
        self.localeId = localeId
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.sortBy = sortBy
    }
}
