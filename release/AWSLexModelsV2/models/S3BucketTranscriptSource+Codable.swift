// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.S3BucketTranscriptSource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case kmsKeyArn
        case pathFormat
        case s3BucketName
        case transcriptFilter
        case transcriptFormat
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kmsKeyArn = self.kmsKeyArn {
            try encodeContainer.encode(kmsKeyArn, forKey: .kmsKeyArn)
        }
        if let pathFormat = self.pathFormat {
            try encodeContainer.encode(pathFormat, forKey: .pathFormat)
        }
        if let s3BucketName = self.s3BucketName {
            try encodeContainer.encode(s3BucketName, forKey: .s3BucketName)
        }
        if let transcriptFilter = self.transcriptFilter {
            try encodeContainer.encode(transcriptFilter, forKey: .transcriptFilter)
        }
        if let transcriptFormat = self.transcriptFormat {
            try encodeContainer.encode(transcriptFormat.rawValue, forKey: .transcriptFormat)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3BucketNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3BucketName)
        s3BucketName = s3BucketNameDecoded
        let pathFormatDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.PathFormat.self, forKey: .pathFormat)
        pathFormat = pathFormatDecoded
        let transcriptFormatDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.TranscriptFormat.self, forKey: .transcriptFormat)
        transcriptFormat = transcriptFormatDecoded
        let transcriptFilterDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.TranscriptFilter.self, forKey: .transcriptFilter)
        transcriptFilter = transcriptFilterDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
    }
}
