// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateSlotInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description
        case multipleValuesSetting
        case obfuscationSetting
        case slotName
        case slotTypeId
        case subSlotSetting
        case valueElicitationSetting
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let multipleValuesSetting = self.multipleValuesSetting {
            try encodeContainer.encode(multipleValuesSetting, forKey: .multipleValuesSetting)
        }
        if let obfuscationSetting = self.obfuscationSetting {
            try encodeContainer.encode(obfuscationSetting, forKey: .obfuscationSetting)
        }
        if let slotName = self.slotName {
            try encodeContainer.encode(slotName, forKey: .slotName)
        }
        if let slotTypeId = self.slotTypeId {
            try encodeContainer.encode(slotTypeId, forKey: .slotTypeId)
        }
        if let subSlotSetting = self.subSlotSetting {
            try encodeContainer.encode(subSlotSetting, forKey: .subSlotSetting)
        }
        if let valueElicitationSetting = self.valueElicitationSetting {
            try encodeContainer.encode(valueElicitationSetting, forKey: .valueElicitationSetting)
        }
    }
}
