// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.BotRecommendationResults: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associatedTranscriptsUrl
        case botLocaleExportUrl
        case statistics
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let associatedTranscriptsUrl = self.associatedTranscriptsUrl {
            try encodeContainer.encode(associatedTranscriptsUrl, forKey: .associatedTranscriptsUrl)
        }
        if let botLocaleExportUrl = self.botLocaleExportUrl {
            try encodeContainer.encode(botLocaleExportUrl, forKey: .botLocaleExportUrl)
        }
        if let statistics = self.statistics {
            try encodeContainer.encode(statistics, forKey: .statistics)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botLocaleExportUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .botLocaleExportUrl)
        botLocaleExportUrl = botLocaleExportUrlDecoded
        let associatedTranscriptsUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .associatedTranscriptsUrl)
        associatedTranscriptsUrl = associatedTranscriptsUrlDecoded
        let statisticsDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.BotRecommendationResultStatistics.self, forKey: .statistics)
        statistics = statisticsDecoded
    }
}
