// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.DefaultConditionalBranch: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextStep
        case response
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let nextStep = self.nextStep {
            try encodeContainer.encode(nextStep, forKey: .nextStep)
        }
        if let response = self.response {
            try encodeContainer.encode(response, forKey: .response)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextStepDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.DialogState.self, forKey: .nextStep)
        nextStep = nextStepDecoded
        let responseDecoded = try containerValues.decodeIfPresent(LexModelsV2ClientTypes.ResponseSpecification.self, forKey: .response)
        response = responseDecoded
    }
}
