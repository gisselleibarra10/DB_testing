// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexModelsV2ClientTypes.ElicitationCodeHookInvocationSetting: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enableCodeHookInvocation
        case invocationLabel
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let enableCodeHookInvocation = self.enableCodeHookInvocation {
            try encodeContainer.encode(enableCodeHookInvocation, forKey: .enableCodeHookInvocation)
        }
        if let invocationLabel = self.invocationLabel {
            try encodeContainer.encode(invocationLabel, forKey: .invocationLabel)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enableCodeHookInvocationDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableCodeHookInvocation)
        enableCodeHookInvocation = enableCodeHookInvocationDecoded
        let invocationLabelDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .invocationLabel)
        invocationLabel = invocationLabelDecoded
    }
}
