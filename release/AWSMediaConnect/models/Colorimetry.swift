// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConnectClientTypes {
    public enum Colorimetry: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case bt2020
        case bt2100
        case bt601
        case bt709
        case st20651
        case st20653
        case xyz
        case sdkUnknown(Swift.String)

        public static var allCases: [Colorimetry] {
            return [
                .bt2020,
                .bt2100,
                .bt601,
                .bt709,
                .st20651,
                .st20653,
                .xyz,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .bt2020: return "BT2020"
            case .bt2100: return "BT2100"
            case .bt601: return "BT601"
            case .bt709: return "BT709"
            case .st20651: return "ST2065-1"
            case .st20653: return "ST2065-3"
            case .xyz: return "XYZ"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = Colorimetry(rawValue: rawValue) ?? Colorimetry.sdkUnknown(rawValue)
        }
    }
}
