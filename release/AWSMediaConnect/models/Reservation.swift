// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConnectClientTypes {
    /// A pricing agreement for a discounted rate for a specific outbound bandwidth that your MediaConnect account will use each month over a specific time period. The discounted rate in the reservation applies to outbound bandwidth for all flows from your account until your account reaches the amount of bandwidth in your reservation. If you use more outbound bandwidth than the agreed upon amount in a single month, the overage is charged at the on-demand rate.
    public struct Reservation: Swift.Equatable {
        /// The type of currency that is used for billing. The currencyCode used for your reservation is US dollars.
        /// This member is required.
        public var currencyCode: Swift.String?
        /// The length of time that this reservation is active. MediaConnect defines this value in the offering.
        /// This member is required.
        public var duration: Swift.Int?
        /// The unit of measurement for the duration of the reservation. MediaConnect defines this value in the offering.
        /// This member is required.
        public var durationUnits: MediaConnectClientTypes.DurationUnits?
        /// The day and time that this reservation expires. This value is calculated based on the start date and time that you set and the offering's duration.
        /// This member is required.
        public var end: Swift.String?
        /// The Amazon Resource Name (ARN) that MediaConnect assigns to the offering.
        /// This member is required.
        public var offeringArn: Swift.String?
        /// A description of the offering. MediaConnect defines this value in the offering.
        /// This member is required.
        public var offeringDescription: Swift.String?
        /// The cost of a single unit. This value, in combination with priceUnits, makes up the rate. MediaConnect defines this value in the offering.
        /// This member is required.
        public var pricePerUnit: Swift.String?
        /// The unit of measurement that is used for billing. This value, in combination with pricePerUnit, makes up the rate. MediaConnect defines this value in the offering.
        /// This member is required.
        public var priceUnits: MediaConnectClientTypes.PriceUnits?
        /// The Amazon Resource Name (ARN) that MediaConnect assigns to the reservation when you purchase an offering.
        /// This member is required.
        public var reservationArn: Swift.String?
        /// The name that you assigned to the reservation when you purchased the offering.
        /// This member is required.
        public var reservationName: Swift.String?
        /// The status of your reservation.
        /// This member is required.
        public var reservationState: MediaConnectClientTypes.ReservationState?
        /// A definition of the amount of outbound bandwidth that you would be reserving if you purchase the offering. MediaConnect defines the values that make up the resourceSpecification in the offering.
        /// This member is required.
        public var resourceSpecification: MediaConnectClientTypes.ResourceSpecification?
        /// The day and time that the reservation becomes active. You set this value when you purchase the offering.
        /// This member is required.
        public var start: Swift.String?

        public init (
            currencyCode: Swift.String? = nil,
            duration: Swift.Int? = nil,
            durationUnits: MediaConnectClientTypes.DurationUnits? = nil,
            end: Swift.String? = nil,
            offeringArn: Swift.String? = nil,
            offeringDescription: Swift.String? = nil,
            pricePerUnit: Swift.String? = nil,
            priceUnits: MediaConnectClientTypes.PriceUnits? = nil,
            reservationArn: Swift.String? = nil,
            reservationName: Swift.String? = nil,
            reservationState: MediaConnectClientTypes.ReservationState? = nil,
            resourceSpecification: MediaConnectClientTypes.ResourceSpecification? = nil,
            start: Swift.String? = nil
        )
        {
            self.currencyCode = currencyCode
            self.duration = duration
            self.durationUnits = durationUnits
            self.end = end
            self.offeringArn = offeringArn
            self.offeringDescription = offeringDescription
            self.pricePerUnit = pricePerUnit
            self.priceUnits = priceUnits
            self.reservationArn = reservationArn
            self.reservationName = reservationName
            self.reservationState = reservationState
            self.resourceSpecification = resourceSpecification
            self.start = start
        }
    }

}
