// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConnectClientTypes.EncodingParametersRequest: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case compressionFactor = "compressionFactor"
        case encoderProfile = "encoderProfile"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let compressionFactor = self.compressionFactor {
            try encodeContainer.encode(compressionFactor, forKey: .compressionFactor)
        }
        if let encoderProfile = self.encoderProfile {
            try encodeContainer.encode(encoderProfile.rawValue, forKey: .encoderProfile)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let compressionFactorDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .compressionFactor)
        compressionFactor = compressionFactorDecoded
        let encoderProfileDecoded = try containerValues.decodeIfPresent(MediaConnectClientTypes.EncoderProfile.self, forKey: .encoderProfile)
        encoderProfile = encoderProfileDecoded
    }
}
