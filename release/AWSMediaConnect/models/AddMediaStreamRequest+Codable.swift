// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConnectClientTypes.AddMediaStreamRequest: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributes = "attributes"
        case clockRate = "clockRate"
        case description = "description"
        case mediaStreamId = "mediaStreamId"
        case mediaStreamName = "mediaStreamName"
        case mediaStreamType = "mediaStreamType"
        case videoFormat = "videoFormat"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributes = self.attributes {
            try encodeContainer.encode(attributes, forKey: .attributes)
        }
        if let clockRate = self.clockRate {
            try encodeContainer.encode(clockRate, forKey: .clockRate)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let mediaStreamId = self.mediaStreamId {
            try encodeContainer.encode(mediaStreamId, forKey: .mediaStreamId)
        }
        if let mediaStreamName = self.mediaStreamName {
            try encodeContainer.encode(mediaStreamName, forKey: .mediaStreamName)
        }
        if let mediaStreamType = self.mediaStreamType {
            try encodeContainer.encode(mediaStreamType.rawValue, forKey: .mediaStreamType)
        }
        if let videoFormat = self.videoFormat {
            try encodeContainer.encode(videoFormat, forKey: .videoFormat)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributesDecoded = try containerValues.decodeIfPresent(MediaConnectClientTypes.MediaStreamAttributesRequest.self, forKey: .attributes)
        attributes = attributesDecoded
        let clockRateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .clockRate)
        clockRate = clockRateDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let mediaStreamIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .mediaStreamId)
        mediaStreamId = mediaStreamIdDecoded
        let mediaStreamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mediaStreamName)
        mediaStreamName = mediaStreamNameDecoded
        let mediaStreamTypeDecoded = try containerValues.decodeIfPresent(MediaConnectClientTypes.MediaStreamType.self, forKey: .mediaStreamType)
        mediaStreamType = mediaStreamTypeDecoded
        let videoFormatDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .videoFormat)
        videoFormat = videoFormatDecoded
    }
}
