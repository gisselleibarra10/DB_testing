// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateFlowEntitlementInputBody: Swift.Equatable {
    let description: Swift.String?
    let encryption: MediaConnectClientTypes.UpdateEncryption?
    let entitlementStatus: MediaConnectClientTypes.EntitlementStatus?
    let subscribers: [Swift.String]?
}

extension UpdateFlowEntitlementInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "description"
        case encryption = "encryption"
        case entitlementStatus = "entitlementStatus"
        case subscribers = "subscribers"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let encryptionDecoded = try containerValues.decodeIfPresent(MediaConnectClientTypes.UpdateEncryption.self, forKey: .encryption)
        encryption = encryptionDecoded
        let entitlementStatusDecoded = try containerValues.decodeIfPresent(MediaConnectClientTypes.EntitlementStatus.self, forKey: .entitlementStatus)
        entitlementStatus = entitlementStatusDecoded
        let subscribersContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .subscribers)
        var subscribersDecoded0:[Swift.String]? = nil
        if let subscribersContainer = subscribersContainer {
            subscribersDecoded0 = [Swift.String]()
            for string0 in subscribersContainer {
                if let string0 = string0 {
                    subscribersDecoded0?.append(string0)
                }
            }
        }
        subscribers = subscribersDecoded0
    }
}
