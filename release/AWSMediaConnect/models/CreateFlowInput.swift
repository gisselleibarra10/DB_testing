// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).
public struct CreateFlowInput: Swift.Equatable {
    /// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS Region.
    public var availabilityZone: Swift.String?
    /// The entitlements that you want to grant on a flow.
    public var entitlements: [MediaConnectClientTypes.GrantEntitlementRequest]?
    /// Create maintenance setting for a flow
    public var maintenance: MediaConnectClientTypes.AddMaintenance?
    /// The media streams that you want to add to the flow. You can associate these media streams with sources and outputs on the flow.
    public var mediaStreams: [MediaConnectClientTypes.AddMediaStreamRequest]?
    /// The name of the flow.
    /// This member is required.
    public var name: Swift.String?
    /// The outputs that you want to add to this flow.
    public var outputs: [MediaConnectClientTypes.AddOutputRequest]?
    /// The settings for the source of the flow.
    public var source: MediaConnectClientTypes.SetSourceRequest?
    /// The settings for source failover.
    public var sourceFailoverConfig: MediaConnectClientTypes.FailoverConfig?
    public var sources: [MediaConnectClientTypes.SetSourceRequest]?
    /// The VPC interfaces you want on the flow.
    public var vpcInterfaces: [MediaConnectClientTypes.VpcInterfaceRequest]?

    public init (
        availabilityZone: Swift.String? = nil,
        entitlements: [MediaConnectClientTypes.GrantEntitlementRequest]? = nil,
        maintenance: MediaConnectClientTypes.AddMaintenance? = nil,
        mediaStreams: [MediaConnectClientTypes.AddMediaStreamRequest]? = nil,
        name: Swift.String? = nil,
        outputs: [MediaConnectClientTypes.AddOutputRequest]? = nil,
        source: MediaConnectClientTypes.SetSourceRequest? = nil,
        sourceFailoverConfig: MediaConnectClientTypes.FailoverConfig? = nil,
        sources: [MediaConnectClientTypes.SetSourceRequest]? = nil,
        vpcInterfaces: [MediaConnectClientTypes.VpcInterfaceRequest]? = nil
    )
    {
        self.availabilityZone = availabilityZone
        self.entitlements = entitlements
        self.maintenance = maintenance
        self.mediaStreams = mediaStreams
        self.name = name
        self.outputs = outputs
        self.source = source
        self.sourceFailoverConfig = sourceFailoverConfig
        self.sources = sources
        self.vpcInterfaces = vpcInterfaces
    }
}
