// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConnectClientTypes {
    public enum ModelProtocol: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case cdi
        case fujitsuQos
        case rist
        case rtp
        case rtpFec
        case srtCaller
        case srtListener
        case st2110Jpegxs
        case zixiPull
        case zixiPush
        case sdkUnknown(Swift.String)

        public static var allCases: [ModelProtocol] {
            return [
                .cdi,
                .fujitsuQos,
                .rist,
                .rtp,
                .rtpFec,
                .srtCaller,
                .srtListener,
                .st2110Jpegxs,
                .zixiPull,
                .zixiPush,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .cdi: return "cdi"
            case .fujitsuQos: return "fujitsu-qos"
            case .rist: return "rist"
            case .rtp: return "rtp"
            case .rtpFec: return "rtp-fec"
            case .srtCaller: return "srt-caller"
            case .srtListener: return "srt-listener"
            case .st2110Jpegxs: return "st2110-jpegxs"
            case .zixiPull: return "zixi-pull"
            case .zixiPush: return "zixi-push"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ModelProtocol(rawValue: rawValue) ?? ModelProtocol.sdkUnknown(rawValue)
        }
    }
}
