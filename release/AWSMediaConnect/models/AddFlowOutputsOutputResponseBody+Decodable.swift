// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddFlowOutputsOutputResponseBody: Swift.Equatable {
    let flowArn: Swift.String?
    let outputs: [MediaConnectClientTypes.Output]?
}

extension AddFlowOutputsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case flowArn = "flowArn"
        case outputs = "outputs"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .flowArn)
        flowArn = flowArnDecoded
        let outputsContainer = try containerValues.decodeIfPresent([MediaConnectClientTypes.Output?].self, forKey: .outputs)
        var outputsDecoded0:[MediaConnectClientTypes.Output]? = nil
        if let outputsContainer = outputsContainer {
            outputsDecoded0 = [MediaConnectClientTypes.Output]()
            for structure0 in outputsContainer {
                if let structure0 = structure0 {
                    outputsDecoded0?.append(structure0)
                }
            }
        }
        outputs = outputsDecoded0
    }
}
