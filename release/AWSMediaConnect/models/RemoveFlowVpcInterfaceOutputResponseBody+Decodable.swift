// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RemoveFlowVpcInterfaceOutputResponseBody: Swift.Equatable {
    let flowArn: Swift.String?
    let nonDeletedNetworkInterfaceIds: [Swift.String]?
    let vpcInterfaceName: Swift.String?
}

extension RemoveFlowVpcInterfaceOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case flowArn = "flowArn"
        case nonDeletedNetworkInterfaceIds = "nonDeletedNetworkInterfaceIds"
        case vpcInterfaceName = "vpcInterfaceName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .flowArn)
        flowArn = flowArnDecoded
        let nonDeletedNetworkInterfaceIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .nonDeletedNetworkInterfaceIds)
        var nonDeletedNetworkInterfaceIdsDecoded0:[Swift.String]? = nil
        if let nonDeletedNetworkInterfaceIdsContainer = nonDeletedNetworkInterfaceIdsContainer {
            nonDeletedNetworkInterfaceIdsDecoded0 = [Swift.String]()
            for string0 in nonDeletedNetworkInterfaceIdsContainer {
                if let string0 = string0 {
                    nonDeletedNetworkInterfaceIdsDecoded0?.append(string0)
                }
            }
        }
        nonDeletedNetworkInterfaceIds = nonDeletedNetworkInterfaceIdsDecoded0
        let vpcInterfaceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpcInterfaceName)
        vpcInterfaceName = vpcInterfaceNameDecoded
    }
}
