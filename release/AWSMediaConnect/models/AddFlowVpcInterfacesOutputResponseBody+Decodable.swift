// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddFlowVpcInterfacesOutputResponseBody: Swift.Equatable {
    let flowArn: Swift.String?
    let vpcInterfaces: [MediaConnectClientTypes.VpcInterface]?
}

extension AddFlowVpcInterfacesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case flowArn = "flowArn"
        case vpcInterfaces = "vpcInterfaces"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .flowArn)
        flowArn = flowArnDecoded
        let vpcInterfacesContainer = try containerValues.decodeIfPresent([MediaConnectClientTypes.VpcInterface?].self, forKey: .vpcInterfaces)
        var vpcInterfacesDecoded0:[MediaConnectClientTypes.VpcInterface]? = nil
        if let vpcInterfacesContainer = vpcInterfacesContainer {
            vpcInterfacesDecoded0 = [MediaConnectClientTypes.VpcInterface]()
            for structure0 in vpcInterfacesContainer {
                if let structure0 = structure0 {
                    vpcInterfacesDecoded0?.append(structure0)
                }
            }
        }
        vpcInterfaces = vpcInterfacesDecoded0
    }
}
