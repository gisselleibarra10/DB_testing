// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReservedInstanceOfferingsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let reservedInstanceOfferings: [OpenSearchClientTypes.ReservedInstanceOffering]?
}

extension DescribeReservedInstanceOfferingsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case reservedInstanceOfferings = "ReservedInstanceOfferings"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let reservedInstanceOfferingsContainer = try containerValues.decodeIfPresent([OpenSearchClientTypes.ReservedInstanceOffering?].self, forKey: .reservedInstanceOfferings)
        var reservedInstanceOfferingsDecoded0:[OpenSearchClientTypes.ReservedInstanceOffering]? = nil
        if let reservedInstanceOfferingsContainer = reservedInstanceOfferingsContainer {
            reservedInstanceOfferingsDecoded0 = [OpenSearchClientTypes.ReservedInstanceOffering]()
            for structure0 in reservedInstanceOfferingsContainer {
                if let structure0 = structure0 {
                    reservedInstanceOfferingsDecoded0?.append(structure0)
                }
            }
        }
        reservedInstanceOfferings = reservedInstanceOfferingsDecoded0
    }
}
