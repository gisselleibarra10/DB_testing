// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReservedInstancesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let reservedInstances: [OpenSearchClientTypes.ReservedInstance]?
}

extension DescribeReservedInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case reservedInstances = "ReservedInstances"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let reservedInstancesContainer = try containerValues.decodeIfPresent([OpenSearchClientTypes.ReservedInstance?].self, forKey: .reservedInstances)
        var reservedInstancesDecoded0:[OpenSearchClientTypes.ReservedInstance]? = nil
        if let reservedInstancesContainer = reservedInstancesContainer {
            reservedInstancesDecoded0 = [OpenSearchClientTypes.ReservedInstance]()
            for structure0 in reservedInstancesContainer {
                if let structure0 = structure0 {
                    reservedInstancesDecoded0?.append(structure0)
                }
            }
        }
        reservedInstances = reservedInstancesDecoded0
    }
}
