// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpgradeDomainOutputResponseBody: Swift.Equatable {
    let upgradeId: Swift.String?
    let domainName: Swift.String?
    let targetVersion: Swift.String?
    let performCheckOnly: Swift.Bool?
    let advancedOptions: [Swift.String:Swift.String]?
    let changeProgressDetails: OpenSearchClientTypes.ChangeProgressDetails?
}

extension UpgradeDomainOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case advancedOptions = "AdvancedOptions"
        case changeProgressDetails = "ChangeProgressDetails"
        case domainName = "DomainName"
        case performCheckOnly = "PerformCheckOnly"
        case targetVersion = "TargetVersion"
        case upgradeId = "UpgradeId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let upgradeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .upgradeId)
        upgradeId = upgradeIdDecoded
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let targetVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetVersion)
        targetVersion = targetVersionDecoded
        let performCheckOnlyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .performCheckOnly)
        performCheckOnly = performCheckOnlyDecoded
        let advancedOptionsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .advancedOptions)
        var advancedOptionsDecoded0: [Swift.String:Swift.String]? = nil
        if let advancedOptionsContainer = advancedOptionsContainer {
            advancedOptionsDecoded0 = [Swift.String:Swift.String]()
            for (key0, string0) in advancedOptionsContainer {
                if let string0 = string0 {
                    advancedOptionsDecoded0?[key0] = string0
                }
            }
        }
        advancedOptions = advancedOptionsDecoded0
        let changeProgressDetailsDecoded = try containerValues.decodeIfPresent(OpenSearchClientTypes.ChangeProgressDetails.self, forKey: .changeProgressDetails)
        changeProgressDetails = changeProgressDetailsDecoded
    }
}
