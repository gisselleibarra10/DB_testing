// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCompatibleVersionsOutputResponseBody: Swift.Equatable {
    let compatibleVersions: [OpenSearchClientTypes.CompatibleVersionsMap]?
}

extension GetCompatibleVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case compatibleVersions = "CompatibleVersions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let compatibleVersionsContainer = try containerValues.decodeIfPresent([OpenSearchClientTypes.CompatibleVersionsMap?].self, forKey: .compatibleVersions)
        var compatibleVersionsDecoded0:[OpenSearchClientTypes.CompatibleVersionsMap]? = nil
        if let compatibleVersionsContainer = compatibleVersionsContainer {
            compatibleVersionsDecoded0 = [OpenSearchClientTypes.CompatibleVersionsMap]()
            for structure0 in compatibleVersionsContainer {
                if let structure0 = structure0 {
                    compatibleVersionsDecoded0?.append(structure0)
                }
            }
        }
        compatibleVersions = compatibleVersionsDecoded0
    }
}
