// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpgradeDomainInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case advancedOptions = "AdvancedOptions"
        case domainName = "DomainName"
        case performCheckOnly = "PerformCheckOnly"
        case targetVersion = "TargetVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let advancedOptions = advancedOptions {
            var advancedOptionsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .advancedOptions)
            for (dictKey0, advancedoptions0) in advancedOptions {
                try advancedOptionsContainer.encode(advancedoptions0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let domainName = self.domainName {
            try encodeContainer.encode(domainName, forKey: .domainName)
        }
        if let performCheckOnly = self.performCheckOnly {
            try encodeContainer.encode(performCheckOnly, forKey: .performCheckOnly)
        }
        if let targetVersion = self.targetVersion {
            try encodeContainer.encode(targetVersion, forKey: .targetVersion)
        }
    }
}
