// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension OpenSearchClientTypes {
    /// The configuration for the domain cluster, such as the type and number of instances.
    public struct ClusterConfig: Swift.Equatable {
        /// Specifies the ColdStorageOptions config for a Domain
        public var coldStorageOptions: OpenSearchClientTypes.ColdStorageOptions?
        /// Total number of dedicated master nodes, active and on standby, for the cluster.
        public var dedicatedMasterCount: Swift.Int?
        /// A boolean value to indicate whether a dedicated master node is enabled. See [Dedicated master nodes in Amazon OpenSearch Service ](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains.html#managedomains-dedicatedmasternodes) for more information.
        public var dedicatedMasterEnabled: Swift.Bool?
        /// The instance type for a dedicated master node.
        public var dedicatedMasterType: OpenSearchClientTypes.OpenSearchPartitionInstanceType?
        /// The number of instances in the specified domain cluster.
        public var instanceCount: Swift.Int?
        /// The instance type for an OpenSearch cluster. UltraWarm instance types are not supported for data instances.
        public var instanceType: OpenSearchClientTypes.OpenSearchPartitionInstanceType?
        /// The number of UltraWarm nodes in the cluster.
        public var warmCount: Swift.Int?
        /// True to enable UltraWarm storage.
        public var warmEnabled: Swift.Bool?
        /// The instance type for the OpenSearch cluster's warm nodes.
        public var warmType: OpenSearchClientTypes.OpenSearchWarmPartitionInstanceType?
        /// The zone awareness configuration for a domain when zone awareness is enabled.
        public var zoneAwarenessConfig: OpenSearchClientTypes.ZoneAwarenessConfig?
        /// A boolean value to indicate whether zone awareness is enabled. See [Configuring a multi-AZ domain in Amazon OpenSearch Service ](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html) for more information.
        public var zoneAwarenessEnabled: Swift.Bool?

        public init (
            coldStorageOptions: OpenSearchClientTypes.ColdStorageOptions? = nil,
            dedicatedMasterCount: Swift.Int? = nil,
            dedicatedMasterEnabled: Swift.Bool? = nil,
            dedicatedMasterType: OpenSearchClientTypes.OpenSearchPartitionInstanceType? = nil,
            instanceCount: Swift.Int? = nil,
            instanceType: OpenSearchClientTypes.OpenSearchPartitionInstanceType? = nil,
            warmCount: Swift.Int? = nil,
            warmEnabled: Swift.Bool? = nil,
            warmType: OpenSearchClientTypes.OpenSearchWarmPartitionInstanceType? = nil,
            zoneAwarenessConfig: OpenSearchClientTypes.ZoneAwarenessConfig? = nil,
            zoneAwarenessEnabled: Swift.Bool? = nil
        )
        {
            self.coldStorageOptions = coldStorageOptions
            self.dedicatedMasterCount = dedicatedMasterCount
            self.dedicatedMasterEnabled = dedicatedMasterEnabled
            self.dedicatedMasterType = dedicatedMasterType
            self.instanceCount = instanceCount
            self.instanceType = instanceType
            self.warmCount = warmCount
            self.warmEnabled = warmEnabled
            self.warmType = warmType
            self.zoneAwarenessConfig = zoneAwarenessConfig
            self.zoneAwarenessEnabled = zoneAwarenessEnabled
        }
    }

}
