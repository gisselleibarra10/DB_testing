// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdatePackageInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case commitMessage = "CommitMessage"
        case packageDescription = "PackageDescription"
        case packageID = "PackageID"
        case packageSource = "PackageSource"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let commitMessage = self.commitMessage {
            try encodeContainer.encode(commitMessage, forKey: .commitMessage)
        }
        if let packageDescription = self.packageDescription {
            try encodeContainer.encode(packageDescription, forKey: .packageDescription)
        }
        if let packageID = self.packageID {
            try encodeContainer.encode(packageID, forKey: .packageID)
        }
        if let packageSource = self.packageSource {
            try encodeContainer.encode(packageSource, forKey: .packageSource)
        }
    }
}
