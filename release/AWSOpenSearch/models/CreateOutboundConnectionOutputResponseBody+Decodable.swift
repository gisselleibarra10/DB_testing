// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateOutboundConnectionOutputResponseBody: Swift.Equatable {
    let localDomainInfo: OpenSearchClientTypes.DomainInformationContainer?
    let remoteDomainInfo: OpenSearchClientTypes.DomainInformationContainer?
    let connectionAlias: Swift.String?
    let connectionStatus: OpenSearchClientTypes.OutboundConnectionStatus?
    let connectionId: Swift.String?
}

extension CreateOutboundConnectionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionAlias = "ConnectionAlias"
        case connectionId = "ConnectionId"
        case connectionStatus = "ConnectionStatus"
        case localDomainInfo = "LocalDomainInfo"
        case remoteDomainInfo = "RemoteDomainInfo"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let localDomainInfoDecoded = try containerValues.decodeIfPresent(OpenSearchClientTypes.DomainInformationContainer.self, forKey: .localDomainInfo)
        localDomainInfo = localDomainInfoDecoded
        let remoteDomainInfoDecoded = try containerValues.decodeIfPresent(OpenSearchClientTypes.DomainInformationContainer.self, forKey: .remoteDomainInfo)
        remoteDomainInfo = remoteDomainInfoDecoded
        let connectionAliasDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectionAlias)
        connectionAlias = connectionAliasDecoded
        let connectionStatusDecoded = try containerValues.decodeIfPresent(OpenSearchClientTypes.OutboundConnectionStatus.self, forKey: .connectionStatus)
        connectionStatus = connectionStatusDecoded
        let connectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectionId)
        connectionId = connectionIdDecoded
    }
}
