// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OpenSearchClientTypes.InboundConnection: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionId = "ConnectionId"
        case connectionStatus = "ConnectionStatus"
        case localDomainInfo = "LocalDomainInfo"
        case remoteDomainInfo = "RemoteDomainInfo"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionId = self.connectionId {
            try encodeContainer.encode(connectionId, forKey: .connectionId)
        }
        if let connectionStatus = self.connectionStatus {
            try encodeContainer.encode(connectionStatus, forKey: .connectionStatus)
        }
        if let localDomainInfo = self.localDomainInfo {
            try encodeContainer.encode(localDomainInfo, forKey: .localDomainInfo)
        }
        if let remoteDomainInfo = self.remoteDomainInfo {
            try encodeContainer.encode(remoteDomainInfo, forKey: .remoteDomainInfo)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let localDomainInfoDecoded = try containerValues.decodeIfPresent(OpenSearchClientTypes.DomainInformationContainer.self, forKey: .localDomainInfo)
        localDomainInfo = localDomainInfoDecoded
        let remoteDomainInfoDecoded = try containerValues.decodeIfPresent(OpenSearchClientTypes.DomainInformationContainer.self, forKey: .remoteDomainInfo)
        remoteDomainInfo = remoteDomainInfoDecoded
        let connectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectionId)
        connectionId = connectionIdDecoded
        let connectionStatusDecoded = try containerValues.decodeIfPresent(OpenSearchClientTypes.InboundConnectionStatus.self, forKey: .connectionStatus)
        connectionStatus = connectionStatusDecoded
    }
}
