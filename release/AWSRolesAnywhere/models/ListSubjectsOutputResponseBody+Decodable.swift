// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSubjectsOutputResponseBody: Swift.Equatable {
    let subjects: [RolesAnywhereClientTypes.SubjectSummary]?
    let nextToken: Swift.String?
}

extension ListSubjectsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case subjects
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subjectsContainer = try containerValues.decodeIfPresent([RolesAnywhereClientTypes.SubjectSummary?].self, forKey: .subjects)
        var subjectsDecoded0:[RolesAnywhereClientTypes.SubjectSummary]? = nil
        if let subjectsContainer = subjectsContainer {
            subjectsDecoded0 = [RolesAnywhereClientTypes.SubjectSummary]()
            for structure0 in subjectsContainer {
                if let structure0 = structure0 {
                    subjectsDecoded0?.append(structure0)
                }
            }
        }
        subjects = subjectsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
