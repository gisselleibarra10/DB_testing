// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RolesAnywhereClientTypes.Source: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case sourceData
        case sourceType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sourceData = self.sourceData {
            try encodeContainer.encode(sourceData, forKey: .sourceData)
        }
        if let sourceType = self.sourceType {
            try encodeContainer.encode(sourceType.rawValue, forKey: .sourceType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceTypeDecoded = try containerValues.decodeIfPresent(RolesAnywhereClientTypes.TrustAnchorType.self, forKey: .sourceType)
        sourceType = sourceTypeDecoded
        let sourceDataDecoded = try containerValues.decodeIfPresent(RolesAnywhereClientTypes.SourceData.self, forKey: .sourceData)
        sourceData = sourceDataDecoded
    }
}
