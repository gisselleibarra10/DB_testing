// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RolesAnywhereClientTypes.SourceData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acmpcaarn = "acmPcaArn"
        case sdkUnknown
        case x509certificatedata = "x509CertificateData"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .acmpcaarn(acmpcaarn):
                try container.encode(acmpcaarn, forKey: .acmpcaarn)
            case let .x509certificatedata(x509certificatedata):
                try container.encode(x509certificatedata, forKey: .x509certificatedata)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let x509certificatedataDecoded = try values.decodeIfPresent(Swift.String.self, forKey: .x509certificatedata)
        if let x509certificatedata = x509certificatedataDecoded {
            self = .x509certificatedata(x509certificatedata)
            return
        }
        let acmpcaarnDecoded = try values.decodeIfPresent(Swift.String.self, forKey: .acmpcaarn)
        if let acmpcaarn = acmpcaarnDecoded {
            self = .acmpcaarn(acmpcaarn)
            return
        }
        self = .sdkUnknown("")
    }
}
