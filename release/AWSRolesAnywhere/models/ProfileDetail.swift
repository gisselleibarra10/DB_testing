// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RolesAnywhereClientTypes {
    /// The state of the profile after a read or write operation.
    public struct ProfileDetail: Swift.Equatable {
        /// The ISO-8601 timestamp when the profile was created.
        public var createdAt: ClientRuntime.Date?
        /// The Amazon Web Services account that created the profile.
        public var createdBy: Swift.String?
        /// The number of seconds the vended session credentials are valid for.
        public var durationSeconds: Swift.Int?
        /// Indicates whether the profile is enabled.
        public var enabled: Swift.Bool?
        /// A list of managed policy ARNs that apply to the vended session credentials.
        public var managedPolicyArns: [Swift.String]?
        /// The name of the profile.
        public var name: Swift.String?
        /// The ARN of the profile.
        public var profileArn: Swift.String?
        /// The unique identifier of the profile.
        public var profileId: Swift.String?
        /// Specifies whether instance properties are required in [CreateSession](https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html) requests with this profile.
        public var requireInstanceProperties: Swift.Bool?
        /// A list of IAM roles that this profile can assume in a [CreateSession](https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html) operation.
        public var roleArns: [Swift.String]?
        /// A session policy that applies to the trust boundary of the vended session credentials.
        public var sessionPolicy: Swift.String?
        /// The ISO-8601 timestamp when the profile was last updated.
        public var updatedAt: ClientRuntime.Date?

        public init (
            createdAt: ClientRuntime.Date? = nil,
            createdBy: Swift.String? = nil,
            durationSeconds: Swift.Int? = nil,
            enabled: Swift.Bool? = nil,
            managedPolicyArns: [Swift.String]? = nil,
            name: Swift.String? = nil,
            profileArn: Swift.String? = nil,
            profileId: Swift.String? = nil,
            requireInstanceProperties: Swift.Bool? = nil,
            roleArns: [Swift.String]? = nil,
            sessionPolicy: Swift.String? = nil,
            updatedAt: ClientRuntime.Date? = nil
        )
        {
            self.createdAt = createdAt
            self.createdBy = createdBy
            self.durationSeconds = durationSeconds
            self.enabled = enabled
            self.managedPolicyArns = managedPolicyArns
            self.name = name
            self.profileArn = profileArn
            self.profileId = profileId
            self.requireInstanceProperties = requireInstanceProperties
            self.roleArns = roleArns
            self.sessionPolicy = sessionPolicy
            self.updatedAt = updatedAt
        }
    }

}
