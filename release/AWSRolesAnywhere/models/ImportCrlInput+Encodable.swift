// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImportCrlInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case crlData
        case enabled
        case name
        case tags
        case trustAnchorArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let crlData = self.crlData {
            try encodeContainer.encode(crlData.base64EncodedString(), forKey: .crlData)
        }
        if let enabled = self.enabled {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
        if let trustAnchorArn = self.trustAnchorArn {
            try encodeContainer.encode(trustAnchorArn, forKey: .trustAnchorArn)
        }
    }
}
