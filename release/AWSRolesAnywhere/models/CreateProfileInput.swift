// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateProfileInput: Swift.Equatable {
    /// The number of seconds the vended session credentials are valid for.
    public var durationSeconds: Swift.Int?
    /// Specifies whether the profile is enabled.
    public var enabled: Swift.Bool?
    /// A list of managed policy ARNs that apply to the vended session credentials.
    public var managedPolicyArns: [Swift.String]?
    /// The name of the profile.
    /// This member is required.
    public var name: Swift.String?
    /// Specifies whether instance properties are required in [CreateSession](https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html) requests with this profile.
    public var requireInstanceProperties: Swift.Bool?
    /// A list of IAM roles that this profile can assume in a [CreateSession](https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html) operation.
    /// This member is required.
    public var roleArns: [Swift.String]?
    /// A session policy that applies to the trust boundary of the vended session credentials.
    public var sessionPolicy: Swift.String?
    /// The tags to attach to the profile.
    public var tags: [RolesAnywhereClientTypes.Tag]?

    public init (
        durationSeconds: Swift.Int? = nil,
        enabled: Swift.Bool? = nil,
        managedPolicyArns: [Swift.String]? = nil,
        name: Swift.String? = nil,
        requireInstanceProperties: Swift.Bool? = nil,
        roleArns: [Swift.String]? = nil,
        sessionPolicy: Swift.String? = nil,
        tags: [RolesAnywhereClientTypes.Tag]? = nil
    )
    {
        self.durationSeconds = durationSeconds
        self.enabled = enabled
        self.managedPolicyArns = managedPolicyArns
        self.name = name
        self.requireInstanceProperties = requireInstanceProperties
        self.roleArns = roleArns
        self.sessionPolicy = sessionPolicy
        self.tags = tags
    }
}
