// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateProfileInputBody: Swift.Equatable {
    let name: Swift.String?
    let sessionPolicy: Swift.String?
    let roleArns: [Swift.String]?
    let managedPolicyArns: [Swift.String]?
    let durationSeconds: Swift.Int?
}

extension UpdateProfileInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case durationSeconds
        case managedPolicyArns
        case name
        case roleArns
        case sessionPolicy
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let sessionPolicyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sessionPolicy)
        sessionPolicy = sessionPolicyDecoded
        let roleArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .roleArns)
        var roleArnsDecoded0:[Swift.String]? = nil
        if let roleArnsContainer = roleArnsContainer {
            roleArnsDecoded0 = [Swift.String]()
            for string0 in roleArnsContainer {
                if let string0 = string0 {
                    roleArnsDecoded0?.append(string0)
                }
            }
        }
        roleArns = roleArnsDecoded0
        let managedPolicyArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .managedPolicyArns)
        var managedPolicyArnsDecoded0:[Swift.String]? = nil
        if let managedPolicyArnsContainer = managedPolicyArnsContainer {
            managedPolicyArnsDecoded0 = [Swift.String]()
            for string0 in managedPolicyArnsContainer {
                if let string0 = string0 {
                    managedPolicyArnsDecoded0?.append(string0)
                }
            }
        }
        managedPolicyArns = managedPolicyArnsDecoded0
        let durationSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .durationSeconds)
        durationSeconds = durationSecondsDecoded
    }
}
