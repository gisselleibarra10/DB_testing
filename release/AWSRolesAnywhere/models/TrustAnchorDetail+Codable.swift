// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RolesAnywhereClientTypes.TrustAnchorDetail: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdAt
        case enabled
        case name
        case source
        case trustAnchorArn
        case trustAnchorId
        case updatedAt
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdAt = self.createdAt {
            try encodeContainer.encode(createdAt.iso8601WithoutFractionalSeconds(), forKey: .createdAt)
        }
        if let enabled = self.enabled {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let source = self.source {
            try encodeContainer.encode(source, forKey: .source)
        }
        if let trustAnchorArn = self.trustAnchorArn {
            try encodeContainer.encode(trustAnchorArn, forKey: .trustAnchorArn)
        }
        if let trustAnchorId = self.trustAnchorId {
            try encodeContainer.encode(trustAnchorId, forKey: .trustAnchorId)
        }
        if let updatedAt = self.updatedAt {
            try encodeContainer.encode(updatedAt.iso8601WithoutFractionalSeconds(), forKey: .updatedAt)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trustAnchorIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trustAnchorId)
        trustAnchorId = trustAnchorIdDecoded
        let trustAnchorArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trustAnchorArn)
        trustAnchorArn = trustAnchorArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(RolesAnywhereClientTypes.Source.self, forKey: .source)
        source = sourceDecoded
        let enabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let createdAtDateString = try containerValues.decodeIfPresent(Swift.String.self, forKey: .createdAt)
        var createdAtDecoded: ClientRuntime.Date? = nil
        if let createdAtDateString = createdAtDateString {
            let createdAtFormatter = ClientRuntime.DateFormatter.iso8601DateFormatterWithoutFractionalSeconds
            createdAtDecoded = createdAtFormatter.date(from: createdAtDateString)
        }
        createdAt = createdAtDecoded
        let updatedAtDateString = try containerValues.decodeIfPresent(Swift.String.self, forKey: .updatedAt)
        var updatedAtDecoded: ClientRuntime.Date? = nil
        if let updatedAtDateString = updatedAtDateString {
            let updatedAtFormatter = ClientRuntime.DateFormatter.iso8601DateFormatterWithoutFractionalSeconds
            updatedAtDecoded = updatedAtFormatter.date(from: updatedAtDateString)
        }
        updatedAt = updatedAtDecoded
    }
}
