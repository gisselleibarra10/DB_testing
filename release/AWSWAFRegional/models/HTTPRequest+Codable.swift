// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WafRegionalClientTypes.HTTPRequest: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientIP = "ClientIP"
        case country = "Country"
        case hTTPVersion = "HTTPVersion"
        case headers = "Headers"
        case method = "Method"
        case uRI = "URI"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientIP = self.clientIP {
            try encodeContainer.encode(clientIP, forKey: .clientIP)
        }
        if let country = self.country {
            try encodeContainer.encode(country, forKey: .country)
        }
        if let hTTPVersion = self.hTTPVersion {
            try encodeContainer.encode(hTTPVersion, forKey: .hTTPVersion)
        }
        if let headers = headers {
            var headersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .headers)
            for httpheaders0 in headers {
                try headersContainer.encode(httpheaders0)
            }
        }
        if let method = self.method {
            try encodeContainer.encode(method, forKey: .method)
        }
        if let uRI = self.uRI {
            try encodeContainer.encode(uRI, forKey: .uRI)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientIPDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientIP)
        clientIP = clientIPDecoded
        let countryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .country)
        country = countryDecoded
        let uRIDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .uRI)
        uRI = uRIDecoded
        let methodDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .method)
        method = methodDecoded
        let hTTPVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hTTPVersion)
        hTTPVersion = hTTPVersionDecoded
        let headersContainer = try containerValues.decodeIfPresent([WafRegionalClientTypes.HTTPHeader?].self, forKey: .headers)
        var headersDecoded0:[WafRegionalClientTypes.HTTPHeader]? = nil
        if let headersContainer = headersContainer {
            headersDecoded0 = [WafRegionalClientTypes.HTTPHeader]()
            for structure0 in headersContainer {
                if let structure0 = structure0 {
                    headersDecoded0?.append(structure0)
                }
            }
        }
        headers = headersDecoded0
    }
}
