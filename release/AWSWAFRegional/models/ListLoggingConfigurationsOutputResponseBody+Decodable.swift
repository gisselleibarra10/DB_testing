// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLoggingConfigurationsOutputResponseBody: Swift.Equatable {
    let loggingConfigurations: [WafRegionalClientTypes.LoggingConfiguration]?
    let nextMarker: Swift.String?
}

extension ListLoggingConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case loggingConfigurations = "LoggingConfigurations"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let loggingConfigurationsContainer = try containerValues.decodeIfPresent([WafRegionalClientTypes.LoggingConfiguration?].self, forKey: .loggingConfigurations)
        var loggingConfigurationsDecoded0:[WafRegionalClientTypes.LoggingConfiguration]? = nil
        if let loggingConfigurationsContainer = loggingConfigurationsContainer {
            loggingConfigurationsDecoded0 = [WafRegionalClientTypes.LoggingConfiguration]()
            for structure0 in loggingConfigurationsContainer {
                if let structure0 = structure0 {
                    loggingConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        loggingConfigurations = loggingConfigurationsDecoded0
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
    }
}
