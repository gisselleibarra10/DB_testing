// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WafRegionalClientTypes.RegexMatchSet: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name = "Name"
        case regexMatchSetId = "RegexMatchSetId"
        case regexMatchTuples = "RegexMatchTuples"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let regexMatchSetId = self.regexMatchSetId {
            try encodeContainer.encode(regexMatchSetId, forKey: .regexMatchSetId)
        }
        if let regexMatchTuples = regexMatchTuples {
            var regexMatchTuplesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .regexMatchTuples)
            for regexmatchtuples0 in regexMatchTuples {
                try regexMatchTuplesContainer.encode(regexmatchtuples0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let regexMatchSetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .regexMatchSetId)
        regexMatchSetId = regexMatchSetIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let regexMatchTuplesContainer = try containerValues.decodeIfPresent([WafRegionalClientTypes.RegexMatchTuple?].self, forKey: .regexMatchTuples)
        var regexMatchTuplesDecoded0:[WafRegionalClientTypes.RegexMatchTuple]? = nil
        if let regexMatchTuplesContainer = regexMatchTuplesContainer {
            regexMatchTuplesDecoded0 = [WafRegionalClientTypes.RegexMatchTuple]()
            for structure0 in regexMatchTuplesContainer {
                if let structure0 = structure0 {
                    regexMatchTuplesDecoded0?.append(structure0)
                }
            }
        }
        regexMatchTuples = regexMatchTuplesDecoded0
    }
}
