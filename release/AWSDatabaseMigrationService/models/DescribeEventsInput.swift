// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

///
public struct DescribeEventsInput: Swift.Equatable {
    /// The duration of the events to be listed.
    public var duration: Swift.Int?
    /// The end time for the events to be listed.
    public var endTime: ClientRuntime.Date?
    /// A list of event categories for the source type that you've chosen.
    public var eventCategories: [Swift.String]?
    /// Filters applied to events. The only valid filter is replication-instance-id.
    public var filters: [DatabaseMigrationClientTypes.Filter]?
    /// An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
    public var marker: Swift.String?
    /// The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. Default: 100 Constraints: Minimum 20, maximum 100.
    public var maxRecords: Swift.Int?
    /// The identifier of an event source.
    public var sourceIdentifier: Swift.String?
    /// The type of DMS resource that generates events. Valid values: replication-instance | replication-task
    public var sourceType: DatabaseMigrationClientTypes.SourceType?
    /// The start time for the events to be listed.
    public var startTime: ClientRuntime.Date?

    public init (
        duration: Swift.Int? = nil,
        endTime: ClientRuntime.Date? = nil,
        eventCategories: [Swift.String]? = nil,
        filters: [DatabaseMigrationClientTypes.Filter]? = nil,
        marker: Swift.String? = nil,
        maxRecords: Swift.Int? = nil,
        sourceIdentifier: Swift.String? = nil,
        sourceType: DatabaseMigrationClientTypes.SourceType? = nil,
        startTime: ClientRuntime.Date? = nil
    )
    {
        self.duration = duration
        self.endTime = endTime
        self.eventCategories = eventCategories
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
        self.sourceIdentifier = sourceIdentifier
        self.sourceType = sourceType
        self.startTime = startTime
    }
}
