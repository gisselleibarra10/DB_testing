// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DatabaseMigrationClientTypes {
    /// Provides information that defines a DocumentDB endpoint.
    public struct DocDbSettings: Swift.Equatable {
        /// The database name on the DocumentDB source endpoint.
        public var databaseName: Swift.String?
        /// Indicates the number of documents to preview to determine the document organization. Use this setting when NestingLevel is set to "one". Must be a positive value greater than 0. Default value is 1000.
        public var docsToInvestigate: Swift.Int?
        /// Specifies the document ID. Use this setting when NestingLevel is set to "none". Default value is "false".
        public var extractDocId: Swift.Bool?
        /// The KMS key identifier that is used to encrypt the content on the replication instance. If you don't specify a value for the KmsKeyId parameter, then DMS uses your default encryption key. KMS creates the default encryption key for your Amazon Web Services account. Your Amazon Web Services account has a different default encryption key for each Amazon Web Services Region.
        public var kmsKeyId: Swift.String?
        /// Specifies either document or table mode. Default value is "none". Specify "none" to use document mode. Specify "one" to use table mode.
        public var nestingLevel: DatabaseMigrationClientTypes.NestingLevelValue?
        /// The password for the user account you use to access the DocumentDB source endpoint.
        public var password: Swift.String?
        /// The port value for the DocumentDB source endpoint.
        public var port: Swift.Int?
        /// The full Amazon Resource Name (ARN) of the IAM role that specifies DMS as the trusted entity and grants the required permissions to access the value in SecretsManagerSecret. The role must allow the iam:PassRole action. SecretsManagerSecret has the value of the Amazon Web Services Secrets Manager secret that allows access to the DocumentDB endpoint. You can specify one of two sets of values for these permissions. You can specify the values for this setting and SecretsManagerSecretId. Or you can specify clear-text values for UserName, Password, ServerName, and Port. You can't specify both. For more information on creating this SecretsManagerSecret and the SecretsManagerAccessRoleArn and SecretsManagerSecretId required to access it, see [Using secrets to access Database Migration Service resources](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html#security-iam-secretsmanager) in the Database Migration Service User Guide.
        public var secretsManagerAccessRoleArn: Swift.String?
        /// The full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the DocumentDB endpoint connection details.
        public var secretsManagerSecretId: Swift.String?
        /// The name of the server on the DocumentDB source endpoint.
        public var serverName: Swift.String?
        /// The user name you use to access the DocumentDB source endpoint.
        public var username: Swift.String?

        public init (
            databaseName: Swift.String? = nil,
            docsToInvestigate: Swift.Int? = nil,
            extractDocId: Swift.Bool? = nil,
            kmsKeyId: Swift.String? = nil,
            nestingLevel: DatabaseMigrationClientTypes.NestingLevelValue? = nil,
            password: Swift.String? = nil,
            port: Swift.Int? = nil,
            secretsManagerAccessRoleArn: Swift.String? = nil,
            secretsManagerSecretId: Swift.String? = nil,
            serverName: Swift.String? = nil,
            username: Swift.String? = nil
        )
        {
            self.databaseName = databaseName
            self.docsToInvestigate = docsToInvestigate
            self.extractDocId = extractDocId
            self.kmsKeyId = kmsKeyId
            self.nestingLevel = nestingLevel
            self.password = password
            self.port = port
            self.secretsManagerAccessRoleArn = secretsManagerAccessRoleArn
            self.secretsManagerSecretId = secretsManagerSecretId
            self.serverName = serverName
            self.username = username
        }
    }

}
