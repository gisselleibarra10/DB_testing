// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFleetAdvisorLsaAnalysisOutputResponseBody: Swift.Equatable {
    let analysis: [DatabaseMigrationClientTypes.FleetAdvisorLsaAnalysisResponse]?
    let nextToken: Swift.String?
}

extension DescribeFleetAdvisorLsaAnalysisOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case analysis = "Analysis"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let analysisContainer = try containerValues.decodeIfPresent([DatabaseMigrationClientTypes.FleetAdvisorLsaAnalysisResponse?].self, forKey: .analysis)
        var analysisDecoded0:[DatabaseMigrationClientTypes.FleetAdvisorLsaAnalysisResponse]? = nil
        if let analysisContainer = analysisContainer {
            analysisDecoded0 = [DatabaseMigrationClientTypes.FleetAdvisorLsaAnalysisResponse]()
            for structure0 in analysisContainer {
                if let structure0 = structure0 {
                    analysisDecoded0?.append(structure0)
                }
            }
        }
        analysis = analysisDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
