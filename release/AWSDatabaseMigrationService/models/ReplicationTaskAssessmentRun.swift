// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DatabaseMigrationClientTypes {
    /// Provides information that describes a premigration assessment run that you have started using the StartReplicationTaskAssessmentRun operation. Some of the information appears based on other operations that can return the ReplicationTaskAssessmentRun object.
    public struct ReplicationTaskAssessmentRun: Swift.Equatable {
        /// Indication of the completion progress for the individual assessments specified to run.
        public var assessmentProgress: DatabaseMigrationClientTypes.ReplicationTaskAssessmentRunProgress?
        /// Unique name of the assessment run.
        public var assessmentRunName: Swift.String?
        /// Last message generated by an individual assessment failure.
        public var lastFailureMessage: Swift.String?
        /// ARN of the migration task associated with this premigration assessment run.
        public var replicationTaskArn: Swift.String?
        /// Amazon Resource Name (ARN) of this assessment run.
        public var replicationTaskAssessmentRunArn: Swift.String?
        /// Date on which the assessment run was created using the StartReplicationTaskAssessmentRun operation.
        public var replicationTaskAssessmentRunCreationDate: ClientRuntime.Date?
        /// Encryption mode used to encrypt the assessment run results.
        public var resultEncryptionMode: Swift.String?
        /// ARN of the KMS encryption key used to encrypt the assessment run results.
        public var resultKmsKeyArn: Swift.String?
        /// Amazon S3 bucket where DMS stores the results of this assessment run.
        public var resultLocationBucket: Swift.String?
        /// Folder in an Amazon S3 bucket where DMS stores the results of this assessment run.
        public var resultLocationFolder: Swift.String?
        /// ARN of the service role used to start the assessment run using the StartReplicationTaskAssessmentRun operation. The role must allow the iam:PassRole action.
        public var serviceAccessRoleArn: Swift.String?
        /// Assessment run status. This status can have one of the following values:
        ///
        /// * "cancelling" – The assessment run was canceled by the CancelReplicationTaskAssessmentRun operation.
        ///
        /// * "deleting" – The assessment run was deleted by the DeleteReplicationTaskAssessmentRun operation.
        ///
        /// * "failed" – At least one individual assessment completed with a failed status.
        ///
        /// * "error-provisioning" – An internal error occurred while resources were provisioned (during provisioning status).
        ///
        /// * "error-executing" – An internal error occurred while individual assessments ran (during running status).
        ///
        /// * "invalid state" – The assessment run is in an unknown state.
        ///
        /// * "passed" – All individual assessments have completed, and none has a failed status.
        ///
        /// * "provisioning" – Resources required to run individual assessments are being provisioned.
        ///
        /// * "running" – Individual assessments are being run.
        ///
        /// * "starting" – The assessment run is starting, but resources are not yet being provisioned for individual assessments.
        public var status: Swift.String?

        public init (
            assessmentProgress: DatabaseMigrationClientTypes.ReplicationTaskAssessmentRunProgress? = nil,
            assessmentRunName: Swift.String? = nil,
            lastFailureMessage: Swift.String? = nil,
            replicationTaskArn: Swift.String? = nil,
            replicationTaskAssessmentRunArn: Swift.String? = nil,
            replicationTaskAssessmentRunCreationDate: ClientRuntime.Date? = nil,
            resultEncryptionMode: Swift.String? = nil,
            resultKmsKeyArn: Swift.String? = nil,
            resultLocationBucket: Swift.String? = nil,
            resultLocationFolder: Swift.String? = nil,
            serviceAccessRoleArn: Swift.String? = nil,
            status: Swift.String? = nil
        )
        {
            self.assessmentProgress = assessmentProgress
            self.assessmentRunName = assessmentRunName
            self.lastFailureMessage = lastFailureMessage
            self.replicationTaskArn = replicationTaskArn
            self.replicationTaskAssessmentRunArn = replicationTaskAssessmentRunArn
            self.replicationTaskAssessmentRunCreationDate = replicationTaskAssessmentRunCreationDate
            self.resultEncryptionMode = resultEncryptionMode
            self.resultKmsKeyArn = resultKmsKeyArn
            self.resultLocationBucket = resultLocationBucket
            self.resultLocationFolder = resultLocationFolder
            self.serviceAccessRoleArn = serviceAccessRoleArn
            self.status = status
        }
    }

}
