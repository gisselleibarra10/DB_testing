// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePendingMaintenanceActionsOutputResponseBody: Swift.Equatable {
    let pendingMaintenanceActions: [DatabaseMigrationClientTypes.ResourcePendingMaintenanceActions]?
    let marker: Swift.String?
}

extension DescribePendingMaintenanceActionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case pendingMaintenanceActions = "PendingMaintenanceActions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pendingMaintenanceActionsContainer = try containerValues.decodeIfPresent([DatabaseMigrationClientTypes.ResourcePendingMaintenanceActions?].self, forKey: .pendingMaintenanceActions)
        var pendingMaintenanceActionsDecoded0:[DatabaseMigrationClientTypes.ResourcePendingMaintenanceActions]? = nil
        if let pendingMaintenanceActionsContainer = pendingMaintenanceActionsContainer {
            pendingMaintenanceActionsDecoded0 = [DatabaseMigrationClientTypes.ResourcePendingMaintenanceActions]()
            for structure0 in pendingMaintenanceActionsContainer {
                if let structure0 = structure0 {
                    pendingMaintenanceActionsDecoded0?.append(structure0)
                }
            }
        }
        pendingMaintenanceActions = pendingMaintenanceActionsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
