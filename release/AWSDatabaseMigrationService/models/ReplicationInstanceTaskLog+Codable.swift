// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DatabaseMigrationClientTypes.ReplicationInstanceTaskLog: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case replicationInstanceTaskLogSize = "ReplicationInstanceTaskLogSize"
        case replicationTaskArn = "ReplicationTaskArn"
        case replicationTaskName = "ReplicationTaskName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if replicationInstanceTaskLogSize != 0 {
            try encodeContainer.encode(replicationInstanceTaskLogSize, forKey: .replicationInstanceTaskLogSize)
        }
        if let replicationTaskArn = self.replicationTaskArn {
            try encodeContainer.encode(replicationTaskArn, forKey: .replicationTaskArn)
        }
        if let replicationTaskName = self.replicationTaskName {
            try encodeContainer.encode(replicationTaskName, forKey: .replicationTaskName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationTaskNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .replicationTaskName)
        replicationTaskName = replicationTaskNameDecoded
        let replicationTaskArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .replicationTaskArn)
        replicationTaskArn = replicationTaskArnDecoded
        let replicationInstanceTaskLogSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .replicationInstanceTaskLogSize) ?? 0
        replicationInstanceTaskLogSize = replicationInstanceTaskLogSizeDecoded
    }
}
