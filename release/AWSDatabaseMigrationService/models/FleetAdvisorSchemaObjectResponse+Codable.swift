// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DatabaseMigrationClientTypes.FleetAdvisorSchemaObjectResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case codeLineCount = "CodeLineCount"
        case codeSize = "CodeSize"
        case numberOfObjects = "NumberOfObjects"
        case objectType = "ObjectType"
        case schemaId = "SchemaId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let codeLineCount = self.codeLineCount {
            try encodeContainer.encode(codeLineCount, forKey: .codeLineCount)
        }
        if let codeSize = self.codeSize {
            try encodeContainer.encode(codeSize, forKey: .codeSize)
        }
        if let numberOfObjects = self.numberOfObjects {
            try encodeContainer.encode(numberOfObjects, forKey: .numberOfObjects)
        }
        if let objectType = self.objectType {
            try encodeContainer.encode(objectType, forKey: .objectType)
        }
        if let schemaId = self.schemaId {
            try encodeContainer.encode(schemaId, forKey: .schemaId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schemaId)
        schemaId = schemaIdDecoded
        let objectTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .objectType)
        objectType = objectTypeDecoded
        let numberOfObjectsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfObjects)
        numberOfObjects = numberOfObjectsDecoded
        let codeLineCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .codeLineCount)
        codeLineCount = codeLineCountDecoded
        let codeSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .codeSize)
        codeSize = codeSizeDecoded
    }
}
