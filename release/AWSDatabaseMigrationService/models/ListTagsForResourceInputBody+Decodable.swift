// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTagsForResourceInputBody: Swift.Equatable {
    let resourceArn: Swift.String?
    let resourceArnList: [Swift.String]?
}

extension ListTagsForResourceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceArn = "ResourceArn"
        case resourceArnList = "ResourceArnList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let resourceArnListContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .resourceArnList)
        var resourceArnListDecoded0:[Swift.String]? = nil
        if let resourceArnListContainer = resourceArnListContainer {
            resourceArnListDecoded0 = [Swift.String]()
            for string0 in resourceArnListContainer {
                if let string0 = string0 {
                    resourceArnListDecoded0?.append(string0)
                }
            }
        }
        resourceArnList = resourceArnListDecoded0
    }
}
