// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReplicationInstancesOutputResponseBody: Swift.Equatable {
    let marker: Swift.String?
    let replicationInstances: [DatabaseMigrationClientTypes.ReplicationInstance]?
}

extension DescribeReplicationInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case replicationInstances = "ReplicationInstances"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let replicationInstancesContainer = try containerValues.decodeIfPresent([DatabaseMigrationClientTypes.ReplicationInstance?].self, forKey: .replicationInstances)
        var replicationInstancesDecoded0:[DatabaseMigrationClientTypes.ReplicationInstance]? = nil
        if let replicationInstancesContainer = replicationInstancesContainer {
            replicationInstancesDecoded0 = [DatabaseMigrationClientTypes.ReplicationInstance]()
            for structure0 in replicationInstancesContainer {
                if let structure0 = structure0 {
                    replicationInstancesDecoded0?.append(structure0)
                }
            }
        }
        replicationInstances = replicationInstancesDecoded0
    }
}
