// Code generated by smithy-swift-codegen. DO NOT EDIT!



///
public struct ModifyEndpointInput: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of the certificate used for SSL connection.
    public var certificateArn: Swift.String?
    /// The name of the endpoint database. For a MySQL source or target endpoint, do not specify DatabaseName.
    public var databaseName: Swift.String?
    /// The settings in JSON format for the DMS transfer type of source endpoint. Attributes include the following:
    ///
    /// * serviceAccessRoleArn - The Amazon Resource Name (ARN) used by the service access IAM role. The role must allow the iam:PassRole action.
    ///
    /// * BucketName - The name of the S3 bucket to use.
    ///
    ///
    /// Shorthand syntax for these settings is as follows: ServiceAccessRoleArn=string ,BucketName=string JSON syntax for these settings is as follows: { "ServiceAccessRoleArn": "string", "BucketName": "string"}
    public var dmsTransferSettings: DatabaseMigrationClientTypes.DmsTransferSettings?
    /// Settings in JSON format for the source DocumentDB endpoint. For more information about the available settings, see the configuration properties section in [ Using DocumentDB as a Target for Database Migration Service ](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.DocumentDB.html) in the Database Migration Service User Guide.
    public var docDbSettings: DatabaseMigrationClientTypes.DocDbSettings?
    /// Settings in JSON format for the target Amazon DynamoDB endpoint. For information about other available settings, see [Using Object Mapping to Migrate Data to DynamoDB](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html#CHAP_Target.DynamoDB.ObjectMapping) in the Database Migration Service User Guide.
    public var dynamoDbSettings: DatabaseMigrationClientTypes.DynamoDbSettings?
    /// Settings in JSON format for the target OpenSearch endpoint. For more information about the available settings, see [Extra Connection Attributes When Using OpenSearch as a Target for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Elasticsearch.html#CHAP_Target.Elasticsearch.Configuration) in the Database Migration Service User Guide.
    public var elasticsearchSettings: DatabaseMigrationClientTypes.ElasticsearchSettings?
    /// The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    /// This member is required.
    public var endpointArn: Swift.String?
    /// The database endpoint identifier. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens.
    public var endpointIdentifier: Swift.String?
    /// The type of endpoint. Valid values are source and target.
    public var endpointType: DatabaseMigrationClientTypes.ReplicationEndpointTypeValue?
    /// The type of engine for the endpoint. Valid values, depending on the EndpointType, include "mysql", "oracle", "postgres", "mariadb", "aurora", "aurora-postgresql", "opensearch", "redshift", "s3", "db2", "azuredb", "sybase", "dynamodb", "mongodb", "kinesis", "kafka", "elasticsearch", "documentdb", "sqlserver", and "neptune".
    public var engineName: Swift.String?
    /// If this attribute is Y, the current call to ModifyEndpoint replaces all existing endpoint settings with the exact settings that you specify in this call. If this attribute is N, the current call to ModifyEndpoint does two things:
    ///
    /// * It replaces any endpoint settings that already exist with new values, for settings with the same names.
    ///
    /// * It creates new endpoint settings that you specify in the call, for settings with different names.
    ///
    ///
    /// For example, if you call create-endpoint ... --endpoint-settings '{"a":1}' ..., the endpoint has the following endpoint settings: '{"a":1}'. If you then call modify-endpoint ... --endpoint-settings '{"b":2}' ... for the same endpoint, the endpoint has the following settings: '{"a":1,"b":2}'. However, suppose that you follow this with a call to modify-endpoint ... --endpoint-settings '{"b":2}' --exact-settings ... for that same endpoint again. Then the endpoint has the following settings: '{"b":2}'. All existing settings are replaced with the exact settings that you specify.
    public var exactSettings: Swift.Bool?
    /// The external table definition.
    public var externalTableDefinition: Swift.String?
    /// Additional attributes associated with the connection. To reset this parameter, pass the empty string ("") as an argument.
    public var extraConnectionAttributes: Swift.String?
    /// Settings in JSON format for the source GCP MySQL endpoint.
    public var gcpMySQLSettings: DatabaseMigrationClientTypes.GcpMySQLSettings?
    /// Settings in JSON format for the source IBM Db2 LUW endpoint. For information about other available settings, see [Extra connection attributes when using Db2 LUW as a source for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.DB2.html#CHAP_Source.DB2.ConnectionAttrib) in the Database Migration Service User Guide.
    public var iBMDb2Settings: DatabaseMigrationClientTypes.IBMDb2Settings?
    /// Settings in JSON format for the target Apache Kafka endpoint. For more information about the available settings, see [Using object mapping to migrate data to a Kafka topic](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kafka.html#CHAP_Target.Kafka.ObjectMapping) in the Database Migration Service User Guide.
    public var kafkaSettings: DatabaseMigrationClientTypes.KafkaSettings?
    /// Settings in JSON format for the target endpoint for Amazon Kinesis Data Streams. For more information about the available settings, see [Using object mapping to migrate data to a Kinesis data stream](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kinesis.html#CHAP_Target.Kinesis.ObjectMapping) in the Database Migration Service User Guide.
    public var kinesisSettings: DatabaseMigrationClientTypes.KinesisSettings?
    /// Settings in JSON format for the source and target Microsoft SQL Server endpoint. For information about other available settings, see [Extra connection attributes when using SQL Server as a source for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.SQLServer.html#CHAP_Source.SQLServer.ConnectionAttrib) and [ Extra connection attributes when using SQL Server as a target for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.SQLServer.html#CHAP_Target.SQLServer.ConnectionAttrib) in the Database Migration Service User Guide.
    public var microsoftSQLServerSettings: DatabaseMigrationClientTypes.MicrosoftSQLServerSettings?
    /// Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the configuration properties section in [Endpoint configuration settings when using MongoDB as a source for Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html#CHAP_Source.MongoDB.Configuration) in the Database Migration Service User Guide.
    public var mongoDbSettings: DatabaseMigrationClientTypes.MongoDbSettings?
    /// Settings in JSON format for the source and target MySQL endpoint. For information about other available settings, see [Extra connection attributes when using MySQL as a source for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MySQL.html#CHAP_Source.MySQL.ConnectionAttrib) and [Extra connection attributes when using a MySQL-compatible database as a target for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.MySQL.html#CHAP_Target.MySQL.ConnectionAttrib) in the Database Migration Service User Guide.
    public var mySQLSettings: DatabaseMigrationClientTypes.MySQLSettings?
    /// Settings in JSON format for the target Amazon Neptune endpoint. For more information about the available settings, see [Specifying graph-mapping rules using Gremlin and R2RML for Amazon Neptune as a target](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Neptune.html#CHAP_Target.Neptune.EndpointSettings) in the Database Migration Service User Guide.
    public var neptuneSettings: DatabaseMigrationClientTypes.NeptuneSettings?
    /// Settings in JSON format for the source and target Oracle endpoint. For information about other available settings, see [Extra connection attributes when using Oracle as a source for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.html#CHAP_Source.Oracle.ConnectionAttrib) and [ Extra connection attributes when using Oracle as a target for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Oracle.html#CHAP_Target.Oracle.ConnectionAttrib) in the Database Migration Service User Guide.
    public var oracleSettings: DatabaseMigrationClientTypes.OracleSettings?
    /// The password to be used to login to the endpoint database.
    public var password: Swift.String?
    /// The port used by the endpoint database.
    public var port: Swift.Int?
    /// Settings in JSON format for the source and target PostgreSQL endpoint. For information about other available settings, see [Extra connection attributes when using PostgreSQL as a source for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib) and [ Extra connection attributes when using PostgreSQL as a target for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.PostgreSQL.html#CHAP_Target.PostgreSQL.ConnectionAttrib) in the Database Migration Service User Guide.
    public var postgreSQLSettings: DatabaseMigrationClientTypes.PostgreSQLSettings?
    /// Settings in JSON format for the Redis target endpoint.
    public var redisSettings: DatabaseMigrationClientTypes.RedisSettings?
    /// Provides information that defines an Amazon Redshift endpoint.
    public var redshiftSettings: DatabaseMigrationClientTypes.RedshiftSettings?
    /// Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see [Extra Connection Attributes When Using Amazon S3 as a Target for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring) in the Database Migration Service User Guide.
    public var s3Settings: DatabaseMigrationClientTypes.S3Settings?
    /// The name of the server where the endpoint database resides.
    public var serverName: Swift.String?
    /// The Amazon Resource Name (ARN) for the IAM role you want to use to modify the endpoint. The role must allow the iam:PassRole action.
    public var serviceAccessRoleArn: Swift.String?
    /// The SSL mode used to connect to the endpoint. The default value is none.
    public var sslMode: DatabaseMigrationClientTypes.DmsSslModeValue?
    /// Settings in JSON format for the source and target SAP ASE endpoint. For information about other available settings, see [Extra connection attributes when using SAP ASE as a source for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.SAP.html#CHAP_Source.SAP.ConnectionAttrib) and [Extra connection attributes when using SAP ASE as a target for DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.SAP.html#CHAP_Target.SAP.ConnectionAttrib) in the Database Migration Service User Guide.
    public var sybaseSettings: DatabaseMigrationClientTypes.SybaseSettings?
    /// The user name to be used to login to the endpoint database.
    public var username: Swift.String?

    public init (
        certificateArn: Swift.String? = nil,
        databaseName: Swift.String? = nil,
        dmsTransferSettings: DatabaseMigrationClientTypes.DmsTransferSettings? = nil,
        docDbSettings: DatabaseMigrationClientTypes.DocDbSettings? = nil,
        dynamoDbSettings: DatabaseMigrationClientTypes.DynamoDbSettings? = nil,
        elasticsearchSettings: DatabaseMigrationClientTypes.ElasticsearchSettings? = nil,
        endpointArn: Swift.String? = nil,
        endpointIdentifier: Swift.String? = nil,
        endpointType: DatabaseMigrationClientTypes.ReplicationEndpointTypeValue? = nil,
        engineName: Swift.String? = nil,
        exactSettings: Swift.Bool? = nil,
        externalTableDefinition: Swift.String? = nil,
        extraConnectionAttributes: Swift.String? = nil,
        gcpMySQLSettings: DatabaseMigrationClientTypes.GcpMySQLSettings? = nil,
        iBMDb2Settings: DatabaseMigrationClientTypes.IBMDb2Settings? = nil,
        kafkaSettings: DatabaseMigrationClientTypes.KafkaSettings? = nil,
        kinesisSettings: DatabaseMigrationClientTypes.KinesisSettings? = nil,
        microsoftSQLServerSettings: DatabaseMigrationClientTypes.MicrosoftSQLServerSettings? = nil,
        mongoDbSettings: DatabaseMigrationClientTypes.MongoDbSettings? = nil,
        mySQLSettings: DatabaseMigrationClientTypes.MySQLSettings? = nil,
        neptuneSettings: DatabaseMigrationClientTypes.NeptuneSettings? = nil,
        oracleSettings: DatabaseMigrationClientTypes.OracleSettings? = nil,
        password: Swift.String? = nil,
        port: Swift.Int? = nil,
        postgreSQLSettings: DatabaseMigrationClientTypes.PostgreSQLSettings? = nil,
        redisSettings: DatabaseMigrationClientTypes.RedisSettings? = nil,
        redshiftSettings: DatabaseMigrationClientTypes.RedshiftSettings? = nil,
        s3Settings: DatabaseMigrationClientTypes.S3Settings? = nil,
        serverName: Swift.String? = nil,
        serviceAccessRoleArn: Swift.String? = nil,
        sslMode: DatabaseMigrationClientTypes.DmsSslModeValue? = nil,
        sybaseSettings: DatabaseMigrationClientTypes.SybaseSettings? = nil,
        username: Swift.String? = nil
    )
    {
        self.certificateArn = certificateArn
        self.databaseName = databaseName
        self.dmsTransferSettings = dmsTransferSettings
        self.docDbSettings = docDbSettings
        self.dynamoDbSettings = dynamoDbSettings
        self.elasticsearchSettings = elasticsearchSettings
        self.endpointArn = endpointArn
        self.endpointIdentifier = endpointIdentifier
        self.endpointType = endpointType
        self.engineName = engineName
        self.exactSettings = exactSettings
        self.externalTableDefinition = externalTableDefinition
        self.extraConnectionAttributes = extraConnectionAttributes
        self.gcpMySQLSettings = gcpMySQLSettings
        self.iBMDb2Settings = iBMDb2Settings
        self.kafkaSettings = kafkaSettings
        self.kinesisSettings = kinesisSettings
        self.microsoftSQLServerSettings = microsoftSQLServerSettings
        self.mongoDbSettings = mongoDbSettings
        self.mySQLSettings = mySQLSettings
        self.neptuneSettings = neptuneSettings
        self.oracleSettings = oracleSettings
        self.password = password
        self.port = port
        self.postgreSQLSettings = postgreSQLSettings
        self.redisSettings = redisSettings
        self.redshiftSettings = redshiftSettings
        self.s3Settings = s3Settings
        self.serverName = serverName
        self.serviceAccessRoleArn = serviceAccessRoleArn
        self.sslMode = sslMode
        self.sybaseSettings = sybaseSettings
        self.username = username
    }
}
