// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConnectionsOutputResponseBody: Swift.Equatable {
    let marker: Swift.String?
    let connections: [DatabaseMigrationClientTypes.Connection]?
}

extension DescribeConnectionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connections = "Connections"
        case marker = "Marker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let connectionsContainer = try containerValues.decodeIfPresent([DatabaseMigrationClientTypes.Connection?].self, forKey: .connections)
        var connectionsDecoded0:[DatabaseMigrationClientTypes.Connection]? = nil
        if let connectionsContainer = connectionsContainer {
            connectionsDecoded0 = [DatabaseMigrationClientTypes.Connection]()
            for structure0 in connectionsContainer {
                if let structure0 = structure0 {
                    connectionsDecoded0?.append(structure0)
                }
            }
        }
        connections = connectionsDecoded0
    }
}
