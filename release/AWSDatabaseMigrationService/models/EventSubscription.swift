// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DatabaseMigrationClientTypes {
    /// Describes an event notification subscription created by the CreateEventSubscription operation.
    public struct EventSubscription: Swift.Equatable {
        /// The DMS event notification subscription Id.
        public var custSubscriptionId: Swift.String?
        /// The Amazon Web Services customer account associated with the DMS event notification subscription.
        public var customerAwsId: Swift.String?
        /// Boolean value that indicates if the event subscription is enabled.
        public var enabled: Swift.Bool
        /// A lists of event categories.
        public var eventCategoriesList: [Swift.String]?
        /// The topic ARN of the DMS event notification subscription.
        public var snsTopicArn: Swift.String?
        /// A list of source Ids for the event subscription.
        public var sourceIdsList: [Swift.String]?
        /// The type of DMS resource that generates events. Valid values: replication-instance | replication-server | security-group | replication-task
        public var sourceType: Swift.String?
        /// The status of the DMS event notification subscription. Constraints: Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist The status "no-permission" indicates that DMS no longer has permission to post to the SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.
        public var status: Swift.String?
        /// The time the DMS event notification subscription was created.
        public var subscriptionCreationTime: Swift.String?

        public init (
            custSubscriptionId: Swift.String? = nil,
            customerAwsId: Swift.String? = nil,
            enabled: Swift.Bool = false,
            eventCategoriesList: [Swift.String]? = nil,
            snsTopicArn: Swift.String? = nil,
            sourceIdsList: [Swift.String]? = nil,
            sourceType: Swift.String? = nil,
            status: Swift.String? = nil,
            subscriptionCreationTime: Swift.String? = nil
        )
        {
            self.custSubscriptionId = custSubscriptionId
            self.customerAwsId = customerAwsId
            self.enabled = enabled
            self.eventCategoriesList = eventCategoriesList
            self.snsTopicArn = snsTopicArn
            self.sourceIdsList = sourceIdsList
            self.sourceType = sourceType
            self.status = status
            self.subscriptionCreationTime = subscriptionCreationTime
        }
    }

}
