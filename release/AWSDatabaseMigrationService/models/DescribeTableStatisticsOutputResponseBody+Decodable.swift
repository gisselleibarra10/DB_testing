// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTableStatisticsOutputResponseBody: Swift.Equatable {
    let replicationTaskArn: Swift.String?
    let tableStatistics: [DatabaseMigrationClientTypes.TableStatistics]?
    let marker: Swift.String?
}

extension DescribeTableStatisticsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case replicationTaskArn = "ReplicationTaskArn"
        case tableStatistics = "TableStatistics"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationTaskArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .replicationTaskArn)
        replicationTaskArn = replicationTaskArnDecoded
        let tableStatisticsContainer = try containerValues.decodeIfPresent([DatabaseMigrationClientTypes.TableStatistics?].self, forKey: .tableStatistics)
        var tableStatisticsDecoded0:[DatabaseMigrationClientTypes.TableStatistics]? = nil
        if let tableStatisticsContainer = tableStatisticsContainer {
            tableStatisticsDecoded0 = [DatabaseMigrationClientTypes.TableStatistics]()
            for structure0 in tableStatisticsContainer {
                if let structure0 = structure0 {
                    tableStatisticsDecoded0?.append(structure0)
                }
            }
        }
        tableStatistics = tableStatisticsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
