// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOrderableReplicationInstancesOutputResponseBody: Swift.Equatable {
    let orderableReplicationInstances: [DatabaseMigrationClientTypes.OrderableReplicationInstance]?
    let marker: Swift.String?
}

extension DescribeOrderableReplicationInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case orderableReplicationInstances = "OrderableReplicationInstances"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let orderableReplicationInstancesContainer = try containerValues.decodeIfPresent([DatabaseMigrationClientTypes.OrderableReplicationInstance?].self, forKey: .orderableReplicationInstances)
        var orderableReplicationInstancesDecoded0:[DatabaseMigrationClientTypes.OrderableReplicationInstance]? = nil
        if let orderableReplicationInstancesContainer = orderableReplicationInstancesContainer {
            orderableReplicationInstancesDecoded0 = [DatabaseMigrationClientTypes.OrderableReplicationInstance]()
            for structure0 in orderableReplicationInstancesContainer {
                if let structure0 = structure0 {
                    orderableReplicationInstancesDecoded0?.append(structure0)
                }
            }
        }
        orderableReplicationInstances = orderableReplicationInstancesDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
