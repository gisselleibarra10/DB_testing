// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DatabaseMigrationClientTypes.DatabaseShortInfoResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case databaseEngine = "DatabaseEngine"
        case databaseId = "DatabaseId"
        case databaseIpAddress = "DatabaseIpAddress"
        case databaseName = "DatabaseName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let databaseEngine = self.databaseEngine {
            try encodeContainer.encode(databaseEngine, forKey: .databaseEngine)
        }
        if let databaseId = self.databaseId {
            try encodeContainer.encode(databaseId, forKey: .databaseId)
        }
        if let databaseIpAddress = self.databaseIpAddress {
            try encodeContainer.encode(databaseIpAddress, forKey: .databaseIpAddress)
        }
        if let databaseName = self.databaseName {
            try encodeContainer.encode(databaseName, forKey: .databaseName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let databaseIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .databaseId)
        databaseId = databaseIdDecoded
        let databaseNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .databaseName)
        databaseName = databaseNameDecoded
        let databaseIpAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .databaseIpAddress)
        databaseIpAddress = databaseIpAddressDecoded
        let databaseEngineDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .databaseEngine)
        databaseEngine = databaseEngineDecoded
    }
}
