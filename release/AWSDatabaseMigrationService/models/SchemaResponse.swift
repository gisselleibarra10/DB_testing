// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DatabaseMigrationClientTypes {
    /// Describes a schema in a Fleet Advisor collector inventory.
    public struct SchemaResponse: Swift.Equatable {
        /// The number of lines of code in a schema in a Fleet Advisor collector inventory.
        public var codeLineCount: Swift.Int?
        /// The size level of the code in a schema in a Fleet Advisor collector inventory.
        public var codeSize: Swift.Int?
        /// The complexity level of the code in a schema in a Fleet Advisor collector inventory.
        public var complexity: Swift.String?
        /// The database for a schema in a Fleet Advisor collector inventory.
        public var databaseInstance: DatabaseMigrationClientTypes.DatabaseShortInfoResponse?
        /// Describes a schema in a Fleet Advisor collector inventory.
        public var originalSchema: DatabaseMigrationClientTypes.SchemaShortInfoResponse?
        /// The ID of a schema in a Fleet Advisor collector inventory.
        public var schemaId: Swift.String?
        /// The name of a schema in a Fleet Advisor collector inventory.
        public var schemaName: Swift.String?
        /// The database server for a schema in a Fleet Advisor collector inventory.
        public var server: DatabaseMigrationClientTypes.ServerShortInfoResponse?
        /// The similarity value for a schema in a Fleet Advisor collector inventory. A higher similarity value indicates that a schema is likely to be a duplicate.
        public var similarity: Swift.Double?

        public init (
            codeLineCount: Swift.Int? = nil,
            codeSize: Swift.Int? = nil,
            complexity: Swift.String? = nil,
            databaseInstance: DatabaseMigrationClientTypes.DatabaseShortInfoResponse? = nil,
            originalSchema: DatabaseMigrationClientTypes.SchemaShortInfoResponse? = nil,
            schemaId: Swift.String? = nil,
            schemaName: Swift.String? = nil,
            server: DatabaseMigrationClientTypes.ServerShortInfoResponse? = nil,
            similarity: Swift.Double? = nil
        )
        {
            self.codeLineCount = codeLineCount
            self.codeSize = codeSize
            self.complexity = complexity
            self.databaseInstance = databaseInstance
            self.originalSchema = originalSchema
            self.schemaId = schemaId
            self.schemaName = schemaName
            self.server = server
            self.similarity = similarity
        }
    }

}
