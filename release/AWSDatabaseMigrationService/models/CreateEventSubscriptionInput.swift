// Code generated by smithy-swift-codegen. DO NOT EDIT!



///
public struct CreateEventSubscriptionInput: Swift.Equatable {
    /// A Boolean value; set to true to activate the subscription, or set to false to create the subscription but not activate it.
    public var enabled: Swift.Bool?
    /// A list of event categories for a source type that you want to subscribe to. For more information, see [Working with Events and Notifications](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html) in the Database Migration Service User Guide.
    public var eventCategories: [Swift.String]?
    /// The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
    /// This member is required.
    public var snsTopicArn: Swift.String?
    /// A list of identifiers for which DMS provides notification events. If you don't specify a value, notifications are provided for all sources. If you specify multiple values, they must be of the same type. For example, if you specify a database instance ID, then all of the other values must be database instance IDs.
    public var sourceIds: [Swift.String]?
    /// The type of DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to replication-instance. If this value isn't specified, all events are returned. Valid values: replication-instance | replication-task
    public var sourceType: Swift.String?
    /// The name of the DMS event notification subscription. This name must be less than 255 characters.
    /// This member is required.
    public var subscriptionName: Swift.String?
    /// One or more tags to be assigned to the event subscription.
    public var tags: [DatabaseMigrationClientTypes.Tag]?

    public init (
        enabled: Swift.Bool? = nil,
        eventCategories: [Swift.String]? = nil,
        snsTopicArn: Swift.String? = nil,
        sourceIds: [Swift.String]? = nil,
        sourceType: Swift.String? = nil,
        subscriptionName: Swift.String? = nil,
        tags: [DatabaseMigrationClientTypes.Tag]? = nil
    )
    {
        self.enabled = enabled
        self.eventCategories = eventCategories
        self.snsTopicArn = snsTopicArn
        self.sourceIds = sourceIds
        self.sourceType = sourceType
        self.subscriptionName = subscriptionName
        self.tags = tags
    }
}
