// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DatabaseMigrationClientTypes {
    /// Provides information about types of supported endpoints in response to a request by the DescribeEndpointTypes operation. This information includes the type of endpoint, the database engine name, and whether change data capture (CDC) is supported.
    public struct SupportedEndpointType: Swift.Equatable {
        /// The type of endpoint. Valid values are source and target.
        public var endpointType: DatabaseMigrationClientTypes.ReplicationEndpointTypeValue?
        /// The expanded name for the engine name. For example, if the EngineName parameter is "aurora," this value would be "Amazon Aurora MySQL."
        public var engineDisplayName: Swift.String?
        /// The database engine name. Valid values, depending on the EndpointType, include "mysql", "oracle", "postgres", "mariadb", "aurora", "aurora-postgresql", "redshift", "s3", "db2", "azuredb", "sybase", "dynamodb", "mongodb", "kinesis", "kafka", "elasticsearch", "documentdb", "sqlserver", and "neptune".
        public var engineName: Swift.String?
        /// The earliest DMS engine version that supports this endpoint engine. Note that endpoint engines released with DMS versions earlier than 3.1.1 do not return a value for this parameter.
        public var replicationInstanceEngineMinimumVersion: Swift.String?
        /// Indicates if change data capture (CDC) is supported.
        public var supportsCDC: Swift.Bool

        public init (
            endpointType: DatabaseMigrationClientTypes.ReplicationEndpointTypeValue? = nil,
            engineDisplayName: Swift.String? = nil,
            engineName: Swift.String? = nil,
            replicationInstanceEngineMinimumVersion: Swift.String? = nil,
            supportsCDC: Swift.Bool = false
        )
        {
            self.endpointType = endpointType
            self.engineDisplayName = engineDisplayName
            self.engineName = engineName
            self.replicationInstanceEngineMinimumVersion = replicationInstanceEngineMinimumVersion
            self.supportsCDC = supportsCDC
        }
    }

}
