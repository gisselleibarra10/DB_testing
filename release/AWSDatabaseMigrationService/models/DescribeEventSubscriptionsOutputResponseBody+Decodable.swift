// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEventSubscriptionsOutputResponseBody: Swift.Equatable {
    let marker: Swift.String?
    let eventSubscriptionsList: [DatabaseMigrationClientTypes.EventSubscription]?
}

extension DescribeEventSubscriptionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventSubscriptionsList = "EventSubscriptionsList"
        case marker = "Marker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let eventSubscriptionsListContainer = try containerValues.decodeIfPresent([DatabaseMigrationClientTypes.EventSubscription?].self, forKey: .eventSubscriptionsList)
        var eventSubscriptionsListDecoded0:[DatabaseMigrationClientTypes.EventSubscription]? = nil
        if let eventSubscriptionsListContainer = eventSubscriptionsListContainer {
            eventSubscriptionsListDecoded0 = [DatabaseMigrationClientTypes.EventSubscription]()
            for structure0 in eventSubscriptionsListContainer {
                if let structure0 = structure0 {
                    eventSubscriptionsListDecoded0?.append(structure0)
                }
            }
        }
        eventSubscriptionsList = eventSubscriptionsListDecoded0
    }
}
