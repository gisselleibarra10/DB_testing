// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DatabaseMigrationClientTypes.CollectorHealthCheck: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case collectorStatus = "CollectorStatus"
        case localCollectorS3Access = "LocalCollectorS3Access"
        case webCollectorGrantedRoleBasedAccess = "WebCollectorGrantedRoleBasedAccess"
        case webCollectorS3Access = "WebCollectorS3Access"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let collectorStatus = self.collectorStatus {
            try encodeContainer.encode(collectorStatus.rawValue, forKey: .collectorStatus)
        }
        if let localCollectorS3Access = self.localCollectorS3Access {
            try encodeContainer.encode(localCollectorS3Access, forKey: .localCollectorS3Access)
        }
        if let webCollectorGrantedRoleBasedAccess = self.webCollectorGrantedRoleBasedAccess {
            try encodeContainer.encode(webCollectorGrantedRoleBasedAccess, forKey: .webCollectorGrantedRoleBasedAccess)
        }
        if let webCollectorS3Access = self.webCollectorS3Access {
            try encodeContainer.encode(webCollectorS3Access, forKey: .webCollectorS3Access)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let collectorStatusDecoded = try containerValues.decodeIfPresent(DatabaseMigrationClientTypes.CollectorStatus.self, forKey: .collectorStatus)
        collectorStatus = collectorStatusDecoded
        let localCollectorS3AccessDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .localCollectorS3Access)
        localCollectorS3Access = localCollectorS3AccessDecoded
        let webCollectorS3AccessDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .webCollectorS3Access)
        webCollectorS3Access = webCollectorS3AccessDecoded
        let webCollectorGrantedRoleBasedAccessDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .webCollectorGrantedRoleBasedAccess)
        webCollectorGrantedRoleBasedAccess = webCollectorGrantedRoleBasedAccessDecoded
    }
}
