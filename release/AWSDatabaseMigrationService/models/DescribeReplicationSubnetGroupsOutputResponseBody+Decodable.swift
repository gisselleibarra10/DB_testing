// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReplicationSubnetGroupsOutputResponseBody: Swift.Equatable {
    let marker: Swift.String?
    let replicationSubnetGroups: [DatabaseMigrationClientTypes.ReplicationSubnetGroup]?
}

extension DescribeReplicationSubnetGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case replicationSubnetGroups = "ReplicationSubnetGroups"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let replicationSubnetGroupsContainer = try containerValues.decodeIfPresent([DatabaseMigrationClientTypes.ReplicationSubnetGroup?].self, forKey: .replicationSubnetGroups)
        var replicationSubnetGroupsDecoded0:[DatabaseMigrationClientTypes.ReplicationSubnetGroup]? = nil
        if let replicationSubnetGroupsContainer = replicationSubnetGroupsContainer {
            replicationSubnetGroupsDecoded0 = [DatabaseMigrationClientTypes.ReplicationSubnetGroup]()
            for structure0 in replicationSubnetGroupsContainer {
                if let structure0 = structure0 {
                    replicationSubnetGroupsDecoded0?.append(structure0)
                }
            }
        }
        replicationSubnetGroups = replicationSubnetGroupsDecoded0
    }
}
