// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DatabaseMigrationClientTypes {
    /// Describes an endpoint of a database instance in response to operations such as the following:
    ///
    /// * CreateEndpoint
    ///
    /// * DescribeEndpoint
    ///
    /// * ModifyEndpoint
    public struct Endpoint: Swift.Equatable {
        /// The Amazon Resource Name (ARN) used for SSL connection to the endpoint.
        public var certificateArn: Swift.String?
        /// The name of the database at the endpoint.
        public var databaseName: Swift.String?
        /// The settings for the DMS Transfer type source. For more information, see the DmsTransferSettings structure.
        public var dmsTransferSettings: DatabaseMigrationClientTypes.DmsTransferSettings?
        /// Provides information that defines a DocumentDB endpoint.
        public var docDbSettings: DatabaseMigrationClientTypes.DocDbSettings?
        /// The settings for the DynamoDB target endpoint. For more information, see the DynamoDBSettings structure.
        public var dynamoDbSettings: DatabaseMigrationClientTypes.DynamoDbSettings?
        /// The settings for the OpenSearch source endpoint. For more information, see the ElasticsearchSettings structure.
        public var elasticsearchSettings: DatabaseMigrationClientTypes.ElasticsearchSettings?
        /// The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
        public var endpointArn: Swift.String?
        /// The database endpoint identifier. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens.
        public var endpointIdentifier: Swift.String?
        /// The type of endpoint. Valid values are source and target.
        public var endpointType: DatabaseMigrationClientTypes.ReplicationEndpointTypeValue?
        /// The expanded name for the engine name. For example, if the EngineName parameter is "aurora," this value would be "Amazon Aurora MySQL."
        public var engineDisplayName: Swift.String?
        /// The database engine name. Valid values, depending on the EndpointType, include "mysql", "oracle", "postgres", "mariadb", "aurora", "aurora-postgresql", "opensearch", "redshift", "s3", "db2", "azuredb", "sybase", "dynamodb", "mongodb", "kinesis", "kafka", "elasticsearch", "documentdb", "sqlserver", and "neptune".
        public var engineName: Swift.String?
        /// Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account.
        public var externalId: Swift.String?
        /// The external table definition.
        public var externalTableDefinition: Swift.String?
        /// Additional connection attributes used to connect to the endpoint.
        public var extraConnectionAttributes: Swift.String?
        /// Settings in JSON format for the source GCP MySQL endpoint.
        public var gcpMySQLSettings: DatabaseMigrationClientTypes.GcpMySQLSettings?
        /// The settings for the IBM Db2 LUW source endpoint. For more information, see the IBMDb2Settings structure.
        public var iBMDb2Settings: DatabaseMigrationClientTypes.IBMDb2Settings?
        /// The settings for the Apache Kafka target endpoint. For more information, see the KafkaSettings structure.
        public var kafkaSettings: DatabaseMigrationClientTypes.KafkaSettings?
        /// The settings for the Amazon Kinesis target endpoint. For more information, see the KinesisSettings structure.
        public var kinesisSettings: DatabaseMigrationClientTypes.KinesisSettings?
        /// An KMS key identifier that is used to encrypt the connection parameters for the endpoint. If you don't specify a value for the KmsKeyId parameter, then DMS uses your default encryption key. KMS creates the default encryption key for your Amazon Web Services account. Your Amazon Web Services account has a different default encryption key for each Amazon Web Services Region.
        public var kmsKeyId: Swift.String?
        /// The settings for the Microsoft SQL Server source and target endpoint. For more information, see the MicrosoftSQLServerSettings structure.
        public var microsoftSQLServerSettings: DatabaseMigrationClientTypes.MicrosoftSQLServerSettings?
        /// The settings for the MongoDB source endpoint. For more information, see the MongoDbSettings structure.
        public var mongoDbSettings: DatabaseMigrationClientTypes.MongoDbSettings?
        /// The settings for the MySQL source and target endpoint. For more information, see the MySQLSettings structure.
        public var mySQLSettings: DatabaseMigrationClientTypes.MySQLSettings?
        /// The settings for the Amazon Neptune target endpoint. For more information, see the NeptuneSettings structure.
        public var neptuneSettings: DatabaseMigrationClientTypes.NeptuneSettings?
        /// The settings for the Oracle source and target endpoint. For more information, see the OracleSettings structure.
        public var oracleSettings: DatabaseMigrationClientTypes.OracleSettings?
        /// The port value used to access the endpoint.
        public var port: Swift.Int?
        /// The settings for the PostgreSQL source and target endpoint. For more information, see the PostgreSQLSettings structure.
        public var postgreSQLSettings: DatabaseMigrationClientTypes.PostgreSQLSettings?
        /// The settings for the Redis target endpoint. For more information, see the RedisSettings structure.
        public var redisSettings: DatabaseMigrationClientTypes.RedisSettings?
        /// Settings for the Amazon Redshift endpoint.
        public var redshiftSettings: DatabaseMigrationClientTypes.RedshiftSettings?
        /// The settings for the S3 target endpoint. For more information, see the S3Settings structure.
        public var s3Settings: DatabaseMigrationClientTypes.S3Settings?
        /// The name of the server at the endpoint.
        public var serverName: Swift.String?
        /// The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the iam:PassRole action.
        public var serviceAccessRoleArn: Swift.String?
        /// The SSL mode used to connect to the endpoint. The default value is none.
        public var sslMode: DatabaseMigrationClientTypes.DmsSslModeValue?
        /// The status of the endpoint.
        public var status: Swift.String?
        /// The settings for the SAP ASE source and target endpoint. For more information, see the SybaseSettings structure.
        public var sybaseSettings: DatabaseMigrationClientTypes.SybaseSettings?
        /// The user name used to connect to the endpoint.
        public var username: Swift.String?

        public init (
            certificateArn: Swift.String? = nil,
            databaseName: Swift.String? = nil,
            dmsTransferSettings: DatabaseMigrationClientTypes.DmsTransferSettings? = nil,
            docDbSettings: DatabaseMigrationClientTypes.DocDbSettings? = nil,
            dynamoDbSettings: DatabaseMigrationClientTypes.DynamoDbSettings? = nil,
            elasticsearchSettings: DatabaseMigrationClientTypes.ElasticsearchSettings? = nil,
            endpointArn: Swift.String? = nil,
            endpointIdentifier: Swift.String? = nil,
            endpointType: DatabaseMigrationClientTypes.ReplicationEndpointTypeValue? = nil,
            engineDisplayName: Swift.String? = nil,
            engineName: Swift.String? = nil,
            externalId: Swift.String? = nil,
            externalTableDefinition: Swift.String? = nil,
            extraConnectionAttributes: Swift.String? = nil,
            gcpMySQLSettings: DatabaseMigrationClientTypes.GcpMySQLSettings? = nil,
            iBMDb2Settings: DatabaseMigrationClientTypes.IBMDb2Settings? = nil,
            kafkaSettings: DatabaseMigrationClientTypes.KafkaSettings? = nil,
            kinesisSettings: DatabaseMigrationClientTypes.KinesisSettings? = nil,
            kmsKeyId: Swift.String? = nil,
            microsoftSQLServerSettings: DatabaseMigrationClientTypes.MicrosoftSQLServerSettings? = nil,
            mongoDbSettings: DatabaseMigrationClientTypes.MongoDbSettings? = nil,
            mySQLSettings: DatabaseMigrationClientTypes.MySQLSettings? = nil,
            neptuneSettings: DatabaseMigrationClientTypes.NeptuneSettings? = nil,
            oracleSettings: DatabaseMigrationClientTypes.OracleSettings? = nil,
            port: Swift.Int? = nil,
            postgreSQLSettings: DatabaseMigrationClientTypes.PostgreSQLSettings? = nil,
            redisSettings: DatabaseMigrationClientTypes.RedisSettings? = nil,
            redshiftSettings: DatabaseMigrationClientTypes.RedshiftSettings? = nil,
            s3Settings: DatabaseMigrationClientTypes.S3Settings? = nil,
            serverName: Swift.String? = nil,
            serviceAccessRoleArn: Swift.String? = nil,
            sslMode: DatabaseMigrationClientTypes.DmsSslModeValue? = nil,
            status: Swift.String? = nil,
            sybaseSettings: DatabaseMigrationClientTypes.SybaseSettings? = nil,
            username: Swift.String? = nil
        )
        {
            self.certificateArn = certificateArn
            self.databaseName = databaseName
            self.dmsTransferSettings = dmsTransferSettings
            self.docDbSettings = docDbSettings
            self.dynamoDbSettings = dynamoDbSettings
            self.elasticsearchSettings = elasticsearchSettings
            self.endpointArn = endpointArn
            self.endpointIdentifier = endpointIdentifier
            self.endpointType = endpointType
            self.engineDisplayName = engineDisplayName
            self.engineName = engineName
            self.externalId = externalId
            self.externalTableDefinition = externalTableDefinition
            self.extraConnectionAttributes = extraConnectionAttributes
            self.gcpMySQLSettings = gcpMySQLSettings
            self.iBMDb2Settings = iBMDb2Settings
            self.kafkaSettings = kafkaSettings
            self.kinesisSettings = kinesisSettings
            self.kmsKeyId = kmsKeyId
            self.microsoftSQLServerSettings = microsoftSQLServerSettings
            self.mongoDbSettings = mongoDbSettings
            self.mySQLSettings = mySQLSettings
            self.neptuneSettings = neptuneSettings
            self.oracleSettings = oracleSettings
            self.port = port
            self.postgreSQLSettings = postgreSQLSettings
            self.redisSettings = redisSettings
            self.redshiftSettings = redshiftSettings
            self.s3Settings = s3Settings
            self.serverName = serverName
            self.serviceAccessRoleArn = serviceAccessRoleArn
            self.sslMode = sslMode
            self.status = status
            self.sybaseSettings = sybaseSettings
            self.username = username
        }
    }

}
