// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApplicationDiscoveryClientTypes.CustomerConnectorInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activeConnectors
        case blackListedConnectors
        case healthyConnectors
        case shutdownConnectors
        case totalConnectors
        case unhealthyConnectors
        case unknownConnectors
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if activeConnectors != 0 {
            try encodeContainer.encode(activeConnectors, forKey: .activeConnectors)
        }
        if blackListedConnectors != 0 {
            try encodeContainer.encode(blackListedConnectors, forKey: .blackListedConnectors)
        }
        if healthyConnectors != 0 {
            try encodeContainer.encode(healthyConnectors, forKey: .healthyConnectors)
        }
        if shutdownConnectors != 0 {
            try encodeContainer.encode(shutdownConnectors, forKey: .shutdownConnectors)
        }
        if totalConnectors != 0 {
            try encodeContainer.encode(totalConnectors, forKey: .totalConnectors)
        }
        if unhealthyConnectors != 0 {
            try encodeContainer.encode(unhealthyConnectors, forKey: .unhealthyConnectors)
        }
        if unknownConnectors != 0 {
            try encodeContainer.encode(unknownConnectors, forKey: .unknownConnectors)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activeConnectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .activeConnectors) ?? 0
        activeConnectors = activeConnectorsDecoded
        let healthyConnectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .healthyConnectors) ?? 0
        healthyConnectors = healthyConnectorsDecoded
        let blackListedConnectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .blackListedConnectors) ?? 0
        blackListedConnectors = blackListedConnectorsDecoded
        let shutdownConnectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .shutdownConnectors) ?? 0
        shutdownConnectors = shutdownConnectorsDecoded
        let unhealthyConnectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unhealthyConnectors) ?? 0
        unhealthyConnectors = unhealthyConnectorsDecoded
        let totalConnectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalConnectors) ?? 0
        totalConnectors = totalConnectorsDecoded
        let unknownConnectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unknownConnectors) ?? 0
        unknownConnectors = unknownConnectorsDecoded
    }
}
