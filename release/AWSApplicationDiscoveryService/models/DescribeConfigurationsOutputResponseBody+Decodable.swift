// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConfigurationsOutputResponseBody: Swift.Equatable {
    let configurations: [[Swift.String:Swift.String]]?
}

extension DescribeConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurations
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationsContainer = try containerValues.decodeIfPresent([[Swift.String: Swift.String?]?].self, forKey: .configurations)
        var configurationsDecoded0:[[Swift.String:Swift.String]]? = nil
        if let configurationsContainer = configurationsContainer {
            configurationsDecoded0 = [[Swift.String:Swift.String]]()
            for map0 in configurationsContainer {
                var configurationsContainerDecoded0: [Swift.String: Swift.String]? = nil
                if let map0 = map0 {
                    configurationsContainerDecoded0 = [Swift.String: Swift.String]()
                    for (key1, string1) in map0 {
                        if let string1 = string1 {
                            configurationsContainerDecoded0?[key1] = string1
                        }
                    }
                }
                if let configurationsContainerDecoded0 = configurationsContainerDecoded0 {
                    configurationsDecoded0?.append(configurationsContainerDecoded0)
                }
            }
        }
        configurations = configurationsDecoded0
    }
}
