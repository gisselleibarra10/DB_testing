// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServerNeighborsInputBody: Swift.Equatable {
    let configurationId: Swift.String?
    let portInformationNeeded: Swift.Bool
    let neighborConfigurationIds: [Swift.String]?
    let maxResults: Swift.Int
    let nextToken: Swift.String?
}

extension ListServerNeighborsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationId
        case maxResults
        case neighborConfigurationIds
        case nextToken
        case portInformationNeeded
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .configurationId)
        configurationId = configurationIdDecoded
        let portInformationNeededDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .portInformationNeeded) ?? false
        portInformationNeeded = portInformationNeededDecoded
        let neighborConfigurationIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .neighborConfigurationIds)
        var neighborConfigurationIdsDecoded0:[Swift.String]? = nil
        if let neighborConfigurationIdsContainer = neighborConfigurationIdsContainer {
            neighborConfigurationIdsDecoded0 = [Swift.String]()
            for string0 in neighborConfigurationIdsContainer {
                if let string0 = string0 {
                    neighborConfigurationIdsDecoded0?.append(string0)
                }
            }
        }
        neighborConfigurationIds = neighborConfigurationIdsDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults) ?? 0
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
