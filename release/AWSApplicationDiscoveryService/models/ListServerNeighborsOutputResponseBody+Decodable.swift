// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServerNeighborsOutputResponseBody: Swift.Equatable {
    let neighbors: [ApplicationDiscoveryClientTypes.NeighborConnectionDetail]?
    let nextToken: Swift.String?
    let knownDependencyCount: Swift.Int
}

extension ListServerNeighborsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case knownDependencyCount
        case neighbors
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let neighborsContainer = try containerValues.decodeIfPresent([ApplicationDiscoveryClientTypes.NeighborConnectionDetail?].self, forKey: .neighbors)
        var neighborsDecoded0:[ApplicationDiscoveryClientTypes.NeighborConnectionDetail]? = nil
        if let neighborsContainer = neighborsContainer {
            neighborsDecoded0 = [ApplicationDiscoveryClientTypes.NeighborConnectionDetail]()
            for structure0 in neighborsContainer {
                if let structure0 = structure0 {
                    neighborsDecoded0?.append(structure0)
                }
            }
        }
        neighbors = neighborsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let knownDependencyCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .knownDependencyCount) ?? 0
        knownDependencyCount = knownDependencyCountDecoded
    }
}
