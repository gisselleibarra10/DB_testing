// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApplicationDiscoveryClientTypes.CustomerMeCollectorInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activeMeCollectors
        case denyListedMeCollectors
        case healthyMeCollectors
        case shutdownMeCollectors
        case totalMeCollectors
        case unhealthyMeCollectors
        case unknownMeCollectors
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if activeMeCollectors != 0 {
            try encodeContainer.encode(activeMeCollectors, forKey: .activeMeCollectors)
        }
        if denyListedMeCollectors != 0 {
            try encodeContainer.encode(denyListedMeCollectors, forKey: .denyListedMeCollectors)
        }
        if healthyMeCollectors != 0 {
            try encodeContainer.encode(healthyMeCollectors, forKey: .healthyMeCollectors)
        }
        if shutdownMeCollectors != 0 {
            try encodeContainer.encode(shutdownMeCollectors, forKey: .shutdownMeCollectors)
        }
        if totalMeCollectors != 0 {
            try encodeContainer.encode(totalMeCollectors, forKey: .totalMeCollectors)
        }
        if unhealthyMeCollectors != 0 {
            try encodeContainer.encode(unhealthyMeCollectors, forKey: .unhealthyMeCollectors)
        }
        if unknownMeCollectors != 0 {
            try encodeContainer.encode(unknownMeCollectors, forKey: .unknownMeCollectors)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activeMeCollectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .activeMeCollectors) ?? 0
        activeMeCollectors = activeMeCollectorsDecoded
        let healthyMeCollectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .healthyMeCollectors) ?? 0
        healthyMeCollectors = healthyMeCollectorsDecoded
        let denyListedMeCollectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .denyListedMeCollectors) ?? 0
        denyListedMeCollectors = denyListedMeCollectorsDecoded
        let shutdownMeCollectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .shutdownMeCollectors) ?? 0
        shutdownMeCollectors = shutdownMeCollectorsDecoded
        let unhealthyMeCollectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unhealthyMeCollectors) ?? 0
        unhealthyMeCollectors = unhealthyMeCollectorsDecoded
        let totalMeCollectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalMeCollectors) ?? 0
        totalMeCollectors = totalMeCollectorsDecoded
        let unknownMeCollectorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unknownMeCollectors) ?? 0
        unknownMeCollectors = unknownMeCollectorsDecoded
    }
}
