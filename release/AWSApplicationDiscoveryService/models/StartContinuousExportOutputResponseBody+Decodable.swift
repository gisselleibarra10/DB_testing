// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartContinuousExportOutputResponseBody: Swift.Equatable {
    let exportId: Swift.String?
    let s3Bucket: Swift.String?
    let startTime: ClientRuntime.Date?
    let dataSource: ApplicationDiscoveryClientTypes.DataSource?
    let schemaStorageConfig: [Swift.String:Swift.String]?
}

extension StartContinuousExportOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSource
        case exportId
        case s3Bucket
        case schemaStorageConfig
        case startTime
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exportIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exportId)
        exportId = exportIdDecoded
        let s3BucketDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3Bucket)
        s3Bucket = s3BucketDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let dataSourceDecoded = try containerValues.decodeIfPresent(ApplicationDiscoveryClientTypes.DataSource.self, forKey: .dataSource)
        dataSource = dataSourceDecoded
        let schemaStorageConfigContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .schemaStorageConfig)
        var schemaStorageConfigDecoded0: [Swift.String:Swift.String]? = nil
        if let schemaStorageConfigContainer = schemaStorageConfigContainer {
            schemaStorageConfigDecoded0 = [Swift.String:Swift.String]()
            for (key0, string0) in schemaStorageConfigContainer {
                if let string0 = string0 {
                    schemaStorageConfigDecoded0?[key0] = string0
                }
            }
        }
        schemaStorageConfig = schemaStorageConfigDecoded0
    }
}
