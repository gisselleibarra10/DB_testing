// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDiscoverySummaryOutputResponseBody: Swift.Equatable {
    let servers: Swift.Int
    let applications: Swift.Int
    let serversMappedToApplications: Swift.Int
    let serversMappedtoTags: Swift.Int
    let agentSummary: ApplicationDiscoveryClientTypes.CustomerAgentInfo?
    let connectorSummary: ApplicationDiscoveryClientTypes.CustomerConnectorInfo?
    let meCollectorSummary: ApplicationDiscoveryClientTypes.CustomerMeCollectorInfo?
    let agentlessCollectorSummary: ApplicationDiscoveryClientTypes.CustomerAgentlessCollectorInfo?
}

extension GetDiscoverySummaryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case agentSummary
        case agentlessCollectorSummary
        case applications
        case connectorSummary
        case meCollectorSummary
        case servers
        case serversMappedToApplications
        case serversMappedtoTags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serversDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .servers) ?? 0
        servers = serversDecoded
        let applicationsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .applications) ?? 0
        applications = applicationsDecoded
        let serversMappedToApplicationsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .serversMappedToApplications) ?? 0
        serversMappedToApplications = serversMappedToApplicationsDecoded
        let serversMappedtoTagsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .serversMappedtoTags) ?? 0
        serversMappedtoTags = serversMappedtoTagsDecoded
        let agentSummaryDecoded = try containerValues.decodeIfPresent(ApplicationDiscoveryClientTypes.CustomerAgentInfo.self, forKey: .agentSummary)
        agentSummary = agentSummaryDecoded
        let connectorSummaryDecoded = try containerValues.decodeIfPresent(ApplicationDiscoveryClientTypes.CustomerConnectorInfo.self, forKey: .connectorSummary)
        connectorSummary = connectorSummaryDecoded
        let meCollectorSummaryDecoded = try containerValues.decodeIfPresent(ApplicationDiscoveryClientTypes.CustomerMeCollectorInfo.self, forKey: .meCollectorSummary)
        meCollectorSummary = meCollectorSummaryDecoded
        let agentlessCollectorSummaryDecoded = try containerValues.decodeIfPresent(ApplicationDiscoveryClientTypes.CustomerAgentlessCollectorInfo.self, forKey: .agentlessCollectorSummary)
        agentlessCollectorSummary = agentlessCollectorSummaryDecoded
    }
}
