// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeImportTasksOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let tasks: [ApplicationDiscoveryClientTypes.ImportTask]?
}

extension DescribeImportTasksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case tasks
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let tasksContainer = try containerValues.decodeIfPresent([ApplicationDiscoveryClientTypes.ImportTask?].self, forKey: .tasks)
        var tasksDecoded0:[ApplicationDiscoveryClientTypes.ImportTask]? = nil
        if let tasksContainer = tasksContainer {
            tasksDecoded0 = [ApplicationDiscoveryClientTypes.ImportTask]()
            for structure0 in tasksContainer {
                if let structure0 = structure0 {
                    tasksDecoded0?.append(structure0)
                }
            }
        }
        tasks = tasksDecoded0
    }
}
