// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProjectOutputResponseBody: Swift.Equatable {
    let projectId: Swift.String?
    let projectArn: Swift.String?
    let projectName: Swift.String?
    let portalId: Swift.String?
    let projectDescription: Swift.String?
    let projectCreationDate: ClientRuntime.Date?
    let projectLastUpdateDate: ClientRuntime.Date?
}

extension DescribeProjectOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case portalId
        case projectArn
        case projectCreationDate
        case projectDescription
        case projectId
        case projectLastUpdateDate
        case projectName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectId)
        projectId = projectIdDecoded
        let projectArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectArn)
        projectArn = projectArnDecoded
        let projectNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectName)
        projectName = projectNameDecoded
        let portalIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .portalId)
        portalId = portalIdDecoded
        let projectDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectDescription)
        projectDescription = projectDescriptionDecoded
        let projectCreationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .projectCreationDate)
        projectCreationDate = projectCreationDateDecoded
        let projectLastUpdateDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .projectLastUpdateDate)
        projectLastUpdateDate = projectLastUpdateDateDecoded
    }
}
