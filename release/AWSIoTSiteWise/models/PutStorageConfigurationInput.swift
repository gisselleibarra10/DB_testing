// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutStorageConfigurationInput: Swift.Equatable {
    /// Contains the storage configuration for time series (data streams) that aren't associated with asset properties. The disassociatedDataStorage can be one of the following values:
    ///
    /// * ENABLED – IoT SiteWise accepts time series that aren't associated with asset properties. After the disassociatedDataStorage is enabled, you can't disable it.
    ///
    /// * DISABLED – IoT SiteWise doesn't accept time series (data streams) that aren't associated with asset properties.
    ///
    ///
    /// For more information, see [Data streams](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html) in the IoT SiteWise User Guide.
    public var disassociatedDataStorage: IoTSiteWiseClientTypes.DisassociatedDataStorageState?
    /// Identifies a storage destination. If you specified MULTI_LAYER_STORAGE for the storage type, you must specify a MultiLayerStorage object.
    public var multiLayerStorage: IoTSiteWiseClientTypes.MultiLayerStorage?
    /// How many days your data is kept in the hot tier. By default, your data is kept indefinitely in the hot tier.
    public var retentionPeriod: IoTSiteWiseClientTypes.RetentionPeriod?
    /// The storage tier that you specified for your data. The storageType parameter can be one of the following values:
    ///
    /// * SITEWISE_DEFAULT_STORAGE – IoT SiteWise saves your data into the hot tier. The hot tier is a service-managed database.
    ///
    /// * MULTI_LAYER_STORAGE – IoT SiteWise saves your data in both the cold tier and the hot tier. The cold tier is a customer-managed Amazon S3 bucket.
    /// This member is required.
    public var storageType: IoTSiteWiseClientTypes.StorageType?

    public init (
        disassociatedDataStorage: IoTSiteWiseClientTypes.DisassociatedDataStorageState? = nil,
        multiLayerStorage: IoTSiteWiseClientTypes.MultiLayerStorage? = nil,
        retentionPeriod: IoTSiteWiseClientTypes.RetentionPeriod? = nil,
        storageType: IoTSiteWiseClientTypes.StorageType? = nil
    )
    {
        self.disassociatedDataStorage = disassociatedDataStorage
        self.multiLayerStorage = multiLayerStorage
        self.retentionPeriod = retentionPeriod
        self.storageType = storageType
    }
}
