// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateAssetPropertyInput: Swift.Equatable {
    /// The ID of the asset to be updated.
    /// This member is required.
    public var assetId: Swift.String?
    /// A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    public var clientToken: Swift.String?
    /// The alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature). For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html) in the IoT SiteWise User Guide. If you omit this parameter, the alias is removed from the property.
    public var propertyAlias: Swift.String?
    /// The ID of the asset property to be updated.
    /// This member is required.
    public var propertyId: Swift.String?
    /// The MQTT notification state (enabled or disabled) for this asset property. When the notification state is enabled, IoT SiteWise publishes property value updates to a unique MQTT topic. For more information, see [Interacting with other services](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html) in the IoT SiteWise User Guide. If you omit this parameter, the notification state is set to DISABLED.
    public var propertyNotificationState: IoTSiteWiseClientTypes.PropertyNotificationState?
    /// The unit of measure (such as Newtons or RPM) of the asset property. If you don't specify a value for this parameter, the service uses the value of the assetModelProperty in the asset model.
    public var propertyUnit: Swift.String?

    public init (
        assetId: Swift.String? = nil,
        clientToken: Swift.String? = nil,
        propertyAlias: Swift.String? = nil,
        propertyId: Swift.String? = nil,
        propertyNotificationState: IoTSiteWiseClientTypes.PropertyNotificationState? = nil,
        propertyUnit: Swift.String? = nil
    )
    {
        self.assetId = assetId
        self.clientToken = clientToken
        self.propertyAlias = propertyAlias
        self.propertyId = propertyId
        self.propertyNotificationState = propertyNotificationState
        self.propertyUnit = propertyUnit
    }
}
