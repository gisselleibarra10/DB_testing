// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAccessPolicyInput: Swift.Equatable {
    /// The identity for this access policy. Choose an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user.
    /// This member is required.
    public var accessPolicyIdentity: IoTSiteWiseClientTypes.Identity?
    /// The permission level for this access policy. Note that a project ADMINISTRATOR is also known as a project owner.
    /// This member is required.
    public var accessPolicyPermission: IoTSiteWiseClientTypes.Permission?
    /// The IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.
    /// This member is required.
    public var accessPolicyResource: IoTSiteWiseClientTypes.Resource?
    /// A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    public var clientToken: Swift.String?
    /// A list of key-value pairs that contain metadata for the access policy. For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html) in the IoT SiteWise User Guide.
    public var tags: [Swift.String:Swift.String]?

    public init (
        accessPolicyIdentity: IoTSiteWiseClientTypes.Identity? = nil,
        accessPolicyPermission: IoTSiteWiseClientTypes.Permission? = nil,
        accessPolicyResource: IoTSiteWiseClientTypes.Resource? = nil,
        clientToken: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.accessPolicyIdentity = accessPolicyIdentity
        self.accessPolicyPermission = accessPolicyPermission
        self.accessPolicyResource = accessPolicyResource
        self.clientToken = clientToken
        self.tags = tags
    }
}
