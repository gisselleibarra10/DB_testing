// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTSiteWiseClientTypes {
    /// Contains information for an asset property historical value entry that is associated with the [BatchGetAssetPropertyValueHistory](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html) API. To identify an asset property, you must specify one of the following:
    ///
    /// * The assetId and propertyId of an asset property.
    ///
    /// * A propertyAlias, which is a data stream alias (for example, /company/windfarm/3/turbine/7/temperature). To define an asset property's alias, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html).
    public struct BatchGetAssetPropertyValueHistoryEntry: Swift.Equatable {
        /// The ID of the asset in which the asset property was created.
        public var assetId: Swift.String?
        /// The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.
        public var endDate: ClientRuntime.Date?
        /// The ID of the entry.
        /// This member is required.
        public var entryId: Swift.String?
        /// The alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature). For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html) in the IoT SiteWise User Guide.
        public var propertyAlias: Swift.String?
        /// The ID of the asset property.
        public var propertyId: Swift.String?
        /// The quality by which to filter asset data.
        public var qualities: [IoTSiteWiseClientTypes.Quality]?
        /// The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.
        public var startDate: ClientRuntime.Date?
        /// The chronological sorting order of the requested information. Default: ASCENDING
        public var timeOrdering: IoTSiteWiseClientTypes.TimeOrdering?

        public init (
            assetId: Swift.String? = nil,
            endDate: ClientRuntime.Date? = nil,
            entryId: Swift.String? = nil,
            propertyAlias: Swift.String? = nil,
            propertyId: Swift.String? = nil,
            qualities: [IoTSiteWiseClientTypes.Quality]? = nil,
            startDate: ClientRuntime.Date? = nil,
            timeOrdering: IoTSiteWiseClientTypes.TimeOrdering? = nil
        )
        {
            self.assetId = assetId
            self.endDate = endDate
            self.entryId = entryId
            self.propertyAlias = propertyAlias
            self.propertyId = propertyId
            self.qualities = qualities
            self.startDate = startDate
            self.timeOrdering = timeOrdering
        }
    }

}
