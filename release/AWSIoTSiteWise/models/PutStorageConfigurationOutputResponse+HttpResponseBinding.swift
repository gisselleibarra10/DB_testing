// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutStorageConfigurationOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: PutStorageConfigurationOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.configurationStatus = output.configurationStatus
            self.disassociatedDataStorage = output.disassociatedDataStorage
            self.multiLayerStorage = output.multiLayerStorage
            self.retentionPeriod = output.retentionPeriod
            self.storageType = output.storageType
        } else {
            self.configurationStatus = nil
            self.disassociatedDataStorage = nil
            self.multiLayerStorage = nil
            self.retentionPeriod = nil
            self.storageType = nil
        }
    }
}
