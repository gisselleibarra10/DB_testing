// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTSiteWiseClientTypes.PropertyType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attribute
        case measurement
        case metric
        case transform
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attribute = self.attribute {
            try encodeContainer.encode(attribute, forKey: .attribute)
        }
        if let measurement = self.measurement {
            try encodeContainer.encode(measurement, forKey: .measurement)
        }
        if let metric = self.metric {
            try encodeContainer.encode(metric, forKey: .metric)
        }
        if let transform = self.transform {
            try encodeContainer.encode(transform, forKey: .transform)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributeDecoded = try containerValues.decodeIfPresent(IoTSiteWiseClientTypes.Attribute.self, forKey: .attribute)
        attribute = attributeDecoded
        let measurementDecoded = try containerValues.decodeIfPresent(IoTSiteWiseClientTypes.Measurement.self, forKey: .measurement)
        measurement = measurementDecoded
        let transformDecoded = try containerValues.decodeIfPresent(IoTSiteWiseClientTypes.Transform.self, forKey: .transform)
        transform = transformDecoded
        let metricDecoded = try containerValues.decodeIfPresent(IoTSiteWiseClientTypes.Metric.self, forKey: .metric)
        metric = metricDecoded
    }
}
