// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateBulkImportJobInputBody: Swift.Equatable {
    let jobName: Swift.String?
    let jobRoleArn: Swift.String?
    let files: [IoTSiteWiseClientTypes.File]?
    let errorReportLocation: IoTSiteWiseClientTypes.ErrorReportLocation?
    let jobConfiguration: IoTSiteWiseClientTypes.JobConfiguration?
}

extension CreateBulkImportJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errorReportLocation
        case files
        case jobConfiguration
        case jobName
        case jobRoleArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobName)
        jobName = jobNameDecoded
        let jobRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobRoleArn)
        jobRoleArn = jobRoleArnDecoded
        let filesContainer = try containerValues.decodeIfPresent([IoTSiteWiseClientTypes.File?].self, forKey: .files)
        var filesDecoded0:[IoTSiteWiseClientTypes.File]? = nil
        if let filesContainer = filesContainer {
            filesDecoded0 = [IoTSiteWiseClientTypes.File]()
            for structure0 in filesContainer {
                if let structure0 = structure0 {
                    filesDecoded0?.append(structure0)
                }
            }
        }
        files = filesDecoded0
        let errorReportLocationDecoded = try containerValues.decodeIfPresent(IoTSiteWiseClientTypes.ErrorReportLocation.self, forKey: .errorReportLocation)
        errorReportLocation = errorReportLocationDecoded
        let jobConfigurationDecoded = try containerValues.decodeIfPresent(IoTSiteWiseClientTypes.JobConfiguration.self, forKey: .jobConfiguration)
        jobConfiguration = jobConfigurationDecoded
    }
}
