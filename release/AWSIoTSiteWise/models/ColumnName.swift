// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IoTSiteWiseClientTypes {
    public enum ColumnName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case alias
        case assetId
        case dataType
        case propertyId
        case quality
        case timestampNanoOffset
        case timestampSeconds
        case value
        case sdkUnknown(Swift.String)

        public static var allCases: [ColumnName] {
            return [
                .alias,
                .assetId,
                .dataType,
                .propertyId,
                .quality,
                .timestampNanoOffset,
                .timestampSeconds,
                .value,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .alias: return "ALIAS"
            case .assetId: return "ASSET_ID"
            case .dataType: return "DATA_TYPE"
            case .propertyId: return "PROPERTY_ID"
            case .quality: return "QUALITY"
            case .timestampNanoOffset: return "TIMESTAMP_NANO_OFFSET"
            case .timestampSeconds: return "TIMESTAMP_SECONDS"
            case .value: return "VALUE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ColumnName(rawValue: rawValue) ?? ColumnName.sdkUnknown(rawValue)
        }
    }
}
