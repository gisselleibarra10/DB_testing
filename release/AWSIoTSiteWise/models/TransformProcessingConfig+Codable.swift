// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTSiteWiseClientTypes.TransformProcessingConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case computeLocation
        case forwardingConfig
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let computeLocation = self.computeLocation {
            try encodeContainer.encode(computeLocation.rawValue, forKey: .computeLocation)
        }
        if let forwardingConfig = self.forwardingConfig {
            try encodeContainer.encode(forwardingConfig, forKey: .forwardingConfig)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let computeLocationDecoded = try containerValues.decodeIfPresent(IoTSiteWiseClientTypes.ComputeLocation.self, forKey: .computeLocation)
        computeLocation = computeLocationDecoded
        let forwardingConfigDecoded = try containerValues.decodeIfPresent(IoTSiteWiseClientTypes.ForwardingConfig.self, forKey: .forwardingConfig)
        forwardingConfig = forwardingConfigDecoded
    }
}
