// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAssetOutputResponseBody: Swift.Equatable {
    let assetId: Swift.String?
    let assetArn: Swift.String?
    let assetName: Swift.String?
    let assetModelId: Swift.String?
    let assetProperties: [IoTSiteWiseClientTypes.AssetProperty]?
    let assetHierarchies: [IoTSiteWiseClientTypes.AssetHierarchy]?
    let assetCompositeModels: [IoTSiteWiseClientTypes.AssetCompositeModel]?
    let assetCreationDate: ClientRuntime.Date?
    let assetLastUpdateDate: ClientRuntime.Date?
    let assetStatus: IoTSiteWiseClientTypes.AssetStatus?
    let assetDescription: Swift.String?
}

extension DescribeAssetOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assetArn
        case assetCompositeModels
        case assetCreationDate
        case assetDescription
        case assetHierarchies
        case assetId
        case assetLastUpdateDate
        case assetModelId
        case assetName
        case assetProperties
        case assetStatus
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assetId)
        assetId = assetIdDecoded
        let assetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assetArn)
        assetArn = assetArnDecoded
        let assetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assetName)
        assetName = assetNameDecoded
        let assetModelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assetModelId)
        assetModelId = assetModelIdDecoded
        let assetPropertiesContainer = try containerValues.decodeIfPresent([IoTSiteWiseClientTypes.AssetProperty?].self, forKey: .assetProperties)
        var assetPropertiesDecoded0:[IoTSiteWiseClientTypes.AssetProperty]? = nil
        if let assetPropertiesContainer = assetPropertiesContainer {
            assetPropertiesDecoded0 = [IoTSiteWiseClientTypes.AssetProperty]()
            for structure0 in assetPropertiesContainer {
                if let structure0 = structure0 {
                    assetPropertiesDecoded0?.append(structure0)
                }
            }
        }
        assetProperties = assetPropertiesDecoded0
        let assetHierarchiesContainer = try containerValues.decodeIfPresent([IoTSiteWiseClientTypes.AssetHierarchy?].self, forKey: .assetHierarchies)
        var assetHierarchiesDecoded0:[IoTSiteWiseClientTypes.AssetHierarchy]? = nil
        if let assetHierarchiesContainer = assetHierarchiesContainer {
            assetHierarchiesDecoded0 = [IoTSiteWiseClientTypes.AssetHierarchy]()
            for structure0 in assetHierarchiesContainer {
                if let structure0 = structure0 {
                    assetHierarchiesDecoded0?.append(structure0)
                }
            }
        }
        assetHierarchies = assetHierarchiesDecoded0
        let assetCompositeModelsContainer = try containerValues.decodeIfPresent([IoTSiteWiseClientTypes.AssetCompositeModel?].self, forKey: .assetCompositeModels)
        var assetCompositeModelsDecoded0:[IoTSiteWiseClientTypes.AssetCompositeModel]? = nil
        if let assetCompositeModelsContainer = assetCompositeModelsContainer {
            assetCompositeModelsDecoded0 = [IoTSiteWiseClientTypes.AssetCompositeModel]()
            for structure0 in assetCompositeModelsContainer {
                if let structure0 = structure0 {
                    assetCompositeModelsDecoded0?.append(structure0)
                }
            }
        }
        assetCompositeModels = assetCompositeModelsDecoded0
        let assetCreationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .assetCreationDate)
        assetCreationDate = assetCreationDateDecoded
        let assetLastUpdateDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .assetLastUpdateDate)
        assetLastUpdateDate = assetLastUpdateDateDecoded
        let assetStatusDecoded = try containerValues.decodeIfPresent(IoTSiteWiseClientTypes.AssetStatus.self, forKey: .assetStatus)
        assetStatus = assetStatusDecoded
        let assetDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assetDescription)
        assetDescription = assetDescriptionDecoded
    }
}
