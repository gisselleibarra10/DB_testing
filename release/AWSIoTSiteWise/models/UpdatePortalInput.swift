// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdatePortalInput: Swift.Equatable {
    /// Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see [Monitoring with alarms](https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html) in the IoT SiteWise Application Guide.
    public var alarms: IoTSiteWiseClientTypes.Alarms?
    /// A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
    public var clientToken: Swift.String?
    /// The email address that sends alarm notifications.
    public var notificationSenderEmail: Swift.String?
    /// The Amazon Web Services administrator's contact email address.
    /// This member is required.
    public var portalContactEmail: Swift.String?
    /// A new description for the portal.
    public var portalDescription: Swift.String?
    /// The ID of the portal to update.
    /// This member is required.
    public var portalId: Swift.String?
    /// Contains an image that is one of the following:
    ///
    /// * An image file. Choose this option to upload a new image.
    ///
    /// * The ID of an existing image. Choose this option to keep an existing image.
    public var portalLogoImage: IoTSiteWiseClientTypes.Image?
    /// A new friendly name for the portal.
    /// This member is required.
    public var portalName: Swift.String?
    /// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of a service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see [Using service roles for IoT SiteWise Monitor](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html) in the IoT SiteWise User Guide.
    /// This member is required.
    public var roleArn: Swift.String?

    public init (
        alarms: IoTSiteWiseClientTypes.Alarms? = nil,
        clientToken: Swift.String? = nil,
        notificationSenderEmail: Swift.String? = nil,
        portalContactEmail: Swift.String? = nil,
        portalDescription: Swift.String? = nil,
        portalId: Swift.String? = nil,
        portalLogoImage: IoTSiteWiseClientTypes.Image? = nil,
        portalName: Swift.String? = nil,
        roleArn: Swift.String? = nil
    )
    {
        self.alarms = alarms
        self.clientToken = clientToken
        self.notificationSenderEmail = notificationSenderEmail
        self.portalContactEmail = portalContactEmail
        self.portalDescription = portalDescription
        self.portalId = portalId
        self.portalLogoImage = portalLogoImage
        self.portalName = portalName
        self.roleArn = roleArn
    }
}
