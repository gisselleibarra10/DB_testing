// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTSiteWiseClientTypes.AssetSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case assetModelId
        case creationDate
        case description
        case hierarchies
        case id
        case lastUpdateDate
        case name
        case status
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let assetModelId = self.assetModelId {
            try encodeContainer.encode(assetModelId, forKey: .assetModelId)
        }
        if let creationDate = self.creationDate {
            try encodeContainer.encode(creationDate.timeIntervalSince1970, forKey: .creationDate)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let hierarchies = hierarchies {
            var hierarchiesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .hierarchies)
            for assethierarchies0 in hierarchies {
                try hierarchiesContainer.encode(assethierarchies0)
            }
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let lastUpdateDate = self.lastUpdateDate {
            try encodeContainer.encode(lastUpdateDate.timeIntervalSince1970, forKey: .lastUpdateDate)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let assetModelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assetModelId)
        assetModelId = assetModelIdDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let lastUpdateDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdateDate)
        lastUpdateDate = lastUpdateDateDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IoTSiteWiseClientTypes.AssetStatus.self, forKey: .status)
        status = statusDecoded
        let hierarchiesContainer = try containerValues.decodeIfPresent([IoTSiteWiseClientTypes.AssetHierarchy?].self, forKey: .hierarchies)
        var hierarchiesDecoded0:[IoTSiteWiseClientTypes.AssetHierarchy]? = nil
        if let hierarchiesContainer = hierarchiesContainer {
            hierarchiesDecoded0 = [IoTSiteWiseClientTypes.AssetHierarchy]()
            for structure0 in hierarchiesContainer {
                if let structure0 = structure0 {
                    hierarchiesDecoded0?.append(structure0)
                }
            }
        }
        hierarchies = hierarchiesDecoded0
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
    }
}
