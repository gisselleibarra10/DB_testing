// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetAssetPropertyAggregatesInput: Swift.Equatable {
    /// The data aggregating function.
    /// This member is required.
    public var aggregateTypes: [IoTSiteWiseClientTypes.AggregateType]?
    /// The ID of the asset.
    public var assetId: Swift.String?
    /// The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.
    /// This member is required.
    public var endDate: ClientRuntime.Date?
    /// The maximum number of results to return for each paginated request. Default: 100
    public var maxResults: Swift.Int?
    /// The token to be used for the next set of paginated results.
    public var nextToken: Swift.String?
    /// The alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature). For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html) in the IoT SiteWise User Guide.
    public var propertyAlias: Swift.String?
    /// The ID of the asset property.
    public var propertyId: Swift.String?
    /// The quality by which to filter asset data.
    public var qualities: [IoTSiteWiseClientTypes.Quality]?
    /// The time interval over which to aggregate data.
    /// This member is required.
    public var resolution: Swift.String?
    /// The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.
    /// This member is required.
    public var startDate: ClientRuntime.Date?
    /// The chronological sorting order of the requested information. Default: ASCENDING
    public var timeOrdering: IoTSiteWiseClientTypes.TimeOrdering?

    public init (
        aggregateTypes: [IoTSiteWiseClientTypes.AggregateType]? = nil,
        assetId: Swift.String? = nil,
        endDate: ClientRuntime.Date? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        propertyAlias: Swift.String? = nil,
        propertyId: Swift.String? = nil,
        qualities: [IoTSiteWiseClientTypes.Quality]? = nil,
        resolution: Swift.String? = nil,
        startDate: ClientRuntime.Date? = nil,
        timeOrdering: IoTSiteWiseClientTypes.TimeOrdering? = nil
    )
    {
        self.aggregateTypes = aggregateTypes
        self.assetId = assetId
        self.endDate = endDate
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.propertyAlias = propertyAlias
        self.propertyId = propertyId
        self.qualities = qualities
        self.resolution = resolution
        self.startDate = startDate
        self.timeOrdering = timeOrdering
    }
}
