// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDashboardOutputResponseBody: Swift.Equatable {
    let dashboardId: Swift.String?
    let dashboardArn: Swift.String?
    let dashboardName: Swift.String?
    let projectId: Swift.String?
    let dashboardDescription: Swift.String?
    let dashboardDefinition: Swift.String?
    let dashboardCreationDate: ClientRuntime.Date?
    let dashboardLastUpdateDate: ClientRuntime.Date?
}

extension DescribeDashboardOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dashboardArn
        case dashboardCreationDate
        case dashboardDefinition
        case dashboardDescription
        case dashboardId
        case dashboardLastUpdateDate
        case dashboardName
        case projectId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dashboardIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dashboardId)
        dashboardId = dashboardIdDecoded
        let dashboardArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dashboardArn)
        dashboardArn = dashboardArnDecoded
        let dashboardNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dashboardName)
        dashboardName = dashboardNameDecoded
        let projectIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectId)
        projectId = projectIdDecoded
        let dashboardDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dashboardDescription)
        dashboardDescription = dashboardDescriptionDecoded
        let dashboardDefinitionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dashboardDefinition)
        dashboardDefinition = dashboardDefinitionDecoded
        let dashboardCreationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .dashboardCreationDate)
        dashboardCreationDate = dashboardCreationDateDecoded
        let dashboardLastUpdateDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .dashboardLastUpdateDate)
        dashboardLastUpdateDate = dashboardLastUpdateDateDecoded
    }
}
