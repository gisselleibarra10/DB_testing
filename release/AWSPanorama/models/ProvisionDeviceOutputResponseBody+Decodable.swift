// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ProvisionDeviceOutputResponseBody: Swift.Equatable {
    let deviceId: Swift.String?
    let arn: Swift.String?
    let status: PanoramaClientTypes.DeviceStatus?
    let certificates: ClientRuntime.Data?
    let iotThingName: Swift.String?
}

extension ProvisionDeviceOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case certificates = "Certificates"
        case deviceId = "DeviceId"
        case iotThingName = "IotThingName"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceId)
        deviceId = deviceIdDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let statusDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.DeviceStatus.self, forKey: .status)
        status = statusDecoded
        let certificatesDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .certificates)
        certificates = certificatesDecoded
        let iotThingNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .iotThingName)
        iotThingName = iotThingNameDecoded
    }
}
