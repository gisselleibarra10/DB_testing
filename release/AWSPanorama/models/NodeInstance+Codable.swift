// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PanoramaClientTypes.NodeInstance: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case currentStatus = "CurrentStatus"
        case nodeId = "NodeId"
        case nodeInstanceId = "NodeInstanceId"
        case nodeName = "NodeName"
        case packageName = "PackageName"
        case packagePatchVersion = "PackagePatchVersion"
        case packageVersion = "PackageVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let currentStatus = self.currentStatus {
            try encodeContainer.encode(currentStatus.rawValue, forKey: .currentStatus)
        }
        if let nodeId = self.nodeId {
            try encodeContainer.encode(nodeId, forKey: .nodeId)
        }
        if let nodeInstanceId = self.nodeInstanceId {
            try encodeContainer.encode(nodeInstanceId, forKey: .nodeInstanceId)
        }
        if let nodeName = self.nodeName {
            try encodeContainer.encode(nodeName, forKey: .nodeName)
        }
        if let packageName = self.packageName {
            try encodeContainer.encode(packageName, forKey: .packageName)
        }
        if let packagePatchVersion = self.packagePatchVersion {
            try encodeContainer.encode(packagePatchVersion, forKey: .packagePatchVersion)
        }
        if let packageVersion = self.packageVersion {
            try encodeContainer.encode(packageVersion, forKey: .packageVersion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nodeInstanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nodeInstanceId)
        nodeInstanceId = nodeInstanceIdDecoded
        let nodeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nodeId)
        nodeId = nodeIdDecoded
        let packageNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .packageName)
        packageName = packageNameDecoded
        let packageVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .packageVersion)
        packageVersion = packageVersionDecoded
        let packagePatchVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .packagePatchVersion)
        packagePatchVersion = packagePatchVersionDecoded
        let nodeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nodeName)
        nodeName = nodeNameDecoded
        let currentStatusDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.NodeInstanceStatus.self, forKey: .currentStatus)
        currentStatus = currentStatusDecoded
    }
}
