// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationInstancesOutputResponseBody: Swift.Equatable {
    let applicationInstances: [PanoramaClientTypes.ApplicationInstance]?
    let nextToken: Swift.String?
}

extension ListApplicationInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationInstances = "ApplicationInstances"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationInstancesContainer = try containerValues.decodeIfPresent([PanoramaClientTypes.ApplicationInstance?].self, forKey: .applicationInstances)
        var applicationInstancesDecoded0:[PanoramaClientTypes.ApplicationInstance]? = nil
        if let applicationInstancesContainer = applicationInstancesContainer {
            applicationInstancesDecoded0 = [PanoramaClientTypes.ApplicationInstance]()
            for structure0 in applicationInstancesContainer {
                if let structure0 = structure0 {
                    applicationInstancesDecoded0?.append(structure0)
                }
            }
        }
        applicationInstances = applicationInstancesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
