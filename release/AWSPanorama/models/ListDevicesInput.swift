// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListDevicesInput: Swift.Equatable {
    /// Filter based on a device's status.
    public var deviceAggregatedStatusFilter: PanoramaClientTypes.DeviceAggregatedStatus?
    /// The maximum number of devices to return in one page of results.
    public var maxResults: Swift.Int
    /// Filter based on device's name. Prefixes supported.
    public var nameFilter: Swift.String?
    /// Specify the pagination token from a previous request to retrieve the next page of results.
    public var nextToken: Swift.String?
    /// The target column to be sorted on. Default column sort is CREATED_TIME.
    public var sortBy: PanoramaClientTypes.ListDevicesSortBy?
    /// The sorting order for the returned list. SortOrder is DESCENDING by default based on CREATED_TIME. Otherwise, SortOrder is ASCENDING.
    public var sortOrder: PanoramaClientTypes.SortOrder?

    public init (
        deviceAggregatedStatusFilter: PanoramaClientTypes.DeviceAggregatedStatus? = nil,
        maxResults: Swift.Int = 0,
        nameFilter: Swift.String? = nil,
        nextToken: Swift.String? = nil,
        sortBy: PanoramaClientTypes.ListDevicesSortBy? = nil,
        sortOrder: PanoramaClientTypes.SortOrder? = nil
    )
    {
        self.deviceAggregatedStatusFilter = deviceAggregatedStatusFilter
        self.maxResults = maxResults
        self.nameFilter = nameFilter
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
