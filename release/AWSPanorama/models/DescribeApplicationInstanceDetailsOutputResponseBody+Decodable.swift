// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeApplicationInstanceDetailsOutputResponseBody: Swift.Equatable {
    let name: Swift.String?
    let description: Swift.String?
    let defaultRuntimeContextDevice: Swift.String?
    let manifestPayload: PanoramaClientTypes.ManifestPayload?
    let manifestOverridesPayload: PanoramaClientTypes.ManifestOverridesPayload?
    let applicationInstanceIdToReplace: Swift.String?
    let createdTime: ClientRuntime.Date?
    let applicationInstanceId: Swift.String?
}

extension DescribeApplicationInstanceDetailsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationInstanceId = "ApplicationInstanceId"
        case applicationInstanceIdToReplace = "ApplicationInstanceIdToReplace"
        case createdTime = "CreatedTime"
        case defaultRuntimeContextDevice = "DefaultRuntimeContextDevice"
        case description = "Description"
        case manifestOverridesPayload = "ManifestOverridesPayload"
        case manifestPayload = "ManifestPayload"
        case name = "Name"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let defaultRuntimeContextDeviceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .defaultRuntimeContextDevice)
        defaultRuntimeContextDevice = defaultRuntimeContextDeviceDecoded
        let manifestPayloadDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.ManifestPayload.self, forKey: .manifestPayload)
        manifestPayload = manifestPayloadDecoded
        let manifestOverridesPayloadDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.ManifestOverridesPayload.self, forKey: .manifestOverridesPayload)
        manifestOverridesPayload = manifestOverridesPayloadDecoded
        let applicationInstanceIdToReplaceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationInstanceIdToReplace)
        applicationInstanceIdToReplace = applicationInstanceIdToReplaceDecoded
        let createdTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdTime)
        createdTime = createdTimeDecoded
        let applicationInstanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationInstanceId)
        applicationInstanceId = applicationInstanceIdDecoded
    }
}
