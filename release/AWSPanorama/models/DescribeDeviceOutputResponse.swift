// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDeviceOutputResponse: Swift.Equatable {
    /// Beta software releases available for the device.
    public var alternateSoftwares: [PanoramaClientTypes.AlternateSoftwareMetadata]?
    /// The device's ARN.
    public var arn: Swift.String?
    /// The device's maker.
    public var brand: PanoramaClientTypes.DeviceBrand?
    /// When the device was created.
    public var createdTime: ClientRuntime.Date?
    /// The device's networking status.
    public var currentNetworkingStatus: PanoramaClientTypes.NetworkStatus?
    /// The device's current software version.
    public var currentSoftware: Swift.String?
    /// The device's description.
    public var description: Swift.String?
    /// A device's aggregated status. Including the device's connection status, provisioning status, and lease status.
    public var deviceAggregatedStatus: PanoramaClientTypes.DeviceAggregatedStatus?
    /// The device's connection status.
    public var deviceConnectionStatus: PanoramaClientTypes.DeviceConnectionStatus?
    /// The device's ID.
    public var deviceId: Swift.String?
    /// The most recent beta software release.
    public var latestAlternateSoftware: Swift.String?
    /// A device's latest job. Includes the target image version, and the job status.
    public var latestDeviceJob: PanoramaClientTypes.LatestDeviceJob?
    /// The latest software version available for the device.
    public var latestSoftware: Swift.String?
    /// The device's lease expiration time.
    public var leaseExpirationTime: ClientRuntime.Date?
    /// The device's name.
    public var name: Swift.String?
    /// The device's networking configuration.
    public var networkingConfiguration: PanoramaClientTypes.NetworkPayload?
    /// The device's provisioning status.
    public var provisioningStatus: PanoramaClientTypes.DeviceStatus?
    /// The device's serial number.
    public var serialNumber: Swift.String?
    /// The device's tags.
    public var tags: [Swift.String:Swift.String]?
    /// The device's type.
    public var type: PanoramaClientTypes.DeviceType?

    public init (
        alternateSoftwares: [PanoramaClientTypes.AlternateSoftwareMetadata]? = nil,
        arn: Swift.String? = nil,
        brand: PanoramaClientTypes.DeviceBrand? = nil,
        createdTime: ClientRuntime.Date? = nil,
        currentNetworkingStatus: PanoramaClientTypes.NetworkStatus? = nil,
        currentSoftware: Swift.String? = nil,
        description: Swift.String? = nil,
        deviceAggregatedStatus: PanoramaClientTypes.DeviceAggregatedStatus? = nil,
        deviceConnectionStatus: PanoramaClientTypes.DeviceConnectionStatus? = nil,
        deviceId: Swift.String? = nil,
        latestAlternateSoftware: Swift.String? = nil,
        latestDeviceJob: PanoramaClientTypes.LatestDeviceJob? = nil,
        latestSoftware: Swift.String? = nil,
        leaseExpirationTime: ClientRuntime.Date? = nil,
        name: Swift.String? = nil,
        networkingConfiguration: PanoramaClientTypes.NetworkPayload? = nil,
        provisioningStatus: PanoramaClientTypes.DeviceStatus? = nil,
        serialNumber: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        type: PanoramaClientTypes.DeviceType? = nil
    )
    {
        self.alternateSoftwares = alternateSoftwares
        self.arn = arn
        self.brand = brand
        self.createdTime = createdTime
        self.currentNetworkingStatus = currentNetworkingStatus
        self.currentSoftware = currentSoftware
        self.description = description
        self.deviceAggregatedStatus = deviceAggregatedStatus
        self.deviceConnectionStatus = deviceConnectionStatus
        self.deviceId = deviceId
        self.latestAlternateSoftware = latestAlternateSoftware
        self.latestDeviceJob = latestDeviceJob
        self.latestSoftware = latestSoftware
        self.leaseExpirationTime = leaseExpirationTime
        self.name = name
        self.networkingConfiguration = networkingConfiguration
        self.provisioningStatus = provisioningStatus
        self.serialNumber = serialNumber
        self.tags = tags
        self.type = type
    }
}
