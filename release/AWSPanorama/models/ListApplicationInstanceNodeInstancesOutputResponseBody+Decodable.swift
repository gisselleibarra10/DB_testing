// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationInstanceNodeInstancesOutputResponseBody: Swift.Equatable {
    let nodeInstances: [PanoramaClientTypes.NodeInstance]?
    let nextToken: Swift.String?
}

extension ListApplicationInstanceNodeInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case nodeInstances = "NodeInstances"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nodeInstancesContainer = try containerValues.decodeIfPresent([PanoramaClientTypes.NodeInstance?].self, forKey: .nodeInstances)
        var nodeInstancesDecoded0:[PanoramaClientTypes.NodeInstance]? = nil
        if let nodeInstancesContainer = nodeInstancesContainer {
            nodeInstancesDecoded0 = [PanoramaClientTypes.NodeInstance]()
            for structure0 in nodeInstancesContainer {
                if let structure0 = structure0 {
                    nodeInstancesDecoded0?.append(structure0)
                }
            }
        }
        nodeInstances = nodeInstancesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
