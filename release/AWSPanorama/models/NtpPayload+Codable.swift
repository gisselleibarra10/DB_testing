// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PanoramaClientTypes.NtpPayload: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ntpServers = "NtpServers"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ntpServers = ntpServers {
            var ntpServersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ntpServers)
            for ntpserverlist0 in ntpServers {
                try ntpServersContainer.encode(ntpserverlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ntpServersContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .ntpServers)
        var ntpServersDecoded0:[Swift.String]? = nil
        if let ntpServersContainer = ntpServersContainer {
            ntpServersDecoded0 = [Swift.String]()
            for string0 in ntpServersContainer {
                if let string0 = string0 {
                    ntpServersDecoded0?.append(string0)
                }
            }
        }
        ntpServers = ntpServersDecoded0
    }
}
