// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreatePackageOutputResponseBody: Swift.Equatable {
    let packageId: Swift.String?
    let arn: Swift.String?
    let storageLocation: PanoramaClientTypes.StorageLocation?
}

extension CreatePackageOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case packageId = "PackageId"
        case storageLocation = "StorageLocation"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let packageIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .packageId)
        packageId = packageIdDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let storageLocationDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.StorageLocation.self, forKey: .storageLocation)
        storageLocation = storageLocationDecoded
    }
}
