// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PanoramaClientTypes.ManifestPayload: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case payloaddata = "PayloadData"
        case sdkUnknown
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .payloaddata(payloaddata):
                try container.encode(payloaddata, forKey: .payloaddata)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let payloaddataDecoded = try values.decodeIfPresent(Swift.String.self, forKey: .payloaddata)
        if let payloaddata = payloaddataDecoded {
            self = .payloaddata(payloaddata)
            return
        }
        self = .sdkUnknown("")
    }
}
