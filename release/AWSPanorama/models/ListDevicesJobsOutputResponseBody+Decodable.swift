// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDevicesJobsOutputResponseBody: Swift.Equatable {
    let deviceJobs: [PanoramaClientTypes.DeviceJob]?
    let nextToken: Swift.String?
}

extension ListDevicesJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceJobs = "DeviceJobs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceJobsContainer = try containerValues.decodeIfPresent([PanoramaClientTypes.DeviceJob?].self, forKey: .deviceJobs)
        var deviceJobsDecoded0:[PanoramaClientTypes.DeviceJob]? = nil
        if let deviceJobsContainer = deviceJobsContainer {
            deviceJobsDecoded0 = [PanoramaClientTypes.DeviceJob]()
            for structure0 in deviceJobsContainer {
                if let structure0 = structure0 {
                    deviceJobsDecoded0?.append(structure0)
                }
            }
        }
        deviceJobs = deviceJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
