// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePackageImportJobOutputResponseBody: Swift.Equatable {
    let jobId: Swift.String?
    let clientToken: Swift.String?
    let jobType: PanoramaClientTypes.PackageImportJobType?
    let inputConfig: PanoramaClientTypes.PackageImportJobInputConfig?
    let outputConfig: PanoramaClientTypes.PackageImportJobOutputConfig?
    let output: PanoramaClientTypes.PackageImportJobOutput?
    let createdTime: ClientRuntime.Date?
    let lastUpdatedTime: ClientRuntime.Date?
    let status: PanoramaClientTypes.PackageImportJobStatus?
    let statusMessage: Swift.String?
    let jobTags: [PanoramaClientTypes.JobResourceTags]?
}

extension DescribePackageImportJobOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case createdTime = "CreatedTime"
        case inputConfig = "InputConfig"
        case jobId = "JobId"
        case jobTags = "JobTags"
        case jobType = "JobType"
        case lastUpdatedTime = "LastUpdatedTime"
        case output = "Output"
        case outputConfig = "OutputConfig"
        case status = "Status"
        case statusMessage = "StatusMessage"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobId)
        jobId = jobIdDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let jobTypeDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.PackageImportJobType.self, forKey: .jobType)
        jobType = jobTypeDecoded
        let inputConfigDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.PackageImportJobInputConfig.self, forKey: .inputConfig)
        inputConfig = inputConfigDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.PackageImportJobOutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let outputDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.PackageImportJobOutput.self, forKey: .output)
        output = outputDecoded
        let createdTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdTime)
        createdTime = createdTimeDecoded
        let lastUpdatedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedTime)
        lastUpdatedTime = lastUpdatedTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.PackageImportJobStatus.self, forKey: .status)
        status = statusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let jobTagsContainer = try containerValues.decodeIfPresent([PanoramaClientTypes.JobResourceTags?].self, forKey: .jobTags)
        var jobTagsDecoded0:[PanoramaClientTypes.JobResourceTags]? = nil
        if let jobTagsContainer = jobTagsContainer {
            jobTagsDecoded0 = [PanoramaClientTypes.JobResourceTags]()
            for structure0 in jobTagsContainer {
                if let structure0 = structure0 {
                    jobTagsDecoded0?.append(structure0)
                }
            }
        }
        jobTags = jobTagsDecoded0
    }
}
