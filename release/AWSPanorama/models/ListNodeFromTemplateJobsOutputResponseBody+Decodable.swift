// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNodeFromTemplateJobsOutputResponseBody: Swift.Equatable {
    let nodeFromTemplateJobs: [PanoramaClientTypes.NodeFromTemplateJob]?
    let nextToken: Swift.String?
}

extension ListNodeFromTemplateJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case nodeFromTemplateJobs = "NodeFromTemplateJobs"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nodeFromTemplateJobsContainer = try containerValues.decodeIfPresent([PanoramaClientTypes.NodeFromTemplateJob?].self, forKey: .nodeFromTemplateJobs)
        var nodeFromTemplateJobsDecoded0:[PanoramaClientTypes.NodeFromTemplateJob]? = nil
        if let nodeFromTemplateJobsContainer = nodeFromTemplateJobsContainer {
            nodeFromTemplateJobsDecoded0 = [PanoramaClientTypes.NodeFromTemplateJob]()
            for structure0 in nodeFromTemplateJobsContainer {
                if let structure0 = structure0 {
                    nodeFromTemplateJobsDecoded0?.append(structure0)
                }
            }
        }
        nodeFromTemplateJobs = nodeFromTemplateJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
