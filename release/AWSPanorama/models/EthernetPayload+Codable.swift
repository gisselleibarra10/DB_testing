// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PanoramaClientTypes.EthernetPayload: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionType = "ConnectionType"
        case staticIpConnectionInfo = "StaticIpConnectionInfo"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionType = self.connectionType {
            try encodeContainer.encode(connectionType.rawValue, forKey: .connectionType)
        }
        if let staticIpConnectionInfo = self.staticIpConnectionInfo {
            try encodeContainer.encode(staticIpConnectionInfo, forKey: .staticIpConnectionInfo)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionTypeDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.ConnectionType.self, forKey: .connectionType)
        connectionType = connectionTypeDecoded
        let staticIpConnectionInfoDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.StaticIpConnectionInfo.self, forKey: .staticIpConnectionInfo)
        staticIpConnectionInfo = staticIpConnectionInfoDecoded
    }
}
