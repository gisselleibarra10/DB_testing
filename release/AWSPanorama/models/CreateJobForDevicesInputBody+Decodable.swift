// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateJobForDevicesInputBody: Swift.Equatable {
    let deviceIds: [Swift.String]?
    let deviceJobConfig: PanoramaClientTypes.DeviceJobConfig?
    let jobType: PanoramaClientTypes.JobType?
}

extension CreateJobForDevicesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceIds = "DeviceIds"
        case deviceJobConfig = "DeviceJobConfig"
        case jobType = "JobType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .deviceIds)
        var deviceIdsDecoded0:[Swift.String]? = nil
        if let deviceIdsContainer = deviceIdsContainer {
            deviceIdsDecoded0 = [Swift.String]()
            for string0 in deviceIdsContainer {
                if let string0 = string0 {
                    deviceIdsDecoded0?.append(string0)
                }
            }
        }
        deviceIds = deviceIdsDecoded0
        let deviceJobConfigDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.DeviceJobConfig.self, forKey: .deviceJobConfig)
        deviceJobConfig = deviceJobConfigDecoded
        let jobTypeDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.JobType.self, forKey: .jobType)
        jobType = jobTypeDecoded
    }
}
