// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PanoramaClientTypes.StaticIpConnectionInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultGateway = "DefaultGateway"
        case dns = "Dns"
        case ipAddress = "IpAddress"
        case mask = "Mask"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultGateway = self.defaultGateway {
            try encodeContainer.encode(defaultGateway, forKey: .defaultGateway)
        }
        if let dns = dns {
            var dnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dns)
            for dnslist0 in dns {
                try dnsContainer.encode(dnslist0)
            }
        }
        if let ipAddress = self.ipAddress {
            try encodeContainer.encode(ipAddress, forKey: .ipAddress)
        }
        if let mask = self.mask {
            try encodeContainer.encode(mask, forKey: .mask)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ipAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipAddress)
        ipAddress = ipAddressDecoded
        let maskDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mask)
        mask = maskDecoded
        let dnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .dns)
        var dnsDecoded0:[Swift.String]? = nil
        if let dnsContainer = dnsContainer {
            dnsDecoded0 = [Swift.String]()
            for string0 in dnsContainer {
                if let string0 = string0 {
                    dnsDecoded0?.append(string0)
                }
            }
        }
        dns = dnsDecoded0
        let defaultGatewayDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .defaultGateway)
        defaultGateway = defaultGatewayDecoded
    }
}
