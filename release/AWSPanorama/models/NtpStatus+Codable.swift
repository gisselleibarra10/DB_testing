// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PanoramaClientTypes.NtpStatus: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionStatus = "ConnectionStatus"
        case ipAddress = "IpAddress"
        case ntpServerName = "NtpServerName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionStatus = self.connectionStatus {
            try encodeContainer.encode(connectionStatus.rawValue, forKey: .connectionStatus)
        }
        if let ipAddress = self.ipAddress {
            try encodeContainer.encode(ipAddress, forKey: .ipAddress)
        }
        if let ntpServerName = self.ntpServerName {
            try encodeContainer.encode(ntpServerName, forKey: .ntpServerName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionStatusDecoded = try containerValues.decodeIfPresent(PanoramaClientTypes.NetworkConnectionStatus.self, forKey: .connectionStatus)
        connectionStatus = connectionStatusDecoded
        let ipAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipAddress)
        ipAddress = ipAddressDecoded
        let ntpServerNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ntpServerName)
        ntpServerName = ntpServerNameDecoded
    }
}
