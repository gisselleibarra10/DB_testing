// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResourceGroupsTaggingApiClientTypes.ResourceTagMapping: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case complianceDetails = "ComplianceDetails"
        case resourceARN = "ResourceARN"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let complianceDetails = self.complianceDetails {
            try encodeContainer.encode(complianceDetails, forKey: .complianceDetails)
        }
        if let resourceARN = self.resourceARN {
            try encodeContainer.encode(resourceARN, forKey: .resourceARN)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceARN)
        resourceARN = resourceARNDecoded
        let tagsContainer = try containerValues.decodeIfPresent([ResourceGroupsTaggingApiClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[ResourceGroupsTaggingApiClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [ResourceGroupsTaggingApiClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
        let complianceDetailsDecoded = try containerValues.decodeIfPresent(ResourceGroupsTaggingApiClientTypes.ComplianceDetails.self, forKey: .complianceDetails)
        complianceDetails = complianceDetailsDecoded
    }
}
