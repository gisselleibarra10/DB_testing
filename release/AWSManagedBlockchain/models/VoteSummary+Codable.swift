// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ManagedBlockchainClientTypes.VoteSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case memberId = "MemberId"
        case memberName = "MemberName"
        case vote = "Vote"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let memberId = self.memberId {
            try encodeContainer.encode(memberId, forKey: .memberId)
        }
        if let memberName = self.memberName {
            try encodeContainer.encode(memberName, forKey: .memberName)
        }
        if let vote = self.vote {
            try encodeContainer.encode(vote.rawValue, forKey: .vote)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let voteDecoded = try containerValues.decodeIfPresent(ManagedBlockchainClientTypes.VoteValue.self, forKey: .vote)
        vote = voteDecoded
        let memberNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .memberName)
        memberName = memberNameDecoded
        let memberIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .memberId)
        memberId = memberIdDecoded
    }
}
