// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ManagedBlockchainClientTypes {
    /// Configuration properties of a node.
    public struct Node: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the node. For more information about ARNs and their format, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the AWS General Reference.
        public var arn: Swift.String?
        /// The Availability Zone in which the node exists. Required for Ethereum nodes.
        public var availabilityZone: Swift.String?
        /// The date and time that the node was created.
        public var creationDate: ClientRuntime.Date?
        /// Attributes of the blockchain framework being used.
        public var frameworkAttributes: ManagedBlockchainClientTypes.NodeFrameworkAttributes?
        /// The unique identifier of the node.
        public var id: Swift.String?
        /// The instance type of the node.
        public var instanceType: Swift.String?
        /// The Amazon Resource Name (ARN) of the customer managed key in AWS Key Management Service (AWS KMS) that the node uses for encryption at rest. If the value of this parameter is "AWS Owned KMS Key", the node uses an AWS owned KMS key for encryption. The node inherits this parameter from the member that it belongs to. Applies only to Hyperledger Fabric.
        public var kmsKeyArn: Swift.String?
        /// Configuration properties for logging events associated with a peer node on a Hyperledger Fabric network on Managed Blockchain.
        public var logPublishingConfiguration: ManagedBlockchainClientTypes.NodeLogPublishingConfiguration?
        /// The unique identifier of the member to which the node belongs. Applies only to Hyperledger Fabric.
        public var memberId: Swift.String?
        /// The unique identifier of the network that the node is on.
        public var networkId: Swift.String?
        /// The state database that the node uses. Values are LevelDB or CouchDB. Applies only to Hyperledger Fabric.
        public var stateDB: ManagedBlockchainClientTypes.StateDBType?
        /// The status of the node.
        ///
        /// * CREATING - The AWS account is in the process of creating a node.
        ///
        /// * AVAILABLE - The node has been created and can participate in the network.
        ///
        /// * UNHEALTHY - The node is impaired and might not function as expected. Amazon Managed Blockchain automatically finds nodes in this state and tries to recover them. If a node is recoverable, it returns to AVAILABLE. Otherwise, it moves to FAILED status.
        ///
        /// * CREATE_FAILED - The AWS account attempted to create a node and creation failed.
        ///
        /// * UPDATING - The node is in the process of being updated.
        ///
        /// * DELETING - The node is in the process of being deleted.
        ///
        /// * DELETED - The node can no longer participate on the network.
        ///
        /// * FAILED - The node is no longer functional, cannot be recovered, and must be deleted.
        ///
        /// * INACCESSIBLE_ENCRYPTION_KEY - The node is impaired and might not function as expected because it cannot access the specified customer managed key in AWS KMS for encryption at rest. Either the KMS key was disabled or deleted, or the grants on the key were revoked. The effect of disabling or deleting a key, or revoking a grant is not immediate. The node resource might take some time to find that the key is inaccessible. When a resource is in this state, we recommend deleting and recreating the resource.
        public var status: ManagedBlockchainClientTypes.NodeStatus?
        /// Tags assigned to the node. Each tag consists of a key and optional value. For more information about tags, see [Tagging Resources](https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html) in the Amazon Managed Blockchain Ethereum Developer Guide, or [Tagging Resources](https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html) in the Amazon Managed Blockchain Hyperledger Fabric Developer Guide.
        public var tags: [Swift.String:Swift.String]?

        public init (
            arn: Swift.String? = nil,
            availabilityZone: Swift.String? = nil,
            creationDate: ClientRuntime.Date? = nil,
            frameworkAttributes: ManagedBlockchainClientTypes.NodeFrameworkAttributes? = nil,
            id: Swift.String? = nil,
            instanceType: Swift.String? = nil,
            kmsKeyArn: Swift.String? = nil,
            logPublishingConfiguration: ManagedBlockchainClientTypes.NodeLogPublishingConfiguration? = nil,
            memberId: Swift.String? = nil,
            networkId: Swift.String? = nil,
            stateDB: ManagedBlockchainClientTypes.StateDBType? = nil,
            status: ManagedBlockchainClientTypes.NodeStatus? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.arn = arn
            self.availabilityZone = availabilityZone
            self.creationDate = creationDate
            self.frameworkAttributes = frameworkAttributes
            self.id = id
            self.instanceType = instanceType
            self.kmsKeyArn = kmsKeyArn
            self.logPublishingConfiguration = logPublishingConfiguration
            self.memberId = memberId
            self.networkId = networkId
            self.stateDB = stateDB
            self.status = status
            self.tags = tags
        }
    }

}
