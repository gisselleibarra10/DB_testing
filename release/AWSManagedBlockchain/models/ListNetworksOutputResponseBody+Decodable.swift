// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNetworksOutputResponseBody: Swift.Equatable {
    let networks: [ManagedBlockchainClientTypes.NetworkSummary]?
    let nextToken: Swift.String?
}

extension ListNetworksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case networks = "Networks"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let networksContainer = try containerValues.decodeIfPresent([ManagedBlockchainClientTypes.NetworkSummary?].self, forKey: .networks)
        var networksDecoded0:[ManagedBlockchainClientTypes.NetworkSummary]? = nil
        if let networksContainer = networksContainer {
            networksDecoded0 = [ManagedBlockchainClientTypes.NetworkSummary]()
            for structure0 in networksContainer {
                if let structure0 = structure0 {
                    networksDecoded0?.append(structure0)
                }
            }
        }
        networks = networksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
