// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ManagedBlockchainClientTypes.NetworkFabricAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case edition = "Edition"
        case orderingServiceEndpoint = "OrderingServiceEndpoint"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let edition = self.edition {
            try encodeContainer.encode(edition.rawValue, forKey: .edition)
        }
        if let orderingServiceEndpoint = self.orderingServiceEndpoint {
            try encodeContainer.encode(orderingServiceEndpoint, forKey: .orderingServiceEndpoint)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let orderingServiceEndpointDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .orderingServiceEndpoint)
        orderingServiceEndpoint = orderingServiceEndpointDecoded
        let editionDecoded = try containerValues.decodeIfPresent(ManagedBlockchainClientTypes.Edition.self, forKey: .edition)
        edition = editionDecoded
    }
}
