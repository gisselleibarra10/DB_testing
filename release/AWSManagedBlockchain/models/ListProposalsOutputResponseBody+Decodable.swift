// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProposalsOutputResponseBody: Swift.Equatable {
    let proposals: [ManagedBlockchainClientTypes.ProposalSummary]?
    let nextToken: Swift.String?
}

extension ListProposalsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case proposals = "Proposals"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let proposalsContainer = try containerValues.decodeIfPresent([ManagedBlockchainClientTypes.ProposalSummary?].self, forKey: .proposals)
        var proposalsDecoded0:[ManagedBlockchainClientTypes.ProposalSummary]? = nil
        if let proposalsContainer = proposalsContainer {
            proposalsDecoded0 = [ManagedBlockchainClientTypes.ProposalSummary]()
            for structure0 in proposalsContainer {
                if let structure0 = structure0 {
                    proposalsDecoded0?.append(structure0)
                }
            }
        }
        proposals = proposalsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
