// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ManagedBlockchainClientTypes {
    /// Member configuration properties. Applies only to Hyperledger Fabric.
    public struct Member: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the member. For more information about ARNs and their format, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the AWS General Reference.
        public var arn: Swift.String?
        /// The date and time that the member was created.
        public var creationDate: ClientRuntime.Date?
        /// An optional description for the member.
        public var description: Swift.String?
        /// Attributes relevant to a member for the blockchain framework that the Managed Blockchain network uses.
        public var frameworkAttributes: ManagedBlockchainClientTypes.MemberFrameworkAttributes?
        /// The unique identifier of the member.
        public var id: Swift.String?
        /// The Amazon Resource Name (ARN) of the customer managed key in AWS Key Management Service (AWS KMS) that the member uses for encryption at rest. If the value of this parameter is "AWS Owned KMS Key", the member uses an AWS owned KMS key for encryption. This parameter is inherited by the nodes that this member owns.
        public var kmsKeyArn: Swift.String?
        /// Configuration properties for logging events associated with a member.
        public var logPublishingConfiguration: ManagedBlockchainClientTypes.MemberLogPublishingConfiguration?
        /// The name of the member.
        public var name: Swift.String?
        /// The unique identifier of the network to which the member belongs.
        public var networkId: Swift.String?
        /// The status of a member.
        ///
        /// * CREATING - The AWS account is in the process of creating a member.
        ///
        /// * AVAILABLE - The member has been created and can participate in the network.
        ///
        /// * CREATE_FAILED - The AWS account attempted to create a member and creation failed.
        ///
        /// * UPDATING - The member is in the process of being updated.
        ///
        /// * DELETING - The member and all associated resources are in the process of being deleted. Either the AWS account that owns the member deleted it, or the member is being deleted as the result of an APPROVEDPROPOSAL to remove the member.
        ///
        /// * DELETED - The member can no longer participate on the network and all associated resources are deleted. Either the AWS account that owns the member deleted it, or the member is being deleted as the result of an APPROVEDPROPOSAL to remove the member.
        ///
        /// * INACCESSIBLE_ENCRYPTION_KEY - The member is impaired and might not function as expected because it cannot access the specified customer managed key in AWS KMS for encryption at rest. Either the KMS key was disabled or deleted, or the grants on the key were revoked. The effect of disabling or deleting a key, or revoking a grant is not immediate. The member resource might take some time to find that the key is inaccessible. When a resource is in this state, we recommend deleting and recreating the resource.
        public var status: ManagedBlockchainClientTypes.MemberStatus?
        /// Tags assigned to the member. Tags consist of a key and optional value. For more information about tags, see [Tagging Resources](https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html) in the Amazon Managed Blockchain Hyperledger Fabric Developer Guide.
        public var tags: [Swift.String:Swift.String]?

        public init (
            arn: Swift.String? = nil,
            creationDate: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            frameworkAttributes: ManagedBlockchainClientTypes.MemberFrameworkAttributes? = nil,
            id: Swift.String? = nil,
            kmsKeyArn: Swift.String? = nil,
            logPublishingConfiguration: ManagedBlockchainClientTypes.MemberLogPublishingConfiguration? = nil,
            name: Swift.String? = nil,
            networkId: Swift.String? = nil,
            status: ManagedBlockchainClientTypes.MemberStatus? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.arn = arn
            self.creationDate = creationDate
            self.description = description
            self.frameworkAttributes = frameworkAttributes
            self.id = id
            self.kmsKeyArn = kmsKeyArn
            self.logPublishingConfiguration = logPublishingConfiguration
            self.name = name
            self.networkId = networkId
            self.status = status
            self.tags = tags
        }
    }

}
