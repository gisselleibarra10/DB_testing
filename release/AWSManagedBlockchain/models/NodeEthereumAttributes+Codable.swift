// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ManagedBlockchainClientTypes.NodeEthereumAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case httpEndpoint = "HttpEndpoint"
        case webSocketEndpoint = "WebSocketEndpoint"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let httpEndpoint = self.httpEndpoint {
            try encodeContainer.encode(httpEndpoint, forKey: .httpEndpoint)
        }
        if let webSocketEndpoint = self.webSocketEndpoint {
            try encodeContainer.encode(webSocketEndpoint, forKey: .webSocketEndpoint)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let httpEndpointDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .httpEndpoint)
        httpEndpoint = httpEndpointDecoded
        let webSocketEndpointDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .webSocketEndpoint)
        webSocketEndpoint = webSocketEndpointDecoded
    }
}
