// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ManagedBlockchainClientTypes {
    /// An invitation to an AWS account to create a member and join the network. Applies only to Hyperledger Fabric.
    public struct Invitation: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the invitation. For more information about ARNs and their format, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the AWS General Reference.
        public var arn: Swift.String?
        /// The date and time that the invitation was created.
        public var creationDate: ClientRuntime.Date?
        /// The date and time that the invitation expires. This is the CreationDate plus the ProposalDurationInHours that is specified in the ProposalThresholdPolicy. After this date and time, the invitee can no longer create a member and join the network using this InvitationId.
        public var expirationDate: ClientRuntime.Date?
        /// The unique identifier for the invitation.
        public var invitationId: Swift.String?
        /// A summary of network configuration properties.
        public var networkSummary: ManagedBlockchainClientTypes.NetworkSummary?
        /// The status of the invitation:
        ///
        /// * PENDING - The invitee has not created a member to join the network, and the invitation has not yet expired.
        ///
        /// * ACCEPTING - The invitee has begun creating a member, and creation has not yet completed.
        ///
        /// * ACCEPTED - The invitee created a member and joined the network using the InvitationID.
        ///
        /// * REJECTED - The invitee rejected the invitation.
        ///
        /// * EXPIRED - The invitee neither created a member nor rejected the invitation before the ExpirationDate.
        public var status: ManagedBlockchainClientTypes.InvitationStatus?

        public init (
            arn: Swift.String? = nil,
            creationDate: ClientRuntime.Date? = nil,
            expirationDate: ClientRuntime.Date? = nil,
            invitationId: Swift.String? = nil,
            networkSummary: ManagedBlockchainClientTypes.NetworkSummary? = nil,
            status: ManagedBlockchainClientTypes.InvitationStatus? = nil
        )
        {
            self.arn = arn
            self.creationDate = creationDate
            self.expirationDate = expirationDate
            self.invitationId = invitationId
            self.networkSummary = networkSummary
            self.status = status
        }
    }

}
