// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ManagedBlockchainClientTypes.NodeFabricLogPublishingConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case chaincodeLogs = "ChaincodeLogs"
        case peerLogs = "PeerLogs"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let chaincodeLogs = self.chaincodeLogs {
            try encodeContainer.encode(chaincodeLogs, forKey: .chaincodeLogs)
        }
        if let peerLogs = self.peerLogs {
            try encodeContainer.encode(peerLogs, forKey: .peerLogs)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let chaincodeLogsDecoded = try containerValues.decodeIfPresent(ManagedBlockchainClientTypes.LogConfigurations.self, forKey: .chaincodeLogs)
        chaincodeLogs = chaincodeLogsDecoded
        let peerLogsDecoded = try containerValues.decodeIfPresent(ManagedBlockchainClientTypes.LogConfigurations.self, forKey: .peerLogs)
        peerLogs = peerLogsDecoded
    }
}
