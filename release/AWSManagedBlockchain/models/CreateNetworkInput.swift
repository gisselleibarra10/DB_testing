// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateNetworkInput: Swift.Equatable {
    /// A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an AWS SDK or the AWS CLI.
    /// This member is required.
    public var clientRequestToken: Swift.String?
    /// An optional description for the network.
    public var description: Swift.String?
    /// The blockchain framework that the network uses.
    /// This member is required.
    public var framework: ManagedBlockchainClientTypes.Framework?
    /// Configuration properties of the blockchain framework relevant to the network configuration.
    public var frameworkConfiguration: ManagedBlockchainClientTypes.NetworkFrameworkConfiguration?
    /// The version of the blockchain framework that the network uses.
    /// This member is required.
    public var frameworkVersion: Swift.String?
    /// Configuration properties for the first member within the network.
    /// This member is required.
    public var memberConfiguration: ManagedBlockchainClientTypes.MemberConfiguration?
    /// The name of the network.
    /// This member is required.
    public var name: Swift.String?
    /// Tags to assign to the network. Each tag consists of a key and optional value. When specifying tags during creation, you can specify multiple key-value pairs in a single request, with an overall maximum of 50 tags added to each resource. For more information about tags, see [Tagging Resources](https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html) in the Amazon Managed Blockchain Ethereum Developer Guide, or [Tagging Resources](https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html) in the Amazon Managed Blockchain Hyperledger Fabric Developer Guide.
    public var tags: [Swift.String:Swift.String]?
    /// The voting rules used by the network to determine if a proposal is approved.
    /// This member is required.
    public var votingPolicy: ManagedBlockchainClientTypes.VotingPolicy?

    public init (
        clientRequestToken: Swift.String? = nil,
        description: Swift.String? = nil,
        framework: ManagedBlockchainClientTypes.Framework? = nil,
        frameworkConfiguration: ManagedBlockchainClientTypes.NetworkFrameworkConfiguration? = nil,
        frameworkVersion: Swift.String? = nil,
        memberConfiguration: ManagedBlockchainClientTypes.MemberConfiguration? = nil,
        name: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        votingPolicy: ManagedBlockchainClientTypes.VotingPolicy? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.description = description
        self.framework = framework
        self.frameworkConfiguration = frameworkConfiguration
        self.frameworkVersion = frameworkVersion
        self.memberConfiguration = memberConfiguration
        self.name = name
        self.tags = tags
        self.votingPolicy = votingPolicy
    }
}
