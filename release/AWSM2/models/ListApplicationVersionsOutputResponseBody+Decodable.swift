// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationVersionsOutputResponseBody: Swift.Equatable {
    let applicationVersions: [M2ClientTypes.ApplicationVersionSummary]?
    let nextToken: Swift.String?
}

extension ListApplicationVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationVersions
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationVersionsContainer = try containerValues.decodeIfPresent([M2ClientTypes.ApplicationVersionSummary?].self, forKey: .applicationVersions)
        var applicationVersionsDecoded0:[M2ClientTypes.ApplicationVersionSummary]? = nil
        if let applicationVersionsContainer = applicationVersionsContainer {
            applicationVersionsDecoded0 = [M2ClientTypes.ApplicationVersionSummary]()
            for structure0 in applicationVersionsContainer {
                if let structure0 = structure0 {
                    applicationVersionsDecoded0?.append(structure0)
                }
            }
        }
        applicationVersions = applicationVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
