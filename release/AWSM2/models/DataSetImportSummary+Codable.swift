// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension M2ClientTypes.DataSetImportSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failed
        case inProgress
        case pending
        case succeeded
        case total
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if failed != 0 {
            try encodeContainer.encode(failed, forKey: .failed)
        }
        if inProgress != 0 {
            try encodeContainer.encode(inProgress, forKey: .inProgress)
        }
        if pending != 0 {
            try encodeContainer.encode(pending, forKey: .pending)
        }
        if succeeded != 0 {
            try encodeContainer.encode(succeeded, forKey: .succeeded)
        }
        if total != 0 {
            try encodeContainer.encode(total, forKey: .total)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .total) ?? 0
        total = totalDecoded
        let succeededDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .succeeded) ?? 0
        succeeded = succeededDecoded
        let failedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failed) ?? 0
        failed = failedDecoded
        let pendingDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .pending) ?? 0
        pending = pendingDecoded
        let inProgressDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .inProgress) ?? 0
        inProgress = inProgressDecoded
    }
}
