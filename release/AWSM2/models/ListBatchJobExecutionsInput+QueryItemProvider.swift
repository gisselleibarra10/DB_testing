// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListBatchJobExecutionsInput: ClientRuntime.QueryItemProvider {
    public var queryItems: [ClientRuntime.URLQueryItem] {
        var items = [ClientRuntime.URLQueryItem]()
        if let jobName = jobName {
            let jobNameQueryItem = ClientRuntime.URLQueryItem(name: "jobName".urlPercentEncoding(), value: Swift.String(jobName).urlPercentEncoding())
            items.append(jobNameQueryItem)
        }
        if let executionIds = executionIds {
            executionIds.forEach { queryItemValue in
                let queryItem = ClientRuntime.URLQueryItem(name: "executionIds".urlPercentEncoding(), value: Swift.String(queryItemValue).urlPercentEncoding())
                items.append(queryItem)
            }
        }
        if let nextToken = nextToken {
            let nextTokenQueryItem = ClientRuntime.URLQueryItem(name: "nextToken".urlPercentEncoding(), value: Swift.String(nextToken).urlPercentEncoding())
            items.append(nextTokenQueryItem)
        }
        if let maxResults = maxResults {
            let maxResultsQueryItem = ClientRuntime.URLQueryItem(name: "maxResults".urlPercentEncoding(), value: Swift.String(maxResults).urlPercentEncoding())
            items.append(maxResultsQueryItem)
        }
        if let startedAfter = startedAfter {
            let startedAfterQueryItem = ClientRuntime.URLQueryItem(name: "startedAfter".urlPercentEncoding(), value: Swift.String(startedAfter.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            items.append(startedAfterQueryItem)
        }
        if let startedBefore = startedBefore {
            let startedBeforeQueryItem = ClientRuntime.URLQueryItem(name: "startedBefore".urlPercentEncoding(), value: Swift.String(startedBefore.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            items.append(startedBeforeQueryItem)
        }
        if let status = status {
            let statusQueryItem = ClientRuntime.URLQueryItem(name: "status".urlPercentEncoding(), value: Swift.String(status.rawValue).urlPercentEncoding())
            items.append(statusQueryItem)
        }
        return items
    }
}
