// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDataSetImportHistoryOutputResponseBody: Swift.Equatable {
    let dataSetImportTasks: [M2ClientTypes.DataSetImportTask]?
    let nextToken: Swift.String?
}

extension ListDataSetImportHistoryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSetImportTasks
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSetImportTasksContainer = try containerValues.decodeIfPresent([M2ClientTypes.DataSetImportTask?].self, forKey: .dataSetImportTasks)
        var dataSetImportTasksDecoded0:[M2ClientTypes.DataSetImportTask]? = nil
        if let dataSetImportTasksContainer = dataSetImportTasksContainer {
            dataSetImportTasksDecoded0 = [M2ClientTypes.DataSetImportTask]()
            for structure0 in dataSetImportTasksContainer {
                if let structure0 = structure0 {
                    dataSetImportTasksDecoded0?.append(structure0)
                }
            }
        }
        dataSetImportTasks = dataSetImportTasksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
