// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateEnvironmentInputBody: Swift.Equatable {
    let desiredCapacity: Swift.Int?
    let instanceType: Swift.String?
    let engineVersion: Swift.String?
    let preferredMaintenanceWindow: Swift.String?
    let applyDuringMaintenanceWindow: Swift.Bool
}

extension UpdateEnvironmentInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applyDuringMaintenanceWindow
        case desiredCapacity
        case engineVersion
        case instanceType
        case preferredMaintenanceWindow
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let desiredCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .desiredCapacity)
        desiredCapacity = desiredCapacityDecoded
        let instanceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceType)
        instanceType = instanceTypeDecoded
        let engineVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .engineVersion)
        engineVersion = engineVersionDecoded
        let preferredMaintenanceWindowDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .preferredMaintenanceWindow)
        preferredMaintenanceWindow = preferredMaintenanceWindowDecoded
        let applyDuringMaintenanceWindowDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .applyDuringMaintenanceWindow) ?? false
        applyDuringMaintenanceWindow = applyDuringMaintenanceWindowDecoded
    }
}
