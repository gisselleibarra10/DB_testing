// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDeploymentOutputResponseBody: Swift.Equatable {
    let deploymentId: Swift.String?
    let applicationId: Swift.String?
    let environmentId: Swift.String?
    let applicationVersion: Swift.Int?
    let status: M2ClientTypes.DeploymentLifecycle?
    let creationTime: ClientRuntime.Date?
    let statusReason: Swift.String?
}

extension GetDeploymentOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationId
        case applicationVersion
        case creationTime
        case deploymentId
        case environmentId
        case status
        case statusReason
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deploymentId)
        deploymentId = deploymentIdDecoded
        let applicationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationId)
        applicationId = applicationIdDecoded
        let environmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .environmentId)
        environmentId = environmentIdDecoded
        let applicationVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .applicationVersion)
        applicationVersion = applicationVersionDecoded
        let statusDecoded = try containerValues.decodeIfPresent(M2ClientTypes.DeploymentLifecycle.self, forKey: .status)
        status = statusDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let statusReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusReason)
        statusReason = statusReasonDecoded
    }
}
