// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDataSetDetailsOutputResponseBody: Swift.Equatable {
    let dataSetName: Swift.String?
    let dataSetOrg: M2ClientTypes.DatasetDetailOrgAttributes?
    let recordLength: Swift.Int?
    let location: Swift.String?
    let blocksize: Swift.Int?
    let creationTime: ClientRuntime.Date?
    let lastUpdatedTime: ClientRuntime.Date?
    let lastReferencedTime: ClientRuntime.Date?
}

extension GetDataSetDetailsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blocksize
        case creationTime
        case dataSetName
        case dataSetOrg
        case lastReferencedTime
        case lastUpdatedTime
        case location
        case recordLength
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataSetName)
        dataSetName = dataSetNameDecoded
        let dataSetOrgDecoded = try containerValues.decodeIfPresent(M2ClientTypes.DatasetDetailOrgAttributes.self, forKey: .dataSetOrg)
        dataSetOrg = dataSetOrgDecoded
        let recordLengthDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .recordLength)
        recordLength = recordLengthDecoded
        let locationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .location)
        location = locationDecoded
        let blocksizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .blocksize)
        blocksize = blocksizeDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastUpdatedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedTime)
        lastUpdatedTime = lastUpdatedTimeDecoded
        let lastReferencedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastReferencedTime)
        lastReferencedTime = lastReferencedTimeDecoded
    }
}
