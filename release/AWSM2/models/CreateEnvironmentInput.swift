// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateEnvironmentInput: Swift.Equatable {
    /// Unique, case-sensitive identifier you provide to ensure the idempotency of the request to create an environment. The service generates the clientToken when the API call is triggered. The token expires after one hour, so if you retry the API within this timeframe with the same clientToken, you will get the same response. The service also handles deleting the clientToken after it expires.
    public var clientToken: Swift.String?
    /// The description of the environment.
    public var description: Swift.String?
    /// The engine type for the environment.
    /// This member is required.
    public var engineType: M2ClientTypes.EngineType?
    /// The version of the engine type for the environment.
    public var engineVersion: Swift.String?
    /// The details of a high availability configuration for this runtime environment.
    public var highAvailabilityConfig: M2ClientTypes.HighAvailabilityConfig?
    /// The type of instance for the environment.
    /// This member is required.
    public var instanceType: Swift.String?
    /// The unique identifier of the environment.
    /// This member is required.
    public var name: Swift.String?
    /// Configures a desired maintenance window for the environment. If you do not provide a value, a random system-generated value will be assigned.
    public var preferredMaintenanceWindow: Swift.String?
    /// Specifies whether the environment is publicly accessible.
    public var publiclyAccessible: Swift.Bool
    /// The list of security groups for the VPC associated with this environment.
    public var securityGroupIds: [Swift.String]?
    /// Optional. The storage configurations for this environment.
    public var storageConfigurations: [M2ClientTypes.StorageConfiguration]?
    /// The list of subnets associated with the VPC for this environment.
    public var subnetIds: [Swift.String]?
    /// The tags for the environment.
    public var tags: [Swift.String:Swift.String]?

    public init (
        clientToken: Swift.String? = nil,
        description: Swift.String? = nil,
        engineType: M2ClientTypes.EngineType? = nil,
        engineVersion: Swift.String? = nil,
        highAvailabilityConfig: M2ClientTypes.HighAvailabilityConfig? = nil,
        instanceType: Swift.String? = nil,
        name: Swift.String? = nil,
        preferredMaintenanceWindow: Swift.String? = nil,
        publiclyAccessible: Swift.Bool = false,
        securityGroupIds: [Swift.String]? = nil,
        storageConfigurations: [M2ClientTypes.StorageConfiguration]? = nil,
        subnetIds: [Swift.String]? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.engineType = engineType
        self.engineVersion = engineVersion
        self.highAvailabilityConfig = highAvailabilityConfig
        self.instanceType = instanceType
        self.name = name
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.publiclyAccessible = publiclyAccessible
        self.securityGroupIds = securityGroupIds
        self.storageConfigurations = storageConfigurations
        self.subnetIds = subnetIds
        self.tags = tags
    }
}
