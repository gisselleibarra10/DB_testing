// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetApplicationVersionOutputResponseBody: Swift.Equatable {
    let name: Swift.String?
    let applicationVersion: Swift.Int?
    let description: Swift.String?
    let definitionContent: Swift.String?
    let status: M2ClientTypes.ApplicationVersionLifecycle?
    let creationTime: ClientRuntime.Date?
    let statusReason: Swift.String?
}

extension GetApplicationVersionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationVersion
        case creationTime
        case definitionContent
        case description
        case name
        case status
        case statusReason
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let applicationVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .applicationVersion)
        applicationVersion = applicationVersionDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let definitionContentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .definitionContent)
        definitionContent = definitionContentDecoded
        let statusDecoded = try containerValues.decodeIfPresent(M2ClientTypes.ApplicationVersionLifecycle.self, forKey: .status)
        status = statusDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let statusReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusReason)
        statusReason = statusReasonDecoded
    }
}
