// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension M2ClientTypes {
    /// A subset of the possible batch job attributes. Used in the batch job list.
    public struct BatchJobExecutionSummary: Swift.Equatable {
        /// The unique identifier of the application that hosts this batch job.
        /// This member is required.
        public var applicationId: Swift.String?
        /// The timestamp when this batch job execution ended.
        public var endTime: ClientRuntime.Date?
        /// The unique identifier of this execution of the batch job.
        /// This member is required.
        public var executionId: Swift.String?
        /// The unique identifier of a particular batch job.
        public var jobId: Swift.String?
        /// The name of a particular batch job.
        public var jobName: Swift.String?
        /// The type of a particular batch job execution.
        public var jobType: M2ClientTypes.BatchJobType?
        /// The timestamp when a particular batch job execution started.
        /// This member is required.
        public var startTime: ClientRuntime.Date?
        /// The status of a particular batch job execution.
        /// This member is required.
        public var status: M2ClientTypes.BatchJobExecutionStatus?

        public init (
            applicationId: Swift.String? = nil,
            endTime: ClientRuntime.Date? = nil,
            executionId: Swift.String? = nil,
            jobId: Swift.String? = nil,
            jobName: Swift.String? = nil,
            jobType: M2ClientTypes.BatchJobType? = nil,
            startTime: ClientRuntime.Date? = nil,
            status: M2ClientTypes.BatchJobExecutionStatus? = nil
        )
        {
            self.applicationId = applicationId
            self.endTime = endTime
            self.executionId = executionId
            self.jobId = jobId
            self.jobName = jobName
            self.jobType = jobType
            self.startTime = startTime
            self.status = status
        }
    }

}
