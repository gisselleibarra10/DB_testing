// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDataSetImportTaskOutputResponseBody: Swift.Equatable {
    let taskId: Swift.String?
    let status: M2ClientTypes.DataSetTaskLifecycle?
    let summary: M2ClientTypes.DataSetImportSummary?
}

extension GetDataSetImportTaskOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case status
        case summary
        case taskId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskId)
        taskId = taskIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(M2ClientTypes.DataSetTaskLifecycle.self, forKey: .status)
        status = statusDecoded
        let summaryDecoded = try containerValues.decodeIfPresent(M2ClientTypes.DataSetImportSummary.self, forKey: .summary)
        summary = summaryDecoded
    }
}
