// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchMeterUsageOutputResponseBody: Swift.Equatable {
    let results: [MarketplaceMeteringClientTypes.UsageRecordResult]?
    let unprocessedRecords: [MarketplaceMeteringClientTypes.UsageRecord]?
}

extension BatchMeterUsageOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case results = "Results"
        case unprocessedRecords = "UnprocessedRecords"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultsContainer = try containerValues.decodeIfPresent([MarketplaceMeteringClientTypes.UsageRecordResult?].self, forKey: .results)
        var resultsDecoded0:[MarketplaceMeteringClientTypes.UsageRecordResult]? = nil
        if let resultsContainer = resultsContainer {
            resultsDecoded0 = [MarketplaceMeteringClientTypes.UsageRecordResult]()
            for structure0 in resultsContainer {
                if let structure0 = structure0 {
                    resultsDecoded0?.append(structure0)
                }
            }
        }
        results = resultsDecoded0
        let unprocessedRecordsContainer = try containerValues.decodeIfPresent([MarketplaceMeteringClientTypes.UsageRecord?].self, forKey: .unprocessedRecords)
        var unprocessedRecordsDecoded0:[MarketplaceMeteringClientTypes.UsageRecord]? = nil
        if let unprocessedRecordsContainer = unprocessedRecordsContainer {
            unprocessedRecordsDecoded0 = [MarketplaceMeteringClientTypes.UsageRecord]()
            for structure0 in unprocessedRecordsContainer {
                if let structure0 = structure0 {
                    unprocessedRecordsDecoded0?.append(structure0)
                }
            }
        }
        unprocessedRecords = unprocessedRecordsDecoded0
    }
}
