// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterUsageOutputResponseBody: Swift.Equatable {
    let publicKeyRotationTimestamp: ClientRuntime.Date?
    let signature: Swift.String?
}

extension RegisterUsageOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case publicKeyRotationTimestamp = "PublicKeyRotationTimestamp"
        case signature = "Signature"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let publicKeyRotationTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .publicKeyRotationTimestamp)
        publicKeyRotationTimestamp = publicKeyRotationTimestampDecoded
        let signatureDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .signature)
        signature = signatureDecoded
    }
}
