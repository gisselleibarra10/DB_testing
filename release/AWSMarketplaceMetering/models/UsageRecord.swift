// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MarketplaceMeteringClientTypes {
    /// A UsageRecord indicates a quantity of usage for a given product, customer, dimension and time. Multiple requests with the same UsageRecords as input will be de-duplicated to prevent double charges.
    public struct UsageRecord: Swift.Equatable {
        /// The CustomerIdentifier is obtained through the ResolveCustomer operation and represents an individual buyer in your application.
        /// This member is required.
        public var customerIdentifier: Swift.String?
        /// During the process of registering a product on AWS Marketplace, dimensions are specified. These represent different units of value in your application.
        /// This member is required.
        public var dimension: Swift.String?
        /// The quantity of usage consumed by the customer for the given dimension and time. Defaults to 0 if not specified.
        public var quantity: Swift.Int?
        /// Timestamp, in UTC, for which the usage is being reported. Your application can meter usage for up to one hour in the past. Make sure the timestamp value is not before the start of the software usage.
        /// This member is required.
        public var timestamp: ClientRuntime.Date?
        /// The set of UsageAllocations to submit. The sum of all UsageAllocation quantities must equal the Quantity of the UsageRecord.
        public var usageAllocations: [MarketplaceMeteringClientTypes.UsageAllocation]?

        public init (
            customerIdentifier: Swift.String? = nil,
            dimension: Swift.String? = nil,
            quantity: Swift.Int? = nil,
            timestamp: ClientRuntime.Date? = nil,
            usageAllocations: [MarketplaceMeteringClientTypes.UsageAllocation]? = nil
        )
        {
            self.customerIdentifier = customerIdentifier
            self.dimension = dimension
            self.quantity = quantity
            self.timestamp = timestamp
            self.usageAllocations = usageAllocations
        }
    }

}
