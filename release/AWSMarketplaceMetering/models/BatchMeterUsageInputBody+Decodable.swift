// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchMeterUsageInputBody: Swift.Equatable {
    let usageRecords: [MarketplaceMeteringClientTypes.UsageRecord]?
    let productCode: Swift.String?
}

extension BatchMeterUsageInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case productCode = "ProductCode"
        case usageRecords = "UsageRecords"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let usageRecordsContainer = try containerValues.decodeIfPresent([MarketplaceMeteringClientTypes.UsageRecord?].self, forKey: .usageRecords)
        var usageRecordsDecoded0:[MarketplaceMeteringClientTypes.UsageRecord]? = nil
        if let usageRecordsContainer = usageRecordsContainer {
            usageRecordsDecoded0 = [MarketplaceMeteringClientTypes.UsageRecord]()
            for structure0 in usageRecordsContainer {
                if let structure0 = structure0 {
                    usageRecordsDecoded0?.append(structure0)
                }
            }
        }
        usageRecords = usageRecordsDecoded0
        let productCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .productCode)
        productCode = productCodeDecoded
    }
}
