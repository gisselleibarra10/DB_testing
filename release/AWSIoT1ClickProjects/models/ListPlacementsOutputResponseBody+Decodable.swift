// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPlacementsOutputResponseBody: Swift.Equatable {
    let placements: [Iot1ClickProjectsClientTypes.PlacementSummary]?
    let nextToken: Swift.String?
}

extension ListPlacementsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case placements
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let placementsContainer = try containerValues.decodeIfPresent([Iot1ClickProjectsClientTypes.PlacementSummary?].self, forKey: .placements)
        var placementsDecoded0:[Iot1ClickProjectsClientTypes.PlacementSummary]? = nil
        if let placementsContainer = placementsContainer {
            placementsDecoded0 = [Iot1ClickProjectsClientTypes.PlacementSummary]()
            for structure0 in placementsContainer {
                if let structure0 = structure0 {
                    placementsDecoded0?.append(structure0)
                }
            }
        }
        placements = placementsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
