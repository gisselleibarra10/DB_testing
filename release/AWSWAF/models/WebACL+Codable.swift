// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WafClientTypes.WebACL: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultAction = "DefaultAction"
        case metricName = "MetricName"
        case name = "Name"
        case rules = "Rules"
        case webACLArn = "WebACLArn"
        case webACLId = "WebACLId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultAction = self.defaultAction {
            try encodeContainer.encode(defaultAction, forKey: .defaultAction)
        }
        if let metricName = self.metricName {
            try encodeContainer.encode(metricName, forKey: .metricName)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let rules = rules {
            var rulesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .rules)
            for activatedrules0 in rules {
                try rulesContainer.encode(activatedrules0)
            }
        }
        if let webACLArn = self.webACLArn {
            try encodeContainer.encode(webACLArn, forKey: .webACLArn)
        }
        if let webACLId = self.webACLId {
            try encodeContainer.encode(webACLId, forKey: .webACLId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let webACLIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .webACLId)
        webACLId = webACLIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let metricNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metricName)
        metricName = metricNameDecoded
        let defaultActionDecoded = try containerValues.decodeIfPresent(WafClientTypes.WafAction.self, forKey: .defaultAction)
        defaultAction = defaultActionDecoded
        let rulesContainer = try containerValues.decodeIfPresent([WafClientTypes.ActivatedRule?].self, forKey: .rules)
        var rulesDecoded0:[WafClientTypes.ActivatedRule]? = nil
        if let rulesContainer = rulesContainer {
            rulesDecoded0 = [WafClientTypes.ActivatedRule]()
            for structure0 in rulesContainer {
                if let structure0 = structure0 {
                    rulesDecoded0?.append(structure0)
                }
            }
        }
        rules = rulesDecoded0
        let webACLArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .webACLArn)
        webACLArn = webACLArnDecoded
    }
}
