// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRegexMatchSetsOutputResponseBody: Swift.Equatable {
    let nextMarker: Swift.String?
    let regexMatchSets: [WafClientTypes.RegexMatchSetSummary]?
}

extension ListRegexMatchSetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextMarker = "NextMarker"
        case regexMatchSets = "RegexMatchSets"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let regexMatchSetsContainer = try containerValues.decodeIfPresent([WafClientTypes.RegexMatchSetSummary?].self, forKey: .regexMatchSets)
        var regexMatchSetsDecoded0:[WafClientTypes.RegexMatchSetSummary]? = nil
        if let regexMatchSetsContainer = regexMatchSetsContainer {
            regexMatchSetsDecoded0 = [WafClientTypes.RegexMatchSetSummary]()
            for structure0 in regexMatchSetsContainer {
                if let structure0 = structure0 {
                    regexMatchSetsDecoded0?.append(structure0)
                }
            }
        }
        regexMatchSets = regexMatchSetsDecoded0
    }
}
