// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSqlInjectionMatchSetsOutputResponseBody: Swift.Equatable {
    let nextMarker: Swift.String?
    let sqlInjectionMatchSets: [WafClientTypes.SqlInjectionMatchSetSummary]?
}

extension ListSqlInjectionMatchSetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextMarker = "NextMarker"
        case sqlInjectionMatchSets = "SqlInjectionMatchSets"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let sqlInjectionMatchSetsContainer = try containerValues.decodeIfPresent([WafClientTypes.SqlInjectionMatchSetSummary?].self, forKey: .sqlInjectionMatchSets)
        var sqlInjectionMatchSetsDecoded0:[WafClientTypes.SqlInjectionMatchSetSummary]? = nil
        if let sqlInjectionMatchSetsContainer = sqlInjectionMatchSetsContainer {
            sqlInjectionMatchSetsDecoded0 = [WafClientTypes.SqlInjectionMatchSetSummary]()
            for structure0 in sqlInjectionMatchSetsContainer {
                if let structure0 = structure0 {
                    sqlInjectionMatchSetsDecoded0?.append(structure0)
                }
            }
        }
        sqlInjectionMatchSets = sqlInjectionMatchSetsDecoded0
    }
}
