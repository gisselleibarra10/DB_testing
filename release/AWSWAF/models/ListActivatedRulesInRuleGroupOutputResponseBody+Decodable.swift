// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListActivatedRulesInRuleGroupOutputResponseBody: Swift.Equatable {
    let nextMarker: Swift.String?
    let activatedRules: [WafClientTypes.ActivatedRule]?
}

extension ListActivatedRulesInRuleGroupOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activatedRules = "ActivatedRules"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let activatedRulesContainer = try containerValues.decodeIfPresent([WafClientTypes.ActivatedRule?].self, forKey: .activatedRules)
        var activatedRulesDecoded0:[WafClientTypes.ActivatedRule]? = nil
        if let activatedRulesContainer = activatedRulesContainer {
            activatedRulesDecoded0 = [WafClientTypes.ActivatedRule]()
            for structure0 in activatedRulesContainer {
                if let structure0 = structure0 {
                    activatedRulesDecoded0?.append(structure0)
                }
            }
        }
        activatedRules = activatedRulesDecoded0
    }
}
