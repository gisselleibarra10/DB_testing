// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension WafClientTypes {
    /// This is AWS WAF Classic documentation. For more information, see [AWS WAF Classic](https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html) in the developer guide. For the latest version of AWS WAF, use the AWS WAFV2 API and see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html). With the latest version, AWS WAF has a single set of endpoints for regional and global use. The RegexPatternSet specifies the regular expression (regex) pattern that you want AWS WAF to search for, such as B[a@]dB[o0]t. You can then configure AWS WAF to reject those requests.
    public struct RegexPatternSet: Swift.Equatable {
        /// A friendly name or description of the [RegexPatternSet]. You can't change Name after you create a RegexPatternSet.
        public var name: Swift.String?
        /// The identifier for the RegexPatternSet. You use RegexPatternSetId to get information about a RegexPatternSet, update a RegexPatternSet, remove a RegexPatternSet from a RegexMatchSet, and delete a RegexPatternSet from AWS WAF. RegexMatchSetId is returned by [CreateRegexPatternSet] and by [ListRegexPatternSets].
        /// This member is required.
        public var regexPatternSetId: Swift.String?
        /// Specifies the regular expression (regex) patterns that you want AWS WAF to search for, such as B[a@]dB[o0]t.
        /// This member is required.
        public var regexPatternStrings: [Swift.String]?

        public init (
            name: Swift.String? = nil,
            regexPatternSetId: Swift.String? = nil,
            regexPatternStrings: [Swift.String]? = nil
        )
        {
            self.name = name
            self.regexPatternSetId = regexPatternSetId
            self.regexPatternStrings = regexPatternStrings
        }
    }

}
