// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRateBasedRuleManagedKeysOutputResponseBody: Swift.Equatable {
    let managedKeys: [Swift.String]?
    let nextMarker: Swift.String?
}

extension GetRateBasedRuleManagedKeysOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case managedKeys = "ManagedKeys"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let managedKeysContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .managedKeys)
        var managedKeysDecoded0:[Swift.String]? = nil
        if let managedKeysContainer = managedKeysContainer {
            managedKeysDecoded0 = [Swift.String]()
            for string0 in managedKeysContainer {
                if let string0 = string0 {
                    managedKeysDecoded0?.append(string0)
                }
            }
        }
        managedKeys = managedKeysDecoded0
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
    }
}
