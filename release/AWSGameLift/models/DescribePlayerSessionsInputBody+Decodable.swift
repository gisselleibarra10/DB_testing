// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePlayerSessionsInputBody: Swift.Equatable {
    let gameSessionId: Swift.String?
    let playerId: Swift.String?
    let playerSessionId: Swift.String?
    let playerSessionStatusFilter: Swift.String?
    let limit: Swift.Int?
    let nextToken: Swift.String?
}

extension DescribePlayerSessionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameSessionId = "GameSessionId"
        case limit = "Limit"
        case nextToken = "NextToken"
        case playerId = "PlayerId"
        case playerSessionId = "PlayerSessionId"
        case playerSessionStatusFilter = "PlayerSessionStatusFilter"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gameSessionId)
        gameSessionId = gameSessionIdDecoded
        let playerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .playerId)
        playerId = playerIdDecoded
        let playerSessionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .playerSessionId)
        playerSessionId = playerSessionIdDecoded
        let playerSessionStatusFilterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .playerSessionStatusFilter)
        playerSessionStatusFilter = playerSessionStatusFilterDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
