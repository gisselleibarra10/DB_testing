// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreatePlayerSessionsInputBody: Swift.Equatable {
    let gameSessionId: Swift.String?
    let playerIds: [Swift.String]?
    let playerDataMap: [Swift.String:Swift.String]?
}

extension CreatePlayerSessionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameSessionId = "GameSessionId"
        case playerDataMap = "PlayerDataMap"
        case playerIds = "PlayerIds"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gameSessionId)
        gameSessionId = gameSessionIdDecoded
        let playerIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .playerIds)
        var playerIdsDecoded0:[Swift.String]? = nil
        if let playerIdsContainer = playerIdsContainer {
            playerIdsDecoded0 = [Swift.String]()
            for string0 in playerIdsContainer {
                if let string0 = string0 {
                    playerIdsDecoded0?.append(string0)
                }
            }
        }
        playerIds = playerIdsDecoded0
        let playerDataMapContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .playerDataMap)
        var playerDataMapDecoded0: [Swift.String:Swift.String]? = nil
        if let playerDataMapContainer = playerDataMapContainer {
            playerDataMapDecoded0 = [Swift.String:Swift.String]()
            for (key0, playerdata0) in playerDataMapContainer {
                if let playerdata0 = playerdata0 {
                    playerDataMapDecoded0?[key0] = playerdata0
                }
            }
        }
        playerDataMap = playerDataMapDecoded0
    }
}
