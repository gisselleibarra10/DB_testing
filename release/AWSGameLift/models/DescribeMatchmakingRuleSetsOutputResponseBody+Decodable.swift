// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMatchmakingRuleSetsOutputResponseBody: Swift.Equatable {
    let ruleSets: [GameLiftClientTypes.MatchmakingRuleSet]?
    let nextToken: Swift.String?
}

extension DescribeMatchmakingRuleSetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case ruleSets = "RuleSets"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleSetsContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.MatchmakingRuleSet?].self, forKey: .ruleSets)
        var ruleSetsDecoded0:[GameLiftClientTypes.MatchmakingRuleSet]? = nil
        if let ruleSetsContainer = ruleSetsContainer {
            ruleSetsDecoded0 = [GameLiftClientTypes.MatchmakingRuleSet]()
            for structure0 in ruleSetsContainer {
                if let structure0 = structure0 {
                    ruleSetsDecoded0?.append(structure0)
                }
            }
        }
        ruleSets = ruleSetsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
