// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeGameServerInstancesOutputResponseBody: Swift.Equatable {
    let gameServerInstances: [GameLiftClientTypes.GameServerInstance]?
    let nextToken: Swift.String?
}

extension DescribeGameServerInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameServerInstances = "GameServerInstances"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerInstancesContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.GameServerInstance?].self, forKey: .gameServerInstances)
        var gameServerInstancesDecoded0:[GameLiftClientTypes.GameServerInstance]? = nil
        if let gameServerInstancesContainer = gameServerInstancesContainer {
            gameServerInstancesDecoded0 = [GameLiftClientTypes.GameServerInstance]()
            for structure0 in gameServerInstancesContainer {
                if let structure0 = structure0 {
                    gameServerInstancesDecoded0?.append(structure0)
                }
            }
        }
        gameServerInstances = gameServerInstancesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
