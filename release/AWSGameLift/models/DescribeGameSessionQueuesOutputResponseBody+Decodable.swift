// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeGameSessionQueuesOutputResponseBody: Swift.Equatable {
    let gameSessionQueues: [GameLiftClientTypes.GameSessionQueue]?
    let nextToken: Swift.String?
}

extension DescribeGameSessionQueuesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameSessionQueues = "GameSessionQueues"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionQueuesContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.GameSessionQueue?].self, forKey: .gameSessionQueues)
        var gameSessionQueuesDecoded0:[GameLiftClientTypes.GameSessionQueue]? = nil
        if let gameSessionQueuesContainer = gameSessionQueuesContainer {
            gameSessionQueuesDecoded0 = [GameLiftClientTypes.GameSessionQueue]()
            for structure0 in gameSessionQueuesContainer {
                if let structure0 = structure0 {
                    gameSessionQueuesDecoded0?.append(structure0)
                }
            }
        }
        gameSessionQueues = gameSessionQueuesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
