// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAliasesOutputResponseBody: Swift.Equatable {
    let aliases: [GameLiftClientTypes.Alias]?
    let nextToken: Swift.String?
}

extension ListAliasesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aliases = "Aliases"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aliasesContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.Alias?].self, forKey: .aliases)
        var aliasesDecoded0:[GameLiftClientTypes.Alias]? = nil
        if let aliasesContainer = aliasesContainer {
            aliasesDecoded0 = [GameLiftClientTypes.Alias]()
            for structure0 in aliasesContainer {
                if let structure0 = structure0 {
                    aliasesDecoded0?.append(structure0)
                }
            }
        }
        aliases = aliasesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
