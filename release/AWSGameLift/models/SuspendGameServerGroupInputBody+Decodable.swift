// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SuspendGameServerGroupInputBody: Swift.Equatable {
    let gameServerGroupName: Swift.String?
    let suspendActions: [GameLiftClientTypes.GameServerGroupAction]?
}

extension SuspendGameServerGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameServerGroupName = "GameServerGroupName"
        case suspendActions = "SuspendActions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gameServerGroupName)
        gameServerGroupName = gameServerGroupNameDecoded
        let suspendActionsContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.GameServerGroupAction?].self, forKey: .suspendActions)
        var suspendActionsDecoded0:[GameLiftClientTypes.GameServerGroupAction]? = nil
        if let suspendActionsContainer = suspendActionsContainer {
            suspendActionsDecoded0 = [GameLiftClientTypes.GameServerGroupAction]()
            for string0 in suspendActionsContainer {
                if let string0 = string0 {
                    suspendActionsDecoded0?.append(string0)
                }
            }
        }
        suspendActions = suspendActionsDecoded0
    }
}
