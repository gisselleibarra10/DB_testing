// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes.Build: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case buildArn = "BuildArn"
        case buildId = "BuildId"
        case creationTime = "CreationTime"
        case name = "Name"
        case operatingSystem = "OperatingSystem"
        case sizeOnDisk = "SizeOnDisk"
        case status = "Status"
        case version = "Version"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let buildArn = self.buildArn {
            try encodeContainer.encode(buildArn, forKey: .buildArn)
        }
        if let buildId = self.buildId {
            try encodeContainer.encode(buildId, forKey: .buildId)
        }
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let operatingSystem = self.operatingSystem {
            try encodeContainer.encode(operatingSystem.rawValue, forKey: .operatingSystem)
        }
        if let sizeOnDisk = self.sizeOnDisk {
            try encodeContainer.encode(sizeOnDisk, forKey: .sizeOnDisk)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let version = self.version {
            try encodeContainer.encode(version, forKey: .version)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let buildIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .buildId)
        buildId = buildIdDecoded
        let buildArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .buildArn)
        buildArn = buildArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
        let statusDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.BuildStatus.self, forKey: .status)
        status = statusDecoded
        let sizeOnDiskDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sizeOnDisk)
        sizeOnDisk = sizeOnDiskDecoded
        let operatingSystemDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.OperatingSystem.self, forKey: .operatingSystem)
        operatingSystem = operatingSystemDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
    }
}
