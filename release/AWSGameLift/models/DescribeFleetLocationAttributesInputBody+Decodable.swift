// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFleetLocationAttributesInputBody: Swift.Equatable {
    let fleetId: Swift.String?
    let locations: [Swift.String]?
    let limit: Swift.Int?
    let nextToken: Swift.String?
}

extension DescribeFleetLocationAttributesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fleetId = "FleetId"
        case limit = "Limit"
        case locations = "Locations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fleetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fleetId)
        fleetId = fleetIdDecoded
        let locationsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .locations)
        var locationsDecoded0:[Swift.String]? = nil
        if let locationsContainer = locationsContainer {
            locationsDecoded0 = [Swift.String]()
            for string0 in locationsContainer {
                if let string0 = string0 {
                    locationsDecoded0?.append(string0)
                }
            }
        }
        locations = locationsDecoded0
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
