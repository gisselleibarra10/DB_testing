// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes.GameServerGroupAutoScalingPolicy: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case estimatedInstanceWarmup = "EstimatedInstanceWarmup"
        case targetTrackingConfiguration = "TargetTrackingConfiguration"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let estimatedInstanceWarmup = self.estimatedInstanceWarmup {
            try encodeContainer.encode(estimatedInstanceWarmup, forKey: .estimatedInstanceWarmup)
        }
        if let targetTrackingConfiguration = self.targetTrackingConfiguration {
            try encodeContainer.encode(targetTrackingConfiguration, forKey: .targetTrackingConfiguration)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let estimatedInstanceWarmupDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .estimatedInstanceWarmup)
        estimatedInstanceWarmup = estimatedInstanceWarmupDecoded
        let targetTrackingConfigurationDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.TargetTrackingConfiguration.self, forKey: .targetTrackingConfiguration)
        targetTrackingConfiguration = targetTrackingConfigurationDecoded
    }
}
