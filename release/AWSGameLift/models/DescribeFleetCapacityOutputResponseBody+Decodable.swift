// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFleetCapacityOutputResponseBody: Swift.Equatable {
    let fleetCapacity: [GameLiftClientTypes.FleetCapacity]?
    let nextToken: Swift.String?
}

extension DescribeFleetCapacityOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fleetCapacity = "FleetCapacity"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fleetCapacityContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.FleetCapacity?].self, forKey: .fleetCapacity)
        var fleetCapacityDecoded0:[GameLiftClientTypes.FleetCapacity]? = nil
        if let fleetCapacityContainer = fleetCapacityContainer {
            fleetCapacityDecoded0 = [GameLiftClientTypes.FleetCapacity]()
            for structure0 in fleetCapacityContainer {
                if let structure0 = structure0 {
                    fleetCapacityDecoded0?.append(structure0)
                }
            }
        }
        fleetCapacity = fleetCapacityDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
