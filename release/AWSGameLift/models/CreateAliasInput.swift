// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input for a request operation.
public struct CreateAliasInput: Swift.Equatable {
    /// A human-readable description of the alias.
    public var description: Swift.String?
    /// A descriptive label that is associated with an alias. Alias names do not need to be unique.
    /// This member is required.
    public var name: Swift.String?
    /// The routing configuration, including routing type and fleet target, for the alias.
    /// This member is required.
    public var routingStrategy: GameLiftClientTypes.RoutingStrategy?
    /// A list of labels to assign to the new alias resource. Tags are developer-defined key-value pairs. Tagging Amazon Web Services resources are useful for resource management, access management and cost allocation. For more information, see [ Tagging Amazon Web Services Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the Amazon Web Services General Reference. Once the resource is created, you can use [TagResource], [UntagResource], and [ListTagsForResource] to add, remove, and view tags. The maximum tag limit may be lower than stated. See the Amazon Web Services General Reference for actual tagging limits.
    public var tags: [GameLiftClientTypes.Tag]?

    public init (
        description: Swift.String? = nil,
        name: Swift.String? = nil,
        routingStrategy: GameLiftClientTypes.RoutingStrategy? = nil,
        tags: [GameLiftClientTypes.Tag]? = nil
    )
    {
        self.description = description
        self.name = name
        self.routingStrategy = routingStrategy
        self.tags = tags
    }
}
