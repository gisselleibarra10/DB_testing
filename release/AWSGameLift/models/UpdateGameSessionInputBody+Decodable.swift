// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGameSessionInputBody: Swift.Equatable {
    let gameSessionId: Swift.String?
    let maximumPlayerSessionCount: Swift.Int?
    let name: Swift.String?
    let playerSessionCreationPolicy: GameLiftClientTypes.PlayerSessionCreationPolicy?
    let protectionPolicy: GameLiftClientTypes.ProtectionPolicy?
}

extension UpdateGameSessionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameSessionId = "GameSessionId"
        case maximumPlayerSessionCount = "MaximumPlayerSessionCount"
        case name = "Name"
        case playerSessionCreationPolicy = "PlayerSessionCreationPolicy"
        case protectionPolicy = "ProtectionPolicy"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gameSessionId)
        gameSessionId = gameSessionIdDecoded
        let maximumPlayerSessionCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maximumPlayerSessionCount)
        maximumPlayerSessionCount = maximumPlayerSessionCountDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let playerSessionCreationPolicyDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.PlayerSessionCreationPolicy.self, forKey: .playerSessionCreationPolicy)
        playerSessionCreationPolicy = playerSessionCreationPolicyDecoded
        let protectionPolicyDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.ProtectionPolicy.self, forKey: .protectionPolicy)
        protectionPolicy = protectionPolicyDecoded
    }
}
