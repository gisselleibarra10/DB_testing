// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes.Script: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case name = "Name"
        case scriptArn = "ScriptArn"
        case scriptId = "ScriptId"
        case sizeOnDisk = "SizeOnDisk"
        case storageLocation = "StorageLocation"
        case version = "Version"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let scriptArn = self.scriptArn {
            try encodeContainer.encode(scriptArn, forKey: .scriptArn)
        }
        if let scriptId = self.scriptId {
            try encodeContainer.encode(scriptId, forKey: .scriptId)
        }
        if let sizeOnDisk = self.sizeOnDisk {
            try encodeContainer.encode(sizeOnDisk, forKey: .sizeOnDisk)
        }
        if let storageLocation = self.storageLocation {
            try encodeContainer.encode(storageLocation, forKey: .storageLocation)
        }
        if let version = self.version {
            try encodeContainer.encode(version, forKey: .version)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scriptIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .scriptId)
        scriptId = scriptIdDecoded
        let scriptArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .scriptArn)
        scriptArn = scriptArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
        let sizeOnDiskDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sizeOnDisk)
        sizeOnDisk = sizeOnDiskDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let storageLocationDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.S3Location.self, forKey: .storageLocation)
        storageLocation = storageLocationDecoded
    }
}
