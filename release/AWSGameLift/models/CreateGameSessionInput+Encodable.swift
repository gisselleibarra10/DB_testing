// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateGameSessionInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aliasId = "AliasId"
        case creatorId = "CreatorId"
        case fleetId = "FleetId"
        case gameProperties = "GameProperties"
        case gameSessionData = "GameSessionData"
        case gameSessionId = "GameSessionId"
        case idempotencyToken = "IdempotencyToken"
        case location = "Location"
        case maximumPlayerSessionCount = "MaximumPlayerSessionCount"
        case name = "Name"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aliasId = self.aliasId {
            try encodeContainer.encode(aliasId, forKey: .aliasId)
        }
        if let creatorId = self.creatorId {
            try encodeContainer.encode(creatorId, forKey: .creatorId)
        }
        if let fleetId = self.fleetId {
            try encodeContainer.encode(fleetId, forKey: .fleetId)
        }
        if let gameProperties = gameProperties {
            var gamePropertiesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .gameProperties)
            for gamepropertylist0 in gameProperties {
                try gamePropertiesContainer.encode(gamepropertylist0)
            }
        }
        if let gameSessionData = self.gameSessionData {
            try encodeContainer.encode(gameSessionData, forKey: .gameSessionData)
        }
        if let gameSessionId = self.gameSessionId {
            try encodeContainer.encode(gameSessionId, forKey: .gameSessionId)
        }
        if let idempotencyToken = self.idempotencyToken {
            try encodeContainer.encode(idempotencyToken, forKey: .idempotencyToken)
        }
        if let location = self.location {
            try encodeContainer.encode(location, forKey: .location)
        }
        if let maximumPlayerSessionCount = self.maximumPlayerSessionCount {
            try encodeContainer.encode(maximumPlayerSessionCount, forKey: .maximumPlayerSessionCount)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }
}
