// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes.GameSessionConnectionInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dnsName = "DnsName"
        case gameSessionArn = "GameSessionArn"
        case ipAddress = "IpAddress"
        case matchedPlayerSessions = "MatchedPlayerSessions"
        case port = "Port"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dnsName = self.dnsName {
            try encodeContainer.encode(dnsName, forKey: .dnsName)
        }
        if let gameSessionArn = self.gameSessionArn {
            try encodeContainer.encode(gameSessionArn, forKey: .gameSessionArn)
        }
        if let ipAddress = self.ipAddress {
            try encodeContainer.encode(ipAddress, forKey: .ipAddress)
        }
        if let matchedPlayerSessions = matchedPlayerSessions {
            var matchedPlayerSessionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .matchedPlayerSessions)
            for matchedplayersessionlist0 in matchedPlayerSessions {
                try matchedPlayerSessionsContainer.encode(matchedplayersessionlist0)
            }
        }
        if let port = self.port {
            try encodeContainer.encode(port, forKey: .port)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gameSessionArn)
        gameSessionArn = gameSessionArnDecoded
        let ipAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipAddress)
        ipAddress = ipAddressDecoded
        let dnsNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dnsName)
        dnsName = dnsNameDecoded
        let portDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .port)
        port = portDecoded
        let matchedPlayerSessionsContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.MatchedPlayerSession?].self, forKey: .matchedPlayerSessions)
        var matchedPlayerSessionsDecoded0:[GameLiftClientTypes.MatchedPlayerSession]? = nil
        if let matchedPlayerSessionsContainer = matchedPlayerSessionsContainer {
            matchedPlayerSessionsDecoded0 = [GameLiftClientTypes.MatchedPlayerSession]()
            for structure0 in matchedPlayerSessionsContainer {
                if let structure0 = structure0 {
                    matchedPlayerSessionsDecoded0?.append(structure0)
                }
            }
        }
        matchedPlayerSessions = matchedPlayerSessionsDecoded0
    }
}
