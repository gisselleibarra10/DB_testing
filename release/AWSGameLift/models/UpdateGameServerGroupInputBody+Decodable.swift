// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGameServerGroupInputBody: Swift.Equatable {
    let gameServerGroupName: Swift.String?
    let roleArn: Swift.String?
    let instanceDefinitions: [GameLiftClientTypes.InstanceDefinition]?
    let gameServerProtectionPolicy: GameLiftClientTypes.GameServerProtectionPolicy?
    let balancingStrategy: GameLiftClientTypes.BalancingStrategy?
}

extension UpdateGameServerGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case balancingStrategy = "BalancingStrategy"
        case gameServerGroupName = "GameServerGroupName"
        case gameServerProtectionPolicy = "GameServerProtectionPolicy"
        case instanceDefinitions = "InstanceDefinitions"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gameServerGroupName)
        gameServerGroupName = gameServerGroupNameDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let instanceDefinitionsContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.InstanceDefinition?].self, forKey: .instanceDefinitions)
        var instanceDefinitionsDecoded0:[GameLiftClientTypes.InstanceDefinition]? = nil
        if let instanceDefinitionsContainer = instanceDefinitionsContainer {
            instanceDefinitionsDecoded0 = [GameLiftClientTypes.InstanceDefinition]()
            for structure0 in instanceDefinitionsContainer {
                if let structure0 = structure0 {
                    instanceDefinitionsDecoded0?.append(structure0)
                }
            }
        }
        instanceDefinitions = instanceDefinitionsDecoded0
        let gameServerProtectionPolicyDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.GameServerProtectionPolicy.self, forKey: .gameServerProtectionPolicy)
        gameServerProtectionPolicy = gameServerProtectionPolicyDecoded
        let balancingStrategyDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.BalancingStrategy.self, forKey: .balancingStrategy)
        balancingStrategy = balancingStrategyDecoded
    }
}
