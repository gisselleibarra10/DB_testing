// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GameLiftClientTypes {
    /// Represents a peering connection between a VPC on one of your Amazon Web Services accounts and the VPC for your Amazon GameLift fleets. This record may be for an active peering connection or a pending connection that has not yet been established. Related actions [CreateVpcPeeringAuthorization] | [DescribeVpcPeeringAuthorizations] | [DeleteVpcPeeringAuthorization] | [CreateVpcPeeringConnection] | [DescribeVpcPeeringConnections] | [DeleteVpcPeeringConnection] | [All APIs by task](https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets)
    public struct VpcPeeringConnection: Swift.Equatable {
        /// The Amazon Resource Name ([ARN](https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html)) associated with the GameLift fleet resource for this connection.
        public var fleetArn: Swift.String?
        /// A unique identifier for the fleet. This ID determines the ID of the Amazon GameLift VPC for your fleet.
        public var fleetId: Swift.String?
        /// A unique identifier for the VPC that contains the Amazon GameLift fleet for this connection. This VPC is managed by Amazon GameLift and does not appear in your Amazon Web Services account.
        public var gameLiftVpcId: Swift.String?
        /// CIDR block of IPv4 addresses assigned to the VPC peering connection for the GameLift VPC. The peered VPC also has an IPv4 CIDR block associated with it; these blocks cannot overlap or the peering connection cannot be created.
        public var ipV4CidrBlock: Swift.String?
        /// A unique identifier for a VPC with resources to be accessed by your GameLift fleet. The VPC must be in the same Region as your fleet. To look up a VPC ID, use the [VPC Dashboard](https://console.aws.amazon.com/vpc/) in the Amazon Web Services Management Console. Learn more about VPC peering in [VPC Peering with GameLift Fleets](https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html).
        public var peerVpcId: Swift.String?
        /// The status information about the connection. Status indicates if a connection is pending, successful, or failed.
        public var status: GameLiftClientTypes.VpcPeeringConnectionStatus?
        /// A unique identifier that is automatically assigned to the connection record. This ID is referenced in VPC peering connection events, and is used when deleting a connection with [DeleteVpcPeeringConnection].
        public var vpcPeeringConnectionId: Swift.String?

        public init (
            fleetArn: Swift.String? = nil,
            fleetId: Swift.String? = nil,
            gameLiftVpcId: Swift.String? = nil,
            ipV4CidrBlock: Swift.String? = nil,
            peerVpcId: Swift.String? = nil,
            status: GameLiftClientTypes.VpcPeeringConnectionStatus? = nil,
            vpcPeeringConnectionId: Swift.String? = nil
        )
        {
            self.fleetArn = fleetArn
            self.fleetId = fleetId
            self.gameLiftVpcId = gameLiftVpcId
            self.ipV4CidrBlock = ipV4CidrBlock
            self.peerVpcId = peerVpcId
            self.status = status
            self.vpcPeeringConnectionId = vpcPeeringConnectionId
        }
    }

}
