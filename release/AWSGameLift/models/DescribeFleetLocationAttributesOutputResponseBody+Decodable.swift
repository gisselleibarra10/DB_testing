// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFleetLocationAttributesOutputResponseBody: Swift.Equatable {
    let fleetId: Swift.String?
    let fleetArn: Swift.String?
    let locationAttributes: [GameLiftClientTypes.LocationAttributes]?
    let nextToken: Swift.String?
}

extension DescribeFleetLocationAttributesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fleetArn = "FleetArn"
        case fleetId = "FleetId"
        case locationAttributes = "LocationAttributes"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fleetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fleetId)
        fleetId = fleetIdDecoded
        let fleetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fleetArn)
        fleetArn = fleetArnDecoded
        let locationAttributesContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.LocationAttributes?].self, forKey: .locationAttributes)
        var locationAttributesDecoded0:[GameLiftClientTypes.LocationAttributes]? = nil
        if let locationAttributesContainer = locationAttributesContainer {
            locationAttributesDecoded0 = [GameLiftClientTypes.LocationAttributes]()
            for structure0 in locationAttributesContainer {
                if let structure0 = structure0 {
                    locationAttributesDecoded0?.append(structure0)
                }
            }
        }
        locationAttributes = locationAttributesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
