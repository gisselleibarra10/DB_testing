// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResumeGameServerGroupInputBody: Swift.Equatable {
    let gameServerGroupName: Swift.String?
    let resumeActions: [GameLiftClientTypes.GameServerGroupAction]?
}

extension ResumeGameServerGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameServerGroupName = "GameServerGroupName"
        case resumeActions = "ResumeActions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gameServerGroupName)
        gameServerGroupName = gameServerGroupNameDecoded
        let resumeActionsContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.GameServerGroupAction?].self, forKey: .resumeActions)
        var resumeActionsDecoded0:[GameLiftClientTypes.GameServerGroupAction]? = nil
        if let resumeActionsContainer = resumeActionsContainer {
            resumeActionsDecoded0 = [GameLiftClientTypes.GameServerGroupAction]()
            for string0 in resumeActionsContainer {
                if let string0 = string0 {
                    resumeActionsDecoded0?.append(string0)
                }
            }
        }
        resumeActions = resumeActionsDecoded0
    }
}
