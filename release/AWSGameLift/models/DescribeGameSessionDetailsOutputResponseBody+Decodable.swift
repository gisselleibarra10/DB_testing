// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeGameSessionDetailsOutputResponseBody: Swift.Equatable {
    let gameSessionDetails: [GameLiftClientTypes.GameSessionDetail]?
    let nextToken: Swift.String?
}

extension DescribeGameSessionDetailsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameSessionDetails = "GameSessionDetails"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionDetailsContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.GameSessionDetail?].self, forKey: .gameSessionDetails)
        var gameSessionDetailsDecoded0:[GameLiftClientTypes.GameSessionDetail]? = nil
        if let gameSessionDetailsContainer = gameSessionDetailsContainer {
            gameSessionDetailsDecoded0 = [GameLiftClientTypes.GameSessionDetail]()
            for structure0 in gameSessionDetailsContainer {
                if let structure0 = structure0 {
                    gameSessionDetailsDecoded0?.append(structure0)
                }
            }
        }
        gameSessionDetails = gameSessionDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
