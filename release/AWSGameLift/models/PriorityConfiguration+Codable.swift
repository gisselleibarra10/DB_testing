// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes.PriorityConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case locationOrder = "LocationOrder"
        case priorityOrder = "PriorityOrder"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let locationOrder = locationOrder {
            var locationOrderContainer = encodeContainer.nestedUnkeyedContainer(forKey: .locationOrder)
            for locationlist0 in locationOrder {
                try locationOrderContainer.encode(locationlist0)
            }
        }
        if let priorityOrder = priorityOrder {
            var priorityOrderContainer = encodeContainer.nestedUnkeyedContainer(forKey: .priorityOrder)
            for prioritytypelist0 in priorityOrder {
                try priorityOrderContainer.encode(prioritytypelist0.rawValue)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let priorityOrderContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.PriorityType?].self, forKey: .priorityOrder)
        var priorityOrderDecoded0:[GameLiftClientTypes.PriorityType]? = nil
        if let priorityOrderContainer = priorityOrderContainer {
            priorityOrderDecoded0 = [GameLiftClientTypes.PriorityType]()
            for string0 in priorityOrderContainer {
                if let string0 = string0 {
                    priorityOrderDecoded0?.append(string0)
                }
            }
        }
        priorityOrder = priorityOrderDecoded0
        let locationOrderContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .locationOrder)
        var locationOrderDecoded0:[Swift.String]? = nil
        if let locationOrderContainer = locationOrderContainer {
            locationOrderDecoded0 = [Swift.String]()
            for string0 in locationOrderContainer {
                if let string0 = string0 {
                    locationOrderDecoded0?.append(string0)
                }
            }
        }
        locationOrder = locationOrderDecoded0
    }
}
