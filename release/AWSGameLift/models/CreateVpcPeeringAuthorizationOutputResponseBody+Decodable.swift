// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateVpcPeeringAuthorizationOutputResponseBody: Swift.Equatable {
    let vpcPeeringAuthorization: GameLiftClientTypes.VpcPeeringAuthorization?
}

extension CreateVpcPeeringAuthorizationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case vpcPeeringAuthorization = "VpcPeeringAuthorization"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vpcPeeringAuthorizationDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.VpcPeeringAuthorization.self, forKey: .vpcPeeringAuthorization)
        vpcPeeringAuthorization = vpcPeeringAuthorizationDecoded
    }
}
