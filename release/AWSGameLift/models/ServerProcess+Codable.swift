// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes.ServerProcess: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case concurrentExecutions = "ConcurrentExecutions"
        case launchPath = "LaunchPath"
        case parameters = "Parameters"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let concurrentExecutions = self.concurrentExecutions {
            try encodeContainer.encode(concurrentExecutions, forKey: .concurrentExecutions)
        }
        if let launchPath = self.launchPath {
            try encodeContainer.encode(launchPath, forKey: .launchPath)
        }
        if let parameters = self.parameters {
            try encodeContainer.encode(parameters, forKey: .parameters)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let launchPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .launchPath)
        launchPath = launchPathDecoded
        let parametersDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parameters)
        parameters = parametersDecoded
        let concurrentExecutionsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .concurrentExecutions)
        concurrentExecutions = concurrentExecutionsDecoded
    }
}
