// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeGameSessionsOutputResponseBody: Swift.Equatable {
    let gameSessions: [GameLiftClientTypes.GameSession]?
    let nextToken: Swift.String?
}

extension DescribeGameSessionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameSessions = "GameSessions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionsContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.GameSession?].self, forKey: .gameSessions)
        var gameSessionsDecoded0:[GameLiftClientTypes.GameSession]? = nil
        if let gameSessionsContainer = gameSessionsContainer {
            gameSessionsDecoded0 = [GameLiftClientTypes.GameSession]()
            for structure0 in gameSessionsContainer {
                if let structure0 = structure0 {
                    gameSessionsDecoded0?.append(structure0)
                }
            }
        }
        gameSessions = gameSessionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
