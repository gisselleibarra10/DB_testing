// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAliasesInputBody: Swift.Equatable {
    let routingStrategyType: GameLiftClientTypes.RoutingStrategyType?
    let name: Swift.String?
    let limit: Swift.Int?
    let nextToken: Swift.String?
}

extension ListAliasesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case limit = "Limit"
        case name = "Name"
        case nextToken = "NextToken"
        case routingStrategyType = "RoutingStrategyType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let routingStrategyTypeDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.RoutingStrategyType.self, forKey: .routingStrategyType)
        routingStrategyType = routingStrategyTypeDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
