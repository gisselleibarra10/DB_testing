// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes.RuntimeConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameSessionActivationTimeoutSeconds = "GameSessionActivationTimeoutSeconds"
        case maxConcurrentGameSessionActivations = "MaxConcurrentGameSessionActivations"
        case serverProcesses = "ServerProcesses"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let gameSessionActivationTimeoutSeconds = self.gameSessionActivationTimeoutSeconds {
            try encodeContainer.encode(gameSessionActivationTimeoutSeconds, forKey: .gameSessionActivationTimeoutSeconds)
        }
        if let maxConcurrentGameSessionActivations = self.maxConcurrentGameSessionActivations {
            try encodeContainer.encode(maxConcurrentGameSessionActivations, forKey: .maxConcurrentGameSessionActivations)
        }
        if let serverProcesses = serverProcesses {
            var serverProcessesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .serverProcesses)
            for serverprocesslist0 in serverProcesses {
                try serverProcessesContainer.encode(serverprocesslist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serverProcessesContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.ServerProcess?].self, forKey: .serverProcesses)
        var serverProcessesDecoded0:[GameLiftClientTypes.ServerProcess]? = nil
        if let serverProcessesContainer = serverProcessesContainer {
            serverProcessesDecoded0 = [GameLiftClientTypes.ServerProcess]()
            for structure0 in serverProcessesContainer {
                if let structure0 = structure0 {
                    serverProcessesDecoded0?.append(structure0)
                }
            }
        }
        serverProcesses = serverProcessesDecoded0
        let maxConcurrentGameSessionActivationsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxConcurrentGameSessionActivations)
        maxConcurrentGameSessionActivations = maxConcurrentGameSessionActivationsDecoded
        let gameSessionActivationTimeoutSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .gameSessionActivationTimeoutSeconds)
        gameSessionActivationTimeoutSeconds = gameSessionActivationTimeoutSecondsDecoded
    }
}
