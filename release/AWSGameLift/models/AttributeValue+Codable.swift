// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes.AttributeValue: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case n = "N"
        case s = "S"
        case sDM = "SDM"
        case sL = "SL"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let n = self.n {
            try encodeContainer.encode(n, forKey: .n)
        }
        if let s = self.s {
            try encodeContainer.encode(s, forKey: .s)
        }
        if let sDM = sDM {
            var sDMContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .sDM)
            for (dictKey0, stringdoublemap0) in sDM {
                try sDMContainer.encode(stringdoublemap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let sL = sL {
            var sLContainer = encodeContainer.nestedUnkeyedContainer(forKey: .sL)
            for stringlist0 in sL {
                try sLContainer.encode(stringlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s)
        s = sDecoded
        let nDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .n)
        n = nDecoded
        let sLContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .sL)
        var sLDecoded0:[Swift.String]? = nil
        if let sLContainer = sLContainer {
            sLDecoded0 = [Swift.String]()
            for string0 in sLContainer {
                if let string0 = string0 {
                    sLDecoded0?.append(string0)
                }
            }
        }
        sL = sLDecoded0
        let sDMContainer = try containerValues.decodeIfPresent([Swift.String: Swift.Double?].self, forKey: .sDM)
        var sDMDecoded0: [Swift.String:Swift.Double]? = nil
        if let sDMContainer = sDMContainer {
            sDMDecoded0 = [Swift.String:Swift.Double]()
            for (key0, doubleobject0) in sDMContainer {
                if let doubleobject0 = doubleobject0 {
                    sDMDecoded0?[key0] = doubleobject0
                }
            }
        }
        sDM = sDMDecoded0
    }
}
