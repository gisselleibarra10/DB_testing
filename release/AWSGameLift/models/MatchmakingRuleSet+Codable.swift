// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes.MatchmakingRuleSet: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case ruleSetArn = "RuleSetArn"
        case ruleSetBody = "RuleSetBody"
        case ruleSetName = "RuleSetName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let ruleSetArn = self.ruleSetArn {
            try encodeContainer.encode(ruleSetArn, forKey: .ruleSetArn)
        }
        if let ruleSetBody = self.ruleSetBody {
            try encodeContainer.encode(ruleSetBody, forKey: .ruleSetBody)
        }
        if let ruleSetName = self.ruleSetName {
            try encodeContainer.encode(ruleSetName, forKey: .ruleSetName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleSetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ruleSetName)
        ruleSetName = ruleSetNameDecoded
        let ruleSetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ruleSetArn)
        ruleSetArn = ruleSetArnDecoded
        let ruleSetBodyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ruleSetBody)
        ruleSetBody = ruleSetBodyDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
    }
}
