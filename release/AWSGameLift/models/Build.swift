// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes {
    /// Properties describing a custom game build. Related actions [CreateBuild] | [ListBuilds] | [DescribeBuild] | [UpdateBuild] | [DeleteBuild] | [All APIs by task](https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets)
    public struct Build: Swift.Equatable {
        /// The Amazon Resource Name ([ARN](https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html)) that is assigned to a GameLift build resource and uniquely identifies it. ARNs are unique across all Regions. Format is arn:aws:gamelift:::build/build-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912. In a GameLift build ARN, the resource ID matches the BuildId value.
        public var buildArn: Swift.String?
        /// A unique identifier for the build.
        public var buildId: Swift.String?
        /// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
        public var creationTime: ClientRuntime.Date?
        /// A descriptive label that is associated with a build. Build names do not need to be unique. It can be set using [CreateBuild] or [UpdateBuild].
        public var name: Swift.String?
        /// Operating system that the game server binaries are built to run on. This value determines the type of fleet resources that you can use for this build.
        public var operatingSystem: GameLiftClientTypes.OperatingSystem?
        /// File size of the uploaded game build, expressed in bytes. When the build status is INITIALIZED or when using a custom Amazon S3 storage location, this value is 0.
        public var sizeOnDisk: Swift.Int?
        /// Current status of the build. Possible build statuses include the following:
        ///
        /// * INITIALIZED -- A new build has been defined, but no files have been uploaded. You cannot create fleets for builds that are in this status. When a build is successfully created, the build status is set to this value.
        ///
        /// * READY -- The game build has been successfully uploaded. You can now create new fleets for this build.
        ///
        /// * FAILED -- The game build upload failed. You cannot create new fleets for this build.
        public var status: GameLiftClientTypes.BuildStatus?
        /// Version information that is associated with a build or script. Version strings do not need to be unique. This value can be set using [CreateBuild] or [UpdateBuild].
        public var version: Swift.String?

        public init (
            buildArn: Swift.String? = nil,
            buildId: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            operatingSystem: GameLiftClientTypes.OperatingSystem? = nil,
            sizeOnDisk: Swift.Int? = nil,
            status: GameLiftClientTypes.BuildStatus? = nil,
            version: Swift.String? = nil
        )
        {
            self.buildArn = buildArn
            self.buildId = buildId
            self.creationTime = creationTime
            self.name = name
            self.operatingSystem = operatingSystem
            self.sizeOnDisk = sizeOnDisk
            self.status = status
            self.version = version
        }
    }

}
