// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GameLiftClientTypes {
    /// Resource capacity settings. Fleet capacity is measured in Amazon EC2 instances. Pending and terminating counts are non-zero when the fleet capacity is adjusting to a scaling event or if access to resources is temporarily affected. EC2 instance counts are part of [FleetCapacity].
    public struct EC2InstanceCounts: Swift.Equatable {
        /// Actual number of instances that are ready to host game sessions.
        public var aCTIVE: Swift.Int?
        /// Ideal number of active instances. GameLift will always try to maintain the desired number of instances. Capacity is scaled up or down by changing the desired instances.
        public var dESIRED: Swift.Int?
        /// Number of active instances that are not currently hosting a game session.
        public var iDLE: Swift.Int?
        /// The maximum instance count value allowed.
        public var mAXIMUM: Swift.Int?
        /// The minimum instance count value allowed.
        public var mINIMUM: Swift.Int?
        /// Number of instances that are starting but not yet active.
        public var pENDING: Swift.Int?
        /// Number of instances that are no longer active but haven't yet been terminated.
        public var tERMINATING: Swift.Int?

        public init (
            aCTIVE: Swift.Int? = nil,
            dESIRED: Swift.Int? = nil,
            iDLE: Swift.Int? = nil,
            mAXIMUM: Swift.Int? = nil,
            mINIMUM: Swift.Int? = nil,
            pENDING: Swift.Int? = nil,
            tERMINATING: Swift.Int? = nil
        )
        {
            self.aCTIVE = aCTIVE
            self.dESIRED = dESIRED
            self.iDLE = iDLE
            self.mAXIMUM = mAXIMUM
            self.mINIMUM = mINIMUM
            self.pENDING = pENDING
            self.tERMINATING = tERMINATING
        }
    }

}
