// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGameServersOutputResponseBody: Swift.Equatable {
    let gameServers: [GameLiftClientTypes.GameServer]?
    let nextToken: Swift.String?
}

extension ListGameServersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameServers = "GameServers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServersContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.GameServer?].self, forKey: .gameServers)
        var gameServersDecoded0:[GameLiftClientTypes.GameServer]? = nil
        if let gameServersContainer = gameServersContainer {
            gameServersDecoded0 = [GameLiftClientTypes.GameServer]()
            for structure0 in gameServersContainer {
                if let structure0 = structure0 {
                    gameServersDecoded0?.append(structure0)
                }
            }
        }
        gameServers = gameServersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
