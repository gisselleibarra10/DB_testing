// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SearchGameSessionsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aliasId = "AliasId"
        case filterExpression = "FilterExpression"
        case fleetId = "FleetId"
        case limit = "Limit"
        case location = "Location"
        case nextToken = "NextToken"
        case sortExpression = "SortExpression"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aliasId = self.aliasId {
            try encodeContainer.encode(aliasId, forKey: .aliasId)
        }
        if let filterExpression = self.filterExpression {
            try encodeContainer.encode(filterExpression, forKey: .filterExpression)
        }
        if let fleetId = self.fleetId {
            try encodeContainer.encode(fleetId, forKey: .fleetId)
        }
        if let limit = self.limit {
            try encodeContainer.encode(limit, forKey: .limit)
        }
        if let location = self.location {
            try encodeContainer.encode(location, forKey: .location)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let sortExpression = self.sortExpression {
            try encodeContainer.encode(sortExpression, forKey: .sortExpression)
        }
    }
}
