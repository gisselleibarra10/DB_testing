// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartMatchBackfillInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationName = "ConfigurationName"
        case gameSessionArn = "GameSessionArn"
        case players = "Players"
        case ticketId = "TicketId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configurationName = self.configurationName {
            try encodeContainer.encode(configurationName, forKey: .configurationName)
        }
        if let gameSessionArn = self.gameSessionArn {
            try encodeContainer.encode(gameSessionArn, forKey: .gameSessionArn)
        }
        if let players = players {
            var playersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .players)
            for playerlist0 in players {
                try playersContainer.encode(playerlist0)
            }
        }
        if let ticketId = self.ticketId {
            try encodeContainer.encode(ticketId, forKey: .ticketId)
        }
    }
}
