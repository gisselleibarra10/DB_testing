// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input for a request operation.
public struct UpdateGameSessionInput: Swift.Equatable {
    /// A unique identifier for the game session to update.
    /// This member is required.
    public var gameSessionId: Swift.String?
    /// The maximum number of players that can be connected simultaneously to the game session.
    public var maximumPlayerSessionCount: Swift.Int?
    /// A descriptive label that is associated with a game session. Session names do not need to be unique.
    public var name: Swift.String?
    /// A policy that determines whether the game session is accepting new players.
    public var playerSessionCreationPolicy: GameLiftClientTypes.PlayerSessionCreationPolicy?
    /// Game session protection policy to apply to this game session only.
    ///
    /// * NoProtection -- The game session can be terminated during a scale-down event.
    ///
    /// * FullProtection -- If the game session is in an ACTIVE status, it cannot be terminated during a scale-down event.
    public var protectionPolicy: GameLiftClientTypes.ProtectionPolicy?

    public init (
        gameSessionId: Swift.String? = nil,
        maximumPlayerSessionCount: Swift.Int? = nil,
        name: Swift.String? = nil,
        playerSessionCreationPolicy: GameLiftClientTypes.PlayerSessionCreationPolicy? = nil,
        protectionPolicy: GameLiftClientTypes.ProtectionPolicy? = nil
    )
    {
        self.gameSessionId = gameSessionId
        self.maximumPlayerSessionCount = maximumPlayerSessionCount
        self.name = name
        self.playerSessionCreationPolicy = playerSessionCreationPolicy
        self.protectionPolicy = protectionPolicy
    }
}
