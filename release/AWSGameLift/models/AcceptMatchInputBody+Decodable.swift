// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AcceptMatchInputBody: Swift.Equatable {
    let ticketId: Swift.String?
    let playerIds: [Swift.String]?
    let acceptanceType: GameLiftClientTypes.AcceptanceType?
}

extension AcceptMatchInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceptanceType = "AcceptanceType"
        case playerIds = "PlayerIds"
        case ticketId = "TicketId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ticketIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ticketId)
        ticketId = ticketIdDecoded
        let playerIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .playerIds)
        var playerIdsDecoded0:[Swift.String]? = nil
        if let playerIdsContainer = playerIdsContainer {
            playerIdsDecoded0 = [Swift.String]()
            for string0 in playerIdsContainer {
                if let string0 = string0 {
                    playerIdsDecoded0?.append(string0)
                }
            }
        }
        playerIds = playerIdsDecoded0
        let acceptanceTypeDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.AcceptanceType.self, forKey: .acceptanceType)
        acceptanceType = acceptanceTypeDecoded
    }
}
