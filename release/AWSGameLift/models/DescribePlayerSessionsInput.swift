// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input for a request operation.
public struct DescribePlayerSessionsInput: Swift.Equatable {
    /// A unique identifier for the game session to retrieve player sessions for.
    public var gameSessionId: Swift.String?
    /// The maximum number of results to return. Use this parameter with NextToken to get results as a set of sequential pages. If a player session ID is specified, this parameter is ignored.
    public var limit: Swift.Int?
    /// A token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value. If a player session ID is specified, this parameter is ignored.
    public var nextToken: Swift.String?
    /// A unique identifier for a player to retrieve player sessions for.
    public var playerId: Swift.String?
    /// A unique identifier for a player session to retrieve.
    public var playerSessionId: Swift.String?
    /// Player session status to filter results on. Possible player session statuses include the following:
    ///
    /// * RESERVED -- The player session request has been received, but the player has not yet connected to the server process and/or been validated.
    ///
    /// * ACTIVE -- The player has been validated by the server process and is currently connected.
    ///
    /// * COMPLETED -- The player connection has been dropped.
    ///
    /// * TIMEDOUT -- A player session request was received, but the player did not connect and/or was not validated within the timeout limit (60 seconds).
    public var playerSessionStatusFilter: Swift.String?

    public init (
        gameSessionId: Swift.String? = nil,
        limit: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        playerId: Swift.String? = nil,
        playerSessionId: Swift.String? = nil,
        playerSessionStatusFilter: Swift.String? = nil
    )
    {
        self.gameSessionId = gameSessionId
        self.limit = limit
        self.nextToken = nextToken
        self.playerId = playerId
        self.playerSessionId = playerSessionId
        self.playerSessionStatusFilter = playerSessionStatusFilter
    }
}
