// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateFleetPortSettingsInputBody: Swift.Equatable {
    let fleetId: Swift.String?
    let inboundPermissionAuthorizations: [GameLiftClientTypes.IpPermission]?
    let inboundPermissionRevocations: [GameLiftClientTypes.IpPermission]?
}

extension UpdateFleetPortSettingsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fleetId = "FleetId"
        case inboundPermissionAuthorizations = "InboundPermissionAuthorizations"
        case inboundPermissionRevocations = "InboundPermissionRevocations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fleetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fleetId)
        fleetId = fleetIdDecoded
        let inboundPermissionAuthorizationsContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.IpPermission?].self, forKey: .inboundPermissionAuthorizations)
        var inboundPermissionAuthorizationsDecoded0:[GameLiftClientTypes.IpPermission]? = nil
        if let inboundPermissionAuthorizationsContainer = inboundPermissionAuthorizationsContainer {
            inboundPermissionAuthorizationsDecoded0 = [GameLiftClientTypes.IpPermission]()
            for structure0 in inboundPermissionAuthorizationsContainer {
                if let structure0 = structure0 {
                    inboundPermissionAuthorizationsDecoded0?.append(structure0)
                }
            }
        }
        inboundPermissionAuthorizations = inboundPermissionAuthorizationsDecoded0
        let inboundPermissionRevocationsContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.IpPermission?].self, forKey: .inboundPermissionRevocations)
        var inboundPermissionRevocationsDecoded0:[GameLiftClientTypes.IpPermission]? = nil
        if let inboundPermissionRevocationsContainer = inboundPermissionRevocationsContainer {
            inboundPermissionRevocationsDecoded0 = [GameLiftClientTypes.IpPermission]()
            for structure0 in inboundPermissionRevocationsContainer {
                if let structure0 = structure0 {
                    inboundPermissionRevocationsDecoded0?.append(structure0)
                }
            }
        }
        inboundPermissionRevocations = inboundPermissionRevocationsDecoded0
    }
}
