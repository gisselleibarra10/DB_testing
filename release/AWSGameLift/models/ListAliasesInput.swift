// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input for a request operation.
public struct ListAliasesInput: Swift.Equatable {
    /// The maximum number of results to return. Use this parameter with NextToken to get results as a set of sequential pages.
    public var limit: Swift.Int?
    /// A descriptive label that is associated with an alias. Alias names do not need to be unique.
    public var name: Swift.String?
    /// A token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value.
    public var nextToken: Swift.String?
    /// The routing type to filter results on. Use this parameter to retrieve only aliases with a certain routing type. To retrieve all aliases, leave this parameter empty. Possible routing types include the following:
    ///
    /// * SIMPLE -- The alias resolves to one specific fleet. Use this type when routing to active fleets.
    ///
    /// * TERMINAL -- The alias does not resolve to a fleet but instead can be used to display a message to the user. A terminal alias throws a TerminalRoutingStrategyException with the [RoutingStrategy] message embedded.
    public var routingStrategyType: GameLiftClientTypes.RoutingStrategyType?

    public init (
        limit: Swift.Int? = nil,
        name: Swift.String? = nil,
        nextToken: Swift.String? = nil,
        routingStrategyType: GameLiftClientTypes.RoutingStrategyType? = nil
    )
    {
        self.limit = limit
        self.name = name
        self.nextToken = nextToken
        self.routingStrategyType = routingStrategyType
    }
}
