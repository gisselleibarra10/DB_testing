// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input for a request operation.
public struct DescribeGameSessionsInput: Swift.Equatable {
    /// A unique identifier for the alias associated with the fleet to retrieve game sessions for. You can use either the alias ID or ARN value.
    public var aliasId: Swift.String?
    /// A unique identifier for the fleet to retrieve game sessions for. You can use either the fleet ID or ARN value.
    public var fleetId: Swift.String?
    /// A unique identifier for the game session to retrieve.
    public var gameSessionId: Swift.String?
    /// The maximum number of results to return. Use this parameter with NextToken to get results as a set of sequential pages.
    public var limit: Swift.Int?
    /// A fleet location to get game session details for. You can specify a fleet's home Region or a remote location. Use the Amazon Web Services Region code format, such as us-west-2.
    public var location: Swift.String?
    /// A token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value.
    public var nextToken: Swift.String?
    /// Game session status to filter results on. You can filter on the following states: ACTIVE, TERMINATED, ACTIVATING, and TERMINATING. The last two are transitory and used for only very brief periods of time.
    public var statusFilter: Swift.String?

    public init (
        aliasId: Swift.String? = nil,
        fleetId: Swift.String? = nil,
        gameSessionId: Swift.String? = nil,
        limit: Swift.Int? = nil,
        location: Swift.String? = nil,
        nextToken: Swift.String? = nil,
        statusFilter: Swift.String? = nil
    )
    {
        self.aliasId = aliasId
        self.fleetId = fleetId
        self.gameSessionId = gameSessionId
        self.limit = limit
        self.location = location
        self.nextToken = nextToken
        self.statusFilter = statusFilter
    }
}
