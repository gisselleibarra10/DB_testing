// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes.FleetUtilization: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activeGameSessionCount = "ActiveGameSessionCount"
        case activeServerProcessCount = "ActiveServerProcessCount"
        case currentPlayerSessionCount = "CurrentPlayerSessionCount"
        case fleetArn = "FleetArn"
        case fleetId = "FleetId"
        case location = "Location"
        case maximumPlayerSessionCount = "MaximumPlayerSessionCount"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let activeGameSessionCount = self.activeGameSessionCount {
            try encodeContainer.encode(activeGameSessionCount, forKey: .activeGameSessionCount)
        }
        if let activeServerProcessCount = self.activeServerProcessCount {
            try encodeContainer.encode(activeServerProcessCount, forKey: .activeServerProcessCount)
        }
        if let currentPlayerSessionCount = self.currentPlayerSessionCount {
            try encodeContainer.encode(currentPlayerSessionCount, forKey: .currentPlayerSessionCount)
        }
        if let fleetArn = self.fleetArn {
            try encodeContainer.encode(fleetArn, forKey: .fleetArn)
        }
        if let fleetId = self.fleetId {
            try encodeContainer.encode(fleetId, forKey: .fleetId)
        }
        if let location = self.location {
            try encodeContainer.encode(location, forKey: .location)
        }
        if let maximumPlayerSessionCount = self.maximumPlayerSessionCount {
            try encodeContainer.encode(maximumPlayerSessionCount, forKey: .maximumPlayerSessionCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fleetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fleetId)
        fleetId = fleetIdDecoded
        let fleetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fleetArn)
        fleetArn = fleetArnDecoded
        let activeServerProcessCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .activeServerProcessCount)
        activeServerProcessCount = activeServerProcessCountDecoded
        let activeGameSessionCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .activeGameSessionCount)
        activeGameSessionCount = activeGameSessionCountDecoded
        let currentPlayerSessionCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .currentPlayerSessionCount)
        currentPlayerSessionCount = currentPlayerSessionCountDecoded
        let maximumPlayerSessionCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maximumPlayerSessionCount)
        maximumPlayerSessionCount = maximumPlayerSessionCountDecoded
        let locationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .location)
        location = locationDecoded
    }
}
