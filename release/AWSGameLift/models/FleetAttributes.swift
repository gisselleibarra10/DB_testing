// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes {
    /// Describes a GameLift fleet of game hosting resources. Related actions [CreateFleet] | [DescribeFleetAttributes]
    public struct FleetAttributes: Swift.Equatable {
        /// The Amazon Resource Name ([ARN](https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html)) associated with the GameLift build resource that is deployed on instances in this fleet. In a GameLift build ARN, the resource ID matches the BuildId value.
        public var buildArn: Swift.String?
        /// A unique identifier for the build resource that is deployed on instances in this fleet.
        public var buildId: Swift.String?
        /// Indicates whether a TLS/SSL certificate was generated for the fleet.
        public var certificateConfiguration: GameLiftClientTypes.CertificateConfiguration?
        /// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
        public var creationTime: ClientRuntime.Date?
        /// A human-readable description of the fleet.
        public var description: Swift.String?
        /// The Amazon Resource Name ([ARN](https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html)) that is assigned to a GameLift fleet resource and uniquely identifies it. ARNs are unique across all Regions. Format is arn:aws:gamelift:::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912. In a GameLift fleet ARN, the resource ID matches the FleetId value.
        public var fleetArn: Swift.String?
        /// A unique identifier for the fleet.
        public var fleetId: Swift.String?
        /// The kind of instances, On-Demand or Spot, that this fleet uses.
        public var fleetType: GameLiftClientTypes.FleetType?
        /// A unique identifier for an IAM role that manages access to your Amazon Web Services services. With an instance role ARN set, any application that runs on an instance in this fleet can assume the role, including install scripts, server processes, and daemons (background processes). Create a role or look up a role's ARN by using the [IAM dashboard](https://console.aws.amazon.com/iam/) in the Amazon Web Services Management Console. Learn more about using on-box credentials for your game servers at [ Access external resources from a game server](https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-resources.html).
        public var instanceRoleArn: Swift.String?
        /// The Amazon EC2 instance type that determines the computing resources of each instance in the fleet. Instance type defines the CPU, memory, storage, and networking capacity. See [Amazon Elastic Compute Cloud Instance Types](http://aws.amazon.com/ec2/instance-types/) for detailed descriptions.
        public var instanceType: GameLiftClientTypes.EC2InstanceType?
        /// This parameter is no longer used. Game session log paths are now defined using the GameLift server API ProcessReady()logParameters. See more information in the [Server API Reference](https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api-ref.html#gamelift-sdk-server-api-ref-dataypes-process).
        public var logPaths: [Swift.String]?
        /// Name of a metric group that metrics for this fleet are added to. In Amazon CloudWatch, you can view aggregated metrics for fleets that are in a metric group. A fleet can be included in only one metric group at a time.
        public var metricGroups: [Swift.String]?
        /// A descriptive label that is associated with a fleet. Fleet names do not need to be unique.
        public var name: Swift.String?
        /// The type of game session protection to set on all new instances that are started in the fleet.
        ///
        /// * NoProtection -- The game session can be terminated during a scale-down event.
        ///
        /// * FullProtection -- If the game session is in an ACTIVE status, it cannot be terminated during a scale-down event.
        public var newGameSessionProtectionPolicy: GameLiftClientTypes.ProtectionPolicy?
        /// The operating system of the fleet's computing resources. A fleet's operating system is determined by the OS of the build or script that is deployed on this fleet.
        public var operatingSystem: GameLiftClientTypes.OperatingSystem?
        /// The fleet policy that limits the number of game sessions an individual player can create over a span of time.
        public var resourceCreationLimitPolicy: GameLiftClientTypes.ResourceCreationLimitPolicy?
        /// The Amazon Resource Name ([ARN](https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html)) associated with the GameLift script resource that is deployed on instances in this fleet. In a GameLift script ARN, the resource ID matches the ScriptId value.
        public var scriptArn: Swift.String?
        /// A unique identifier for the Realtime script resource that is deployed on instances in this fleet.
        public var scriptId: Swift.String?
        /// This parameter is no longer used. Server launch parameters are now defined using the fleet's [RuntimeConfiguration] parameter. Requests that use this parameter instead continue to be valid.
        public var serverLaunchParameters: Swift.String?
        /// This parameter is no longer used. Server launch paths are now defined using the fleet's [RuntimeConfiguration] parameter. Requests that use this parameter instead continue to be valid.
        public var serverLaunchPath: Swift.String?
        /// Current status of the fleet. Possible fleet statuses include the following:
        ///
        /// * NEW -- A new fleet has been defined and desired instances is set to 1.
        ///
        /// * DOWNLOADING/VALIDATING/BUILDING/ACTIVATING -- GameLift is setting up the new fleet, creating new instances with the game build or Realtime script and starting server processes.
        ///
        /// * ACTIVE -- Hosts can now accept game sessions.
        ///
        /// * ERROR -- An error occurred when downloading, validating, building, or activating the fleet.
        ///
        /// * DELETING -- Hosts are responding to a delete fleet request.
        ///
        /// * TERMINATED -- The fleet no longer exists.
        public var status: GameLiftClientTypes.FleetStatus?
        /// A list of fleet activity that has been suspended using [StopFleetActions]. This includes fleet auto-scaling.
        public var stoppedActions: [GameLiftClientTypes.FleetAction]?
        /// A time stamp indicating when this data object was terminated. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
        public var terminationTime: ClientRuntime.Date?

        public init (
            buildArn: Swift.String? = nil,
            buildId: Swift.String? = nil,
            certificateConfiguration: GameLiftClientTypes.CertificateConfiguration? = nil,
            creationTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            fleetArn: Swift.String? = nil,
            fleetId: Swift.String? = nil,
            fleetType: GameLiftClientTypes.FleetType? = nil,
            instanceRoleArn: Swift.String? = nil,
            instanceType: GameLiftClientTypes.EC2InstanceType? = nil,
            logPaths: [Swift.String]? = nil,
            metricGroups: [Swift.String]? = nil,
            name: Swift.String? = nil,
            newGameSessionProtectionPolicy: GameLiftClientTypes.ProtectionPolicy? = nil,
            operatingSystem: GameLiftClientTypes.OperatingSystem? = nil,
            resourceCreationLimitPolicy: GameLiftClientTypes.ResourceCreationLimitPolicy? = nil,
            scriptArn: Swift.String? = nil,
            scriptId: Swift.String? = nil,
            serverLaunchParameters: Swift.String? = nil,
            serverLaunchPath: Swift.String? = nil,
            status: GameLiftClientTypes.FleetStatus? = nil,
            stoppedActions: [GameLiftClientTypes.FleetAction]? = nil,
            terminationTime: ClientRuntime.Date? = nil
        )
        {
            self.buildArn = buildArn
            self.buildId = buildId
            self.certificateConfiguration = certificateConfiguration
            self.creationTime = creationTime
            self.description = description
            self.fleetArn = fleetArn
            self.fleetId = fleetId
            self.fleetType = fleetType
            self.instanceRoleArn = instanceRoleArn
            self.instanceType = instanceType
            self.logPaths = logPaths
            self.metricGroups = metricGroups
            self.name = name
            self.newGameSessionProtectionPolicy = newGameSessionProtectionPolicy
            self.operatingSystem = operatingSystem
            self.resourceCreationLimitPolicy = resourceCreationLimitPolicy
            self.scriptArn = scriptArn
            self.scriptId = scriptId
            self.serverLaunchParameters = serverLaunchParameters
            self.serverLaunchPath = serverLaunchPath
            self.status = status
            self.stoppedActions = stoppedActions
            self.terminationTime = terminationTime
        }
    }

}
