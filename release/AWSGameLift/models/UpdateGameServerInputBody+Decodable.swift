// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGameServerInputBody: Swift.Equatable {
    let gameServerGroupName: Swift.String?
    let gameServerId: Swift.String?
    let gameServerData: Swift.String?
    let utilizationStatus: GameLiftClientTypes.GameServerUtilizationStatus?
    let healthCheck: GameLiftClientTypes.GameServerHealthCheck?
}

extension UpdateGameServerInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameServerData = "GameServerData"
        case gameServerGroupName = "GameServerGroupName"
        case gameServerId = "GameServerId"
        case healthCheck = "HealthCheck"
        case utilizationStatus = "UtilizationStatus"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gameServerGroupName)
        gameServerGroupName = gameServerGroupNameDecoded
        let gameServerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gameServerId)
        gameServerId = gameServerIdDecoded
        let gameServerDataDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gameServerData)
        gameServerData = gameServerDataDecoded
        let utilizationStatusDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.GameServerUtilizationStatus.self, forKey: .utilizationStatus)
        utilizationStatus = utilizationStatusDecoded
        let healthCheckDecoded = try containerValues.decodeIfPresent(GameLiftClientTypes.GameServerHealthCheck.self, forKey: .healthCheck)
        healthCheck = healthCheckDecoded
    }
}
