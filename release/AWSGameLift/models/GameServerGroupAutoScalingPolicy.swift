// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GameLiftClientTypes {
    /// This data type is used with the GameLift FleetIQ and game server groups. Configuration settings for intelligent automatic scaling that uses target tracking. These settings are used to add an Auto Scaling policy when creating the corresponding Auto Scaling group with [CreateGameServerGroup]. After the Auto Scaling group is created, all updates to Auto Scaling policies, including changing this policy and adding or removing other policies, is done directly on the Auto Scaling group.
    public struct GameServerGroupAutoScalingPolicy: Swift.Equatable {
        /// Length of time, in seconds, it takes for a new instance to start new game server processes and register with GameLift FleetIQ. Specifying a warm-up time can be useful, particularly with game servers that take a long time to start up, because it avoids prematurely starting new instances.
        public var estimatedInstanceWarmup: Swift.Int?
        /// Settings for a target-based scaling policy applied to Auto Scaling group. These settings are used to create a target-based policy that tracks the GameLift FleetIQ metric "PercentUtilizedGameServers" and specifies a target value for the metric. As player usage changes, the policy triggers to adjust the game server group capacity so that the metric returns to the target value.
        /// This member is required.
        public var targetTrackingConfiguration: GameLiftClientTypes.TargetTrackingConfiguration?

        public init (
            estimatedInstanceWarmup: Swift.Int? = nil,
            targetTrackingConfiguration: GameLiftClientTypes.TargetTrackingConfiguration? = nil
        )
        {
            self.estimatedInstanceWarmup = estimatedInstanceWarmup
            self.targetTrackingConfiguration = targetTrackingConfiguration
        }
    }

}
