// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFleetsInputBody: Swift.Equatable {
    let buildId: Swift.String?
    let scriptId: Swift.String?
    let limit: Swift.Int?
    let nextToken: Swift.String?
}

extension ListFleetsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case buildId = "BuildId"
        case limit = "Limit"
        case nextToken = "NextToken"
        case scriptId = "ScriptId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let buildIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .buildId)
        buildId = buildIdDecoded
        let scriptIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .scriptId)
        scriptId = scriptIdDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
