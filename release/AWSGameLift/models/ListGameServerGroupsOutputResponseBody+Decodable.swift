// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGameServerGroupsOutputResponseBody: Swift.Equatable {
    let gameServerGroups: [GameLiftClientTypes.GameServerGroup]?
    let nextToken: Swift.String?
}

extension ListGameServerGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gameServerGroups = "GameServerGroups"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupsContainer = try containerValues.decodeIfPresent([GameLiftClientTypes.GameServerGroup?].self, forKey: .gameServerGroups)
        var gameServerGroupsDecoded0:[GameLiftClientTypes.GameServerGroup]? = nil
        if let gameServerGroupsContainer = gameServerGroupsContainer {
            gameServerGroupsDecoded0 = [GameLiftClientTypes.GameServerGroup]()
            for structure0 in gameServerGroupsContainer {
                if let structure0 = structure0 {
                    gameServerGroupsDecoded0?.append(structure0)
                }
            }
        }
        gameServerGroups = gameServerGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
