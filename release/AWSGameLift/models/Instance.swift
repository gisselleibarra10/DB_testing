// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameLiftClientTypes {
    /// Represents an EC2 instance of virtual computing resources that hosts one or more game servers. In GameLift, a fleet can contain zero or more instances. Related actions [DescribeInstances]
    public struct Instance: Swift.Equatable {
        /// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
        public var creationTime: ClientRuntime.Date?
        /// The DNS identifier assigned to the instance that is running the game session. Values have the following format:
        ///
        /// * TLS-enabled fleets: ..amazongamelift.com.
        ///
        /// * Non-TLS-enabled fleets: ec2-.compute.amazonaws.com. (See [Amazon EC2 Instance IP Addressing](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses).)
        ///
        ///
        /// When connecting to a game session that is running on a TLS-enabled fleet, you must use the DNS name, not the IP address.
        public var dnsName: Swift.String?
        /// The Amazon Resource Name ([ARN](https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html)) that is assigned to a GameLift fleet resource and uniquely identifies it. ARNs are unique across all Regions. Format is arn:aws:gamelift:::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912.
        public var fleetArn: Swift.String?
        /// A unique identifier for the fleet that the instance is in.
        public var fleetId: Swift.String?
        /// A unique identifier for the instance.
        public var instanceId: Swift.String?
        /// IP address that is assigned to the instance.
        public var ipAddress: Swift.String?
        /// The fleet location of the instance, expressed as an Amazon Web Services Region code, such as us-west-2.
        public var location: Swift.String?
        /// Operating system that is running on this instance.
        public var operatingSystem: GameLiftClientTypes.OperatingSystem?
        /// Current status of the instance. Possible statuses include the following:
        ///
        /// * PENDING -- The instance is in the process of being created and launching server processes as defined in the fleet's run-time configuration.
        ///
        /// * ACTIVE -- The instance has been successfully created and at least one server process has successfully launched and reported back to GameLift that it is ready to host a game session. The instance is now considered ready to host game sessions.
        ///
        /// * TERMINATING -- The instance is in the process of shutting down. This may happen to reduce capacity during a scaling down event or to recycle resources in the event of a problem.
        public var status: GameLiftClientTypes.InstanceStatus?
        /// Amazon EC2 instance type that defines the computing resources of this instance.
        public var type: GameLiftClientTypes.EC2InstanceType?

        public init (
            creationTime: ClientRuntime.Date? = nil,
            dnsName: Swift.String? = nil,
            fleetArn: Swift.String? = nil,
            fleetId: Swift.String? = nil,
            instanceId: Swift.String? = nil,
            ipAddress: Swift.String? = nil,
            location: Swift.String? = nil,
            operatingSystem: GameLiftClientTypes.OperatingSystem? = nil,
            status: GameLiftClientTypes.InstanceStatus? = nil,
            type: GameLiftClientTypes.EC2InstanceType? = nil
        )
        {
            self.creationTime = creationTime
            self.dnsName = dnsName
            self.fleetArn = fleetArn
            self.fleetId = fleetId
            self.instanceId = instanceId
            self.ipAddress = ipAddress
            self.location = location
            self.operatingSystem = operatingSystem
            self.status = status
            self.type = type
        }
    }

}
