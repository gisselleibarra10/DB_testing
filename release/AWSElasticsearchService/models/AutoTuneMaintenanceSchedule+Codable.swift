// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticsearchClientTypes.AutoTuneMaintenanceSchedule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cronExpressionForRecurrence = "CronExpressionForRecurrence"
        case duration = "Duration"
        case startAt = "StartAt"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cronExpressionForRecurrence = self.cronExpressionForRecurrence {
            try encodeContainer.encode(cronExpressionForRecurrence, forKey: .cronExpressionForRecurrence)
        }
        if let duration = self.duration {
            try encodeContainer.encode(duration, forKey: .duration)
        }
        if let startAt = self.startAt {
            try encodeContainer.encode(startAt.timeIntervalSince1970, forKey: .startAt)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startAt)
        startAt = startAtDecoded
        let durationDecoded = try containerValues.decodeIfPresent(ElasticsearchClientTypes.Duration.self, forKey: .duration)
        duration = durationDecoded
        let cronExpressionForRecurrenceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cronExpressionForRecurrence)
        cronExpressionForRecurrence = cronExpressionForRecurrenceDecoded
    }
}
