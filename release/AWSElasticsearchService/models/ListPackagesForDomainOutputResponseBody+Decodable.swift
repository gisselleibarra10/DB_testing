// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPackagesForDomainOutputResponseBody: Swift.Equatable {
    let domainPackageDetailsList: [ElasticsearchClientTypes.DomainPackageDetails]?
    let nextToken: Swift.String?
}

extension ListPackagesForDomainOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainPackageDetailsList = "DomainPackageDetailsList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainPackageDetailsListContainer = try containerValues.decodeIfPresent([ElasticsearchClientTypes.DomainPackageDetails?].self, forKey: .domainPackageDetailsList)
        var domainPackageDetailsListDecoded0:[ElasticsearchClientTypes.DomainPackageDetails]? = nil
        if let domainPackageDetailsListContainer = domainPackageDetailsListContainer {
            domainPackageDetailsListDecoded0 = [ElasticsearchClientTypes.DomainPackageDetails]()
            for structure0 in domainPackageDetailsListContainer {
                if let structure0 = structure0 {
                    domainPackageDetailsListDecoded0?.append(structure0)
                }
            }
        }
        domainPackageDetailsList = domainPackageDetailsListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
