// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ElasticsearchClientTypes {
    /// The current status of an Elasticsearch domain.
    public struct ElasticsearchDomainStatus: Swift.Equatable {
        /// The Amazon resource name (ARN) of an Elasticsearch domain. See [Identifiers for IAM Entities](http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html) in Using AWS Identity and Access Management for more information.
        /// This member is required.
        public var aRN: Swift.String?
        /// IAM access policy as a JSON-formatted string.
        public var accessPolicies: Swift.String?
        /// Specifies the status of the AdvancedOptions
        public var advancedOptions: [Swift.String:Swift.String]?
        /// The current status of the Elasticsearch domain's advanced security options.
        public var advancedSecurityOptions: ElasticsearchClientTypes.AdvancedSecurityOptions?
        /// The current status of the Elasticsearch domain's Auto-Tune options.
        public var autoTuneOptions: ElasticsearchClientTypes.AutoTuneOptionsOutput?
        /// Specifies change details of the domain configuration change.
        public var changeProgressDetails: ElasticsearchClientTypes.ChangeProgressDetails?
        /// The CognitoOptions for the specified domain. For more information, see [Amazon Cognito Authentication for Kibana](http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html).
        public var cognitoOptions: ElasticsearchClientTypes.CognitoOptions?
        /// The domain creation status. True if the creation of an Elasticsearch domain is complete. False if domain creation is still in progress.
        public var created: Swift.Bool?
        /// The domain deletion status. True if a delete request has been received for the domain but resource cleanup is still in progress. False if the domain has not been deleted. Once domain deletion is complete, the status of the domain is no longer returned.
        public var deleted: Swift.Bool?
        /// The current status of the Elasticsearch domain's endpoint options.
        public var domainEndpointOptions: ElasticsearchClientTypes.DomainEndpointOptions?
        /// The unique identifier for the specified Elasticsearch domain.
        /// This member is required.
        public var domainId: Swift.String?
        /// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
        /// This member is required.
        public var domainName: Swift.String?
        /// The EBSOptions for the specified domain. See [Configuring EBS-based Storage](http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs) for more information.
        public var eBSOptions: ElasticsearchClientTypes.EBSOptions?
        /// The type and number of instances in the domain cluster.
        /// This member is required.
        public var elasticsearchClusterConfig: ElasticsearchClientTypes.ElasticsearchClusterConfig?
        public var elasticsearchVersion: Swift.String?
        /// Specifies the status of the EncryptionAtRestOptions.
        public var encryptionAtRestOptions: ElasticsearchClientTypes.EncryptionAtRestOptions?
        /// The Elasticsearch domain endpoint that you use to submit index and search requests.
        public var endpoint: Swift.String?
        /// Map containing the Elasticsearch domain endpoints used to submit index and search requests. Example key, value: 'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'.
        public var endpoints: [Swift.String:Swift.String]?
        /// Log publishing options for the given domain.
        public var logPublishingOptions: [Swift.String:ElasticsearchClientTypes.LogPublishingOption]?
        /// Specifies the status of the NodeToNodeEncryptionOptions.
        public var nodeToNodeEncryptionOptions: ElasticsearchClientTypes.NodeToNodeEncryptionOptions?
        /// The status of the Elasticsearch domain configuration. True if Amazon Elasticsearch Service is processing configuration changes. False if the configuration is active.
        public var processing: Swift.Bool?
        /// The current status of the Elasticsearch domain's service software.
        public var serviceSoftwareOptions: ElasticsearchClientTypes.ServiceSoftwareOptions?
        /// Specifies the status of the SnapshotOptions
        public var snapshotOptions: ElasticsearchClientTypes.SnapshotOptions?
        /// The status of an Elasticsearch domain version upgrade. True if Amazon Elasticsearch Service is undergoing a version upgrade. False if the configuration is active.
        public var upgradeProcessing: Swift.Bool?
        /// The VPCOptions for the specified domain. For more information, see [VPC Endpoints for Amazon Elasticsearch Service Domains](http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html).
        public var vPCOptions: ElasticsearchClientTypes.VPCDerivedInfo?

        public init (
            aRN: Swift.String? = nil,
            accessPolicies: Swift.String? = nil,
            advancedOptions: [Swift.String:Swift.String]? = nil,
            advancedSecurityOptions: ElasticsearchClientTypes.AdvancedSecurityOptions? = nil,
            autoTuneOptions: ElasticsearchClientTypes.AutoTuneOptionsOutput? = nil,
            changeProgressDetails: ElasticsearchClientTypes.ChangeProgressDetails? = nil,
            cognitoOptions: ElasticsearchClientTypes.CognitoOptions? = nil,
            created: Swift.Bool? = nil,
            deleted: Swift.Bool? = nil,
            domainEndpointOptions: ElasticsearchClientTypes.DomainEndpointOptions? = nil,
            domainId: Swift.String? = nil,
            domainName: Swift.String? = nil,
            eBSOptions: ElasticsearchClientTypes.EBSOptions? = nil,
            elasticsearchClusterConfig: ElasticsearchClientTypes.ElasticsearchClusterConfig? = nil,
            elasticsearchVersion: Swift.String? = nil,
            encryptionAtRestOptions: ElasticsearchClientTypes.EncryptionAtRestOptions? = nil,
            endpoint: Swift.String? = nil,
            endpoints: [Swift.String:Swift.String]? = nil,
            logPublishingOptions: [Swift.String:ElasticsearchClientTypes.LogPublishingOption]? = nil,
            nodeToNodeEncryptionOptions: ElasticsearchClientTypes.NodeToNodeEncryptionOptions? = nil,
            processing: Swift.Bool? = nil,
            serviceSoftwareOptions: ElasticsearchClientTypes.ServiceSoftwareOptions? = nil,
            snapshotOptions: ElasticsearchClientTypes.SnapshotOptions? = nil,
            upgradeProcessing: Swift.Bool? = nil,
            vPCOptions: ElasticsearchClientTypes.VPCDerivedInfo? = nil
        )
        {
            self.aRN = aRN
            self.accessPolicies = accessPolicies
            self.advancedOptions = advancedOptions
            self.advancedSecurityOptions = advancedSecurityOptions
            self.autoTuneOptions = autoTuneOptions
            self.changeProgressDetails = changeProgressDetails
            self.cognitoOptions = cognitoOptions
            self.created = created
            self.deleted = deleted
            self.domainEndpointOptions = domainEndpointOptions
            self.domainId = domainId
            self.domainName = domainName
            self.eBSOptions = eBSOptions
            self.elasticsearchClusterConfig = elasticsearchClusterConfig
            self.elasticsearchVersion = elasticsearchVersion
            self.encryptionAtRestOptions = encryptionAtRestOptions
            self.endpoint = endpoint
            self.endpoints = endpoints
            self.logPublishingOptions = logPublishingOptions
            self.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions
            self.processing = processing
            self.serviceSoftwareOptions = serviceSoftwareOptions
            self.snapshotOptions = snapshotOptions
            self.upgradeProcessing = upgradeProcessing
            self.vPCOptions = vPCOptions
        }
    }

}
