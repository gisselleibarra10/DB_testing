// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePackagesOutputResponseBody: Swift.Equatable {
    let packageDetailsList: [ElasticsearchClientTypes.PackageDetails]?
    let nextToken: Swift.String?
}

extension DescribePackagesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case packageDetailsList = "PackageDetailsList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let packageDetailsListContainer = try containerValues.decodeIfPresent([ElasticsearchClientTypes.PackageDetails?].self, forKey: .packageDetailsList)
        var packageDetailsListDecoded0:[ElasticsearchClientTypes.PackageDetails]? = nil
        if let packageDetailsListContainer = packageDetailsListContainer {
            packageDetailsListDecoded0 = [ElasticsearchClientTypes.PackageDetails]()
            for structure0 in packageDetailsListContainer {
                if let structure0 = structure0 {
                    packageDetailsListDecoded0?.append(structure0)
                }
            }
        }
        packageDetailsList = packageDetailsListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
