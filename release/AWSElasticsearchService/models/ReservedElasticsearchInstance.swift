// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticsearchClientTypes {
    /// Details of a reserved Elasticsearch instance.
    public struct ReservedElasticsearchInstance: Swift.Equatable {
        /// The currency code for the reserved Elasticsearch instance offering.
        public var currencyCode: Swift.String?
        /// The duration, in seconds, for which the Elasticsearch instance is reserved.
        public var duration: Swift.Int
        /// The number of Elasticsearch instances that have been reserved.
        public var elasticsearchInstanceCount: Swift.Int
        /// The Elasticsearch instance type offered by the reserved instance offering.
        public var elasticsearchInstanceType: ElasticsearchClientTypes.ESPartitionInstanceType?
        /// The upfront fixed charge you will paid to purchase the specific reserved Elasticsearch instance offering.
        public var fixedPrice: Swift.Double?
        /// The payment option as defined in the reserved Elasticsearch instance offering.
        public var paymentOption: ElasticsearchClientTypes.ReservedElasticsearchInstancePaymentOption?
        /// The charge to your account regardless of whether you are creating any domains using the instance offering.
        public var recurringCharges: [ElasticsearchClientTypes.RecurringCharge]?
        /// The customer-specified identifier to track this reservation.
        public var reservationName: Swift.String?
        /// The unique identifier for the reservation.
        public var reservedElasticsearchInstanceId: Swift.String?
        /// The offering identifier.
        public var reservedElasticsearchInstanceOfferingId: Swift.String?
        /// The time the reservation started.
        public var startTime: ClientRuntime.Date?
        /// The state of the reserved Elasticsearch instance.
        public var state: Swift.String?
        /// The rate you are charged for each hour for the domain that is using this reserved instance.
        public var usagePrice: Swift.Double?

        public init (
            currencyCode: Swift.String? = nil,
            duration: Swift.Int = 0,
            elasticsearchInstanceCount: Swift.Int = 0,
            elasticsearchInstanceType: ElasticsearchClientTypes.ESPartitionInstanceType? = nil,
            fixedPrice: Swift.Double? = nil,
            paymentOption: ElasticsearchClientTypes.ReservedElasticsearchInstancePaymentOption? = nil,
            recurringCharges: [ElasticsearchClientTypes.RecurringCharge]? = nil,
            reservationName: Swift.String? = nil,
            reservedElasticsearchInstanceId: Swift.String? = nil,
            reservedElasticsearchInstanceOfferingId: Swift.String? = nil,
            startTime: ClientRuntime.Date? = nil,
            state: Swift.String? = nil,
            usagePrice: Swift.Double? = nil
        )
        {
            self.currencyCode = currencyCode
            self.duration = duration
            self.elasticsearchInstanceCount = elasticsearchInstanceCount
            self.elasticsearchInstanceType = elasticsearchInstanceType
            self.fixedPrice = fixedPrice
            self.paymentOption = paymentOption
            self.recurringCharges = recurringCharges
            self.reservationName = reservationName
            self.reservedElasticsearchInstanceId = reservedElasticsearchInstanceId
            self.reservedElasticsearchInstanceOfferingId = reservedElasticsearchInstanceOfferingId
            self.startTime = startTime
            self.state = state
            self.usagePrice = usagePrice
        }
    }

}
