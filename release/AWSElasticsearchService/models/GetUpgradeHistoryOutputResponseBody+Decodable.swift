// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUpgradeHistoryOutputResponseBody: Swift.Equatable {
    let upgradeHistories: [ElasticsearchClientTypes.UpgradeHistory]?
    let nextToken: Swift.String?
}

extension GetUpgradeHistoryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case upgradeHistories = "UpgradeHistories"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let upgradeHistoriesContainer = try containerValues.decodeIfPresent([ElasticsearchClientTypes.UpgradeHistory?].self, forKey: .upgradeHistories)
        var upgradeHistoriesDecoded0:[ElasticsearchClientTypes.UpgradeHistory]? = nil
        if let upgradeHistoriesContainer = upgradeHistoriesContainer {
            upgradeHistoriesDecoded0 = [ElasticsearchClientTypes.UpgradeHistory]()
            for structure0 in upgradeHistoriesContainer {
                if let structure0 = structure0 {
                    upgradeHistoriesDecoded0?.append(structure0)
                }
            }
        }
        upgradeHistories = upgradeHistoriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
