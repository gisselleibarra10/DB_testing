// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCompatibleElasticsearchVersionsOutputResponseBody: Swift.Equatable {
    let compatibleElasticsearchVersions: [ElasticsearchClientTypes.CompatibleVersionsMap]?
}

extension GetCompatibleElasticsearchVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case compatibleElasticsearchVersions = "CompatibleElasticsearchVersions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let compatibleElasticsearchVersionsContainer = try containerValues.decodeIfPresent([ElasticsearchClientTypes.CompatibleVersionsMap?].self, forKey: .compatibleElasticsearchVersions)
        var compatibleElasticsearchVersionsDecoded0:[ElasticsearchClientTypes.CompatibleVersionsMap]? = nil
        if let compatibleElasticsearchVersionsContainer = compatibleElasticsearchVersionsContainer {
            compatibleElasticsearchVersionsDecoded0 = [ElasticsearchClientTypes.CompatibleVersionsMap]()
            for structure0 in compatibleElasticsearchVersionsContainer {
                if let structure0 = structure0 {
                    compatibleElasticsearchVersionsDecoded0?.append(structure0)
                }
            }
        }
        compatibleElasticsearchVersions = compatibleElasticsearchVersionsDecoded0
    }
}
