// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeElasticsearchDomainsInputBody: Swift.Equatable {
    let domainNames: [Swift.String]?
}

extension DescribeElasticsearchDomainsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainNames = "DomainNames"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .domainNames)
        var domainNamesDecoded0:[Swift.String]? = nil
        if let domainNamesContainer = domainNamesContainer {
            domainNamesDecoded0 = [Swift.String]()
            for string0 in domainNamesContainer {
                if let string0 = string0 {
                    domainNamesDecoded0?.append(string0)
                }
            }
        }
        domainNames = domainNamesDecoded0
    }
}
