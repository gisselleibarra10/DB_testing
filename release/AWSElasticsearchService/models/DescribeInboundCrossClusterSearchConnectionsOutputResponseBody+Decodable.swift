// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeInboundCrossClusterSearchConnectionsOutputResponseBody: Swift.Equatable {
    let crossClusterSearchConnections: [ElasticsearchClientTypes.InboundCrossClusterSearchConnection]?
    let nextToken: Swift.String?
}

extension DescribeInboundCrossClusterSearchConnectionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case crossClusterSearchConnections = "CrossClusterSearchConnections"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let crossClusterSearchConnectionsContainer = try containerValues.decodeIfPresent([ElasticsearchClientTypes.InboundCrossClusterSearchConnection?].self, forKey: .crossClusterSearchConnections)
        var crossClusterSearchConnectionsDecoded0:[ElasticsearchClientTypes.InboundCrossClusterSearchConnection]? = nil
        if let crossClusterSearchConnectionsContainer = crossClusterSearchConnectionsContainer {
            crossClusterSearchConnectionsDecoded0 = [ElasticsearchClientTypes.InboundCrossClusterSearchConnection]()
            for structure0 in crossClusterSearchConnectionsContainer {
                if let structure0 = structure0 {
                    crossClusterSearchConnectionsDecoded0?.append(structure0)
                }
            }
        }
        crossClusterSearchConnections = crossClusterSearchConnectionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
