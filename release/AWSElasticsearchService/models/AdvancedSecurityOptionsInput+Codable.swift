// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticsearchClientTypes.AdvancedSecurityOptionsInput: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anonymousAuthEnabled = "AnonymousAuthEnabled"
        case enabled = "Enabled"
        case internalUserDatabaseEnabled = "InternalUserDatabaseEnabled"
        case masterUserOptions = "MasterUserOptions"
        case sAMLOptions = "SAMLOptions"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let anonymousAuthEnabled = self.anonymousAuthEnabled {
            try encodeContainer.encode(anonymousAuthEnabled, forKey: .anonymousAuthEnabled)
        }
        if let enabled = self.enabled {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if let internalUserDatabaseEnabled = self.internalUserDatabaseEnabled {
            try encodeContainer.encode(internalUserDatabaseEnabled, forKey: .internalUserDatabaseEnabled)
        }
        if let masterUserOptions = self.masterUserOptions {
            try encodeContainer.encode(masterUserOptions, forKey: .masterUserOptions)
        }
        if let sAMLOptions = self.sAMLOptions {
            try encodeContainer.encode(sAMLOptions, forKey: .sAMLOptions)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let internalUserDatabaseEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .internalUserDatabaseEnabled)
        internalUserDatabaseEnabled = internalUserDatabaseEnabledDecoded
        let masterUserOptionsDecoded = try containerValues.decodeIfPresent(ElasticsearchClientTypes.MasterUserOptions.self, forKey: .masterUserOptions)
        masterUserOptions = masterUserOptionsDecoded
        let sAMLOptionsDecoded = try containerValues.decodeIfPresent(ElasticsearchClientTypes.SAMLOptionsInput.self, forKey: .sAMLOptions)
        sAMLOptions = sAMLOptionsDecoded
        let anonymousAuthEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .anonymousAuthEnabled)
        anonymousAuthEnabled = anonymousAuthEnabledDecoded
    }
}
