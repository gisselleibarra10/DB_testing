// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticsearchClientTypes.AdditionalLimit: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case limitName = "LimitName"
        case limitValues = "LimitValues"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let limitName = self.limitName {
            try encodeContainer.encode(limitName, forKey: .limitName)
        }
        if let limitValues = limitValues {
            var limitValuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .limitValues)
            for limitvaluelist0 in limitValues {
                try limitValuesContainer.encode(limitvaluelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let limitNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .limitName)
        limitName = limitNameDecoded
        let limitValuesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .limitValues)
        var limitValuesDecoded0:[Swift.String]? = nil
        if let limitValuesContainer = limitValuesContainer {
            limitValuesDecoded0 = [Swift.String]()
            for string0 in limitValuesContainer {
                if let string0 = string0 {
                    limitValuesDecoded0?.append(string0)
                }
            }
        }
        limitValues = limitValuesDecoded0
    }
}
