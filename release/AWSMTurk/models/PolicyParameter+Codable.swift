// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MTurkClientTypes.PolicyParameter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case key = "Key"
        case mapEntries = "MapEntries"
        case values = "Values"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let key = self.key {
            try encodeContainer.encode(key, forKey: .key)
        }
        if let mapEntries = mapEntries {
            var mapEntriesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .mapEntries)
            for parametermapentrylist0 in mapEntries {
                try mapEntriesContainer.encode(parametermapentrylist0)
            }
        }
        if let values = values {
            var valuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .values)
            for stringlist0 in values {
                try valuesContainer.encode(stringlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .key)
        key = keyDecoded
        let valuesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .values)
        var valuesDecoded0:[Swift.String]? = nil
        if let valuesContainer = valuesContainer {
            valuesDecoded0 = [Swift.String]()
            for string0 in valuesContainer {
                if let string0 = string0 {
                    valuesDecoded0?.append(string0)
                }
            }
        }
        values = valuesDecoded0
        let mapEntriesContainer = try containerValues.decodeIfPresent([MTurkClientTypes.ParameterMapEntry?].self, forKey: .mapEntries)
        var mapEntriesDecoded0:[MTurkClientTypes.ParameterMapEntry]? = nil
        if let mapEntriesContainer = mapEntriesContainer {
            mapEntriesDecoded0 = [MTurkClientTypes.ParameterMapEntry]()
            for structure0 in mapEntriesContainer {
                if let structure0 = structure0 {
                    mapEntriesDecoded0?.append(structure0)
                }
            }
        }
        mapEntries = mapEntriesDecoded0
    }
}
