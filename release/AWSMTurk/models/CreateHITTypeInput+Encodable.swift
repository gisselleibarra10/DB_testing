// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateHITTypeInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assignmentDurationInSeconds = "AssignmentDurationInSeconds"
        case autoApprovalDelayInSeconds = "AutoApprovalDelayInSeconds"
        case description = "Description"
        case keywords = "Keywords"
        case qualificationRequirements = "QualificationRequirements"
        case reward = "Reward"
        case title = "Title"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let assignmentDurationInSeconds = self.assignmentDurationInSeconds {
            try encodeContainer.encode(assignmentDurationInSeconds, forKey: .assignmentDurationInSeconds)
        }
        if let autoApprovalDelayInSeconds = self.autoApprovalDelayInSeconds {
            try encodeContainer.encode(autoApprovalDelayInSeconds, forKey: .autoApprovalDelayInSeconds)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let keywords = self.keywords {
            try encodeContainer.encode(keywords, forKey: .keywords)
        }
        if let qualificationRequirements = qualificationRequirements {
            var qualificationRequirementsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .qualificationRequirements)
            for qualificationrequirementlist0 in qualificationRequirements {
                try qualificationRequirementsContainer.encode(qualificationrequirementlist0)
            }
        }
        if let reward = self.reward {
            try encodeContainer.encode(reward, forKey: .reward)
        }
        if let title = self.title {
            try encodeContainer.encode(title, forKey: .title)
        }
    }
}
