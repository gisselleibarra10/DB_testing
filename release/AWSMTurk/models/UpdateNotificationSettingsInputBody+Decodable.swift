// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateNotificationSettingsInputBody: Swift.Equatable {
    let hITTypeId: Swift.String?
    let notification: MTurkClientTypes.NotificationSpecification?
    let active: Swift.Bool?
}

extension UpdateNotificationSettingsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case active = "Active"
        case hITTypeId = "HITTypeId"
        case notification = "Notification"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hITTypeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hITTypeId)
        hITTypeId = hITTypeIdDecoded
        let notificationDecoded = try containerValues.decodeIfPresent(MTurkClientTypes.NotificationSpecification.self, forKey: .notification)
        notification = notificationDecoded
        let activeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .active)
        active = activeDecoded
    }
}
