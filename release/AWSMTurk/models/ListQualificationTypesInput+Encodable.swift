// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListQualificationTypesInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case mustBeOwnedByCaller = "MustBeOwnedByCaller"
        case mustBeRequestable = "MustBeRequestable"
        case nextToken = "NextToken"
        case query = "Query"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let mustBeOwnedByCaller = self.mustBeOwnedByCaller {
            try encodeContainer.encode(mustBeOwnedByCaller, forKey: .mustBeOwnedByCaller)
        }
        if let mustBeRequestable = self.mustBeRequestable {
            try encodeContainer.encode(mustBeRequestable, forKey: .mustBeRequestable)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let query = self.query {
            try encodeContainer.encode(query, forKey: .query)
        }
    }
}
