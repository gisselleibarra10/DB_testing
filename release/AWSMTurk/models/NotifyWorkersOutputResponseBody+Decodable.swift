// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct NotifyWorkersOutputResponseBody: Swift.Equatable {
    let notifyWorkersFailureStatuses: [MTurkClientTypes.NotifyWorkersFailureStatus]?
}

extension NotifyWorkersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case notifyWorkersFailureStatuses = "NotifyWorkersFailureStatuses"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let notifyWorkersFailureStatusesContainer = try containerValues.decodeIfPresent([MTurkClientTypes.NotifyWorkersFailureStatus?].self, forKey: .notifyWorkersFailureStatuses)
        var notifyWorkersFailureStatusesDecoded0:[MTurkClientTypes.NotifyWorkersFailureStatus]? = nil
        if let notifyWorkersFailureStatusesContainer = notifyWorkersFailureStatusesContainer {
            notifyWorkersFailureStatusesDecoded0 = [MTurkClientTypes.NotifyWorkersFailureStatus]()
            for structure0 in notifyWorkersFailureStatusesContainer {
                if let structure0 = structure0 {
                    notifyWorkersFailureStatusesDecoded0?.append(structure0)
                }
            }
        }
        notifyWorkersFailureStatuses = notifyWorkersFailureStatusesDecoded0
    }
}
