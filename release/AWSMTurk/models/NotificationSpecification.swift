// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MTurkClientTypes {
    /// The NotificationSpecification data structure describes a HIT event notification for a HIT type.
    public struct NotificationSpecification: Swift.Equatable {
        /// The target for notification messages. The Destinationâ€™s format is determined by the specified Transport:
        ///
        /// * When Transport is Email, the Destination is your email address.
        ///
        /// * When Transport is SQS, the Destination is your queue URL.
        ///
        /// * When Transport is SNS, the Destination is the ARN of your topic.
        /// This member is required.
        public var destination: Swift.String?
        /// The list of events that should cause notifications to be sent. Valid Values: AssignmentAccepted | AssignmentAbandoned | AssignmentReturned | AssignmentSubmitted | AssignmentRejected | AssignmentApproved | HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired | Ping. The Ping event is only valid for the SendTestEventNotification operation.
        /// This member is required.
        public var eventTypes: [MTurkClientTypes.EventType]?
        /// The method Amazon Mechanical Turk uses to send the notification. Valid Values: Email | SQS | SNS.
        /// This member is required.
        public var transport: MTurkClientTypes.NotificationTransport?
        /// The version of the Notification API to use. Valid value is 2006-05-05.
        /// This member is required.
        public var version: Swift.String?

        public init (
            destination: Swift.String? = nil,
            eventTypes: [MTurkClientTypes.EventType]? = nil,
            transport: MTurkClientTypes.NotificationTransport? = nil,
            version: Swift.String? = nil
        )
        {
            self.destination = destination
            self.eventTypes = eventTypes
            self.transport = transport
            self.version = version
        }
    }

}
