// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MTurkClientTypes.BonusPayment: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assignmentId = "AssignmentId"
        case bonusAmount = "BonusAmount"
        case grantTime = "GrantTime"
        case reason = "Reason"
        case workerId = "WorkerId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let assignmentId = self.assignmentId {
            try encodeContainer.encode(assignmentId, forKey: .assignmentId)
        }
        if let bonusAmount = self.bonusAmount {
            try encodeContainer.encode(bonusAmount, forKey: .bonusAmount)
        }
        if let grantTime = self.grantTime {
            try encodeContainer.encode(grantTime.timeIntervalSince1970, forKey: .grantTime)
        }
        if let reason = self.reason {
            try encodeContainer.encode(reason, forKey: .reason)
        }
        if let workerId = self.workerId {
            try encodeContainer.encode(workerId, forKey: .workerId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .workerId)
        workerId = workerIdDecoded
        let bonusAmountDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bonusAmount)
        bonusAmount = bonusAmountDecoded
        let assignmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assignmentId)
        assignmentId = assignmentIdDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reason)
        reason = reasonDecoded
        let grantTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .grantTime)
        grantTime = grantTimeDecoded
    }
}
