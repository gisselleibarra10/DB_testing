// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendTestEventNotificationInputBody: Swift.Equatable {
    let notification: MTurkClientTypes.NotificationSpecification?
    let testEventType: MTurkClientTypes.EventType?
}

extension SendTestEventNotificationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case notification = "Notification"
        case testEventType = "TestEventType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let notificationDecoded = try containerValues.decodeIfPresent(MTurkClientTypes.NotificationSpecification.self, forKey: .notification)
        notification = notificationDecoded
        let testEventTypeDecoded = try containerValues.decodeIfPresent(MTurkClientTypes.EventType.self, forKey: .testEventType)
        testEventType = testEventTypeDecoded
    }
}
