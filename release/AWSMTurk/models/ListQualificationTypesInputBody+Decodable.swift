// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListQualificationTypesInputBody: Swift.Equatable {
    let query: Swift.String?
    let mustBeRequestable: Swift.Bool?
    let mustBeOwnedByCaller: Swift.Bool?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension ListQualificationTypesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case mustBeOwnedByCaller = "MustBeOwnedByCaller"
        case mustBeRequestable = "MustBeRequestable"
        case nextToken = "NextToken"
        case query = "Query"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .query)
        query = queryDecoded
        let mustBeRequestableDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .mustBeRequestable)
        mustBeRequestable = mustBeRequestableDecoded
        let mustBeOwnedByCallerDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .mustBeOwnedByCaller)
        mustBeOwnedByCaller = mustBeOwnedByCallerDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
