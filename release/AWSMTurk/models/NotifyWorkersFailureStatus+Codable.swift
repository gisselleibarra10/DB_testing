// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MTurkClientTypes.NotifyWorkersFailureStatus: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case notifyWorkersFailureCode = "NotifyWorkersFailureCode"
        case notifyWorkersFailureMessage = "NotifyWorkersFailureMessage"
        case workerId = "WorkerId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let notifyWorkersFailureCode = self.notifyWorkersFailureCode {
            try encodeContainer.encode(notifyWorkersFailureCode.rawValue, forKey: .notifyWorkersFailureCode)
        }
        if let notifyWorkersFailureMessage = self.notifyWorkersFailureMessage {
            try encodeContainer.encode(notifyWorkersFailureMessage, forKey: .notifyWorkersFailureMessage)
        }
        if let workerId = self.workerId {
            try encodeContainer.encode(workerId, forKey: .workerId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let notifyWorkersFailureCodeDecoded = try containerValues.decodeIfPresent(MTurkClientTypes.NotifyWorkersFailureCode.self, forKey: .notifyWorkersFailureCode)
        notifyWorkersFailureCode = notifyWorkersFailureCodeDecoded
        let notifyWorkersFailureMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .notifyWorkersFailureMessage)
        notifyWorkersFailureMessage = notifyWorkersFailureMessageDecoded
        let workerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .workerId)
        workerId = workerIdDecoded
    }
}
