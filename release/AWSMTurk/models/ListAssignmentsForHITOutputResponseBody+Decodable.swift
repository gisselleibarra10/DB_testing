// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssignmentsForHITOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let numResults: Swift.Int?
    let assignments: [MTurkClientTypes.Assignment]?
}

extension ListAssignmentsForHITOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assignments = "Assignments"
        case nextToken = "NextToken"
        case numResults = "NumResults"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let numResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numResults)
        numResults = numResultsDecoded
        let assignmentsContainer = try containerValues.decodeIfPresent([MTurkClientTypes.Assignment?].self, forKey: .assignments)
        var assignmentsDecoded0:[MTurkClientTypes.Assignment]? = nil
        if let assignmentsContainer = assignmentsContainer {
            assignmentsDecoded0 = [MTurkClientTypes.Assignment]()
            for structure0 in assignmentsContainer {
                if let structure0 = structure0 {
                    assignmentsDecoded0?.append(structure0)
                }
            }
        }
        assignments = assignmentsDecoded0
    }
}
