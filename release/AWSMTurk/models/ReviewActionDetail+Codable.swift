// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MTurkClientTypes.ReviewActionDetail: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionId = "ActionId"
        case actionName = "ActionName"
        case completeTime = "CompleteTime"
        case errorCode = "ErrorCode"
        case result = "Result"
        case status = "Status"
        case targetId = "TargetId"
        case targetType = "TargetType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionId = self.actionId {
            try encodeContainer.encode(actionId, forKey: .actionId)
        }
        if let actionName = self.actionName {
            try encodeContainer.encode(actionName, forKey: .actionName)
        }
        if let completeTime = self.completeTime {
            try encodeContainer.encode(completeTime.timeIntervalSince1970, forKey: .completeTime)
        }
        if let errorCode = self.errorCode {
            try encodeContainer.encode(errorCode, forKey: .errorCode)
        }
        if let result = self.result {
            try encodeContainer.encode(result, forKey: .result)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let targetId = self.targetId {
            try encodeContainer.encode(targetId, forKey: .targetId)
        }
        if let targetType = self.targetType {
            try encodeContainer.encode(targetType, forKey: .targetType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionId)
        actionId = actionIdDecoded
        let actionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionName)
        actionName = actionNameDecoded
        let targetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetId)
        targetId = targetIdDecoded
        let targetTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetType)
        targetType = targetTypeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(MTurkClientTypes.ReviewActionStatus.self, forKey: .status)
        status = statusDecoded
        let completeTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .completeTime)
        completeTime = completeTimeDecoded
        let resultDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .result)
        result = resultDecoded
        let errorCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorCode)
        errorCode = errorCodeDecoded
    }
}
