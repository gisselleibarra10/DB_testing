// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssignmentsForHITInputBody: Swift.Equatable {
    let hITId: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let assignmentStatuses: [MTurkClientTypes.AssignmentStatus]?
}

extension ListAssignmentsForHITInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assignmentStatuses = "AssignmentStatuses"
        case hITId = "HITId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hITIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hITId)
        hITId = hITIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let assignmentStatusesContainer = try containerValues.decodeIfPresent([MTurkClientTypes.AssignmentStatus?].self, forKey: .assignmentStatuses)
        var assignmentStatusesDecoded0:[MTurkClientTypes.AssignmentStatus]? = nil
        if let assignmentStatusesContainer = assignmentStatusesContainer {
            assignmentStatusesDecoded0 = [MTurkClientTypes.AssignmentStatus]()
            for string0 in assignmentStatusesContainer {
                if let string0 = string0 {
                    assignmentStatusesDecoded0?.append(string0)
                }
            }
        }
        assignmentStatuses = assignmentStatusesDecoded0
    }
}
