// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListAssignmentsForHITInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assignmentStatuses = "AssignmentStatuses"
        case hITId = "HITId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let assignmentStatuses = assignmentStatuses {
            var assignmentStatusesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .assignmentStatuses)
            for assignmentstatuslist0 in assignmentStatuses {
                try assignmentStatusesContainer.encode(assignmentstatuslist0.rawValue)
            }
        }
        if let hITId = self.hITId {
            try encodeContainer.encode(hITId, forKey: .hITId)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }
}
