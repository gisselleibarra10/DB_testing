// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorkersWithQualificationTypeInputBody: Swift.Equatable {
    let qualificationTypeId: Swift.String?
    let status: MTurkClientTypes.QualificationStatus?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension ListWorkersWithQualificationTypeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case qualificationTypeId = "QualificationTypeId"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let qualificationTypeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .qualificationTypeId)
        qualificationTypeId = qualificationTypeIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(MTurkClientTypes.QualificationStatus.self, forKey: .status)
        status = statusDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
