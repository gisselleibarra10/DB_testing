// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListReviewPolicyResultsForHITInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hITId = "HITId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case policyLevels = "PolicyLevels"
        case retrieveActions = "RetrieveActions"
        case retrieveResults = "RetrieveResults"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hITId = self.hITId {
            try encodeContainer.encode(hITId, forKey: .hITId)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let policyLevels = policyLevels {
            var policyLevelsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .policyLevels)
            for reviewpolicylevellist0 in policyLevels {
                try policyLevelsContainer.encode(reviewpolicylevellist0.rawValue)
            }
        }
        if let retrieveActions = self.retrieveActions {
            try encodeContainer.encode(retrieveActions, forKey: .retrieveActions)
        }
        if let retrieveResults = self.retrieveResults {
            try encodeContainer.encode(retrieveResults, forKey: .retrieveResults)
        }
    }
}
