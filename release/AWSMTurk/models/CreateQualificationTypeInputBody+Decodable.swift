// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateQualificationTypeInputBody: Swift.Equatable {
    let name: Swift.String?
    let keywords: Swift.String?
    let description: Swift.String?
    let qualificationTypeStatus: MTurkClientTypes.QualificationTypeStatus?
    let retryDelayInSeconds: Swift.Int?
    let test: Swift.String?
    let answerKey: Swift.String?
    let testDurationInSeconds: Swift.Int?
    let autoGranted: Swift.Bool?
    let autoGrantedValue: Swift.Int?
}

extension CreateQualificationTypeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case answerKey = "AnswerKey"
        case autoGranted = "AutoGranted"
        case autoGrantedValue = "AutoGrantedValue"
        case description = "Description"
        case keywords = "Keywords"
        case name = "Name"
        case qualificationTypeStatus = "QualificationTypeStatus"
        case retryDelayInSeconds = "RetryDelayInSeconds"
        case test = "Test"
        case testDurationInSeconds = "TestDurationInSeconds"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let keywordsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keywords)
        keywords = keywordsDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let qualificationTypeStatusDecoded = try containerValues.decodeIfPresent(MTurkClientTypes.QualificationTypeStatus.self, forKey: .qualificationTypeStatus)
        qualificationTypeStatus = qualificationTypeStatusDecoded
        let retryDelayInSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .retryDelayInSeconds)
        retryDelayInSeconds = retryDelayInSecondsDecoded
        let testDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .test)
        test = testDecoded
        let answerKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .answerKey)
        answerKey = answerKeyDecoded
        let testDurationInSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .testDurationInSeconds)
        testDurationInSeconds = testDurationInSecondsDecoded
        let autoGrantedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .autoGranted)
        autoGranted = autoGrantedDecoded
        let autoGrantedValueDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .autoGrantedValue)
        autoGrantedValue = autoGrantedValueDecoded
    }
}
