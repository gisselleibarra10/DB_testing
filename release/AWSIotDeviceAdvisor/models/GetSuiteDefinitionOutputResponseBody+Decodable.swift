// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSuiteDefinitionOutputResponseBody: Swift.Equatable {
    let suiteDefinitionId: Swift.String?
    let suiteDefinitionArn: Swift.String?
    let suiteDefinitionVersion: Swift.String?
    let latestVersion: Swift.String?
    let suiteDefinitionConfiguration: IotDeviceAdvisorClientTypes.SuiteDefinitionConfiguration?
    let createdAt: ClientRuntime.Date?
    let lastModifiedAt: ClientRuntime.Date?
    let tags: [Swift.String:Swift.String]?
}

extension GetSuiteDefinitionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdAt
        case lastModifiedAt
        case latestVersion
        case suiteDefinitionArn
        case suiteDefinitionConfiguration
        case suiteDefinitionId
        case suiteDefinitionVersion
        case tags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let suiteDefinitionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .suiteDefinitionId)
        suiteDefinitionId = suiteDefinitionIdDecoded
        let suiteDefinitionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .suiteDefinitionArn)
        suiteDefinitionArn = suiteDefinitionArnDecoded
        let suiteDefinitionVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .suiteDefinitionVersion)
        suiteDefinitionVersion = suiteDefinitionVersionDecoded
        let latestVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .latestVersion)
        latestVersion = latestVersionDecoded
        let suiteDefinitionConfigurationDecoded = try containerValues.decodeIfPresent(IotDeviceAdvisorClientTypes.SuiteDefinitionConfiguration.self, forKey: .suiteDefinitionConfiguration)
        suiteDefinitionConfiguration = suiteDefinitionConfigurationDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let lastModifiedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedAt)
        lastModifiedAt = lastModifiedAtDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, string2560) in tagsContainer {
                if let string2560 = string2560 {
                    tagsDecoded0?[key0] = string2560
                }
            }
        }
        tags = tagsDecoded0
    }
}
