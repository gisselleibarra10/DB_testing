// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotDeviceAdvisorClientTypes.TestResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groups
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let groups = groups {
            var groupsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .groups)
            for groupresultlist0 in groups {
                try groupsContainer.encode(groupresultlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupsContainer = try containerValues.decodeIfPresent([IotDeviceAdvisorClientTypes.GroupResult?].self, forKey: .groups)
        var groupsDecoded0:[IotDeviceAdvisorClientTypes.GroupResult]? = nil
        if let groupsContainer = groupsContainer {
            groupsDecoded0 = [IotDeviceAdvisorClientTypes.GroupResult]()
            for structure0 in groupsContainer {
                if let structure0 = structure0 {
                    groupsDecoded0?.append(structure0)
                }
            }
        }
        groups = groupsDecoded0
    }
}
