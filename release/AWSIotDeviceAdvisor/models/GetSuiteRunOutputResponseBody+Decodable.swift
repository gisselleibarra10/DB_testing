// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSuiteRunOutputResponseBody: Swift.Equatable {
    let suiteDefinitionId: Swift.String?
    let suiteDefinitionVersion: Swift.String?
    let suiteRunId: Swift.String?
    let suiteRunArn: Swift.String?
    let suiteRunConfiguration: IotDeviceAdvisorClientTypes.SuiteRunConfiguration?
    let testResult: IotDeviceAdvisorClientTypes.TestResult?
    let startTime: ClientRuntime.Date?
    let endTime: ClientRuntime.Date?
    let status: IotDeviceAdvisorClientTypes.SuiteRunStatus?
    let errorReason: Swift.String?
    let tags: [Swift.String:Swift.String]?
}

extension GetSuiteRunOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case endTime
        case errorReason
        case startTime
        case status
        case suiteDefinitionId
        case suiteDefinitionVersion
        case suiteRunArn
        case suiteRunConfiguration
        case suiteRunId
        case tags
        case testResult
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let suiteDefinitionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .suiteDefinitionId)
        suiteDefinitionId = suiteDefinitionIdDecoded
        let suiteDefinitionVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .suiteDefinitionVersion)
        suiteDefinitionVersion = suiteDefinitionVersionDecoded
        let suiteRunIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .suiteRunId)
        suiteRunId = suiteRunIdDecoded
        let suiteRunArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .suiteRunArn)
        suiteRunArn = suiteRunArnDecoded
        let suiteRunConfigurationDecoded = try containerValues.decodeIfPresent(IotDeviceAdvisorClientTypes.SuiteRunConfiguration.self, forKey: .suiteRunConfiguration)
        suiteRunConfiguration = suiteRunConfigurationDecoded
        let testResultDecoded = try containerValues.decodeIfPresent(IotDeviceAdvisorClientTypes.TestResult.self, forKey: .testResult)
        testResult = testResultDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IotDeviceAdvisorClientTypes.SuiteRunStatus.self, forKey: .status)
        status = statusDecoded
        let errorReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorReason)
        errorReason = errorReasonDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, string2560) in tagsContainer {
                if let string2560 = string2560 {
                    tagsDecoded0?[key0] = string2560
                }
            }
        }
        tags = tagsDecoded0
    }
}
