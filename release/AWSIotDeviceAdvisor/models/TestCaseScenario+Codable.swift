// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotDeviceAdvisorClientTypes.TestCaseScenario: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failure
        case status
        case systemMessage
        case testCaseScenarioId
        case testCaseScenarioType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let failure = self.failure {
            try encodeContainer.encode(failure, forKey: .failure)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let systemMessage = self.systemMessage {
            try encodeContainer.encode(systemMessage, forKey: .systemMessage)
        }
        if let testCaseScenarioId = self.testCaseScenarioId {
            try encodeContainer.encode(testCaseScenarioId, forKey: .testCaseScenarioId)
        }
        if let testCaseScenarioType = self.testCaseScenarioType {
            try encodeContainer.encode(testCaseScenarioType.rawValue, forKey: .testCaseScenarioType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let testCaseScenarioIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .testCaseScenarioId)
        testCaseScenarioId = testCaseScenarioIdDecoded
        let testCaseScenarioTypeDecoded = try containerValues.decodeIfPresent(IotDeviceAdvisorClientTypes.TestCaseScenarioType.self, forKey: .testCaseScenarioType)
        testCaseScenarioType = testCaseScenarioTypeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IotDeviceAdvisorClientTypes.TestCaseScenarioStatus.self, forKey: .status)
        status = statusDecoded
        let failureDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failure)
        failure = failureDecoded
        let systemMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .systemMessage)
        systemMessage = systemMessageDecoded
    }
}
