// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotDeviceAdvisorClientTypes {
    /// Provides the test case run.
    public struct TestCaseRun: Swift.Equatable {
        /// Provides test case run end time.
        public var endTime: ClientRuntime.Date?
        /// Provides test case run failure result.
        public var failure: Swift.String?
        /// Provides test case run log URL.
        public var logUrl: Swift.String?
        /// Provides test case run start time.
        public var startTime: ClientRuntime.Date?
        /// Provides the test case run status. Status is one of the following:
        ///
        /// * PASS: Test passed.
        ///
        /// * FAIL: Test failed.
        ///
        /// * PENDING: Test has not started running but is scheduled.
        ///
        /// * RUNNING: Test is running.
        ///
        /// * STOPPING: Test is performing cleanup steps. You will see this status only if you stop a suite run.
        ///
        /// * STOPPED Test is stopped. You will see this status only if you stop a suite run.
        ///
        /// * PASS_WITH_WARNINGS: Test passed with warnings.
        ///
        /// * ERORR: Test faced an error when running due to an internal issue.
        public var status: IotDeviceAdvisorClientTypes.Status?
        /// Provides the test case run definition ID.
        public var testCaseDefinitionId: Swift.String?
        /// Provides the test case run definition name.
        public var testCaseDefinitionName: Swift.String?
        /// Provides the test case run ID.
        public var testCaseRunId: Swift.String?
        /// Provides the test scenarios for the test case run.
        public var testScenarios: [IotDeviceAdvisorClientTypes.TestCaseScenario]?
        /// Provides test case run warnings.
        public var warnings: Swift.String?

        public init (
            endTime: ClientRuntime.Date? = nil,
            failure: Swift.String? = nil,
            logUrl: Swift.String? = nil,
            startTime: ClientRuntime.Date? = nil,
            status: IotDeviceAdvisorClientTypes.Status? = nil,
            testCaseDefinitionId: Swift.String? = nil,
            testCaseDefinitionName: Swift.String? = nil,
            testCaseRunId: Swift.String? = nil,
            testScenarios: [IotDeviceAdvisorClientTypes.TestCaseScenario]? = nil,
            warnings: Swift.String? = nil
        )
        {
            self.endTime = endTime
            self.failure = failure
            self.logUrl = logUrl
            self.startTime = startTime
            self.status = status
            self.testCaseDefinitionId = testCaseDefinitionId
            self.testCaseDefinitionName = testCaseDefinitionName
            self.testCaseRunId = testCaseRunId
            self.testScenarios = testScenarios
            self.warnings = warnings
        }
    }

}
