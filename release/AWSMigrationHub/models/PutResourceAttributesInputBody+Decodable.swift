// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutResourceAttributesInputBody: Swift.Equatable {
    let progressUpdateStream: Swift.String?
    let migrationTaskName: Swift.String?
    let resourceAttributeList: [MigrationHubClientTypes.ResourceAttribute]?
    let dryRun: Swift.Bool
}

extension PutResourceAttributesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "DryRun"
        case migrationTaskName = "MigrationTaskName"
        case progressUpdateStream = "ProgressUpdateStream"
        case resourceAttributeList = "ResourceAttributeList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let progressUpdateStreamDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .progressUpdateStream)
        progressUpdateStream = progressUpdateStreamDecoded
        let migrationTaskNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .migrationTaskName)
        migrationTaskName = migrationTaskNameDecoded
        let resourceAttributeListContainer = try containerValues.decodeIfPresent([MigrationHubClientTypes.ResourceAttribute?].self, forKey: .resourceAttributeList)
        var resourceAttributeListDecoded0:[MigrationHubClientTypes.ResourceAttribute]? = nil
        if let resourceAttributeListContainer = resourceAttributeListContainer {
            resourceAttributeListDecoded0 = [MigrationHubClientTypes.ResourceAttribute]()
            for structure0 in resourceAttributeListContainer {
                if let structure0 = structure0 {
                    resourceAttributeListDecoded0?.append(structure0)
                }
            }
        }
        resourceAttributeList = resourceAttributeListDecoded0
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun) ?? false
        dryRun = dryRunDecoded
    }
}
