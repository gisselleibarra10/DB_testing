// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationStatesOutputResponseBody: Swift.Equatable {
    let applicationStateList: [MigrationHubClientTypes.ApplicationState]?
    let nextToken: Swift.String?
}

extension ListApplicationStatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationStateList = "ApplicationStateList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationStateListContainer = try containerValues.decodeIfPresent([MigrationHubClientTypes.ApplicationState?].self, forKey: .applicationStateList)
        var applicationStateListDecoded0:[MigrationHubClientTypes.ApplicationState]? = nil
        if let applicationStateListContainer = applicationStateListContainer {
            applicationStateListDecoded0 = [MigrationHubClientTypes.ApplicationState]()
            for structure0 in applicationStateListContainer {
                if let structure0 = structure0 {
                    applicationStateListDecoded0?.append(structure0)
                }
            }
        }
        applicationStateList = applicationStateListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
