// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct NotifyApplicationStateInputBody: Swift.Equatable {
    let applicationId: Swift.String?
    let status: MigrationHubClientTypes.ApplicationStatus?
    let updateDateTime: ClientRuntime.Date?
    let dryRun: Swift.Bool
}

extension NotifyApplicationStateInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationId = "ApplicationId"
        case dryRun = "DryRun"
        case status = "Status"
        case updateDateTime = "UpdateDateTime"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationId)
        applicationId = applicationIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(MigrationHubClientTypes.ApplicationStatus.self, forKey: .status)
        status = statusDecoded
        let updateDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .updateDateTime)
        updateDateTime = updateDateTimeDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun) ?? false
        dryRun = dryRunDecoded
    }
}
