// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFHIRImportJobsInputBody: Swift.Equatable {
    let datastoreId: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let jobName: Swift.String?
    let jobStatus: HealthLakeClientTypes.JobStatus?
    let submittedBefore: ClientRuntime.Date?
    let submittedAfter: ClientRuntime.Date?
}

extension ListFHIRImportJobsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case datastoreId = "DatastoreId"
        case jobName = "JobName"
        case jobStatus = "JobStatus"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case submittedAfter = "SubmittedAfter"
        case submittedBefore = "SubmittedBefore"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datastoreIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .datastoreId)
        datastoreId = datastoreIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let jobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobName)
        jobName = jobNameDecoded
        let jobStatusDecoded = try containerValues.decodeIfPresent(HealthLakeClientTypes.JobStatus.self, forKey: .jobStatus)
        jobStatus = jobStatusDecoded
        let submittedBeforeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .submittedBefore)
        submittedBefore = submittedBeforeDecoded
        let submittedAfterDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .submittedAfter)
        submittedAfter = submittedAfterDecoded
    }
}
