// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFHIRImportJobsOutputResponseBody: Swift.Equatable {
    let importJobPropertiesList: [HealthLakeClientTypes.ImportJobProperties]?
    let nextToken: Swift.String?
}

extension ListFHIRImportJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case importJobPropertiesList = "ImportJobPropertiesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let importJobPropertiesListContainer = try containerValues.decodeIfPresent([HealthLakeClientTypes.ImportJobProperties?].self, forKey: .importJobPropertiesList)
        var importJobPropertiesListDecoded0:[HealthLakeClientTypes.ImportJobProperties]? = nil
        if let importJobPropertiesListContainer = importJobPropertiesListContainer {
            importJobPropertiesListDecoded0 = [HealthLakeClientTypes.ImportJobProperties]()
            for structure0 in importJobPropertiesListContainer {
                if let structure0 = structure0 {
                    importJobPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        importJobPropertiesList = importJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
