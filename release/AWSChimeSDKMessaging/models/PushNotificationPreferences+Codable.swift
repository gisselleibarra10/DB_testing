// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ChimeSdkMessagingClientTypes.PushNotificationPreferences: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowNotifications = "AllowNotifications"
        case filterRule = "FilterRule"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allowNotifications = self.allowNotifications {
            try encodeContainer.encode(allowNotifications.rawValue, forKey: .allowNotifications)
        }
        if let filterRule = self.filterRule {
            try encodeContainer.encode(filterRule, forKey: .filterRule)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allowNotificationsDecoded = try containerValues.decodeIfPresent(ChimeSdkMessagingClientTypes.AllowNotifications.self, forKey: .allowNotifications)
        allowNotifications = allowNotificationsDecoded
        let filterRuleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filterRule)
        filterRule = filterRuleDecoded
    }
}
