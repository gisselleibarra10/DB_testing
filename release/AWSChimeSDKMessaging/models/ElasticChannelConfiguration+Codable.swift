// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ChimeSdkMessagingClientTypes.ElasticChannelConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maximumSubChannels = "MaximumSubChannels"
        case minimumMembershipPercentage = "MinimumMembershipPercentage"
        case targetMembershipsPerSubChannel = "TargetMembershipsPerSubChannel"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maximumSubChannels = self.maximumSubChannels {
            try encodeContainer.encode(maximumSubChannels, forKey: .maximumSubChannels)
        }
        if let minimumMembershipPercentage = self.minimumMembershipPercentage {
            try encodeContainer.encode(minimumMembershipPercentage, forKey: .minimumMembershipPercentage)
        }
        if let targetMembershipsPerSubChannel = self.targetMembershipsPerSubChannel {
            try encodeContainer.encode(targetMembershipsPerSubChannel, forKey: .targetMembershipsPerSubChannel)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maximumSubChannelsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maximumSubChannels)
        maximumSubChannels = maximumSubChannelsDecoded
        let targetMembershipsPerSubChannelDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .targetMembershipsPerSubChannel)
        targetMembershipsPerSubChannel = targetMembershipsPerSubChannelDecoded
        let minimumMembershipPercentageDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .minimumMembershipPercentage)
        minimumMembershipPercentage = minimumMembershipPercentageDecoded
    }
}
