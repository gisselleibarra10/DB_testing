// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListChannelFlowsOutputResponseBody: Swift.Equatable {
    let channelFlows: [ChimeSdkMessagingClientTypes.ChannelFlowSummary]?
    let nextToken: Swift.String?
}

extension ListChannelFlowsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channelFlows = "ChannelFlows"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelFlowsContainer = try containerValues.decodeIfPresent([ChimeSdkMessagingClientTypes.ChannelFlowSummary?].self, forKey: .channelFlows)
        var channelFlowsDecoded0:[ChimeSdkMessagingClientTypes.ChannelFlowSummary]? = nil
        if let channelFlowsContainer = channelFlowsContainer {
            channelFlowsDecoded0 = [ChimeSdkMessagingClientTypes.ChannelFlowSummary]()
            for structure0 in channelFlowsContainer {
                if let structure0 = structure0 {
                    channelFlowsDecoded0?.append(structure0)
                }
            }
        }
        channelFlows = channelFlowsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
