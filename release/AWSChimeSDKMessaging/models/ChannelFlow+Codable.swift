// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ChimeSdkMessagingClientTypes.ChannelFlow: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channelFlowArn = "ChannelFlowArn"
        case createdTimestamp = "CreatedTimestamp"
        case lastUpdatedTimestamp = "LastUpdatedTimestamp"
        case name = "Name"
        case processors = "Processors"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let channelFlowArn = self.channelFlowArn {
            try encodeContainer.encode(channelFlowArn, forKey: .channelFlowArn)
        }
        if let createdTimestamp = self.createdTimestamp {
            try encodeContainer.encode(createdTimestamp.timeIntervalSince1970, forKey: .createdTimestamp)
        }
        if let lastUpdatedTimestamp = self.lastUpdatedTimestamp {
            try encodeContainer.encode(lastUpdatedTimestamp.timeIntervalSince1970, forKey: .lastUpdatedTimestamp)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let processors = processors {
            var processorsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .processors)
            for processorlist0 in processors {
                try processorsContainer.encode(processorlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelFlowArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .channelFlowArn)
        channelFlowArn = channelFlowArnDecoded
        let processorsContainer = try containerValues.decodeIfPresent([ChimeSdkMessagingClientTypes.Processor?].self, forKey: .processors)
        var processorsDecoded0:[ChimeSdkMessagingClientTypes.Processor]? = nil
        if let processorsContainer = processorsContainer {
            processorsDecoded0 = [ChimeSdkMessagingClientTypes.Processor]()
            for structure0 in processorsContainer {
                if let structure0 = structure0 {
                    processorsDecoded0?.append(structure0)
                }
            }
        }
        processors = processorsDecoded0
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let createdTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdTimestamp)
        createdTimestamp = createdTimestampDecoded
        let lastUpdatedTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedTimestamp)
        lastUpdatedTimestamp = lastUpdatedTimestampDecoded
    }
}
