// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendChannelMessageInputBody: Swift.Equatable {
    let content: Swift.String?
    let type: ChimeSdkMessagingClientTypes.ChannelMessageType?
    let persistence: ChimeSdkMessagingClientTypes.ChannelMessagePersistenceType?
    let metadata: Swift.String?
    let clientRequestToken: Swift.String?
    let pushNotification: ChimeSdkMessagingClientTypes.PushNotificationConfiguration?
    let messageAttributes: [Swift.String:ChimeSdkMessagingClientTypes.MessageAttributeValue]?
    let subChannelId: Swift.String?
}

extension SendChannelMessageInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case content = "Content"
        case messageAttributes = "MessageAttributes"
        case metadata = "Metadata"
        case persistence = "Persistence"
        case pushNotification = "PushNotification"
        case subChannelId = "SubChannelId"
        case type = "Type"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .content)
        content = contentDecoded
        let typeDecoded = try containerValues.decodeIfPresent(ChimeSdkMessagingClientTypes.ChannelMessageType.self, forKey: .type)
        type = typeDecoded
        let persistenceDecoded = try containerValues.decodeIfPresent(ChimeSdkMessagingClientTypes.ChannelMessagePersistenceType.self, forKey: .persistence)
        persistence = persistenceDecoded
        let metadataDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metadata)
        metadata = metadataDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let pushNotificationDecoded = try containerValues.decodeIfPresent(ChimeSdkMessagingClientTypes.PushNotificationConfiguration.self, forKey: .pushNotification)
        pushNotification = pushNotificationDecoded
        let messageAttributesContainer = try containerValues.decodeIfPresent([Swift.String: ChimeSdkMessagingClientTypes.MessageAttributeValue?].self, forKey: .messageAttributes)
        var messageAttributesDecoded0: [Swift.String:ChimeSdkMessagingClientTypes.MessageAttributeValue]? = nil
        if let messageAttributesContainer = messageAttributesContainer {
            messageAttributesDecoded0 = [Swift.String:ChimeSdkMessagingClientTypes.MessageAttributeValue]()
            for (key0, messageattributevalue0) in messageAttributesContainer {
                if let messageattributevalue0 = messageattributevalue0 {
                    messageAttributesDecoded0?[key0] = messageattributevalue0
                }
            }
        }
        messageAttributes = messageAttributesDecoded0
        let subChannelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subChannelId)
        subChannelId = subChannelIdDecoded
    }
}
