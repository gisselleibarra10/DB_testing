// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSubChannelsOutputResponseBody: Swift.Equatable {
    let channelArn: Swift.String?
    let subChannels: [ChimeSdkMessagingClientTypes.SubChannelSummary]?
    let nextToken: Swift.String?
}

extension ListSubChannelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channelArn = "ChannelArn"
        case nextToken = "NextToken"
        case subChannels = "SubChannels"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .channelArn)
        channelArn = channelArnDecoded
        let subChannelsContainer = try containerValues.decodeIfPresent([ChimeSdkMessagingClientTypes.SubChannelSummary?].self, forKey: .subChannels)
        var subChannelsDecoded0:[ChimeSdkMessagingClientTypes.SubChannelSummary]? = nil
        if let subChannelsContainer = subChannelsContainer {
            subChannelsDecoded0 = [ChimeSdkMessagingClientTypes.SubChannelSummary]()
            for structure0 in subChannelsContainer {
                if let structure0 = structure0 {
                    subChannelsDecoded0?.append(structure0)
                }
            }
        }
        subChannels = subChannelsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
