// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetPreparedStatementOutputResponseBody: Swift.Equatable {
    let preparedStatements: [AthenaClientTypes.PreparedStatement]?
    let unprocessedPreparedStatementNames: [AthenaClientTypes.UnprocessedPreparedStatementName]?
}

extension BatchGetPreparedStatementOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case preparedStatements = "PreparedStatements"
        case unprocessedPreparedStatementNames = "UnprocessedPreparedStatementNames"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let preparedStatementsContainer = try containerValues.decodeIfPresent([AthenaClientTypes.PreparedStatement?].self, forKey: .preparedStatements)
        var preparedStatementsDecoded0:[AthenaClientTypes.PreparedStatement]? = nil
        if let preparedStatementsContainer = preparedStatementsContainer {
            preparedStatementsDecoded0 = [AthenaClientTypes.PreparedStatement]()
            for structure0 in preparedStatementsContainer {
                if let structure0 = structure0 {
                    preparedStatementsDecoded0?.append(structure0)
                }
            }
        }
        preparedStatements = preparedStatementsDecoded0
        let unprocessedPreparedStatementNamesContainer = try containerValues.decodeIfPresent([AthenaClientTypes.UnprocessedPreparedStatementName?].self, forKey: .unprocessedPreparedStatementNames)
        var unprocessedPreparedStatementNamesDecoded0:[AthenaClientTypes.UnprocessedPreparedStatementName]? = nil
        if let unprocessedPreparedStatementNamesContainer = unprocessedPreparedStatementNamesContainer {
            unprocessedPreparedStatementNamesDecoded0 = [AthenaClientTypes.UnprocessedPreparedStatementName]()
            for structure0 in unprocessedPreparedStatementNamesContainer {
                if let structure0 = structure0 {
                    unprocessedPreparedStatementNamesDecoded0?.append(structure0)
                }
            }
        }
        unprocessedPreparedStatementNames = unprocessedPreparedStatementNamesDecoded0
    }
}
