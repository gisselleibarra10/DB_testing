// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AthenaClientTypes.QueryRuntimeStatisticsRows: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inputBytes = "InputBytes"
        case inputRows = "InputRows"
        case outputBytes = "OutputBytes"
        case outputRows = "OutputRows"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inputBytes = self.inputBytes {
            try encodeContainer.encode(inputBytes, forKey: .inputBytes)
        }
        if let inputRows = self.inputRows {
            try encodeContainer.encode(inputRows, forKey: .inputRows)
        }
        if let outputBytes = self.outputBytes {
            try encodeContainer.encode(outputBytes, forKey: .outputBytes)
        }
        if let outputRows = self.outputRows {
            try encodeContainer.encode(outputRows, forKey: .outputRows)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputRowsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .inputRows)
        inputRows = inputRowsDecoded
        let inputBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .inputBytes)
        inputBytes = inputBytesDecoded
        let outputBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .outputBytes)
        outputBytes = outputBytesDecoded
        let outputRowsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .outputRows)
        outputRows = outputRowsDecoded
    }
}
