// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetPreparedStatementInputBody: Swift.Equatable {
    let preparedStatementNames: [Swift.String]?
    let workGroup: Swift.String?
}

extension BatchGetPreparedStatementInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case preparedStatementNames = "PreparedStatementNames"
        case workGroup = "WorkGroup"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let preparedStatementNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .preparedStatementNames)
        var preparedStatementNamesDecoded0:[Swift.String]? = nil
        if let preparedStatementNamesContainer = preparedStatementNamesContainer {
            preparedStatementNamesDecoded0 = [Swift.String]()
            for string0 in preparedStatementNamesContainer {
                if let string0 = string0 {
                    preparedStatementNamesDecoded0?.append(string0)
                }
            }
        }
        preparedStatementNames = preparedStatementNamesDecoded0
        let workGroupDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .workGroup)
        workGroup = workGroupDecoded
    }
}
