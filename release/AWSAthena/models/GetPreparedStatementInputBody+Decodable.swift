// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetPreparedStatementInputBody: Swift.Equatable {
    let statementName: Swift.String?
    let workGroup: Swift.String?
}

extension GetPreparedStatementInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case statementName = "StatementName"
        case workGroup = "WorkGroup"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statementNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statementName)
        statementName = statementNameDecoded
        let workGroupDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .workGroup)
        workGroup = workGroupDecoded
    }
}
