// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AthenaClientTypes {
    /// Stage statistics such as input and output rows and bytes, execution time and stage state. This information also includes substages and the query stage plan.
    public struct QueryStage: Swift.Equatable {
        /// Time taken to execute this stage.
        public var executionTime: Swift.Int?
        /// The number of bytes input into the stage for execution.
        public var inputBytes: Swift.Int?
        /// The number of rows input into the stage for execution.
        public var inputRows: Swift.Int?
        /// The number of bytes output from the stage after execution.
        public var outputBytes: Swift.Int?
        /// The number of rows output from the stage after execution.
        public var outputRows: Swift.Int?
        /// Stage plan information such as name, identifier, sub plans, and source stages.
        public var queryStagePlan: AthenaClientTypes.QueryStagePlanNode?
        /// The identifier for a stage.
        public var stageId: Swift.Int?
        /// State of the stage after query execution.
        public var state: Swift.String?
        /// List of sub query stages that form this stage execution plan.
        public var subStages: [AthenaClientTypes.QueryStage]?

        public init (
            executionTime: Swift.Int? = nil,
            inputBytes: Swift.Int? = nil,
            inputRows: Swift.Int? = nil,
            outputBytes: Swift.Int? = nil,
            outputRows: Swift.Int? = nil,
            queryStagePlan: AthenaClientTypes.QueryStagePlanNode? = nil,
            stageId: Swift.Int? = nil,
            state: Swift.String? = nil,
            subStages: [AthenaClientTypes.QueryStage]? = nil
        )
        {
            self.executionTime = executionTime
            self.inputBytes = inputBytes
            self.inputRows = inputRows
            self.outputBytes = outputBytes
            self.outputRows = outputRows
            self.queryStagePlan = queryStagePlan
            self.stageId = stageId
            self.state = state
            self.subStages = subStages
        }
    }

}
