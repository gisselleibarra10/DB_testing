// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AccessAnalyzerClientTypes {
    /// A finding in a policy. Each finding is an actionable recommendation that can be used to improve the policy.
    public struct ValidatePolicyFinding: Swift.Equatable {
        /// A localized message that explains the finding and provides guidance on how to address it.
        /// This member is required.
        public var findingDetails: Swift.String?
        /// The impact of the finding. Security warnings report when the policy allows access that we consider overly permissive. Errors report when a part of the policy is not functional. Warnings report non-security issues when a policy does not conform to policy writing best practices. Suggestions recommend stylistic improvements in the policy that do not impact access.
        /// This member is required.
        public var findingType: AccessAnalyzerClientTypes.ValidatePolicyFindingType?
        /// The issue code provides an identifier of the issue associated with this finding.
        /// This member is required.
        public var issueCode: Swift.String?
        /// A link to additional documentation about the type of finding.
        /// This member is required.
        public var learnMoreLink: Swift.String?
        /// The list of locations in the policy document that are related to the finding. The issue code provides a summary of an issue identified by the finding.
        /// This member is required.
        public var locations: [AccessAnalyzerClientTypes.Location]?

        public init (
            findingDetails: Swift.String? = nil,
            findingType: AccessAnalyzerClientTypes.ValidatePolicyFindingType? = nil,
            issueCode: Swift.String? = nil,
            learnMoreLink: Swift.String? = nil,
            locations: [AccessAnalyzerClientTypes.Location]? = nil
        )
        {
            self.findingDetails = findingDetails
            self.findingType = findingType
            self.issueCode = issueCode
            self.learnMoreLink = learnMoreLink
            self.locations = locations
        }
    }

}
