// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AccessAnalyzerClientTypes.AnalyzedResourceSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceArn
        case resourceOwnerAccount
        case resourceType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourceArn = self.resourceArn {
            try encodeContainer.encode(resourceArn, forKey: .resourceArn)
        }
        if let resourceOwnerAccount = self.resourceOwnerAccount {
            try encodeContainer.encode(resourceOwnerAccount, forKey: .resourceOwnerAccount)
        }
        if let resourceType = self.resourceType {
            try encodeContainer.encode(resourceType.rawValue, forKey: .resourceType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let resourceOwnerAccountDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceOwnerAccount)
        resourceOwnerAccount = resourceOwnerAccountDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(AccessAnalyzerClientTypes.ResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
    }
}
