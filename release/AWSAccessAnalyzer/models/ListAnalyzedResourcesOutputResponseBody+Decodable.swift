// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAnalyzedResourcesOutputResponseBody: Swift.Equatable {
    let analyzedResources: [AccessAnalyzerClientTypes.AnalyzedResourceSummary]?
    let nextToken: Swift.String?
}

extension ListAnalyzedResourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case analyzedResources
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let analyzedResourcesContainer = try containerValues.decodeIfPresent([AccessAnalyzerClientTypes.AnalyzedResourceSummary?].self, forKey: .analyzedResources)
        var analyzedResourcesDecoded0:[AccessAnalyzerClientTypes.AnalyzedResourceSummary]? = nil
        if let analyzedResourcesContainer = analyzedResourcesContainer {
            analyzedResourcesDecoded0 = [AccessAnalyzerClientTypes.AnalyzedResourceSummary]()
            for structure0 in analyzedResourcesContainer {
                if let structure0 = structure0 {
                    analyzedResourcesDecoded0?.append(structure0)
                }
            }
        }
        analyzedResources = analyzedResourcesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
