// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPolicyGenerationsOutputResponseBody: Swift.Equatable {
    let policyGenerations: [AccessAnalyzerClientTypes.PolicyGeneration]?
    let nextToken: Swift.String?
}

extension ListPolicyGenerationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case policyGenerations
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyGenerationsContainer = try containerValues.decodeIfPresent([AccessAnalyzerClientTypes.PolicyGeneration?].self, forKey: .policyGenerations)
        var policyGenerationsDecoded0:[AccessAnalyzerClientTypes.PolicyGeneration]? = nil
        if let policyGenerationsContainer = policyGenerationsContainer {
            policyGenerationsDecoded0 = [AccessAnalyzerClientTypes.PolicyGeneration]()
            for structure0 in policyGenerationsContainer {
                if let structure0 = structure0 {
                    policyGenerationsDecoded0?.append(structure0)
                }
            }
        }
        policyGenerations = policyGenerationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
