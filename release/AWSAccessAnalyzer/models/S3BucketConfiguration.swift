// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AccessAnalyzerClientTypes {
    /// Proposed access control configuration for an Amazon S3 bucket. You can propose a configuration for a new Amazon S3 bucket or an existing Amazon S3 bucket that you own by specifying the Amazon S3 bucket policy, bucket ACLs, bucket BPA settings, Amazon S3 access points, and multi-region access points attached to the bucket. If the configuration is for an existing Amazon S3 bucket and you do not specify the Amazon S3 bucket policy, the access preview uses the existing policy attached to the bucket. If the access preview is for a new resource and you do not specify the Amazon S3 bucket policy, the access preview assumes a bucket without a policy. To propose deletion of an existing bucket policy, you can specify an empty string. For more information about bucket policy limits, see [Bucket Policy Examples](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html).
    public struct S3BucketConfiguration: Swift.Equatable {
        /// The configuration of Amazon S3 access points or multi-region access points for the bucket. You can propose up to 10 new access points per bucket.
        public var accessPoints: [Swift.String:AccessAnalyzerClientTypes.S3AccessPointConfiguration]?
        /// The proposed list of ACL grants for the Amazon S3 bucket. You can propose up to 100 ACL grants per bucket. If the proposed grant configuration is for an existing bucket, the access preview uses the proposed list of grant configurations in place of the existing grants. Otherwise, the access preview uses the existing grants for the bucket.
        public var bucketAclGrants: [AccessAnalyzerClientTypes.S3BucketAclGrantConfiguration]?
        /// The proposed bucket policy for the Amazon S3 bucket.
        public var bucketPolicy: Swift.String?
        /// The proposed block public access configuration for the Amazon S3 bucket.
        public var bucketPublicAccessBlock: AccessAnalyzerClientTypes.S3PublicAccessBlockConfiguration?

        public init (
            accessPoints: [Swift.String:AccessAnalyzerClientTypes.S3AccessPointConfiguration]? = nil,
            bucketAclGrants: [AccessAnalyzerClientTypes.S3BucketAclGrantConfiguration]? = nil,
            bucketPolicy: Swift.String? = nil,
            bucketPublicAccessBlock: AccessAnalyzerClientTypes.S3PublicAccessBlockConfiguration? = nil
        )
        {
            self.accessPoints = accessPoints
            self.bucketAclGrants = bucketAclGrants
            self.bucketPolicy = bucketPolicy
            self.bucketPublicAccessBlock = bucketPublicAccessBlock
        }
    }

}
