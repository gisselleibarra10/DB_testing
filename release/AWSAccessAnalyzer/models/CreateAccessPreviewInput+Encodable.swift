// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateAccessPreviewInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case analyzerArn
        case clientToken
        case configurations
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let analyzerArn = self.analyzerArn {
            try encodeContainer.encode(analyzerArn, forKey: .analyzerArn)
        }
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let configurations = configurations {
            var configurationsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .configurations)
            for (dictKey0, configurationsmap0) in configurations {
                try configurationsContainer.encode(configurationsmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
