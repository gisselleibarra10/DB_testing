// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateArchiveRuleInputBody: Swift.Equatable {
    let ruleName: Swift.String?
    let filter: [Swift.String:AccessAnalyzerClientTypes.Criterion]?
    let clientToken: Swift.String?
}

extension CreateArchiveRuleInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken
        case filter
        case ruleName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ruleName)
        ruleName = ruleNameDecoded
        let filterContainer = try containerValues.decodeIfPresent([Swift.String: AccessAnalyzerClientTypes.Criterion?].self, forKey: .filter)
        var filterDecoded0: [Swift.String:AccessAnalyzerClientTypes.Criterion]? = nil
        if let filterContainer = filterContainer {
            filterDecoded0 = [Swift.String:AccessAnalyzerClientTypes.Criterion]()
            for (key0, criterion0) in filterContainer {
                if let criterion0 = criterion0 {
                    filterDecoded0?[key0] = criterion0
                }
            }
        }
        filter = filterDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
