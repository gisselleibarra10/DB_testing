// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AccessAnalyzerClientTypes {
    public enum JobErrorCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case authorizationError
        case resourceNotFoundError
        case serviceError
        case serviceQuotaExceededError
        case sdkUnknown(Swift.String)

        public static var allCases: [JobErrorCode] {
            return [
                .authorizationError,
                .resourceNotFoundError,
                .serviceError,
                .serviceQuotaExceededError,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .authorizationError: return "AUTHORIZATION_ERROR"
            case .resourceNotFoundError: return "RESOURCE_NOT_FOUND_ERROR"
            case .serviceError: return "SERVICE_ERROR"
            case .serviceQuotaExceededError: return "SERVICE_QUOTA_EXCEEDED_ERROR"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = JobErrorCode(rawValue: rawValue) ?? JobErrorCode.sdkUnknown(rawValue)
        }
    }
}
