// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateAccessPreviewInputBody: Swift.Equatable {
    let analyzerArn: Swift.String?
    let configurations: [Swift.String:AccessAnalyzerClientTypes.Configuration]?
    let clientToken: Swift.String?
}

extension CreateAccessPreviewInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case analyzerArn
        case clientToken
        case configurations
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let analyzerArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .analyzerArn)
        analyzerArn = analyzerArnDecoded
        let configurationsContainer = try containerValues.decodeIfPresent([Swift.String: AccessAnalyzerClientTypes.Configuration?].self, forKey: .configurations)
        var configurationsDecoded0: [Swift.String:AccessAnalyzerClientTypes.Configuration]? = nil
        if let configurationsContainer = configurationsContainer {
            configurationsDecoded0 = [Swift.String:AccessAnalyzerClientTypes.Configuration]()
            for (key0, configuration0) in configurationsContainer {
                if let configuration0 = configuration0 {
                    configurationsDecoded0?[key0] = configuration0
                }
            }
        }
        configurations = configurationsDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
