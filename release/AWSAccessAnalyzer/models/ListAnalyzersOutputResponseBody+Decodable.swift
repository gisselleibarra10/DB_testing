// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAnalyzersOutputResponseBody: Swift.Equatable {
    let analyzers: [AccessAnalyzerClientTypes.AnalyzerSummary]?
    let nextToken: Swift.String?
}

extension ListAnalyzersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case analyzers
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let analyzersContainer = try containerValues.decodeIfPresent([AccessAnalyzerClientTypes.AnalyzerSummary?].self, forKey: .analyzers)
        var analyzersDecoded0:[AccessAnalyzerClientTypes.AnalyzerSummary]? = nil
        if let analyzersContainer = analyzersContainer {
            analyzersDecoded0 = [AccessAnalyzerClientTypes.AnalyzerSummary]()
            for structure0 in analyzersContainer {
                if let structure0 = structure0 {
                    analyzersDecoded0?.append(structure0)
                }
            }
        }
        analyzers = analyzersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
