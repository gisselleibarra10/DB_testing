// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAccessPreviewsOutputResponseBody: Swift.Equatable {
    let accessPreviews: [AccessAnalyzerClientTypes.AccessPreviewSummary]?
    let nextToken: Swift.String?
}

extension ListAccessPreviewsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessPreviews
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessPreviewsContainer = try containerValues.decodeIfPresent([AccessAnalyzerClientTypes.AccessPreviewSummary?].self, forKey: .accessPreviews)
        var accessPreviewsDecoded0:[AccessAnalyzerClientTypes.AccessPreviewSummary]? = nil
        if let accessPreviewsContainer = accessPreviewsContainer {
            accessPreviewsDecoded0 = [AccessAnalyzerClientTypes.AccessPreviewSummary]()
            for structure0 in accessPreviewsContainer {
                if let structure0 = structure0 {
                    accessPreviewsDecoded0?.append(structure0)
                }
            }
        }
        accessPreviews = accessPreviewsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
