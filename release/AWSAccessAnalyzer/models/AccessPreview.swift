// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AccessAnalyzerClientTypes {
    /// Contains information about an access preview.
    public struct AccessPreview: Swift.Equatable {
        /// The ARN of the analyzer used to generate the access preview.
        /// This member is required.
        public var analyzerArn: Swift.String?
        /// A map of resource ARNs for the proposed resource configuration.
        /// This member is required.
        public var configurations: [Swift.String:AccessAnalyzerClientTypes.Configuration]?
        /// The time at which the access preview was created.
        /// This member is required.
        public var createdAt: ClientRuntime.Date?
        /// The unique ID for the access preview.
        /// This member is required.
        public var id: Swift.String?
        /// The status of the access preview.
        ///
        /// * Creating - The access preview creation is in progress.
        ///
        /// * Completed - The access preview is complete. You can preview findings for external access to the resource.
        ///
        /// * Failed - The access preview creation has failed.
        /// This member is required.
        public var status: AccessAnalyzerClientTypes.AccessPreviewStatus?
        /// Provides more details about the current status of the access preview. For example, if the creation of the access preview fails, a Failed status is returned. This failure can be due to an internal issue with the analysis or due to an invalid resource configuration.
        public var statusReason: AccessAnalyzerClientTypes.AccessPreviewStatusReason?

        public init (
            analyzerArn: Swift.String? = nil,
            configurations: [Swift.String:AccessAnalyzerClientTypes.Configuration]? = nil,
            createdAt: ClientRuntime.Date? = nil,
            id: Swift.String? = nil,
            status: AccessAnalyzerClientTypes.AccessPreviewStatus? = nil,
            statusReason: AccessAnalyzerClientTypes.AccessPreviewStatusReason? = nil
        )
        {
            self.analyzerArn = analyzerArn
            self.configurations = configurations
            self.createdAt = createdAt
            self.id = id
            self.status = status
            self.statusReason = statusReason
        }
    }

}
