// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModelErrorBody: Swift.Equatable {
    let message: Swift.String?
    let originalStatusCode: Swift.Int?
    let originalMessage: Swift.String?
    let logStreamArn: Swift.String?
}

extension ModelErrorBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case logStreamArn = "LogStreamArn"
        case message = "Message"
        case originalMessage = "OriginalMessage"
        case originalStatusCode = "OriginalStatusCode"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let originalStatusCodeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .originalStatusCode)
        originalStatusCode = originalStatusCodeDecoded
        let originalMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .originalMessage)
        originalMessage = originalMessageDecoded
        let logStreamArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logStreamArn)
        logStreamArn = logStreamArnDecoded
    }
}
