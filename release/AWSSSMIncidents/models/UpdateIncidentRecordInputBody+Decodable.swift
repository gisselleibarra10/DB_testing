// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateIncidentRecordInputBody: Swift.Equatable {
    let clientToken: Swift.String?
    let arn: Swift.String?
    let title: Swift.String?
    let summary: Swift.String?
    let impact: Swift.Int?
    let status: SsmIncidentsClientTypes.IncidentRecordStatus?
    let chatChannel: SsmIncidentsClientTypes.ChatChannel?
    let notificationTargets: [SsmIncidentsClientTypes.NotificationTargetItem]?
}

extension UpdateIncidentRecordInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case chatChannel
        case clientToken
        case impact
        case notificationTargets
        case status
        case summary
        case title
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let titleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .title)
        title = titleDecoded
        let summaryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .summary)
        summary = summaryDecoded
        let impactDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .impact)
        impact = impactDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SsmIncidentsClientTypes.IncidentRecordStatus.self, forKey: .status)
        status = statusDecoded
        let chatChannelDecoded = try containerValues.decodeIfPresent(SsmIncidentsClientTypes.ChatChannel.self, forKey: .chatChannel)
        chatChannel = chatChannelDecoded
        let notificationTargetsContainer = try containerValues.decodeIfPresent([SsmIncidentsClientTypes.NotificationTargetItem?].self, forKey: .notificationTargets)
        var notificationTargetsDecoded0:[SsmIncidentsClientTypes.NotificationTargetItem]? = nil
        if let notificationTargetsContainer = notificationTargetsContainer {
            notificationTargetsDecoded0 = [SsmIncidentsClientTypes.NotificationTargetItem]()
            for union0 in notificationTargetsContainer {
                if let union0 = union0 {
                    notificationTargetsDecoded0?.append(union0)
                }
            }
        }
        notificationTargets = notificationTargetsDecoded0
    }
}
