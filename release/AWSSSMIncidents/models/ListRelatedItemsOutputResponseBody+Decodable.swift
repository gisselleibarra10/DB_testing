// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRelatedItemsOutputResponseBody: Swift.Equatable {
    let relatedItems: [SsmIncidentsClientTypes.RelatedItem]?
    let nextToken: Swift.String?
}

extension ListRelatedItemsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case relatedItems
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relatedItemsContainer = try containerValues.decodeIfPresent([SsmIncidentsClientTypes.RelatedItem?].self, forKey: .relatedItems)
        var relatedItemsDecoded0:[SsmIncidentsClientTypes.RelatedItem]? = nil
        if let relatedItemsContainer = relatedItemsContainer {
            relatedItemsDecoded0 = [SsmIncidentsClientTypes.RelatedItem]()
            for structure0 in relatedItemsContainer {
                if let structure0 = structure0 {
                    relatedItemsDecoded0?.append(structure0)
                }
            }
        }
        relatedItems = relatedItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
