// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTimelineEventInputBody: Swift.Equatable {
    let clientToken: Swift.String?
    let incidentRecordArn: Swift.String?
    let eventId: Swift.String?
    let eventTime: ClientRuntime.Date?
    let eventType: Swift.String?
    let eventData: Swift.String?
}

extension UpdateTimelineEventInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken
        case eventData
        case eventId
        case eventTime
        case eventType
        case incidentRecordArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let incidentRecordArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .incidentRecordArn)
        incidentRecordArn = incidentRecordArnDecoded
        let eventIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventId)
        eventId = eventIdDecoded
        let eventTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .eventTime)
        eventTime = eventTimeDecoded
        let eventTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventType)
        eventType = eventTypeDecoded
        let eventDataDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventData)
        eventData = eventDataDecoded
    }
}
