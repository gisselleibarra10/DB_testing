// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmIncidentsClientTypes.RegionInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case sseKmsKeyId
        case status
        case statusMessage
        case statusUpdateDateTime
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sseKmsKeyId = self.sseKmsKeyId {
            try encodeContainer.encode(sseKmsKeyId, forKey: .sseKmsKeyId)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let statusMessage = self.statusMessage {
            try encodeContainer.encode(statusMessage, forKey: .statusMessage)
        }
        if let statusUpdateDateTime = self.statusUpdateDateTime {
            try encodeContainer.encode(statusUpdateDateTime.timeIntervalSince1970, forKey: .statusUpdateDateTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sseKmsKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sseKmsKeyId)
        sseKmsKeyId = sseKmsKeyIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SsmIncidentsClientTypes.RegionStatus.self, forKey: .status)
        status = statusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let statusUpdateDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .statusUpdateDateTime)
        statusUpdateDateTime = statusUpdateDateTimeDecoded
    }
}
