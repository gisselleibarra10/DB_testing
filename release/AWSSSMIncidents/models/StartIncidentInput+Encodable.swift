// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartIncidentInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken
        case impact
        case relatedItems
        case responsePlanArn
        case title
        case triggerDetails
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let impact = self.impact {
            try encodeContainer.encode(impact, forKey: .impact)
        }
        if let relatedItems = relatedItems {
            var relatedItemsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .relatedItems)
            for relateditemlist0 in relatedItems {
                try relatedItemsContainer.encode(relateditemlist0)
            }
        }
        if let responsePlanArn = self.responsePlanArn {
            try encodeContainer.encode(responsePlanArn, forKey: .responsePlanArn)
        }
        if let title = self.title {
            try encodeContainer.encode(title, forKey: .title)
        }
        if let triggerDetails = self.triggerDetails {
            try encodeContainer.encode(triggerDetails, forKey: .triggerDetails)
        }
    }
}
