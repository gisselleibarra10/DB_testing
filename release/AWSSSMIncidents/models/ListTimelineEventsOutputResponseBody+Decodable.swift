// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTimelineEventsOutputResponseBody: Swift.Equatable {
    let eventSummaries: [SsmIncidentsClientTypes.EventSummary]?
    let nextToken: Swift.String?
}

extension ListTimelineEventsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventSummariesContainer = try containerValues.decodeIfPresent([SsmIncidentsClientTypes.EventSummary?].self, forKey: .eventSummaries)
        var eventSummariesDecoded0:[SsmIncidentsClientTypes.EventSummary]? = nil
        if let eventSummariesContainer = eventSummariesContainer {
            eventSummariesDecoded0 = [SsmIncidentsClientTypes.EventSummary]()
            for structure0 in eventSummariesContainer {
                if let structure0 = structure0 {
                    eventSummariesDecoded0?.append(structure0)
                }
            }
        }
        eventSummaries = eventSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
