// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResponsePlansOutputResponseBody: Swift.Equatable {
    let responsePlanSummaries: [SsmIncidentsClientTypes.ResponsePlanSummary]?
    let nextToken: Swift.String?
}

extension ListResponsePlansOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case responsePlanSummaries
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let responsePlanSummariesContainer = try containerValues.decodeIfPresent([SsmIncidentsClientTypes.ResponsePlanSummary?].self, forKey: .responsePlanSummaries)
        var responsePlanSummariesDecoded0:[SsmIncidentsClientTypes.ResponsePlanSummary]? = nil
        if let responsePlanSummariesContainer = responsePlanSummariesContainer {
            responsePlanSummariesDecoded0 = [SsmIncidentsClientTypes.ResponsePlanSummary]()
            for structure0 in responsePlanSummariesContainer {
                if let structure0 = structure0 {
                    responsePlanSummariesDecoded0?.append(structure0)
                }
            }
        }
        responsePlanSummaries = responsePlanSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
