// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkFirewallClientTypes.RuleDefinition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actions = "Actions"
        case matchAttributes = "MatchAttributes"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actions = actions {
            var actionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .actions)
            for statelessactions0 in actions {
                try actionsContainer.encode(statelessactions0)
            }
        }
        if let matchAttributes = self.matchAttributes {
            try encodeContainer.encode(matchAttributes, forKey: .matchAttributes)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let matchAttributesDecoded = try containerValues.decodeIfPresent(NetworkFirewallClientTypes.MatchAttributes.self, forKey: .matchAttributes)
        matchAttributes = matchAttributesDecoded
        let actionsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .actions)
        var actionsDecoded0:[Swift.String]? = nil
        if let actionsContainer = actionsContainer {
            actionsDecoded0 = [Swift.String]()
            for string0 in actionsContainer {
                if let string0 = string0 {
                    actionsDecoded0?.append(string0)
                }
            }
        }
        actions = actionsDecoded0
    }
}
