// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRuleGroupMetadataOutputResponseBody: Swift.Equatable {
    let ruleGroupArn: Swift.String?
    let ruleGroupName: Swift.String?
    let description: Swift.String?
    let type: NetworkFirewallClientTypes.RuleGroupType?
    let capacity: Swift.Int?
    let statefulRuleOptions: NetworkFirewallClientTypes.StatefulRuleOptions?
    let lastModifiedTime: ClientRuntime.Date?
}

extension DescribeRuleGroupMetadataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case capacity = "Capacity"
        case description = "Description"
        case lastModifiedTime = "LastModifiedTime"
        case ruleGroupArn = "RuleGroupArn"
        case ruleGroupName = "RuleGroupName"
        case statefulRuleOptions = "StatefulRuleOptions"
        case type = "Type"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ruleGroupArn)
        ruleGroupArn = ruleGroupArnDecoded
        let ruleGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ruleGroupName)
        ruleGroupName = ruleGroupNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let typeDecoded = try containerValues.decodeIfPresent(NetworkFirewallClientTypes.RuleGroupType.self, forKey: .type)
        type = typeDecoded
        let capacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .capacity)
        capacity = capacityDecoded
        let statefulRuleOptionsDecoded = try containerValues.decodeIfPresent(NetworkFirewallClientTypes.StatefulRuleOptions.self, forKey: .statefulRuleOptions)
        statefulRuleOptions = statefulRuleOptionsDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
    }
}
