// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFirewallPoliciesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let firewallPolicies: [NetworkFirewallClientTypes.FirewallPolicyMetadata]?
}

extension ListFirewallPoliciesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case firewallPolicies = "FirewallPolicies"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let firewallPoliciesContainer = try containerValues.decodeIfPresent([NetworkFirewallClientTypes.FirewallPolicyMetadata?].self, forKey: .firewallPolicies)
        var firewallPoliciesDecoded0:[NetworkFirewallClientTypes.FirewallPolicyMetadata]? = nil
        if let firewallPoliciesContainer = firewallPoliciesContainer {
            firewallPoliciesDecoded0 = [NetworkFirewallClientTypes.FirewallPolicyMetadata]()
            for structure0 in firewallPoliciesContainer {
                if let structure0 = structure0 {
                    firewallPoliciesDecoded0?.append(structure0)
                }
            }
        }
        firewallPolicies = firewallPoliciesDecoded0
    }
}
