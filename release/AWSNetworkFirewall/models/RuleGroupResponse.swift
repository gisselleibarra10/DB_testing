// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkFirewallClientTypes {
    /// The high-level properties of a rule group. This, along with the [RuleGroup], define the rule group. You can retrieve all objects for a rule group by calling [DescribeRuleGroup].
    public struct RuleGroupResponse: Swift.Equatable {
        /// The maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group. You can retrieve the capacity that would be required for a rule group before you create the rule group by calling [CreateRuleGroup] with DryRun set to TRUE.
        public var capacity: Swift.Int?
        /// The number of capacity units currently consumed by the rule group rules.
        public var consumedCapacity: Swift.Int?
        /// A description of the rule group.
        public var description: Swift.String?
        /// A complex type that contains the Amazon Web Services KMS encryption configuration settings for your rule group.
        public var encryptionConfiguration: NetworkFirewallClientTypes.EncryptionConfiguration?
        /// The last time that the rule group was changed.
        public var lastModifiedTime: ClientRuntime.Date?
        /// The number of firewall policies that use this rule group.
        public var numberOfAssociations: Swift.Int?
        /// The Amazon Resource Name (ARN) of the rule group. If this response is for a create request that had DryRun set to TRUE, then this ARN is a placeholder that isn't attached to a valid resource.
        /// This member is required.
        public var ruleGroupArn: Swift.String?
        /// The unique identifier for the rule group.
        /// This member is required.
        public var ruleGroupId: Swift.String?
        /// The descriptive name of the rule group. You can't change the name of a rule group after you create it.
        /// This member is required.
        public var ruleGroupName: Swift.String?
        /// Detailed information about the current status of a rule group.
        public var ruleGroupStatus: NetworkFirewallClientTypes.ResourceStatus?
        /// The Amazon resource name (ARN) of the Amazon Simple Notification Service SNS topic that's used to record changes to the managed rule group. You can subscribe to the SNS topic to receive notifications when the managed rule group is modified, such as for new versions and for version expiration. For more information, see the [Amazon Simple Notification Service Developer Guide.](https://docs.aws.amazon.com/sns/latest/dg/welcome.html).
        public var snsTopic: Swift.String?
        /// A complex type that contains metadata about the rule group that your own rule group is copied from. You can use the metadata to track the version updates made to the originating rule group.
        public var sourceMetadata: NetworkFirewallClientTypes.SourceMetadata?
        /// The key:value pairs to associate with the resource.
        public var tags: [NetworkFirewallClientTypes.Tag]?
        /// Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.
        public var type: NetworkFirewallClientTypes.RuleGroupType?

        public init (
            capacity: Swift.Int? = nil,
            consumedCapacity: Swift.Int? = nil,
            description: Swift.String? = nil,
            encryptionConfiguration: NetworkFirewallClientTypes.EncryptionConfiguration? = nil,
            lastModifiedTime: ClientRuntime.Date? = nil,
            numberOfAssociations: Swift.Int? = nil,
            ruleGroupArn: Swift.String? = nil,
            ruleGroupId: Swift.String? = nil,
            ruleGroupName: Swift.String? = nil,
            ruleGroupStatus: NetworkFirewallClientTypes.ResourceStatus? = nil,
            snsTopic: Swift.String? = nil,
            sourceMetadata: NetworkFirewallClientTypes.SourceMetadata? = nil,
            tags: [NetworkFirewallClientTypes.Tag]? = nil,
            type: NetworkFirewallClientTypes.RuleGroupType? = nil
        )
        {
            self.capacity = capacity
            self.consumedCapacity = consumedCapacity
            self.description = description
            self.encryptionConfiguration = encryptionConfiguration
            self.lastModifiedTime = lastModifiedTime
            self.numberOfAssociations = numberOfAssociations
            self.ruleGroupArn = ruleGroupArn
            self.ruleGroupId = ruleGroupId
            self.ruleGroupName = ruleGroupName
            self.ruleGroupStatus = ruleGroupStatus
            self.snsTopic = snsTopic
            self.sourceMetadata = sourceMetadata
            self.tags = tags
            self.type = type
        }
    }

}
