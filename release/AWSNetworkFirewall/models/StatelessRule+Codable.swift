// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkFirewallClientTypes.StatelessRule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case priority = "Priority"
        case ruleDefinition = "RuleDefinition"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if priority != 0 {
            try encodeContainer.encode(priority, forKey: .priority)
        }
        if let ruleDefinition = self.ruleDefinition {
            try encodeContainer.encode(ruleDefinition, forKey: .ruleDefinition)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleDefinitionDecoded = try containerValues.decodeIfPresent(NetworkFirewallClientTypes.RuleDefinition.self, forKey: .ruleDefinition)
        ruleDefinition = ruleDefinitionDecoded
        let priorityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .priority) ?? 0
        priority = priorityDecoded
    }
}
