// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRuleGroupsInputBody: Swift.Equatable {
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let scope: NetworkFirewallClientTypes.ResourceManagedStatus?
    let managedType: NetworkFirewallClientTypes.ResourceManagedType?
    let type: NetworkFirewallClientTypes.RuleGroupType?
}

extension ListRuleGroupsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case managedType = "ManagedType"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case scope = "Scope"
        case type = "Type"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let scopeDecoded = try containerValues.decodeIfPresent(NetworkFirewallClientTypes.ResourceManagedStatus.self, forKey: .scope)
        scope = scopeDecoded
        let managedTypeDecoded = try containerValues.decodeIfPresent(NetworkFirewallClientTypes.ResourceManagedType.self, forKey: .managedType)
        managedType = managedTypeDecoded
        let typeDecoded = try containerValues.decodeIfPresent(NetworkFirewallClientTypes.RuleGroupType.self, forKey: .type)
        type = typeDecoded
    }
}
