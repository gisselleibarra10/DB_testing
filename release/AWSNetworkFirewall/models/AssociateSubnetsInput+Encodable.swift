// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AssociateSubnetsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case firewallArn = "FirewallArn"
        case firewallName = "FirewallName"
        case subnetMappings = "SubnetMappings"
        case updateToken = "UpdateToken"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let firewallArn = self.firewallArn {
            try encodeContainer.encode(firewallArn, forKey: .firewallArn)
        }
        if let firewallName = self.firewallName {
            try encodeContainer.encode(firewallName, forKey: .firewallName)
        }
        if let subnetMappings = subnetMappings {
            var subnetMappingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .subnetMappings)
            for subnetmappings0 in subnetMappings {
                try subnetMappingsContainer.encode(subnetmappings0)
            }
        }
        if let updateToken = self.updateToken {
            try encodeContainer.encode(updateToken, forKey: .updateToken)
        }
    }
}
