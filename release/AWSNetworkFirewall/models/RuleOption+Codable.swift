// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkFirewallClientTypes.RuleOption: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case keyword = "Keyword"
        case settings = "Settings"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let keyword = self.keyword {
            try encodeContainer.encode(keyword, forKey: .keyword)
        }
        if let settings = settings {
            var settingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .settings)
            for settings0 in settings {
                try settingsContainer.encode(settings0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keywordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyword)
        keyword = keywordDecoded
        let settingsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .settings)
        var settingsDecoded0:[Swift.String]? = nil
        if let settingsContainer = settingsContainer {
            settingsDecoded0 = [Swift.String]()
            for string0 in settingsContainer {
                if let string0 = string0 {
                    settingsDecoded0?.append(string0)
                }
            }
        }
        settings = settingsDecoded0
    }
}
