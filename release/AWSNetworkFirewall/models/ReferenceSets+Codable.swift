// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkFirewallClientTypes.ReferenceSets: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case iPSetReferences = "IPSetReferences"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let iPSetReferences = iPSetReferences {
            var iPSetReferencesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .iPSetReferences)
            for (dictKey0, ipsetreferencemap0) in iPSetReferences {
                try iPSetReferencesContainer.encode(ipsetreferencemap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iPSetReferencesContainer = try containerValues.decodeIfPresent([Swift.String: NetworkFirewallClientTypes.IPSetReference?].self, forKey: .iPSetReferences)
        var iPSetReferencesDecoded0: [Swift.String:NetworkFirewallClientTypes.IPSetReference]? = nil
        if let iPSetReferencesContainer = iPSetReferencesContainer {
            iPSetReferencesDecoded0 = [Swift.String:NetworkFirewallClientTypes.IPSetReference]()
            for (key0, ipsetreference0) in iPSetReferencesContainer {
                if let ipsetreference0 = ipsetreference0 {
                    iPSetReferencesDecoded0?[key0] = ipsetreference0
                }
            }
        }
        iPSetReferences = iPSetReferencesDecoded0
    }
}
