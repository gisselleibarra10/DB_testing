// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension NetworkFirewallClientTypes {
    /// A single Suricata rules specification, for use in a stateful rule group. Use this option to specify a simple Suricata rule with protocol, source and destination, ports, direction, and rule options. For information about the Suricata Rules format, see [Rules Format](https://suricata.readthedocs.io/en/suricata-5.0.0/rules/intro.html#).
    public struct StatefulRule: Swift.Equatable {
        /// Defines what Network Firewall should do with the packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. The actions for a stateful rule are defined as follows:
        ///
        /// * PASS - Permits the packets to go to the intended destination.
        ///
        /// * DROP - Blocks the packets from going to the intended destination and sends an alert log message, if alert logging is configured in the [Firewall][LoggingConfiguration].
        ///
        /// * ALERT - Permits the packets to go to the intended destination and sends an alert log message, if alert logging is configured in the [Firewall][LoggingConfiguration]. You can use this action to test a rule that you intend to use to drop traffic. You can enable the rule with ALERT action, verify in the logs that the rule is filtering as you want, then change the action to DROP.
        /// This member is required.
        public var action: NetworkFirewallClientTypes.StatefulAction?
        /// The stateful inspection criteria for this rule, used to inspect traffic flows.
        /// This member is required.
        public var header: NetworkFirewallClientTypes.Header?
        /// Additional options for the rule. These are the Suricata RuleOptions settings.
        /// This member is required.
        public var ruleOptions: [NetworkFirewallClientTypes.RuleOption]?

        public init (
            action: NetworkFirewallClientTypes.StatefulAction? = nil,
            header: NetworkFirewallClientTypes.Header? = nil,
            ruleOptions: [NetworkFirewallClientTypes.RuleOption]? = nil
        )
        {
            self.action = action
            self.header = header
            self.ruleOptions = ruleOptions
        }
    }

}
