// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkFirewallClientTypes.SyncState: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attachment = "Attachment"
        case config = "Config"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attachment = self.attachment {
            try encodeContainer.encode(attachment, forKey: .attachment)
        }
        if let config = config {
            var configContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .config)
            for (dictKey0, syncstateconfig0) in config {
                try configContainer.encode(syncstateconfig0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachmentDecoded = try containerValues.decodeIfPresent(NetworkFirewallClientTypes.Attachment.self, forKey: .attachment)
        attachment = attachmentDecoded
        let configContainer = try containerValues.decodeIfPresent([Swift.String: NetworkFirewallClientTypes.PerObjectStatus?].self, forKey: .config)
        var configDecoded0: [Swift.String:NetworkFirewallClientTypes.PerObjectStatus]? = nil
        if let configContainer = configContainer {
            configDecoded0 = [Swift.String:NetworkFirewallClientTypes.PerObjectStatus]()
            for (key0, perobjectstatus0) in configContainer {
                if let perobjectstatus0 = perobjectstatus0 {
                    configDecoded0?[key0] = perobjectstatus0
                }
            }
        }
        config = configDecoded0
    }
}
