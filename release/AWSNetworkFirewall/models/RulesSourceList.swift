// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension NetworkFirewallClientTypes {
    /// Stateful inspection criteria for a domain list rule group. For HTTPS traffic, domain filtering is SNI-based. It uses the server name indicator extension of the TLS handshake. By default, Network Firewall domain list inspection only includes traffic coming from the VPC where you deploy the firewall. To inspect traffic from IP addresses outside of the deployment VPC, you set the HOME_NET rule variable to include the CIDR range of the deployment VPC plus the other CIDR ranges. For more information, see [RuleVariables] in this guide and [Stateful domain list rule groups in Network Firewall](https://docs.aws.amazon.com/network-firewall/latest/developerguide/stateful-rule-groups-domain-names.html) in the Network Firewall Developer Guide.
    public struct RulesSourceList: Swift.Equatable {
        /// Whether you want to allow or deny access to the domains in your target list.
        /// This member is required.
        public var generatedRulesType: NetworkFirewallClientTypes.GeneratedRulesType?
        /// The protocols you want to inspect. Specify TLS_SNI for HTTPS. Specify HTTP_HOST for HTTP. You can specify either or both.
        /// This member is required.
        public var targetTypes: [NetworkFirewallClientTypes.TargetType]?
        /// The domains that you want to inspect for in your traffic flows. Valid domain specifications are the following:
        ///
        /// * Explicit names. For example, abc.example.com matches only the domain abc.example.com.
        ///
        /// * Names that use a domain wildcard, which you indicate with an initial '.'. For example,.example.com matches example.com and matches all subdomains of example.com, such as abc.example.com and www.example.com.
        /// This member is required.
        public var targets: [Swift.String]?

        public init (
            generatedRulesType: NetworkFirewallClientTypes.GeneratedRulesType? = nil,
            targetTypes: [NetworkFirewallClientTypes.TargetType]? = nil,
            targets: [Swift.String]? = nil
        )
        {
            self.generatedRulesType = generatedRulesType
            self.targetTypes = targetTypes
            self.targets = targets
        }
    }

}
