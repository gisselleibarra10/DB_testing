// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkFirewallClientTypes.CIDRSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case availableCIDRCount = "AvailableCIDRCount"
        case iPSetReferences = "IPSetReferences"
        case utilizedCIDRCount = "UtilizedCIDRCount"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let availableCIDRCount = self.availableCIDRCount {
            try encodeContainer.encode(availableCIDRCount, forKey: .availableCIDRCount)
        }
        if let iPSetReferences = iPSetReferences {
            var iPSetReferencesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .iPSetReferences)
            for (dictKey0, ipsetmetadatamap0) in iPSetReferences {
                try iPSetReferencesContainer.encode(ipsetmetadatamap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let utilizedCIDRCount = self.utilizedCIDRCount {
            try encodeContainer.encode(utilizedCIDRCount, forKey: .utilizedCIDRCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let availableCIDRCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .availableCIDRCount)
        availableCIDRCount = availableCIDRCountDecoded
        let utilizedCIDRCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .utilizedCIDRCount)
        utilizedCIDRCount = utilizedCIDRCountDecoded
        let iPSetReferencesContainer = try containerValues.decodeIfPresent([Swift.String: NetworkFirewallClientTypes.IPSetMetadata?].self, forKey: .iPSetReferences)
        var iPSetReferencesDecoded0: [Swift.String:NetworkFirewallClientTypes.IPSetMetadata]? = nil
        if let iPSetReferencesContainer = iPSetReferencesContainer {
            iPSetReferencesDecoded0 = [Swift.String:NetworkFirewallClientTypes.IPSetMetadata]()
            for (key0, ipsetmetadata0) in iPSetReferencesContainer {
                if let ipsetmetadata0 = ipsetmetadata0 {
                    iPSetReferencesDecoded0?[key0] = ipsetmetadata0
                }
            }
        }
        iPSetReferences = iPSetReferencesDecoded0
    }
}
