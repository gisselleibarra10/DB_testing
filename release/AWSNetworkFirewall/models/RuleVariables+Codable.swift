// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkFirewallClientTypes.RuleVariables: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case iPSets = "IPSets"
        case portSets = "PortSets"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let iPSets = iPSets {
            var iPSetsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .iPSets)
            for (dictKey0, ipsets0) in iPSets {
                try iPSetsContainer.encode(ipsets0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let portSets = portSets {
            var portSetsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .portSets)
            for (dictKey0, portsets0) in portSets {
                try portSetsContainer.encode(portsets0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iPSetsContainer = try containerValues.decodeIfPresent([Swift.String: NetworkFirewallClientTypes.IPSet?].self, forKey: .iPSets)
        var iPSetsDecoded0: [Swift.String:NetworkFirewallClientTypes.IPSet]? = nil
        if let iPSetsContainer = iPSetsContainer {
            iPSetsDecoded0 = [Swift.String:NetworkFirewallClientTypes.IPSet]()
            for (key0, ipset0) in iPSetsContainer {
                if let ipset0 = ipset0 {
                    iPSetsDecoded0?[key0] = ipset0
                }
            }
        }
        iPSets = iPSetsDecoded0
        let portSetsContainer = try containerValues.decodeIfPresent([Swift.String: NetworkFirewallClientTypes.PortSet?].self, forKey: .portSets)
        var portSetsDecoded0: [Swift.String:NetworkFirewallClientTypes.PortSet]? = nil
        if let portSetsContainer = portSetsContainer {
            portSetsDecoded0 = [Swift.String:NetworkFirewallClientTypes.PortSet]()
            for (key0, portset0) in portSetsContainer {
                if let portset0 = portset0 {
                    portSetsDecoded0?[key0] = portset0
                }
            }
        }
        portSets = portSetsDecoded0
    }
}
