// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension NetworkFirewallClientTypes {
    public enum TCPFlag: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case ack
        case cwr
        case ece
        case fin
        case psh
        case rst
        case syn
        case urg
        case sdkUnknown(Swift.String)

        public static var allCases: [TCPFlag] {
            return [
                .ack,
                .cwr,
                .ece,
                .fin,
                .psh,
                .rst,
                .syn,
                .urg,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .ack: return "ACK"
            case .cwr: return "CWR"
            case .ece: return "ECE"
            case .fin: return "FIN"
            case .psh: return "PSH"
            case .rst: return "RST"
            case .syn: return "SYN"
            case .urg: return "URG"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = TCPFlag(rawValue: rawValue) ?? TCPFlag.sdkUnknown(rawValue)
        }
    }
}
