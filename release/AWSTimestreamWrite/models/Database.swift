// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TimestreamWriteClientTypes {
    /// A top level container for a table. Databases and tables are the fundamental management concepts in Amazon Timestream. All tables in a database are encrypted with the same KMS key.
    public struct Database: Swift.Equatable {
        /// The Amazon Resource Name that uniquely identifies this database.
        public var arn: Swift.String?
        /// The time when the database was created, calculated from the Unix epoch time.
        public var creationTime: ClientRuntime.Date?
        /// The name of the Timestream database.
        public var databaseName: Swift.String?
        /// The identifier of the KMS key used to encrypt the data stored in the database.
        public var kmsKeyId: Swift.String?
        /// The last time that this database was updated.
        public var lastUpdatedTime: ClientRuntime.Date?
        /// The total number of tables found within a Timestream database.
        public var tableCount: Swift.Int

        public init (
            arn: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            databaseName: Swift.String? = nil,
            kmsKeyId: Swift.String? = nil,
            lastUpdatedTime: ClientRuntime.Date? = nil,
            tableCount: Swift.Int = 0
        )
        {
            self.arn = arn
            self.creationTime = creationTime
            self.databaseName = databaseName
            self.kmsKeyId = kmsKeyId
            self.lastUpdatedTime = lastUpdatedTime
            self.tableCount = tableCount
        }
    }

}
