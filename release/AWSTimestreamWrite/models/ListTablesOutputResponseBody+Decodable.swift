// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTablesOutputResponseBody: Swift.Equatable {
    let tables: [TimestreamWriteClientTypes.Table]?
    let nextToken: Swift.String?
}

extension ListTablesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case tables = "Tables"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tablesContainer = try containerValues.decodeIfPresent([TimestreamWriteClientTypes.Table?].self, forKey: .tables)
        var tablesDecoded0:[TimestreamWriteClientTypes.Table]? = nil
        if let tablesContainer = tablesContainer {
            tablesDecoded0 = [TimestreamWriteClientTypes.Table]()
            for structure0 in tablesContainer {
                if let structure0 = structure0 {
                    tablesDecoded0?.append(structure0)
                }
            }
        }
        tables = tablesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
