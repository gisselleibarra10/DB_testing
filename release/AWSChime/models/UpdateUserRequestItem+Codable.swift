// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ChimeClientTypes.UpdateUserRequestItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alexaForBusinessMetadata = "AlexaForBusinessMetadata"
        case licenseType = "LicenseType"
        case userId = "UserId"
        case userType = "UserType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let alexaForBusinessMetadata = self.alexaForBusinessMetadata {
            try encodeContainer.encode(alexaForBusinessMetadata, forKey: .alexaForBusinessMetadata)
        }
        if let licenseType = self.licenseType {
            try encodeContainer.encode(licenseType.rawValue, forKey: .licenseType)
        }
        if let userId = self.userId {
            try encodeContainer.encode(userId, forKey: .userId)
        }
        if let userType = self.userType {
            try encodeContainer.encode(userType.rawValue, forKey: .userType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userId)
        userId = userIdDecoded
        let licenseTypeDecoded = try containerValues.decodeIfPresent(ChimeClientTypes.License.self, forKey: .licenseType)
        licenseType = licenseTypeDecoded
        let userTypeDecoded = try containerValues.decodeIfPresent(ChimeClientTypes.UserType.self, forKey: .userType)
        userType = userTypeDecoded
        let alexaForBusinessMetadataDecoded = try containerValues.decodeIfPresent(ChimeClientTypes.AlexaForBusinessMetadata.self, forKey: .alexaForBusinessMetadata)
        alexaForBusinessMetadata = alexaForBusinessMetadataDecoded
    }
}
