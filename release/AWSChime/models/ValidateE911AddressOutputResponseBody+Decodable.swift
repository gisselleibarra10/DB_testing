// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ValidateE911AddressOutputResponseBody: Swift.Equatable {
    let validationResult: Swift.Int
    let addressExternalId: Swift.String?
    let address: ChimeClientTypes.Address?
    let candidateAddressList: [ChimeClientTypes.CandidateAddress]?
}

extension ValidateE911AddressOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case address = "Address"
        case addressExternalId = "AddressExternalId"
        case candidateAddressList = "CandidateAddressList"
        case validationResult = "ValidationResult"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let validationResultDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .validationResult) ?? 0
        validationResult = validationResultDecoded
        let addressExternalIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .addressExternalId)
        addressExternalId = addressExternalIdDecoded
        let addressDecoded = try containerValues.decodeIfPresent(ChimeClientTypes.Address.self, forKey: .address)
        address = addressDecoded
        let candidateAddressListContainer = try containerValues.decodeIfPresent([ChimeClientTypes.CandidateAddress?].self, forKey: .candidateAddressList)
        var candidateAddressListDecoded0:[ChimeClientTypes.CandidateAddress]? = nil
        if let candidateAddressListContainer = candidateAddressListContainer {
            candidateAddressListDecoded0 = [ChimeClientTypes.CandidateAddress]()
            for structure0 in candidateAddressListContainer {
                if let structure0 = structure0 {
                    candidateAddressListDecoded0?.append(structure0)
                }
            }
        }
        candidateAddressList = candidateAddressListDecoded0
    }
}
