// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRoomMembershipsOutputResponseBody: Swift.Equatable {
    let roomMemberships: [ChimeClientTypes.RoomMembership]?
    let nextToken: Swift.String?
}

extension ListRoomMembershipsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case roomMemberships = "RoomMemberships"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roomMembershipsContainer = try containerValues.decodeIfPresent([ChimeClientTypes.RoomMembership?].self, forKey: .roomMemberships)
        var roomMembershipsDecoded0:[ChimeClientTypes.RoomMembership]? = nil
        if let roomMembershipsContainer = roomMembershipsContainer {
            roomMembershipsDecoded0 = [ChimeClientTypes.RoomMembership]()
            for structure0 in roomMembershipsContainer {
                if let structure0 = structure0 {
                    roomMembershipsDecoded0?.append(structure0)
                }
            }
        }
        roomMemberships = roomMembershipsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
