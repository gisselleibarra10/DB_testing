// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InviteUsersInputBody: Swift.Equatable {
    let userEmailList: [Swift.String]?
    let userType: ChimeClientTypes.UserType?
}

extension InviteUsersInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case userEmailList = "UserEmailList"
        case userType = "UserType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userEmailListContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .userEmailList)
        var userEmailListDecoded0:[Swift.String]? = nil
        if let userEmailListContainer = userEmailListContainer {
            userEmailListDecoded0 = [Swift.String]()
            for string0 in userEmailListContainer {
                if let string0 = string0 {
                    userEmailListDecoded0?.append(string0)
                }
            }
        }
        userEmailList = userEmailListDecoded0
        let userTypeDecoded = try containerValues.decodeIfPresent(ChimeClientTypes.UserType.self, forKey: .userType)
        userType = userTypeDecoded
    }
}
