// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ChimeClientTypes.RoomMembership: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case invitedBy = "InvitedBy"
        case member = "Member"
        case role = "Role"
        case roomId = "RoomId"
        case updatedTimestamp = "UpdatedTimestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let invitedBy = self.invitedBy {
            try encodeContainer.encode(invitedBy, forKey: .invitedBy)
        }
        if let member = self.member {
            try encodeContainer.encode(member, forKey: .member)
        }
        if let role = self.role {
            try encodeContainer.encode(role.rawValue, forKey: .role)
        }
        if let roomId = self.roomId {
            try encodeContainer.encode(roomId, forKey: .roomId)
        }
        if let updatedTimestamp = self.updatedTimestamp {
            try encodeContainer.encode(updatedTimestamp.timeIntervalSince1970, forKey: .updatedTimestamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roomIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roomId)
        roomId = roomIdDecoded
        let memberDecoded = try containerValues.decodeIfPresent(ChimeClientTypes.Member.self, forKey: .member)
        member = memberDecoded
        let roleDecoded = try containerValues.decodeIfPresent(ChimeClientTypes.RoomMembershipRole.self, forKey: .role)
        role = roleDecoded
        let invitedByDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .invitedBy)
        invitedBy = invitedByDecoded
        let updatedTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .updatedTimestamp)
        updatedTimestamp = updatedTimestampDecoded
    }
}
