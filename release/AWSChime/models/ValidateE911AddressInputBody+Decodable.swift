// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ValidateE911AddressInputBody: Swift.Equatable {
    let awsAccountId: Swift.String?
    let streetNumber: Swift.String?
    let streetInfo: Swift.String?
    let city: Swift.String?
    let state: Swift.String?
    let country: Swift.String?
    let postalCode: Swift.String?
}

extension ValidateE911AddressInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case awsAccountId = "AwsAccountId"
        case city = "City"
        case country = "Country"
        case postalCode = "PostalCode"
        case state = "State"
        case streetInfo = "StreetInfo"
        case streetNumber = "StreetNumber"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let awsAccountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .awsAccountId)
        awsAccountId = awsAccountIdDecoded
        let streetNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streetNumber)
        streetNumber = streetNumberDecoded
        let streetInfoDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streetInfo)
        streetInfo = streetInfoDecoded
        let cityDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .city)
        city = cityDecoded
        let stateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .state)
        state = stateDecoded
        let countryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .country)
        country = countryDecoded
        let postalCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .postalCode)
        postalCode = postalCodeDecoded
    }
}
