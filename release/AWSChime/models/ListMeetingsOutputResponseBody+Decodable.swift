// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMeetingsOutputResponseBody: Swift.Equatable {
    let meetings: [ChimeClientTypes.Meeting]?
    let nextToken: Swift.String?
}

extension ListMeetingsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case meetings = "Meetings"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let meetingsContainer = try containerValues.decodeIfPresent([ChimeClientTypes.Meeting?].self, forKey: .meetings)
        var meetingsDecoded0:[ChimeClientTypes.Meeting]? = nil
        if let meetingsContainer = meetingsContainer {
            meetingsDecoded0 = [ChimeClientTypes.Meeting]()
            for structure0 in meetingsContainer {
                if let structure0 = structure0 {
                    meetingsDecoded0?.append(structure0)
                }
            }
        }
        meetings = meetingsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
