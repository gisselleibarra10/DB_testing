// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateGrantInputBody: Swift.Equatable {
    let keyId: Swift.String?
    let granteePrincipal: Swift.String?
    let retiringPrincipal: Swift.String?
    let operations: [KmsClientTypes.GrantOperation]?
    let constraints: KmsClientTypes.GrantConstraints?
    let grantTokens: [Swift.String]?
    let name: Swift.String?
}

extension CreateGrantInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case constraints = "Constraints"
        case grantTokens = "GrantTokens"
        case granteePrincipal = "GranteePrincipal"
        case keyId = "KeyId"
        case name = "Name"
        case operations = "Operations"
        case retiringPrincipal = "RetiringPrincipal"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let granteePrincipalDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .granteePrincipal)
        granteePrincipal = granteePrincipalDecoded
        let retiringPrincipalDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .retiringPrincipal)
        retiringPrincipal = retiringPrincipalDecoded
        let operationsContainer = try containerValues.decodeIfPresent([KmsClientTypes.GrantOperation?].self, forKey: .operations)
        var operationsDecoded0:[KmsClientTypes.GrantOperation]? = nil
        if let operationsContainer = operationsContainer {
            operationsDecoded0 = [KmsClientTypes.GrantOperation]()
            for string0 in operationsContainer {
                if let string0 = string0 {
                    operationsDecoded0?.append(string0)
                }
            }
        }
        operations = operationsDecoded0
        let constraintsDecoded = try containerValues.decodeIfPresent(KmsClientTypes.GrantConstraints.self, forKey: .constraints)
        constraints = constraintsDecoded
        let grantTokensContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .grantTokens)
        var grantTokensDecoded0:[Swift.String]? = nil
        if let grantTokensContainer = grantTokensContainer {
            grantTokensDecoded0 = [Swift.String]()
            for string0 in grantTokensContainer {
                if let string0 = string0 {
                    grantTokensDecoded0?.append(string0)
                }
            }
        }
        grantTokens = grantTokensDecoded0
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
    }
}
