// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetParametersForImportInputBody: Swift.Equatable {
    let keyId: Swift.String?
    let wrappingAlgorithm: KmsClientTypes.AlgorithmSpec?
    let wrappingKeySpec: KmsClientTypes.WrappingKeySpec?
}

extension GetParametersForImportInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case keyId = "KeyId"
        case wrappingAlgorithm = "WrappingAlgorithm"
        case wrappingKeySpec = "WrappingKeySpec"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let wrappingAlgorithmDecoded = try containerValues.decodeIfPresent(KmsClientTypes.AlgorithmSpec.self, forKey: .wrappingAlgorithm)
        wrappingAlgorithm = wrappingAlgorithmDecoded
        let wrappingKeySpecDecoded = try containerValues.decodeIfPresent(KmsClientTypes.WrappingKeySpec.self, forKey: .wrappingKeySpec)
        wrappingKeySpec = wrappingKeySpecDecoded
    }
}
