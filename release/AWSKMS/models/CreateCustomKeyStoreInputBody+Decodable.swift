// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateCustomKeyStoreInputBody: Swift.Equatable {
    let customKeyStoreName: Swift.String?
    let cloudHsmClusterId: Swift.String?
    let trustAnchorCertificate: Swift.String?
    let keyStorePassword: Swift.String?
}

extension CreateCustomKeyStoreInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cloudHsmClusterId = "CloudHsmClusterId"
        case customKeyStoreName = "CustomKeyStoreName"
        case keyStorePassword = "KeyStorePassword"
        case trustAnchorCertificate = "TrustAnchorCertificate"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customKeyStoreNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customKeyStoreName)
        customKeyStoreName = customKeyStoreNameDecoded
        let cloudHsmClusterIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cloudHsmClusterId)
        cloudHsmClusterId = cloudHsmClusterIdDecoded
        let trustAnchorCertificateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trustAnchorCertificate)
        trustAnchorCertificate = trustAnchorCertificateDecoded
        let keyStorePasswordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyStorePassword)
        keyStorePassword = keyStorePasswordDecoded
    }
}
