// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KmsClientTypes.CustomKeyStoresListEntry: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cloudHsmClusterId = "CloudHsmClusterId"
        case connectionErrorCode = "ConnectionErrorCode"
        case connectionState = "ConnectionState"
        case creationDate = "CreationDate"
        case customKeyStoreId = "CustomKeyStoreId"
        case customKeyStoreName = "CustomKeyStoreName"
        case trustAnchorCertificate = "TrustAnchorCertificate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cloudHsmClusterId = self.cloudHsmClusterId {
            try encodeContainer.encode(cloudHsmClusterId, forKey: .cloudHsmClusterId)
        }
        if let connectionErrorCode = self.connectionErrorCode {
            try encodeContainer.encode(connectionErrorCode.rawValue, forKey: .connectionErrorCode)
        }
        if let connectionState = self.connectionState {
            try encodeContainer.encode(connectionState.rawValue, forKey: .connectionState)
        }
        if let creationDate = self.creationDate {
            try encodeContainer.encode(creationDate.timeIntervalSince1970, forKey: .creationDate)
        }
        if let customKeyStoreId = self.customKeyStoreId {
            try encodeContainer.encode(customKeyStoreId, forKey: .customKeyStoreId)
        }
        if let customKeyStoreName = self.customKeyStoreName {
            try encodeContainer.encode(customKeyStoreName, forKey: .customKeyStoreName)
        }
        if let trustAnchorCertificate = self.trustAnchorCertificate {
            try encodeContainer.encode(trustAnchorCertificate, forKey: .trustAnchorCertificate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customKeyStoreIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customKeyStoreId)
        customKeyStoreId = customKeyStoreIdDecoded
        let customKeyStoreNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customKeyStoreName)
        customKeyStoreName = customKeyStoreNameDecoded
        let cloudHsmClusterIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cloudHsmClusterId)
        cloudHsmClusterId = cloudHsmClusterIdDecoded
        let trustAnchorCertificateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trustAnchorCertificate)
        trustAnchorCertificate = trustAnchorCertificateDecoded
        let connectionStateDecoded = try containerValues.decodeIfPresent(KmsClientTypes.ConnectionStateType.self, forKey: .connectionState)
        connectionState = connectionStateDecoded
        let connectionErrorCodeDecoded = try containerValues.decodeIfPresent(KmsClientTypes.ConnectionErrorCodeType.self, forKey: .connectionErrorCode)
        connectionErrorCode = connectionErrorCodeDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
    }
}
