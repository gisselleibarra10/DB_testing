// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ImportKeyMaterialInput: Swift.Equatable {
    /// The encrypted key material to import. The key material must be encrypted with the public wrapping key that [GetParametersForImport] returned, using the wrapping algorithm that you specified in the same GetParametersForImport request.
    /// This member is required.
    public var encryptedKeyMaterial: ClientRuntime.Data?
    /// Specifies whether the key material expires. The default is KEY_MATERIAL_EXPIRES, in which case you must include the ValidTo parameter. When this parameter is set to KEY_MATERIAL_DOES_NOT_EXPIRE, you must omit the ValidTo parameter.
    public var expirationModel: KmsClientTypes.ExpirationModelType?
    /// The import token that you received in the response to a previous [GetParametersForImport] request. It must be from the same response that contained the public key that you used to encrypt the key material.
    /// This member is required.
    public var importToken: ClientRuntime.Data?
    /// The identifier of the symmetric encryption KMS key that receives the imported key material. This must be the same KMS key specified in the KeyID parameter of the corresponding [GetParametersForImport] request. The Origin of the KMS key must be EXTERNAL. You cannot perform this operation on an asymmetric KMS key, an HMAC KMS key, a KMS key in a custom key store, or on a KMS key in a different Amazon Web Services account Specify the key ID or key ARN of the KMS key. For example:
    ///
    /// * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab
    ///
    /// * Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
    ///
    ///
    /// To get the key ID and key ARN for a KMS key, use [ListKeys] or [DescribeKey].
    /// This member is required.
    public var keyId: Swift.String?
    /// The time at which the imported key material expires. When the key material expires, KMS deletes the key material and the KMS key becomes unusable. You must omit this parameter when the ExpirationModel parameter is set to KEY_MATERIAL_DOES_NOT_EXPIRE. Otherwise it is required.
    public var validTo: ClientRuntime.Date?

    public init (
        encryptedKeyMaterial: ClientRuntime.Data? = nil,
        expirationModel: KmsClientTypes.ExpirationModelType? = nil,
        importToken: ClientRuntime.Data? = nil,
        keyId: Swift.String? = nil,
        validTo: ClientRuntime.Date? = nil
    )
    {
        self.encryptedKeyMaterial = encryptedKeyMaterial
        self.expirationModel = expirationModel
        self.importToken = importToken
        self.keyId = keyId
        self.validTo = validTo
    }
}
