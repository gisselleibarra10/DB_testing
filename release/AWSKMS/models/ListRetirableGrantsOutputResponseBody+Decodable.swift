// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRetirableGrantsOutputResponseBody: Swift.Equatable {
    let grants: [KmsClientTypes.GrantListEntry]?
    let nextMarker: Swift.String?
    let truncated: Swift.Bool
}

extension ListRetirableGrantsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case grants = "Grants"
        case nextMarker = "NextMarker"
        case truncated = "Truncated"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let grantsContainer = try containerValues.decodeIfPresent([KmsClientTypes.GrantListEntry?].self, forKey: .grants)
        var grantsDecoded0:[KmsClientTypes.GrantListEntry]? = nil
        if let grantsContainer = grantsContainer {
            grantsDecoded0 = [KmsClientTypes.GrantListEntry]()
            for structure0 in grantsContainer {
                if let structure0 = structure0 {
                    grantsDecoded0?.append(structure0)
                }
            }
        }
        grants = grantsDecoded0
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let truncatedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .truncated) ?? false
        truncated = truncatedDecoded
    }
}
