// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGrantsInputBody: Swift.Equatable {
    let limit: Swift.Int?
    let marker: Swift.String?
    let keyId: Swift.String?
    let grantId: Swift.String?
    let granteePrincipal: Swift.String?
}

extension ListGrantsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case grantId = "GrantId"
        case granteePrincipal = "GranteePrincipal"
        case keyId = "KeyId"
        case limit = "Limit"
        case marker = "Marker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let keyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let grantIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .grantId)
        grantId = grantIdDecoded
        let granteePrincipalDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .granteePrincipal)
        granteePrincipal = granteePrincipalDecoded
    }
}
