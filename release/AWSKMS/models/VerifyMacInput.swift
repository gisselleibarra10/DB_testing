// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct VerifyMacInput: Swift.Equatable {
    /// A list of grant tokens. Use a grant token when your permission to call this operation comes from a new grant that has not yet achieved eventual consistency. For more information, see [Grant token](https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token) and [Using a grant token](https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token) in the Key Management Service Developer Guide.
    public var grantTokens: [Swift.String]?
    /// The KMS key that will be used in the verification. Enter a key ID of the KMS key that was used to generate the HMAC. If you identify a different KMS key, the VerifyMac operation fails.
    /// This member is required.
    public var keyId: Swift.String?
    /// The HMAC to verify. Enter the HMAC that was generated by the [GenerateMac] operation when you specified the same message, HMAC KMS key, and MAC algorithm as the values specified in this request.
    /// This member is required.
    public var mac: ClientRuntime.Data?
    /// The MAC algorithm that will be used in the verification. Enter the same MAC algorithm that was used to compute the HMAC. This algorithm must be supported by the HMAC KMS key identified by the KeyId parameter.
    /// This member is required.
    public var macAlgorithm: KmsClientTypes.MacAlgorithmSpec?
    /// The message that will be used in the verification. Enter the same message that was used to generate the HMAC. [GenerateMac] and VerifyMac do not provide special handling for message digests. If you generated an HMAC for a hash digest of a message, you must verify the HMAC for the same hash digest.
    /// This member is required.
    public var message: ClientRuntime.Data?

    public init (
        grantTokens: [Swift.String]? = nil,
        keyId: Swift.String? = nil,
        mac: ClientRuntime.Data? = nil,
        macAlgorithm: KmsClientTypes.MacAlgorithmSpec? = nil,
        message: ClientRuntime.Data? = nil
    )
    {
        self.grantTokens = grantTokens
        self.keyId = keyId
        self.mac = mac
        self.macAlgorithm = macAlgorithm
        self.message = message
    }
}
