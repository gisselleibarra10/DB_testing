// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KmsClientTypes {
    public enum KeyState: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case creating
        case disabled
        case enabled
        case pendingdeletion
        case pendingimport
        case pendingreplicadeletion
        case unavailable
        case updating
        case sdkUnknown(Swift.String)

        public static var allCases: [KeyState] {
            return [
                .creating,
                .disabled,
                .enabled,
                .pendingdeletion,
                .pendingimport,
                .pendingreplicadeletion,
                .unavailable,
                .updating,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .creating: return "Creating"
            case .disabled: return "Disabled"
            case .enabled: return "Enabled"
            case .pendingdeletion: return "PendingDeletion"
            case .pendingimport: return "PendingImport"
            case .pendingreplicadeletion: return "PendingReplicaDeletion"
            case .unavailable: return "Unavailable"
            case .updating: return "Updating"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = KeyState(rawValue: rawValue) ?? KeyState.sdkUnknown(rawValue)
        }
    }
}
