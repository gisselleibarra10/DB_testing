// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VerifyMacInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case grantTokens = "GrantTokens"
        case keyId = "KeyId"
        case mac = "Mac"
        case macAlgorithm = "MacAlgorithm"
        case message = "Message"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let grantTokens = grantTokens {
            var grantTokensContainer = encodeContainer.nestedUnkeyedContainer(forKey: .grantTokens)
            for granttokenlist0 in grantTokens {
                try grantTokensContainer.encode(granttokenlist0)
            }
        }
        if let keyId = self.keyId {
            try encodeContainer.encode(keyId, forKey: .keyId)
        }
        if let mac = self.mac {
            try encodeContainer.encode(mac.base64EncodedString(), forKey: .mac)
        }
        if let macAlgorithm = self.macAlgorithm {
            try encodeContainer.encode(macAlgorithm.rawValue, forKey: .macAlgorithm)
        }
        if let message = self.message {
            try encodeContainer.encode(message.base64EncodedString(), forKey: .message)
        }
    }
}
