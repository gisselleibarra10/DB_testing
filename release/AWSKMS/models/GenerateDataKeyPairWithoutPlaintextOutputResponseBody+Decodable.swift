// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GenerateDataKeyPairWithoutPlaintextOutputResponseBody: Swift.Equatable {
    let privateKeyCiphertextBlob: ClientRuntime.Data?
    let publicKey: ClientRuntime.Data?
    let keyId: Swift.String?
    let keyPairSpec: KmsClientTypes.DataKeyPairSpec?
}

extension GenerateDataKeyPairWithoutPlaintextOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case keyId = "KeyId"
        case keyPairSpec = "KeyPairSpec"
        case privateKeyCiphertextBlob = "PrivateKeyCiphertextBlob"
        case publicKey = "PublicKey"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let privateKeyCiphertextBlobDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .privateKeyCiphertextBlob)
        privateKeyCiphertextBlob = privateKeyCiphertextBlobDecoded
        let publicKeyDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .publicKey)
        publicKey = publicKeyDecoded
        let keyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let keyPairSpecDecoded = try containerValues.decodeIfPresent(KmsClientTypes.DataKeyPairSpec.self, forKey: .keyPairSpec)
        keyPairSpec = keyPairSpecDecoded
    }
}
