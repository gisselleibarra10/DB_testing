// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ScheduleKeyDeletionOutputResponse: Swift.Equatable {
    /// The date and time after which KMS deletes the KMS key. If the KMS key is a multi-Region primary key with replica keys, this field does not appear. The deletion date for the primary key isn't known until its last replica key is deleted.
    public var deletionDate: ClientRuntime.Date?
    /// The Amazon Resource Name ([key ARN](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN)) of the KMS key whose deletion is scheduled.
    public var keyId: Swift.String?
    /// The current status of the KMS key. For more information about how key state affects the use of a KMS key, see [Key states of KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html) in the Key Management Service Developer Guide.
    public var keyState: KmsClientTypes.KeyState?
    /// The waiting period before the KMS key is deleted. If the KMS key is a multi-Region primary key with replicas, the waiting period begins when the last of its replica keys is deleted. Otherwise, the waiting period begins immediately.
    public var pendingWindowInDays: Swift.Int?

    public init (
        deletionDate: ClientRuntime.Date? = nil,
        keyId: Swift.String? = nil,
        keyState: KmsClientTypes.KeyState? = nil,
        pendingWindowInDays: Swift.Int? = nil
    )
    {
        self.deletionDate = deletionDate
        self.keyId = keyId
        self.keyState = keyState
        self.pendingWindowInDays = pendingWindowInDays
    }
}
