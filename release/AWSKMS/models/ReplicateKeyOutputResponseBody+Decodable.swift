// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ReplicateKeyOutputResponseBody: Swift.Equatable {
    let replicaKeyMetadata: KmsClientTypes.KeyMetadata?
    let replicaPolicy: Swift.String?
    let replicaTags: [KmsClientTypes.Tag]?
}

extension ReplicateKeyOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case replicaKeyMetadata = "ReplicaKeyMetadata"
        case replicaPolicy = "ReplicaPolicy"
        case replicaTags = "ReplicaTags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicaKeyMetadataDecoded = try containerValues.decodeIfPresent(KmsClientTypes.KeyMetadata.self, forKey: .replicaKeyMetadata)
        replicaKeyMetadata = replicaKeyMetadataDecoded
        let replicaPolicyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .replicaPolicy)
        replicaPolicy = replicaPolicyDecoded
        let replicaTagsContainer = try containerValues.decodeIfPresent([KmsClientTypes.Tag?].self, forKey: .replicaTags)
        var replicaTagsDecoded0:[KmsClientTypes.Tag]? = nil
        if let replicaTagsContainer = replicaTagsContainer {
            replicaTagsDecoded0 = [KmsClientTypes.Tag]()
            for structure0 in replicaTagsContainer {
                if let structure0 = structure0 {
                    replicaTagsDecoded0?.append(structure0)
                }
            }
        }
        replicaTags = replicaTagsDecoded0
    }
}
