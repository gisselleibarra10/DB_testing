// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateCustomKeyStoreInput: Swift.Equatable {
    /// Associates the custom key store with a related CloudHSM cluster. Enter the cluster ID of the cluster that you used to create the custom key store or a cluster that shares a backup history and has the same cluster certificate as the original cluster. You cannot use this parameter to associate a custom key store with an unrelated cluster. In addition, the replacement cluster must [fulfill the requirements](https://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore) for a cluster associated with a custom key store. To view the cluster certificate of a cluster, use the [DescribeClusters](https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html) operation.
    public var cloudHsmClusterId: Swift.String?
    /// Identifies the custom key store that you want to update. Enter the ID of the custom key store. To find the ID of a custom key store, use the [DescribeCustomKeyStores] operation.
    /// This member is required.
    public var customKeyStoreId: Swift.String?
    /// Enter the current password of the kmsuser crypto user (CU) in the CloudHSM cluster that is associated with the custom key store. This parameter tells KMS the current password of the kmsuser crypto user (CU). It does not set or change the password of any users in the CloudHSM cluster.
    public var keyStorePassword: Swift.String?
    /// Changes the friendly name of the custom key store to the value that you specify. The custom key store name must be unique in the Amazon Web Services account.
    public var newCustomKeyStoreName: Swift.String?

    public init (
        cloudHsmClusterId: Swift.String? = nil,
        customKeyStoreId: Swift.String? = nil,
        keyStorePassword: Swift.String? = nil,
        newCustomKeyStoreName: Swift.String? = nil
    )
    {
        self.cloudHsmClusterId = cloudHsmClusterId
        self.customKeyStoreId = customKeyStoreId
        self.keyStorePassword = keyStorePassword
        self.newCustomKeyStoreName = newCustomKeyStoreName
    }
}
