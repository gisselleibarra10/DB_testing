// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetParametersForImportOutputResponseBody: Swift.Equatable {
    let keyId: Swift.String?
    let importToken: ClientRuntime.Data?
    let publicKey: ClientRuntime.Data?
    let parametersValidTo: ClientRuntime.Date?
}

extension GetParametersForImportOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case importToken = "ImportToken"
        case keyId = "KeyId"
        case parametersValidTo = "ParametersValidTo"
        case publicKey = "PublicKey"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let importTokenDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .importToken)
        importToken = importTokenDecoded
        let publicKeyDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .publicKey)
        publicKey = publicKeyDecoded
        let parametersValidToDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .parametersValidTo)
        parametersValidTo = parametersValidToDecoded
    }
}
