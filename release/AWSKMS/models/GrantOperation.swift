// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KmsClientTypes {
    public enum GrantOperation: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case creategrant
        case decrypt
        case describekey
        case encrypt
        case generatedatakey
        case generatedatakeypair
        case generatedatakeypairwithoutplaintext
        case generatedatakeywithoutplaintext
        case generatemac
        case getpublickey
        case reencryptfrom
        case reencryptto
        case retiregrant
        case sign
        case verify
        case verifymac
        case sdkUnknown(Swift.String)

        public static var allCases: [GrantOperation] {
            return [
                .creategrant,
                .decrypt,
                .describekey,
                .encrypt,
                .generatedatakey,
                .generatedatakeypair,
                .generatedatakeypairwithoutplaintext,
                .generatedatakeywithoutplaintext,
                .generatemac,
                .getpublickey,
                .reencryptfrom,
                .reencryptto,
                .retiregrant,
                .sign,
                .verify,
                .verifymac,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .creategrant: return "CreateGrant"
            case .decrypt: return "Decrypt"
            case .describekey: return "DescribeKey"
            case .encrypt: return "Encrypt"
            case .generatedatakey: return "GenerateDataKey"
            case .generatedatakeypair: return "GenerateDataKeyPair"
            case .generatedatakeypairwithoutplaintext: return "GenerateDataKeyPairWithoutPlaintext"
            case .generatedatakeywithoutplaintext: return "GenerateDataKeyWithoutPlaintext"
            case .generatemac: return "GenerateMac"
            case .getpublickey: return "GetPublicKey"
            case .reencryptfrom: return "ReEncryptFrom"
            case .reencryptto: return "ReEncryptTo"
            case .retiregrant: return "RetireGrant"
            case .sign: return "Sign"
            case .verify: return "Verify"
            case .verifymac: return "VerifyMac"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = GrantOperation(rawValue: rawValue) ?? GrantOperation.sdkUnknown(rawValue)
        }
    }
}
