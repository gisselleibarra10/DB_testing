// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImageRecipesOutputResponseBody: Swift.Equatable {
    let requestId: Swift.String?
    let imageRecipeSummaryList: [ImagebuilderClientTypes.ImageRecipeSummary]?
    let nextToken: Swift.String?
}

extension ListImageRecipesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case imageRecipeSummaryList
        case nextToken
        case requestId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let requestIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .requestId)
        requestId = requestIdDecoded
        let imageRecipeSummaryListContainer = try containerValues.decodeIfPresent([ImagebuilderClientTypes.ImageRecipeSummary?].self, forKey: .imageRecipeSummaryList)
        var imageRecipeSummaryListDecoded0:[ImagebuilderClientTypes.ImageRecipeSummary]? = nil
        if let imageRecipeSummaryListContainer = imageRecipeSummaryListContainer {
            imageRecipeSummaryListDecoded0 = [ImagebuilderClientTypes.ImageRecipeSummary]()
            for structure0 in imageRecipeSummaryListContainer {
                if let structure0 = structure0 {
                    imageRecipeSummaryListDecoded0?.append(structure0)
                }
            }
        }
        imageRecipeSummaryList = imageRecipeSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
