// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImagebuilderClientTypes.OutputResources: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case amis
        case containers
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let amis = amis {
            var amisContainer = encodeContainer.nestedUnkeyedContainer(forKey: .amis)
            for amilist0 in amis {
                try amisContainer.encode(amilist0)
            }
        }
        if let containers = containers {
            var containersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .containers)
            for containerlist0 in containers {
                try containersContainer.encode(containerlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let amisContainer = try containerValues.decodeIfPresent([ImagebuilderClientTypes.Ami?].self, forKey: .amis)
        var amisDecoded0:[ImagebuilderClientTypes.Ami]? = nil
        if let amisContainer = amisContainer {
            amisDecoded0 = [ImagebuilderClientTypes.Ami]()
            for structure0 in amisContainer {
                if let structure0 = structure0 {
                    amisDecoded0?.append(structure0)
                }
            }
        }
        amis = amisDecoded0
        let containersContainer = try containerValues.decodeIfPresent([ImagebuilderClientTypes.Container?].self, forKey: .containers)
        var containersDecoded0:[ImagebuilderClientTypes.Container]? = nil
        if let containersContainer = containersContainer {
            containersDecoded0 = [ImagebuilderClientTypes.Container]()
            for structure0 in containersContainer {
                if let structure0 = structure0 {
                    containersDecoded0?.append(structure0)
                }
            }
        }
        containers = containersDecoded0
    }
}
