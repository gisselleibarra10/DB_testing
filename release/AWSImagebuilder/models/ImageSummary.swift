// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ImagebuilderClientTypes {
    /// An image summary.
    public struct ImageSummary: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the image.
        public var arn: Swift.String?
        /// Indicates the type of build that created this image. The build can be initiated in the following ways:
        ///
        /// * USER_INITIATED – A manual pipeline build request.
        ///
        /// * SCHEDULED – A pipeline build initiated by a cron expression in the Image Builder pipeline, or from EventBridge.
        ///
        /// * IMPORT – A VM import created the image to use as the base image for the recipe.
        public var buildType: ImagebuilderClientTypes.BuildType?
        /// The date on which this image was created.
        public var dateCreated: Swift.String?
        /// The name of the image.
        public var name: Swift.String?
        /// The operating system version of the instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
        public var osVersion: Swift.String?
        /// The output resources produced when creating this image.
        public var outputResources: ImagebuilderClientTypes.OutputResources?
        /// The owner of the image.
        public var owner: Swift.String?
        /// The platform of the image.
        public var platform: ImagebuilderClientTypes.Platform?
        /// The state of the image.
        public var state: ImagebuilderClientTypes.ImageState?
        /// The tags of the image.
        public var tags: [Swift.String:Swift.String]?
        /// Specifies whether this is an AMI or container image.
        public var type: ImagebuilderClientTypes.ImageType?
        /// The version of the image.
        public var version: Swift.String?

        public init (
            arn: Swift.String? = nil,
            buildType: ImagebuilderClientTypes.BuildType? = nil,
            dateCreated: Swift.String? = nil,
            name: Swift.String? = nil,
            osVersion: Swift.String? = nil,
            outputResources: ImagebuilderClientTypes.OutputResources? = nil,
            owner: Swift.String? = nil,
            platform: ImagebuilderClientTypes.Platform? = nil,
            state: ImagebuilderClientTypes.ImageState? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            type: ImagebuilderClientTypes.ImageType? = nil,
            version: Swift.String? = nil
        )
        {
            self.arn = arn
            self.buildType = buildType
            self.dateCreated = dateCreated
            self.name = name
            self.osVersion = osVersion
            self.outputResources = outputResources
            self.owner = owner
            self.platform = platform
            self.state = state
            self.tags = tags
            self.type = type
            self.version = version
        }
    }

}
