// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EnableControlInputBody: Swift.Equatable {
    let controlIdentifier: Swift.String?
    let targetIdentifier: Swift.String?
}

extension EnableControlInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case controlIdentifier
        case targetIdentifier
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let controlIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .controlIdentifier)
        controlIdentifier = controlIdentifierDecoded
        let targetIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetIdentifier)
        targetIdentifier = targetIdentifierDecoded
    }
}
