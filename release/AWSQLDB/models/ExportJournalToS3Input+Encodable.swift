// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ExportJournalToS3Input: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exclusiveEndTime = "ExclusiveEndTime"
        case inclusiveStartTime = "InclusiveStartTime"
        case outputFormat = "OutputFormat"
        case roleArn = "RoleArn"
        case s3ExportConfiguration = "S3ExportConfiguration"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let exclusiveEndTime = self.exclusiveEndTime {
            try encodeContainer.encode(exclusiveEndTime.timeIntervalSince1970, forKey: .exclusiveEndTime)
        }
        if let inclusiveStartTime = self.inclusiveStartTime {
            try encodeContainer.encode(inclusiveStartTime.timeIntervalSince1970, forKey: .inclusiveStartTime)
        }
        if let outputFormat = self.outputFormat {
            try encodeContainer.encode(outputFormat.rawValue, forKey: .outputFormat)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let s3ExportConfiguration = self.s3ExportConfiguration {
            try encodeContainer.encode(s3ExportConfiguration, forKey: .s3ExportConfiguration)
        }
    }
}
