// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QldbClientTypes.KinesisConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregationEnabled = "AggregationEnabled"
        case streamArn = "StreamArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aggregationEnabled = self.aggregationEnabled {
            try encodeContainer.encode(aggregationEnabled, forKey: .aggregationEnabled)
        }
        if let streamArn = self.streamArn {
            try encodeContainer.encode(streamArn, forKey: .streamArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamArn)
        streamArn = streamArnDecoded
        let aggregationEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .aggregationEnabled)
        aggregationEnabled = aggregationEnabledDecoded
    }
}
