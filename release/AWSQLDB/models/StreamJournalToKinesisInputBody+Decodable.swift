// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StreamJournalToKinesisInputBody: Swift.Equatable {
    let roleArn: Swift.String?
    let tags: [Swift.String:Swift.String?]?
    let inclusiveStartTime: ClientRuntime.Date?
    let exclusiveEndTime: ClientRuntime.Date?
    let kinesisConfiguration: QldbClientTypes.KinesisConfiguration?
    let streamName: Swift.String?
}

extension StreamJournalToKinesisInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exclusiveEndTime = "ExclusiveEndTime"
        case inclusiveStartTime = "InclusiveStartTime"
        case kinesisConfiguration = "KinesisConfiguration"
        case roleArn = "RoleArn"
        case streamName = "StreamName"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String?]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String?]()
            for (key0, tagvalue0) in tagsContainer {
                tagsDecoded0?[key0] = tagvalue0
            }
        }
        tags = tagsDecoded0
        let inclusiveStartTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .inclusiveStartTime)
        inclusiveStartTime = inclusiveStartTimeDecoded
        let exclusiveEndTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .exclusiveEndTime)
        exclusiveEndTime = exclusiveEndTimeDecoded
        let kinesisConfigurationDecoded = try containerValues.decodeIfPresent(QldbClientTypes.KinesisConfiguration.self, forKey: .kinesisConfiguration)
        kinesisConfiguration = kinesisConfigurationDecoded
        let streamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamName)
        streamName = streamNameDecoded
    }
}
