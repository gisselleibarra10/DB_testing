// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExportJournalToS3InputBody: Swift.Equatable {
    let inclusiveStartTime: ClientRuntime.Date?
    let exclusiveEndTime: ClientRuntime.Date?
    let s3ExportConfiguration: QldbClientTypes.S3ExportConfiguration?
    let roleArn: Swift.String?
    let outputFormat: QldbClientTypes.OutputFormat?
}

extension ExportJournalToS3InputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exclusiveEndTime = "ExclusiveEndTime"
        case inclusiveStartTime = "InclusiveStartTime"
        case outputFormat = "OutputFormat"
        case roleArn = "RoleArn"
        case s3ExportConfiguration = "S3ExportConfiguration"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inclusiveStartTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .inclusiveStartTime)
        inclusiveStartTime = inclusiveStartTimeDecoded
        let exclusiveEndTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .exclusiveEndTime)
        exclusiveEndTime = exclusiveEndTimeDecoded
        let s3ExportConfigurationDecoded = try containerValues.decodeIfPresent(QldbClientTypes.S3ExportConfiguration.self, forKey: .s3ExportConfiguration)
        s3ExportConfiguration = s3ExportConfigurationDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let outputFormatDecoded = try containerValues.decodeIfPresent(QldbClientTypes.OutputFormat.self, forKey: .outputFormat)
        outputFormat = outputFormatDecoded
    }
}
