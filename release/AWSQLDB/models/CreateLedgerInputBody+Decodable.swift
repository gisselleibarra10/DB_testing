// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLedgerInputBody: Swift.Equatable {
    let name: Swift.String?
    let tags: [Swift.String:Swift.String?]?
    let permissionsMode: QldbClientTypes.PermissionsMode?
    let deletionProtection: Swift.Bool?
    let kmsKey: Swift.String?
}

extension CreateLedgerInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deletionProtection = "DeletionProtection"
        case kmsKey = "KmsKey"
        case name = "Name"
        case permissionsMode = "PermissionsMode"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String?]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String?]()
            for (key0, tagvalue0) in tagsContainer {
                tagsDecoded0?[key0] = tagvalue0
            }
        }
        tags = tagsDecoded0
        let permissionsModeDecoded = try containerValues.decodeIfPresent(QldbClientTypes.PermissionsMode.self, forKey: .permissionsMode)
        permissionsMode = permissionsModeDecoded
        let deletionProtectionDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .deletionProtection)
        deletionProtection = deletionProtectionDecoded
        let kmsKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKey)
        kmsKey = kmsKeyDecoded
    }
}
