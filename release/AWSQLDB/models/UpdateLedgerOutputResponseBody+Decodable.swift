// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateLedgerOutputResponseBody: Swift.Equatable {
    let name: Swift.String?
    let arn: Swift.String?
    let state: QldbClientTypes.LedgerState?
    let creationDateTime: ClientRuntime.Date?
    let deletionProtection: Swift.Bool?
    let encryptionDescription: QldbClientTypes.LedgerEncryptionDescription?
}

extension UpdateLedgerOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case creationDateTime = "CreationDateTime"
        case deletionProtection = "DeletionProtection"
        case encryptionDescription = "EncryptionDescription"
        case name = "Name"
        case state = "State"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let stateDecoded = try containerValues.decodeIfPresent(QldbClientTypes.LedgerState.self, forKey: .state)
        state = stateDecoded
        let creationDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDateTime)
        creationDateTime = creationDateTimeDecoded
        let deletionProtectionDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .deletionProtection)
        deletionProtection = deletionProtectionDecoded
        let encryptionDescriptionDecoded = try containerValues.decodeIfPresent(QldbClientTypes.LedgerEncryptionDescription.self, forKey: .encryptionDescription)
        encryptionDescription = encryptionDescriptionDecoded
    }
}
