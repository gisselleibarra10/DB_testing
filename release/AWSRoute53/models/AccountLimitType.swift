// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Route53ClientTypes {
    public enum AccountLimitType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case maxHealthChecksByOwner
        case maxHostedZonesByOwner
        case maxReusableDelegationSetsByOwner
        case maxTrafficPoliciesByOwner
        case maxTrafficPolicyInstancesByOwner
        case sdkUnknown(Swift.String)

        public static var allCases: [AccountLimitType] {
            return [
                .maxHealthChecksByOwner,
                .maxHostedZonesByOwner,
                .maxReusableDelegationSetsByOwner,
                .maxTrafficPoliciesByOwner,
                .maxTrafficPolicyInstancesByOwner,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .maxHealthChecksByOwner: return "MAX_HEALTH_CHECKS_BY_OWNER"
            case .maxHostedZonesByOwner: return "MAX_HOSTED_ZONES_BY_OWNER"
            case .maxReusableDelegationSetsByOwner: return "MAX_REUSABLE_DELEGATION_SETS_BY_OWNER"
            case .maxTrafficPoliciesByOwner: return "MAX_TRAFFIC_POLICIES_BY_OWNER"
            case .maxTrafficPolicyInstancesByOwner: return "MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = AccountLimitType(rawValue: rawValue) ?? AccountLimitType.sdkUnknown(rawValue)
        }
    }
}
