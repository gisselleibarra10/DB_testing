// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TestDNSAnswerInput: ClientRuntime.QueryItemProvider {
    public var queryItems: [ClientRuntime.URLQueryItem] {
        var items = [ClientRuntime.URLQueryItem]()
        if let recordName = recordName {
            let recordNameQueryItem = ClientRuntime.URLQueryItem(name: "recordname".urlPercentEncoding(), value: Swift.String(recordName).urlPercentEncoding())
            items.append(recordNameQueryItem)
        }
        if let eDNS0ClientSubnetIP = eDNS0ClientSubnetIP {
            let eDNS0ClientSubnetIPQueryItem = ClientRuntime.URLQueryItem(name: "edns0clientsubnetip".urlPercentEncoding(), value: Swift.String(eDNS0ClientSubnetIP).urlPercentEncoding())
            items.append(eDNS0ClientSubnetIPQueryItem)
        }
        if let recordType = recordType {
            let recordTypeQueryItem = ClientRuntime.URLQueryItem(name: "recordtype".urlPercentEncoding(), value: Swift.String(recordType.rawValue).urlPercentEncoding())
            items.append(recordTypeQueryItem)
        }
        if let hostedZoneId = hostedZoneId {
            let hostedZoneIdQueryItem = ClientRuntime.URLQueryItem(name: "hostedzoneid".urlPercentEncoding(), value: Swift.String(hostedZoneId).urlPercentEncoding())
            items.append(hostedZoneIdQueryItem)
        }
        if let resolverIP = resolverIP {
            let resolverIPQueryItem = ClientRuntime.URLQueryItem(name: "resolverip".urlPercentEncoding(), value: Swift.String(resolverIP).urlPercentEncoding())
            items.append(resolverIPQueryItem)
        }
        if let eDNS0ClientSubnetMask = eDNS0ClientSubnetMask {
            let eDNS0ClientSubnetMaskQueryItem = ClientRuntime.URLQueryItem(name: "edns0clientsubnetmask".urlPercentEncoding(), value: Swift.String(eDNS0ClientSubnetMask).urlPercentEncoding())
            items.append(eDNS0ClientSubnetMaskQueryItem)
        }
        return items
    }
}
