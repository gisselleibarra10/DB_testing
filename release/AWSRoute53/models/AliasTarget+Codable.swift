// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53ClientTypes.AliasTarget: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dNSName = "DNSName"
        case evaluateTargetHealth = "EvaluateTargetHealth"
        case hostedZoneId = "HostedZoneId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("https://route53.amazonaws.com/doc/2013-04-01/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let dNSName = dNSName {
            try container.encode(dNSName, forKey: ClientRuntime.Key("DNSName"))
        }
        if evaluateTargetHealth != false {
            try container.encode(evaluateTargetHealth, forKey: ClientRuntime.Key("EvaluateTargetHealth"))
        }
        if let hostedZoneId = hostedZoneId {
            try container.encode(hostedZoneId, forKey: ClientRuntime.Key("HostedZoneId"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostedZoneIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hostedZoneId)
        hostedZoneId = hostedZoneIdDecoded
        let dNSNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dNSName)
        dNSName = dNSNameDecoded
        let evaluateTargetHealthDecoded = try containerValues.decode(Swift.Bool.self, forKey: .evaluateTargetHealth)
        evaluateTargetHealth = evaluateTargetHealthDecoded
    }
}
