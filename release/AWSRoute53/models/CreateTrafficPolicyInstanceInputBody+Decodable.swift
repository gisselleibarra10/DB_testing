// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateTrafficPolicyInstanceInputBody: Swift.Equatable {
    let hostedZoneId: Swift.String?
    let name: Swift.String?
    let tTL: Swift.Int?
    let trafficPolicyId: Swift.String?
    let trafficPolicyVersion: Swift.Int?
}

extension CreateTrafficPolicyInstanceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hostedZoneId = "HostedZoneId"
        case name = "Name"
        case tTL = "TTL"
        case trafficPolicyId = "TrafficPolicyId"
        case trafficPolicyVersion = "TrafficPolicyVersion"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostedZoneIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hostedZoneId)
        hostedZoneId = hostedZoneIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let tTLDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .tTL)
        tTL = tTLDecoded
        let trafficPolicyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trafficPolicyId)
        trafficPolicyId = trafficPolicyIdDecoded
        let trafficPolicyVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .trafficPolicyVersion)
        trafficPolicyVersion = trafficPolicyVersionDecoded
    }
}
