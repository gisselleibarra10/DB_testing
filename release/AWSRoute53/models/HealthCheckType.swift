// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Route53ClientTypes {
    public enum HealthCheckType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case calculated
        case cloudwatchMetric
        case http
        case https
        case httpsStrMatch
        case httpStrMatch
        case recoveryControl
        case tcp
        case sdkUnknown(Swift.String)

        public static var allCases: [HealthCheckType] {
            return [
                .calculated,
                .cloudwatchMetric,
                .http,
                .https,
                .httpsStrMatch,
                .httpStrMatch,
                .recoveryControl,
                .tcp,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .calculated: return "CALCULATED"
            case .cloudwatchMetric: return "CLOUDWATCH_METRIC"
            case .http: return "HTTP"
            case .https: return "HTTPS"
            case .httpsStrMatch: return "HTTPS_STR_MATCH"
            case .httpStrMatch: return "HTTP_STR_MATCH"
            case .recoveryControl: return "RECOVERY_CONTROL"
            case .tcp: return "TCP"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = HealthCheckType(rawValue: rawValue) ?? HealthCheckType.sdkUnknown(rawValue)
        }
    }
}
