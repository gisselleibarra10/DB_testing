// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateHostedZoneOutputResponseBody: Swift.Equatable {
    let hostedZone: Route53ClientTypes.HostedZone?
    let changeInfo: Route53ClientTypes.ChangeInfo?
    let delegationSet: Route53ClientTypes.DelegationSet?
    let vPC: Route53ClientTypes.VPC?
}

extension CreateHostedZoneOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case changeInfo = "ChangeInfo"
        case delegationSet = "DelegationSet"
        case hostedZone = "HostedZone"
        case vPC = "VPC"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostedZoneDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.HostedZone.self, forKey: .hostedZone)
        hostedZone = hostedZoneDecoded
        let changeInfoDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.ChangeInfo.self, forKey: .changeInfo)
        changeInfo = changeInfoDecoded
        let delegationSetDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.DelegationSet.self, forKey: .delegationSet)
        delegationSet = delegationSetDecoded
        let vPCDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.VPC.self, forKey: .vPC)
        vPC = vPCDecoded
    }
}
