// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCidrLocationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let cidrLocations: [Route53ClientTypes.LocationSummary]?
}

extension ListCidrLocationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cidrLocations = "CidrLocations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.cidrLocations) {
            struct KeyVal0{struct member{}}
            let cidrLocationsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .cidrLocations)
            if let cidrLocationsWrappedContainer = cidrLocationsWrappedContainer {
                let cidrLocationsContainer = try cidrLocationsWrappedContainer.decodeIfPresent([Route53ClientTypes.LocationSummary].self, forKey: .member)
                var cidrLocationsBuffer:[Route53ClientTypes.LocationSummary]? = nil
                if let cidrLocationsContainer = cidrLocationsContainer {
                    cidrLocationsBuffer = [Route53ClientTypes.LocationSummary]()
                    for structureContainer0 in cidrLocationsContainer {
                        cidrLocationsBuffer?.append(structureContainer0)
                    }
                }
                cidrLocations = cidrLocationsBuffer
            } else {
                cidrLocations = []
            }
        } else {
            cidrLocations = nil
        }
    }
}
