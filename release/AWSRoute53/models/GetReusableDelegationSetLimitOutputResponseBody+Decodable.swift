// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetReusableDelegationSetLimitOutputResponseBody: Swift.Equatable {
    let limit: Route53ClientTypes.ReusableDelegationSetLimit?
    let count: Swift.Int
}

extension GetReusableDelegationSetLimitOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case count = "Count"
        case limit = "Limit"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let limitDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.ReusableDelegationSetLimit.self, forKey: .limit)
        limit = limitDecoded
        let countDecoded = try containerValues.decode(Swift.Int.self, forKey: .count)
        count = countDecoded
    }
}
