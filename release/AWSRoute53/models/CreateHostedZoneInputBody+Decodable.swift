// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateHostedZoneInputBody: Swift.Equatable {
    let name: Swift.String?
    let vPC: Route53ClientTypes.VPC?
    let callerReference: Swift.String?
    let hostedZoneConfig: Route53ClientTypes.HostedZoneConfig?
    let delegationSetId: Swift.String?
}

extension CreateHostedZoneInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case callerReference = "CallerReference"
        case delegationSetId = "DelegationSetId"
        case hostedZoneConfig = "HostedZoneConfig"
        case name = "Name"
        case vPC = "VPC"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let vPCDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.VPC.self, forKey: .vPC)
        vPC = vPCDecoded
        let callerReferenceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .callerReference)
        callerReference = callerReferenceDecoded
        let hostedZoneConfigDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.HostedZoneConfig.self, forKey: .hostedZoneConfig)
        hostedZoneConfig = hostedZoneConfigDecoded
        let delegationSetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .delegationSetId)
        delegationSetId = delegationSetIdDecoded
    }
}
