// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTrafficPolicyVersionsOutputResponseBody: Swift.Equatable {
    let trafficPolicies: [Route53ClientTypes.TrafficPolicy]?
    let isTruncated: Swift.Bool
    let trafficPolicyVersionMarker: Swift.String?
    let maxItems: Swift.Int?
}

extension ListTrafficPolicyVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case isTruncated = "IsTruncated"
        case maxItems = "MaxItems"
        case trafficPolicies = "TrafficPolicies"
        case trafficPolicyVersionMarker = "TrafficPolicyVersionMarker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.trafficPolicies) {
            struct KeyVal0{struct TrafficPolicy{}}
            let trafficPoliciesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.TrafficPolicy>.CodingKeys.self, forKey: .trafficPolicies)
            if let trafficPoliciesWrappedContainer = trafficPoliciesWrappedContainer {
                let trafficPoliciesContainer = try trafficPoliciesWrappedContainer.decodeIfPresent([Route53ClientTypes.TrafficPolicy].self, forKey: .member)
                var trafficPoliciesBuffer:[Route53ClientTypes.TrafficPolicy]? = nil
                if let trafficPoliciesContainer = trafficPoliciesContainer {
                    trafficPoliciesBuffer = [Route53ClientTypes.TrafficPolicy]()
                    for structureContainer0 in trafficPoliciesContainer {
                        trafficPoliciesBuffer?.append(structureContainer0)
                    }
                }
                trafficPolicies = trafficPoliciesBuffer
            } else {
                trafficPolicies = []
            }
        } else {
            trafficPolicies = nil
        }
        let isTruncatedDecoded = try containerValues.decode(Swift.Bool.self, forKey: .isTruncated)
        isTruncated = isTruncatedDecoded
        let trafficPolicyVersionMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trafficPolicyVersionMarker)
        trafficPolicyVersionMarker = trafficPolicyVersionMarkerDecoded
        let maxItemsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxItems)
        maxItems = maxItemsDecoded
    }
}
