// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53ClientTypes.ChangeInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case comment = "Comment"
        case id = "Id"
        case status = "Status"
        case submittedAt = "SubmittedAt"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("https://route53.amazonaws.com/doc/2013-04-01/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let comment = comment {
            try container.encode(comment, forKey: ClientRuntime.Key("Comment"))
        }
        if let id = id {
            try container.encode(id, forKey: ClientRuntime.Key("Id"))
        }
        if let status = status {
            try container.encode(status, forKey: ClientRuntime.Key("Status"))
        }
        if let submittedAt = submittedAt {
            try container.encode(ClientRuntime.TimestampWrapper(submittedAt, format: .dateTime), forKey: ClientRuntime.Key("SubmittedAt"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.ChangeStatus.self, forKey: .status)
        status = statusDecoded
        let submittedAtDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .submittedAt)
        var submittedAtBuffer:ClientRuntime.Date? = nil
        if let submittedAtDecoded = submittedAtDecoded {
            submittedAtBuffer = try ClientRuntime.TimestampWrapperDecoder.parseDateStringValue(submittedAtDecoded, format: .dateTime)
        }
        submittedAt = submittedAtBuffer
        let commentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .comment)
        comment = commentDecoded
    }
}
