// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCheckerIpRangesOutputResponseBody: Swift.Equatable {
    let checkerIpRanges: [Swift.String]?
}

extension GetCheckerIpRangesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case checkerIpRanges = "CheckerIpRanges"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.checkerIpRanges) {
            struct KeyVal0{struct member{}}
            let checkerIpRangesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .checkerIpRanges)
            if let checkerIpRangesWrappedContainer = checkerIpRangesWrappedContainer {
                let checkerIpRangesContainer = try checkerIpRangesWrappedContainer.decodeIfPresent([Swift.String].self, forKey: .member)
                var checkerIpRangesBuffer:[Swift.String]? = nil
                if let checkerIpRangesContainer = checkerIpRangesContainer {
                    checkerIpRangesBuffer = [Swift.String]()
                    for stringContainer0 in checkerIpRangesContainer {
                        checkerIpRangesBuffer?.append(stringContainer0)
                    }
                }
                checkerIpRanges = checkerIpRangesBuffer
            } else {
                checkerIpRanges = []
            }
        } else {
            checkerIpRanges = nil
        }
    }
}
