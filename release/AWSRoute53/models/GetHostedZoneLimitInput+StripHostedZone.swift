// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetHostedZoneLimitInputStripHostedZoneMiddleware: ClientRuntime.Middleware {
    public let id: Swift.String = "GetHostedZoneLimitInputStripHostedZoneMiddleware"

    public func handle<H>(context: Context,
                  input: GetHostedZoneLimitInput,
                  next: H) async throws -> ClientRuntime.OperationOutput<GetHostedZoneLimitOutputResponse>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context
    {
        guard let hostedZoneId = input.hostedZoneId else {
            return try await next.handle(context: context, input: input)
        }
        var copiedInput = input
        let stripped = hostedZoneId.stripFirstMatching(prefixes: ["/hostedzone/", "hostedzone/", "/hostedzone", "hostedzone"])
        copiedInput.hostedZoneId = stripped
        return try await next.handle(context: context, input: copiedInput)
    }

    public typealias MInput = GetHostedZoneLimitInput
    public typealias MOutput = ClientRuntime.OperationOutput<GetHostedZoneLimitOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
}
