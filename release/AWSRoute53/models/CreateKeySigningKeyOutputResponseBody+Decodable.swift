// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateKeySigningKeyOutputResponseBody: Swift.Equatable {
    let changeInfo: Route53ClientTypes.ChangeInfo?
    let keySigningKey: Route53ClientTypes.KeySigningKey?
}

extension CreateKeySigningKeyOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case changeInfo = "ChangeInfo"
        case keySigningKey = "KeySigningKey"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let changeInfoDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.ChangeInfo.self, forKey: .changeInfo)
        changeInfo = changeInfoDecoded
        let keySigningKeyDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.KeySigningKey.self, forKey: .keySigningKey)
        keySigningKey = keySigningKeyDecoded
    }
}
