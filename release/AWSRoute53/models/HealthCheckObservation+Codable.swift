// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53ClientTypes.HealthCheckObservation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case iPAddress = "IPAddress"
        case region = "Region"
        case statusReport = "StatusReport"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("https://route53.amazonaws.com/doc/2013-04-01/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let iPAddress = iPAddress {
            try container.encode(iPAddress, forKey: ClientRuntime.Key("IPAddress"))
        }
        if let region = region {
            try container.encode(region, forKey: ClientRuntime.Key("Region"))
        }
        if let statusReport = statusReport {
            try container.encode(statusReport, forKey: ClientRuntime.Key("StatusReport"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let regionDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.HealthCheckRegion.self, forKey: .region)
        region = regionDecoded
        let iPAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .iPAddress)
        iPAddress = iPAddressDecoded
        let statusReportDecoded = try containerValues.decodeIfPresent(Route53ClientTypes.StatusReport.self, forKey: .statusReport)
        statusReport = statusReportDecoded
    }
}
