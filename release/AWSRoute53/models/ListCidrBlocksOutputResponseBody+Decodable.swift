// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCidrBlocksOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let cidrBlocks: [Route53ClientTypes.CidrBlockSummary]?
}

extension ListCidrBlocksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cidrBlocks = "CidrBlocks"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.cidrBlocks) {
            struct KeyVal0{struct member{}}
            let cidrBlocksWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .cidrBlocks)
            if let cidrBlocksWrappedContainer = cidrBlocksWrappedContainer {
                let cidrBlocksContainer = try cidrBlocksWrappedContainer.decodeIfPresent([Route53ClientTypes.CidrBlockSummary].self, forKey: .member)
                var cidrBlocksBuffer:[Route53ClientTypes.CidrBlockSummary]? = nil
                if let cidrBlocksContainer = cidrBlocksContainer {
                    cidrBlocksBuffer = [Route53ClientTypes.CidrBlockSummary]()
                    for structureContainer0 in cidrBlocksContainer {
                        cidrBlocksBuffer?.append(structureContainer0)
                    }
                }
                cidrBlocks = cidrBlocksBuffer
            } else {
                cidrBlocks = []
            }
        } else {
            cidrBlocks = nil
        }
    }
}
