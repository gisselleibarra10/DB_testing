// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVaultsOutputResponseBody: Swift.Equatable {
    let vaultList: [GlacierClientTypes.DescribeVaultOutput]?
    let marker: Swift.String?
}

extension ListVaultsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case vaultList = "VaultList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vaultListContainer = try containerValues.decodeIfPresent([GlacierClientTypes.DescribeVaultOutput?].self, forKey: .vaultList)
        var vaultListDecoded0:[GlacierClientTypes.DescribeVaultOutput]? = nil
        if let vaultListContainer = vaultListContainer {
            vaultListDecoded0 = [GlacierClientTypes.DescribeVaultOutput]()
            for structure0 in vaultListContainer {
                if let structure0 = structure0 {
                    vaultListDecoded0?.append(structure0)
                }
            }
        }
        vaultList = vaultListDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
