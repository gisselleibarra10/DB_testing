// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Provides options to complete a multipart upload operation. This informs Amazon Glacier that all the archive parts have been uploaded and Amazon S3 Glacier (Glacier) can now assemble the archive from the uploaded parts. After assembling and saving the archive to the vault, Glacier returns the URI path of the newly created archive resource.
public struct CompleteMultipartUploadInput: Swift.Equatable {
    /// The AccountId value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.
    /// This member is required.
    public var accountId: Swift.String?
    /// The total size, in bytes, of the entire archive. This value should be the sum of all the sizes of the individual parts that you uploaded.
    public var archiveSize: Swift.String?
    /// The SHA256 tree hash of the entire archive. It is the tree hash of SHA256 tree hash of the individual parts. If the value you specify in the request does not match the SHA256 tree hash of the final assembled archive as computed by Amazon S3 Glacier (Glacier), Glacier returns an error and the request fails.
    public var checksum: Swift.String?
    /// The upload ID of the multipart upload.
    /// This member is required.
    public var uploadId: Swift.String?
    /// The name of the vault.
    /// This member is required.
    public var vaultName: Swift.String?

    public init (
        accountId: Swift.String? = nil,
        archiveSize: Swift.String? = nil,
        checksum: Swift.String? = nil,
        uploadId: Swift.String? = nil,
        vaultName: Swift.String? = nil
    )
    {
        self.accountId = accountId
        self.archiveSize = archiveSize
        self.checksum = checksum
        self.uploadId = uploadId
        self.vaultName = vaultName
    }
}
