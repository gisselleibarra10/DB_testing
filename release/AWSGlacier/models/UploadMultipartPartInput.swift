// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Provides options to upload a part of an archive in a multipart upload operation.
public struct UploadMultipartPartInput: Swift.Equatable {
    /// The AccountId value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '-' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.
    /// This member is required.
    public var accountId: Swift.String?
    /// The data to upload.
    public var body: ClientRuntime.ByteStream?
    /// The SHA256 tree hash of the data being uploaded.
    public var checksum: Swift.String?
    /// Identifies the range of bytes in the assembled archive that will be uploaded in this part. Amazon S3 Glacier uses this information to assemble the archive in the proper sequence. The format of this header follows RFC 2616. An example header is Content-Range:bytes 0-4194303/*.
    public var range: Swift.String?
    /// The upload ID of the multipart upload.
    /// This member is required.
    public var uploadId: Swift.String?
    /// The name of the vault.
    /// This member is required.
    public var vaultName: Swift.String?

    public init (
        accountId: Swift.String? = nil,
        body: ClientRuntime.ByteStream? = nil,
        checksum: Swift.String? = nil,
        range: Swift.String? = nil,
        uploadId: Swift.String? = nil,
        vaultName: Swift.String? = nil
    )
    {
        self.accountId = accountId
        self.body = body
        self.checksum = checksum
        self.range = range
        self.uploadId = uploadId
        self.vaultName = vaultName
    }
}
