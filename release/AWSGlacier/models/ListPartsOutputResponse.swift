// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Contains the Amazon S3 Glacier response to your request.
public struct ListPartsOutputResponse: Swift.Equatable {
    /// The description of the archive that was specified in the Initiate Multipart Upload request.
    public var archiveDescription: Swift.String?
    /// The UTC time at which the multipart upload was initiated.
    public var creationDate: Swift.String?
    /// An opaque string that represents where to continue pagination of the results. You use the marker in a new List Parts request to obtain more jobs in the list. If there are no more parts, this value is null.
    public var marker: Swift.String?
    /// The ID of the upload to which the parts are associated.
    public var multipartUploadId: Swift.String?
    /// The part size in bytes. This is the same value that you specified in the Initiate Multipart Upload request.
    public var partSizeInBytes: Swift.Int
    /// A list of the part sizes of the multipart upload. Each object in the array contains a RangeBytes and sha256-tree-hash name/value pair.
    public var parts: [GlacierClientTypes.PartListElement]?
    /// The Amazon Resource Name (ARN) of the vault to which the multipart upload was initiated.
    public var vaultARN: Swift.String?

    public init (
        archiveDescription: Swift.String? = nil,
        creationDate: Swift.String? = nil,
        marker: Swift.String? = nil,
        multipartUploadId: Swift.String? = nil,
        partSizeInBytes: Swift.Int = 0,
        parts: [GlacierClientTypes.PartListElement]? = nil,
        vaultARN: Swift.String? = nil
    )
    {
        self.archiveDescription = archiveDescription
        self.creationDate = creationDate
        self.marker = marker
        self.multipartUploadId = multipartUploadId
        self.partSizeInBytes = partSizeInBytes
        self.parts = parts
        self.vaultARN = vaultARN
    }
}
