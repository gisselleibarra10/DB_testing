// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobsOutputResponseBody: Swift.Equatable {
    let jobList: [GlacierClientTypes.GlacierJobDescription]?
    let marker: Swift.String?
}

extension ListJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jobList = "JobList"
        case marker = "Marker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobListContainer = try containerValues.decodeIfPresent([GlacierClientTypes.GlacierJobDescription?].self, forKey: .jobList)
        var jobListDecoded0:[GlacierClientTypes.GlacierJobDescription]? = nil
        if let jobListContainer = jobListContainer {
            jobListDecoded0 = [GlacierClientTypes.GlacierJobDescription]()
            for structure0 in jobListContainer {
                if let structure0 = structure0 {
                    jobListDecoded0?.append(structure0)
                }
            }
        }
        jobList = jobListDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
