// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeviceInstancesOutputResponseBody: Swift.Equatable {
    let deviceInstances: [DeviceFarmClientTypes.DeviceInstance]?
    let nextToken: Swift.String?
}

extension ListDeviceInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceInstances
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceInstancesContainer = try containerValues.decodeIfPresent([DeviceFarmClientTypes.DeviceInstance?].self, forKey: .deviceInstances)
        var deviceInstancesDecoded0:[DeviceFarmClientTypes.DeviceInstance]? = nil
        if let deviceInstancesContainer = deviceInstancesContainer {
            deviceInstancesDecoded0 = [DeviceFarmClientTypes.DeviceInstance]()
            for structure0 in deviceInstancesContainer {
                if let structure0 = structure0 {
                    deviceInstancesDecoded0?.append(structure0)
                }
            }
        }
        deviceInstances = deviceInstancesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
