// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DeviceFarmClientTypes {
    /// Represents the settings for a run. Includes things like location, radio states, auxiliary apps, and network profiles.
    public struct ScheduleRunConfiguration: Swift.Equatable {
        /// A list of upload ARNs for app packages to be installed with your app.
        public var auxiliaryApps: [Swift.String]?
        /// Specifies the billing method for a test run: metered or unmetered. If the parameter is not specified, the default value is metered. If you have purchased unmetered device slots, you must set this parameter to unmetered to make use of them. Otherwise, your run counts against your metered time.
        public var billingMethod: DeviceFarmClientTypes.BillingMethod?
        /// Input CustomerArtifactPaths object for the scheduled run configuration.
        public var customerArtifactPaths: DeviceFarmClientTypes.CustomerArtifactPaths?
        /// The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm extracts to external data for Android or the app's sandbox for iOS.
        public var extraDataPackageArn: Swift.String?
        /// Information about the locale that is used for the run.
        public var locale: Swift.String?
        /// Information about the location that is used for the run.
        public var location: DeviceFarmClientTypes.Location?
        /// Reserved for internal use.
        public var networkProfileArn: Swift.String?
        /// Information about the radio states for the run.
        public var radios: DeviceFarmClientTypes.Radios?
        /// An array of ARNs for your VPC endpoint configurations.
        public var vpceConfigurationArns: [Swift.String]?

        public init (
            auxiliaryApps: [Swift.String]? = nil,
            billingMethod: DeviceFarmClientTypes.BillingMethod? = nil,
            customerArtifactPaths: DeviceFarmClientTypes.CustomerArtifactPaths? = nil,
            extraDataPackageArn: Swift.String? = nil,
            locale: Swift.String? = nil,
            location: DeviceFarmClientTypes.Location? = nil,
            networkProfileArn: Swift.String? = nil,
            radios: DeviceFarmClientTypes.Radios? = nil,
            vpceConfigurationArns: [Swift.String]? = nil
        )
        {
            self.auxiliaryApps = auxiliaryApps
            self.billingMethod = billingMethod
            self.customerArtifactPaths = customerArtifactPaths
            self.extraDataPackageArn = extraDataPackageArn
            self.locale = locale
            self.location = location
            self.networkProfileArn = networkProfileArn
            self.radios = radios
            self.vpceConfigurationArns = vpceConfigurationArns
        }
    }

}
