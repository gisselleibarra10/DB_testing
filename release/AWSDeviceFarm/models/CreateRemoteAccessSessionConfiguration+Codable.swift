// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeviceFarmClientTypes.CreateRemoteAccessSessionConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case billingMethod
        case vpceConfigurationArns
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let billingMethod = self.billingMethod {
            try encodeContainer.encode(billingMethod.rawValue, forKey: .billingMethod)
        }
        if let vpceConfigurationArns = vpceConfigurationArns {
            var vpceConfigurationArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .vpceConfigurationArns)
            for amazonresourcenames0 in vpceConfigurationArns {
                try vpceConfigurationArnsContainer.encode(amazonresourcenames0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let billingMethodDecoded = try containerValues.decodeIfPresent(DeviceFarmClientTypes.BillingMethod.self, forKey: .billingMethod)
        billingMethod = billingMethodDecoded
        let vpceConfigurationArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .vpceConfigurationArns)
        var vpceConfigurationArnsDecoded0:[Swift.String]? = nil
        if let vpceConfigurationArnsContainer = vpceConfigurationArnsContainer {
            vpceConfigurationArnsDecoded0 = [Swift.String]()
            for string0 in vpceConfigurationArnsContainer {
                if let string0 = string0 {
                    vpceConfigurationArnsDecoded0?.append(string0)
                }
            }
        }
        vpceConfigurationArns = vpceConfigurationArnsDecoded0
    }
}
