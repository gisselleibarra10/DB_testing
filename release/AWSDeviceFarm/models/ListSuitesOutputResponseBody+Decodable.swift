// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSuitesOutputResponseBody: Swift.Equatable {
    let suites: [DeviceFarmClientTypes.Suite]?
    let nextToken: Swift.String?
}

extension ListSuitesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case suites
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let suitesContainer = try containerValues.decodeIfPresent([DeviceFarmClientTypes.Suite?].self, forKey: .suites)
        var suitesDecoded0:[DeviceFarmClientTypes.Suite]? = nil
        if let suitesContainer = suitesContainer {
            suitesDecoded0 = [DeviceFarmClientTypes.Suite]()
            for structure0 in suitesContainer {
                if let structure0 = structure0 {
                    suitesDecoded0?.append(structure0)
                }
            }
        }
        suites = suitesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
