// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeviceFarmClientTypes.RecurringCharge: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cost
        case frequency
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cost = self.cost {
            try encodeContainer.encode(cost, forKey: .cost)
        }
        if let frequency = self.frequency {
            try encodeContainer.encode(frequency.rawValue, forKey: .frequency)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let costDecoded = try containerValues.decodeIfPresent(DeviceFarmClientTypes.MonetaryAmount.self, forKey: .cost)
        cost = costDecoded
        let frequencyDecoded = try containerValues.decodeIfPresent(DeviceFarmClientTypes.RecurringChargeFrequency.self, forKey: .frequency)
        frequency = frequencyDecoded
    }
}
