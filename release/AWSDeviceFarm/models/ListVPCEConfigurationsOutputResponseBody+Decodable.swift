// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVPCEConfigurationsOutputResponseBody: Swift.Equatable {
    let vpceConfigurations: [DeviceFarmClientTypes.VPCEConfiguration]?
    let nextToken: Swift.String?
}

extension ListVPCEConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case vpceConfigurations
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vpceConfigurationsContainer = try containerValues.decodeIfPresent([DeviceFarmClientTypes.VPCEConfiguration?].self, forKey: .vpceConfigurations)
        var vpceConfigurationsDecoded0:[DeviceFarmClientTypes.VPCEConfiguration]? = nil
        if let vpceConfigurationsContainer = vpceConfigurationsContainer {
            vpceConfigurationsDecoded0 = [DeviceFarmClientTypes.VPCEConfiguration]()
            for structure0 in vpceConfigurationsContainer {
                if let structure0 = structure0 {
                    vpceConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        vpceConfigurations = vpceConfigurationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
