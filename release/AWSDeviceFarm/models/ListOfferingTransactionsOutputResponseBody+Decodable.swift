// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOfferingTransactionsOutputResponseBody: Swift.Equatable {
    let offeringTransactions: [DeviceFarmClientTypes.OfferingTransaction]?
    let nextToken: Swift.String?
}

extension ListOfferingTransactionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case offeringTransactions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let offeringTransactionsContainer = try containerValues.decodeIfPresent([DeviceFarmClientTypes.OfferingTransaction?].self, forKey: .offeringTransactions)
        var offeringTransactionsDecoded0:[DeviceFarmClientTypes.OfferingTransaction]? = nil
        if let offeringTransactionsContainer = offeringTransactionsContainer {
            offeringTransactionsDecoded0 = [DeviceFarmClientTypes.OfferingTransaction]()
            for structure0 in offeringTransactionsContainer {
                if let structure0 = structure0 {
                    offeringTransactionsDecoded0?.append(structure0)
                }
            }
        }
        offeringTransactions = offeringTransactionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
