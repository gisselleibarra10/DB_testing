// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTestGridSessionsOutputResponseBody: Swift.Equatable {
    let testGridSessions: [DeviceFarmClientTypes.TestGridSession]?
    let nextToken: Swift.String?
}

extension ListTestGridSessionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case testGridSessions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let testGridSessionsContainer = try containerValues.decodeIfPresent([DeviceFarmClientTypes.TestGridSession?].self, forKey: .testGridSessions)
        var testGridSessionsDecoded0:[DeviceFarmClientTypes.TestGridSession]? = nil
        if let testGridSessionsContainer = testGridSessionsContainer {
            testGridSessionsDecoded0 = [DeviceFarmClientTypes.TestGridSession]()
            for structure0 in testGridSessionsContainer {
                if let structure0 = structure0 {
                    testGridSessionsDecoded0?.append(structure0)
                }
            }
        }
        testGridSessions = testGridSessionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
