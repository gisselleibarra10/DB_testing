// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents a request to the schedule run operation.
public struct ScheduleRunInput: Swift.Equatable {
    /// The ARN of an application package to run tests against, created with [CreateUpload]. See [ListUploads].
    public var appArn: Swift.String?
    /// Information about the settings for the run to be scheduled.
    public var configuration: DeviceFarmClientTypes.ScheduleRunConfiguration?
    /// The ARN of the device pool for the run to be scheduled.
    public var devicePoolArn: Swift.String?
    /// The filter criteria used to dynamically select a set of devices for a test run and the maximum number of devices to be included in the run. Either devicePoolArn or deviceSelectionConfiguration is required in a request.
    public var deviceSelectionConfiguration: DeviceFarmClientTypes.DeviceSelectionConfiguration?
    /// Specifies configuration information about a test run, such as the execution timeout (in minutes).
    public var executionConfiguration: DeviceFarmClientTypes.ExecutionConfiguration?
    /// The name for the run to be scheduled.
    public var name: Swift.String?
    /// The ARN of the project for the run to be scheduled.
    /// This member is required.
    public var projectArn: Swift.String?
    /// Information about the test for the run to be scheduled.
    /// This member is required.
    public var test: DeviceFarmClientTypes.ScheduleRunTest?

    public init (
        appArn: Swift.String? = nil,
        configuration: DeviceFarmClientTypes.ScheduleRunConfiguration? = nil,
        devicePoolArn: Swift.String? = nil,
        deviceSelectionConfiguration: DeviceFarmClientTypes.DeviceSelectionConfiguration? = nil,
        executionConfiguration: DeviceFarmClientTypes.ExecutionConfiguration? = nil,
        name: Swift.String? = nil,
        projectArn: Swift.String? = nil,
        test: DeviceFarmClientTypes.ScheduleRunTest? = nil
    )
    {
        self.appArn = appArn
        self.configuration = configuration
        self.devicePoolArn = devicePoolArn
        self.deviceSelectionConfiguration = deviceSelectionConfiguration
        self.executionConfiguration = executionConfiguration
        self.name = name
        self.projectArn = projectArn
        self.test = test
    }
}
