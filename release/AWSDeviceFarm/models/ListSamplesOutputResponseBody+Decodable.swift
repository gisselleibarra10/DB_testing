// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSamplesOutputResponseBody: Swift.Equatable {
    let samples: [DeviceFarmClientTypes.Sample]?
    let nextToken: Swift.String?
}

extension ListSamplesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case samples
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let samplesContainer = try containerValues.decodeIfPresent([DeviceFarmClientTypes.Sample?].self, forKey: .samples)
        var samplesDecoded0:[DeviceFarmClientTypes.Sample]? = nil
        if let samplesContainer = samplesContainer {
            samplesDecoded0 = [DeviceFarmClientTypes.Sample]()
            for structure0 in samplesContainer {
                if let structure0 = structure0 {
                    samplesDecoded0?.append(structure0)
                }
            }
        }
        samples = samplesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
