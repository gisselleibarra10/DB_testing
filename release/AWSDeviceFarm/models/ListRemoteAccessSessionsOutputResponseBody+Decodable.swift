// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRemoteAccessSessionsOutputResponseBody: Swift.Equatable {
    let remoteAccessSessions: [DeviceFarmClientTypes.RemoteAccessSession]?
    let nextToken: Swift.String?
}

extension ListRemoteAccessSessionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case remoteAccessSessions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let remoteAccessSessionsContainer = try containerValues.decodeIfPresent([DeviceFarmClientTypes.RemoteAccessSession?].self, forKey: .remoteAccessSessions)
        var remoteAccessSessionsDecoded0:[DeviceFarmClientTypes.RemoteAccessSession]? = nil
        if let remoteAccessSessionsContainer = remoteAccessSessionsContainer {
            remoteAccessSessionsDecoded0 = [DeviceFarmClientTypes.RemoteAccessSession]()
            for structure0 in remoteAccessSessionsContainer {
                if let structure0 = structure0 {
                    remoteAccessSessionsDecoded0?.append(structure0)
                }
            }
        }
        remoteAccessSessions = remoteAccessSessionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
