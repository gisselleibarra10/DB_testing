// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeviceFarmClientTypes.TestGridSessionAction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case action
        case duration
        case requestMethod
        case started
        case statusCode
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let action = self.action {
            try encodeContainer.encode(action, forKey: .action)
        }
        if let duration = self.duration {
            try encodeContainer.encode(duration, forKey: .duration)
        }
        if let requestMethod = self.requestMethod {
            try encodeContainer.encode(requestMethod, forKey: .requestMethod)
        }
        if let started = self.started {
            try encodeContainer.encode(started.timeIntervalSince1970, forKey: .started)
        }
        if let statusCode = self.statusCode {
            try encodeContainer.encode(statusCode, forKey: .statusCode)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .action)
        action = actionDecoded
        let startedDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .started)
        started = startedDecoded
        let durationDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .duration)
        duration = durationDecoded
        let statusCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusCode)
        statusCode = statusCodeDecoded
        let requestMethodDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .requestMethod)
        requestMethod = requestMethodDecoded
    }
}
