// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeviceFarmClientTypes {
    /// An app or a set of one or more tests to upload or that have been uploaded.
    public struct Upload: Swift.Equatable {
        /// The upload's ARN.
        public var arn: Swift.String?
        /// The upload's category. Allowed values include:
        ///
        /// * CURATED: An upload managed by AWS Device Farm.
        ///
        /// * PRIVATE: An upload managed by the AWS Device Farm customer.
        public var category: DeviceFarmClientTypes.UploadCategory?
        /// The upload's content type (for example, application/octet-stream).
        public var contentType: Swift.String?
        /// When the upload was created.
        public var created: ClientRuntime.Date?
        /// A message about the upload's result.
        public var message: Swift.String?
        /// The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.
        public var metadata: Swift.String?
        /// The upload's file name.
        public var name: Swift.String?
        /// The upload's status. Must be one of the following values:
        ///
        /// * FAILED
        ///
        /// * INITIALIZED
        ///
        /// * PROCESSING
        ///
        /// * SUCCEEDED
        public var status: DeviceFarmClientTypes.UploadStatus?
        /// The upload's type. Must be one of the following values:
        ///
        /// * ANDROID_APP
        ///
        /// * IOS_APP
        ///
        /// * WEB_APP
        ///
        /// * EXTERNAL_DATA
        ///
        /// * APPIUM_JAVA_JUNIT_TEST_PACKAGE
        ///
        /// * APPIUM_JAVA_TESTNG_TEST_PACKAGE
        ///
        /// * APPIUM_PYTHON_TEST_PACKAGE
        ///
        /// * APPIUM_NODE_TEST_PACKAGE
        ///
        /// * APPIUM_RUBY_TEST_PACKAGE
        ///
        /// * APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE
        ///
        /// * APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE
        ///
        /// * APPIUM_WEB_PYTHON_TEST_PACKAGE
        ///
        /// * APPIUM_WEB_NODE_TEST_PACKAGE
        ///
        /// * APPIUM_WEB_RUBY_TEST_PACKAGE
        ///
        /// * CALABASH_TEST_PACKAGE
        ///
        /// * INSTRUMENTATION_TEST_PACKAGE
        ///
        /// * UIAUTOMATION_TEST_PACKAGE
        ///
        /// * UIAUTOMATOR_TEST_PACKAGE
        ///
        /// * XCTEST_TEST_PACKAGE
        ///
        /// * XCTEST_UI_TEST_PACKAGE
        ///
        /// * APPIUM_JAVA_JUNIT_TEST_SPEC
        ///
        /// * APPIUM_JAVA_TESTNG_TEST_SPEC
        ///
        /// * APPIUM_PYTHON_TEST_SPEC
        ///
        /// * APPIUM_NODE_TEST_SPEC
        ///
        /// * APPIUM_RUBY_TEST_SPEC
        ///
        /// * APPIUM_WEB_JAVA_JUNIT_TEST_SPEC
        ///
        /// * APPIUM_WEB_JAVA_TESTNG_TEST_SPEC
        ///
        /// * APPIUM_WEB_PYTHON_TEST_SPEC
        ///
        /// * APPIUM_WEB_NODE_TEST_SPEC
        ///
        /// * APPIUM_WEB_RUBY_TEST_SPEC
        ///
        /// * INSTRUMENTATION_TEST_SPEC
        ///
        /// * XCTEST_UI_TEST_SPEC
        public var type: DeviceFarmClientTypes.UploadType?
        /// The presigned Amazon S3 URL that was used to store a file using a PUT request.
        public var url: Swift.String?

        public init (
            arn: Swift.String? = nil,
            category: DeviceFarmClientTypes.UploadCategory? = nil,
            contentType: Swift.String? = nil,
            created: ClientRuntime.Date? = nil,
            message: Swift.String? = nil,
            metadata: Swift.String? = nil,
            name: Swift.String? = nil,
            status: DeviceFarmClientTypes.UploadStatus? = nil,
            type: DeviceFarmClientTypes.UploadType? = nil,
            url: Swift.String? = nil
        )
        {
            self.arn = arn
            self.category = category
            self.contentType = contentType
            self.created = created
            self.message = message
            self.metadata = metadata
            self.name = name
            self.status = status
            self.type = type
            self.url = url
        }
    }

}
