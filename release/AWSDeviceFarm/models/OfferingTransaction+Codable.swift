// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeviceFarmClientTypes.OfferingTransaction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cost
        case createdOn
        case offeringPromotionId
        case offeringStatus
        case transactionId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cost = self.cost {
            try encodeContainer.encode(cost, forKey: .cost)
        }
        if let createdOn = self.createdOn {
            try encodeContainer.encode(createdOn.timeIntervalSince1970, forKey: .createdOn)
        }
        if let offeringPromotionId = self.offeringPromotionId {
            try encodeContainer.encode(offeringPromotionId, forKey: .offeringPromotionId)
        }
        if let offeringStatus = self.offeringStatus {
            try encodeContainer.encode(offeringStatus, forKey: .offeringStatus)
        }
        if let transactionId = self.transactionId {
            try encodeContainer.encode(transactionId, forKey: .transactionId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let offeringStatusDecoded = try containerValues.decodeIfPresent(DeviceFarmClientTypes.OfferingStatus.self, forKey: .offeringStatus)
        offeringStatus = offeringStatusDecoded
        let transactionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transactionId)
        transactionId = transactionIdDecoded
        let offeringPromotionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .offeringPromotionId)
        offeringPromotionId = offeringPromotionIdDecoded
        let createdOnDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdOn)
        createdOn = createdOnDecoded
        let costDecoded = try containerValues.decodeIfPresent(DeviceFarmClientTypes.MonetaryAmount.self, forKey: .cost)
        cost = costDecoded
    }
}
