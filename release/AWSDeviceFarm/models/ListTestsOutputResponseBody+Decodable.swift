// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTestsOutputResponseBody: Swift.Equatable {
    let tests: [DeviceFarmClientTypes.Test]?
    let nextToken: Swift.String?
}

extension ListTestsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case tests
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let testsContainer = try containerValues.decodeIfPresent([DeviceFarmClientTypes.Test?].self, forKey: .tests)
        var testsDecoded0:[DeviceFarmClientTypes.Test]? = nil
        if let testsContainer = testsContainer {
            testsDecoded0 = [DeviceFarmClientTypes.Test]()
            for structure0 in testsContainer {
                if let structure0 = structure0 {
                    testsDecoded0?.append(structure0)
                }
            }
        }
        tests = testsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
