// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetOfferingStatusOutputResponseBody: Swift.Equatable {
    let current: [Swift.String:DeviceFarmClientTypes.OfferingStatus]?
    let nextPeriod: [Swift.String:DeviceFarmClientTypes.OfferingStatus]?
    let nextToken: Swift.String?
}

extension GetOfferingStatusOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case current
        case nextPeriod
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let currentContainer = try containerValues.decodeIfPresent([Swift.String: DeviceFarmClientTypes.OfferingStatus?].self, forKey: .current)
        var currentDecoded0: [Swift.String:DeviceFarmClientTypes.OfferingStatus]? = nil
        if let currentContainer = currentContainer {
            currentDecoded0 = [Swift.String:DeviceFarmClientTypes.OfferingStatus]()
            for (key0, offeringstatus0) in currentContainer {
                if let offeringstatus0 = offeringstatus0 {
                    currentDecoded0?[key0] = offeringstatus0
                }
            }
        }
        current = currentDecoded0
        let nextPeriodContainer = try containerValues.decodeIfPresent([Swift.String: DeviceFarmClientTypes.OfferingStatus?].self, forKey: .nextPeriod)
        var nextPeriodDecoded0: [Swift.String:DeviceFarmClientTypes.OfferingStatus]? = nil
        if let nextPeriodContainer = nextPeriodContainer {
            nextPeriodDecoded0 = [Swift.String:DeviceFarmClientTypes.OfferingStatus]()
            for (key0, offeringstatus0) in nextPeriodContainer {
                if let offeringstatus0 = offeringstatus0 {
                    nextPeriodDecoded0?[key0] = offeringstatus0
                }
            }
        }
        nextPeriod = nextPeriodDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
