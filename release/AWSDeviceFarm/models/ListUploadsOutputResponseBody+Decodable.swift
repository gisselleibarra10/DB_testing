// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUploadsOutputResponseBody: Swift.Equatable {
    let uploads: [DeviceFarmClientTypes.Upload]?
    let nextToken: Swift.String?
}

extension ListUploadsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case uploads
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let uploadsContainer = try containerValues.decodeIfPresent([DeviceFarmClientTypes.Upload?].self, forKey: .uploads)
        var uploadsDecoded0:[DeviceFarmClientTypes.Upload]? = nil
        if let uploadsContainer = uploadsContainer {
            uploadsDecoded0 = [DeviceFarmClientTypes.Upload]()
            for structure0 in uploadsContainer {
                if let structure0 = structure0 {
                    uploadsDecoded0?.append(structure0)
                }
            }
        }
        uploads = uploadsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
