// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateVPCEConfigurationInputBody: Swift.Equatable {
    let vpceConfigurationName: Swift.String?
    let vpceServiceName: Swift.String?
    let serviceDnsName: Swift.String?
    let vpceConfigurationDescription: Swift.String?
}

extension CreateVPCEConfigurationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case serviceDnsName
        case vpceConfigurationDescription
        case vpceConfigurationName
        case vpceServiceName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vpceConfigurationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpceConfigurationName)
        vpceConfigurationName = vpceConfigurationNameDecoded
        let vpceServiceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpceServiceName)
        vpceServiceName = vpceServiceNameDecoded
        let serviceDnsNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serviceDnsName)
        serviceDnsName = serviceDnsNameDecoded
        let vpceConfigurationDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpceConfigurationDescription)
        vpceConfigurationDescription = vpceConfigurationDescriptionDecoded
    }
}
