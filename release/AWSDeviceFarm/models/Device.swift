// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DeviceFarmClientTypes {
    /// Represents a device type that an app is tested against.
    public struct Device: Swift.Equatable {
        /// The device's ARN.
        public var arn: Swift.String?
        /// Indicates how likely a device is available for a test run. Currently available in the [ListDevices] and GetDevice API methods.
        public var availability: DeviceFarmClientTypes.DeviceAvailability?
        /// The device's carrier.
        public var carrier: Swift.String?
        /// Information about the device's CPU.
        public var cpu: DeviceFarmClientTypes.CPU?
        /// The name of the fleet to which this device belongs.
        public var fleetName: Swift.String?
        /// The type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.
        public var fleetType: Swift.String?
        /// The device's form factor. Allowed values include:
        ///
        /// * PHONE
        ///
        /// * TABLET
        public var formFactor: DeviceFarmClientTypes.DeviceFormFactor?
        /// The device's heap size, expressed in bytes.
        public var heapSize: Swift.Int?
        /// The device's image name.
        public var image: Swift.String?
        /// The instances that belong to this device.
        public var instances: [DeviceFarmClientTypes.DeviceInstance]?
        /// The device's manufacturer name.
        public var manufacturer: Swift.String?
        /// The device's total memory size, expressed in bytes.
        public var memory: Swift.Int?
        /// The device's model name.
        public var model: Swift.String?
        /// The device's model ID.
        public var modelId: Swift.String?
        /// The device's display name.
        public var name: Swift.String?
        /// The device's operating system type.
        public var os: Swift.String?
        /// The device's platform. Allowed values include:
        ///
        /// * ANDROID
        ///
        /// * IOS
        public var platform: DeviceFarmClientTypes.DevicePlatform?
        /// The device's radio.
        public var radio: Swift.String?
        /// Specifies whether remote access has been enabled for the specified device.
        public var remoteAccessEnabled: Swift.Bool?
        /// This flag is set to true if remote debugging is enabled for the device. Remote debugging is [no longer supported](https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html).
        public var remoteDebugEnabled: Swift.Bool?
        /// The resolution of the device.
        public var resolution: DeviceFarmClientTypes.Resolution?

        public init (
            arn: Swift.String? = nil,
            availability: DeviceFarmClientTypes.DeviceAvailability? = nil,
            carrier: Swift.String? = nil,
            cpu: DeviceFarmClientTypes.CPU? = nil,
            fleetName: Swift.String? = nil,
            fleetType: Swift.String? = nil,
            formFactor: DeviceFarmClientTypes.DeviceFormFactor? = nil,
            heapSize: Swift.Int? = nil,
            image: Swift.String? = nil,
            instances: [DeviceFarmClientTypes.DeviceInstance]? = nil,
            manufacturer: Swift.String? = nil,
            memory: Swift.Int? = nil,
            model: Swift.String? = nil,
            modelId: Swift.String? = nil,
            name: Swift.String? = nil,
            os: Swift.String? = nil,
            platform: DeviceFarmClientTypes.DevicePlatform? = nil,
            radio: Swift.String? = nil,
            remoteAccessEnabled: Swift.Bool? = nil,
            remoteDebugEnabled: Swift.Bool? = nil,
            resolution: DeviceFarmClientTypes.Resolution? = nil
        )
        {
            self.arn = arn
            self.availability = availability
            self.carrier = carrier
            self.cpu = cpu
            self.fleetName = fleetName
            self.fleetType = fleetType
            self.formFactor = formFactor
            self.heapSize = heapSize
            self.image = image
            self.instances = instances
            self.manufacturer = manufacturer
            self.memory = memory
            self.model = model
            self.modelId = modelId
            self.name = name
            self.os = os
            self.platform = platform
            self.radio = radio
            self.remoteAccessEnabled = remoteAccessEnabled
            self.remoteDebugEnabled = remoteDebugEnabled
            self.resolution = resolution
        }
    }

}
