// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOfferingPromotionsOutputResponseBody: Swift.Equatable {
    let offeringPromotions: [DeviceFarmClientTypes.OfferingPromotion]?
    let nextToken: Swift.String?
}

extension ListOfferingPromotionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case offeringPromotions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let offeringPromotionsContainer = try containerValues.decodeIfPresent([DeviceFarmClientTypes.OfferingPromotion?].self, forKey: .offeringPromotions)
        var offeringPromotionsDecoded0:[DeviceFarmClientTypes.OfferingPromotion]? = nil
        if let offeringPromotionsContainer = offeringPromotionsContainer {
            offeringPromotionsDecoded0 = [DeviceFarmClientTypes.OfferingPromotion]()
            for structure0 in offeringPromotionsContainer {
                if let structure0 = structure0 {
                    offeringPromotionsDecoded0?.append(structure0)
                }
            }
        }
        offeringPromotions = offeringPromotionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
