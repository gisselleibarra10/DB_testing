// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeviceFarmClientTypes.CustomerArtifactPaths: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case androidPaths
        case deviceHostPaths
        case iosPaths
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let androidPaths = androidPaths {
            var androidPathsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .androidPaths)
            for androidpaths0 in androidPaths {
                try androidPathsContainer.encode(androidpaths0)
            }
        }
        if let deviceHostPaths = deviceHostPaths {
            var deviceHostPathsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .deviceHostPaths)
            for devicehostpaths0 in deviceHostPaths {
                try deviceHostPathsContainer.encode(devicehostpaths0)
            }
        }
        if let iosPaths = iosPaths {
            var iosPathsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .iosPaths)
            for iospaths0 in iosPaths {
                try iosPathsContainer.encode(iospaths0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iosPathsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .iosPaths)
        var iosPathsDecoded0:[Swift.String]? = nil
        if let iosPathsContainer = iosPathsContainer {
            iosPathsDecoded0 = [Swift.String]()
            for string0 in iosPathsContainer {
                if let string0 = string0 {
                    iosPathsDecoded0?.append(string0)
                }
            }
        }
        iosPaths = iosPathsDecoded0
        let androidPathsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .androidPaths)
        var androidPathsDecoded0:[Swift.String]? = nil
        if let androidPathsContainer = androidPathsContainer {
            androidPathsDecoded0 = [Swift.String]()
            for string0 in androidPathsContainer {
                if let string0 = string0 {
                    androidPathsDecoded0?.append(string0)
                }
            }
        }
        androidPaths = androidPathsDecoded0
        let deviceHostPathsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .deviceHostPaths)
        var deviceHostPathsDecoded0:[Swift.String]? = nil
        if let deviceHostPathsContainer = deviceHostPathsContainer {
            deviceHostPathsDecoded0 = [Swift.String]()
            for string0 in deviceHostPathsContainer {
                if let string0 = string0 {
                    deviceHostPathsDecoded0?.append(string0)
                }
            }
        }
        deviceHostPaths = deviceHostPathsDecoded0
    }
}
