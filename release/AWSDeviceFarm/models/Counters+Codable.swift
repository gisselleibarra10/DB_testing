// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeviceFarmClientTypes.Counters: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errored
        case failed
        case passed
        case skipped
        case stopped
        case total
        case warned
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errored = self.errored {
            try encodeContainer.encode(errored, forKey: .errored)
        }
        if let failed = self.failed {
            try encodeContainer.encode(failed, forKey: .failed)
        }
        if let passed = self.passed {
            try encodeContainer.encode(passed, forKey: .passed)
        }
        if let skipped = self.skipped {
            try encodeContainer.encode(skipped, forKey: .skipped)
        }
        if let stopped = self.stopped {
            try encodeContainer.encode(stopped, forKey: .stopped)
        }
        if let total = self.total {
            try encodeContainer.encode(total, forKey: .total)
        }
        if let warned = self.warned {
            try encodeContainer.encode(warned, forKey: .warned)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .total)
        total = totalDecoded
        let passedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .passed)
        passed = passedDecoded
        let failedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failed)
        failed = failedDecoded
        let warnedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .warned)
        warned = warnedDecoded
        let erroredDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .errored)
        errored = erroredDecoded
        let stoppedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .stopped)
        stopped = stoppedDecoded
        let skippedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .skipped)
        skipped = skippedDecoded
    }
}
