// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeviceFarmClientTypes {
    /// Represents a condition that is evaluated.
    public struct Test: Swift.Equatable {
        /// The test's ARN.
        public var arn: Swift.String?
        /// The test's result counters.
        public var counters: DeviceFarmClientTypes.Counters?
        /// When the test was created.
        public var created: ClientRuntime.Date?
        /// Represents the total (metered or unmetered) minutes used by the test.
        public var deviceMinutes: DeviceFarmClientTypes.DeviceMinutes?
        /// A message about the test's result.
        public var message: Swift.String?
        /// The test's name.
        public var name: Swift.String?
        /// The test's result. Allowed values include:
        ///
        /// * PENDING
        ///
        /// * PASSED
        ///
        /// * WARNED
        ///
        /// * FAILED
        ///
        /// * SKIPPED
        ///
        /// * ERRORED
        ///
        /// * STOPPED
        public var result: DeviceFarmClientTypes.ExecutionResult?
        /// The test's start time.
        public var started: ClientRuntime.Date?
        /// The test's status. Allowed values include:
        ///
        /// * PENDING
        ///
        /// * PENDING_CONCURRENCY
        ///
        /// * PENDING_DEVICE
        ///
        /// * PROCESSING
        ///
        /// * SCHEDULING
        ///
        /// * PREPARING
        ///
        /// * RUNNING
        ///
        /// * COMPLETED
        ///
        /// * STOPPING
        public var status: DeviceFarmClientTypes.ExecutionStatus?
        /// The test's stop time.
        public var stopped: ClientRuntime.Date?
        /// The test's type. Must be one of the following values:
        ///
        /// * BUILTIN_FUZZ
        ///
        /// * BUILTIN_EXPLORER For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.
        ///
        /// * APPIUM_JAVA_JUNIT
        ///
        /// * APPIUM_JAVA_TESTNG
        ///
        /// * APPIUM_PYTHON
        ///
        /// * APPIUM_NODE
        ///
        /// * APPIUM_RUBY
        ///
        /// * APPIUM_WEB_JAVA_JUNIT
        ///
        /// * APPIUM_WEB_JAVA_TESTNG
        ///
        /// * APPIUM_WEB_PYTHON
        ///
        /// * APPIUM_WEB_NODE
        ///
        /// * APPIUM_WEB_RUBY
        ///
        /// * CALABASH
        ///
        /// * INSTRUMENTATION
        ///
        /// * UIAUTOMATION
        ///
        /// * UIAUTOMATOR
        ///
        /// * XCTEST
        ///
        /// * XCTEST_UI
        public var type: DeviceFarmClientTypes.TestType?

        public init (
            arn: Swift.String? = nil,
            counters: DeviceFarmClientTypes.Counters? = nil,
            created: ClientRuntime.Date? = nil,
            deviceMinutes: DeviceFarmClientTypes.DeviceMinutes? = nil,
            message: Swift.String? = nil,
            name: Swift.String? = nil,
            result: DeviceFarmClientTypes.ExecutionResult? = nil,
            started: ClientRuntime.Date? = nil,
            status: DeviceFarmClientTypes.ExecutionStatus? = nil,
            stopped: ClientRuntime.Date? = nil,
            type: DeviceFarmClientTypes.TestType? = nil
        )
        {
            self.arn = arn
            self.counters = counters
            self.created = created
            self.deviceMinutes = deviceMinutes
            self.message = message
            self.name = name
            self.result = result
            self.started = started
            self.status = status
            self.stopped = stopped
            self.type = type
        }
    }

}
