// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTapeArchivesOutputResponseBody: Swift.Equatable {
    let tapeArchives: [StorageGatewayClientTypes.TapeArchive]?
    let marker: Swift.String?
}

extension DescribeTapeArchivesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case tapeArchives = "TapeArchives"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tapeArchivesContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.TapeArchive?].self, forKey: .tapeArchives)
        var tapeArchivesDecoded0:[StorageGatewayClientTypes.TapeArchive]? = nil
        if let tapeArchivesContainer = tapeArchivesContainer {
            tapeArchivesDecoded0 = [StorageGatewayClientTypes.TapeArchive]()
            for structure0 in tapeArchivesContainer {
                if let structure0 = structure0 {
                    tapeArchivesDecoded0?.append(structure0)
                }
            }
        }
        tapeArchives = tapeArchivesDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
