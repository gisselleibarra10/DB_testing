// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVolumesOutputResponseBody: Swift.Equatable {
    let gatewayARN: Swift.String?
    let marker: Swift.String?
    let volumeInfos: [StorageGatewayClientTypes.VolumeInfo]?
}

extension ListVolumesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gatewayARN = "GatewayARN"
        case marker = "Marker"
        case volumeInfos = "VolumeInfos"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let volumeInfosContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.VolumeInfo?].self, forKey: .volumeInfos)
        var volumeInfosDecoded0:[StorageGatewayClientTypes.VolumeInfo]? = nil
        if let volumeInfosContainer = volumeInfosContainer {
            volumeInfosDecoded0 = [StorageGatewayClientTypes.VolumeInfo]()
            for structure0 in volumeInfosContainer {
                if let structure0 = structure0 {
                    volumeInfosDecoded0?.append(structure0)
                }
            }
        }
        volumeInfos = volumeInfosDecoded0
    }
}
