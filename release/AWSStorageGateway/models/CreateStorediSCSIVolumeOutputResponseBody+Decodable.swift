// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateStorediSCSIVolumeOutputResponseBody: Swift.Equatable {
    let volumeARN: Swift.String?
    let volumeSizeInBytes: Swift.Int
    let targetARN: Swift.String?
}

extension CreateStorediSCSIVolumeOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case targetARN = "TargetARN"
        case volumeARN = "VolumeARN"
        case volumeSizeInBytes = "VolumeSizeInBytes"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let volumeARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeARN)
        volumeARN = volumeARNDecoded
        let volumeSizeInBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .volumeSizeInBytes) ?? 0
        volumeSizeInBytes = volumeSizeInBytesDecoded
        let targetARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetARN)
        targetARN = targetARNDecoded
    }
}
