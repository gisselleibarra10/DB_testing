// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension StorageGatewayClientTypes {
    /// Describes a custom tape pool.
    public struct PoolInfo: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the custom tape pool. Use the [ListTapePools] operation to return a list of custom tape pools for your account and Amazon Web Services Region.
        public var poolARN: Swift.String?
        /// The name of the custom tape pool. PoolName can use all ASCII characters, except '/' and '\'.
        public var poolName: Swift.String?
        /// Status of the custom tape pool. Pool can be ACTIVE or DELETED.
        public var poolStatus: StorageGatewayClientTypes.PoolStatus?
        /// Tape retention lock time is set in days. Tape retention lock can be enabled for up to 100 years (36,500 days).
        public var retentionLockTimeInDays: Swift.Int?
        /// Tape retention lock type, which can be configured in two modes. When configured in governance mode, Amazon Web Services accounts with specific IAM permissions are authorized to remove the tape retention lock from archived virtual tapes. When configured in compliance mode, the tape retention lock cannot be removed by any user, including the root Amazon Web Services account.
        public var retentionLockType: StorageGatewayClientTypes.RetentionLockType?
        /// The storage class that is associated with the custom pool. When you use your backup application to eject the tape, the tape is archived directly into the storage class (S3 Glacier or S3 Glacier Deep Archive) that corresponds to the pool.
        public var storageClass: StorageGatewayClientTypes.TapeStorageClass?

        public init (
            poolARN: Swift.String? = nil,
            poolName: Swift.String? = nil,
            poolStatus: StorageGatewayClientTypes.PoolStatus? = nil,
            retentionLockTimeInDays: Swift.Int? = nil,
            retentionLockType: StorageGatewayClientTypes.RetentionLockType? = nil,
            storageClass: StorageGatewayClientTypes.TapeStorageClass? = nil
        )
        {
            self.poolARN = poolARN
            self.poolName = poolName
            self.poolStatus = poolStatus
            self.retentionLockTimeInDays = retentionLockTimeInDays
            self.retentionLockType = retentionLockType
            self.storageClass = storageClass
        }
    }

}
