// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVolumeRecoveryPointsOutputResponseBody: Swift.Equatable {
    let gatewayARN: Swift.String?
    let volumeRecoveryPointInfos: [StorageGatewayClientTypes.VolumeRecoveryPointInfo]?
}

extension ListVolumeRecoveryPointsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gatewayARN = "GatewayARN"
        case volumeRecoveryPointInfos = "VolumeRecoveryPointInfos"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let volumeRecoveryPointInfosContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.VolumeRecoveryPointInfo?].self, forKey: .volumeRecoveryPointInfos)
        var volumeRecoveryPointInfosDecoded0:[StorageGatewayClientTypes.VolumeRecoveryPointInfo]? = nil
        if let volumeRecoveryPointInfosContainer = volumeRecoveryPointInfosContainer {
            volumeRecoveryPointInfosDecoded0 = [StorageGatewayClientTypes.VolumeRecoveryPointInfo]()
            for structure0 in volumeRecoveryPointInfosContainer {
                if let structure0 = structure0 {
                    volumeRecoveryPointInfosDecoded0?.append(structure0)
                }
            }
        }
        volumeRecoveryPointInfos = volumeRecoveryPointInfosDecoded0
    }
}
