// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFileSharesOutputResponseBody: Swift.Equatable {
    let marker: Swift.String?
    let nextMarker: Swift.String?
    let fileShareInfoList: [StorageGatewayClientTypes.FileShareInfo]?
}

extension ListFileSharesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fileShareInfoList = "FileShareInfoList"
        case marker = "Marker"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let fileShareInfoListContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.FileShareInfo?].self, forKey: .fileShareInfoList)
        var fileShareInfoListDecoded0:[StorageGatewayClientTypes.FileShareInfo]? = nil
        if let fileShareInfoListContainer = fileShareInfoListContainer {
            fileShareInfoListDecoded0 = [StorageGatewayClientTypes.FileShareInfo]()
            for structure0 in fileShareInfoListContainer {
                if let structure0 = structure0 {
                    fileShareInfoListDecoded0?.append(structure0)
                }
            }
        }
        fileShareInfoList = fileShareInfoListDecoded0
    }
}
