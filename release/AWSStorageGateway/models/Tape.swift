// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StorageGatewayClientTypes {
    /// Describes a virtual tape object.
    public struct Tape: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of a symmetric customer master key (CMK) used for Amazon S3 server-side encryption. Storage Gateway does not support asymmetric CMKs. This value can only be set when KMSEncrypted is true. Optional.
        public var kMSKey: Swift.String?
        /// The date that the tape enters a custom tape pool.
        public var poolEntryDate: ClientRuntime.Date?
        /// The ID of the pool that contains tapes that will be archived. The tapes in this pool are archived in the S3 storage class that is associated with the pool. When you use your backup application to eject the tape, the tape is archived directly into the storage class (S3 Glacier or S3 Glacier Deep Archive) that corresponds to the pool.
        public var poolId: Swift.String?
        /// For archiving virtual tapes, indicates how much data remains to be uploaded before archiving is complete. Range: 0 (not started) to 100 (complete).
        public var progress: Swift.Double?
        /// The date that the tape is first archived with tape retention lock enabled.
        public var retentionStartDate: ClientRuntime.Date?
        /// The Amazon Resource Name (ARN) of the virtual tape.
        public var tapeARN: Swift.String?
        /// The barcode that identifies a specific virtual tape.
        public var tapeBarcode: Swift.String?
        /// The date the virtual tape was created.
        public var tapeCreatedDate: ClientRuntime.Date?
        /// The size, in bytes, of the virtual tape capacity.
        public var tapeSizeInBytes: Swift.Int?
        /// The current state of the virtual tape.
        public var tapeStatus: Swift.String?
        /// The size, in bytes, of data stored on the virtual tape. This value is not available for tapes created prior to May 13, 2015.
        public var tapeUsedInBytes: Swift.Int?
        /// The virtual tape library (VTL) device that the virtual tape is associated with.
        public var vTLDevice: Swift.String?
        /// If the tape is archived as write-once-read-many (WORM), this value is true.
        public var worm: Swift.Bool

        public init (
            kMSKey: Swift.String? = nil,
            poolEntryDate: ClientRuntime.Date? = nil,
            poolId: Swift.String? = nil,
            progress: Swift.Double? = nil,
            retentionStartDate: ClientRuntime.Date? = nil,
            tapeARN: Swift.String? = nil,
            tapeBarcode: Swift.String? = nil,
            tapeCreatedDate: ClientRuntime.Date? = nil,
            tapeSizeInBytes: Swift.Int? = nil,
            tapeStatus: Swift.String? = nil,
            tapeUsedInBytes: Swift.Int? = nil,
            vTLDevice: Swift.String? = nil,
            worm: Swift.Bool = false
        )
        {
            self.kMSKey = kMSKey
            self.poolEntryDate = poolEntryDate
            self.poolId = poolId
            self.progress = progress
            self.retentionStartDate = retentionStartDate
            self.tapeARN = tapeARN
            self.tapeBarcode = tapeBarcode
            self.tapeCreatedDate = tapeCreatedDate
            self.tapeSizeInBytes = tapeSizeInBytes
            self.tapeStatus = tapeStatus
            self.tapeUsedInBytes = tapeUsedInBytes
            self.vTLDevice = vTLDevice
            self.worm = worm
        }
    }

}
