// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateVTLDeviceTypeInputBody: Swift.Equatable {
    let vTLDeviceARN: Swift.String?
    let deviceType: Swift.String?
}

extension UpdateVTLDeviceTypeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceType = "DeviceType"
        case vTLDeviceARN = "VTLDeviceARN"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vTLDeviceARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vTLDeviceARN)
        vTLDeviceARN = vTLDeviceARNDecoded
        let deviceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceType)
        deviceType = deviceTypeDecoded
    }
}
