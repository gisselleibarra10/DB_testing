// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTapesOutputResponseBody: Swift.Equatable {
    let tapes: [StorageGatewayClientTypes.Tape]?
    let marker: Swift.String?
}

extension DescribeTapesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case tapes = "Tapes"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tapesContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.Tape?].self, forKey: .tapes)
        var tapesDecoded0:[StorageGatewayClientTypes.Tape]? = nil
        if let tapesContainer = tapesContainer {
            tapesDecoded0 = [StorageGatewayClientTypes.Tape]()
            for structure0 in tapesContainer {
                if let structure0 = structure0 {
                    tapesDecoded0?.append(structure0)
                }
            }
        }
        tapes = tapesDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
