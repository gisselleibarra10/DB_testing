// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// A JSON object containing the following fields:
public struct DescribeGatewayInformationOutputResponse: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of the Amazon CloudWatch log group that is used to monitor events in the gateway. This field only only exist and returns once it have been chosen and set by the SGW service, based on the OS version of the gateway VM
    public var cloudWatchLogGroupARN: Swift.String?
    /// Date after which this gateway will not receive software updates for new features and bug fixes.
    public var deprecationDate: Swift.String?
    /// The ID of the Amazon EC2 instance that was used to launch the gateway.
    public var ec2InstanceId: Swift.String?
    /// The Amazon Web Services Region where the Amazon EC2 instance is located.
    public var ec2InstanceRegion: Swift.String?
    /// The type of endpoint for your gateway. Valid Values: STANDARD | FIPS
    public var endpointType: Swift.String?
    /// The Amazon Resource Name (ARN) of the gateway. Use the [ListGateways] operation to return a list of gateways for your account and Amazon Web Services Region.
    public var gatewayARN: Swift.String?
    /// Specifies the size of the gateway's metadata cache.
    public var gatewayCapacity: StorageGatewayClientTypes.GatewayCapacity?
    /// The unique identifier assigned to your gateway during activation. This ID becomes part of the gateway Amazon Resource Name (ARN), which you use as input for other operations.
    public var gatewayId: Swift.String?
    /// The name you configured for your gateway.
    public var gatewayName: Swift.String?
    /// A [NetworkInterface] array that contains descriptions of the gateway network interfaces.
    public var gatewayNetworkInterfaces: [StorageGatewayClientTypes.NetworkInterface]?
    /// A value that indicates the operating state of the gateway.
    public var gatewayState: Swift.String?
    /// A value that indicates the time zone configured for the gateway.
    public var gatewayTimezone: Swift.String?
    /// The type of the gateway.
    public var gatewayType: Swift.String?
    /// The type of hardware or software platform on which the gateway is running.
    public var hostEnvironment: StorageGatewayClientTypes.HostEnvironment?
    /// A unique identifier for the specific instance of the host platform running the gateway. This value is only available for certain host environments, and its format depends on the host environment type.
    public var hostEnvironmentId: Swift.String?
    /// The date on which the last software update was applied to the gateway. If the gateway has never been updated, this field does not return a value in the response. This only only exist and returns once it have been chosen and set by the SGW service, based on the OS version of the gateway VM
    public var lastSoftwareUpdate: Swift.String?
    /// The date on which an update to the gateway is available. This date is in the time zone of the gateway. If the gateway is not available for an update this field is not returned in the response.
    public var nextUpdateAvailabilityDate: Swift.String?
    /// Date after which this gateway will not receive software updates for new features.
    public var softwareUpdatesEndDate: Swift.String?
    /// A list of the metadata cache sizes that the gateway can support based on its current hardware specifications.
    public var supportedGatewayCapacities: [StorageGatewayClientTypes.GatewayCapacity]?
    /// A list of up to 50 tags assigned to the gateway, sorted alphabetically by key name. Each tag is a key-value pair. For a gateway with more than 10 tags assigned, you can view all tags using the ListTagsForResource API operation.
    public var tags: [StorageGatewayClientTypes.Tag]?
    /// The configuration settings for the virtual private cloud (VPC) endpoint for your gateway.
    public var vPCEndpoint: Swift.String?

    public init (
        cloudWatchLogGroupARN: Swift.String? = nil,
        deprecationDate: Swift.String? = nil,
        ec2InstanceId: Swift.String? = nil,
        ec2InstanceRegion: Swift.String? = nil,
        endpointType: Swift.String? = nil,
        gatewayARN: Swift.String? = nil,
        gatewayCapacity: StorageGatewayClientTypes.GatewayCapacity? = nil,
        gatewayId: Swift.String? = nil,
        gatewayName: Swift.String? = nil,
        gatewayNetworkInterfaces: [StorageGatewayClientTypes.NetworkInterface]? = nil,
        gatewayState: Swift.String? = nil,
        gatewayTimezone: Swift.String? = nil,
        gatewayType: Swift.String? = nil,
        hostEnvironment: StorageGatewayClientTypes.HostEnvironment? = nil,
        hostEnvironmentId: Swift.String? = nil,
        lastSoftwareUpdate: Swift.String? = nil,
        nextUpdateAvailabilityDate: Swift.String? = nil,
        softwareUpdatesEndDate: Swift.String? = nil,
        supportedGatewayCapacities: [StorageGatewayClientTypes.GatewayCapacity]? = nil,
        tags: [StorageGatewayClientTypes.Tag]? = nil,
        vPCEndpoint: Swift.String? = nil
    )
    {
        self.cloudWatchLogGroupARN = cloudWatchLogGroupARN
        self.deprecationDate = deprecationDate
        self.ec2InstanceId = ec2InstanceId
        self.ec2InstanceRegion = ec2InstanceRegion
        self.endpointType = endpointType
        self.gatewayARN = gatewayARN
        self.gatewayCapacity = gatewayCapacity
        self.gatewayId = gatewayId
        self.gatewayName = gatewayName
        self.gatewayNetworkInterfaces = gatewayNetworkInterfaces
        self.gatewayState = gatewayState
        self.gatewayTimezone = gatewayTimezone
        self.gatewayType = gatewayType
        self.hostEnvironment = hostEnvironment
        self.hostEnvironmentId = hostEnvironmentId
        self.lastSoftwareUpdate = lastSoftwareUpdate
        self.nextUpdateAvailabilityDate = nextUpdateAvailabilityDate
        self.softwareUpdatesEndDate = softwareUpdatesEndDate
        self.supportedGatewayCapacities = supportedGatewayCapacities
        self.tags = tags
        self.vPCEndpoint = vPCEndpoint
    }
}
