// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateTapePoolInputBody: Swift.Equatable {
    let poolName: Swift.String?
    let storageClass: StorageGatewayClientTypes.TapeStorageClass?
    let retentionLockType: StorageGatewayClientTypes.RetentionLockType?
    let retentionLockTimeInDays: Swift.Int?
    let tags: [StorageGatewayClientTypes.Tag]?
}

extension CreateTapePoolInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case poolName = "PoolName"
        case retentionLockTimeInDays = "RetentionLockTimeInDays"
        case retentionLockType = "RetentionLockType"
        case storageClass = "StorageClass"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let poolNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .poolName)
        poolName = poolNameDecoded
        let storageClassDecoded = try containerValues.decodeIfPresent(StorageGatewayClientTypes.TapeStorageClass.self, forKey: .storageClass)
        storageClass = storageClassDecoded
        let retentionLockTypeDecoded = try containerValues.decodeIfPresent(StorageGatewayClientTypes.RetentionLockType.self, forKey: .retentionLockType)
        retentionLockType = retentionLockTypeDecoded
        let retentionLockTimeInDaysDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .retentionLockTimeInDays)
        retentionLockTimeInDays = retentionLockTimeInDaysDecoded
        let tagsContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[StorageGatewayClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [StorageGatewayClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
