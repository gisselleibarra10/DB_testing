// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateSnapshotScheduleInputBody: Swift.Equatable {
    let volumeARN: Swift.String?
    let startAt: Swift.Int?
    let recurrenceInHours: Swift.Int?
    let description: Swift.String?
    let tags: [StorageGatewayClientTypes.Tag]?
}

extension UpdateSnapshotScheduleInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case recurrenceInHours = "RecurrenceInHours"
        case startAt = "StartAt"
        case tags = "Tags"
        case volumeARN = "VolumeARN"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let volumeARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeARN)
        volumeARN = volumeARNDecoded
        let startAtDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .startAt)
        startAt = startAtDecoded
        let recurrenceInHoursDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .recurrenceInHours)
        recurrenceInHours = recurrenceInHoursDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let tagsContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[StorageGatewayClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [StorageGatewayClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
