// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTapesOutputResponseBody: Swift.Equatable {
    let tapeInfos: [StorageGatewayClientTypes.TapeInfo]?
    let marker: Swift.String?
}

extension ListTapesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case tapeInfos = "TapeInfos"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tapeInfosContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.TapeInfo?].self, forKey: .tapeInfos)
        var tapeInfosDecoded0:[StorageGatewayClientTypes.TapeInfo]? = nil
        if let tapeInfosContainer = tapeInfosContainer {
            tapeInfosDecoded0 = [StorageGatewayClientTypes.TapeInfo]()
            for structure0 in tapeInfosContainer {
                if let structure0 = structure0 {
                    tapeInfosDecoded0?.append(structure0)
                }
            }
        }
        tapeInfos = tapeInfosDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
