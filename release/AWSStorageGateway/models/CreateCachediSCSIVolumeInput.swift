// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateCachediSCSIVolumeInput: Swift.Equatable {
    /// A unique identifier that you use to retry a request. If you retry a request, use the same ClientToken you specified in the initial request.
    /// This member is required.
    public var clientToken: Swift.String?
    /// The Amazon Resource Name (ARN) of the gateway. Use the [ListGateways] operation to return a list of gateways for your account and Amazon Web Services Region.
    /// This member is required.
    public var gatewayARN: Swift.String?
    /// Set to true to use Amazon S3 server-side encryption with your own KMS key, or false to use a key managed by Amazon S3. Optional. Valid Values: true | false
    public var kMSEncrypted: Swift.Bool?
    /// The Amazon Resource Name (ARN) of a symmetric customer master key (CMK) used for Amazon S3 server-side encryption. Storage Gateway does not support asymmetric CMKs. This value can only be set when KMSEncrypted is true. Optional.
    public var kMSKey: Swift.String?
    /// The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted. Use [DescribeGatewayInformation] to get a list of the network interfaces available on a gateway. Valid Values: A valid IP address.
    /// This member is required.
    public var networkInterfaceId: Swift.String?
    /// The snapshot ID (e.g. "snap-1122aabb") of the snapshot to restore as the new cached volume. Specify this field if you want to create the iSCSI storage volume from a snapshot; otherwise, do not include this field. To list snapshots for your account use [DescribeSnapshots](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSnapshots.html) in the Amazon Elastic Compute Cloud API Reference.
    public var snapshotId: Swift.String?
    /// The ARN for an existing volume. Specifying this ARN makes the new volume into an exact copy of the specified existing volume's latest recovery point. The VolumeSizeInBytes value for this new volume must be equal to or larger than the size of the existing volume, in bytes.
    public var sourceVolumeARN: Swift.String?
    /// A list of up to 50 tags that you can assign to a cached volume. Each tag is a key-value pair. Valid characters for key and value are letters, spaces, and numbers that you can represent in UTF-8 format, and the following special characters: + - = . _ : / @. The maximum length of a tag's key is 128 characters, and the maximum length for a tag's value is 256 characters.
    public var tags: [StorageGatewayClientTypes.Tag]?
    /// The name of the iSCSI target used by an initiator to connect to a volume and used as a suffix for the target ARN. For example, specifying TargetName as myvolume results in the target ARN of arn:aws:storagegateway:us-east-2:111122223333:gateway/sgw-12A3456B/target/iqn.1997-05.com.amazon:myvolume. The target name must be unique across all volumes on a gateway. If you don't specify a value, Storage Gateway uses the value that was previously used for this volume as the new target name.
    /// This member is required.
    public var targetName: Swift.String?
    /// The size of the volume in bytes.
    /// This member is required.
    public var volumeSizeInBytes: Swift.Int

    public init (
        clientToken: Swift.String? = nil,
        gatewayARN: Swift.String? = nil,
        kMSEncrypted: Swift.Bool? = nil,
        kMSKey: Swift.String? = nil,
        networkInterfaceId: Swift.String? = nil,
        snapshotId: Swift.String? = nil,
        sourceVolumeARN: Swift.String? = nil,
        tags: [StorageGatewayClientTypes.Tag]? = nil,
        targetName: Swift.String? = nil,
        volumeSizeInBytes: Swift.Int = 0
    )
    {
        self.clientToken = clientToken
        self.gatewayARN = gatewayARN
        self.kMSEncrypted = kMSEncrypted
        self.kMSKey = kMSKey
        self.networkInterfaceId = networkInterfaceId
        self.snapshotId = snapshotId
        self.sourceVolumeARN = sourceVolumeARN
        self.tags = tags
        self.targetName = targetName
        self.volumeSizeInBytes = volumeSizeInBytes
    }
}
