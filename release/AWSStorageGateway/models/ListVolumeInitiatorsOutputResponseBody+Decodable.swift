// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVolumeInitiatorsOutputResponseBody: Swift.Equatable {
    let initiators: [Swift.String]?
}

extension ListVolumeInitiatorsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case initiators = "Initiators"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let initiatorsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .initiators)
        var initiatorsDecoded0:[Swift.String]? = nil
        if let initiatorsContainer = initiatorsContainer {
            initiatorsDecoded0 = [Swift.String]()
            for string0 in initiatorsContainer {
                if let string0 = string0 {
                    initiatorsDecoded0?.append(string0)
                }
            }
        }
        initiators = initiatorsDecoded0
    }
}
