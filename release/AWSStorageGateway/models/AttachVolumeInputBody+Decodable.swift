// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AttachVolumeInputBody: Swift.Equatable {
    let gatewayARN: Swift.String?
    let targetName: Swift.String?
    let volumeARN: Swift.String?
    let networkInterfaceId: Swift.String?
    let diskId: Swift.String?
}

extension AttachVolumeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case diskId = "DiskId"
        case gatewayARN = "GatewayARN"
        case networkInterfaceId = "NetworkInterfaceId"
        case targetName = "TargetName"
        case volumeARN = "VolumeARN"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let targetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetName)
        targetName = targetNameDecoded
        let volumeARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeARN)
        volumeARN = volumeARNDecoded
        let networkInterfaceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkInterfaceId)
        networkInterfaceId = networkInterfaceIdDecoded
        let diskIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .diskId)
        diskId = diskIdDecoded
    }
}
