// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateFileSystemInputBody: Swift.Equatable {
    let userName: Swift.String?
    let password: Swift.String?
    let clientToken: Swift.String?
    let gatewayARN: Swift.String?
    let locationARN: Swift.String?
    let tags: [StorageGatewayClientTypes.Tag]?
    let auditDestinationARN: Swift.String?
    let cacheAttributes: StorageGatewayClientTypes.CacheAttributes?
    let endpointNetworkConfiguration: StorageGatewayClientTypes.EndpointNetworkConfiguration?
}

extension AssociateFileSystemInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case auditDestinationARN = "AuditDestinationARN"
        case cacheAttributes = "CacheAttributes"
        case clientToken = "ClientToken"
        case endpointNetworkConfiguration = "EndpointNetworkConfiguration"
        case gatewayARN = "GatewayARN"
        case locationARN = "LocationARN"
        case password = "Password"
        case tags = "Tags"
        case userName = "UserName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userName)
        userName = userNameDecoded
        let passwordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .password)
        password = passwordDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let gatewayARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let locationARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .locationARN)
        locationARN = locationARNDecoded
        let tagsContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[StorageGatewayClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [StorageGatewayClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
        let auditDestinationARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .auditDestinationARN)
        auditDestinationARN = auditDestinationARNDecoded
        let cacheAttributesDecoded = try containerValues.decodeIfPresent(StorageGatewayClientTypes.CacheAttributes.self, forKey: .cacheAttributes)
        cacheAttributes = cacheAttributesDecoded
        let endpointNetworkConfigurationDecoded = try containerValues.decodeIfPresent(StorageGatewayClientTypes.EndpointNetworkConfiguration.self, forKey: .endpointNetworkConfiguration)
        endpointNetworkConfiguration = endpointNetworkConfigurationDecoded
    }
}
