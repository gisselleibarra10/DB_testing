// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssignTapePoolInputBody: Swift.Equatable {
    let tapeARN: Swift.String?
    let poolId: Swift.String?
    let bypassGovernanceRetention: Swift.Bool
}

extension AssignTapePoolInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bypassGovernanceRetention = "BypassGovernanceRetention"
        case poolId = "PoolId"
        case tapeARN = "TapeARN"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tapeARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .tapeARN)
        tapeARN = tapeARNDecoded
        let poolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .poolId)
        poolId = poolIdDecoded
        let bypassGovernanceRetentionDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .bypassGovernanceRetention) ?? false
        bypassGovernanceRetention = bypassGovernanceRetentionDecoded
    }
}
