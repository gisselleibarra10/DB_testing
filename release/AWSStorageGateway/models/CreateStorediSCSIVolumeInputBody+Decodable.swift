// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateStorediSCSIVolumeInputBody: Swift.Equatable {
    let gatewayARN: Swift.String?
    let diskId: Swift.String?
    let snapshotId: Swift.String?
    let preserveExistingData: Swift.Bool
    let targetName: Swift.String?
    let networkInterfaceId: Swift.String?
    let kMSEncrypted: Swift.Bool?
    let kMSKey: Swift.String?
    let tags: [StorageGatewayClientTypes.Tag]?
}

extension CreateStorediSCSIVolumeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case diskId = "DiskId"
        case gatewayARN = "GatewayARN"
        case kMSEncrypted = "KMSEncrypted"
        case kMSKey = "KMSKey"
        case networkInterfaceId = "NetworkInterfaceId"
        case preserveExistingData = "PreserveExistingData"
        case snapshotId = "SnapshotId"
        case tags = "Tags"
        case targetName = "TargetName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let diskIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .diskId)
        diskId = diskIdDecoded
        let snapshotIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snapshotId)
        snapshotId = snapshotIdDecoded
        let preserveExistingDataDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .preserveExistingData) ?? false
        preserveExistingData = preserveExistingDataDecoded
        let targetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetName)
        targetName = targetNameDecoded
        let networkInterfaceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkInterfaceId)
        networkInterfaceId = networkInterfaceIdDecoded
        let kMSEncryptedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .kMSEncrypted)
        kMSEncrypted = kMSEncryptedDecoded
        let kMSKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kMSKey)
        kMSKey = kMSKeyDecoded
        let tagsContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[StorageGatewayClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [StorageGatewayClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
