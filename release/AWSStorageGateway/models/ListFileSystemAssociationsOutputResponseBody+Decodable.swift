// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFileSystemAssociationsOutputResponseBody: Swift.Equatable {
    let marker: Swift.String?
    let nextMarker: Swift.String?
    let fileSystemAssociationSummaryList: [StorageGatewayClientTypes.FileSystemAssociationSummary]?
}

extension ListFileSystemAssociationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fileSystemAssociationSummaryList = "FileSystemAssociationSummaryList"
        case marker = "Marker"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let fileSystemAssociationSummaryListContainer = try containerValues.decodeIfPresent([StorageGatewayClientTypes.FileSystemAssociationSummary?].self, forKey: .fileSystemAssociationSummaryList)
        var fileSystemAssociationSummaryListDecoded0:[StorageGatewayClientTypes.FileSystemAssociationSummary]? = nil
        if let fileSystemAssociationSummaryListContainer = fileSystemAssociationSummaryListContainer {
            fileSystemAssociationSummaryListDecoded0 = [StorageGatewayClientTypes.FileSystemAssociationSummary]()
            for structure0 in fileSystemAssociationSummaryListContainer {
                if let structure0 = structure0 {
                    fileSystemAssociationSummaryListDecoded0?.append(structure0)
                }
            }
        }
        fileSystemAssociationSummaryList = fileSystemAssociationSummaryListDecoded0
    }
}
