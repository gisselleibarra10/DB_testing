// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BudgetsClientTypes.HistoricalOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case budgetAdjustmentPeriod = "BudgetAdjustmentPeriod"
        case lookBackAvailablePeriods = "LookBackAvailablePeriods"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let budgetAdjustmentPeriod = self.budgetAdjustmentPeriod {
            try encodeContainer.encode(budgetAdjustmentPeriod, forKey: .budgetAdjustmentPeriod)
        }
        if let lookBackAvailablePeriods = self.lookBackAvailablePeriods {
            try encodeContainer.encode(lookBackAvailablePeriods, forKey: .lookBackAvailablePeriods)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let budgetAdjustmentPeriodDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .budgetAdjustmentPeriod)
        budgetAdjustmentPeriod = budgetAdjustmentPeriodDecoded
        let lookBackAvailablePeriodsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .lookBackAvailablePeriods)
        lookBackAvailablePeriods = lookBackAvailablePeriodsDecoded
    }
}
