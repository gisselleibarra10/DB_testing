// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension BudgetsClientTypes {
    /// The type of a budget. It must be one of the following types: COST, USAGE, RI_UTILIZATION, RI_COVERAGE, SAVINGS_PLANS_UTILIZATION, or SAVINGS_PLANS_COVERAGE.
    public enum BudgetType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case cost
        case ricoverage
        case riutilization
        case spcoverage
        case sputilization
        case usage
        case sdkUnknown(Swift.String)

        public static var allCases: [BudgetType] {
            return [
                .cost,
                .ricoverage,
                .riutilization,
                .spcoverage,
                .sputilization,
                .usage,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .cost: return "COST"
            case .ricoverage: return "RI_COVERAGE"
            case .riutilization: return "RI_UTILIZATION"
            case .spcoverage: return "SAVINGS_PLANS_COVERAGE"
            case .sputilization: return "SAVINGS_PLANS_UTILIZATION"
            case .usage: return "USAGE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = BudgetType(rawValue: rawValue) ?? BudgetType.sdkUnknown(rawValue)
        }
    }
}
