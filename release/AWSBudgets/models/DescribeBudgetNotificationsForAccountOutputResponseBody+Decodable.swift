// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeBudgetNotificationsForAccountOutputResponseBody: Swift.Equatable {
    let budgetNotificationsForAccount: [BudgetsClientTypes.BudgetNotificationsForAccount]?
    let nextToken: Swift.String?
}

extension DescribeBudgetNotificationsForAccountOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case budgetNotificationsForAccount = "BudgetNotificationsForAccount"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let budgetNotificationsForAccountContainer = try containerValues.decodeIfPresent([BudgetsClientTypes.BudgetNotificationsForAccount?].self, forKey: .budgetNotificationsForAccount)
        var budgetNotificationsForAccountDecoded0:[BudgetsClientTypes.BudgetNotificationsForAccount]? = nil
        if let budgetNotificationsForAccountContainer = budgetNotificationsForAccountContainer {
            budgetNotificationsForAccountDecoded0 = [BudgetsClientTypes.BudgetNotificationsForAccount]()
            for structure0 in budgetNotificationsForAccountContainer {
                if let structure0 = structure0 {
                    budgetNotificationsForAccountDecoded0?.append(structure0)
                }
            }
        }
        budgetNotificationsForAccount = budgetNotificationsForAccountDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
