// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BudgetsClientTypes.ActionHistory: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionHistoryDetails = "ActionHistoryDetails"
        case eventType = "EventType"
        case status = "Status"
        case timestamp = "Timestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionHistoryDetails = self.actionHistoryDetails {
            try encodeContainer.encode(actionHistoryDetails, forKey: .actionHistoryDetails)
        }
        if let eventType = self.eventType {
            try encodeContainer.encode(eventType.rawValue, forKey: .eventType)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let timestamp = self.timestamp {
            try encodeContainer.encode(timestamp.timeIntervalSince1970, forKey: .timestamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .timestamp)
        timestamp = timestampDecoded
        let statusDecoded = try containerValues.decodeIfPresent(BudgetsClientTypes.ActionStatus.self, forKey: .status)
        status = statusDecoded
        let eventTypeDecoded = try containerValues.decodeIfPresent(BudgetsClientTypes.EventType.self, forKey: .eventType)
        eventType = eventTypeDecoded
        let actionHistoryDetailsDecoded = try containerValues.decodeIfPresent(BudgetsClientTypes.ActionHistoryDetails.self, forKey: .actionHistoryDetails)
        actionHistoryDetails = actionHistoryDetailsDecoded
    }
}
