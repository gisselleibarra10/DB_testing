// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BudgetsClientTypes.ScpActionDefinition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case policyId = "PolicyId"
        case targetIds = "TargetIds"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let policyId = self.policyId {
            try encodeContainer.encode(policyId, forKey: .policyId)
        }
        if let targetIds = targetIds {
            var targetIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .targetIds)
            for targetids0 in targetIds {
                try targetIdsContainer.encode(targetids0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyId)
        policyId = policyIdDecoded
        let targetIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .targetIds)
        var targetIdsDecoded0:[Swift.String]? = nil
        if let targetIdsContainer = targetIdsContainer {
            targetIdsDecoded0 = [Swift.String]()
            for string0 in targetIdsContainer {
                if let string0 = string0 {
                    targetIdsDecoded0?.append(string0)
                }
            }
        }
        targetIds = targetIdsDecoded0
    }
}
