// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateBudgetActionInput: Swift.Equatable {
    /// The account ID of the user. It's a 12-digit number.
    /// This member is required.
    public var accountId: Swift.String?
    /// A system-generated universally unique identifier (UUID) for the action.
    /// This member is required.
    public var actionId: Swift.String?
    /// The trigger threshold of the action.
    public var actionThreshold: BudgetsClientTypes.ActionThreshold?
    /// This specifies if the action needs manual or automatic approval.
    public var approvalModel: BudgetsClientTypes.ApprovalModel?
    /// A string that represents the budget name. The ":" and "\" characters aren't allowed.
    /// This member is required.
    public var budgetName: Swift.String?
    /// Specifies all of the type-specific parameters.
    public var definition: BudgetsClientTypes.Definition?
    /// The role passed for action execution and reversion. Roles and actions must be in the same account.
    public var executionRoleArn: Swift.String?
    /// The type of a notification. It must be ACTUAL or FORECASTED.
    public var notificationType: BudgetsClientTypes.NotificationType?
    /// A list of subscribers.
    public var subscribers: [BudgetsClientTypes.Subscriber]?

    public init (
        accountId: Swift.String? = nil,
        actionId: Swift.String? = nil,
        actionThreshold: BudgetsClientTypes.ActionThreshold? = nil,
        approvalModel: BudgetsClientTypes.ApprovalModel? = nil,
        budgetName: Swift.String? = nil,
        definition: BudgetsClientTypes.Definition? = nil,
        executionRoleArn: Swift.String? = nil,
        notificationType: BudgetsClientTypes.NotificationType? = nil,
        subscribers: [BudgetsClientTypes.Subscriber]? = nil
    )
    {
        self.accountId = accountId
        self.actionId = actionId
        self.actionThreshold = actionThreshold
        self.approvalModel = approvalModel
        self.budgetName = budgetName
        self.definition = definition
        self.executionRoleArn = executionRoleArn
        self.notificationType = notificationType
        self.subscribers = subscribers
    }
}
