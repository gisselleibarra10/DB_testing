// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateNotificationInputBody: Swift.Equatable {
    let accountId: Swift.String?
    let budgetName: Swift.String?
    let oldNotification: BudgetsClientTypes.Notification?
    let newNotification: BudgetsClientTypes.Notification?
}

extension UpdateNotificationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountId = "AccountId"
        case budgetName = "BudgetName"
        case newNotification = "NewNotification"
        case oldNotification = "OldNotification"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let budgetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .budgetName)
        budgetName = budgetNameDecoded
        let oldNotificationDecoded = try containerValues.decodeIfPresent(BudgetsClientTypes.Notification.self, forKey: .oldNotification)
        oldNotification = oldNotificationDecoded
        let newNotificationDecoded = try containerValues.decodeIfPresent(BudgetsClientTypes.Notification.self, forKey: .newNotification)
        newNotification = newNotificationDecoded
    }
}
