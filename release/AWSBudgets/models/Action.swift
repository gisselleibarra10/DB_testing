// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension BudgetsClientTypes {
    /// A budget action resource.
    public struct Action: Swift.Equatable {
        /// A system-generated universally unique identifier (UUID) for the action.
        /// This member is required.
        public var actionId: Swift.String?
        /// The trigger threshold of the action.
        /// This member is required.
        public var actionThreshold: BudgetsClientTypes.ActionThreshold?
        /// The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition.
        /// This member is required.
        public var actionType: BudgetsClientTypes.ActionType?
        /// This specifies if the action needs manual or automatic approval.
        /// This member is required.
        public var approvalModel: BudgetsClientTypes.ApprovalModel?
        /// A string that represents the budget name. The ":" and "\" characters aren't allowed.
        /// This member is required.
        public var budgetName: Swift.String?
        /// Where you specify all of the type-specific parameters.
        /// This member is required.
        public var definition: BudgetsClientTypes.Definition?
        /// The role passed for action execution and reversion. Roles and actions must be in the same account.
        /// This member is required.
        public var executionRoleArn: Swift.String?
        /// The type of a notification. It must be ACTUAL or FORECASTED.
        /// This member is required.
        public var notificationType: BudgetsClientTypes.NotificationType?
        /// The status of the action.
        /// This member is required.
        public var status: BudgetsClientTypes.ActionStatus?
        /// A list of subscribers.
        /// This member is required.
        public var subscribers: [BudgetsClientTypes.Subscriber]?

        public init (
            actionId: Swift.String? = nil,
            actionThreshold: BudgetsClientTypes.ActionThreshold? = nil,
            actionType: BudgetsClientTypes.ActionType? = nil,
            approvalModel: BudgetsClientTypes.ApprovalModel? = nil,
            budgetName: Swift.String? = nil,
            definition: BudgetsClientTypes.Definition? = nil,
            executionRoleArn: Swift.String? = nil,
            notificationType: BudgetsClientTypes.NotificationType? = nil,
            status: BudgetsClientTypes.ActionStatus? = nil,
            subscribers: [BudgetsClientTypes.Subscriber]? = nil
        )
        {
            self.actionId = actionId
            self.actionThreshold = actionThreshold
            self.actionType = actionType
            self.approvalModel = approvalModel
            self.budgetName = budgetName
            self.definition = definition
            self.executionRoleArn = executionRoleArn
            self.notificationType = notificationType
            self.status = status
            self.subscribers = subscribers
        }
    }

}
