// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateSubscriberInputBody: Swift.Equatable {
    let accountId: Swift.String?
    let budgetName: Swift.String?
    let notification: BudgetsClientTypes.Notification?
    let oldSubscriber: BudgetsClientTypes.Subscriber?
    let newSubscriber: BudgetsClientTypes.Subscriber?
}

extension UpdateSubscriberInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountId = "AccountId"
        case budgetName = "BudgetName"
        case newSubscriber = "NewSubscriber"
        case notification = "Notification"
        case oldSubscriber = "OldSubscriber"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let budgetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .budgetName)
        budgetName = budgetNameDecoded
        let notificationDecoded = try containerValues.decodeIfPresent(BudgetsClientTypes.Notification.self, forKey: .notification)
        notification = notificationDecoded
        let oldSubscriberDecoded = try containerValues.decodeIfPresent(BudgetsClientTypes.Subscriber.self, forKey: .oldSubscriber)
        oldSubscriber = oldSubscriberDecoded
        let newSubscriberDecoded = try containerValues.decodeIfPresent(BudgetsClientTypes.Subscriber.self, forKey: .newSubscriber)
        newSubscriber = newSubscriberDecoded
    }
}
