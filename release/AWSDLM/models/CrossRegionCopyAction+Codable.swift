// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DlmClientTypes.CrossRegionCopyAction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case encryptionConfiguration = "EncryptionConfiguration"
        case retainRule = "RetainRule"
        case target = "Target"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let encryptionConfiguration = self.encryptionConfiguration {
            try encodeContainer.encode(encryptionConfiguration, forKey: .encryptionConfiguration)
        }
        if let retainRule = self.retainRule {
            try encodeContainer.encode(retainRule, forKey: .retainRule)
        }
        if let target = self.target {
            try encodeContainer.encode(target, forKey: .target)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .target)
        target = targetDecoded
        let encryptionConfigurationDecoded = try containerValues.decodeIfPresent(DlmClientTypes.EncryptionConfiguration.self, forKey: .encryptionConfiguration)
        encryptionConfiguration = encryptionConfigurationDecoded
        let retainRuleDecoded = try containerValues.decodeIfPresent(DlmClientTypes.CrossRegionCopyRetainRule.self, forKey: .retainRule)
        retainRule = retainRuleDecoded
    }
}
