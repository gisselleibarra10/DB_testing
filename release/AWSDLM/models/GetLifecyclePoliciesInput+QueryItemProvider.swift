// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetLifecyclePoliciesInput: ClientRuntime.QueryItemProvider {
    public var queryItems: [ClientRuntime.URLQueryItem] {
        var items = [ClientRuntime.URLQueryItem]()
        if let resourceTypes = resourceTypes {
            resourceTypes.forEach { queryItemValue in
                let queryItem = ClientRuntime.URLQueryItem(name: "resourceTypes".urlPercentEncoding(), value: Swift.String(queryItemValue.rawValue).urlPercentEncoding())
                items.append(queryItem)
            }
        }
        if let tagsToAdd = tagsToAdd {
            tagsToAdd.forEach { queryItemValue in
                let queryItem = ClientRuntime.URLQueryItem(name: "tagsToAdd".urlPercentEncoding(), value: Swift.String(queryItemValue).urlPercentEncoding())
                items.append(queryItem)
            }
        }
        if let state = state {
            let stateQueryItem = ClientRuntime.URLQueryItem(name: "state".urlPercentEncoding(), value: Swift.String(state.rawValue).urlPercentEncoding())
            items.append(stateQueryItem)
        }
        if let policyIds = policyIds {
            policyIds.forEach { queryItemValue in
                let queryItem = ClientRuntime.URLQueryItem(name: "policyIds".urlPercentEncoding(), value: Swift.String(queryItemValue).urlPercentEncoding())
                items.append(queryItem)
            }
        }
        if let targetTags = targetTags {
            targetTags.forEach { queryItemValue in
                let queryItem = ClientRuntime.URLQueryItem(name: "targetTags".urlPercentEncoding(), value: Swift.String(queryItemValue).urlPercentEncoding())
                items.append(queryItem)
            }
        }
        return items
    }
}
