// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InvalidRequestExceptionBody: Swift.Equatable {
    let message: Swift.String?
    let code: Swift.String?
    let requiredParameters: [Swift.String]?
    let mutuallyExclusiveParameters: [Swift.String]?
}

extension InvalidRequestExceptionBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case code = "Code"
        case message = "Message"
        case mutuallyExclusiveParameters = "MutuallyExclusiveParameters"
        case requiredParameters = "RequiredParameters"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let codeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .code)
        code = codeDecoded
        let requiredParametersContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .requiredParameters)
        var requiredParametersDecoded0:[Swift.String]? = nil
        if let requiredParametersContainer = requiredParametersContainer {
            requiredParametersDecoded0 = [Swift.String]()
            for string0 in requiredParametersContainer {
                if let string0 = string0 {
                    requiredParametersDecoded0?.append(string0)
                }
            }
        }
        requiredParameters = requiredParametersDecoded0
        let mutuallyExclusiveParametersContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .mutuallyExclusiveParameters)
        var mutuallyExclusiveParametersDecoded0:[Swift.String]? = nil
        if let mutuallyExclusiveParametersContainer = mutuallyExclusiveParametersContainer {
            mutuallyExclusiveParametersDecoded0 = [Swift.String]()
            for string0 in mutuallyExclusiveParametersContainer {
                if let string0 = string0 {
                    mutuallyExclusiveParametersDecoded0?.append(string0)
                }
            }
        }
        mutuallyExclusiveParameters = mutuallyExclusiveParametersDecoded0
    }
}
