// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DlmClientTypes.CrossRegionCopyRule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cmkArn = "CmkArn"
        case copyTags = "CopyTags"
        case deprecateRule = "DeprecateRule"
        case encrypted = "Encrypted"
        case retainRule = "RetainRule"
        case target = "Target"
        case targetRegion = "TargetRegion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cmkArn = self.cmkArn {
            try encodeContainer.encode(cmkArn, forKey: .cmkArn)
        }
        if let copyTags = self.copyTags {
            try encodeContainer.encode(copyTags, forKey: .copyTags)
        }
        if let deprecateRule = self.deprecateRule {
            try encodeContainer.encode(deprecateRule, forKey: .deprecateRule)
        }
        if let encrypted = self.encrypted {
            try encodeContainer.encode(encrypted, forKey: .encrypted)
        }
        if let retainRule = self.retainRule {
            try encodeContainer.encode(retainRule, forKey: .retainRule)
        }
        if let target = self.target {
            try encodeContainer.encode(target, forKey: .target)
        }
        if let targetRegion = self.targetRegion {
            try encodeContainer.encode(targetRegion, forKey: .targetRegion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetRegion)
        targetRegion = targetRegionDecoded
        let targetDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .target)
        target = targetDecoded
        let encryptedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .encrypted)
        encrypted = encryptedDecoded
        let cmkArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cmkArn)
        cmkArn = cmkArnDecoded
        let copyTagsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .copyTags)
        copyTags = copyTagsDecoded
        let retainRuleDecoded = try containerValues.decodeIfPresent(DlmClientTypes.CrossRegionCopyRetainRule.self, forKey: .retainRule)
        retainRule = retainRuleDecoded
        let deprecateRuleDecoded = try containerValues.decodeIfPresent(DlmClientTypes.CrossRegionCopyDeprecateRule.self, forKey: .deprecateRule)
        deprecateRule = deprecateRuleDecoded
    }
}
