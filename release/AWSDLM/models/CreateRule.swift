// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DlmClientTypes {
    /// [Snapshot and AMI policies only] Specifies when the policy should create snapshots or AMIs. You must specify either a Cron expression or an interval, interval unit, and start time. You cannot specify both.
    public struct CreateRule: Swift.Equatable {
        /// The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year. For more information, see [Cron expressions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions) in the Amazon CloudWatch User Guide.
        public var cronExpression: Swift.String?
        /// The interval between snapshots. The supported values are 1, 2, 3, 4, 6, 8, 12, and 24.
        public var interval: Swift.Int
        /// The interval unit.
        public var intervalUnit: DlmClientTypes.IntervalUnitValues?
        /// [Snapshot policies only] Specifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify CLOUD. To create snapshots on the same Outpost as the source resource, specify OUTPOST_LOCAL. If you omit this parameter, CLOUD is used by default. If the policy targets resources in an Amazon Web Services Region, then you must create snapshots in the same Region as the source resource. If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost.
        public var location: DlmClientTypes.LocationValues?
        /// The time, in UTC, to start the operation. The supported format is hh:mm. The operation occurs within a one-hour window following the specified time. If you do not specify a time, Amazon DLM selects a time within the next 24 hours.
        public var times: [Swift.String]?

        public init (
            cronExpression: Swift.String? = nil,
            interval: Swift.Int = 0,
            intervalUnit: DlmClientTypes.IntervalUnitValues? = nil,
            location: DlmClientTypes.LocationValues? = nil,
            times: [Swift.String]? = nil
        )
        {
            self.cronExpression = cronExpression
            self.interval = interval
            self.intervalUnit = intervalUnit
            self.location = location
            self.times = times
        }
    }

}
