// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LexRuntimeV2ClientTypes {
    /// Represents a stream of events between your application and Amazon Lex V2.
    public enum StartConversationRequestEventStream: Swift.Equatable {
        /// Configuration information sent from your client application to Amazon Lex V2
        case configurationevent(LexRuntimeV2ClientTypes.ConfigurationEvent)
        /// Speech audio sent from your client application to Amazon Lex V2. Audio starts accumulating when Amazon Lex V2 identifies a voice and continues until a natural pause in the speech is found before processing.
        case audioinputevent(LexRuntimeV2ClientTypes.AudioInputEvent)
        /// DTMF information sent to Amazon Lex V2 by your application. Amazon Lex V2 accumulates the DMTF information from when the user sends the first character and ends
        ///
        /// * when there's a pause longer that the value configured for the end timeout.
        ///
        /// * when there's a digit that is the configured end character.
        ///
        /// * when Amazon Lex V2 accumulates characters equal to the maximum DTMF character configuration.
        case dtmfinputevent(LexRuntimeV2ClientTypes.DTMFInputEvent)
        /// Text sent from your client application to Amazon Lex V2. Each TextInputEvent is processed individually.
        case textinputevent(LexRuntimeV2ClientTypes.TextInputEvent)
        /// Event sent from the client application to Amazon Lex V2 to indicate that it has finished playing audio and that Amazon Lex V2 should start listening for user input.
        case playbackcompletionevent(LexRuntimeV2ClientTypes.PlaybackCompletionEvent)
        /// Event sent from the client application to indicate to Amazon Lex V2 that the conversation is over.
        case disconnectionevent(LexRuntimeV2ClientTypes.DisconnectionEvent)
        case sdkUnknown(Swift.String)
    }

}
