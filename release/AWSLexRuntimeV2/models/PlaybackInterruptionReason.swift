// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LexRuntimeV2ClientTypes {
    public enum PlaybackInterruptionReason: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case dtmfStartDetected
        case textDetected
        case voiceStartDetected
        case sdkUnknown(Swift.String)

        public static var allCases: [PlaybackInterruptionReason] {
            return [
                .dtmfStartDetected,
                .textDetected,
                .voiceStartDetected,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .dtmfStartDetected: return "DTMF_START_DETECTED"
            case .textDetected: return "TEXT_DETECTED"
            case .voiceStartDetected: return "VOICE_START_DETECTED"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = PlaybackInterruptionReason(rawValue: rawValue) ?? PlaybackInterruptionReason.sdkUnknown(rawValue)
        }
    }
}
