// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LexRuntimeV2ClientTypes {
    /// The next action that Amazon Lex V2 should take.
    public struct DialogAction: Swift.Equatable {
        /// Configures the slot to use spell-by-letter or spell-by-word style. When you use a style on a slot, users can spell out their input to make it clear to your bot.
        ///
        /// * Spell by letter - "b" "o" "b"
        ///
        /// * Spell by word - "b as in boy" "o as in oscar" "b as in boy"
        ///
        ///
        /// For more information, see [ Using spelling to enter slot values ](https://docs.aws.amazon.com/lexv2/latest/dg/using-spelling.html).
        public var slotElicitationStyle: LexRuntimeV2ClientTypes.StyleType?
        /// The name of the slot that should be elicited from the user.
        public var slotToElicit: Swift.String?
        /// The name of the constituent sub slot of the composite slot specified in slotToElicit that should be elicited from the user.
        public var subSlotToElicit: LexRuntimeV2ClientTypes.ElicitSubSlot?
        /// The next action that the bot should take in its interaction with the user. The possible values are:
        ///
        /// * Close - Indicates that there will not be a response from the user. For example, the statement "Your order has been placed" does not require a response.
        ///
        /// * ConfirmIntent - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as "Place the order?"
        ///
        /// * Delegate - The next action is determined by Amazon Lex V2.
        ///
        /// * ElicitIntent - The next action is to elicit an intent from the user.
        ///
        /// * ElicitSlot - The next action is to elicit a slot value from the user.
        /// This member is required.
        public var type: LexRuntimeV2ClientTypes.DialogActionType?

        public init (
            slotElicitationStyle: LexRuntimeV2ClientTypes.StyleType? = nil,
            slotToElicit: Swift.String? = nil,
            subSlotToElicit: LexRuntimeV2ClientTypes.ElicitSubSlot? = nil,
            type: LexRuntimeV2ClientTypes.DialogActionType? = nil
        )
        {
            self.slotElicitationStyle = slotElicitationStyle
            self.slotToElicit = slotToElicit
            self.subSlotToElicit = subSlotToElicit
            self.type = type
        }
    }

}
