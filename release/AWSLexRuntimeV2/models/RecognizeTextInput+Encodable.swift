// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RecognizeTextInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case requestAttributes
        case sessionState
        case text
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let requestAttributes = requestAttributes {
            var requestAttributesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .requestAttributes)
            for (dictKey0, stringmap0) in requestAttributes {
                try requestAttributesContainer.encode(stringmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let sessionState = self.sessionState {
            try encodeContainer.encode(sessionState, forKey: .sessionState)
        }
        if let text = self.text {
            try encodeContainer.encode(text, forKey: .text)
        }
    }
}
