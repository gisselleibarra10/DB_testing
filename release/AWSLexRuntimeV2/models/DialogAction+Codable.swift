// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexRuntimeV2ClientTypes.DialogAction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case slotElicitationStyle
        case slotToElicit
        case subSlotToElicit
        case type
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let slotElicitationStyle = self.slotElicitationStyle {
            try encodeContainer.encode(slotElicitationStyle.rawValue, forKey: .slotElicitationStyle)
        }
        if let slotToElicit = self.slotToElicit {
            try encodeContainer.encode(slotToElicit, forKey: .slotToElicit)
        }
        if let subSlotToElicit = self.subSlotToElicit {
            try encodeContainer.encode(subSlotToElicit, forKey: .subSlotToElicit)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(LexRuntimeV2ClientTypes.DialogActionType.self, forKey: .type)
        type = typeDecoded
        let slotToElicitDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .slotToElicit)
        slotToElicit = slotToElicitDecoded
        let slotElicitationStyleDecoded = try containerValues.decodeIfPresent(LexRuntimeV2ClientTypes.StyleType.self, forKey: .slotElicitationStyle)
        slotElicitationStyle = slotElicitationStyleDecoded
        let subSlotToElicitDecoded = try containerValues.decodeIfPresent(LexRuntimeV2ClientTypes.ElicitSubSlot.self, forKey: .subSlotToElicit)
        subSlotToElicit = subSlotToElicitDecoded
    }
}
