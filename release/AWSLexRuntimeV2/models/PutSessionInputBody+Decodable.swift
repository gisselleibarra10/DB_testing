// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutSessionInputBody: Swift.Equatable {
    let messages: [LexRuntimeV2ClientTypes.Message]?
    let sessionState: LexRuntimeV2ClientTypes.SessionState?
    let requestAttributes: [Swift.String:Swift.String]?
}

extension PutSessionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case messages
        case requestAttributes
        case sessionState
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messagesContainer = try containerValues.decodeIfPresent([LexRuntimeV2ClientTypes.Message?].self, forKey: .messages)
        var messagesDecoded0:[LexRuntimeV2ClientTypes.Message]? = nil
        if let messagesContainer = messagesContainer {
            messagesDecoded0 = [LexRuntimeV2ClientTypes.Message]()
            for structure0 in messagesContainer {
                if let structure0 = structure0 {
                    messagesDecoded0?.append(structure0)
                }
            }
        }
        messages = messagesDecoded0
        let sessionStateDecoded = try containerValues.decodeIfPresent(LexRuntimeV2ClientTypes.SessionState.self, forKey: .sessionState)
        sessionState = sessionStateDecoded
        let requestAttributesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .requestAttributes)
        var requestAttributesDecoded0: [Swift.String:Swift.String]? = nil
        if let requestAttributesContainer = requestAttributesContainer {
            requestAttributesDecoded0 = [Swift.String:Swift.String]()
            for (key0, string0) in requestAttributesContainer {
                if let string0 = string0 {
                    requestAttributesDecoded0?[key0] = string0
                }
            }
        }
        requestAttributes = requestAttributesDecoded0
    }
}
