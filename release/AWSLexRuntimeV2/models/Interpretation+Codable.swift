// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LexRuntimeV2ClientTypes.Interpretation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case intent
        case nluConfidence
        case sentimentResponse
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let intent = self.intent {
            try encodeContainer.encode(intent, forKey: .intent)
        }
        if let nluConfidence = self.nluConfidence {
            try encodeContainer.encode(nluConfidence, forKey: .nluConfidence)
        }
        if let sentimentResponse = self.sentimentResponse {
            try encodeContainer.encode(sentimentResponse, forKey: .sentimentResponse)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nluConfidenceDecoded = try containerValues.decodeIfPresent(LexRuntimeV2ClientTypes.ConfidenceScore.self, forKey: .nluConfidence)
        nluConfidence = nluConfidenceDecoded
        let sentimentResponseDecoded = try containerValues.decodeIfPresent(LexRuntimeV2ClientTypes.SentimentResponse.self, forKey: .sentimentResponse)
        sentimentResponse = sentimentResponseDecoded
        let intentDecoded = try containerValues.decodeIfPresent(LexRuntimeV2ClientTypes.Intent.self, forKey: .intent)
        intent = intentDecoded
    }
}
