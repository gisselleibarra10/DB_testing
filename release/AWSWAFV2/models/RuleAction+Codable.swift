// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Wafv2ClientTypes.RuleAction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allow = "Allow"
        case block = "Block"
        case captcha = "Captcha"
        case count = "Count"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allow = self.allow {
            try encodeContainer.encode(allow, forKey: .allow)
        }
        if let block = self.block {
            try encodeContainer.encode(block, forKey: .block)
        }
        if let captcha = self.captcha {
            try encodeContainer.encode(captcha, forKey: .captcha)
        }
        if let count = self.count {
            try encodeContainer.encode(count, forKey: .count)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blockDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.BlockAction.self, forKey: .block)
        block = blockDecoded
        let allowDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.AllowAction.self, forKey: .allow)
        allow = allowDecoded
        let countDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.CountAction.self, forKey: .count)
        count = countDecoded
        let captchaDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.CaptchaAction.self, forKey: .captcha)
        captcha = captchaDecoded
    }
}
