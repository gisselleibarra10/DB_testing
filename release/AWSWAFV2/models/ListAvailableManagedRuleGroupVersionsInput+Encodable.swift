// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListAvailableManagedRuleGroupVersionsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case limit = "Limit"
        case name = "Name"
        case nextMarker = "NextMarker"
        case scope = "Scope"
        case vendorName = "VendorName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let limit = self.limit {
            try encodeContainer.encode(limit, forKey: .limit)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let nextMarker = self.nextMarker {
            try encodeContainer.encode(nextMarker, forKey: .nextMarker)
        }
        if let scope = self.scope {
            try encodeContainer.encode(scope.rawValue, forKey: .scope)
        }
        if let vendorName = self.vendorName {
            try encodeContainer.encode(vendorName, forKey: .vendorName)
        }
    }
}
