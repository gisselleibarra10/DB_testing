// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAvailableManagedRuleGroupVersionsOutputResponseBody: Swift.Equatable {
    let nextMarker: Swift.String?
    let versions: [Wafv2ClientTypes.ManagedRuleGroupVersion]?
    let currentDefaultVersion: Swift.String?
}

extension ListAvailableManagedRuleGroupVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case currentDefaultVersion = "CurrentDefaultVersion"
        case nextMarker = "NextMarker"
        case versions = "Versions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let versionsContainer = try containerValues.decodeIfPresent([Wafv2ClientTypes.ManagedRuleGroupVersion?].self, forKey: .versions)
        var versionsDecoded0:[Wafv2ClientTypes.ManagedRuleGroupVersion]? = nil
        if let versionsContainer = versionsContainer {
            versionsDecoded0 = [Wafv2ClientTypes.ManagedRuleGroupVersion]()
            for structure0 in versionsContainer {
                if let structure0 = structure0 {
                    versionsDecoded0?.append(structure0)
                }
            }
        }
        versions = versionsDecoded0
        let currentDefaultVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .currentDefaultVersion)
        currentDefaultVersion = currentDefaultVersionDecoded
    }
}
