// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Wafv2ClientTypes {
    public enum TextTransformationType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case base64Decode
        case base64DecodeExt
        case cmdLine
        case compressWhiteSpace
        case cssDecode
        case escapeSeqDecode
        case hexDecode
        case htmlEntityDecode
        case jsDecode
        case lowercase
        case md5
        case `none`
        case normalizePath
        case normalizePathWin
        case removeNulls
        case replaceComments
        case replaceNulls
        case sqlHexDecode
        case urlDecode
        case urlDecodeUni
        case utf8ToUnicode
        case sdkUnknown(Swift.String)

        public static var allCases: [TextTransformationType] {
            return [
                .base64Decode,
                .base64DecodeExt,
                .cmdLine,
                .compressWhiteSpace,
                .cssDecode,
                .escapeSeqDecode,
                .hexDecode,
                .htmlEntityDecode,
                .jsDecode,
                .lowercase,
                .md5,
                .none,
                .normalizePath,
                .normalizePathWin,
                .removeNulls,
                .replaceComments,
                .replaceNulls,
                .sqlHexDecode,
                .urlDecode,
                .urlDecodeUni,
                .utf8ToUnicode,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .base64Decode: return "BASE64_DECODE"
            case .base64DecodeExt: return "BASE64_DECODE_EXT"
            case .cmdLine: return "CMD_LINE"
            case .compressWhiteSpace: return "COMPRESS_WHITE_SPACE"
            case .cssDecode: return "CSS_DECODE"
            case .escapeSeqDecode: return "ESCAPE_SEQ_DECODE"
            case .hexDecode: return "HEX_DECODE"
            case .htmlEntityDecode: return "HTML_ENTITY_DECODE"
            case .jsDecode: return "JS_DECODE"
            case .lowercase: return "LOWERCASE"
            case .md5: return "MD5"
            case .none: return "NONE"
            case .normalizePath: return "NORMALIZE_PATH"
            case .normalizePathWin: return "NORMALIZE_PATH_WIN"
            case .removeNulls: return "REMOVE_NULLS"
            case .replaceComments: return "REPLACE_COMMENTS"
            case .replaceNulls: return "REPLACE_NULLS"
            case .sqlHexDecode: return "SQL_HEX_DECODE"
            case .urlDecode: return "URL_DECODE"
            case .urlDecodeUni: return "URL_DECODE_UNI"
            case .utf8ToUnicode: return "UTF8_TO_UNICODE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = TextTransformationType(rawValue: rawValue) ?? TextTransformationType.sdkUnknown(rawValue)
        }
    }
}
