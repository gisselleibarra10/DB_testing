// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Wafv2ClientTypes.RateBasedStatementManagedKeysIPSet: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addresses = "Addresses"
        case iPAddressVersion = "IPAddressVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let addresses = addresses {
            var addressesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .addresses)
            for ipaddresses0 in addresses {
                try addressesContainer.encode(ipaddresses0)
            }
        }
        if let iPAddressVersion = self.iPAddressVersion {
            try encodeContainer.encode(iPAddressVersion.rawValue, forKey: .iPAddressVersion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iPAddressVersionDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.IPAddressVersion.self, forKey: .iPAddressVersion)
        iPAddressVersion = iPAddressVersionDecoded
        let addressesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .addresses)
        var addressesDecoded0:[Swift.String]? = nil
        if let addressesContainer = addressesContainer {
            addressesDecoded0 = [Swift.String]()
            for string0 in addressesContainer {
                if let string0 = string0 {
                    addressesDecoded0?.append(string0)
                }
            }
        }
        addresses = addressesDecoded0
    }
}
