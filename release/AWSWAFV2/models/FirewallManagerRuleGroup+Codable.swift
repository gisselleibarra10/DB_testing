// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Wafv2ClientTypes.FirewallManagerRuleGroup: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case firewallManagerStatement = "FirewallManagerStatement"
        case name = "Name"
        case overrideAction = "OverrideAction"
        case priority = "Priority"
        case visibilityConfig = "VisibilityConfig"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let firewallManagerStatement = self.firewallManagerStatement {
            try encodeContainer.encode(firewallManagerStatement, forKey: .firewallManagerStatement)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let overrideAction = self.overrideAction {
            try encodeContainer.encode(overrideAction, forKey: .overrideAction)
        }
        if priority != 0 {
            try encodeContainer.encode(priority, forKey: .priority)
        }
        if let visibilityConfig = self.visibilityConfig {
            try encodeContainer.encode(visibilityConfig, forKey: .visibilityConfig)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let priorityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .priority) ?? 0
        priority = priorityDecoded
        let firewallManagerStatementDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.FirewallManagerStatement.self, forKey: .firewallManagerStatement)
        firewallManagerStatement = firewallManagerStatementDecoded
        let overrideActionDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.OverrideAction.self, forKey: .overrideAction)
        overrideAction = overrideActionDecoded
        let visibilityConfigDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.VisibilityConfig.self, forKey: .visibilityConfig)
        visibilityConfig = visibilityConfigDecoded
    }
}
