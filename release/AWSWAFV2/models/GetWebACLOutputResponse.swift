// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetWebACLOutputResponse: Swift.Equatable {
    /// The URL to use in SDK integrations with Amazon Web Services managed rule groups. For example, you can use the integration SDKs with the account takeover prevention managed rule group AWSManagedRulesATPRuleSet. This is only populated if you are using a rule group in your web ACL that integrates with your applications in this way. For more information, see [WAF client application integration](https://docs.aws.amazon.com/waf/latest/developerguide/waf-application-integration.html) in the WAF Developer Guide.
    public var applicationIntegrationURL: Swift.String?
    /// A token used for optimistic locking. WAF returns a token to your get and list requests, to mark the state of the entity at the time of the request. To make changes to the entity associated with the token, you provide the token to operations like update and delete. WAF uses the token to ensure that no changes have been made to the entity since you last retrieved it. If a change has been made, the update fails with a WAFOptimisticLockException. If this happens, perform another get, and use the new token returned by that operation.
    public var lockToken: Swift.String?
    /// The web ACL specification. You can modify the settings in this web ACL and use it to update this web ACL or create a new one.
    public var webACL: Wafv2ClientTypes.WebACL?

    public init (
        applicationIntegrationURL: Swift.String? = nil,
        lockToken: Swift.String? = nil,
        webACL: Wafv2ClientTypes.WebACL? = nil
    )
    {
        self.applicationIntegrationURL = applicationIntegrationURL
        self.lockToken = lockToken
        self.webACL = webACL
    }
}
