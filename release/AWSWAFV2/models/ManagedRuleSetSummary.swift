// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Wafv2ClientTypes {
    /// High-level information for a managed rule set. This is intended for use only by vendors of managed rule sets. Vendors are Amazon Web Services and Amazon Web Services Marketplace sellers. Vendors, you can use the managed rule set APIs to provide controlled rollout of your versioned managed rule group offerings for your customers. The APIs are ListManagedRuleSets, GetManagedRuleSet, PutManagedRuleSetVersions, and UpdateManagedRuleSetVersionExpiryDate.
    public struct ManagedRuleSetSummary: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the entity.
        public var aRN: Swift.String?
        /// A description of the set that helps with identification.
        public var description: Swift.String?
        /// A unique identifier for the managed rule set. The ID is returned in the responses to commands like list. You provide it to operations like get and update.
        public var id: Swift.String?
        /// The label namespace prefix for the managed rule groups that are offered to customers from this managed rule set. All labels that are added by rules in the managed rule group have this prefix.
        ///
        /// * The syntax for the label namespace prefix for a managed rule group is the following: awswaf:managed:::
        ///
        /// * When a rule with a label matches a web request, WAF adds the fully qualified label to the request. A fully qualified label is made up of the label namespace from the rule group or web ACL where the rule is defined and the label from the rule, separated by a colon: :
        public var labelNamespace: Swift.String?
        /// A token used for optimistic locking. WAF returns a token to your get and list requests, to mark the state of the entity at the time of the request. To make changes to the entity associated with the token, you provide the token to operations like update and delete. WAF uses the token to ensure that no changes have been made to the entity since you last retrieved it. If a change has been made, the update fails with a WAFOptimisticLockException. If this happens, perform another get, and use the new token returned by that operation.
        public var lockToken: Swift.String?
        /// The name of the managed rule set. You use this, along with the rule set ID, to identify the rule set. This name is assigned to the corresponding managed rule group, which your customers can access and use.
        public var name: Swift.String?

        public init (
            aRN: Swift.String? = nil,
            description: Swift.String? = nil,
            id: Swift.String? = nil,
            labelNamespace: Swift.String? = nil,
            lockToken: Swift.String? = nil,
            name: Swift.String? = nil
        )
        {
            self.aRN = aRN
            self.description = description
            self.id = id
            self.labelNamespace = labelNamespace
            self.lockToken = lockToken
            self.name = name
        }
    }

}
