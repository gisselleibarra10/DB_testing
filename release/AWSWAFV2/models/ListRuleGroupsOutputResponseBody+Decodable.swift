// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRuleGroupsOutputResponseBody: Swift.Equatable {
    let nextMarker: Swift.String?
    let ruleGroups: [Wafv2ClientTypes.RuleGroupSummary]?
}

extension ListRuleGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextMarker = "NextMarker"
        case ruleGroups = "RuleGroups"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let ruleGroupsContainer = try containerValues.decodeIfPresent([Wafv2ClientTypes.RuleGroupSummary?].self, forKey: .ruleGroups)
        var ruleGroupsDecoded0:[Wafv2ClientTypes.RuleGroupSummary]? = nil
        if let ruleGroupsContainer = ruleGroupsContainer {
            ruleGroupsDecoded0 = [Wafv2ClientTypes.RuleGroupSummary]()
            for structure0 in ruleGroupsContainer {
                if let structure0 = structure0 {
                    ruleGroupsDecoded0?.append(structure0)
                }
            }
        }
        ruleGroups = ruleGroupsDecoded0
    }
}
