// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct UpdateManagedRuleSetVersionExpiryDateOutputResponse: Swift.Equatable {
    /// The version that is set to expire.
    public var expiringVersion: Swift.String?
    /// The time that the version will expire. Times are in Coordinated Universal Time (UTC) format. UTC format includes the special designator, Z. For example, "2016-09-27T14:50Z".
    public var expiryTimestamp: ClientRuntime.Date?
    /// A token used for optimistic locking. WAF returns a token to your get and list requests, to mark the state of the entity at the time of the request. To make changes to the entity associated with the token, you provide the token to operations like update and delete. WAF uses the token to ensure that no changes have been made to the entity since you last retrieved it. If a change has been made, the update fails with a WAFOptimisticLockException. If this happens, perform another get, and use the new token returned by that operation.
    public var nextLockToken: Swift.String?

    public init (
        expiringVersion: Swift.String? = nil,
        expiryTimestamp: ClientRuntime.Date? = nil,
        nextLockToken: Swift.String? = nil
    )
    {
        self.expiringVersion = expiringVersion
        self.expiryTimestamp = expiryTimestamp
        self.nextLockToken = nextLockToken
    }
}
