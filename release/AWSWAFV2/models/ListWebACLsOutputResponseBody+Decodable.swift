// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWebACLsOutputResponseBody: Swift.Equatable {
    let nextMarker: Swift.String?
    let webACLs: [Wafv2ClientTypes.WebACLSummary]?
}

extension ListWebACLsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextMarker = "NextMarker"
        case webACLs = "WebACLs"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let webACLsContainer = try containerValues.decodeIfPresent([Wafv2ClientTypes.WebACLSummary?].self, forKey: .webACLs)
        var webACLsDecoded0:[Wafv2ClientTypes.WebACLSummary]? = nil
        if let webACLsContainer = webACLsContainer {
            webACLsDecoded0 = [Wafv2ClientTypes.WebACLSummary]()
            for structure0 in webACLsContainer {
                if let structure0 = structure0 {
                    webACLsDecoded0?.append(structure0)
                }
            }
        }
        webACLs = webACLsDecoded0
    }
}
