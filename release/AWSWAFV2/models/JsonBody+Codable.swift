// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Wafv2ClientTypes.JsonBody: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case invalidFallbackBehavior = "InvalidFallbackBehavior"
        case matchPattern = "MatchPattern"
        case matchScope = "MatchScope"
        case oversizeHandling = "OversizeHandling"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let invalidFallbackBehavior = self.invalidFallbackBehavior {
            try encodeContainer.encode(invalidFallbackBehavior.rawValue, forKey: .invalidFallbackBehavior)
        }
        if let matchPattern = self.matchPattern {
            try encodeContainer.encode(matchPattern, forKey: .matchPattern)
        }
        if let matchScope = self.matchScope {
            try encodeContainer.encode(matchScope.rawValue, forKey: .matchScope)
        }
        if let oversizeHandling = self.oversizeHandling {
            try encodeContainer.encode(oversizeHandling.rawValue, forKey: .oversizeHandling)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let matchPatternDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.JsonMatchPattern.self, forKey: .matchPattern)
        matchPattern = matchPatternDecoded
        let matchScopeDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.JsonMatchScope.self, forKey: .matchScope)
        matchScope = matchScopeDecoded
        let invalidFallbackBehaviorDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.BodyParsingFallbackBehavior.self, forKey: .invalidFallbackBehavior)
        invalidFallbackBehavior = invalidFallbackBehaviorDecoded
        let oversizeHandlingDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.OversizeHandling.self, forKey: .oversizeHandling)
        oversizeHandling = oversizeHandlingDecoded
    }
}
