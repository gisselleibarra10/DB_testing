// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Wafv2ClientTypes.Filter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case behavior = "Behavior"
        case conditions = "Conditions"
        case requirement = "Requirement"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let behavior = self.behavior {
            try encodeContainer.encode(behavior.rawValue, forKey: .behavior)
        }
        if let conditions = conditions {
            var conditionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .conditions)
            for conditions0 in conditions {
                try conditionsContainer.encode(conditions0)
            }
        }
        if let requirement = self.requirement {
            try encodeContainer.encode(requirement.rawValue, forKey: .requirement)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let behaviorDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.FilterBehavior.self, forKey: .behavior)
        behavior = behaviorDecoded
        let requirementDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.FilterRequirement.self, forKey: .requirement)
        requirement = requirementDecoded
        let conditionsContainer = try containerValues.decodeIfPresent([Wafv2ClientTypes.Condition?].self, forKey: .conditions)
        var conditionsDecoded0:[Wafv2ClientTypes.Condition]? = nil
        if let conditionsContainer = conditionsContainer {
            conditionsDecoded0 = [Wafv2ClientTypes.Condition]()
            for structure0 in conditionsContainer {
                if let structure0 = structure0 {
                    conditionsDecoded0?.append(structure0)
                }
            }
        }
        conditions = conditionsDecoded0
    }
}
