// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Wafv2ClientTypes.JsonMatchPattern: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case all = "All"
        case includedPaths = "IncludedPaths"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let all = self.all {
            try encodeContainer.encode(all, forKey: .all)
        }
        if let includedPaths = includedPaths {
            var includedPathsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .includedPaths)
            for jsonpointerpaths0 in includedPaths {
                try includedPathsContainer.encode(jsonpointerpaths0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allDecoded = try containerValues.decodeIfPresent(Wafv2ClientTypes.All.self, forKey: .all)
        all = allDecoded
        let includedPathsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .includedPaths)
        var includedPathsDecoded0:[Swift.String]? = nil
        if let includedPathsContainer = includedPathsContainer {
            includedPathsDecoded0 = [Swift.String]()
            for string0 in includedPathsContainer {
                if let string0 = string0 {
                    includedPathsDecoded0?.append(string0)
                }
            }
        }
        includedPaths = includedPathsDecoded0
    }
}
