// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAvailableManagedRuleGroupsOutputResponseBody: Swift.Equatable {
    let nextMarker: Swift.String?
    let managedRuleGroups: [Wafv2ClientTypes.ManagedRuleGroupSummary]?
}

extension ListAvailableManagedRuleGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case managedRuleGroups = "ManagedRuleGroups"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let managedRuleGroupsContainer = try containerValues.decodeIfPresent([Wafv2ClientTypes.ManagedRuleGroupSummary?].self, forKey: .managedRuleGroups)
        var managedRuleGroupsDecoded0:[Wafv2ClientTypes.ManagedRuleGroupSummary]? = nil
        if let managedRuleGroupsContainer = managedRuleGroupsContainer {
            managedRuleGroupsDecoded0 = [Wafv2ClientTypes.ManagedRuleGroupSummary]()
            for structure0 in managedRuleGroupsContainer {
                if let structure0 = structure0 {
                    managedRuleGroupsDecoded0?.append(structure0)
                }
            }
        }
        managedRuleGroups = managedRuleGroupsDecoded0
    }
}
