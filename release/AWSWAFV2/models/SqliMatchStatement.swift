// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Wafv2ClientTypes {
    /// A rule statement that inspects for malicious SQL code. Attackers insert malicious SQL code into web requests to do things like modify your database or extract data from it.
    public struct SqliMatchStatement: Swift.Equatable {
        /// The part of the web request that you want WAF to inspect.
        /// This member is required.
        public var fieldToMatch: Wafv2ClientTypes.FieldToMatch?
        /// The sensitivity that you want WAF to use to inspect for SQL injection attacks. HIGH detects more attacks, but might generate more false positives, especially if your web requests frequently contain unusual strings. For information about identifying and mitigating false positives, see [Testing and tuning](https://docs.aws.amazon.com/waf/latest/developerguide/web-acl-testing.html) in the WAF Developer Guide. LOW is generally a better choice for resources that already have other protections against SQL injection attacks or that have a low tolerance for false positives. Default: LOW
        public var sensitivityLevel: Wafv2ClientTypes.SensitivityLevel?
        /// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. If you specify one or more transformations in a rule statement, WAF performs all transformations on the content of the request component identified by FieldToMatch, starting from the lowest priority setting, before inspecting the content for a match.
        /// This member is required.
        public var textTransformations: [Wafv2ClientTypes.TextTransformation]?

        public init (
            fieldToMatch: Wafv2ClientTypes.FieldToMatch? = nil,
            sensitivityLevel: Wafv2ClientTypes.SensitivityLevel? = nil,
            textTransformations: [Wafv2ClientTypes.TextTransformation]? = nil
        )
        {
            self.fieldToMatch = fieldToMatch
            self.sensitivityLevel = sensitivityLevel
            self.textTransformations = textTransformations
        }
    }

}
