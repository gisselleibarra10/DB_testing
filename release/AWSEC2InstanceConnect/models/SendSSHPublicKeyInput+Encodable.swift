// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SendSSHPublicKeyInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case availabilityZone = "AvailabilityZone"
        case instanceId = "InstanceId"
        case instanceOSUser = "InstanceOSUser"
        case sSHPublicKey = "SSHPublicKey"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let availabilityZone = self.availabilityZone {
            try encodeContainer.encode(availabilityZone, forKey: .availabilityZone)
        }
        if let instanceId = self.instanceId {
            try encodeContainer.encode(instanceId, forKey: .instanceId)
        }
        if let instanceOSUser = self.instanceOSUser {
            try encodeContainer.encode(instanceOSUser, forKey: .instanceOSUser)
        }
        if let sSHPublicKey = self.sSHPublicKey {
            try encodeContainer.encode(sSHPublicKey, forKey: .sSHPublicKey)
        }
    }
}
