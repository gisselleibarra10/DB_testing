// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchClientTypes.AlarmHistoryItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarmName = "AlarmName"
        case alarmType = "AlarmType"
        case historyData = "HistoryData"
        case historyItemType = "HistoryItemType"
        case historySummary = "HistorySummary"
        case timestamp = "Timestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let alarmName = alarmName {
            try container.encode(alarmName, forKey: ClientRuntime.Key("AlarmName"))
        }
        if let alarmType = alarmType {
            try container.encode(alarmType, forKey: ClientRuntime.Key("AlarmType"))
        }
        if let historyData = historyData {
            try container.encode(historyData, forKey: ClientRuntime.Key("HistoryData"))
        }
        if let historyItemType = historyItemType {
            try container.encode(historyItemType, forKey: ClientRuntime.Key("HistoryItemType"))
        }
        if let historySummary = historySummary {
            try container.encode(historySummary, forKey: ClientRuntime.Key("HistorySummary"))
        }
        if let timestamp = timestamp {
            try container.encode(ClientRuntime.TimestampWrapper(timestamp, format: .dateTime), forKey: ClientRuntime.Key("timestamp"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alarmName)
        alarmName = alarmNameDecoded
        let alarmTypeDecoded = try containerValues.decodeIfPresent(CloudWatchClientTypes.AlarmType.self, forKey: .alarmType)
        alarmType = alarmTypeDecoded
        let timestampDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .timestamp)
        var timestampBuffer:ClientRuntime.Date? = nil
        if let timestampDecoded = timestampDecoded {
            timestampBuffer = try ClientRuntime.TimestampWrapperDecoder.parseDateStringValue(timestampDecoded, format: .dateTime)
        }
        timestamp = timestampBuffer
        let historyItemTypeDecoded = try containerValues.decodeIfPresent(CloudWatchClientTypes.HistoryItemType.self, forKey: .historyItemType)
        historyItemType = historyItemTypeDecoded
        let historySummaryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .historySummary)
        historySummary = historySummaryDecoded
        let historyDataDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .historyData)
        historyData = historyDataDecoded
    }
}
