// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DisableInsightRulesOutputResponseBody: Swift.Equatable {
    let failures: [CloudWatchClientTypes.PartialFailure]?
}

extension DisableInsightRulesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failures = "Failures"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DisableInsightRulesResult"))
        if containerValues.contains(.failures) {
            struct KeyVal0{struct member{}}
            let failuresWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .failures)
            if let failuresWrappedContainer = failuresWrappedContainer {
                let failuresContainer = try failuresWrappedContainer.decodeIfPresent([CloudWatchClientTypes.PartialFailure].self, forKey: .member)
                var failuresBuffer:[CloudWatchClientTypes.PartialFailure]? = nil
                if let failuresContainer = failuresContainer {
                    failuresBuffer = [CloudWatchClientTypes.PartialFailure]()
                    for structureContainer0 in failuresContainer {
                        failuresBuffer?.append(structureContainer0)
                    }
                }
                failures = failuresBuffer
            } else {
                failures = []
            }
        } else {
            failures = nil
        }
    }
}
