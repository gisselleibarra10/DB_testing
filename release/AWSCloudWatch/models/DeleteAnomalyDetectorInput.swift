// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DeleteAnomalyDetectorInput: Swift.Equatable {
    /// The metric dimensions associated with the anomaly detection model to delete.
    @available(*, deprecated, message: "Use SingleMetricAnomalyDetector.")
    public var dimensions: [CloudWatchClientTypes.Dimension]?
    /// The metric math anomaly detector to be deleted. When using MetricMathAnomalyDetector, you cannot include following parameters in the same operation:
    ///
    /// * Dimensions,
    ///
    /// * MetricName
    ///
    /// * Namespace
    ///
    /// * Stat
    ///
    /// * the SingleMetricAnomalyDetector parameters of DeleteAnomalyDetectorInput
    ///
    ///
    /// Instead, specify the metric math anomaly detector attributes as part of the MetricMathAnomalyDetector property.
    public var metricMathAnomalyDetector: CloudWatchClientTypes.MetricMathAnomalyDetector?
    /// The metric name associated with the anomaly detection model to delete.
    @available(*, deprecated, message: "Use SingleMetricAnomalyDetector.")
    public var metricName: Swift.String?
    /// The namespace associated with the anomaly detection model to delete.
    @available(*, deprecated, message: "Use SingleMetricAnomalyDetector.")
    public var namespace: Swift.String?
    /// A single metric anomaly detector to be deleted. When using SingleMetricAnomalyDetector, you cannot include the following parameters in the same operation:
    ///
    /// * Dimensions,
    ///
    /// * MetricName
    ///
    /// * Namespace
    ///
    /// * Stat
    ///
    /// * the MetricMathAnomalyDetector parameters of DeleteAnomalyDetectorInput
    ///
    ///
    /// Instead, specify the single metric anomaly detector attributes as part of the SingleMetricAnomalyDetector property.
    public var singleMetricAnomalyDetector: CloudWatchClientTypes.SingleMetricAnomalyDetector?
    /// The statistic associated with the anomaly detection model to delete.
    @available(*, deprecated, message: "Use SingleMetricAnomalyDetector.")
    public var stat: Swift.String?

    public init (
        dimensions: [CloudWatchClientTypes.Dimension]? = nil,
        metricMathAnomalyDetector: CloudWatchClientTypes.MetricMathAnomalyDetector? = nil,
        metricName: Swift.String? = nil,
        namespace: Swift.String? = nil,
        singleMetricAnomalyDetector: CloudWatchClientTypes.SingleMetricAnomalyDetector? = nil,
        stat: Swift.String? = nil
    )
    {
        self.dimensions = dimensions
        self.metricMathAnomalyDetector = metricMathAnomalyDetector
        self.metricName = metricName
        self.namespace = namespace
        self.singleMetricAnomalyDetector = singleMetricAnomalyDetector
        self.stat = stat
    }
}
