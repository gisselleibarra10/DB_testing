// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchClientTypes.PartialFailure: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exceptionType = "ExceptionType"
        case failureCode = "FailureCode"
        case failureDescription = "FailureDescription"
        case failureResource = "FailureResource"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let exceptionType = exceptionType {
            try container.encode(exceptionType, forKey: ClientRuntime.Key("ExceptionType"))
        }
        if let failureCode = failureCode {
            try container.encode(failureCode, forKey: ClientRuntime.Key("FailureCode"))
        }
        if let failureDescription = failureDescription {
            try container.encode(failureDescription, forKey: ClientRuntime.Key("FailureDescription"))
        }
        if let failureResource = failureResource {
            try container.encode(failureResource, forKey: ClientRuntime.Key("FailureResource"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let failureResourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureResource)
        failureResource = failureResourceDecoded
        let exceptionTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exceptionType)
        exceptionType = exceptionTypeDecoded
        let failureCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureCode)
        failureCode = failureCodeDecoded
        let failureDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureDescription)
        failureDescription = failureDescriptionDecoded
    }
}
