// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchClientTypes {
    /// A GetMetricData call returns an array of MetricDataResult structures. Each of these structures includes the data points for that metric, along with the timestamps of those data points and other identifying information.
    public struct MetricDataResult: Swift.Equatable {
        /// The short name you specified to represent this metric.
        public var id: Swift.String?
        /// The human-readable label associated with the data.
        public var label: Swift.String?
        /// A list of messages with additional information about the data returned.
        public var messages: [CloudWatchClientTypes.MessageData]?
        /// The status of the returned data. Complete indicates that all data points in the requested time range were returned. PartialData means that an incomplete set of data points were returned. You can use the NextToken value that was returned and repeat your request to get more data points. NextToken is not returned if you are performing a math expression. InternalError indicates that an error occurred. Retry your request using NextToken, if present.
        public var statusCode: CloudWatchClientTypes.StatusCode?
        /// The timestamps for the data points, formatted in Unix timestamp format. The number of timestamps always matches the number of values and the value for Timestamps[x] is Values[x].
        public var timestamps: [ClientRuntime.Date]?
        /// The data points for the metric corresponding to Timestamps. The number of values always matches the number of timestamps and the timestamp for Values[x] is Timestamps[x].
        public var values: [Swift.Double]?

        public init (
            id: Swift.String? = nil,
            label: Swift.String? = nil,
            messages: [CloudWatchClientTypes.MessageData]? = nil,
            statusCode: CloudWatchClientTypes.StatusCode? = nil,
            timestamps: [ClientRuntime.Date]? = nil,
            values: [Swift.Double]? = nil
        )
        {
            self.id = id
            self.label = label
            self.messages = messages
            self.statusCode = statusCode
            self.timestamps = timestamps
            self.values = values
        }
    }

}
