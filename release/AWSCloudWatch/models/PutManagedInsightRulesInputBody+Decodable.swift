// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutManagedInsightRulesInputBody: Swift.Equatable {
    let managedRules: [CloudWatchClientTypes.ManagedRule]?
}

extension PutManagedInsightRulesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case managedRules = "ManagedRules"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.managedRules) {
            struct KeyVal0{struct member{}}
            let managedRulesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .managedRules)
            if let managedRulesWrappedContainer = managedRulesWrappedContainer {
                let managedRulesContainer = try managedRulesWrappedContainer.decodeIfPresent([CloudWatchClientTypes.ManagedRule].self, forKey: .member)
                var managedRulesBuffer:[CloudWatchClientTypes.ManagedRule]? = nil
                if let managedRulesContainer = managedRulesContainer {
                    managedRulesBuffer = [CloudWatchClientTypes.ManagedRule]()
                    for structureContainer0 in managedRulesContainer {
                        managedRulesBuffer?.append(structureContainer0)
                    }
                }
                managedRules = managedRulesBuffer
            } else {
                managedRules = []
            }
        } else {
            managedRules = nil
        }
    }
}
