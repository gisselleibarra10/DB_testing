// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeAlarmHistoryInput: Swift.Equatable {
    /// The name of the alarm.
    public var alarmName: Swift.String?
    /// Use this parameter to specify whether you want the operation to return metric alarms or composite alarms. If you omit this parameter, only metric alarms are returned.
    public var alarmTypes: [CloudWatchClientTypes.AlarmType]?
    /// The ending date to retrieve alarm history.
    public var endDate: ClientRuntime.Date?
    /// The type of alarm histories to retrieve.
    public var historyItemType: CloudWatchClientTypes.HistoryItemType?
    /// The maximum number of alarm history records to retrieve.
    public var maxRecords: Swift.Int?
    /// The token returned by a previous call to indicate that there is more data available.
    public var nextToken: Swift.String?
    /// Specified whether to return the newest or oldest alarm history first. Specify TimestampDescending to have the newest event history returned first, and specify TimestampAscending to have the oldest history returned first.
    public var scanBy: CloudWatchClientTypes.ScanBy?
    /// The starting date to retrieve alarm history.
    public var startDate: ClientRuntime.Date?

    public init (
        alarmName: Swift.String? = nil,
        alarmTypes: [CloudWatchClientTypes.AlarmType]? = nil,
        endDate: ClientRuntime.Date? = nil,
        historyItemType: CloudWatchClientTypes.HistoryItemType? = nil,
        maxRecords: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        scanBy: CloudWatchClientTypes.ScanBy? = nil,
        startDate: ClientRuntime.Date? = nil
    )
    {
        self.alarmName = alarmName
        self.alarmTypes = alarmTypes
        self.endDate = endDate
        self.historyItemType = historyItemType
        self.maxRecords = maxRecords
        self.nextToken = nextToken
        self.scanBy = scanBy
        self.startDate = startDate
    }
}
