// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CloudWatchClientTypes {
    /// An anomaly detection model associated with a particular CloudWatch metric, statistic, or metric math expression. You can use the model to display a band of expected, normal values when the metric is graphed.
    public struct AnomalyDetector: Swift.Equatable {
        /// The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model, and the time zone to use for the metric.
        public var configuration: CloudWatchClientTypes.AnomalyDetectorConfiguration?
        /// The metric dimensions associated with the anomaly detection model.
        @available(*, deprecated, message: "Use SingleMetricAnomalyDetector.Dimensions property.")
        public var dimensions: [CloudWatchClientTypes.Dimension]?
        /// The CloudWatch metric math expression for this anomaly detector.
        public var metricMathAnomalyDetector: CloudWatchClientTypes.MetricMathAnomalyDetector?
        /// The name of the metric associated with the anomaly detection model.
        @available(*, deprecated, message: "Use SingleMetricAnomalyDetector.MetricName property.")
        public var metricName: Swift.String?
        /// The namespace of the metric associated with the anomaly detection model.
        @available(*, deprecated, message: "Use SingleMetricAnomalyDetector.Namespace property.")
        public var namespace: Swift.String?
        /// The CloudWatch metric and statistic for this anomaly detector.
        public var singleMetricAnomalyDetector: CloudWatchClientTypes.SingleMetricAnomalyDetector?
        /// The statistic associated with the anomaly detection model.
        @available(*, deprecated, message: "Use SingleMetricAnomalyDetector.Stat property.")
        public var stat: Swift.String?
        /// The current status of the anomaly detector's training. The possible values are TRAINED | PENDING_TRAINING | TRAINED_INSUFFICIENT_DATA
        public var stateValue: CloudWatchClientTypes.AnomalyDetectorStateValue?

        public init (
            configuration: CloudWatchClientTypes.AnomalyDetectorConfiguration? = nil,
            dimensions: [CloudWatchClientTypes.Dimension]? = nil,
            metricMathAnomalyDetector: CloudWatchClientTypes.MetricMathAnomalyDetector? = nil,
            metricName: Swift.String? = nil,
            namespace: Swift.String? = nil,
            singleMetricAnomalyDetector: CloudWatchClientTypes.SingleMetricAnomalyDetector? = nil,
            stat: Swift.String? = nil,
            stateValue: CloudWatchClientTypes.AnomalyDetectorStateValue? = nil
        )
        {
            self.configuration = configuration
            self.dimensions = dimensions
            self.metricMathAnomalyDetector = metricMathAnomalyDetector
            self.metricName = metricName
            self.namespace = namespace
            self.singleMetricAnomalyDetector = singleMetricAnomalyDetector
            self.stat = stat
            self.stateValue = stateValue
        }
    }

}
