// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchClientTypes.ManagedRuleDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceARN = "ResourceARN"
        case ruleState = "RuleState"
        case templateName = "TemplateName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let resourceARN = resourceARN {
            try container.encode(resourceARN, forKey: ClientRuntime.Key("ResourceARN"))
        }
        if let ruleState = ruleState {
            try container.encode(ruleState, forKey: ClientRuntime.Key("RuleState"))
        }
        if let templateName = templateName {
            try container.encode(templateName, forKey: ClientRuntime.Key("TemplateName"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let templateNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .templateName)
        templateName = templateNameDecoded
        let resourceARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceARN)
        resourceARN = resourceARNDecoded
        let ruleStateDecoded = try containerValues.decodeIfPresent(CloudWatchClientTypes.ManagedRuleState.self, forKey: .ruleState)
        ruleState = ruleStateDecoded
    }
}
