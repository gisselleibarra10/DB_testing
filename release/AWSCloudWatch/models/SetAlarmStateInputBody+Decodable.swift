// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SetAlarmStateInputBody: Swift.Equatable {
    let alarmName: Swift.String?
    let stateValue: CloudWatchClientTypes.StateValue?
    let stateReason: Swift.String?
    let stateReasonData: Swift.String?
}

extension SetAlarmStateInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarmName = "AlarmName"
        case stateReason = "StateReason"
        case stateReasonData = "StateReasonData"
        case stateValue = "StateValue"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alarmName)
        alarmName = alarmNameDecoded
        let stateValueDecoded = try containerValues.decodeIfPresent(CloudWatchClientTypes.StateValue.self, forKey: .stateValue)
        stateValue = stateValueDecoded
        let stateReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stateReason)
        stateReason = stateReasonDecoded
        let stateReasonDataDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stateReasonData)
        stateReasonData = stateReasonDataDecoded
    }
}
