// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchClientTypes {
    /// Encapsulates the statistical data that CloudWatch computes from metric data.
    public struct Datapoint: Swift.Equatable {
        /// The average of the metric values that correspond to the data point.
        public var average: Swift.Double?
        /// The percentile statistic for the data point.
        public var extendedStatistics: [Swift.String:Swift.Double]?
        /// The maximum metric value for the data point.
        public var maximum: Swift.Double?
        /// The minimum metric value for the data point.
        public var minimum: Swift.Double?
        /// The number of metric values that contributed to the aggregate value of this data point.
        public var sampleCount: Swift.Double?
        /// The sum of the metric values for the data point.
        public var sum: Swift.Double?
        /// The time stamp used for the data point.
        public var timestamp: ClientRuntime.Date?
        /// The standard unit for the data point.
        public var unit: CloudWatchClientTypes.StandardUnit?

        public init (
            average: Swift.Double? = nil,
            extendedStatistics: [Swift.String:Swift.Double]? = nil,
            maximum: Swift.Double? = nil,
            minimum: Swift.Double? = nil,
            sampleCount: Swift.Double? = nil,
            sum: Swift.Double? = nil,
            timestamp: ClientRuntime.Date? = nil,
            unit: CloudWatchClientTypes.StandardUnit? = nil
        )
        {
            self.average = average
            self.extendedStatistics = extendedStatistics
            self.maximum = maximum
            self.minimum = minimum
            self.sampleCount = sampleCount
            self.sum = sum
            self.timestamp = timestamp
            self.unit = unit
        }
    }

}
