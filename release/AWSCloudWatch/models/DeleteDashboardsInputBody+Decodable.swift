// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteDashboardsInputBody: Swift.Equatable {
    let dashboardNames: [Swift.String]?
}

extension DeleteDashboardsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dashboardNames = "DashboardNames"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.dashboardNames) {
            struct KeyVal0{struct member{}}
            let dashboardNamesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .dashboardNames)
            if let dashboardNamesWrappedContainer = dashboardNamesWrappedContainer {
                let dashboardNamesContainer = try dashboardNamesWrappedContainer.decodeIfPresent([Swift.String].self, forKey: .member)
                var dashboardNamesBuffer:[Swift.String]? = nil
                if let dashboardNamesContainer = dashboardNamesContainer {
                    dashboardNamesBuffer = [Swift.String]()
                    for stringContainer0 in dashboardNamesContainer {
                        dashboardNamesBuffer?.append(stringContainer0)
                    }
                }
                dashboardNames = dashboardNamesBuffer
            } else {
                dashboardNames = []
            }
        } else {
            dashboardNames = nil
        }
    }
}
