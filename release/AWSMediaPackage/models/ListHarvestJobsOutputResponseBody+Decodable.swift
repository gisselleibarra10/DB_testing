// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListHarvestJobsOutputResponseBody: Swift.Equatable {
    let harvestJobs: [MediaPackageClientTypes.HarvestJob]?
    let nextToken: Swift.String?
}

extension ListHarvestJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case harvestJobs = "harvestJobs"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let harvestJobsContainer = try containerValues.decodeIfPresent([MediaPackageClientTypes.HarvestJob?].self, forKey: .harvestJobs)
        var harvestJobsDecoded0:[MediaPackageClientTypes.HarvestJob]? = nil
        if let harvestJobsContainer = harvestJobsContainer {
            harvestJobsDecoded0 = [MediaPackageClientTypes.HarvestJob]()
            for structure0 in harvestJobsContainer {
                if let structure0 = structure0 {
                    harvestJobsDecoded0?.append(structure0)
                }
            }
        }
        harvestJobs = harvestJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
