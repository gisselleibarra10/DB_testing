// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ForecastClientTypes.ExplainabilityConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case timePointGranularity = "TimePointGranularity"
        case timeSeriesGranularity = "TimeSeriesGranularity"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let timePointGranularity = self.timePointGranularity {
            try encodeContainer.encode(timePointGranularity.rawValue, forKey: .timePointGranularity)
        }
        if let timeSeriesGranularity = self.timeSeriesGranularity {
            try encodeContainer.encode(timeSeriesGranularity.rawValue, forKey: .timeSeriesGranularity)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timeSeriesGranularityDecoded = try containerValues.decodeIfPresent(ForecastClientTypes.TimeSeriesGranularity.self, forKey: .timeSeriesGranularity)
        timeSeriesGranularity = timeSeriesGranularityDecoded
        let timePointGranularityDecoded = try containerValues.decodeIfPresent(ForecastClientTypes.TimePointGranularity.self, forKey: .timePointGranularity)
        timePointGranularity = timePointGranularityDecoded
    }
}
