// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ForecastClientTypes.AttributeConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributeName = "AttributeName"
        case transformations = "Transformations"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributeName = self.attributeName {
            try encodeContainer.encode(attributeName, forKey: .attributeName)
        }
        if let transformations = transformations {
            var transformationsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .transformations)
            for (dictKey0, transformations0) in transformations {
                try transformationsContainer.encode(transformations0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attributeName)
        attributeName = attributeNameDecoded
        let transformationsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .transformations)
        var transformationsDecoded0: [Swift.String:Swift.String]? = nil
        if let transformationsContainer = transformationsContainer {
            transformationsDecoded0 = [Swift.String:Swift.String]()
            for (key0, value0) in transformationsContainer {
                if let value0 = value0 {
                    transformationsDecoded0?[key0] = value0
                }
            }
        }
        transformations = transformationsDecoded0
    }
}
