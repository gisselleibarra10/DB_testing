// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ForecastClientTypes.WeightedQuantileLoss: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lossValue = "LossValue"
        case quantile = "Quantile"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lossValue = self.lossValue {
            try encodeContainer.encode(lossValue, forKey: .lossValue)
        }
        if let quantile = self.quantile {
            try encodeContainer.encode(quantile, forKey: .quantile)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let quantileDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .quantile)
        quantile = quantileDecoded
        let lossValueDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .lossValue)
        lossValue = lossValueDecoded
    }
}
