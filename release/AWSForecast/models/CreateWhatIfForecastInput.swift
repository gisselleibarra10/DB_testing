// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateWhatIfForecastInput: Swift.Equatable {
    /// A list of [tags](https://docs.aws.amazon.com/forecast/latest/dg/tagging-forecast-resources.html) to apply to the what if forecast.
    public var tags: [ForecastClientTypes.Tag]?
    /// The replacement time series dataset, which contains the rows that you want to change in the related time series dataset. A replacement time series does not need to contain all rows that are in the baseline related time series. Include only the rows (measure-dimension combinations) that you want to include in the what-if forecast. This dataset is merged with the original time series to create a transformed dataset that is used for the what-if analysis. This dataset should contain the items to modify (such as item_id or workforce_type), any relevant dimensions, the timestamp column, and at least one of the related time series columns. This file should not contain duplicate timestamps for the same time series. Timestamps and item_ids not included in this dataset are not included in the what-if analysis.
    public var timeSeriesReplacementsDataSource: ForecastClientTypes.TimeSeriesReplacementsDataSource?
    /// The transformations that are applied to the baseline time series. Each transformation contains an action and a set of conditions. An action is applied only when all conditions are met. If no conditions are provided, the action is applied to all items.
    public var timeSeriesTransformations: [ForecastClientTypes.TimeSeriesTransformation]?
    /// The Amazon Resource Name (ARN) of the what-if analysis.
    /// This member is required.
    public var whatIfAnalysisArn: Swift.String?
    /// The name of the what-if forecast. Names must be unique within each what-if analysis.
    /// This member is required.
    public var whatIfForecastName: Swift.String?

    public init (
        tags: [ForecastClientTypes.Tag]? = nil,
        timeSeriesReplacementsDataSource: ForecastClientTypes.TimeSeriesReplacementsDataSource? = nil,
        timeSeriesTransformations: [ForecastClientTypes.TimeSeriesTransformation]? = nil,
        whatIfAnalysisArn: Swift.String? = nil,
        whatIfForecastName: Swift.String? = nil
    )
    {
        self.tags = tags
        self.timeSeriesReplacementsDataSource = timeSeriesReplacementsDataSource
        self.timeSeriesTransformations = timeSeriesTransformations
        self.whatIfAnalysisArn = whatIfAnalysisArn
        self.whatIfForecastName = whatIfForecastName
    }
}
