// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeWhatIfForecastExportOutputResponseBody: Swift.Equatable {
    let whatIfForecastExportArn: Swift.String?
    let whatIfForecastExportName: Swift.String?
    let whatIfForecastArns: [Swift.String]?
    let destination: ForecastClientTypes.DataDestination?
    let message: Swift.String?
    let status: Swift.String?
    let creationTime: ClientRuntime.Date?
    let estimatedTimeRemainingInMinutes: Swift.Int?
    let lastModificationTime: ClientRuntime.Date?
    let format: Swift.String?
}

extension DescribeWhatIfForecastExportOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case destination = "Destination"
        case estimatedTimeRemainingInMinutes = "EstimatedTimeRemainingInMinutes"
        case format = "Format"
        case lastModificationTime = "LastModificationTime"
        case message = "Message"
        case status = "Status"
        case whatIfForecastArns = "WhatIfForecastArns"
        case whatIfForecastExportArn = "WhatIfForecastExportArn"
        case whatIfForecastExportName = "WhatIfForecastExportName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let whatIfForecastExportArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .whatIfForecastExportArn)
        whatIfForecastExportArn = whatIfForecastExportArnDecoded
        let whatIfForecastExportNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .whatIfForecastExportName)
        whatIfForecastExportName = whatIfForecastExportNameDecoded
        let whatIfForecastArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .whatIfForecastArns)
        var whatIfForecastArnsDecoded0:[Swift.String]? = nil
        if let whatIfForecastArnsContainer = whatIfForecastArnsContainer {
            whatIfForecastArnsDecoded0 = [Swift.String]()
            for string0 in whatIfForecastArnsContainer {
                if let string0 = string0 {
                    whatIfForecastArnsDecoded0?.append(string0)
                }
            }
        }
        whatIfForecastArns = whatIfForecastArnsDecoded0
        let destinationDecoded = try containerValues.decodeIfPresent(ForecastClientTypes.DataDestination.self, forKey: .destination)
        destination = destinationDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let estimatedTimeRemainingInMinutesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .estimatedTimeRemainingInMinutes)
        estimatedTimeRemainingInMinutes = estimatedTimeRemainingInMinutesDecoded
        let lastModificationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModificationTime)
        lastModificationTime = lastModificationTimeDecoded
        let formatDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .format)
        format = formatDecoded
    }
}
