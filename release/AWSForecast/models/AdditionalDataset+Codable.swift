// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ForecastClientTypes.AdditionalDataset: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configuration = "Configuration"
        case name = "Name"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configuration = configuration {
            var configurationContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .configuration)
            for (dictKey0, configuration0) in configuration {
                try configurationContainer.encode(configuration0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let configurationContainer = try containerValues.decodeIfPresent([Swift.String: [Swift.String?]?].self, forKey: .configuration)
        var configurationDecoded0: [Swift.String:[Swift.String]]? = nil
        if let configurationContainer = configurationContainer {
            configurationDecoded0 = [Swift.String:[Swift.String]]()
            for (key0, values0) in configurationContainer {
                var values0Decoded0: [Swift.String]? = nil
                if let values0 = values0 {
                    values0Decoded0 = [Swift.String]()
                    for string1 in values0 {
                        if let string1 = string1 {
                            values0Decoded0?.append(string1)
                        }
                    }
                }
                configurationDecoded0?[key0] = values0Decoded0
            }
        }
        configuration = configurationDecoded0
    }
}
