// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMonitorEvaluationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let predictorMonitorEvaluations: [ForecastClientTypes.PredictorMonitorEvaluation]?
}

extension ListMonitorEvaluationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case predictorMonitorEvaluations = "PredictorMonitorEvaluations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let predictorMonitorEvaluationsContainer = try containerValues.decodeIfPresent([ForecastClientTypes.PredictorMonitorEvaluation?].self, forKey: .predictorMonitorEvaluations)
        var predictorMonitorEvaluationsDecoded0:[ForecastClientTypes.PredictorMonitorEvaluation]? = nil
        if let predictorMonitorEvaluationsContainer = predictorMonitorEvaluationsContainer {
            predictorMonitorEvaluationsDecoded0 = [ForecastClientTypes.PredictorMonitorEvaluation]()
            for structure0 in predictorMonitorEvaluationsContainer {
                if let structure0 = structure0 {
                    predictorMonitorEvaluationsDecoded0?.append(structure0)
                }
            }
        }
        predictorMonitorEvaluations = predictorMonitorEvaluationsDecoded0
    }
}
