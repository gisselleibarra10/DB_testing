// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ForecastClientTypes {
    public enum Month: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case april
        case august
        case december
        case february
        case january
        case july
        case june
        case march
        case may
        case november
        case october
        case september
        case sdkUnknown(Swift.String)

        public static var allCases: [Month] {
            return [
                .april,
                .august,
                .december,
                .february,
                .january,
                .july,
                .june,
                .march,
                .may,
                .november,
                .october,
                .september,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .april: return "APRIL"
            case .august: return "AUGUST"
            case .december: return "DECEMBER"
            case .february: return "FEBRUARY"
            case .january: return "JANUARY"
            case .july: return "JULY"
            case .june: return "JUNE"
            case .march: return "MARCH"
            case .may: return "MAY"
            case .november: return "NOVEMBER"
            case .october: return "OCTOBER"
            case .september: return "SEPTEMBER"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = Month(rawValue: rawValue) ?? Month.sdkUnknown(rawValue)
        }
    }
}
