// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ForecastClientTypes.PredictorEvent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case datetime = "Datetime"
        case detail = "Detail"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let datetime = self.datetime {
            try encodeContainer.encode(datetime.timeIntervalSince1970, forKey: .datetime)
        }
        if let detail = self.detail {
            try encodeContainer.encode(detail, forKey: .detail)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detailDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .detail)
        detail = detailDecoded
        let datetimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .datetime)
        datetime = datetimeDecoded
    }
}
