// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateWhatIfAnalysisInputBody: Swift.Equatable {
    let whatIfAnalysisName: Swift.String?
    let forecastArn: Swift.String?
    let timeSeriesSelector: ForecastClientTypes.TimeSeriesSelector?
    let tags: [ForecastClientTypes.Tag]?
}

extension CreateWhatIfAnalysisInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case forecastArn = "ForecastArn"
        case tags = "Tags"
        case timeSeriesSelector = "TimeSeriesSelector"
        case whatIfAnalysisName = "WhatIfAnalysisName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let whatIfAnalysisNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .whatIfAnalysisName)
        whatIfAnalysisName = whatIfAnalysisNameDecoded
        let forecastArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .forecastArn)
        forecastArn = forecastArnDecoded
        let timeSeriesSelectorDecoded = try containerValues.decodeIfPresent(ForecastClientTypes.TimeSeriesSelector.self, forKey: .timeSeriesSelector)
        timeSeriesSelector = timeSeriesSelectorDecoded
        let tagsContainer = try containerValues.decodeIfPresent([ForecastClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[ForecastClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [ForecastClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
