// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ForecastClientTypes.PredictorBaseline: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case baselineMetrics = "BaselineMetrics"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let baselineMetrics = baselineMetrics {
            var baselineMetricsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .baselineMetrics)
            for baselinemetrics0 in baselineMetrics {
                try baselineMetricsContainer.encode(baselinemetrics0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let baselineMetricsContainer = try containerValues.decodeIfPresent([ForecastClientTypes.BaselineMetric?].self, forKey: .baselineMetrics)
        var baselineMetricsDecoded0:[ForecastClientTypes.BaselineMetric]? = nil
        if let baselineMetricsContainer = baselineMetricsContainer {
            baselineMetricsDecoded0 = [ForecastClientTypes.BaselineMetric]()
            for structure0 in baselineMetricsContainer {
                if let structure0 = structure0 {
                    baselineMetricsDecoded0?.append(structure0)
                }
            }
        }
        baselineMetrics = baselineMetricsDecoded0
    }
}
