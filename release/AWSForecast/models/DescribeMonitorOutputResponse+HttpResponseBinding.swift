// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeMonitorOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: DescribeMonitorOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.baseline = output.baseline
            self.creationTime = output.creationTime
            self.estimatedEvaluationTimeRemainingInMinutes = output.estimatedEvaluationTimeRemainingInMinutes
            self.lastEvaluationState = output.lastEvaluationState
            self.lastEvaluationTime = output.lastEvaluationTime
            self.lastModificationTime = output.lastModificationTime
            self.message = output.message
            self.monitorArn = output.monitorArn
            self.monitorName = output.monitorName
            self.resourceArn = output.resourceArn
            self.status = output.status
        } else {
            self.baseline = nil
            self.creationTime = nil
            self.estimatedEvaluationTimeRemainingInMinutes = nil
            self.lastEvaluationState = nil
            self.lastEvaluationTime = nil
            self.lastModificationTime = nil
            self.message = nil
            self.monitorArn = nil
            self.monitorName = nil
            self.resourceArn = nil
            self.status = nil
        }
    }
}
