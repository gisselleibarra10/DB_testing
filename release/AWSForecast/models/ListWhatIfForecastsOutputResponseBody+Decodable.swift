// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWhatIfForecastsOutputResponseBody: Swift.Equatable {
    let whatIfForecasts: [ForecastClientTypes.WhatIfForecastSummary]?
    let nextToken: Swift.String?
}

extension ListWhatIfForecastsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case whatIfForecasts = "WhatIfForecasts"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let whatIfForecastsContainer = try containerValues.decodeIfPresent([ForecastClientTypes.WhatIfForecastSummary?].self, forKey: .whatIfForecasts)
        var whatIfForecastsDecoded0:[ForecastClientTypes.WhatIfForecastSummary]? = nil
        if let whatIfForecastsContainer = whatIfForecastsContainer {
            whatIfForecastsDecoded0 = [ForecastClientTypes.WhatIfForecastSummary]()
            for structure0 in whatIfForecastsContainer {
                if let structure0 = structure0 {
                    whatIfForecastsDecoded0?.append(structure0)
                }
            }
        }
        whatIfForecasts = whatIfForecastsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
