// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListExplainabilitiesOutputResponseBody: Swift.Equatable {
    let explainabilities: [ForecastClientTypes.ExplainabilitySummary]?
    let nextToken: Swift.String?
}

extension ListExplainabilitiesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case explainabilities = "Explainabilities"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let explainabilitiesContainer = try containerValues.decodeIfPresent([ForecastClientTypes.ExplainabilitySummary?].self, forKey: .explainabilities)
        var explainabilitiesDecoded0:[ForecastClientTypes.ExplainabilitySummary]? = nil
        if let explainabilitiesContainer = explainabilitiesContainer {
            explainabilitiesDecoded0 = [ForecastClientTypes.ExplainabilitySummary]()
            for structure0 in explainabilitiesContainer {
                if let structure0 = structure0 {
                    explainabilitiesDecoded0?.append(structure0)
                }
            }
        }
        explainabilities = explainabilitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
