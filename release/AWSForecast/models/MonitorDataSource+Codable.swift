// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ForecastClientTypes.MonitorDataSource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case datasetImportJobArn = "DatasetImportJobArn"
        case forecastArn = "ForecastArn"
        case predictorArn = "PredictorArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let datasetImportJobArn = self.datasetImportJobArn {
            try encodeContainer.encode(datasetImportJobArn, forKey: .datasetImportJobArn)
        }
        if let forecastArn = self.forecastArn {
            try encodeContainer.encode(forecastArn, forKey: .forecastArn)
        }
        if let predictorArn = self.predictorArn {
            try encodeContainer.encode(predictorArn, forKey: .predictorArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetImportJobArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .datasetImportJobArn)
        datasetImportJobArn = datasetImportJobArnDecoded
        let forecastArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .forecastArn)
        forecastArn = forecastArnDecoded
        let predictorArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .predictorArn)
        predictorArn = predictorArnDecoded
    }
}
