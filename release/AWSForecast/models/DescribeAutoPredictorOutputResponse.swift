// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeAutoPredictorOutputResponse: Swift.Equatable {
    /// The timestamp of the CreateAutoPredictor request.
    public var creationTime: ClientRuntime.Date?
    /// The data configuration for your dataset group and any additional datasets.
    public var dataConfig: ForecastClientTypes.DataConfig?
    /// An array of the ARNs of the dataset import jobs used to import training data for the predictor.
    public var datasetImportJobArns: [Swift.String]?
    /// An AWS Key Management Service (KMS) key and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key. You can specify this optional object in the [CreateDataset] and [CreatePredictor] requests.
    public var encryptionConfig: ForecastClientTypes.EncryptionConfig?
    /// The estimated time remaining in minutes for the predictor training job to complete.
    public var estimatedTimeRemainingInMinutes: Swift.Int?
    /// Provides the status and ARN of the Predictor Explainability.
    public var explainabilityInfo: ForecastClientTypes.ExplainabilityInfo?
    /// An array of dimension (field) names that specify the attributes used to group your time series.
    public var forecastDimensions: [Swift.String]?
    /// The frequency of predictions in a forecast. Valid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes), 15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For example, "Y" indicates every year and "5min" indicates every five minutes.
    public var forecastFrequency: Swift.String?
    /// The number of time-steps that the model predicts. The forecast horizon is also called the prediction length.
    public var forecastHorizon: Swift.Int?
    /// The forecast types used during predictor training. Default value is ["0.1","0.5","0.9"].
    public var forecastTypes: [Swift.String]?
    /// The last time the resource was modified. The timestamp depends on the status of the job:
    ///
    /// * CREATE_PENDING - The CreationTime.
    ///
    /// * CREATE_IN_PROGRESS - The current timestamp.
    ///
    /// * CREATE_STOPPING - The current timestamp.
    ///
    /// * CREATE_STOPPED - When the job stopped.
    ///
    /// * ACTIVE or CREATE_FAILED - When the job finished or failed.
    public var lastModificationTime: ClientRuntime.Date?
    /// In the event of an error, a message detailing the cause of the error.
    public var message: Swift.String?
    /// A object with the Amazon Resource Name (ARN) and status of the monitor resource.
    public var monitorInfo: ForecastClientTypes.MonitorInfo?
    /// The accuracy metric used to optimize the predictor.
    public var optimizationMetric: ForecastClientTypes.OptimizationMetric?
    /// The Amazon Resource Name (ARN) of the predictor
    public var predictorArn: Swift.String?
    /// The name of the predictor.
    public var predictorName: Swift.String?
    /// The ARN and state of the reference predictor. This parameter is only valid for retrained or upgraded predictors.
    public var referencePredictorSummary: ForecastClientTypes.ReferencePredictorSummary?
    /// The status of the predictor. States include:
    ///
    /// * ACTIVE
    ///
    /// * CREATE_PENDING, CREATE_IN_PROGRESS, CREATE_FAILED
    ///
    /// * CREATE_STOPPING, CREATE_STOPPED
    ///
    /// * DELETE_PENDING, DELETE_IN_PROGRESS, DELETE_FAILED
    public var status: Swift.String?
    /// The time boundary Forecast uses when aggregating data.
    public var timeAlignmentBoundary: ForecastClientTypes.TimeAlignmentBoundary?

    public init (
        creationTime: ClientRuntime.Date? = nil,
        dataConfig: ForecastClientTypes.DataConfig? = nil,
        datasetImportJobArns: [Swift.String]? = nil,
        encryptionConfig: ForecastClientTypes.EncryptionConfig? = nil,
        estimatedTimeRemainingInMinutes: Swift.Int? = nil,
        explainabilityInfo: ForecastClientTypes.ExplainabilityInfo? = nil,
        forecastDimensions: [Swift.String]? = nil,
        forecastFrequency: Swift.String? = nil,
        forecastHorizon: Swift.Int? = nil,
        forecastTypes: [Swift.String]? = nil,
        lastModificationTime: ClientRuntime.Date? = nil,
        message: Swift.String? = nil,
        monitorInfo: ForecastClientTypes.MonitorInfo? = nil,
        optimizationMetric: ForecastClientTypes.OptimizationMetric? = nil,
        predictorArn: Swift.String? = nil,
        predictorName: Swift.String? = nil,
        referencePredictorSummary: ForecastClientTypes.ReferencePredictorSummary? = nil,
        status: Swift.String? = nil,
        timeAlignmentBoundary: ForecastClientTypes.TimeAlignmentBoundary? = nil
    )
    {
        self.creationTime = creationTime
        self.dataConfig = dataConfig
        self.datasetImportJobArns = datasetImportJobArns
        self.encryptionConfig = encryptionConfig
        self.estimatedTimeRemainingInMinutes = estimatedTimeRemainingInMinutes
        self.explainabilityInfo = explainabilityInfo
        self.forecastDimensions = forecastDimensions
        self.forecastFrequency = forecastFrequency
        self.forecastHorizon = forecastHorizon
        self.forecastTypes = forecastTypes
        self.lastModificationTime = lastModificationTime
        self.message = message
        self.monitorInfo = monitorInfo
        self.optimizationMetric = optimizationMetric
        self.predictorArn = predictorArn
        self.predictorName = predictorName
        self.referencePredictorSummary = referencePredictorSummary
        self.status = status
        self.timeAlignmentBoundary = timeAlignmentBoundary
    }
}
