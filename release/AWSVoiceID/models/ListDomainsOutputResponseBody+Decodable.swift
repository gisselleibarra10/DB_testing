// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainsOutputResponseBody: Swift.Equatable {
    let domainSummaries: [VoiceIdClientTypes.DomainSummary]?
    let nextToken: Swift.String?
}

extension ListDomainsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainSummaries = "DomainSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainSummariesContainer = try containerValues.decodeIfPresent([VoiceIdClientTypes.DomainSummary?].self, forKey: .domainSummaries)
        var domainSummariesDecoded0:[VoiceIdClientTypes.DomainSummary]? = nil
        if let domainSummariesContainer = domainSummariesContainer {
            domainSummariesDecoded0 = [VoiceIdClientTypes.DomainSummary]()
            for structure0 in domainSummariesContainer {
                if let structure0 = structure0 {
                    domainSummariesDecoded0?.append(structure0)
                }
            }
        }
        domainSummaries = domainSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
