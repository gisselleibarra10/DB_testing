// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSpeakersOutputResponseBody: Swift.Equatable {
    let speakerSummaries: [VoiceIdClientTypes.SpeakerSummary]?
    let nextToken: Swift.String?
}

extension ListSpeakersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case speakerSummaries = "SpeakerSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let speakerSummariesContainer = try containerValues.decodeIfPresent([VoiceIdClientTypes.SpeakerSummary?].self, forKey: .speakerSummaries)
        var speakerSummariesDecoded0:[VoiceIdClientTypes.SpeakerSummary]? = nil
        if let speakerSummariesContainer = speakerSummariesContainer {
            speakerSummariesDecoded0 = [VoiceIdClientTypes.SpeakerSummary]()
            for structure0 in speakerSummariesContainer {
                if let structure0 = structure0 {
                    speakerSummariesDecoded0?.append(structure0)
                }
            }
        }
        speakerSummaries = speakerSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
