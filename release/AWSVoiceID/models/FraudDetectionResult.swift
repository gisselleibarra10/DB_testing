// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VoiceIdClientTypes {
    /// The fraud detection result produced by Voice ID, processed against the current session state and streamed audio of the speaker.
    public struct FraudDetectionResult: Swift.Equatable {
        /// A timestamp indicating when audio aggregation ended for this fraud detection result.
        public var audioAggregationEndedAt: ClientRuntime.Date?
        /// A timestamp indicating when audio aggregation started for this fraud detection result.
        public var audioAggregationStartedAt: ClientRuntime.Date?
        /// The FraudDetectionConfiguration used to generate this fraud detection result.
        public var configuration: VoiceIdClientTypes.FraudDetectionConfiguration?
        /// The fraud detection decision produced by Voice ID, processed against the current session state and streamed audio of the speaker.
        public var decision: VoiceIdClientTypes.FraudDetectionDecision?
        /// The unique identifier for this fraud detection result. Given there can be multiple fraud detections for a given session, this field helps in identifying if the returned result is from previous streaming activity or a new result. Note that in the absence of any new streaming activity or risk threshold changes, Voice ID always returns cached Fraud Detection result for this API.
        public var fraudDetectionResultId: Swift.String?
        /// The reason speaker was flagged by the fraud detection system. This is only be populated if fraud detection Decision is HIGH_RISK, and the following possible values: KNOWN_FRAUDSTER and VOICE_SPOOFING.
        public var reasons: [VoiceIdClientTypes.FraudDetectionReason]?
        /// Details about each risk analyzed for this speaker. Currently, this contains KnownFraudsterRisk and VoiceSpoofingRisk details.
        public var riskDetails: VoiceIdClientTypes.FraudRiskDetails?

        public init (
            audioAggregationEndedAt: ClientRuntime.Date? = nil,
            audioAggregationStartedAt: ClientRuntime.Date? = nil,
            configuration: VoiceIdClientTypes.FraudDetectionConfiguration? = nil,
            decision: VoiceIdClientTypes.FraudDetectionDecision? = nil,
            fraudDetectionResultId: Swift.String? = nil,
            reasons: [VoiceIdClientTypes.FraudDetectionReason]? = nil,
            riskDetails: VoiceIdClientTypes.FraudRiskDetails? = nil
        )
        {
            self.audioAggregationEndedAt = audioAggregationEndedAt
            self.audioAggregationStartedAt = audioAggregationStartedAt
            self.configuration = configuration
            self.decision = decision
            self.fraudDetectionResultId = fraudDetectionResultId
            self.reasons = reasons
            self.riskDetails = riskDetails
        }
    }

}
