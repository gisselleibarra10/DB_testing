// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VoiceIdClientTypes.ServerSideEncryptionUpdateDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case message = "Message"
        case oldKmsKeyId = "OldKmsKeyId"
        case updateStatus = "UpdateStatus"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let message = self.message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let oldKmsKeyId = self.oldKmsKeyId {
            try encodeContainer.encode(oldKmsKeyId, forKey: .oldKmsKeyId)
        }
        if let updateStatus = self.updateStatus {
            try encodeContainer.encode(updateStatus.rawValue, forKey: .updateStatus)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let oldKmsKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .oldKmsKeyId)
        oldKmsKeyId = oldKmsKeyIdDecoded
        let updateStatusDecoded = try containerValues.decodeIfPresent(VoiceIdClientTypes.ServerSideEncryptionUpdateStatus.self, forKey: .updateStatus)
        updateStatus = updateStatusDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
    }
}
