// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFraudsterRegistrationJobsOutputResponseBody: Swift.Equatable {
    let jobSummaries: [VoiceIdClientTypes.FraudsterRegistrationJobSummary]?
    let nextToken: Swift.String?
}

extension ListFraudsterRegistrationJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jobSummaries = "JobSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobSummariesContainer = try containerValues.decodeIfPresent([VoiceIdClientTypes.FraudsterRegistrationJobSummary?].self, forKey: .jobSummaries)
        var jobSummariesDecoded0:[VoiceIdClientTypes.FraudsterRegistrationJobSummary]? = nil
        if let jobSummariesContainer = jobSummariesContainer {
            jobSummariesDecoded0 = [VoiceIdClientTypes.FraudsterRegistrationJobSummary]()
            for structure0 in jobSummariesContainer {
                if let structure0 = structure0 {
                    jobSummariesDecoded0?.append(structure0)
                }
            }
        }
        jobSummaries = jobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
