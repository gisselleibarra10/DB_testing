// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartSpeakerEnrollmentJobInputBody: Swift.Equatable {
    let clientToken: Swift.String?
    let jobName: Swift.String?
    let domainId: Swift.String?
    let dataAccessRoleArn: Swift.String?
    let enrollmentConfig: VoiceIdClientTypes.EnrollmentConfig?
    let inputDataConfig: VoiceIdClientTypes.InputDataConfig?
    let outputDataConfig: VoiceIdClientTypes.OutputDataConfig?
}

extension StartSpeakerEnrollmentJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case dataAccessRoleArn = "DataAccessRoleArn"
        case domainId = "DomainId"
        case enrollmentConfig = "EnrollmentConfig"
        case inputDataConfig = "InputDataConfig"
        case jobName = "JobName"
        case outputDataConfig = "OutputDataConfig"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let jobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobName)
        jobName = jobNameDecoded
        let domainIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainId)
        domainId = domainIdDecoded
        let dataAccessRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataAccessRoleArn)
        dataAccessRoleArn = dataAccessRoleArnDecoded
        let enrollmentConfigDecoded = try containerValues.decodeIfPresent(VoiceIdClientTypes.EnrollmentConfig.self, forKey: .enrollmentConfig)
        enrollmentConfig = enrollmentConfigDecoded
        let inputDataConfigDecoded = try containerValues.decodeIfPresent(VoiceIdClientTypes.InputDataConfig.self, forKey: .inputDataConfig)
        inputDataConfig = inputDataConfigDecoded
        let outputDataConfigDecoded = try containerValues.decodeIfPresent(VoiceIdClientTypes.OutputDataConfig.self, forKey: .outputDataConfig)
        outputDataConfig = outputDataConfigDecoded
    }
}
