// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EvaluateSessionOutputResponseBody: Swift.Equatable {
    let domainId: Swift.String?
    let sessionId: Swift.String?
    let sessionName: Swift.String?
    let streamingStatus: VoiceIdClientTypes.StreamingStatus?
    let authenticationResult: VoiceIdClientTypes.AuthenticationResult?
    let fraudDetectionResult: VoiceIdClientTypes.FraudDetectionResult?
}

extension EvaluateSessionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authenticationResult = "AuthenticationResult"
        case domainId = "DomainId"
        case fraudDetectionResult = "FraudDetectionResult"
        case sessionId = "SessionId"
        case sessionName = "SessionName"
        case streamingStatus = "StreamingStatus"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainId)
        domainId = domainIdDecoded
        let sessionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sessionId)
        sessionId = sessionIdDecoded
        let sessionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sessionName)
        sessionName = sessionNameDecoded
        let streamingStatusDecoded = try containerValues.decodeIfPresent(VoiceIdClientTypes.StreamingStatus.self, forKey: .streamingStatus)
        streamingStatus = streamingStatusDecoded
        let authenticationResultDecoded = try containerValues.decodeIfPresent(VoiceIdClientTypes.AuthenticationResult.self, forKey: .authenticationResult)
        authenticationResult = authenticationResultDecoded
        let fraudDetectionResultDecoded = try containerValues.decodeIfPresent(VoiceIdClientTypes.FraudDetectionResult.self, forKey: .fraudDetectionResult)
        fraudDetectionResult = fraudDetectionResultDecoded
    }
}
