// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodeStarClientTypes {
    /// Information about the GitHub repository to be created in AWS CodeStar. This is where the source code files provided with the project request will be uploaded after project creation.
    public struct GitHubCodeDestination: Swift.Equatable {
        /// Description for the GitHub repository to be created in AWS CodeStar. This description displays in GitHub after the repository is created.
        public var description: Swift.String?
        /// Whether to enable issues for the GitHub repository.
        /// This member is required.
        public var issuesEnabled: Swift.Bool
        /// Name of the GitHub repository to be created in AWS CodeStar.
        /// This member is required.
        public var name: Swift.String?
        /// The GitHub username for the owner of the GitHub repository to be created in AWS CodeStar. If this repository should be owned by a GitHub organization, provide its name.
        /// This member is required.
        public var owner: Swift.String?
        /// Whether the GitHub repository is to be a private repository.
        /// This member is required.
        public var privateRepository: Swift.Bool
        /// The GitHub user's personal access token for the GitHub repository.
        /// This member is required.
        public var token: Swift.String?
        /// The type of GitHub repository to be created in AWS CodeStar. Valid values are User or Organization.
        /// This member is required.
        public var type: Swift.String?

        public init (
            description: Swift.String? = nil,
            issuesEnabled: Swift.Bool = false,
            name: Swift.String? = nil,
            owner: Swift.String? = nil,
            privateRepository: Swift.Bool = false,
            token: Swift.String? = nil,
            type: Swift.String? = nil
        )
        {
            self.description = description
            self.issuesEnabled = issuesEnabled
            self.name = name
            self.owner = owner
            self.privateRepository = privateRepository
            self.token = token
            self.type = type
        }
    }

}
