// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticBeanstalkClientTypes.Latency: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case p10 = "P10"
        case p50 = "P50"
        case p75 = "P75"
        case p85 = "P85"
        case p90 = "P90"
        case p95 = "P95"
        case p99 = "P99"
        case p999 = "P999"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let p10 = p10 {
            try container.encode(p10, forKey: ClientRuntime.Key("P10"))
        }
        if let p50 = p50 {
            try container.encode(p50, forKey: ClientRuntime.Key("P50"))
        }
        if let p75 = p75 {
            try container.encode(p75, forKey: ClientRuntime.Key("P75"))
        }
        if let p85 = p85 {
            try container.encode(p85, forKey: ClientRuntime.Key("P85"))
        }
        if let p90 = p90 {
            try container.encode(p90, forKey: ClientRuntime.Key("P90"))
        }
        if let p95 = p95 {
            try container.encode(p95, forKey: ClientRuntime.Key("P95"))
        }
        if let p99 = p99 {
            try container.encode(p99, forKey: ClientRuntime.Key("P99"))
        }
        if let p999 = p999 {
            try container.encode(p999, forKey: ClientRuntime.Key("P999"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let p999Decoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .p999)
        p999 = p999Decoded
        let p99Decoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .p99)
        p99 = p99Decoded
        let p95Decoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .p95)
        p95 = p95Decoded
        let p90Decoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .p90)
        p90 = p90Decoded
        let p85Decoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .p85)
        p85 = p85Decoded
        let p75Decoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .p75)
        p75 = p75Decoded
        let p50Decoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .p50)
        p50 = p50Decoded
        let p10Decoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .p10)
        p10 = p10Decoded
    }
}
