// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ElasticBeanstalkClientTypes {
    /// Describes the possible values for a configuration option.
    public struct ConfigurationOptionDescription: Swift.Equatable {
        /// An indication of which action is required if the value for this configuration option changes:
        ///
        /// * NoInterruption : There is no interruption to the environment or application availability.
        ///
        /// * RestartEnvironment : The environment is entirely restarted, all AWS resources are deleted and recreated, and the environment is unavailable during the process.
        ///
        /// * RestartApplicationServer : The environment is available the entire time. However, a short application outage occurs when the application servers on the running Amazon EC2 instances are restarted.
        public var changeSeverity: Swift.String?
        /// The default value for this configuration option.
        public var defaultValue: Swift.String?
        /// If specified, the configuration option must be a string value no longer than this value.
        public var maxLength: Swift.Int?
        /// If specified, the configuration option must be a numeric value less than this value.
        public var maxValue: Swift.Int?
        /// If specified, the configuration option must be a numeric value greater than this value.
        public var minValue: Swift.Int?
        /// The name of the configuration option.
        public var name: Swift.String?
        /// A unique namespace identifying the option's associated AWS resource.
        public var namespace: Swift.String?
        /// If specified, the configuration option must be a string value that satisfies this regular expression.
        public var regex: ElasticBeanstalkClientTypes.OptionRestrictionRegex?
        /// An indication of whether the user defined this configuration option:
        ///
        /// * true : This configuration option was defined by the user. It is a valid choice for specifying if this as an Option to Remove when updating configuration settings.
        ///
        /// * false : This configuration was not defined by the user.
        ///
        ///
        /// Constraint: You can remove only UserDefined options from a configuration. Valid Values: true | false
        public var userDefined: Swift.Bool?
        /// If specified, values for the configuration option are selected from this list.
        public var valueOptions: [Swift.String]?
        /// An indication of which type of values this option has and whether it is allowable to select one or more than one of the possible values:
        ///
        /// * Scalar : Values for this option are a single selection from the possible values, or an unformatted string, or numeric value governed by the MIN/MAX/Regex constraints.
        ///
        /// * List : Values for this option are multiple selections from the possible values.
        ///
        /// * Boolean : Values for this option are either true or false .
        ///
        /// * Json : Values for this option are a JSON representation of a ConfigDocument.
        public var valueType: ElasticBeanstalkClientTypes.ConfigurationOptionValueType?

        public init (
            changeSeverity: Swift.String? = nil,
            defaultValue: Swift.String? = nil,
            maxLength: Swift.Int? = nil,
            maxValue: Swift.Int? = nil,
            minValue: Swift.Int? = nil,
            name: Swift.String? = nil,
            namespace: Swift.String? = nil,
            regex: ElasticBeanstalkClientTypes.OptionRestrictionRegex? = nil,
            userDefined: Swift.Bool? = nil,
            valueOptions: [Swift.String]? = nil,
            valueType: ElasticBeanstalkClientTypes.ConfigurationOptionValueType? = nil
        )
        {
            self.changeSeverity = changeSeverity
            self.defaultValue = defaultValue
            self.maxLength = maxLength
            self.maxValue = maxValue
            self.minValue = minValue
            self.name = name
            self.namespace = namespace
            self.regex = regex
            self.userDefined = userDefined
            self.valueOptions = valueOptions
            self.valueType = valueType
        }
    }

}
