// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Request to terminate an environment.
public struct TerminateEnvironmentInput: Swift.Equatable {
    /// The ID of the environment to terminate. Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns MissingRequiredParameter error.
    public var environmentId: Swift.String?
    /// The name of the environment to terminate. Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns MissingRequiredParameter error.
    public var environmentName: Swift.String?
    /// Terminates the target environment even if another environment in the same group is dependent on it.
    public var forceTerminate: Swift.Bool?
    /// Indicates whether the associated AWS resources should shut down when the environment is terminated:
    ///
    /// * true: The specified environment as well as the associated AWS resources, such as Auto Scaling group and LoadBalancer, are terminated.
    ///
    /// * false: AWS Elastic Beanstalk resource management is removed from the environment, but the AWS resources continue to operate.
    ///
    ///
    /// For more information, see the [ AWS Elastic Beanstalk User Guide. ](https://docs.aws.amazon.com/elasticbeanstalk/latest/ug/) Default: true Valid Values: true | false
    public var terminateResources: Swift.Bool?

    public init (
        environmentId: Swift.String? = nil,
        environmentName: Swift.String? = nil,
        forceTerminate: Swift.Bool? = nil,
        terminateResources: Swift.Bool? = nil
    )
    {
        self.environmentId = environmentId
        self.environmentName = environmentName
        self.forceTerminate = forceTerminate
        self.terminateResources = terminateResources
    }
}
