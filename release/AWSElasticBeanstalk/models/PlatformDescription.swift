// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticBeanstalkClientTypes {
    /// Detailed information about a platform version.
    public struct PlatformDescription: Swift.Equatable {
        /// The custom AMIs supported by the platform version.
        public var customAmiList: [ElasticBeanstalkClientTypes.CustomAmi]?
        /// The date when the platform version was created.
        public var dateCreated: ClientRuntime.Date?
        /// The date when the platform version was last updated.
        public var dateUpdated: ClientRuntime.Date?
        /// The description of the platform version.
        public var description: Swift.String?
        /// The frameworks supported by the platform version.
        public var frameworks: [ElasticBeanstalkClientTypes.PlatformFramework]?
        /// Information about the maintainer of the platform version.
        public var maintainer: Swift.String?
        /// The operating system used by the platform version.
        public var operatingSystemName: Swift.String?
        /// The version of the operating system used by the platform version.
        public var operatingSystemVersion: Swift.String?
        /// The ARN of the platform version.
        public var platformArn: Swift.String?
        /// The state of the platform version's branch in its lifecycle. Possible values: Beta | Supported | Deprecated | Retired
        public var platformBranchLifecycleState: Swift.String?
        /// The platform branch to which the platform version belongs.
        public var platformBranchName: Swift.String?
        /// The category of the platform version.
        public var platformCategory: Swift.String?
        /// The state of the platform version in its lifecycle. Possible values: Recommended | null If a null value is returned, the platform version isn't the recommended one for its branch. Each platform branch has a single recommended platform version, typically the most recent one.
        public var platformLifecycleState: Swift.String?
        /// The name of the platform version.
        public var platformName: Swift.String?
        /// The AWS account ID of the person who created the platform version.
        public var platformOwner: Swift.String?
        /// The status of the platform version.
        public var platformStatus: ElasticBeanstalkClientTypes.PlatformStatus?
        /// The version of the platform version.
        public var platformVersion: Swift.String?
        /// The programming languages supported by the platform version.
        public var programmingLanguages: [ElasticBeanstalkClientTypes.PlatformProgrammingLanguage]?
        /// The name of the solution stack used by the platform version.
        public var solutionStackName: Swift.String?
        /// The additions supported by the platform version.
        public var supportedAddonList: [Swift.String]?
        /// The tiers supported by the platform version.
        public var supportedTierList: [Swift.String]?

        public init (
            customAmiList: [ElasticBeanstalkClientTypes.CustomAmi]? = nil,
            dateCreated: ClientRuntime.Date? = nil,
            dateUpdated: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            frameworks: [ElasticBeanstalkClientTypes.PlatformFramework]? = nil,
            maintainer: Swift.String? = nil,
            operatingSystemName: Swift.String? = nil,
            operatingSystemVersion: Swift.String? = nil,
            platformArn: Swift.String? = nil,
            platformBranchLifecycleState: Swift.String? = nil,
            platformBranchName: Swift.String? = nil,
            platformCategory: Swift.String? = nil,
            platformLifecycleState: Swift.String? = nil,
            platformName: Swift.String? = nil,
            platformOwner: Swift.String? = nil,
            platformStatus: ElasticBeanstalkClientTypes.PlatformStatus? = nil,
            platformVersion: Swift.String? = nil,
            programmingLanguages: [ElasticBeanstalkClientTypes.PlatformProgrammingLanguage]? = nil,
            solutionStackName: Swift.String? = nil,
            supportedAddonList: [Swift.String]? = nil,
            supportedTierList: [Swift.String]? = nil
        )
        {
            self.customAmiList = customAmiList
            self.dateCreated = dateCreated
            self.dateUpdated = dateUpdated
            self.description = description
            self.frameworks = frameworks
            self.maintainer = maintainer
            self.operatingSystemName = operatingSystemName
            self.operatingSystemVersion = operatingSystemVersion
            self.platformArn = platformArn
            self.platformBranchLifecycleState = platformBranchLifecycleState
            self.platformBranchName = platformBranchName
            self.platformCategory = platformCategory
            self.platformLifecycleState = platformLifecycleState
            self.platformName = platformName
            self.platformOwner = platformOwner
            self.platformStatus = platformStatus
            self.platformVersion = platformVersion
            self.programmingLanguages = programmingLanguages
            self.solutionStackName = solutionStackName
            self.supportedAddonList = supportedAddonList
            self.supportedTierList = supportedTierList
        }
    }

}
