// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ApplyEnvironmentManagedActionOutputResponseBody: Swift.Equatable {
    let actionId: Swift.String?
    let actionDescription: Swift.String?
    let actionType: ElasticBeanstalkClientTypes.ActionType?
    let status: Swift.String?
}

extension ApplyEnvironmentManagedActionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionDescription = "ActionDescription"
        case actionId = "ActionId"
        case actionType = "ActionType"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("ApplyEnvironmentManagedActionResult"))
        let actionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionId)
        actionId = actionIdDecoded
        let actionDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionDescription)
        actionDescription = actionDescriptionDecoded
        let actionTypeDecoded = try containerValues.decodeIfPresent(ElasticBeanstalkClientTypes.ActionType.self, forKey: .actionType)
        actionType = actionTypeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
    }
}
