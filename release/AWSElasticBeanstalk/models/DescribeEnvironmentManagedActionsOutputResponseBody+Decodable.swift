// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEnvironmentManagedActionsOutputResponseBody: Swift.Equatable {
    let managedActions: [ElasticBeanstalkClientTypes.ManagedAction]?
}

extension DescribeEnvironmentManagedActionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case managedActions = "ManagedActions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DescribeEnvironmentManagedActionsResult"))
        if containerValues.contains(.managedActions) {
            struct KeyVal0{struct member{}}
            let managedActionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .managedActions)
            if let managedActionsWrappedContainer = managedActionsWrappedContainer {
                let managedActionsContainer = try managedActionsWrappedContainer.decodeIfPresent([ElasticBeanstalkClientTypes.ManagedAction].self, forKey: .member)
                var managedActionsBuffer:[ElasticBeanstalkClientTypes.ManagedAction]? = nil
                if let managedActionsContainer = managedActionsContainer {
                    managedActionsBuffer = [ElasticBeanstalkClientTypes.ManagedAction]()
                    for structureContainer0 in managedActionsContainer {
                        managedActionsBuffer?.append(structureContainer0)
                    }
                }
                managedActions = managedActionsBuffer
            } else {
                managedActions = []
            }
        } else {
            managedActions = nil
        }
    }
}
