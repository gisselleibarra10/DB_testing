// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticBeanstalkClientTypes.EnvironmentLink: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case environmentName = "EnvironmentName"
        case linkName = "LinkName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let environmentName = environmentName {
            try container.encode(environmentName, forKey: ClientRuntime.Key("EnvironmentName"))
        }
        if let linkName = linkName {
            try container.encode(linkName, forKey: ClientRuntime.Key("LinkName"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let linkNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .linkName)
        linkName = linkNameDecoded
        let environmentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .environmentName)
        environmentName = environmentNameDecoded
    }
}
