// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TerminateEnvironmentInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let environmentId = environmentId {
            try container.encode(environmentId, forKey: ClientRuntime.Key("EnvironmentId"))
        }
        if let environmentName = environmentName {
            try container.encode(environmentName, forKey: ClientRuntime.Key("EnvironmentName"))
        }
        if let forceTerminate = forceTerminate {
            try container.encode(forceTerminate, forKey: ClientRuntime.Key("ForceTerminate"))
        }
        if let terminateResources = terminateResources {
            try container.encode(terminateResources, forKey: ClientRuntime.Key("TerminateResources"))
        }
        try container.encode("TerminateEnvironment", forKey:ClientRuntime.Key("Action"))
        try container.encode("2010-12-01", forKey:ClientRuntime.Key("Version"))
    }
}
