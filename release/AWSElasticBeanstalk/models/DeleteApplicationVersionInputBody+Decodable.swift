// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteApplicationVersionInputBody: Swift.Equatable {
    let applicationName: Swift.String?
    let versionLabel: Swift.String?
    let deleteSourceBundle: Swift.Bool?
}

extension DeleteApplicationVersionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationName = "ApplicationName"
        case deleteSourceBundle = "DeleteSourceBundle"
        case versionLabel = "VersionLabel"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let versionLabelDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .versionLabel)
        versionLabel = versionLabelDecoded
        let deleteSourceBundleDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .deleteSourceBundle)
        deleteSourceBundle = deleteSourceBundleDecoded
    }
}
