// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TerminateEnvironmentInputBody: Swift.Equatable {
    let environmentId: Swift.String?
    let environmentName: Swift.String?
    let terminateResources: Swift.Bool?
    let forceTerminate: Swift.Bool?
}

extension TerminateEnvironmentInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case environmentId = "EnvironmentId"
        case environmentName = "EnvironmentName"
        case forceTerminate = "ForceTerminate"
        case terminateResources = "TerminateResources"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let environmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .environmentId)
        environmentId = environmentIdDecoded
        let environmentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .environmentName)
        environmentName = environmentNameDecoded
        let terminateResourcesDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .terminateResources)
        terminateResources = terminateResourcesDecoded
        let forceTerminateDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .forceTerminate)
        forceTerminate = forceTerminateDecoded
    }
}
