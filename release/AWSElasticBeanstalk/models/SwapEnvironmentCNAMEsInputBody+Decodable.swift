// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SwapEnvironmentCNAMEsInputBody: Swift.Equatable {
    let sourceEnvironmentId: Swift.String?
    let sourceEnvironmentName: Swift.String?
    let destinationEnvironmentId: Swift.String?
    let destinationEnvironmentName: Swift.String?
}

extension SwapEnvironmentCNAMEsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationEnvironmentId = "DestinationEnvironmentId"
        case destinationEnvironmentName = "DestinationEnvironmentName"
        case sourceEnvironmentId = "SourceEnvironmentId"
        case sourceEnvironmentName = "SourceEnvironmentName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceEnvironmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceEnvironmentId)
        sourceEnvironmentId = sourceEnvironmentIdDecoded
        let sourceEnvironmentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceEnvironmentName)
        sourceEnvironmentName = sourceEnvironmentNameDecoded
        let destinationEnvironmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationEnvironmentId)
        destinationEnvironmentId = destinationEnvironmentIdDecoded
        let destinationEnvironmentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationEnvironmentName)
        destinationEnvironmentName = destinationEnvironmentNameDecoded
    }
}
