// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreatePlatformVersionInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let environmentName = environmentName {
            try container.encode(environmentName, forKey: ClientRuntime.Key("EnvironmentName"))
        }
        if let optionSettings = optionSettings {
            var optionSettingsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("OptionSettings"))
            for (index0, configurationoptionsetting0) in optionSettings.enumerated() {
                try optionSettingsContainer.encode(configurationoptionsetting0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let platformDefinitionBundle = platformDefinitionBundle {
            try container.encode(platformDefinitionBundle, forKey: ClientRuntime.Key("PlatformDefinitionBundle"))
        }
        if let platformName = platformName {
            try container.encode(platformName, forKey: ClientRuntime.Key("PlatformName"))
        }
        if let platformVersion = platformVersion {
            try container.encode(platformVersion, forKey: ClientRuntime.Key("PlatformVersion"))
        }
        if let tags = tags {
            var tagsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Tags"))
            for (index0, tag0) in tags.enumerated() {
                try tagsContainer.encode(tag0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("CreatePlatformVersion", forKey:ClientRuntime.Key("Action"))
        try container.encode("2010-12-01", forKey:ClientRuntime.Key("Version"))
    }
}
