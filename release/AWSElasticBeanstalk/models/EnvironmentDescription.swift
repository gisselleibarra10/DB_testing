// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticBeanstalkClientTypes {
    /// Describes the properties of an environment.
    public struct EnvironmentDescription: Swift.Equatable {
        /// Indicates if there is an in-progress environment configuration update or application version deployment that you can cancel. true: There is an update in progress. false: There are no updates currently in progress.
        public var abortableOperationInProgress: Swift.Bool?
        /// The name of the application associated with this environment.
        public var applicationName: Swift.String?
        /// The URL to the CNAME for this environment.
        public var cNAME: Swift.String?
        /// The creation date for this environment.
        public var dateCreated: ClientRuntime.Date?
        /// The last modified date for this environment.
        public var dateUpdated: ClientRuntime.Date?
        /// Describes this environment.
        public var description: Swift.String?
        /// For load-balanced, autoscaling environments, the URL to the LoadBalancer. For single-instance environments, the IP address of the instance.
        public var endpointURL: Swift.String?
        /// The environment's Amazon Resource Name (ARN), which can be used in other API requests that require an ARN.
        public var environmentArn: Swift.String?
        /// The ID of this environment.
        public var environmentId: Swift.String?
        /// A list of links to other environments in the same group.
        public var environmentLinks: [ElasticBeanstalkClientTypes.EnvironmentLink]?
        /// The name of this environment.
        public var environmentName: Swift.String?
        /// Describes the health status of the environment. AWS Elastic Beanstalk indicates the failure levels for a running environment:
        ///
        /// * Red: Indicates the environment is not responsive. Occurs when three or more consecutive failures occur for an environment.
        ///
        /// * Yellow: Indicates that something is wrong. Occurs when two consecutive failures occur for an environment.
        ///
        /// * Green: Indicates the environment is healthy and fully functional.
        ///
        /// * Grey: Default health for a new environment. The environment is not fully launched and health checks have not started or health checks are suspended during an UpdateEnvironment or RestartEnvironment request.
        ///
        ///
        /// Default: Grey
        public var health: ElasticBeanstalkClientTypes.EnvironmentHealth?
        /// Returns the health status of the application running in your environment. For more information, see [Health Colors and Statuses](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html).
        public var healthStatus: ElasticBeanstalkClientTypes.EnvironmentHealthStatus?
        /// The Amazon Resource Name (ARN) of the environment's operations role. For more information, see [Operations roles](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html) in the AWS Elastic Beanstalk Developer Guide.
        public var operationsRole: Swift.String?
        /// The ARN of the platform version.
        public var platformArn: Swift.String?
        /// The description of the AWS resources used by this environment.
        public var resources: ElasticBeanstalkClientTypes.EnvironmentResourcesDescription?
        /// The name of the SolutionStack deployed with this environment.
        public var solutionStackName: Swift.String?
        /// The current operational status of the environment:
        ///
        /// * Launching: Environment is in the process of initial deployment.
        ///
        /// * Updating: Environment is in the process of updating its configuration settings or application version.
        ///
        /// * Ready: Environment is available to have an action performed on it, such as update or terminate.
        ///
        /// * Terminating: Environment is in the shut-down process.
        ///
        /// * Terminated: Environment is not running.
        public var status: ElasticBeanstalkClientTypes.EnvironmentStatus?
        /// The name of the configuration template used to originally launch this environment.
        public var templateName: Swift.String?
        /// Describes the current tier of this environment.
        public var tier: ElasticBeanstalkClientTypes.EnvironmentTier?
        /// The application version deployed in this environment.
        public var versionLabel: Swift.String?

        public init (
            abortableOperationInProgress: Swift.Bool? = nil,
            applicationName: Swift.String? = nil,
            cNAME: Swift.String? = nil,
            dateCreated: ClientRuntime.Date? = nil,
            dateUpdated: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            endpointURL: Swift.String? = nil,
            environmentArn: Swift.String? = nil,
            environmentId: Swift.String? = nil,
            environmentLinks: [ElasticBeanstalkClientTypes.EnvironmentLink]? = nil,
            environmentName: Swift.String? = nil,
            health: ElasticBeanstalkClientTypes.EnvironmentHealth? = nil,
            healthStatus: ElasticBeanstalkClientTypes.EnvironmentHealthStatus? = nil,
            operationsRole: Swift.String? = nil,
            platformArn: Swift.String? = nil,
            resources: ElasticBeanstalkClientTypes.EnvironmentResourcesDescription? = nil,
            solutionStackName: Swift.String? = nil,
            status: ElasticBeanstalkClientTypes.EnvironmentStatus? = nil,
            templateName: Swift.String? = nil,
            tier: ElasticBeanstalkClientTypes.EnvironmentTier? = nil,
            versionLabel: Swift.String? = nil
        )
        {
            self.abortableOperationInProgress = abortableOperationInProgress
            self.applicationName = applicationName
            self.cNAME = cNAME
            self.dateCreated = dateCreated
            self.dateUpdated = dateUpdated
            self.description = description
            self.endpointURL = endpointURL
            self.environmentArn = environmentArn
            self.environmentId = environmentId
            self.environmentLinks = environmentLinks
            self.environmentName = environmentName
            self.health = health
            self.healthStatus = healthStatus
            self.operationsRole = operationsRole
            self.platformArn = platformArn
            self.resources = resources
            self.solutionStackName = solutionStackName
            self.status = status
            self.templateName = templateName
            self.tier = tier
            self.versionLabel = versionLabel
        }
    }

}
