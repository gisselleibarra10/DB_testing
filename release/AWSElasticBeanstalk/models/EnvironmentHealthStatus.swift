// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ElasticBeanstalkClientTypes {
    public enum EnvironmentHealthStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case degraded
        case info
        case nodata
        case ok
        case pending
        case severe
        case suspended
        case unknown
        case warning
        case sdkUnknown(Swift.String)

        public static var allCases: [EnvironmentHealthStatus] {
            return [
                .degraded,
                .info,
                .nodata,
                .ok,
                .pending,
                .severe,
                .suspended,
                .unknown,
                .warning,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .degraded: return "Degraded"
            case .info: return "Info"
            case .nodata: return "NoData"
            case .ok: return "Ok"
            case .pending: return "Pending"
            case .severe: return "Severe"
            case .suspended: return "Suspended"
            case .unknown: return "Unknown"
            case .warning: return "Warning"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = EnvironmentHealthStatus(rawValue: rawValue) ?? EnvironmentHealthStatus.sdkUnknown(rawValue)
        }
    }
}
