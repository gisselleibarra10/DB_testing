// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Health details for an AWS Elastic Beanstalk environment.
public struct DescribeEnvironmentHealthOutputResponse: Swift.Equatable {
    /// Application request metrics for the environment.
    public var applicationMetrics: ElasticBeanstalkClientTypes.ApplicationMetrics?
    /// Descriptions of the data that contributed to the environment's current health status.
    public var causes: [Swift.String]?
    /// The [health color](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html) of the environment.
    public var color: Swift.String?
    /// The environment's name.
    public var environmentName: Swift.String?
    /// The [health status](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html) of the environment. For example, Ok.
    public var healthStatus: Swift.String?
    /// Summary health information for the instances in the environment.
    public var instancesHealth: ElasticBeanstalkClientTypes.InstanceHealthSummary?
    /// The date and time that the health information was retrieved.
    public var refreshedAt: ClientRuntime.Date?
    /// The environment's operational status. Ready, Launching, Updating, Terminating, or Terminated.
    public var status: ElasticBeanstalkClientTypes.EnvironmentHealth?

    public init (
        applicationMetrics: ElasticBeanstalkClientTypes.ApplicationMetrics? = nil,
        causes: [Swift.String]? = nil,
        color: Swift.String? = nil,
        environmentName: Swift.String? = nil,
        healthStatus: Swift.String? = nil,
        instancesHealth: ElasticBeanstalkClientTypes.InstanceHealthSummary? = nil,
        refreshedAt: ClientRuntime.Date? = nil,
        status: ElasticBeanstalkClientTypes.EnvironmentHealth? = nil
    )
    {
        self.applicationMetrics = applicationMetrics
        self.causes = causes
        self.color = color
        self.environmentName = environmentName
        self.healthStatus = healthStatus
        self.instancesHealth = instancesHealth
        self.refreshedAt = refreshedAt
        self.status = status
    }
}
