// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// A request to create a channel
public struct CreateChannelInput: Swift.Equatable {
    /// Specification of CDI inputs for this channel
    public var cdiInputSpecification: MediaLiveClientTypes.CdiInputSpecification?
    /// The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.
    public var channelClass: MediaLiveClientTypes.ChannelClass?
    /// Placeholder documentation for __listOfOutputDestination
    public var destinations: [MediaLiveClientTypes.OutputDestination]?
    /// Encoder Settings
    public var encoderSettings: MediaLiveClientTypes.EncoderSettings?
    /// List of input attachments for channel.
    public var inputAttachments: [MediaLiveClientTypes.InputAttachment]?
    /// Specification of network and file inputs for this channel
    public var inputSpecification: MediaLiveClientTypes.InputSpecification?
    /// The log level to write to CloudWatch Logs.
    public var logLevel: MediaLiveClientTypes.LogLevel?
    /// Maintenance settings for this channel.
    public var maintenance: MediaLiveClientTypes.MaintenanceCreateSettings?
    /// Name of channel.
    public var name: Swift.String?
    /// Unique request ID to be specified. This is needed to prevent retries from creating multiple resources.
    public var requestId: Swift.String?
    /// Deprecated field that's only usable by whitelisted customers.
    @available(*, deprecated)
    public var reserved: Swift.String?
    /// An optional Amazon Resource Name (ARN) of the role to assume when running the Channel.
    public var roleArn: Swift.String?
    /// A collection of key-value pairs.
    public var tags: [Swift.String:Swift.String]?
    /// Settings for the VPC outputs
    public var vpc: MediaLiveClientTypes.VpcOutputSettings?

    public init (
        cdiInputSpecification: MediaLiveClientTypes.CdiInputSpecification? = nil,
        channelClass: MediaLiveClientTypes.ChannelClass? = nil,
        destinations: [MediaLiveClientTypes.OutputDestination]? = nil,
        encoderSettings: MediaLiveClientTypes.EncoderSettings? = nil,
        inputAttachments: [MediaLiveClientTypes.InputAttachment]? = nil,
        inputSpecification: MediaLiveClientTypes.InputSpecification? = nil,
        logLevel: MediaLiveClientTypes.LogLevel? = nil,
        maintenance: MediaLiveClientTypes.MaintenanceCreateSettings? = nil,
        name: Swift.String? = nil,
        requestId: Swift.String? = nil,
        reserved: Swift.String? = nil,
        roleArn: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        vpc: MediaLiveClientTypes.VpcOutputSettings? = nil
    )
    {
        self.cdiInputSpecification = cdiInputSpecification
        self.channelClass = channelClass
        self.destinations = destinations
        self.encoderSettings = encoderSettings
        self.inputAttachments = inputAttachments
        self.inputSpecification = inputSpecification
        self.logLevel = logLevel
        self.maintenance = maintenance
        self.name = name
        self.requestId = requestId
        self.reserved = reserved
        self.roleArn = roleArn
        self.tags = tags
        self.vpc = vpc
    }
}
