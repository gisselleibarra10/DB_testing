// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMultiplexesOutputResponseBody: Swift.Equatable {
    let multiplexes: [MediaLiveClientTypes.MultiplexSummary]?
    let nextToken: Swift.String?
}

extension ListMultiplexesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case multiplexes = "multiplexes"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let multiplexesContainer = try containerValues.decodeIfPresent([MediaLiveClientTypes.MultiplexSummary?].self, forKey: .multiplexes)
        var multiplexesDecoded0:[MediaLiveClientTypes.MultiplexSummary]? = nil
        if let multiplexesContainer = multiplexesContainer {
            multiplexesDecoded0 = [MediaLiveClientTypes.MultiplexSummary]()
            for structure0 in multiplexesContainer {
                if let structure0 = structure0 {
                    multiplexesDecoded0?.append(structure0)
                }
            }
        }
        multiplexes = multiplexesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
