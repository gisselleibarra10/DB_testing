// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.RtmpOutputSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateMode = "certificateMode"
        case connectionRetryInterval = "connectionRetryInterval"
        case destination = "destination"
        case numRetries = "numRetries"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificateMode = self.certificateMode {
            try encodeContainer.encode(certificateMode.rawValue, forKey: .certificateMode)
        }
        if let connectionRetryInterval = self.connectionRetryInterval {
            try encodeContainer.encode(connectionRetryInterval, forKey: .connectionRetryInterval)
        }
        if let destination = self.destination {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if let numRetries = self.numRetries {
            try encodeContainer.encode(numRetries, forKey: .numRetries)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateModeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.RtmpOutputCertificateMode.self, forKey: .certificateMode)
        certificateMode = certificateModeDecoded
        let connectionRetryIntervalDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .connectionRetryInterval)
        connectionRetryInterval = connectionRetryIntervalDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.OutputLocationRef.self, forKey: .destination)
        destination = destinationDecoded
        let numRetriesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numRetries)
        numRetries = numRetriesDecoded
    }
}
