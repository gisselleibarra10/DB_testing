// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// The multiplex object.
    public struct Multiplex: Swift.Equatable {
        /// The unique arn of the multiplex.
        public var arn: Swift.String?
        /// A list of availability zones for the multiplex.
        public var availabilityZones: [Swift.String]?
        /// A list of the multiplex output destinations.
        public var destinations: [MediaLiveClientTypes.MultiplexOutputDestination]?
        /// The unique id of the multiplex.
        public var id: Swift.String?
        /// Configuration for a multiplex event.
        public var multiplexSettings: MediaLiveClientTypes.MultiplexSettings?
        /// The name of the multiplex.
        public var name: Swift.String?
        /// The number of currently healthy pipelines.
        public var pipelinesRunningCount: Swift.Int?
        /// The number of programs in the multiplex.
        public var programCount: Swift.Int?
        /// The current state of the multiplex.
        public var state: MediaLiveClientTypes.MultiplexState?
        /// A collection of key-value pairs.
        public var tags: [Swift.String:Swift.String]?

        public init (
            arn: Swift.String? = nil,
            availabilityZones: [Swift.String]? = nil,
            destinations: [MediaLiveClientTypes.MultiplexOutputDestination]? = nil,
            id: Swift.String? = nil,
            multiplexSettings: MediaLiveClientTypes.MultiplexSettings? = nil,
            name: Swift.String? = nil,
            pipelinesRunningCount: Swift.Int? = nil,
            programCount: Swift.Int? = nil,
            state: MediaLiveClientTypes.MultiplexState? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.arn = arn
            self.availabilityZones = availabilityZones
            self.destinations = destinations
            self.id = id
            self.multiplexSettings = multiplexSettings
            self.name = name
            self.pipelinesRunningCount = pipelinesRunningCount
            self.programCount = programCount
            self.state = state
            self.tags = tags
        }
    }

}
