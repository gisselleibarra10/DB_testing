// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.VideoDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case codecSettings = "codecSettings"
        case height = "height"
        case name = "name"
        case respondToAfd = "respondToAfd"
        case scalingBehavior = "scalingBehavior"
        case sharpness = "sharpness"
        case width = "width"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let codecSettings = self.codecSettings {
            try encodeContainer.encode(codecSettings, forKey: .codecSettings)
        }
        if let height = self.height {
            try encodeContainer.encode(height, forKey: .height)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let respondToAfd = self.respondToAfd {
            try encodeContainer.encode(respondToAfd.rawValue, forKey: .respondToAfd)
        }
        if let scalingBehavior = self.scalingBehavior {
            try encodeContainer.encode(scalingBehavior.rawValue, forKey: .scalingBehavior)
        }
        if let sharpness = self.sharpness {
            try encodeContainer.encode(sharpness, forKey: .sharpness)
        }
        if let width = self.width {
            try encodeContainer.encode(width, forKey: .width)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codecSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.VideoCodecSettings.self, forKey: .codecSettings)
        codecSettings = codecSettingsDecoded
        let heightDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .height)
        height = heightDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let respondToAfdDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.VideoDescriptionRespondToAfd.self, forKey: .respondToAfd)
        respondToAfd = respondToAfdDecoded
        let scalingBehaviorDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.VideoDescriptionScalingBehavior.self, forKey: .scalingBehavior)
        scalingBehavior = scalingBehaviorDecoded
        let sharpnessDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sharpness)
        sharpness = sharpnessDecoded
        let widthDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .width)
        width = widthDecoded
    }
}
