// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.UdpOutputSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bufferMsec = "bufferMsec"
        case containerSettings = "containerSettings"
        case destination = "destination"
        case fecOutputSettings = "fecOutputSettings"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bufferMsec = self.bufferMsec {
            try encodeContainer.encode(bufferMsec, forKey: .bufferMsec)
        }
        if let containerSettings = self.containerSettings {
            try encodeContainer.encode(containerSettings, forKey: .containerSettings)
        }
        if let destination = self.destination {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if let fecOutputSettings = self.fecOutputSettings {
            try encodeContainer.encode(fecOutputSettings, forKey: .fecOutputSettings)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bufferMsecDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .bufferMsec)
        bufferMsec = bufferMsecDecoded
        let containerSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.UdpContainerSettings.self, forKey: .containerSettings)
        containerSettings = containerSettingsDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.OutputLocationRef.self, forKey: .destination)
        destination = destinationDecoded
        let fecOutputSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.FecOutputSettings.self, forKey: .fecOutputSettings)
        fecOutputSettings = fecOutputSettingsDecoded
    }
}
