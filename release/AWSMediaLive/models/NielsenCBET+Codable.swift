// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.NielsenCBET: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cbetCheckDigitString = "cbetCheckDigitString"
        case cbetStepaside = "cbetStepaside"
        case csid = "csid"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cbetCheckDigitString = self.cbetCheckDigitString {
            try encodeContainer.encode(cbetCheckDigitString, forKey: .cbetCheckDigitString)
        }
        if let cbetStepaside = self.cbetStepaside {
            try encodeContainer.encode(cbetStepaside.rawValue, forKey: .cbetStepaside)
        }
        if let csid = self.csid {
            try encodeContainer.encode(csid, forKey: .csid)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cbetCheckDigitStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cbetCheckDigitString)
        cbetCheckDigitString = cbetCheckDigitStringDecoded
        let cbetStepasideDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.NielsenWatermarksCbetStepaside.self, forKey: .cbetStepaside)
        cbetStepaside = cbetStepasideDecoded
        let csidDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .csid)
        csid = csidDecoded
    }
}
