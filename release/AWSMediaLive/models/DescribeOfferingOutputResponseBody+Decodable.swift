// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOfferingOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let currencyCode: Swift.String?
    let duration: Swift.Int?
    let durationUnits: MediaLiveClientTypes.OfferingDurationUnits?
    let fixedPrice: Swift.Double?
    let offeringDescription: Swift.String?
    let offeringId: Swift.String?
    let offeringType: MediaLiveClientTypes.OfferingType?
    let region: Swift.String?
    let resourceSpecification: MediaLiveClientTypes.ReservationResourceSpecification?
    let usagePrice: Swift.Double?
}

extension DescribeOfferingOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "arn"
        case currencyCode = "currencyCode"
        case duration = "duration"
        case durationUnits = "durationUnits"
        case fixedPrice = "fixedPrice"
        case offeringDescription = "offeringDescription"
        case offeringId = "offeringId"
        case offeringType = "offeringType"
        case region = "region"
        case resourceSpecification = "resourceSpecification"
        case usagePrice = "usagePrice"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let currencyCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .currencyCode)
        currencyCode = currencyCodeDecoded
        let durationDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .duration)
        duration = durationDecoded
        let durationUnitsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.OfferingDurationUnits.self, forKey: .durationUnits)
        durationUnits = durationUnitsDecoded
        let fixedPriceDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .fixedPrice)
        fixedPrice = fixedPriceDecoded
        let offeringDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .offeringDescription)
        offeringDescription = offeringDescriptionDecoded
        let offeringIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .offeringId)
        offeringId = offeringIdDecoded
        let offeringTypeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.OfferingType.self, forKey: .offeringType)
        offeringType = offeringTypeDecoded
        let regionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .region)
        region = regionDecoded
        let resourceSpecificationDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.ReservationResourceSpecification.self, forKey: .resourceSpecification)
        resourceSpecification = resourceSpecificationDecoded
        let usagePriceDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .usagePrice)
        usagePrice = usagePriceDecoded
    }
}
