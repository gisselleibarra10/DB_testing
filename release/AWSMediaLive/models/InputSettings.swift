// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// Live Event input parameters. There can be multiple inputs in a single Live Event.
    public struct InputSettings: Swift.Equatable {
        /// Used to select the audio stream to decode for inputs that have multiple available.
        public var audioSelectors: [MediaLiveClientTypes.AudioSelector]?
        /// Used to select the caption input to use for inputs that have multiple available.
        public var captionSelectors: [MediaLiveClientTypes.CaptionSelector]?
        /// Enable or disable the deblock filter when filtering.
        public var deblockFilter: MediaLiveClientTypes.InputDeblockFilter?
        /// Enable or disable the denoise filter when filtering.
        public var denoiseFilter: MediaLiveClientTypes.InputDenoiseFilter?
        /// Adjusts the magnitude of filtering from 1 (minimal) to 5 (strongest).
        public var filterStrength: Swift.Int?
        /// Turns on the filter for this input. MPEG-2 inputs have the deblocking filter enabled by default.
        ///
        /// * auto - filtering will be applied depending on input type/quality
        ///
        /// * disabled - no filtering will be applied to the input
        ///
        /// * forced - filtering will be applied regardless of input type
        public var inputFilter: MediaLiveClientTypes.InputFilter?
        /// Input settings.
        public var networkInputSettings: MediaLiveClientTypes.NetworkInputSettings?
        /// PID from which to read SCTE-35 messages. If left undefined, EML will select the first SCTE-35 PID found in the input.
        public var scte35Pid: Swift.Int?
        /// Specifies whether to extract applicable ancillary data from a SMPTE-2038 source in this input. Applicable data types are captions, timecode, AFD, and SCTE-104 messages.
        ///
        /// * PREFER: Extract from SMPTE-2038 if present in this input, otherwise extract from another source (if any).
        ///
        /// * IGNORE: Never extract any ancillary data from SMPTE-2038.
        public var smpte2038DataPreference: MediaLiveClientTypes.Smpte2038DataPreference?
        /// Loop input if it is a file. This allows a file input to be streamed indefinitely.
        public var sourceEndBehavior: MediaLiveClientTypes.InputSourceEndBehavior?
        /// Informs which video elementary stream to decode for input types that have multiple available.
        public var videoSelector: MediaLiveClientTypes.VideoSelector?

        public init (
            audioSelectors: [MediaLiveClientTypes.AudioSelector]? = nil,
            captionSelectors: [MediaLiveClientTypes.CaptionSelector]? = nil,
            deblockFilter: MediaLiveClientTypes.InputDeblockFilter? = nil,
            denoiseFilter: MediaLiveClientTypes.InputDenoiseFilter? = nil,
            filterStrength: Swift.Int? = nil,
            inputFilter: MediaLiveClientTypes.InputFilter? = nil,
            networkInputSettings: MediaLiveClientTypes.NetworkInputSettings? = nil,
            scte35Pid: Swift.Int? = nil,
            smpte2038DataPreference: MediaLiveClientTypes.Smpte2038DataPreference? = nil,
            sourceEndBehavior: MediaLiveClientTypes.InputSourceEndBehavior? = nil,
            videoSelector: MediaLiveClientTypes.VideoSelector? = nil
        )
        {
            self.audioSelectors = audioSelectors
            self.captionSelectors = captionSelectors
            self.deblockFilter = deblockFilter
            self.denoiseFilter = denoiseFilter
            self.filterStrength = filterStrength
            self.inputFilter = inputFilter
            self.networkInputSettings = networkInputSettings
            self.scte35Pid = scte35Pid
            self.smpte2038DataPreference = smpte2038DataPreference
            self.sourceEndBehavior = sourceEndBehavior
            self.videoSelector = videoSelector
        }
    }

}
