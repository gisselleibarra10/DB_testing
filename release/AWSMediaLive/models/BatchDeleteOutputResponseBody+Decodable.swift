// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDeleteOutputResponseBody: Swift.Equatable {
    let failed: [MediaLiveClientTypes.BatchFailedResultModel]?
    let successful: [MediaLiveClientTypes.BatchSuccessfulResultModel]?
}

extension BatchDeleteOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failed = "failed"
        case successful = "successful"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let failedContainer = try containerValues.decodeIfPresent([MediaLiveClientTypes.BatchFailedResultModel?].self, forKey: .failed)
        var failedDecoded0:[MediaLiveClientTypes.BatchFailedResultModel]? = nil
        if let failedContainer = failedContainer {
            failedDecoded0 = [MediaLiveClientTypes.BatchFailedResultModel]()
            for structure0 in failedContainer {
                if let structure0 = structure0 {
                    failedDecoded0?.append(structure0)
                }
            }
        }
        failed = failedDecoded0
        let successfulContainer = try containerValues.decodeIfPresent([MediaLiveClientTypes.BatchSuccessfulResultModel?].self, forKey: .successful)
        var successfulDecoded0:[MediaLiveClientTypes.BatchSuccessfulResultModel]? = nil
        if let successfulContainer = successfulContainer {
            successfulDecoded0 = [MediaLiveClientTypes.BatchSuccessfulResultModel]()
            for structure0 in successfulContainer {
                if let structure0 = structure0 {
                    successfulDecoded0?.append(structure0)
                }
            }
        }
        successful = successfulDecoded0
    }
}
