// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// A request to update an input.
public struct UpdateInputInput: Swift.Equatable {
    /// Destination settings for PUSH type inputs.
    public var destinations: [MediaLiveClientTypes.InputDestinationRequest]?
    /// Settings for the devices.
    public var inputDevices: [MediaLiveClientTypes.InputDeviceRequest]?
    /// Unique ID of the input.
    /// This member is required.
    public var inputId: Swift.String?
    /// A list of security groups referenced by IDs to attach to the input.
    public var inputSecurityGroups: [Swift.String]?
    /// A list of the MediaConnect Flow ARNs that you want to use as the source of the input. You can specify as few as one Flow and presently, as many as two. The only requirement is when you have more than one is that each Flow is in a separate Availability Zone as this ensures your EML input is redundant to AZ issues.
    public var mediaConnectFlows: [MediaLiveClientTypes.MediaConnectFlowRequest]?
    /// Name of the input.
    public var name: Swift.String?
    /// The Amazon Resource Name (ARN) of the role this input assumes during and after creation.
    public var roleArn: Swift.String?
    /// The source URLs for a PULL-type input. Every PULL type input needs exactly two source URLs for redundancy. Only specify sources for PULL type Inputs. Leave Destinations empty.
    public var sources: [MediaLiveClientTypes.InputSourceRequest]?

    public init (
        destinations: [MediaLiveClientTypes.InputDestinationRequest]? = nil,
        inputDevices: [MediaLiveClientTypes.InputDeviceRequest]? = nil,
        inputId: Swift.String? = nil,
        inputSecurityGroups: [Swift.String]? = nil,
        mediaConnectFlows: [MediaLiveClientTypes.MediaConnectFlowRequest]? = nil,
        name: Swift.String? = nil,
        roleArn: Swift.String? = nil,
        sources: [MediaLiveClientTypes.InputSourceRequest]? = nil
    )
    {
        self.destinations = destinations
        self.inputDevices = inputDevices
        self.inputId = inputId
        self.inputSecurityGroups = inputSecurityGroups
        self.mediaConnectFlows = mediaConnectFlows
        self.name = name
        self.roleArn = roleArn
        self.sources = sources
    }
}
