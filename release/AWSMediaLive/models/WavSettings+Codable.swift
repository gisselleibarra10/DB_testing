// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.WavSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bitDepth = "bitDepth"
        case codingMode = "codingMode"
        case sampleRate = "sampleRate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bitDepth = self.bitDepth {
            try encodeContainer.encode(bitDepth, forKey: .bitDepth)
        }
        if let codingMode = self.codingMode {
            try encodeContainer.encode(codingMode.rawValue, forKey: .codingMode)
        }
        if let sampleRate = self.sampleRate {
            try encodeContainer.encode(sampleRate, forKey: .sampleRate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bitDepthDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .bitDepth)
        bitDepth = bitDepthDecoded
        let codingModeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.WavCodingMode.self, forKey: .codingMode)
        codingMode = codingModeDecoded
        let sampleRateDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .sampleRate)
        sampleRate = sampleRateDecoded
    }
}
