// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.Ac3Settings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bitrate = "bitrate"
        case bitstreamMode = "bitstreamMode"
        case codingMode = "codingMode"
        case dialnorm = "dialnorm"
        case drcProfile = "drcProfile"
        case lfeFilter = "lfeFilter"
        case metadataControl = "metadataControl"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bitrate = self.bitrate {
            try encodeContainer.encode(bitrate, forKey: .bitrate)
        }
        if let bitstreamMode = self.bitstreamMode {
            try encodeContainer.encode(bitstreamMode.rawValue, forKey: .bitstreamMode)
        }
        if let codingMode = self.codingMode {
            try encodeContainer.encode(codingMode.rawValue, forKey: .codingMode)
        }
        if let dialnorm = self.dialnorm {
            try encodeContainer.encode(dialnorm, forKey: .dialnorm)
        }
        if let drcProfile = self.drcProfile {
            try encodeContainer.encode(drcProfile.rawValue, forKey: .drcProfile)
        }
        if let lfeFilter = self.lfeFilter {
            try encodeContainer.encode(lfeFilter.rawValue, forKey: .lfeFilter)
        }
        if let metadataControl = self.metadataControl {
            try encodeContainer.encode(metadataControl.rawValue, forKey: .metadataControl)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bitrateDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .bitrate)
        bitrate = bitrateDecoded
        let bitstreamModeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.Ac3BitstreamMode.self, forKey: .bitstreamMode)
        bitstreamMode = bitstreamModeDecoded
        let codingModeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.Ac3CodingMode.self, forKey: .codingMode)
        codingMode = codingModeDecoded
        let dialnormDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .dialnorm)
        dialnorm = dialnormDecoded
        let drcProfileDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.Ac3DrcProfile.self, forKey: .drcProfile)
        drcProfile = drcProfileDecoded
        let lfeFilterDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.Ac3LfeFilter.self, forKey: .lfeFilter)
        lfeFilter = lfeFilterDecoded
        let metadataControlDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.Ac3MetadataControl.self, forKey: .metadataControl)
        metadataControl = metadataControlDecoded
    }
}
