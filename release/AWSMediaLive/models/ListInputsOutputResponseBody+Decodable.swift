// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListInputsOutputResponseBody: Swift.Equatable {
    let inputs: [MediaLiveClientTypes.Input]?
    let nextToken: Swift.String?
}

extension ListInputsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inputs = "inputs"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputsContainer = try containerValues.decodeIfPresent([MediaLiveClientTypes.Input?].self, forKey: .inputs)
        var inputsDecoded0:[MediaLiveClientTypes.Input]? = nil
        if let inputsContainer = inputsContainer {
            inputsDecoded0 = [MediaLiveClientTypes.Input]()
            for structure0 in inputsContainer {
                if let structure0 = structure0 {
                    inputsDecoded0?.append(structure0)
                }
            }
        }
        inputs = inputsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
