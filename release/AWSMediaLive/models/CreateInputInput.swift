// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The name of the input
public struct CreateInputInput: Swift.Equatable {
    /// Destination settings for PUSH type inputs.
    public var destinations: [MediaLiveClientTypes.InputDestinationRequest]?
    /// Settings for the devices.
    public var inputDevices: [MediaLiveClientTypes.InputDeviceSettings]?
    /// A list of security groups referenced by IDs to attach to the input.
    public var inputSecurityGroups: [Swift.String]?
    /// A list of the MediaConnect Flows that you want to use in this input. You can specify as few as one Flow and presently, as many as two. The only requirement is when you have more than one is that each Flow is in a separate Availability Zone as this ensures your EML input is redundant to AZ issues.
    public var mediaConnectFlows: [MediaLiveClientTypes.MediaConnectFlowRequest]?
    /// Name of the input.
    public var name: Swift.String?
    /// Unique identifier of the request to ensure the request is handled exactly once in case of retries.
    public var requestId: Swift.String?
    /// The Amazon Resource Name (ARN) of the role this input assumes during and after creation.
    public var roleArn: Swift.String?
    /// The source URLs for a PULL-type input. Every PULL type input needs exactly two source URLs for redundancy. Only specify sources for PULL type Inputs. Leave Destinations empty.
    public var sources: [MediaLiveClientTypes.InputSourceRequest]?
    /// A collection of key-value pairs.
    public var tags: [Swift.String:Swift.String]?
    /// The different types of inputs that AWS Elemental MediaLive supports.
    public var type: MediaLiveClientTypes.InputType?
    /// Settings for a private VPC Input. When this property is specified, the input destination addresses will be created in a VPC rather than with public Internet addresses. This property requires setting the roleArn property on Input creation. Not compatible with the inputSecurityGroups property.
    public var vpc: MediaLiveClientTypes.InputVpcRequest?

    public init (
        destinations: [MediaLiveClientTypes.InputDestinationRequest]? = nil,
        inputDevices: [MediaLiveClientTypes.InputDeviceSettings]? = nil,
        inputSecurityGroups: [Swift.String]? = nil,
        mediaConnectFlows: [MediaLiveClientTypes.MediaConnectFlowRequest]? = nil,
        name: Swift.String? = nil,
        requestId: Swift.String? = nil,
        roleArn: Swift.String? = nil,
        sources: [MediaLiveClientTypes.InputSourceRequest]? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        type: MediaLiveClientTypes.InputType? = nil,
        vpc: MediaLiveClientTypes.InputVpcRequest? = nil
    )
    {
        self.destinations = destinations
        self.inputDevices = inputDevices
        self.inputSecurityGroups = inputSecurityGroups
        self.mediaConnectFlows = mediaConnectFlows
        self.name = name
        self.requestId = requestId
        self.roleArn = roleArn
        self.sources = sources
        self.tags = tags
        self.type = type
        self.vpc = vpc
    }
}
