// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// Settings information for the .m3u8 container
    public struct M3u8Settings: Swift.Equatable {
        /// The number of audio frames to insert for each PES packet.
        public var audioFramesPerPes: Swift.Int?
        /// Packet Identifier (PID) of the elementary audio stream(s) in the transport stream. Multiple values are accepted, and can be entered in ranges and/or by comma separation. Can be entered as decimal or hexadecimal values.
        public var audioPids: Swift.String?
        /// This parameter is unused and deprecated.
        public var ecmPid: Swift.String?
        /// If set to passthrough, Nielsen inaudible tones for media tracking will be detected in the input audio and an equivalent ID3 tag will be inserted in the output.
        public var nielsenId3Behavior: MediaLiveClientTypes.M3u8NielsenId3Behavior?
        /// The number of milliseconds between instances of this table in the output transport stream. A value of "0" writes out the PMT once per segment file.
        public var patInterval: Swift.Int?
        /// When set to pcrEveryPesPacket, a Program Clock Reference value is inserted for every Packetized Elementary Stream (PES) header. This parameter is effective only when the PCR PID is the same as the video or audio elementary stream.
        public var pcrControl: MediaLiveClientTypes.M3u8PcrControl?
        /// Maximum time in milliseconds between Program Clock References (PCRs) inserted into the transport stream.
        public var pcrPeriod: Swift.Int?
        /// Packet Identifier (PID) of the Program Clock Reference (PCR) in the transport stream. When no value is given, the encoder will assign the same value as the Video PID. Can be entered as a decimal or hexadecimal value.
        public var pcrPid: Swift.String?
        /// The number of milliseconds between instances of this table in the output transport stream. A value of "0" writes out the PMT once per segment file.
        public var pmtInterval: Swift.Int?
        /// Packet Identifier (PID) for the Program Map Table (PMT) in the transport stream. Can be entered as a decimal or hexadecimal value.
        public var pmtPid: Swift.String?
        /// The value of the program number field in the Program Map Table.
        public var programNum: Swift.Int?
        /// If set to passthrough, passes any SCTE-35 signals from the input source to this output.
        public var scte35Behavior: MediaLiveClientTypes.M3u8Scte35Behavior?
        /// Packet Identifier (PID) of the SCTE-35 stream in the transport stream. Can be entered as a decimal or hexadecimal value.
        public var scte35Pid: Swift.String?
        /// When set to passthrough, timed metadata is passed through from input to output.
        public var timedMetadataBehavior: MediaLiveClientTypes.M3u8TimedMetadataBehavior?
        /// Packet Identifier (PID) of the timed metadata stream in the transport stream. Can be entered as a decimal or hexadecimal value. Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        public var timedMetadataPid: Swift.String?
        /// The value of the transport stream ID field in the Program Map Table.
        public var transportStreamId: Swift.Int?
        /// Packet Identifier (PID) of the elementary video stream in the transport stream. Can be entered as a decimal or hexadecimal value.
        public var videoPid: Swift.String?

        public init (
            audioFramesPerPes: Swift.Int? = nil,
            audioPids: Swift.String? = nil,
            ecmPid: Swift.String? = nil,
            nielsenId3Behavior: MediaLiveClientTypes.M3u8NielsenId3Behavior? = nil,
            patInterval: Swift.Int? = nil,
            pcrControl: MediaLiveClientTypes.M3u8PcrControl? = nil,
            pcrPeriod: Swift.Int? = nil,
            pcrPid: Swift.String? = nil,
            pmtInterval: Swift.Int? = nil,
            pmtPid: Swift.String? = nil,
            programNum: Swift.Int? = nil,
            scte35Behavior: MediaLiveClientTypes.M3u8Scte35Behavior? = nil,
            scte35Pid: Swift.String? = nil,
            timedMetadataBehavior: MediaLiveClientTypes.M3u8TimedMetadataBehavior? = nil,
            timedMetadataPid: Swift.String? = nil,
            transportStreamId: Swift.Int? = nil,
            videoPid: Swift.String? = nil
        )
        {
            self.audioFramesPerPes = audioFramesPerPes
            self.audioPids = audioPids
            self.ecmPid = ecmPid
            self.nielsenId3Behavior = nielsenId3Behavior
            self.patInterval = patInterval
            self.pcrControl = pcrControl
            self.pcrPeriod = pcrPeriod
            self.pcrPid = pcrPid
            self.pmtInterval = pmtInterval
            self.pmtPid = pmtPid
            self.programNum = programNum
            self.scte35Behavior = scte35Behavior
            self.scte35Pid = scte35Pid
            self.timedMetadataBehavior = timedMetadataBehavior
            self.timedMetadataPid = timedMetadataPid
            self.transportStreamId = transportStreamId
            self.videoPid = videoPid
        }
    }

}
