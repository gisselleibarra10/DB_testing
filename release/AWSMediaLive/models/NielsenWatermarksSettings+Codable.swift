// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.NielsenWatermarksSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nielsenCbetSettings = "nielsenCbetSettings"
        case nielsenDistributionType = "nielsenDistributionType"
        case nielsenNaesIiNwSettings = "nielsenNaesIiNwSettings"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let nielsenCbetSettings = self.nielsenCbetSettings {
            try encodeContainer.encode(nielsenCbetSettings, forKey: .nielsenCbetSettings)
        }
        if let nielsenDistributionType = self.nielsenDistributionType {
            try encodeContainer.encode(nielsenDistributionType.rawValue, forKey: .nielsenDistributionType)
        }
        if let nielsenNaesIiNwSettings = self.nielsenNaesIiNwSettings {
            try encodeContainer.encode(nielsenNaesIiNwSettings, forKey: .nielsenNaesIiNwSettings)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nielsenCbetSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.NielsenCBET.self, forKey: .nielsenCbetSettings)
        nielsenCbetSettings = nielsenCbetSettingsDecoded
        let nielsenDistributionTypeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.NielsenWatermarksDistributionTypes.self, forKey: .nielsenDistributionType)
        nielsenDistributionType = nielsenDistributionTypeDecoded
        let nielsenNaesIiNwSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.NielsenNaesIiNw.self, forKey: .nielsenNaesIiNwSettings)
        nielsenNaesIiNwSettings = nielsenNaesIiNwSettingsDecoded
    }
}
