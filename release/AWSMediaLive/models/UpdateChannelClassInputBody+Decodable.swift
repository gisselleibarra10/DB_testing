// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateChannelClassInputBody: Swift.Equatable {
    let channelClass: MediaLiveClientTypes.ChannelClass?
    let destinations: [MediaLiveClientTypes.OutputDestination]?
}

extension UpdateChannelClassInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channelClass = "channelClass"
        case destinations = "destinations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelClassDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.ChannelClass.self, forKey: .channelClass)
        channelClass = channelClassDecoded
        let destinationsContainer = try containerValues.decodeIfPresent([MediaLiveClientTypes.OutputDestination?].self, forKey: .destinations)
        var destinationsDecoded0:[MediaLiveClientTypes.OutputDestination]? = nil
        if let destinationsContainer = destinationsContainer {
            destinationsDecoded0 = [MediaLiveClientTypes.OutputDestination]()
            for structure0 in destinationsContainer {
                if let structure0 = structure0 {
                    destinationsDecoded0?.append(structure0)
                }
            }
        }
        destinations = destinationsDecoded0
    }
}
