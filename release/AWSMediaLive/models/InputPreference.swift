// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// Input preference when deciding which input to make active when a previously failed input has recovered. If "EQUAL_INPUT_PREFERENCE", then the active input will stay active as long as it is healthy. If "PRIMARY_INPUT_PREFERRED", then always switch back to the primary input when it is healthy.
    public enum InputPreference: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case equalInputPreference
        case primaryInputPreferred
        case sdkUnknown(Swift.String)

        public static var allCases: [InputPreference] {
            return [
                .equalInputPreference,
                .primaryInputPreferred,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .equalInputPreference: return "EQUAL_INPUT_PREFERENCE"
            case .primaryInputPreferred: return "PRIMARY_INPUT_PREFERRED"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = InputPreference(rawValue: rawValue) ?? InputPreference.sdkUnknown(rawValue)
        }
    }
}
