// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.VideoBlackFailoverSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blackDetectThreshold = "blackDetectThreshold"
        case videoBlackThresholdMsec = "videoBlackThresholdMsec"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let blackDetectThreshold = self.blackDetectThreshold {
            try encodeContainer.encode(blackDetectThreshold, forKey: .blackDetectThreshold)
        }
        if let videoBlackThresholdMsec = self.videoBlackThresholdMsec {
            try encodeContainer.encode(videoBlackThresholdMsec, forKey: .videoBlackThresholdMsec)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blackDetectThresholdDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .blackDetectThreshold)
        blackDetectThreshold = blackDetectThresholdDecoded
        let videoBlackThresholdMsecDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .videoBlackThresholdMsec)
        videoBlackThresholdMsec = videoBlackThresholdMsecDecoded
    }
}
