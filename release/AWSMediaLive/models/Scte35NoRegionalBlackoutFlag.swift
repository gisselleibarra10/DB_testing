// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// Corresponds to the no_regional_blackout_flag parameter. A value of REGIONAL_BLACKOUT corresponds to 0 (false) in the SCTE-35 specification. If you include one of the "restriction" flags then you must include all four of them.
    public enum Scte35NoRegionalBlackoutFlag: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case noRegionalBlackout
        case regionalBlackout
        case sdkUnknown(Swift.String)

        public static var allCases: [Scte35NoRegionalBlackoutFlag] {
            return [
                .noRegionalBlackout,
                .regionalBlackout,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .noRegionalBlackout: return "NO_REGIONAL_BLACKOUT"
            case .regionalBlackout: return "REGIONAL_BLACKOUT"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = Scte35NoRegionalBlackoutFlag(rawValue: rawValue) ?? Scte35NoRegionalBlackoutFlag.sdkUnknown(rawValue)
        }
    }
}
