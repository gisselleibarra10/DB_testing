// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Placeholder documentation for DeleteReservationResponse
public struct DeleteReservationOutputResponse: Swift.Equatable {
    /// Unique reservation ARN, e.g. 'arn:aws:medialive:us-west-2:123456789012:reservation:1234567'
    public var arn: Swift.String?
    /// Number of reserved resources
    public var count: Swift.Int?
    /// Currency code for usagePrice and fixedPrice in ISO-4217 format, e.g. 'USD'
    public var currencyCode: Swift.String?
    /// Lease duration, e.g. '12'
    public var duration: Swift.Int?
    /// Units for duration, e.g. 'MONTHS'
    public var durationUnits: MediaLiveClientTypes.OfferingDurationUnits?
    /// Reservation UTC end date and time in ISO-8601 format, e.g. '2019-03-01T00:00:00'
    public var end: Swift.String?
    /// One-time charge for each reserved resource, e.g. '0.0' for a NO_UPFRONT offering
    public var fixedPrice: Swift.Double?
    /// User specified reservation name
    public var name: Swift.String?
    /// Offering description, e.g. 'HD AVC output at 10-20 Mbps, 30 fps, and standard VQ in US West (Oregon)'
    public var offeringDescription: Swift.String?
    /// Unique offering ID, e.g. '87654321'
    public var offeringId: Swift.String?
    /// Offering type, e.g. 'NO_UPFRONT'
    public var offeringType: MediaLiveClientTypes.OfferingType?
    /// AWS region, e.g. 'us-west-2'
    public var region: Swift.String?
    /// Renewal settings for the reservation
    public var renewalSettings: MediaLiveClientTypes.RenewalSettings?
    /// Unique reservation ID, e.g. '1234567'
    public var reservationId: Swift.String?
    /// Resource configuration details
    public var resourceSpecification: MediaLiveClientTypes.ReservationResourceSpecification?
    /// Reservation UTC start date and time in ISO-8601 format, e.g. '2018-03-01T00:00:00'
    public var start: Swift.String?
    /// Current state of reservation, e.g. 'ACTIVE'
    public var state: MediaLiveClientTypes.ReservationState?
    /// A collection of key-value pairs
    public var tags: [Swift.String:Swift.String]?
    /// Recurring usage charge for each reserved resource, e.g. '157.0'
    public var usagePrice: Swift.Double?

    public init (
        arn: Swift.String? = nil,
        count: Swift.Int? = nil,
        currencyCode: Swift.String? = nil,
        duration: Swift.Int? = nil,
        durationUnits: MediaLiveClientTypes.OfferingDurationUnits? = nil,
        end: Swift.String? = nil,
        fixedPrice: Swift.Double? = nil,
        name: Swift.String? = nil,
        offeringDescription: Swift.String? = nil,
        offeringId: Swift.String? = nil,
        offeringType: MediaLiveClientTypes.OfferingType? = nil,
        region: Swift.String? = nil,
        renewalSettings: MediaLiveClientTypes.RenewalSettings? = nil,
        reservationId: Swift.String? = nil,
        resourceSpecification: MediaLiveClientTypes.ReservationResourceSpecification? = nil,
        start: Swift.String? = nil,
        state: MediaLiveClientTypes.ReservationState? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        usagePrice: Swift.Double? = nil
    )
    {
        self.arn = arn
        self.count = count
        self.currencyCode = currencyCode
        self.duration = duration
        self.durationUnits = durationUnits
        self.end = end
        self.fixedPrice = fixedPrice
        self.name = name
        self.offeringDescription = offeringDescription
        self.offeringId = offeringId
        self.offeringType = offeringType
        self.region = region
        self.renewalSettings = renewalSettings
        self.reservationId = reservationId
        self.resourceSpecification = resourceSpecification
        self.start = start
        self.state = state
        self.tags = tags
        self.usagePrice = usagePrice
    }
}
