// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMultiplexProgramsOutputResponseBody: Swift.Equatable {
    let multiplexPrograms: [MediaLiveClientTypes.MultiplexProgramSummary]?
    let nextToken: Swift.String?
}

extension ListMultiplexProgramsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case multiplexPrograms = "multiplexPrograms"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let multiplexProgramsContainer = try containerValues.decodeIfPresent([MediaLiveClientTypes.MultiplexProgramSummary?].self, forKey: .multiplexPrograms)
        var multiplexProgramsDecoded0:[MediaLiveClientTypes.MultiplexProgramSummary]? = nil
        if let multiplexProgramsContainer = multiplexProgramsContainer {
            multiplexProgramsDecoded0 = [MediaLiveClientTypes.MultiplexProgramSummary]()
            for structure0 in multiplexProgramsContainer {
                if let structure0 = structure0 {
                    multiplexProgramsDecoded0?.append(structure0)
                }
            }
        }
        multiplexPrograms = multiplexProgramsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
