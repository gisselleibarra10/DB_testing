// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.ScheduleAction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionName = "actionName"
        case scheduleActionSettings = "scheduleActionSettings"
        case scheduleActionStartSettings = "scheduleActionStartSettings"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionName = self.actionName {
            try encodeContainer.encode(actionName, forKey: .actionName)
        }
        if let scheduleActionSettings = self.scheduleActionSettings {
            try encodeContainer.encode(scheduleActionSettings, forKey: .scheduleActionSettings)
        }
        if let scheduleActionStartSettings = self.scheduleActionStartSettings {
            try encodeContainer.encode(scheduleActionStartSettings, forKey: .scheduleActionStartSettings)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionName)
        actionName = actionNameDecoded
        let scheduleActionSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.ScheduleActionSettings.self, forKey: .scheduleActionSettings)
        scheduleActionSettings = scheduleActionSettingsDecoded
        let scheduleActionStartSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.ScheduleActionStartSettings.self, forKey: .scheduleActionStartSettings)
        scheduleActionStartSettings = scheduleActionStartSettingsDecoded
    }
}
