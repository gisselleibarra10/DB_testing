// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.InputLossBehavior: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blackFrameMsec = "blackFrameMsec"
        case inputLossImageColor = "inputLossImageColor"
        case inputLossImageSlate = "inputLossImageSlate"
        case inputLossImageType = "inputLossImageType"
        case repeatFrameMsec = "repeatFrameMsec"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let blackFrameMsec = self.blackFrameMsec {
            try encodeContainer.encode(blackFrameMsec, forKey: .blackFrameMsec)
        }
        if let inputLossImageColor = self.inputLossImageColor {
            try encodeContainer.encode(inputLossImageColor, forKey: .inputLossImageColor)
        }
        if let inputLossImageSlate = self.inputLossImageSlate {
            try encodeContainer.encode(inputLossImageSlate, forKey: .inputLossImageSlate)
        }
        if let inputLossImageType = self.inputLossImageType {
            try encodeContainer.encode(inputLossImageType.rawValue, forKey: .inputLossImageType)
        }
        if let repeatFrameMsec = self.repeatFrameMsec {
            try encodeContainer.encode(repeatFrameMsec, forKey: .repeatFrameMsec)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blackFrameMsecDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .blackFrameMsec)
        blackFrameMsec = blackFrameMsecDecoded
        let inputLossImageColorDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .inputLossImageColor)
        inputLossImageColor = inputLossImageColorDecoded
        let inputLossImageSlateDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.InputLocation.self, forKey: .inputLossImageSlate)
        inputLossImageSlate = inputLossImageSlateDecoded
        let inputLossImageTypeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.InputLossImageType.self, forKey: .inputLossImageType)
        inputLossImageType = inputLossImageTypeDecoded
        let repeatFrameMsecDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .repeatFrameMsec)
        repeatFrameMsec = repeatFrameMsecDecoded
    }
}
