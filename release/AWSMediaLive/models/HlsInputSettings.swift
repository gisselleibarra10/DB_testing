// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// Hls Input Settings
    public struct HlsInputSettings: Swift.Equatable {
        /// When specified the HLS stream with the m3u8 BANDWIDTH that most closely matches this value will be chosen, otherwise the highest bandwidth stream in the m3u8 will be chosen. The bitrate is specified in bits per second, as in an HLS manifest.
        public var bandwidth: Swift.Int?
        /// When specified, reading of the HLS input will begin this many buffer segments from the end (most recently written segment). When not specified, the HLS input will begin with the first segment specified in the m3u8.
        public var bufferSegments: Swift.Int?
        /// The number of consecutive times that attempts to read a manifest or segment must fail before the input is considered unavailable.
        public var retries: Swift.Int?
        /// The number of seconds between retries when an attempt to read a manifest or segment fails.
        public var retryInterval: Swift.Int?
        /// Identifies the source for the SCTE-35 messages that MediaLive will ingest. Messages can be ingested from the content segments (in the stream) or from tags in the playlist (the HLS manifest). MediaLive ignores SCTE-35 information in the source that is not selected.
        public var scte35Source: MediaLiveClientTypes.HlsScte35SourceType?

        public init (
            bandwidth: Swift.Int? = nil,
            bufferSegments: Swift.Int? = nil,
            retries: Swift.Int? = nil,
            retryInterval: Swift.Int? = nil,
            scte35Source: MediaLiveClientTypes.HlsScte35SourceType? = nil
        )
        {
            self.bandwidth = bandwidth
            self.bufferSegments = bufferSegments
            self.retries = retries
            self.retryInterval = retryInterval
            self.scte35Source = scte35Source
        }
    }

}
