// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateInputDeviceInputBody: Swift.Equatable {
    let hdDeviceSettings: MediaLiveClientTypes.InputDeviceConfigurableSettings?
    let name: Swift.String?
    let uhdDeviceSettings: MediaLiveClientTypes.InputDeviceConfigurableSettings?
}

extension UpdateInputDeviceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hdDeviceSettings = "hdDeviceSettings"
        case name = "name"
        case uhdDeviceSettings = "uhdDeviceSettings"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hdDeviceSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.InputDeviceConfigurableSettings.self, forKey: .hdDeviceSettings)
        hdDeviceSettings = hdDeviceSettingsDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let uhdDeviceSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.InputDeviceConfigurableSettings.self, forKey: .uhdDeviceSettings)
        uhdDeviceSettings = uhdDeviceSettingsDecoded
    }
}
