// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.MsSmoothOutputSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case h265PackagingType = "h265PackagingType"
        case nameModifier = "nameModifier"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let h265PackagingType = self.h265PackagingType {
            try encodeContainer.encode(h265PackagingType.rawValue, forKey: .h265PackagingType)
        }
        if let nameModifier = self.nameModifier {
            try encodeContainer.encode(nameModifier, forKey: .nameModifier)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let h265PackagingTypeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.MsSmoothH265PackagingType.self, forKey: .h265PackagingType)
        h265PackagingType = h265PackagingTypeDecoded
        let nameModifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nameModifier)
        nameModifier = nameModifierDecoded
    }
}
