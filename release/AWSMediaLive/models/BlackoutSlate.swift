// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// Blackout Slate
    public struct BlackoutSlate: Swift.Equatable {
        /// Blackout slate image to be used. Leave empty for solid black. Only bmp and png images are supported.
        public var blackoutSlateImage: MediaLiveClientTypes.InputLocation?
        /// Setting to enabled causes the encoder to blackout the video, audio, and captions, and raise the "Network Blackout Image" slate when an SCTE104/35 Network End Segmentation Descriptor is encountered. The blackout will be lifted when the Network Start Segmentation Descriptor is encountered. The Network End and Network Start descriptors must contain a network ID that matches the value entered in "Network ID".
        public var networkEndBlackout: MediaLiveClientTypes.BlackoutSlateNetworkEndBlackout?
        /// Path to local file to use as Network End Blackout image. Image will be scaled to fill the entire output raster.
        public var networkEndBlackoutImage: MediaLiveClientTypes.InputLocation?
        /// Provides Network ID that matches EIDR ID format (e.g., "10.XXXX/XXXX-XXXX-XXXX-XXXX-XXXX-C").
        public var networkId: Swift.String?
        /// When set to enabled, causes video, audio and captions to be blanked when indicated by program metadata.
        public var state: MediaLiveClientTypes.BlackoutSlateState?

        public init (
            blackoutSlateImage: MediaLiveClientTypes.InputLocation? = nil,
            networkEndBlackout: MediaLiveClientTypes.BlackoutSlateNetworkEndBlackout? = nil,
            networkEndBlackoutImage: MediaLiveClientTypes.InputLocation? = nil,
            networkId: Swift.String? = nil,
            state: MediaLiveClientTypes.BlackoutSlateState? = nil
        )
        {
            self.blackoutSlateImage = blackoutSlateImage
            self.networkEndBlackout = networkEndBlackout
            self.networkEndBlackoutImage = networkEndBlackoutImage
            self.networkId = networkId
            self.state = state
        }
    }

}
