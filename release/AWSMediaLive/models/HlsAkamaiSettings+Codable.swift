// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.HlsAkamaiSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionRetryInterval = "connectionRetryInterval"
        case filecacheDuration = "filecacheDuration"
        case httpTransferMode = "httpTransferMode"
        case numRetries = "numRetries"
        case restartDelay = "restartDelay"
        case salt = "salt"
        case token = "token"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionRetryInterval = self.connectionRetryInterval {
            try encodeContainer.encode(connectionRetryInterval, forKey: .connectionRetryInterval)
        }
        if let filecacheDuration = self.filecacheDuration {
            try encodeContainer.encode(filecacheDuration, forKey: .filecacheDuration)
        }
        if let httpTransferMode = self.httpTransferMode {
            try encodeContainer.encode(httpTransferMode.rawValue, forKey: .httpTransferMode)
        }
        if let numRetries = self.numRetries {
            try encodeContainer.encode(numRetries, forKey: .numRetries)
        }
        if let restartDelay = self.restartDelay {
            try encodeContainer.encode(restartDelay, forKey: .restartDelay)
        }
        if let salt = self.salt {
            try encodeContainer.encode(salt, forKey: .salt)
        }
        if let token = self.token {
            try encodeContainer.encode(token, forKey: .token)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionRetryIntervalDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .connectionRetryInterval)
        connectionRetryInterval = connectionRetryIntervalDecoded
        let filecacheDurationDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .filecacheDuration)
        filecacheDuration = filecacheDurationDecoded
        let httpTransferModeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.HlsAkamaiHttpTransferMode.self, forKey: .httpTransferMode)
        httpTransferMode = httpTransferModeDecoded
        let numRetriesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numRetries)
        numRetries = numRetriesDecoded
        let restartDelayDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .restartDelay)
        restartDelay = restartDelayDecoded
        let saltDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .salt)
        salt = saltDecoded
        let tokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .token)
        token = tokenDecoded
    }
}
