// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListInputSecurityGroupsOutputResponseBody: Swift.Equatable {
    let inputSecurityGroups: [MediaLiveClientTypes.InputSecurityGroup]?
    let nextToken: Swift.String?
}

extension ListInputSecurityGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inputSecurityGroups = "inputSecurityGroups"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputSecurityGroupsContainer = try containerValues.decodeIfPresent([MediaLiveClientTypes.InputSecurityGroup?].self, forKey: .inputSecurityGroups)
        var inputSecurityGroupsDecoded0:[MediaLiveClientTypes.InputSecurityGroup]? = nil
        if let inputSecurityGroupsContainer = inputSecurityGroupsContainer {
            inputSecurityGroupsDecoded0 = [MediaLiveClientTypes.InputSecurityGroup]()
            for structure0 in inputSecurityGroupsContainer {
                if let structure0 = structure0 {
                    inputSecurityGroupsDecoded0?.append(structure0)
                }
            }
        }
        inputSecurityGroups = inputSecurityGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
