// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListInputDevicesOutputResponseBody: Swift.Equatable {
    let inputDevices: [MediaLiveClientTypes.InputDeviceSummary]?
    let nextToken: Swift.String?
}

extension ListInputDevicesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inputDevices = "inputDevices"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputDevicesContainer = try containerValues.decodeIfPresent([MediaLiveClientTypes.InputDeviceSummary?].self, forKey: .inputDevices)
        var inputDevicesDecoded0:[MediaLiveClientTypes.InputDeviceSummary]? = nil
        if let inputDevicesContainer = inputDevicesContainer {
            inputDevicesDecoded0 = [MediaLiveClientTypes.InputDeviceSummary]()
            for structure0 in inputDevicesContainer {
                if let structure0 = structure0 {
                    inputDevicesDecoded0?.append(structure0)
                }
            }
        }
        inputDevices = inputDevicesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
