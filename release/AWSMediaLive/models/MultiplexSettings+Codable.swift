// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.MultiplexSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maximumVideoBufferDelayMilliseconds = "maximumVideoBufferDelayMilliseconds"
        case transportStreamBitrate = "transportStreamBitrate"
        case transportStreamId = "transportStreamId"
        case transportStreamReservedBitrate = "transportStreamReservedBitrate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maximumVideoBufferDelayMilliseconds = self.maximumVideoBufferDelayMilliseconds {
            try encodeContainer.encode(maximumVideoBufferDelayMilliseconds, forKey: .maximumVideoBufferDelayMilliseconds)
        }
        if let transportStreamBitrate = self.transportStreamBitrate {
            try encodeContainer.encode(transportStreamBitrate, forKey: .transportStreamBitrate)
        }
        if let transportStreamId = self.transportStreamId {
            try encodeContainer.encode(transportStreamId, forKey: .transportStreamId)
        }
        if let transportStreamReservedBitrate = self.transportStreamReservedBitrate {
            try encodeContainer.encode(transportStreamReservedBitrate, forKey: .transportStreamReservedBitrate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maximumVideoBufferDelayMillisecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maximumVideoBufferDelayMilliseconds)
        maximumVideoBufferDelayMilliseconds = maximumVideoBufferDelayMillisecondsDecoded
        let transportStreamBitrateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .transportStreamBitrate)
        transportStreamBitrate = transportStreamBitrateDecoded
        let transportStreamIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .transportStreamId)
        transportStreamId = transportStreamIdDecoded
        let transportStreamReservedBitrateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .transportStreamReservedBitrate)
        transportStreamReservedBitrate = transportStreamReservedBitrateDecoded
    }
}
