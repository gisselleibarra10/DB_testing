// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// Settings that describe the active source from the input device, and the video characteristics of that source.
    public struct InputDeviceUhdSettings: Swift.Equatable {
        /// If you specified Auto as the configured input, specifies which of the sources is currently active (SDI or HDMI).
        public var activeInput: MediaLiveClientTypes.InputDeviceActiveInput?
        /// The source at the input device that is currently active. You can specify this source.
        public var configuredInput: MediaLiveClientTypes.InputDeviceConfiguredInput?
        /// The state of the input device.
        public var deviceState: MediaLiveClientTypes.InputDeviceState?
        /// The frame rate of the video source.
        public var framerate: Swift.Double?
        /// The height of the video source, in pixels.
        public var height: Swift.Int?
        /// The current maximum bitrate for ingesting this source, in bits per second. You can specify this maximum.
        public var maxBitrate: Swift.Int?
        /// The scan type of the video source.
        public var scanType: MediaLiveClientTypes.InputDeviceScanType?
        /// The width of the video source, in pixels.
        public var width: Swift.Int?

        public init (
            activeInput: MediaLiveClientTypes.InputDeviceActiveInput? = nil,
            configuredInput: MediaLiveClientTypes.InputDeviceConfiguredInput? = nil,
            deviceState: MediaLiveClientTypes.InputDeviceState? = nil,
            framerate: Swift.Double? = nil,
            height: Swift.Int? = nil,
            maxBitrate: Swift.Int? = nil,
            scanType: MediaLiveClientTypes.InputDeviceScanType? = nil,
            width: Swift.Int? = nil
        )
        {
            self.activeInput = activeInput
            self.configuredInput = configuredInput
            self.deviceState = deviceState
            self.framerate = framerate
            self.height = height
            self.maxBitrate = maxBitrate
            self.scanType = scanType
            self.width = width
        }
    }

}
