// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchStartInputBody: Swift.Equatable {
    let channelIds: [Swift.String]?
    let multiplexIds: [Swift.String]?
}

extension BatchStartInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channelIds = "channelIds"
        case multiplexIds = "multiplexIds"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .channelIds)
        var channelIdsDecoded0:[Swift.String]? = nil
        if let channelIdsContainer = channelIdsContainer {
            channelIdsDecoded0 = [Swift.String]()
            for string0 in channelIdsContainer {
                if let string0 = string0 {
                    channelIdsDecoded0?.append(string0)
                }
            }
        }
        channelIds = channelIdsDecoded0
        let multiplexIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .multiplexIds)
        var multiplexIdsDecoded0:[Swift.String]? = nil
        if let multiplexIdsContainer = multiplexIdsContainer {
            multiplexIdsDecoded0 = [Swift.String]()
            for string0 in multiplexIdsContainer {
                if let string0 = string0 {
                    multiplexIdsDecoded0?.append(string0)
                }
            }
        }
        multiplexIds = multiplexIdsDecoded0
    }
}
