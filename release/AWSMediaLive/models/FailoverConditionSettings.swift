// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// Settings for one failover condition.
    public struct FailoverConditionSettings: Swift.Equatable {
        /// MediaLive will perform a failover if the specified audio selector is silent for the specified period.
        public var audioSilenceSettings: MediaLiveClientTypes.AudioSilenceFailoverSettings?
        /// MediaLive will perform a failover if content is not detected in this input for the specified period.
        public var inputLossSettings: MediaLiveClientTypes.InputLossFailoverSettings?
        /// MediaLive will perform a failover if content is considered black for the specified period.
        public var videoBlackSettings: MediaLiveClientTypes.VideoBlackFailoverSettings?

        public init (
            audioSilenceSettings: MediaLiveClientTypes.AudioSilenceFailoverSettings? = nil,
            inputLossSettings: MediaLiveClientTypes.InputLossFailoverSettings? = nil,
            videoBlackSettings: MediaLiveClientTypes.VideoBlackFailoverSettings? = nil
        )
        {
            self.audioSilenceSettings = audioSilenceSettings
            self.inputLossSettings = inputLossSettings
            self.videoBlackSettings = videoBlackSettings
        }
    }

}
