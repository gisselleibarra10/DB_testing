// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.InputDeviceNetworkSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dnsAddresses = "dnsAddresses"
        case gateway = "gateway"
        case ipAddress = "ipAddress"
        case ipScheme = "ipScheme"
        case subnetMask = "subnetMask"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dnsAddresses = dnsAddresses {
            var dnsAddressesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dnsAddresses)
            for __listof__string0 in dnsAddresses {
                try dnsAddressesContainer.encode(__listof__string0)
            }
        }
        if let gateway = self.gateway {
            try encodeContainer.encode(gateway, forKey: .gateway)
        }
        if let ipAddress = self.ipAddress {
            try encodeContainer.encode(ipAddress, forKey: .ipAddress)
        }
        if let ipScheme = self.ipScheme {
            try encodeContainer.encode(ipScheme.rawValue, forKey: .ipScheme)
        }
        if let subnetMask = self.subnetMask {
            try encodeContainer.encode(subnetMask, forKey: .subnetMask)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dnsAddressesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .dnsAddresses)
        var dnsAddressesDecoded0:[Swift.String]? = nil
        if let dnsAddressesContainer = dnsAddressesContainer {
            dnsAddressesDecoded0 = [Swift.String]()
            for string0 in dnsAddressesContainer {
                if let string0 = string0 {
                    dnsAddressesDecoded0?.append(string0)
                }
            }
        }
        dnsAddresses = dnsAddressesDecoded0
        let gatewayDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gateway)
        gateway = gatewayDecoded
        let ipAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipAddress)
        ipAddress = ipAddressDecoded
        let ipSchemeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.InputDeviceIpScheme.self, forKey: .ipScheme)
        ipScheme = ipSchemeDecoded
        let subnetMaskDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subnetMask)
        subnetMask = subnetMaskDecoded
    }
}
