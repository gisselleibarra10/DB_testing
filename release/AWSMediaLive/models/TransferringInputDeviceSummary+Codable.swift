// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.TransferringInputDeviceSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case id = "id"
        case message = "message"
        case targetCustomerId = "targetCustomerId"
        case transferType = "transferType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let message = self.message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let targetCustomerId = self.targetCustomerId {
            try encodeContainer.encode(targetCustomerId, forKey: .targetCustomerId)
        }
        if let transferType = self.transferType {
            try encodeContainer.encode(transferType.rawValue, forKey: .transferType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let targetCustomerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetCustomerId)
        targetCustomerId = targetCustomerIdDecoded
        let transferTypeDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.InputDeviceTransferType.self, forKey: .transferType)
        transferType = transferTypeDecoded
    }
}
