// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// S3 Canned Acl
    public enum S3CannedAcl: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case authenticatedRead
        case bucketOwnerFullControl
        case bucketOwnerRead
        case publicRead
        case sdkUnknown(Swift.String)

        public static var allCases: [S3CannedAcl] {
            return [
                .authenticatedRead,
                .bucketOwnerFullControl,
                .bucketOwnerRead,
                .publicRead,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .authenticatedRead: return "AUTHENTICATED_READ"
            case .bucketOwnerFullControl: return "BUCKET_OWNER_FULL_CONTROL"
            case .bucketOwnerRead: return "BUCKET_OWNER_READ"
            case .publicRead: return "PUBLIC_READ"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = S3CannedAcl(rawValue: rawValue) ?? S3CannedAcl.sdkUnknown(rawValue)
        }
    }
}
