// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UnprocessableEntityExceptionBody: Swift.Equatable {
    let message: Swift.String?
    let validationErrors: [MediaLiveClientTypes.ValidationError]?
}

extension UnprocessableEntityExceptionBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case message = "message"
        case validationErrors = "validationErrors"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let validationErrorsContainer = try containerValues.decodeIfPresent([MediaLiveClientTypes.ValidationError?].self, forKey: .validationErrors)
        var validationErrorsDecoded0:[MediaLiveClientTypes.ValidationError]? = nil
        if let validationErrorsContainer = validationErrorsContainer {
            validationErrorsDecoded0 = [MediaLiveClientTypes.ValidationError]()
            for structure0 in validationErrorsContainer {
                if let structure0 = structure0 {
                    validationErrorsDecoded0?.append(structure0)
                }
            }
        }
        validationErrors = validationErrorsDecoded0
    }
}
