// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.H264ColorSpaceSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case colorSpacePassthroughSettings = "colorSpacePassthroughSettings"
        case rec601Settings = "rec601Settings"
        case rec709Settings = "rec709Settings"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let colorSpacePassthroughSettings = self.colorSpacePassthroughSettings {
            try encodeContainer.encode(colorSpacePassthroughSettings, forKey: .colorSpacePassthroughSettings)
        }
        if let rec601Settings = self.rec601Settings {
            try encodeContainer.encode(rec601Settings, forKey: .rec601Settings)
        }
        if let rec709Settings = self.rec709Settings {
            try encodeContainer.encode(rec709Settings, forKey: .rec709Settings)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let colorSpacePassthroughSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.ColorSpacePassthroughSettings.self, forKey: .colorSpacePassthroughSettings)
        colorSpacePassthroughSettings = colorSpacePassthroughSettingsDecoded
        let rec601SettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.Rec601Settings.self, forKey: .rec601Settings)
        rec601Settings = rec601SettingsDecoded
        let rec709SettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.Rec709Settings.self, forKey: .rec709Settings)
        rec709Settings = rec709SettingsDecoded
    }
}
