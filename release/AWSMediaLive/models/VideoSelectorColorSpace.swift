// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaLiveClientTypes {
    /// Video Selector Color Space
    public enum VideoSelectorColorSpace: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case follow
        case hdr10
        case hlg2020
        case rec601
        case rec709
        case sdkUnknown(Swift.String)

        public static var allCases: [VideoSelectorColorSpace] {
            return [
                .follow,
                .hdr10,
                .hlg2020,
                .rec601,
                .rec709,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .follow: return "FOLLOW"
            case .hdr10: return "HDR10"
            case .hlg2020: return "HLG_2020"
            case .rec601: return "REC_601"
            case .rec709: return "REC_709"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = VideoSelectorColorSpace(rawValue: rawValue) ?? VideoSelectorColorSpace.sdkUnknown(rawValue)
        }
    }
}
