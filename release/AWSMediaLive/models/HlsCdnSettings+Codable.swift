// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaLiveClientTypes.HlsCdnSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hlsAkamaiSettings = "hlsAkamaiSettings"
        case hlsBasicPutSettings = "hlsBasicPutSettings"
        case hlsMediaStoreSettings = "hlsMediaStoreSettings"
        case hlsS3Settings = "hlsS3Settings"
        case hlsWebdavSettings = "hlsWebdavSettings"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hlsAkamaiSettings = self.hlsAkamaiSettings {
            try encodeContainer.encode(hlsAkamaiSettings, forKey: .hlsAkamaiSettings)
        }
        if let hlsBasicPutSettings = self.hlsBasicPutSettings {
            try encodeContainer.encode(hlsBasicPutSettings, forKey: .hlsBasicPutSettings)
        }
        if let hlsMediaStoreSettings = self.hlsMediaStoreSettings {
            try encodeContainer.encode(hlsMediaStoreSettings, forKey: .hlsMediaStoreSettings)
        }
        if let hlsS3Settings = self.hlsS3Settings {
            try encodeContainer.encode(hlsS3Settings, forKey: .hlsS3Settings)
        }
        if let hlsWebdavSettings = self.hlsWebdavSettings {
            try encodeContainer.encode(hlsWebdavSettings, forKey: .hlsWebdavSettings)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hlsAkamaiSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.HlsAkamaiSettings.self, forKey: .hlsAkamaiSettings)
        hlsAkamaiSettings = hlsAkamaiSettingsDecoded
        let hlsBasicPutSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.HlsBasicPutSettings.self, forKey: .hlsBasicPutSettings)
        hlsBasicPutSettings = hlsBasicPutSettingsDecoded
        let hlsMediaStoreSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.HlsMediaStoreSettings.self, forKey: .hlsMediaStoreSettings)
        hlsMediaStoreSettings = hlsMediaStoreSettingsDecoded
        let hlsS3SettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.HlsS3Settings.self, forKey: .hlsS3Settings)
        hlsS3Settings = hlsS3SettingsDecoded
        let hlsWebdavSettingsDecoded = try containerValues.decodeIfPresent(MediaLiveClientTypes.HlsWebdavSettings.self, forKey: .hlsWebdavSettings)
        hlsWebdavSettings = hlsWebdavSettingsDecoded
    }
}
