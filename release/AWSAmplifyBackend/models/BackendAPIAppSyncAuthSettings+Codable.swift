// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyBackendClientTypes.BackendAPIAppSyncAuthSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cognitoUserPoolId = "cognitoUserPoolId"
        case description = "description"
        case expirationTime = "expirationTime"
        case openIDAuthTTL = "openIDAuthTTL"
        case openIDClientId = "openIDClientId"
        case openIDIatTTL = "openIDIatTTL"
        case openIDIssueURL = "openIDIssueURL"
        case openIDProviderName = "openIDProviderName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cognitoUserPoolId = self.cognitoUserPoolId {
            try encodeContainer.encode(cognitoUserPoolId, forKey: .cognitoUserPoolId)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let expirationTime = self.expirationTime {
            try encodeContainer.encode(expirationTime, forKey: .expirationTime)
        }
        if let openIDAuthTTL = self.openIDAuthTTL {
            try encodeContainer.encode(openIDAuthTTL, forKey: .openIDAuthTTL)
        }
        if let openIDClientId = self.openIDClientId {
            try encodeContainer.encode(openIDClientId, forKey: .openIDClientId)
        }
        if let openIDIatTTL = self.openIDIatTTL {
            try encodeContainer.encode(openIDIatTTL, forKey: .openIDIatTTL)
        }
        if let openIDIssueURL = self.openIDIssueURL {
            try encodeContainer.encode(openIDIssueURL, forKey: .openIDIssueURL)
        }
        if let openIDProviderName = self.openIDProviderName {
            try encodeContainer.encode(openIDProviderName, forKey: .openIDProviderName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cognitoUserPoolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cognitoUserPoolId)
        cognitoUserPoolId = cognitoUserPoolIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let expirationTimeDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .expirationTime)
        expirationTime = expirationTimeDecoded
        let openIDAuthTTLDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .openIDAuthTTL)
        openIDAuthTTL = openIDAuthTTLDecoded
        let openIDClientIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .openIDClientId)
        openIDClientId = openIDClientIdDecoded
        let openIDIatTTLDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .openIDIatTTL)
        openIDIatTTL = openIDIatTTLDecoded
        let openIDIssueURLDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .openIDIssueURL)
        openIDIssueURL = openIDIssueURLDecoded
        let openIDProviderNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .openIDProviderName)
        openIDProviderName = openIDProviderNameDecoded
    }
}
