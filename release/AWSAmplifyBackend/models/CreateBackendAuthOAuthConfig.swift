// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AmplifyBackendClientTypes {
    /// Creates the OAuth configuration for your Amplify project.
    public struct CreateBackendAuthOAuthConfig: Swift.Equatable {
        /// The domain prefix for your Amplify app.
        public var domainPrefix: Swift.String?
        /// The OAuth grant type that you use to allow app users to authenticate from your Amplify app.
        /// This member is required.
        public var oAuthGrantType: AmplifyBackendClientTypes.OAuthGrantType?
        /// List of OAuth-related flows used to allow your app users to authenticate from your Amplify app.
        /// This member is required.
        public var oAuthScopes: [AmplifyBackendClientTypes.OAuthScopesElement]?
        /// The redirected URI for signing in to your Amplify app.
        /// This member is required.
        public var redirectSignInURIs: [Swift.String]?
        /// Redirect URLs that OAuth uses when a user signs out of an Amplify app.
        /// This member is required.
        public var redirectSignOutURIs: [Swift.String]?
        /// The settings for using social providers to access your Amplify app.
        public var socialProviderSettings: AmplifyBackendClientTypes.SocialProviderSettings?

        public init (
            domainPrefix: Swift.String? = nil,
            oAuthGrantType: AmplifyBackendClientTypes.OAuthGrantType? = nil,
            oAuthScopes: [AmplifyBackendClientTypes.OAuthScopesElement]? = nil,
            redirectSignInURIs: [Swift.String]? = nil,
            redirectSignOutURIs: [Swift.String]? = nil,
            socialProviderSettings: AmplifyBackendClientTypes.SocialProviderSettings? = nil
        )
        {
            self.domainPrefix = domainPrefix
            self.oAuthGrantType = oAuthGrantType
            self.oAuthScopes = oAuthScopes
            self.redirectSignInURIs = redirectSignInURIs
            self.redirectSignOutURIs = redirectSignOutURIs
            self.socialProviderSettings = socialProviderSettings
        }
    }

}
