// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyBackendClientTypes.SocialProviderSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case facebook = "Facebook"
        case google = "Google"
        case loginWithAmazon = "LoginWithAmazon"
        case signInWithApple = "SignInWithApple"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let facebook = self.facebook {
            try encodeContainer.encode(facebook, forKey: .facebook)
        }
        if let google = self.google {
            try encodeContainer.encode(google, forKey: .google)
        }
        if let loginWithAmazon = self.loginWithAmazon {
            try encodeContainer.encode(loginWithAmazon, forKey: .loginWithAmazon)
        }
        if let signInWithApple = self.signInWithApple {
            try encodeContainer.encode(signInWithApple, forKey: .signInWithApple)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let facebookDecoded = try containerValues.decodeIfPresent(AmplifyBackendClientTypes.BackendAuthSocialProviderConfig.self, forKey: .facebook)
        facebook = facebookDecoded
        let googleDecoded = try containerValues.decodeIfPresent(AmplifyBackendClientTypes.BackendAuthSocialProviderConfig.self, forKey: .google)
        google = googleDecoded
        let loginWithAmazonDecoded = try containerValues.decodeIfPresent(AmplifyBackendClientTypes.BackendAuthSocialProviderConfig.self, forKey: .loginWithAmazon)
        loginWithAmazon = loginWithAmazonDecoded
        let signInWithAppleDecoded = try containerValues.decodeIfPresent(AmplifyBackendClientTypes.BackendAuthAppleProviderConfig.self, forKey: .signInWithApple)
        signInWithApple = signInWithAppleDecoded
    }
}
