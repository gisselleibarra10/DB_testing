// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyBackendClientTypes.Settings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case mfaTypes = "mfaTypes"
        case smsMessage = "smsMessage"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let mfaTypes = mfaTypes {
            var mfaTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .mfaTypes)
            for listofmfatypeselement0 in mfaTypes {
                try mfaTypesContainer.encode(listofmfatypeselement0.rawValue)
            }
        }
        if let smsMessage = self.smsMessage {
            try encodeContainer.encode(smsMessage, forKey: .smsMessage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mfaTypesContainer = try containerValues.decodeIfPresent([AmplifyBackendClientTypes.MfaTypesElement?].self, forKey: .mfaTypes)
        var mfaTypesDecoded0:[AmplifyBackendClientTypes.MfaTypesElement]? = nil
        if let mfaTypesContainer = mfaTypesContainer {
            mfaTypesDecoded0 = [AmplifyBackendClientTypes.MfaTypesElement]()
            for string0 in mfaTypesContainer {
                if let string0 = string0 {
                    mfaTypesDecoded0?.append(string0)
                }
            }
        }
        mfaTypes = mfaTypesDecoded0
        let smsMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .smsMessage)
        smsMessage = smsMessageDecoded
    }
}
