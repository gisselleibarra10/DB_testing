// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyBackendClientTypes.BackendStoragePermissions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authenticated = "authenticated"
        case unAuthenticated = "unAuthenticated"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let authenticated = authenticated {
            var authenticatedContainer = encodeContainer.nestedUnkeyedContainer(forKey: .authenticated)
            for listofauthenticatedelement0 in authenticated {
                try authenticatedContainer.encode(listofauthenticatedelement0.rawValue)
            }
        }
        if let unAuthenticated = unAuthenticated {
            var unAuthenticatedContainer = encodeContainer.nestedUnkeyedContainer(forKey: .unAuthenticated)
            for listofunauthenticatedelement0 in unAuthenticated {
                try unAuthenticatedContainer.encode(listofunauthenticatedelement0.rawValue)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authenticatedContainer = try containerValues.decodeIfPresent([AmplifyBackendClientTypes.AuthenticatedElement?].self, forKey: .authenticated)
        var authenticatedDecoded0:[AmplifyBackendClientTypes.AuthenticatedElement]? = nil
        if let authenticatedContainer = authenticatedContainer {
            authenticatedDecoded0 = [AmplifyBackendClientTypes.AuthenticatedElement]()
            for string0 in authenticatedContainer {
                if let string0 = string0 {
                    authenticatedDecoded0?.append(string0)
                }
            }
        }
        authenticated = authenticatedDecoded0
        let unAuthenticatedContainer = try containerValues.decodeIfPresent([AmplifyBackendClientTypes.UnAuthenticatedElement?].self, forKey: .unAuthenticated)
        var unAuthenticatedDecoded0:[AmplifyBackendClientTypes.UnAuthenticatedElement]? = nil
        if let unAuthenticatedContainer = unAuthenticatedContainer {
            unAuthenticatedDecoded0 = [AmplifyBackendClientTypes.UnAuthenticatedElement]()
            for string0 in unAuthenticatedContainer {
                if let string0 = string0 {
                    unAuthenticatedDecoded0?.append(string0)
                }
            }
        }
        unAuthenticated = unAuthenticatedDecoded0
    }
}
