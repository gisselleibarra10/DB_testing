// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBackendOutputResponseBody: Swift.Equatable {
    let amplifyFeatureFlags: Swift.String?
    let amplifyMetaConfig: Swift.String?
    let appId: Swift.String?
    let appName: Swift.String?
    let backendEnvironmentList: [Swift.String]?
    let backendEnvironmentName: Swift.String?
    let error: Swift.String?
}

extension GetBackendOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case amplifyFeatureFlags = "amplifyFeatureFlags"
        case amplifyMetaConfig = "amplifyMetaConfig"
        case appId = "appId"
        case appName = "appName"
        case backendEnvironmentList = "backendEnvironmentList"
        case backendEnvironmentName = "backendEnvironmentName"
        case error = "error"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let amplifyFeatureFlagsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .amplifyFeatureFlags)
        amplifyFeatureFlags = amplifyFeatureFlagsDecoded
        let amplifyMetaConfigDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .amplifyMetaConfig)
        amplifyMetaConfig = amplifyMetaConfigDecoded
        let appIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appId)
        appId = appIdDecoded
        let appNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appName)
        appName = appNameDecoded
        let backendEnvironmentListContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .backendEnvironmentList)
        var backendEnvironmentListDecoded0:[Swift.String]? = nil
        if let backendEnvironmentListContainer = backendEnvironmentListContainer {
            backendEnvironmentListDecoded0 = [Swift.String]()
            for string0 in backendEnvironmentListContainer {
                if let string0 = string0 {
                    backendEnvironmentListDecoded0?.append(string0)
                }
            }
        }
        backendEnvironmentList = backendEnvironmentListDecoded0
        let backendEnvironmentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .backendEnvironmentName)
        backendEnvironmentName = backendEnvironmentNameDecoded
        let errorDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .error)
        error = errorDecoded
    }
}
