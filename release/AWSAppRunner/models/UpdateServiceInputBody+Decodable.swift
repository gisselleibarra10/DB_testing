// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateServiceInputBody: Swift.Equatable {
    let serviceArn: Swift.String?
    let sourceConfiguration: AppRunnerClientTypes.SourceConfiguration?
    let instanceConfiguration: AppRunnerClientTypes.InstanceConfiguration?
    let autoScalingConfigurationArn: Swift.String?
    let healthCheckConfiguration: AppRunnerClientTypes.HealthCheckConfiguration?
    let networkConfiguration: AppRunnerClientTypes.NetworkConfiguration?
    let observabilityConfiguration: AppRunnerClientTypes.ServiceObservabilityConfiguration?
}

extension UpdateServiceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case autoScalingConfigurationArn = "AutoScalingConfigurationArn"
        case healthCheckConfiguration = "HealthCheckConfiguration"
        case instanceConfiguration = "InstanceConfiguration"
        case networkConfiguration = "NetworkConfiguration"
        case observabilityConfiguration = "ObservabilityConfiguration"
        case serviceArn = "ServiceArn"
        case sourceConfiguration = "SourceConfiguration"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serviceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serviceArn)
        serviceArn = serviceArnDecoded
        let sourceConfigurationDecoded = try containerValues.decodeIfPresent(AppRunnerClientTypes.SourceConfiguration.self, forKey: .sourceConfiguration)
        sourceConfiguration = sourceConfigurationDecoded
        let instanceConfigurationDecoded = try containerValues.decodeIfPresent(AppRunnerClientTypes.InstanceConfiguration.self, forKey: .instanceConfiguration)
        instanceConfiguration = instanceConfigurationDecoded
        let autoScalingConfigurationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .autoScalingConfigurationArn)
        autoScalingConfigurationArn = autoScalingConfigurationArnDecoded
        let healthCheckConfigurationDecoded = try containerValues.decodeIfPresent(AppRunnerClientTypes.HealthCheckConfiguration.self, forKey: .healthCheckConfiguration)
        healthCheckConfiguration = healthCheckConfigurationDecoded
        let networkConfigurationDecoded = try containerValues.decodeIfPresent(AppRunnerClientTypes.NetworkConfiguration.self, forKey: .networkConfiguration)
        networkConfiguration = networkConfigurationDecoded
        let observabilityConfigurationDecoded = try containerValues.decodeIfPresent(AppRunnerClientTypes.ServiceObservabilityConfiguration.self, forKey: .observabilityConfiguration)
        observabilityConfiguration = observabilityConfigurationDecoded
    }
}
