// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AppRunnerClientTypes {
    /// Describes the source deployed to an App Runner service. It can be a code or an image repository.
    public struct SourceConfiguration: Swift.Equatable {
        /// Describes the resources that are needed to authenticate access to some source repositories.
        public var authenticationConfiguration: AppRunnerClientTypes.AuthenticationConfiguration?
        /// If true, continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment. Default: App Runner sets to false for a source image that uses an ECR Public repository or an ECR repository that's in an Amazon Web Services account other than the one that the service is in. App Runner sets to true in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).
        public var autoDeploymentsEnabled: Swift.Bool?
        /// The description of a source code repository. You must provide either this member or ImageRepository (but not both).
        public var codeRepository: AppRunnerClientTypes.CodeRepository?
        /// The description of a source image repository. You must provide either this member or CodeRepository (but not both).
        public var imageRepository: AppRunnerClientTypes.ImageRepository?

        public init (
            authenticationConfiguration: AppRunnerClientTypes.AuthenticationConfiguration? = nil,
            autoDeploymentsEnabled: Swift.Bool? = nil,
            codeRepository: AppRunnerClientTypes.CodeRepository? = nil,
            imageRepository: AppRunnerClientTypes.ImageRepository? = nil
        )
        {
            self.authenticationConfiguration = authenticationConfiguration
            self.autoDeploymentsEnabled = autoDeploymentsEnabled
            self.codeRepository = codeRepository
            self.imageRepository = imageRepository
        }
    }

}
