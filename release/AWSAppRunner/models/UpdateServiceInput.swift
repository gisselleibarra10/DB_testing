// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateServiceInput: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with the App Runner service.
    public var autoScalingConfigurationArn: Swift.String?
    /// The settings for the health check that App Runner performs to monitor the health of the App Runner service.
    public var healthCheckConfiguration: AppRunnerClientTypes.HealthCheckConfiguration?
    /// The runtime configuration to apply to instances (scaling units) of your service.
    public var instanceConfiguration: AppRunnerClientTypes.InstanceConfiguration?
    /// Configuration settings related to network traffic of the web application that the App Runner service runs.
    public var networkConfiguration: AppRunnerClientTypes.NetworkConfiguration?
    /// The observability configuration of your service.
    public var observabilityConfiguration: AppRunnerClientTypes.ServiceObservabilityConfiguration?
    /// The Amazon Resource Name (ARN) of the App Runner service that you want to update.
    /// This member is required.
    public var serviceArn: Swift.String?
    /// The source configuration to apply to the App Runner service. You can change the configuration of the code or image repository that the service uses. However, you can't switch from code to image or the other way around. This means that you must provide the same structure member of SourceConfiguration that you originally included when you created the service. Specifically, you can include either CodeRepository or ImageRepository. To update the source configuration, set the values to members of the structure that you include.
    public var sourceConfiguration: AppRunnerClientTypes.SourceConfiguration?

    public init (
        autoScalingConfigurationArn: Swift.String? = nil,
        healthCheckConfiguration: AppRunnerClientTypes.HealthCheckConfiguration? = nil,
        instanceConfiguration: AppRunnerClientTypes.InstanceConfiguration? = nil,
        networkConfiguration: AppRunnerClientTypes.NetworkConfiguration? = nil,
        observabilityConfiguration: AppRunnerClientTypes.ServiceObservabilityConfiguration? = nil,
        serviceArn: Swift.String? = nil,
        sourceConfiguration: AppRunnerClientTypes.SourceConfiguration? = nil
    )
    {
        self.autoScalingConfigurationArn = autoScalingConfigurationArn
        self.healthCheckConfiguration = healthCheckConfiguration
        self.instanceConfiguration = instanceConfiguration
        self.networkConfiguration = networkConfiguration
        self.observabilityConfiguration = observabilityConfiguration
        self.serviceArn = serviceArn
        self.sourceConfiguration = sourceConfiguration
    }
}
