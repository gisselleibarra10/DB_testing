// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListObservabilityConfigurationsOutputResponseBody: Swift.Equatable {
    let observabilityConfigurationSummaryList: [AppRunnerClientTypes.ObservabilityConfigurationSummary]?
    let nextToken: Swift.String?
}

extension ListObservabilityConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case observabilityConfigurationSummaryList = "ObservabilityConfigurationSummaryList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let observabilityConfigurationSummaryListContainer = try containerValues.decodeIfPresent([AppRunnerClientTypes.ObservabilityConfigurationSummary?].self, forKey: .observabilityConfigurationSummaryList)
        var observabilityConfigurationSummaryListDecoded0:[AppRunnerClientTypes.ObservabilityConfigurationSummary]? = nil
        if let observabilityConfigurationSummaryListContainer = observabilityConfigurationSummaryListContainer {
            observabilityConfigurationSummaryListDecoded0 = [AppRunnerClientTypes.ObservabilityConfigurationSummary]()
            for structure0 in observabilityConfigurationSummaryListContainer {
                if let structure0 = structure0 {
                    observabilityConfigurationSummaryListDecoded0?.append(structure0)
                }
            }
        }
        observabilityConfigurationSummaryList = observabilityConfigurationSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
