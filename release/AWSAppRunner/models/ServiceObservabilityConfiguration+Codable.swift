// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppRunnerClientTypes.ServiceObservabilityConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case observabilityConfigurationArn = "ObservabilityConfigurationArn"
        case observabilityEnabled = "ObservabilityEnabled"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let observabilityConfigurationArn = self.observabilityConfigurationArn {
            try encodeContainer.encode(observabilityConfigurationArn, forKey: .observabilityConfigurationArn)
        }
        if observabilityEnabled != false {
            try encodeContainer.encode(observabilityEnabled, forKey: .observabilityEnabled)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let observabilityEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .observabilityEnabled) ?? false
        observabilityEnabled = observabilityEnabledDecoded
        let observabilityConfigurationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .observabilityConfigurationArn)
        observabilityConfigurationArn = observabilityConfigurationArnDecoded
    }
}
