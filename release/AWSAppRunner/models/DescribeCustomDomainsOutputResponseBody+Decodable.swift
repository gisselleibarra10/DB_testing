// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCustomDomainsOutputResponseBody: Swift.Equatable {
    let dNSTarget: Swift.String?
    let serviceArn: Swift.String?
    let customDomains: [AppRunnerClientTypes.CustomDomain]?
    let nextToken: Swift.String?
}

extension DescribeCustomDomainsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customDomains = "CustomDomains"
        case dNSTarget = "DNSTarget"
        case nextToken = "NextToken"
        case serviceArn = "ServiceArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dNSTargetDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dNSTarget)
        dNSTarget = dNSTargetDecoded
        let serviceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serviceArn)
        serviceArn = serviceArnDecoded
        let customDomainsContainer = try containerValues.decodeIfPresent([AppRunnerClientTypes.CustomDomain?].self, forKey: .customDomains)
        var customDomainsDecoded0:[AppRunnerClientTypes.CustomDomain]? = nil
        if let customDomainsContainer = customDomainsContainer {
            customDomainsDecoded0 = [AppRunnerClientTypes.CustomDomain]()
            for structure0 in customDomainsContainer {
                if let structure0 = structure0 {
                    customDomainsDecoded0?.append(structure0)
                }
            }
        }
        customDomains = customDomainsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
