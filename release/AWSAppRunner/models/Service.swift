// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppRunnerClientTypes {
    /// Describes an App Runner service. It can describe a service in any state, including deleted services. This type contains the full information about a service, including configuration details. It's returned by the [CreateService](https://docs.aws.amazon.com/apprunner/latest/api/API_CreateService.html), [DescribeService](https://docs.aws.amazon.com/apprunner/latest/api/API_DescribeService.html), and [DeleteService](https://docs.aws.amazon.com/apprunner/latest/api/API_DeleteService.html) actions. A subset of this information is returned by the [ListServices](https://docs.aws.amazon.com/apprunner/latest/api/API_ListServices.html) action using the [ServiceSummary](https://docs.aws.amazon.com/apprunner/latest/api/API_ServiceSummary.html) type.
    public struct Service: Swift.Equatable {
        /// Summary information for the App Runner automatic scaling configuration resource that's associated with this service.
        /// This member is required.
        public var autoScalingConfigurationSummary: AppRunnerClientTypes.AutoScalingConfigurationSummary?
        /// The time when the App Runner service was created. It's in the Unix time stamp format.
        /// This member is required.
        public var createdAt: ClientRuntime.Date?
        /// The time when the App Runner service was deleted. It's in the Unix time stamp format.
        public var deletedAt: ClientRuntime.Date?
        /// The encryption key that App Runner uses to encrypt the service logs and the copy of the source repository that App Runner maintains for the service. It can be either a customer-provided encryption key or an Amazon Web Services managed key.
        public var encryptionConfiguration: AppRunnerClientTypes.EncryptionConfiguration?
        /// The settings for the health check that App Runner performs to monitor the health of this service.
        public var healthCheckConfiguration: AppRunnerClientTypes.HealthCheckConfiguration?
        /// The runtime configuration of instances (scaling units) of this service.
        /// This member is required.
        public var instanceConfiguration: AppRunnerClientTypes.InstanceConfiguration?
        /// Configuration settings related to network traffic of the web application that this service runs.
        /// This member is required.
        public var networkConfiguration: AppRunnerClientTypes.NetworkConfiguration?
        /// The observability configuration of this service.
        public var observabilityConfiguration: AppRunnerClientTypes.ServiceObservabilityConfiguration?
        /// The Amazon Resource Name (ARN) of this service.
        /// This member is required.
        public var serviceArn: Swift.String?
        /// An ID that App Runner generated for this service. It's unique within the Amazon Web Services Region.
        /// This member is required.
        public var serviceId: Swift.String?
        /// The customer-provided service name.
        /// This member is required.
        public var serviceName: Swift.String?
        /// A subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.
        /// This member is required.
        public var serviceUrl: Swift.String?
        /// The source deployed to the App Runner service. It can be a code or an image repository.
        /// This member is required.
        public var sourceConfiguration: AppRunnerClientTypes.SourceConfiguration?
        /// The current state of the App Runner service. These particular values mean the following.
        ///
        /// * CREATE_FAILED – The service failed to create. To troubleshoot this failure, read the failure events and logs, change any parameters that need to be fixed, and retry the call to create the service. The failed service isn't usable, and still counts towards your service quota. When you're done analyzing the failure, delete the service.
        ///
        /// * DELETE_FAILED – The service failed to delete and can't be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.
        /// This member is required.
        public var status: AppRunnerClientTypes.ServiceStatus?
        /// The time when the App Runner service was last updated at. It's in the Unix time stamp format.
        /// This member is required.
        public var updatedAt: ClientRuntime.Date?

        public init (
            autoScalingConfigurationSummary: AppRunnerClientTypes.AutoScalingConfigurationSummary? = nil,
            createdAt: ClientRuntime.Date? = nil,
            deletedAt: ClientRuntime.Date? = nil,
            encryptionConfiguration: AppRunnerClientTypes.EncryptionConfiguration? = nil,
            healthCheckConfiguration: AppRunnerClientTypes.HealthCheckConfiguration? = nil,
            instanceConfiguration: AppRunnerClientTypes.InstanceConfiguration? = nil,
            networkConfiguration: AppRunnerClientTypes.NetworkConfiguration? = nil,
            observabilityConfiguration: AppRunnerClientTypes.ServiceObservabilityConfiguration? = nil,
            serviceArn: Swift.String? = nil,
            serviceId: Swift.String? = nil,
            serviceName: Swift.String? = nil,
            serviceUrl: Swift.String? = nil,
            sourceConfiguration: AppRunnerClientTypes.SourceConfiguration? = nil,
            status: AppRunnerClientTypes.ServiceStatus? = nil,
            updatedAt: ClientRuntime.Date? = nil
        )
        {
            self.autoScalingConfigurationSummary = autoScalingConfigurationSummary
            self.createdAt = createdAt
            self.deletedAt = deletedAt
            self.encryptionConfiguration = encryptionConfiguration
            self.healthCheckConfiguration = healthCheckConfiguration
            self.instanceConfiguration = instanceConfiguration
            self.networkConfiguration = networkConfiguration
            self.observabilityConfiguration = observabilityConfiguration
            self.serviceArn = serviceArn
            self.serviceId = serviceId
            self.serviceName = serviceName
            self.serviceUrl = serviceUrl
            self.sourceConfiguration = sourceConfiguration
            self.status = status
            self.updatedAt = updatedAt
        }
    }

}
