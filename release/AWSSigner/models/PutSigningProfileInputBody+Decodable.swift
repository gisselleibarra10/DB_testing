// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutSigningProfileInputBody: Swift.Equatable {
    let signingMaterial: SignerClientTypes.SigningMaterial?
    let signatureValidityPeriod: SignerClientTypes.SignatureValidityPeriod?
    let platformId: Swift.String?
    let overrides: SignerClientTypes.SigningPlatformOverrides?
    let signingParameters: [Swift.String:Swift.String]?
    let tags: [Swift.String:Swift.String]?
}

extension PutSigningProfileInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case overrides
        case platformId
        case signatureValidityPeriod
        case signingMaterial
        case signingParameters
        case tags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let signingMaterialDecoded = try containerValues.decodeIfPresent(SignerClientTypes.SigningMaterial.self, forKey: .signingMaterial)
        signingMaterial = signingMaterialDecoded
        let signatureValidityPeriodDecoded = try containerValues.decodeIfPresent(SignerClientTypes.SignatureValidityPeriod.self, forKey: .signatureValidityPeriod)
        signatureValidityPeriod = signatureValidityPeriodDecoded
        let platformIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .platformId)
        platformId = platformIdDecoded
        let overridesDecoded = try containerValues.decodeIfPresent(SignerClientTypes.SigningPlatformOverrides.self, forKey: .overrides)
        overrides = overridesDecoded
        let signingParametersContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .signingParameters)
        var signingParametersDecoded0: [Swift.String:Swift.String]? = nil
        if let signingParametersContainer = signingParametersContainer {
            signingParametersDecoded0 = [Swift.String:Swift.String]()
            for (key0, signingparametervalue0) in signingParametersContainer {
                if let signingparametervalue0 = signingparametervalue0 {
                    signingParametersDecoded0?[key0] = signingparametervalue0
                }
            }
        }
        signingParameters = signingParametersDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
