// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SignerClientTypes.SigningJobRevocationRecord: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case reason
        case revokedAt
        case revokedBy
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let reason = self.reason {
            try encodeContainer.encode(reason, forKey: .reason)
        }
        if let revokedAt = self.revokedAt {
            try encodeContainer.encode(revokedAt.timeIntervalSince1970, forKey: .revokedAt)
        }
        if let revokedBy = self.revokedBy {
            try encodeContainer.encode(revokedBy, forKey: .revokedBy)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reason)
        reason = reasonDecoded
        let revokedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .revokedAt)
        revokedAt = revokedAtDecoded
        let revokedByDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .revokedBy)
        revokedBy = revokedByDecoded
    }
}
