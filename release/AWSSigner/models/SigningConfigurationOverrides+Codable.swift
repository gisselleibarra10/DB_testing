// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SignerClientTypes.SigningConfigurationOverrides: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case encryptionAlgorithm
        case hashAlgorithm
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let encryptionAlgorithm = self.encryptionAlgorithm {
            try encodeContainer.encode(encryptionAlgorithm.rawValue, forKey: .encryptionAlgorithm)
        }
        if let hashAlgorithm = self.hashAlgorithm {
            try encodeContainer.encode(hashAlgorithm.rawValue, forKey: .hashAlgorithm)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let encryptionAlgorithmDecoded = try containerValues.decodeIfPresent(SignerClientTypes.EncryptionAlgorithm.self, forKey: .encryptionAlgorithm)
        encryptionAlgorithm = encryptionAlgorithmDecoded
        let hashAlgorithmDecoded = try containerValues.decodeIfPresent(SignerClientTypes.HashAlgorithm.self, forKey: .hashAlgorithm)
        hashAlgorithm = hashAlgorithmDecoded
    }
}
