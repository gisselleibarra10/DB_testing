// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartSigningJobInputBody: Swift.Equatable {
    let source: SignerClientTypes.Source?
    let destination: SignerClientTypes.Destination?
    let profileName: Swift.String?
    let clientRequestToken: Swift.String?
    let profileOwner: Swift.String?
}

extension StartSigningJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken
        case destination
        case profileName
        case profileOwner
        case source
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceDecoded = try containerValues.decodeIfPresent(SignerClientTypes.Source.self, forKey: .source)
        source = sourceDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(SignerClientTypes.Destination.self, forKey: .destination)
        destination = destinationDecoded
        let profileNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .profileName)
        profileName = profileNameDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let profileOwnerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .profileOwner)
        profileOwner = profileOwnerDecoded
    }
}
