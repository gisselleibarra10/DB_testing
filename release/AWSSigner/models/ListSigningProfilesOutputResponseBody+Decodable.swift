// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSigningProfilesOutputResponseBody: Swift.Equatable {
    let profiles: [SignerClientTypes.SigningProfile]?
    let nextToken: Swift.String?
}

extension ListSigningProfilesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case profiles
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let profilesContainer = try containerValues.decodeIfPresent([SignerClientTypes.SigningProfile?].self, forKey: .profiles)
        var profilesDecoded0:[SignerClientTypes.SigningProfile]? = nil
        if let profilesContainer = profilesContainer {
            profilesDecoded0 = [SignerClientTypes.SigningProfile]()
            for structure0 in profilesContainer {
                if let structure0 = structure0 {
                    profilesDecoded0?.append(structure0)
                }
            }
        }
        profiles = profilesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
