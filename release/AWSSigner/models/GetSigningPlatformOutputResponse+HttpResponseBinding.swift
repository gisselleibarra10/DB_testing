// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetSigningPlatformOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: GetSigningPlatformOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.category = output.category
            self.displayName = output.displayName
            self.maxSizeInMB = output.maxSizeInMB
            self.partner = output.partner
            self.platformId = output.platformId
            self.revocationSupported = output.revocationSupported
            self.signingConfiguration = output.signingConfiguration
            self.signingImageFormat = output.signingImageFormat
            self.target = output.target
        } else {
            self.category = nil
            self.displayName = nil
            self.maxSizeInMB = 0
            self.partner = nil
            self.platformId = nil
            self.revocationSupported = false
            self.signingConfiguration = nil
            self.signingImageFormat = nil
            self.target = nil
        }
    }
}
