// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SignerClientTypes {
    /// Contains information about the signing configurations and parameters that are used to perform a code signing job.
    public struct SigningPlatform: Swift.Equatable {
        /// The category of a code signing platform.
        public var category: SignerClientTypes.Category?
        /// The display name of a code signing platform.
        public var displayName: Swift.String?
        /// The maximum size (in MB) of code that can be signed by a code signing platform.
        public var maxSizeInMB: Swift.Int
        /// Any partner entities linked to a code signing platform.
        public var partner: Swift.String?
        /// The ID of a code signing; platform.
        public var platformId: Swift.String?
        /// Indicates whether revocation is supported for the platform.
        public var revocationSupported: Swift.Bool
        /// The configuration of a code signing platform. This includes the designated hash algorithm and encryption algorithm of a signing platform.
        public var signingConfiguration: SignerClientTypes.SigningConfiguration?
        /// The image format of a code signing platform or profile.
        public var signingImageFormat: SignerClientTypes.SigningImageFormat?
        /// The types of targets that can be signed by a code signing platform.
        public var target: Swift.String?

        public init (
            category: SignerClientTypes.Category? = nil,
            displayName: Swift.String? = nil,
            maxSizeInMB: Swift.Int = 0,
            partner: Swift.String? = nil,
            platformId: Swift.String? = nil,
            revocationSupported: Swift.Bool = false,
            signingConfiguration: SignerClientTypes.SigningConfiguration? = nil,
            signingImageFormat: SignerClientTypes.SigningImageFormat? = nil,
            target: Swift.String? = nil
        )
        {
            self.category = category
            self.displayName = displayName
            self.maxSizeInMB = maxSizeInMB
            self.partner = partner
            self.platformId = platformId
            self.revocationSupported = revocationSupported
            self.signingConfiguration = signingConfiguration
            self.signingImageFormat = signingImageFormat
            self.target = target
        }
    }

}
