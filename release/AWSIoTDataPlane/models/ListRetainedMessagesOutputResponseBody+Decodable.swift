// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRetainedMessagesOutputResponseBody: Swift.Equatable {
    let retainedTopics: [IotDataPlaneClientTypes.RetainedMessageSummary]?
    let nextToken: Swift.String?
}

extension ListRetainedMessagesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case retainedTopics
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let retainedTopicsContainer = try containerValues.decodeIfPresent([IotDataPlaneClientTypes.RetainedMessageSummary?].self, forKey: .retainedTopics)
        var retainedTopicsDecoded0:[IotDataPlaneClientTypes.RetainedMessageSummary]? = nil
        if let retainedTopicsContainer = retainedTopicsContainer {
            retainedTopicsDecoded0 = [IotDataPlaneClientTypes.RetainedMessageSummary]()
            for structure0 in retainedTopicsContainer {
                if let structure0 = structure0 {
                    retainedTopicsDecoded0?.append(structure0)
                }
            }
        }
        retainedTopics = retainedTopicsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
