// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotDataPlaneClientTypes.RetainedMessageSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastModifiedTime
        case payloadSize
        case qos
        case topic
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if lastModifiedTime != 0 {
            try encodeContainer.encode(lastModifiedTime, forKey: .lastModifiedTime)
        }
        if payloadSize != 0 {
            try encodeContainer.encode(payloadSize, forKey: .payloadSize)
        }
        if qos != 0 {
            try encodeContainer.encode(qos, forKey: .qos)
        }
        if let topic = self.topic {
            try encodeContainer.encode(topic, forKey: .topic)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let topicDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .topic)
        topic = topicDecoded
        let payloadSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .payloadSize) ?? 0
        payloadSize = payloadSizeDecoded
        let qosDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .qos) ?? 0
        qos = qosDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .lastModifiedTime) ?? 0
        lastModifiedTime = lastModifiedTimeDecoded
    }
}
