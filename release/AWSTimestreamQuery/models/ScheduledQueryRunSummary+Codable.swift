// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TimestreamQueryClientTypes.ScheduledQueryRunSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errorReportLocation = "ErrorReportLocation"
        case executionStats = "ExecutionStats"
        case failureReason = "FailureReason"
        case invocationTime = "InvocationTime"
        case runStatus = "RunStatus"
        case triggerTime = "TriggerTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errorReportLocation = self.errorReportLocation {
            try encodeContainer.encode(errorReportLocation, forKey: .errorReportLocation)
        }
        if let executionStats = self.executionStats {
            try encodeContainer.encode(executionStats, forKey: .executionStats)
        }
        if let failureReason = self.failureReason {
            try encodeContainer.encode(failureReason, forKey: .failureReason)
        }
        if let invocationTime = self.invocationTime {
            try encodeContainer.encode(invocationTime.timeIntervalSince1970, forKey: .invocationTime)
        }
        if let runStatus = self.runStatus {
            try encodeContainer.encode(runStatus.rawValue, forKey: .runStatus)
        }
        if let triggerTime = self.triggerTime {
            try encodeContainer.encode(triggerTime.timeIntervalSince1970, forKey: .triggerTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let invocationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .invocationTime)
        invocationTime = invocationTimeDecoded
        let triggerTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .triggerTime)
        triggerTime = triggerTimeDecoded
        let runStatusDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.ScheduledQueryRunStatus.self, forKey: .runStatus)
        runStatus = runStatusDecoded
        let executionStatsDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.ExecutionStats.self, forKey: .executionStats)
        executionStats = executionStatsDecoded
        let errorReportLocationDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.ErrorReportLocation.self, forKey: .errorReportLocation)
        errorReportLocation = errorReportLocationDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
    }
}
