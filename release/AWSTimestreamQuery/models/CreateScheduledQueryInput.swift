// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateScheduledQueryInput: Swift.Equatable {
    /// Using a ClientToken makes the call to CreateScheduledQuery idempotent, in other words, making the same request repeatedly will produce the same result. Making multiple identical CreateScheduledQuery requests has the same effect as making a single request.
    ///
    /// * If CreateScheduledQuery is called without a ClientToken, the Query SDK generates a ClientToken on your behalf.
    ///
    /// * After 8 hours, any request with the same ClientToken is treated as a new request.
    public var clientToken: Swift.String?
    /// Configuration for error reporting. Error reports will be generated when a problem is encountered when writing the query results.
    /// This member is required.
    public var errorReportConfiguration: TimestreamQueryClientTypes.ErrorReportConfiguration?
    /// The Amazon KMS key used to encrypt the scheduled query resource, at-rest. If the Amazon KMS key is not specified, the scheduled query resource will be encrypted with a Timestream owned Amazon KMS key. To specify a KMS key, use the key ID, key ARN, alias name, or alias ARN. When using an alias name, prefix the name with alias/ If ErrorReportConfiguration uses SSE_KMS as encryption type, the same KmsKeyId is used to encrypt the error report at rest.
    public var kmsKeyId: Swift.String?
    /// Name of the scheduled query.
    /// This member is required.
    public var name: Swift.String?
    /// Notification configuration for the scheduled query. A notification is sent by Timestream when a query run finishes, when the state is updated or when you delete it.
    /// This member is required.
    public var notificationConfiguration: TimestreamQueryClientTypes.NotificationConfiguration?
    /// The query string to run. Parameter names can be specified in the query string @ character followed by an identifier. The named Parameter @scheduled_runtime is reserved and can be used in the query to get the time at which the query is scheduled to run. The timestamp calculated according to the ScheduleConfiguration parameter, will be the value of @scheduled_runtime paramater for each query run. For example, consider an instance of a scheduled query executing on 2021-12-01 00:00:00. For this instance, the @scheduled_runtime parameter is initialized to the timestamp 2021-12-01 00:00:00 when invoking the query.
    /// This member is required.
    public var queryString: Swift.String?
    /// The schedule configuration for the query.
    /// This member is required.
    public var scheduleConfiguration: TimestreamQueryClientTypes.ScheduleConfiguration?
    /// The ARN for the IAM role that Timestream will assume when running the scheduled query.
    /// This member is required.
    public var scheduledQueryExecutionRoleArn: Swift.String?
    /// A list of key-value pairs to label the scheduled query.
    public var tags: [TimestreamQueryClientTypes.Tag]?
    /// Configuration used for writing the result of a query.
    public var targetConfiguration: TimestreamQueryClientTypes.TargetConfiguration?

    public init (
        clientToken: Swift.String? = nil,
        errorReportConfiguration: TimestreamQueryClientTypes.ErrorReportConfiguration? = nil,
        kmsKeyId: Swift.String? = nil,
        name: Swift.String? = nil,
        notificationConfiguration: TimestreamQueryClientTypes.NotificationConfiguration? = nil,
        queryString: Swift.String? = nil,
        scheduleConfiguration: TimestreamQueryClientTypes.ScheduleConfiguration? = nil,
        scheduledQueryExecutionRoleArn: Swift.String? = nil,
        tags: [TimestreamQueryClientTypes.Tag]? = nil,
        targetConfiguration: TimestreamQueryClientTypes.TargetConfiguration? = nil
    )
    {
        self.clientToken = clientToken
        self.errorReportConfiguration = errorReportConfiguration
        self.kmsKeyId = kmsKeyId
        self.name = name
        self.notificationConfiguration = notificationConfiguration
        self.queryString = queryString
        self.scheduleConfiguration = scheduleConfiguration
        self.scheduledQueryExecutionRoleArn = scheduledQueryExecutionRoleArn
        self.tags = tags
        self.targetConfiguration = targetConfiguration
    }
}
