// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TimestreamQueryClientTypes.Datum: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arrayValue = "ArrayValue"
        case nullValue = "NullValue"
        case rowValue = "RowValue"
        case scalarValue = "ScalarValue"
        case timeSeriesValue = "TimeSeriesValue"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arrayValue = arrayValue {
            var arrayValueContainer = encodeContainer.nestedUnkeyedContainer(forKey: .arrayValue)
            for datumlist0 in arrayValue {
                try arrayValueContainer.encode(datumlist0)
            }
        }
        if let nullValue = self.nullValue {
            try encodeContainer.encode(nullValue, forKey: .nullValue)
        }
        if let rowValue = self.rowValue {
            try encodeContainer.encode(rowValue, forKey: .rowValue)
        }
        if let scalarValue = self.scalarValue {
            try encodeContainer.encode(scalarValue, forKey: .scalarValue)
        }
        if let timeSeriesValue = timeSeriesValue {
            var timeSeriesValueContainer = encodeContainer.nestedUnkeyedContainer(forKey: .timeSeriesValue)
            for timeseriesdatapointlist0 in timeSeriesValue {
                try timeSeriesValueContainer.encode(timeseriesdatapointlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scalarValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .scalarValue)
        scalarValue = scalarValueDecoded
        let timeSeriesValueContainer = try containerValues.decodeIfPresent([TimestreamQueryClientTypes.TimeSeriesDataPoint?].self, forKey: .timeSeriesValue)
        var timeSeriesValueDecoded0:[TimestreamQueryClientTypes.TimeSeriesDataPoint]? = nil
        if let timeSeriesValueContainer = timeSeriesValueContainer {
            timeSeriesValueDecoded0 = [TimestreamQueryClientTypes.TimeSeriesDataPoint]()
            for structure0 in timeSeriesValueContainer {
                if let structure0 = structure0 {
                    timeSeriesValueDecoded0?.append(structure0)
                }
            }
        }
        timeSeriesValue = timeSeriesValueDecoded0
        let arrayValueContainer = try containerValues.decodeIfPresent([TimestreamQueryClientTypes.Datum?].self, forKey: .arrayValue)
        var arrayValueDecoded0:[TimestreamQueryClientTypes.Datum]? = nil
        if let arrayValueContainer = arrayValueContainer {
            arrayValueDecoded0 = [TimestreamQueryClientTypes.Datum]()
            for structure0 in arrayValueContainer {
                if let structure0 = structure0 {
                    arrayValueDecoded0?.append(structure0)
                }
            }
        }
        arrayValue = arrayValueDecoded0
        let rowValueDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.Row.self, forKey: .rowValue)
        rowValue = rowValueDecoded
        let nullValueDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .nullValue)
        nullValue = nullValueDecoded
    }
}
