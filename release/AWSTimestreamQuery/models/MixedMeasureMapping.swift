// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension TimestreamQueryClientTypes {
    /// MixedMeasureMappings are mappings that can be used to ingest data into a mixture of narrow and multi measures in the derived table.
    public struct MixedMeasureMapping: Swift.Equatable {
        /// Refers to the value of measure_name in a result row. This field is required if MeasureNameColumn is provided.
        public var measureName: Swift.String?
        /// Type of the value that is to be read from sourceColumn. If the mapping is for MULTI, use MeasureValueType.MULTI.
        /// This member is required.
        public var measureValueType: TimestreamQueryClientTypes.MeasureValueType?
        /// Required when measureValueType is MULTI. Attribute mappings for MULTI value measures.
        public var multiMeasureAttributeMappings: [TimestreamQueryClientTypes.MultiMeasureAttributeMapping]?
        /// This field refers to the source column from which measure-value is to be read for result materialization.
        public var sourceColumn: Swift.String?
        /// Target measure name to be used. If not provided, the target measure name by default would be measure-name if provided, or sourceColumn otherwise.
        public var targetMeasureName: Swift.String?

        public init (
            measureName: Swift.String? = nil,
            measureValueType: TimestreamQueryClientTypes.MeasureValueType? = nil,
            multiMeasureAttributeMappings: [TimestreamQueryClientTypes.MultiMeasureAttributeMapping]? = nil,
            sourceColumn: Swift.String? = nil,
            targetMeasureName: Swift.String? = nil
        )
        {
            self.measureName = measureName
            self.measureValueType = measureValueType
            self.multiMeasureAttributeMappings = multiMeasureAttributeMappings
            self.sourceColumn = sourceColumn
            self.targetMeasureName = targetMeasureName
        }
    }

}
