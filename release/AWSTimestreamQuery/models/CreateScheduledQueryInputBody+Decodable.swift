// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateScheduledQueryInputBody: Swift.Equatable {
    let name: Swift.String?
    let queryString: Swift.String?
    let scheduleConfiguration: TimestreamQueryClientTypes.ScheduleConfiguration?
    let notificationConfiguration: TimestreamQueryClientTypes.NotificationConfiguration?
    let targetConfiguration: TimestreamQueryClientTypes.TargetConfiguration?
    let clientToken: Swift.String?
    let scheduledQueryExecutionRoleArn: Swift.String?
    let tags: [TimestreamQueryClientTypes.Tag]?
    let kmsKeyId: Swift.String?
    let errorReportConfiguration: TimestreamQueryClientTypes.ErrorReportConfiguration?
}

extension CreateScheduledQueryInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case errorReportConfiguration = "ErrorReportConfiguration"
        case kmsKeyId = "KmsKeyId"
        case name = "Name"
        case notificationConfiguration = "NotificationConfiguration"
        case queryString = "QueryString"
        case scheduleConfiguration = "ScheduleConfiguration"
        case scheduledQueryExecutionRoleArn = "ScheduledQueryExecutionRoleArn"
        case tags = "Tags"
        case targetConfiguration = "TargetConfiguration"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let queryStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryString)
        queryString = queryStringDecoded
        let scheduleConfigurationDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.ScheduleConfiguration.self, forKey: .scheduleConfiguration)
        scheduleConfiguration = scheduleConfigurationDecoded
        let notificationConfigurationDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.NotificationConfiguration.self, forKey: .notificationConfiguration)
        notificationConfiguration = notificationConfigurationDecoded
        let targetConfigurationDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.TargetConfiguration.self, forKey: .targetConfiguration)
        targetConfiguration = targetConfigurationDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let scheduledQueryExecutionRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .scheduledQueryExecutionRoleArn)
        scheduledQueryExecutionRoleArn = scheduledQueryExecutionRoleArnDecoded
        let tagsContainer = try containerValues.decodeIfPresent([TimestreamQueryClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[TimestreamQueryClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [TimestreamQueryClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
        let kmsKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyId)
        kmsKeyId = kmsKeyIdDecoded
        let errorReportConfigurationDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.ErrorReportConfiguration.self, forKey: .errorReportConfiguration)
        errorReportConfiguration = errorReportConfigurationDecoded
    }
}
