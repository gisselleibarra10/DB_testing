// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TimestreamQueryClientTypes.MultiMeasureMappings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case multiMeasureAttributeMappings = "MultiMeasureAttributeMappings"
        case targetMultiMeasureName = "TargetMultiMeasureName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let multiMeasureAttributeMappings = multiMeasureAttributeMappings {
            var multiMeasureAttributeMappingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .multiMeasureAttributeMappings)
            for multimeasureattributemappinglist0 in multiMeasureAttributeMappings {
                try multiMeasureAttributeMappingsContainer.encode(multimeasureattributemappinglist0)
            }
        }
        if let targetMultiMeasureName = self.targetMultiMeasureName {
            try encodeContainer.encode(targetMultiMeasureName, forKey: .targetMultiMeasureName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetMultiMeasureNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetMultiMeasureName)
        targetMultiMeasureName = targetMultiMeasureNameDecoded
        let multiMeasureAttributeMappingsContainer = try containerValues.decodeIfPresent([TimestreamQueryClientTypes.MultiMeasureAttributeMapping?].self, forKey: .multiMeasureAttributeMappings)
        var multiMeasureAttributeMappingsDecoded0:[TimestreamQueryClientTypes.MultiMeasureAttributeMapping]? = nil
        if let multiMeasureAttributeMappingsContainer = multiMeasureAttributeMappingsContainer {
            multiMeasureAttributeMappingsDecoded0 = [TimestreamQueryClientTypes.MultiMeasureAttributeMapping]()
            for structure0 in multiMeasureAttributeMappingsContainer {
                if let structure0 = structure0 {
                    multiMeasureAttributeMappingsDecoded0?.append(structure0)
                }
            }
        }
        multiMeasureAttributeMappings = multiMeasureAttributeMappingsDecoded0
    }
}
