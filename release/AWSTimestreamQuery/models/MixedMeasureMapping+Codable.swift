// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TimestreamQueryClientTypes.MixedMeasureMapping: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case measureName = "MeasureName"
        case measureValueType = "MeasureValueType"
        case multiMeasureAttributeMappings = "MultiMeasureAttributeMappings"
        case sourceColumn = "SourceColumn"
        case targetMeasureName = "TargetMeasureName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let measureName = self.measureName {
            try encodeContainer.encode(measureName, forKey: .measureName)
        }
        if let measureValueType = self.measureValueType {
            try encodeContainer.encode(measureValueType.rawValue, forKey: .measureValueType)
        }
        if let multiMeasureAttributeMappings = multiMeasureAttributeMappings {
            var multiMeasureAttributeMappingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .multiMeasureAttributeMappings)
            for multimeasureattributemappinglist0 in multiMeasureAttributeMappings {
                try multiMeasureAttributeMappingsContainer.encode(multimeasureattributemappinglist0)
            }
        }
        if let sourceColumn = self.sourceColumn {
            try encodeContainer.encode(sourceColumn, forKey: .sourceColumn)
        }
        if let targetMeasureName = self.targetMeasureName {
            try encodeContainer.encode(targetMeasureName, forKey: .targetMeasureName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let measureNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .measureName)
        measureName = measureNameDecoded
        let sourceColumnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceColumn)
        sourceColumn = sourceColumnDecoded
        let targetMeasureNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetMeasureName)
        targetMeasureName = targetMeasureNameDecoded
        let measureValueTypeDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.MeasureValueType.self, forKey: .measureValueType)
        measureValueType = measureValueTypeDecoded
        let multiMeasureAttributeMappingsContainer = try containerValues.decodeIfPresent([TimestreamQueryClientTypes.MultiMeasureAttributeMapping?].self, forKey: .multiMeasureAttributeMappings)
        var multiMeasureAttributeMappingsDecoded0:[TimestreamQueryClientTypes.MultiMeasureAttributeMapping]? = nil
        if let multiMeasureAttributeMappingsContainer = multiMeasureAttributeMappingsContainer {
            multiMeasureAttributeMappingsDecoded0 = [TimestreamQueryClientTypes.MultiMeasureAttributeMapping]()
            for structure0 in multiMeasureAttributeMappingsContainer {
                if let structure0 = structure0 {
                    multiMeasureAttributeMappingsDecoded0?.append(structure0)
                }
            }
        }
        multiMeasureAttributeMappings = multiMeasureAttributeMappingsDecoded0
    }
}
