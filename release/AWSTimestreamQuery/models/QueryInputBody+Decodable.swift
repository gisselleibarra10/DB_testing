// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct QueryInputBody: Swift.Equatable {
    let queryString: Swift.String?
    let clientToken: Swift.String?
    let nextToken: Swift.String?
    let maxRows: Swift.Int?
}

extension QueryInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case maxRows = "MaxRows"
        case nextToken = "NextToken"
        case queryString = "QueryString"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queryStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryString)
        queryString = queryStringDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxRowsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxRows)
        maxRows = maxRowsDecoded
    }
}
