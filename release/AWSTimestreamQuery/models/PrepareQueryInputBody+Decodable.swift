// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PrepareQueryInputBody: Swift.Equatable {
    let queryString: Swift.String?
    let validateOnly: Swift.Bool?
}

extension PrepareQueryInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case queryString = "QueryString"
        case validateOnly = "ValidateOnly"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queryStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryString)
        queryString = queryStringDecoded
        let validateOnlyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .validateOnly)
        validateOnly = validateOnlyDecoded
    }
}
