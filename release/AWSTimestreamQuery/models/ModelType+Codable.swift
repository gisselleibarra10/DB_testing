// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TimestreamQueryClientTypes.ModelType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arrayColumnInfo = "ArrayColumnInfo"
        case rowColumnInfo = "RowColumnInfo"
        case scalarType = "ScalarType"
        case timeSeriesMeasureValueColumnInfo = "TimeSeriesMeasureValueColumnInfo"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arrayColumnInfo = self.arrayColumnInfo {
            try encodeContainer.encode(arrayColumnInfo, forKey: .arrayColumnInfo)
        }
        if let rowColumnInfo = rowColumnInfo {
            var rowColumnInfoContainer = encodeContainer.nestedUnkeyedContainer(forKey: .rowColumnInfo)
            for columninfolist0 in rowColumnInfo {
                try rowColumnInfoContainer.encode(columninfolist0)
            }
        }
        if let scalarType = self.scalarType {
            try encodeContainer.encode(scalarType.rawValue, forKey: .scalarType)
        }
        if let timeSeriesMeasureValueColumnInfo = self.timeSeriesMeasureValueColumnInfo {
            try encodeContainer.encode(timeSeriesMeasureValueColumnInfo, forKey: .timeSeriesMeasureValueColumnInfo)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scalarTypeDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.ScalarType.self, forKey: .scalarType)
        scalarType = scalarTypeDecoded
        let arrayColumnInfoDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.ColumnInfo.self, forKey: .arrayColumnInfo)
        arrayColumnInfo = arrayColumnInfoDecoded
        let timeSeriesMeasureValueColumnInfoDecoded = try containerValues.decodeIfPresent(TimestreamQueryClientTypes.ColumnInfo.self, forKey: .timeSeriesMeasureValueColumnInfo)
        timeSeriesMeasureValueColumnInfo = timeSeriesMeasureValueColumnInfoDecoded
        let rowColumnInfoContainer = try containerValues.decodeIfPresent([TimestreamQueryClientTypes.ColumnInfo?].self, forKey: .rowColumnInfo)
        var rowColumnInfoDecoded0:[TimestreamQueryClientTypes.ColumnInfo]? = nil
        if let rowColumnInfoContainer = rowColumnInfoContainer {
            rowColumnInfoDecoded0 = [TimestreamQueryClientTypes.ColumnInfo]()
            for structure0 in rowColumnInfoContainer {
                if let structure0 = structure0 {
                    rowColumnInfoDecoded0?.append(structure0)
                }
            }
        }
        rowColumnInfo = rowColumnInfoDecoded0
    }
}
