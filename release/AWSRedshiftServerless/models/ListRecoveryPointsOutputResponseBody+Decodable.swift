// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecoveryPointsOutputResponseBody: Swift.Equatable {
    let recoveryPoints: [RedshiftServerlessClientTypes.RecoveryPoint]?
    let nextToken: Swift.String?
}

extension ListRecoveryPointsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case recoveryPoints
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recoveryPointsContainer = try containerValues.decodeIfPresent([RedshiftServerlessClientTypes.RecoveryPoint?].self, forKey: .recoveryPoints)
        var recoveryPointsDecoded0:[RedshiftServerlessClientTypes.RecoveryPoint]? = nil
        if let recoveryPointsContainer = recoveryPointsContainer {
            recoveryPointsDecoded0 = [RedshiftServerlessClientTypes.RecoveryPoint]()
            for structure0 in recoveryPointsContainer {
                if let structure0 = structure0 {
                    recoveryPointsDecoded0?.append(structure0)
                }
            }
        }
        recoveryPoints = recoveryPointsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
