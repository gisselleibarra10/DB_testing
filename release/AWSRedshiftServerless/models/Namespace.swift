// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftServerlessClientTypes {
    /// A collection of database objects and users.
    public struct Namespace: Swift.Equatable {
        /// The username of the administrator for the first database created in the namespace.
        public var adminUsername: Swift.String?
        /// The date of when the namespace was created.
        public var creationDate: ClientRuntime.Date?
        /// The name of the first database created in the namespace.
        public var dbName: Swift.String?
        /// The Amazon Resource Name (ARN) of the IAM role to set as a default in the namespace.
        public var defaultIamRoleArn: Swift.String?
        /// A list of IAM roles to associate with the namespace.
        public var iamRoles: [Swift.String]?
        /// The ID of the Amazon Web Services Key Management Service key used to encrypt your data.
        public var kmsKeyId: Swift.String?
        /// The types of logs the namespace can export. Available export types are User log, Connection log, and User activity log.
        public var logExports: [RedshiftServerlessClientTypes.LogExport]?
        /// The Amazon Resource Name (ARN) associated with a namespace.
        public var namespaceArn: Swift.String?
        /// The unique identifier of a namespace.
        public var namespaceId: Swift.String?
        /// The name of the namespace. Must be between 3-64 alphanumeric characters in lowercase, and it cannot be a reserved word. A list of reserved words can be found in [Reserved Words](https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html) in the Amazon Redshift Database Developer Guide.
        public var namespaceName: Swift.String?
        /// The status of the namespace.
        public var status: RedshiftServerlessClientTypes.NamespaceStatus?

        public init (
            adminUsername: Swift.String? = nil,
            creationDate: ClientRuntime.Date? = nil,
            dbName: Swift.String? = nil,
            defaultIamRoleArn: Swift.String? = nil,
            iamRoles: [Swift.String]? = nil,
            kmsKeyId: Swift.String? = nil,
            logExports: [RedshiftServerlessClientTypes.LogExport]? = nil,
            namespaceArn: Swift.String? = nil,
            namespaceId: Swift.String? = nil,
            namespaceName: Swift.String? = nil,
            status: RedshiftServerlessClientTypes.NamespaceStatus? = nil
        )
        {
            self.adminUsername = adminUsername
            self.creationDate = creationDate
            self.dbName = dbName
            self.defaultIamRoleArn = defaultIamRoleArn
            self.iamRoles = iamRoles
            self.kmsKeyId = kmsKeyId
            self.logExports = logExports
            self.namespaceArn = namespaceArn
            self.namespaceId = namespaceId
            self.namespaceName = namespaceName
            self.status = status
        }
    }

}
