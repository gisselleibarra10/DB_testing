// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateNamespaceInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case adminUserPassword
        case adminUsername
        case defaultIamRoleArn
        case iamRoles
        case kmsKeyId
        case logExports
        case namespaceName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let adminUserPassword = self.adminUserPassword {
            try encodeContainer.encode(adminUserPassword, forKey: .adminUserPassword)
        }
        if let adminUsername = self.adminUsername {
            try encodeContainer.encode(adminUsername, forKey: .adminUsername)
        }
        if let defaultIamRoleArn = self.defaultIamRoleArn {
            try encodeContainer.encode(defaultIamRoleArn, forKey: .defaultIamRoleArn)
        }
        if let iamRoles = iamRoles {
            var iamRolesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .iamRoles)
            for iamrolearnlist0 in iamRoles {
                try iamRolesContainer.encode(iamrolearnlist0)
            }
        }
        if let kmsKeyId = self.kmsKeyId {
            try encodeContainer.encode(kmsKeyId, forKey: .kmsKeyId)
        }
        if let logExports = logExports {
            var logExportsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .logExports)
            for logexportlist0 in logExports {
                try logExportsContainer.encode(logexportlist0.rawValue)
            }
        }
        if let namespaceName = self.namespaceName {
            try encodeContainer.encode(namespaceName, forKey: .namespaceName)
        }
    }
}
