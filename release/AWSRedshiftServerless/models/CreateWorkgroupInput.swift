// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateWorkgroupInput: Swift.Equatable {
    /// The base data warehouse capacity of the workgroup in Redshift Processing Units (RPUs).
    public var baseCapacity: Swift.Int?
    /// An array of parameters to set for more control over a serverless database. The options are datestyle, enable_user_activity_logging, query_group, search_path, and max_query_execution_time.
    public var configParameters: [RedshiftServerlessClientTypes.ConfigParameter]?
    /// The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
    public var enhancedVpcRouting: Swift.Bool?
    /// The name of the namespace to associate with the workgroup.
    /// This member is required.
    public var namespaceName: Swift.String?
    /// A value that specifies whether the workgroup can be accessed from a public network.
    public var publiclyAccessible: Swift.Bool?
    /// An array of security group IDs to associate with the workgroup.
    public var securityGroupIds: [Swift.String]?
    /// An array of VPC subnet IDs to associate with the workgroup.
    public var subnetIds: [Swift.String]?
    /// A array of tag instances.
    public var tags: [RedshiftServerlessClientTypes.Tag]?
    /// The name of the created workgroup.
    /// This member is required.
    public var workgroupName: Swift.String?

    public init (
        baseCapacity: Swift.Int? = nil,
        configParameters: [RedshiftServerlessClientTypes.ConfigParameter]? = nil,
        enhancedVpcRouting: Swift.Bool? = nil,
        namespaceName: Swift.String? = nil,
        publiclyAccessible: Swift.Bool? = nil,
        securityGroupIds: [Swift.String]? = nil,
        subnetIds: [Swift.String]? = nil,
        tags: [RedshiftServerlessClientTypes.Tag]? = nil,
        workgroupName: Swift.String? = nil
    )
    {
        self.baseCapacity = baseCapacity
        self.configParameters = configParameters
        self.enhancedVpcRouting = enhancedVpcRouting
        self.namespaceName = namespaceName
        self.publiclyAccessible = publiclyAccessible
        self.securityGroupIds = securityGroupIds
        self.subnetIds = subnetIds
        self.tags = tags
        self.workgroupName = workgroupName
    }
}
