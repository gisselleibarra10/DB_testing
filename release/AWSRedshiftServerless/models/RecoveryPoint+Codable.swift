// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftServerlessClientTypes.RecoveryPoint: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case namespaceName
        case recoveryPointCreateTime
        case recoveryPointId
        case totalSizeInMegaBytes
        case workgroupName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let namespaceName = self.namespaceName {
            try encodeContainer.encode(namespaceName, forKey: .namespaceName)
        }
        if let recoveryPointCreateTime = self.recoveryPointCreateTime {
            try encodeContainer.encode(recoveryPointCreateTime.iso8601WithoutFractionalSeconds(), forKey: .recoveryPointCreateTime)
        }
        if let recoveryPointId = self.recoveryPointId {
            try encodeContainer.encode(recoveryPointId, forKey: .recoveryPointId)
        }
        if let totalSizeInMegaBytes = self.totalSizeInMegaBytes {
            try encodeContainer.encode(totalSizeInMegaBytes, forKey: .totalSizeInMegaBytes)
        }
        if let workgroupName = self.workgroupName {
            try encodeContainer.encode(workgroupName, forKey: .workgroupName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recoveryPointIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recoveryPointId)
        recoveryPointId = recoveryPointIdDecoded
        let recoveryPointCreateTimeDateString = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recoveryPointCreateTime)
        var recoveryPointCreateTimeDecoded: ClientRuntime.Date? = nil
        if let recoveryPointCreateTimeDateString = recoveryPointCreateTimeDateString {
            let recoveryPointCreateTimeFormatter = ClientRuntime.DateFormatter.iso8601DateFormatterWithoutFractionalSeconds
            recoveryPointCreateTimeDecoded = recoveryPointCreateTimeFormatter.date(from: recoveryPointCreateTimeDateString)
        }
        recoveryPointCreateTime = recoveryPointCreateTimeDecoded
        let totalSizeInMegaBytesDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .totalSizeInMegaBytes)
        totalSizeInMegaBytes = totalSizeInMegaBytesDecoded
        let namespaceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .namespaceName)
        namespaceName = namespaceNameDecoded
        let workgroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .workgroupName)
        workgroupName = workgroupNameDecoded
    }
}
