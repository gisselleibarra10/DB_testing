// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSnapshotsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let snapshots: [RedshiftServerlessClientTypes.Snapshot]?
}

extension ListSnapshotsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case snapshots
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let snapshotsContainer = try containerValues.decodeIfPresent([RedshiftServerlessClientTypes.Snapshot?].self, forKey: .snapshots)
        var snapshotsDecoded0:[RedshiftServerlessClientTypes.Snapshot]? = nil
        if let snapshotsContainer = snapshotsContainer {
            snapshotsDecoded0 = [RedshiftServerlessClientTypes.Snapshot]()
            for structure0 in snapshotsContainer {
                if let structure0 = structure0 {
                    snapshotsDecoded0?.append(structure0)
                }
            }
        }
        snapshots = snapshotsDecoded0
    }
}
