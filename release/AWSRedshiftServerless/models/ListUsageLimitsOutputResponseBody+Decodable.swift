// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUsageLimitsOutputResponseBody: Swift.Equatable {
    let usageLimits: [RedshiftServerlessClientTypes.UsageLimit]?
    let nextToken: Swift.String?
}

extension ListUsageLimitsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case usageLimits
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let usageLimitsContainer = try containerValues.decodeIfPresent([RedshiftServerlessClientTypes.UsageLimit?].self, forKey: .usageLimits)
        var usageLimitsDecoded0:[RedshiftServerlessClientTypes.UsageLimit]? = nil
        if let usageLimitsContainer = usageLimitsContainer {
            usageLimitsDecoded0 = [RedshiftServerlessClientTypes.UsageLimit]()
            for structure0 in usageLimitsContainer {
                if let structure0 = structure0 {
                    usageLimitsDecoded0?.append(structure0)
                }
            }
        }
        usageLimits = usageLimitsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
