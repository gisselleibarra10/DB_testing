// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationDependenciesOutputResponseBody: Swift.Equatable {
    let dependencies: [ServerlessApplicationRepositoryClientTypes.ApplicationDependencySummary]?
    let nextToken: Swift.String?
}

extension ListApplicationDependenciesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dependencies = "dependencies"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dependenciesContainer = try containerValues.decodeIfPresent([ServerlessApplicationRepositoryClientTypes.ApplicationDependencySummary?].self, forKey: .dependencies)
        var dependenciesDecoded0:[ServerlessApplicationRepositoryClientTypes.ApplicationDependencySummary]? = nil
        if let dependenciesContainer = dependenciesContainer {
            dependenciesDecoded0 = [ServerlessApplicationRepositoryClientTypes.ApplicationDependencySummary]()
            for structure0 in dependenciesContainer {
                if let structure0 = structure0 {
                    dependenciesDecoded0?.append(structure0)
                }
            }
        }
        dependencies = dependenciesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
