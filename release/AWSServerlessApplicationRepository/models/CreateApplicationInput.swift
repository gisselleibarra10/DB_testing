// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateApplicationInput: Swift.Equatable {
    /// The name of the author publishing the app.Minimum length=1. Maximum length=127.Pattern "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";
    /// This member is required.
    public var author: Swift.String?
    /// The description of the application.Minimum length=1. Maximum length=256
    /// This member is required.
    public var description: Swift.String?
    /// A URL with more information about the application, for example the location of your GitHub repository for the application.
    public var homePageUrl: Swift.String?
    /// Labels to improve discovery of apps in search results.Minimum length=1. Maximum length=127. Maximum number of labels: 10Pattern: "^[a-zA-Z0-9+\\-_:\\/@]+$";
    public var labels: [Swift.String]?
    /// A local text file that contains the license of the app that matches the spdxLicenseID value of your application. The file has the format file://<path>/<filename>.Maximum size 5 MBYou can specify only one of licenseBody and licenseUrl; otherwise, an error results.
    public var licenseBody: Swift.String?
    /// A link to the S3 object that contains the license of the app that matches the spdxLicenseID value of your application.Maximum size 5 MBYou can specify only one of licenseBody and licenseUrl; otherwise, an error results.
    public var licenseUrl: Swift.String?
    /// The name of the application that you want to publish.Minimum length=1. Maximum length=140Pattern: "[a-zA-Z0-9\\-]+";
    /// This member is required.
    public var name: Swift.String?
    /// A local text readme file in Markdown language that contains a more detailed description of the application and how it works. The file has the format file://<path>/<filename>.Maximum size 5 MBYou can specify only one of readmeBody and readmeUrl; otherwise, an error results.
    public var readmeBody: Swift.String?
    /// A link to the S3 object in Markdown language that contains a more detailed description of the application and how it works.Maximum size 5 MBYou can specify only one of readmeBody and readmeUrl; otherwise, an error results.
    public var readmeUrl: Swift.String?
    /// The semantic version of the application: [https://semver.org/](https://semver.org/)
    public var semanticVersion: Swift.String?
    /// A link to the S3 object that contains the ZIP archive of the source code for this version of your application.Maximum size 50 MB
    public var sourceCodeArchiveUrl: Swift.String?
    /// A link to a public repository for the source code of your application, for example the URL of a specific GitHub commit.
    public var sourceCodeUrl: Swift.String?
    /// A valid identifier from [https://spdx.org/licenses/](https://spdx.org/licenses/).
    public var spdxLicenseId: Swift.String?
    /// The local raw packaged AWS SAM template file of your application. The file has the format file://<path>/<filename>.You can specify only one of templateBody and templateUrl; otherwise an error results.
    public var templateBody: Swift.String?
    /// A link to the S3 object containing the packaged AWS SAM template of your application.You can specify only one of templateBody and templateUrl; otherwise an error results.
    public var templateUrl: Swift.String?

    public init (
        author: Swift.String? = nil,
        description: Swift.String? = nil,
        homePageUrl: Swift.String? = nil,
        labels: [Swift.String]? = nil,
        licenseBody: Swift.String? = nil,
        licenseUrl: Swift.String? = nil,
        name: Swift.String? = nil,
        readmeBody: Swift.String? = nil,
        readmeUrl: Swift.String? = nil,
        semanticVersion: Swift.String? = nil,
        sourceCodeArchiveUrl: Swift.String? = nil,
        sourceCodeUrl: Swift.String? = nil,
        spdxLicenseId: Swift.String? = nil,
        templateBody: Swift.String? = nil,
        templateUrl: Swift.String? = nil
    )
    {
        self.author = author
        self.description = description
        self.homePageUrl = homePageUrl
        self.labels = labels
        self.licenseBody = licenseBody
        self.licenseUrl = licenseUrl
        self.name = name
        self.readmeBody = readmeBody
        self.readmeUrl = readmeUrl
        self.semanticVersion = semanticVersion
        self.sourceCodeArchiveUrl = sourceCodeArchiveUrl
        self.sourceCodeUrl = sourceCodeUrl
        self.spdxLicenseId = spdxLicenseId
        self.templateBody = templateBody
        self.templateUrl = templateUrl
    }
}
