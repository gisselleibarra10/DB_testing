// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutApplicationPolicyOutputResponseBody: Swift.Equatable {
    let statements: [ServerlessApplicationRepositoryClientTypes.ApplicationPolicyStatement]?
}

extension PutApplicationPolicyOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case statements = "statements"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statementsContainer = try containerValues.decodeIfPresent([ServerlessApplicationRepositoryClientTypes.ApplicationPolicyStatement?].self, forKey: .statements)
        var statementsDecoded0:[ServerlessApplicationRepositoryClientTypes.ApplicationPolicyStatement]? = nil
        if let statementsContainer = statementsContainer {
            statementsDecoded0 = [ServerlessApplicationRepositoryClientTypes.ApplicationPolicyStatement]()
            for structure0 in statementsContainer {
                if let structure0 = structure0 {
                    statementsDecoded0?.append(structure0)
                }
            }
        }
        statements = statementsDecoded0
    }
}
