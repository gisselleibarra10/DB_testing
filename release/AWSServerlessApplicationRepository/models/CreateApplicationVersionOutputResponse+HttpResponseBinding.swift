// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateApplicationVersionOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: CreateApplicationVersionOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.applicationId = output.applicationId
            self.creationTime = output.creationTime
            self.parameterDefinitions = output.parameterDefinitions
            self.requiredCapabilities = output.requiredCapabilities
            self.resourcesSupported = output.resourcesSupported
            self.semanticVersion = output.semanticVersion
            self.sourceCodeArchiveUrl = output.sourceCodeArchiveUrl
            self.sourceCodeUrl = output.sourceCodeUrl
            self.templateUrl = output.templateUrl
        } else {
            self.applicationId = nil
            self.creationTime = nil
            self.parameterDefinitions = nil
            self.requiredCapabilities = nil
            self.resourcesSupported = nil
            self.semanticVersion = nil
            self.sourceCodeArchiveUrl = nil
            self.sourceCodeUrl = nil
            self.templateUrl = nil
        }
    }
}
