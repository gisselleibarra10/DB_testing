// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutConformancePackInputBody: Swift.Equatable {
    let conformancePackName: Swift.String?
    let templateS3Uri: Swift.String?
    let templateBody: Swift.String?
    let deliveryS3Bucket: Swift.String?
    let deliveryS3KeyPrefix: Swift.String?
    let conformancePackInputParameters: [ConfigClientTypes.ConformancePackInputParameter]?
    let templateSSMDocumentDetails: ConfigClientTypes.TemplateSSMDocumentDetails?
}

extension PutConformancePackInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conformancePackInputParameters = "ConformancePackInputParameters"
        case conformancePackName = "ConformancePackName"
        case deliveryS3Bucket = "DeliveryS3Bucket"
        case deliveryS3KeyPrefix = "DeliveryS3KeyPrefix"
        case templateBody = "TemplateBody"
        case templateS3Uri = "TemplateS3Uri"
        case templateSSMDocumentDetails = "TemplateSSMDocumentDetails"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .conformancePackName)
        conformancePackName = conformancePackNameDecoded
        let templateS3UriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .templateS3Uri)
        templateS3Uri = templateS3UriDecoded
        let templateBodyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .templateBody)
        templateBody = templateBodyDecoded
        let deliveryS3BucketDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deliveryS3Bucket)
        deliveryS3Bucket = deliveryS3BucketDecoded
        let deliveryS3KeyPrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deliveryS3KeyPrefix)
        deliveryS3KeyPrefix = deliveryS3KeyPrefixDecoded
        let conformancePackInputParametersContainer = try containerValues.decodeIfPresent([ConfigClientTypes.ConformancePackInputParameter?].self, forKey: .conformancePackInputParameters)
        var conformancePackInputParametersDecoded0:[ConfigClientTypes.ConformancePackInputParameter]? = nil
        if let conformancePackInputParametersContainer = conformancePackInputParametersContainer {
            conformancePackInputParametersDecoded0 = [ConfigClientTypes.ConformancePackInputParameter]()
            for structure0 in conformancePackInputParametersContainer {
                if let structure0 = structure0 {
                    conformancePackInputParametersDecoded0?.append(structure0)
                }
            }
        }
        conformancePackInputParameters = conformancePackInputParametersDecoded0
        let templateSSMDocumentDetailsDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.TemplateSSMDocumentDetails.self, forKey: .templateSSMDocumentDetails)
        templateSSMDocumentDetails = templateSSMDocumentDetailsDecoded
    }
}
