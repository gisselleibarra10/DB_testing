// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetConformancePackComplianceDetailsOutputResponseBody: Swift.Equatable {
    let conformancePackName: Swift.String?
    let conformancePackRuleEvaluationResults: [ConfigClientTypes.ConformancePackEvaluationResult]?
    let nextToken: Swift.String?
}

extension GetConformancePackComplianceDetailsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conformancePackName = "ConformancePackName"
        case conformancePackRuleEvaluationResults = "ConformancePackRuleEvaluationResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .conformancePackName)
        conformancePackName = conformancePackNameDecoded
        let conformancePackRuleEvaluationResultsContainer = try containerValues.decodeIfPresent([ConfigClientTypes.ConformancePackEvaluationResult?].self, forKey: .conformancePackRuleEvaluationResults)
        var conformancePackRuleEvaluationResultsDecoded0:[ConfigClientTypes.ConformancePackEvaluationResult]? = nil
        if let conformancePackRuleEvaluationResultsContainer = conformancePackRuleEvaluationResultsContainer {
            conformancePackRuleEvaluationResultsDecoded0 = [ConfigClientTypes.ConformancePackEvaluationResult]()
            for structure0 in conformancePackRuleEvaluationResultsContainer {
                if let structure0 = structure0 {
                    conformancePackRuleEvaluationResultsDecoded0?.append(structure0)
                }
            }
        }
        conformancePackRuleEvaluationResults = conformancePackRuleEvaluationResultsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
