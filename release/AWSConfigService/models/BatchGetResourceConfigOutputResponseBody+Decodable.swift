// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetResourceConfigOutputResponseBody: Swift.Equatable {
    let baseConfigurationItems: [ConfigClientTypes.BaseConfigurationItem]?
    let unprocessedResourceKeys: [ConfigClientTypes.ResourceKey]?
}

extension BatchGetResourceConfigOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case baseConfigurationItems
        case unprocessedResourceKeys
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let baseConfigurationItemsContainer = try containerValues.decodeIfPresent([ConfigClientTypes.BaseConfigurationItem?].self, forKey: .baseConfigurationItems)
        var baseConfigurationItemsDecoded0:[ConfigClientTypes.BaseConfigurationItem]? = nil
        if let baseConfigurationItemsContainer = baseConfigurationItemsContainer {
            baseConfigurationItemsDecoded0 = [ConfigClientTypes.BaseConfigurationItem]()
            for structure0 in baseConfigurationItemsContainer {
                if let structure0 = structure0 {
                    baseConfigurationItemsDecoded0?.append(structure0)
                }
            }
        }
        baseConfigurationItems = baseConfigurationItemsDecoded0
        let unprocessedResourceKeysContainer = try containerValues.decodeIfPresent([ConfigClientTypes.ResourceKey?].self, forKey: .unprocessedResourceKeys)
        var unprocessedResourceKeysDecoded0:[ConfigClientTypes.ResourceKey]? = nil
        if let unprocessedResourceKeysContainer = unprocessedResourceKeysContainer {
            unprocessedResourceKeysDecoded0 = [ConfigClientTypes.ResourceKey]()
            for structure0 in unprocessedResourceKeysContainer {
                if let structure0 = structure0 {
                    unprocessedResourceKeysDecoded0?.append(structure0)
                }
            }
        }
        unprocessedResourceKeys = unprocessedResourceKeysDecoded0
    }
}
