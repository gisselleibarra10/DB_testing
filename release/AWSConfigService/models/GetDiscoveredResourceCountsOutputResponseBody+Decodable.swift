// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDiscoveredResourceCountsOutputResponseBody: Swift.Equatable {
    let totalDiscoveredResources: Swift.Int
    let resourceCounts: [ConfigClientTypes.ResourceCount]?
    let nextToken: Swift.String?
}

extension GetDiscoveredResourceCountsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case resourceCounts
        case totalDiscoveredResources
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalDiscoveredResourcesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalDiscoveredResources) ?? 0
        totalDiscoveredResources = totalDiscoveredResourcesDecoded
        let resourceCountsContainer = try containerValues.decodeIfPresent([ConfigClientTypes.ResourceCount?].self, forKey: .resourceCounts)
        var resourceCountsDecoded0:[ConfigClientTypes.ResourceCount]? = nil
        if let resourceCountsContainer = resourceCountsContainer {
            resourceCountsDecoded0 = [ConfigClientTypes.ResourceCount]()
            for structure0 in resourceCountsContainer {
                if let structure0 = structure0 {
                    resourceCountsDecoded0?.append(structure0)
                }
            }
        }
        resourceCounts = resourceCountsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
