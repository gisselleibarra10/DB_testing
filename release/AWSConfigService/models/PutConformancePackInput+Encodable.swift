// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutConformancePackInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conformancePackInputParameters = "ConformancePackInputParameters"
        case conformancePackName = "ConformancePackName"
        case deliveryS3Bucket = "DeliveryS3Bucket"
        case deliveryS3KeyPrefix = "DeliveryS3KeyPrefix"
        case templateBody = "TemplateBody"
        case templateS3Uri = "TemplateS3Uri"
        case templateSSMDocumentDetails = "TemplateSSMDocumentDetails"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let conformancePackInputParameters = conformancePackInputParameters {
            var conformancePackInputParametersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .conformancePackInputParameters)
            for conformancepackinputparameters0 in conformancePackInputParameters {
                try conformancePackInputParametersContainer.encode(conformancepackinputparameters0)
            }
        }
        if let conformancePackName = self.conformancePackName {
            try encodeContainer.encode(conformancePackName, forKey: .conformancePackName)
        }
        if let deliveryS3Bucket = self.deliveryS3Bucket {
            try encodeContainer.encode(deliveryS3Bucket, forKey: .deliveryS3Bucket)
        }
        if let deliveryS3KeyPrefix = self.deliveryS3KeyPrefix {
            try encodeContainer.encode(deliveryS3KeyPrefix, forKey: .deliveryS3KeyPrefix)
        }
        if let templateBody = self.templateBody {
            try encodeContainer.encode(templateBody, forKey: .templateBody)
        }
        if let templateS3Uri = self.templateS3Uri {
            try encodeContainer.encode(templateS3Uri, forKey: .templateS3Uri)
        }
        if let templateSSMDocumentDetails = self.templateSSMDocumentDetails {
            try encodeContainer.encode(templateSSMDocumentDetails, forKey: .templateSSMDocumentDetails)
        }
    }
}
