// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutEvaluationsInputBody: Swift.Equatable {
    let evaluations: [ConfigClientTypes.Evaluation]?
    let resultToken: Swift.String?
    let testMode: Swift.Bool
}

extension PutEvaluationsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case evaluations = "Evaluations"
        case resultToken = "ResultToken"
        case testMode = "TestMode"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let evaluationsContainer = try containerValues.decodeIfPresent([ConfigClientTypes.Evaluation?].self, forKey: .evaluations)
        var evaluationsDecoded0:[ConfigClientTypes.Evaluation]? = nil
        if let evaluationsContainer = evaluationsContainer {
            evaluationsDecoded0 = [ConfigClientTypes.Evaluation]()
            for structure0 in evaluationsContainer {
                if let structure0 = structure0 {
                    evaluationsDecoded0?.append(structure0)
                }
            }
        }
        evaluations = evaluationsDecoded0
        let resultTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resultToken)
        resultToken = resultTokenDecoded
        let testModeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .testMode) ?? false
        testMode = testModeDecoded
    }
}
