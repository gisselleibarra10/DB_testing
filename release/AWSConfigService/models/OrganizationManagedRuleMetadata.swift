// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ConfigClientTypes {
    /// An object that specifies organization managed rule metadata such as resource type and ID of Amazon Web Services resource along with the rule identifier. It also provides the frequency with which you want Config to run evaluations for the rule if the trigger type is periodic.
    public struct OrganizationManagedRuleMetadata: Swift.Equatable {
        /// The description that you provide for your organization Config rule.
        public var description: Swift.String?
        /// A string, in JSON format, that is passed to your organization Config rule Lambda function.
        public var inputParameters: Swift.String?
        /// The maximum frequency with which Config runs evaluations for a rule. This is for an Config managed rule that is triggered at a periodic frequency. By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the MaximumExecutionFrequency parameter.
        public var maximumExecutionFrequency: ConfigClientTypes.MaximumExecutionFrequency?
        /// The ID of the Amazon Web Services resource that was evaluated.
        public var resourceIdScope: Swift.String?
        /// The type of the Amazon Web Services resource that was evaluated.
        public var resourceTypesScope: [Swift.String]?
        /// For organization config managed rules, a predefined identifier from a list. For example, IAM_PASSWORD_POLICY is a managed rule. To reference a managed rule, see [Using Config managed rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html).
        /// This member is required.
        public var ruleIdentifier: Swift.String?
        /// One part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.
        public var tagKeyScope: Swift.String?
        /// The optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).
        public var tagValueScope: Swift.String?

        public init (
            description: Swift.String? = nil,
            inputParameters: Swift.String? = nil,
            maximumExecutionFrequency: ConfigClientTypes.MaximumExecutionFrequency? = nil,
            resourceIdScope: Swift.String? = nil,
            resourceTypesScope: [Swift.String]? = nil,
            ruleIdentifier: Swift.String? = nil,
            tagKeyScope: Swift.String? = nil,
            tagValueScope: Swift.String? = nil
        )
        {
            self.description = description
            self.inputParameters = inputParameters
            self.maximumExecutionFrequency = maximumExecutionFrequency
            self.resourceIdScope = resourceIdScope
            self.resourceTypesScope = resourceTypesScope
            self.ruleIdentifier = ruleIdentifier
            self.tagKeyScope = tagKeyScope
            self.tagValueScope = tagValueScope
        }
    }

}
