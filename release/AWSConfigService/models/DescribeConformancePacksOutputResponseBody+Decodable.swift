// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConformancePacksOutputResponseBody: Swift.Equatable {
    let conformancePackDetails: [ConfigClientTypes.ConformancePackDetail]?
    let nextToken: Swift.String?
}

extension DescribeConformancePacksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conformancePackDetails = "ConformancePackDetails"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackDetailsContainer = try containerValues.decodeIfPresent([ConfigClientTypes.ConformancePackDetail?].self, forKey: .conformancePackDetails)
        var conformancePackDetailsDecoded0:[ConfigClientTypes.ConformancePackDetail]? = nil
        if let conformancePackDetailsContainer = conformancePackDetailsContainer {
            conformancePackDetailsDecoded0 = [ConfigClientTypes.ConformancePackDetail]()
            for structure0 in conformancePackDetailsContainer {
                if let structure0 = structure0 {
                    conformancePackDetailsDecoded0?.append(structure0)
                }
            }
        }
        conformancePackDetails = conformancePackDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
