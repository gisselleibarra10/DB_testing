// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOrganizationConformancePacksOutputResponseBody: Swift.Equatable {
    let organizationConformancePacks: [ConfigClientTypes.OrganizationConformancePack]?
    let nextToken: Swift.String?
}

extension DescribeOrganizationConformancePacksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case organizationConformancePacks = "OrganizationConformancePacks"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationConformancePacksContainer = try containerValues.decodeIfPresent([ConfigClientTypes.OrganizationConformancePack?].self, forKey: .organizationConformancePacks)
        var organizationConformancePacksDecoded0:[ConfigClientTypes.OrganizationConformancePack]? = nil
        if let organizationConformancePacksContainer = organizationConformancePacksContainer {
            organizationConformancePacksDecoded0 = [ConfigClientTypes.OrganizationConformancePack]()
            for structure0 in organizationConformancePacksContainer {
                if let structure0 = structure0 {
                    organizationConformancePacksDecoded0?.append(structure0)
                }
            }
        }
        organizationConformancePacks = organizationConformancePacksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
