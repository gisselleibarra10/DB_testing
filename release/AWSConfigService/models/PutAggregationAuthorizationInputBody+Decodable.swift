// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutAggregationAuthorizationInputBody: Swift.Equatable {
    let authorizedAccountId: Swift.String?
    let authorizedAwsRegion: Swift.String?
    let tags: [ConfigClientTypes.Tag]?
}

extension PutAggregationAuthorizationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authorizedAccountId = "AuthorizedAccountId"
        case authorizedAwsRegion = "AuthorizedAwsRegion"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authorizedAccountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .authorizedAccountId)
        authorizedAccountId = authorizedAccountIdDecoded
        let authorizedAwsRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .authorizedAwsRegion)
        authorizedAwsRegion = authorizedAwsRegionDecoded
        let tagsContainer = try containerValues.decodeIfPresent([ConfigClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[ConfigClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [ConfigClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
