// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// The input for the [GetResourceConfigHistory] action.
public struct GetResourceConfigHistoryInput: Swift.Equatable {
    /// The chronological order for configuration items listed. By default, the results are listed in reverse chronological order.
    public var chronologicalOrder: ConfigClientTypes.ChronologicalOrder?
    /// The time stamp that indicates an earlier time. If not specified, the action returns paginated results that contain configuration items that start when the first configuration item was recorded.
    public var earlierTime: ClientRuntime.Date?
    /// The time stamp that indicates a later time. If not specified, current time is taken.
    public var laterTime: ClientRuntime.Date?
    /// The maximum number of configuration items returned on each page. The default is 10. You cannot specify a number greater than 100. If you specify 0, Config uses the default.
    public var limit: Swift.Int
    /// The nextToken string returned on a previous page that you use to get the next page of results in a paginated response.
    public var nextToken: Swift.String?
    /// The ID of the resource (for example., sg-xxxxxx).
    /// This member is required.
    public var resourceId: Swift.String?
    /// The resource type.
    /// This member is required.
    public var resourceType: ConfigClientTypes.ResourceType?

    public init (
        chronologicalOrder: ConfigClientTypes.ChronologicalOrder? = nil,
        earlierTime: ClientRuntime.Date? = nil,
        laterTime: ClientRuntime.Date? = nil,
        limit: Swift.Int = 0,
        nextToken: Swift.String? = nil,
        resourceId: Swift.String? = nil,
        resourceType: ConfigClientTypes.ResourceType? = nil
    )
    {
        self.chronologicalOrder = chronologicalOrder
        self.earlierTime = earlierTime
        self.laterTime = laterTime
        self.limit = limit
        self.nextToken = nextToken
        self.resourceId = resourceId
        self.resourceType = resourceType
    }
}
