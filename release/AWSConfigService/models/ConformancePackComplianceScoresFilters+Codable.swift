// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.ConformancePackComplianceScoresFilters: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conformancePackNames = "ConformancePackNames"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let conformancePackNames = conformancePackNames {
            var conformancePackNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .conformancePackNames)
            for conformancepacknamefilter0 in conformancePackNames {
                try conformancePackNamesContainer.encode(conformancepacknamefilter0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .conformancePackNames)
        var conformancePackNamesDecoded0:[Swift.String]? = nil
        if let conformancePackNamesContainer = conformancePackNamesContainer {
            conformancePackNamesDecoded0 = [Swift.String]()
            for string0 in conformancePackNamesContainer {
                if let string0 = string0 {
                    conformancePackNamesDecoded0?.append(string0)
                }
            }
        }
        conformancePackNames = conformancePackNamesDecoded0
    }
}
