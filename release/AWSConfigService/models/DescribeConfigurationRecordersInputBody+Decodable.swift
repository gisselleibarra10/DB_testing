// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConfigurationRecordersInputBody: Swift.Equatable {
    let configurationRecorderNames: [Swift.String]?
}

extension DescribeConfigurationRecordersInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationRecorderNames = "ConfigurationRecorderNames"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationRecorderNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .configurationRecorderNames)
        var configurationRecorderNamesDecoded0:[Swift.String]? = nil
        if let configurationRecorderNamesContainer = configurationRecorderNamesContainer {
            configurationRecorderNamesDecoded0 = [Swift.String]()
            for string0 in configurationRecorderNamesContainer {
                if let string0 = string0 {
                    configurationRecorderNamesDecoded0?.append(string0)
                }
            }
        }
        configurationRecorderNames = configurationRecorderNamesDecoded0
    }
}
