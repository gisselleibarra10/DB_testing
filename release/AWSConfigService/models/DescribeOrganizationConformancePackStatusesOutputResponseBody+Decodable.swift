// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOrganizationConformancePackStatusesOutputResponseBody: Swift.Equatable {
    let organizationConformancePackStatuses: [ConfigClientTypes.OrganizationConformancePackStatus]?
    let nextToken: Swift.String?
}

extension DescribeOrganizationConformancePackStatusesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case organizationConformancePackStatuses = "OrganizationConformancePackStatuses"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationConformancePackStatusesContainer = try containerValues.decodeIfPresent([ConfigClientTypes.OrganizationConformancePackStatus?].self, forKey: .organizationConformancePackStatuses)
        var organizationConformancePackStatusesDecoded0:[ConfigClientTypes.OrganizationConformancePackStatus]? = nil
        if let organizationConformancePackStatusesContainer = organizationConformancePackStatusesContainer {
            organizationConformancePackStatusesDecoded0 = [ConfigClientTypes.OrganizationConformancePackStatus]()
            for structure0 in organizationConformancePackStatusesContainer {
                if let structure0 = structure0 {
                    organizationConformancePackStatusesDecoded0?.append(structure0)
                }
            }
        }
        organizationConformancePackStatuses = organizationConformancePackStatusesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
