// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.ConfigurationRecorder: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name
        case recordingGroup
        case roleARN
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let recordingGroup = self.recordingGroup {
            try encodeContainer.encode(recordingGroup, forKey: .recordingGroup)
        }
        if let roleARN = self.roleARN {
            try encodeContainer.encode(roleARN, forKey: .roleARN)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let roleARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleARN)
        roleARN = roleARNDecoded
        let recordingGroupDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.RecordingGroup.self, forKey: .recordingGroup)
        recordingGroup = recordingGroupDecoded
    }
}
