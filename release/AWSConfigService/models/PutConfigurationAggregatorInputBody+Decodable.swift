// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutConfigurationAggregatorInputBody: Swift.Equatable {
    let configurationAggregatorName: Swift.String?
    let accountAggregationSources: [ConfigClientTypes.AccountAggregationSource]?
    let organizationAggregationSource: ConfigClientTypes.OrganizationAggregationSource?
    let tags: [ConfigClientTypes.Tag]?
}

extension PutConfigurationAggregatorInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountAggregationSources = "AccountAggregationSources"
        case configurationAggregatorName = "ConfigurationAggregatorName"
        case organizationAggregationSource = "OrganizationAggregationSource"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationAggregatorNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .configurationAggregatorName)
        configurationAggregatorName = configurationAggregatorNameDecoded
        let accountAggregationSourcesContainer = try containerValues.decodeIfPresent([ConfigClientTypes.AccountAggregationSource?].self, forKey: .accountAggregationSources)
        var accountAggregationSourcesDecoded0:[ConfigClientTypes.AccountAggregationSource]? = nil
        if let accountAggregationSourcesContainer = accountAggregationSourcesContainer {
            accountAggregationSourcesDecoded0 = [ConfigClientTypes.AccountAggregationSource]()
            for structure0 in accountAggregationSourcesContainer {
                if let structure0 = structure0 {
                    accountAggregationSourcesDecoded0?.append(structure0)
                }
            }
        }
        accountAggregationSources = accountAggregationSourcesDecoded0
        let organizationAggregationSourceDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.OrganizationAggregationSource.self, forKey: .organizationAggregationSource)
        organizationAggregationSource = organizationAggregationSourceDecoded
        let tagsContainer = try containerValues.decodeIfPresent([ConfigClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[ConfigClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [ConfigClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
