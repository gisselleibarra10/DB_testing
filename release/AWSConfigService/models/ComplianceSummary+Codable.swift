// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.ComplianceSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case complianceSummaryTimestamp = "ComplianceSummaryTimestamp"
        case compliantResourceCount = "CompliantResourceCount"
        case nonCompliantResourceCount = "NonCompliantResourceCount"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let complianceSummaryTimestamp = self.complianceSummaryTimestamp {
            try encodeContainer.encode(complianceSummaryTimestamp.timeIntervalSince1970, forKey: .complianceSummaryTimestamp)
        }
        if let compliantResourceCount = self.compliantResourceCount {
            try encodeContainer.encode(compliantResourceCount, forKey: .compliantResourceCount)
        }
        if let nonCompliantResourceCount = self.nonCompliantResourceCount {
            try encodeContainer.encode(nonCompliantResourceCount, forKey: .nonCompliantResourceCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let compliantResourceCountDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.ComplianceContributorCount.self, forKey: .compliantResourceCount)
        compliantResourceCount = compliantResourceCountDecoded
        let nonCompliantResourceCountDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.ComplianceContributorCount.self, forKey: .nonCompliantResourceCount)
        nonCompliantResourceCount = nonCompliantResourceCountDecoded
        let complianceSummaryTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .complianceSummaryTimestamp)
        complianceSummaryTimestamp = complianceSummaryTimestampDecoded
    }
}
