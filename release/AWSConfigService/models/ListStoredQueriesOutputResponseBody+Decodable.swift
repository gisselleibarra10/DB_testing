// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStoredQueriesOutputResponseBody: Swift.Equatable {
    let storedQueryMetadata: [ConfigClientTypes.StoredQueryMetadata]?
    let nextToken: Swift.String?
}

extension ListStoredQueriesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case storedQueryMetadata = "StoredQueryMetadata"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let storedQueryMetadataContainer = try containerValues.decodeIfPresent([ConfigClientTypes.StoredQueryMetadata?].self, forKey: .storedQueryMetadata)
        var storedQueryMetadataDecoded0:[ConfigClientTypes.StoredQueryMetadata]? = nil
        if let storedQueryMetadataContainer = storedQueryMetadataContainer {
            storedQueryMetadataDecoded0 = [ConfigClientTypes.StoredQueryMetadata]()
            for structure0 in storedQueryMetadataContainer {
                if let structure0 = structure0 {
                    storedQueryMetadataDecoded0?.append(structure0)
                }
            }
        }
        storedQueryMetadata = storedQueryMetadataDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
