// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ConfigClientTypes {
    public enum MaximumExecutionFrequency: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case oneHour
        case sixHours
        case threeHours
        case twelveHours
        case twentyfourHours
        case sdkUnknown(Swift.String)

        public static var allCases: [MaximumExecutionFrequency] {
            return [
                .oneHour,
                .sixHours,
                .threeHours,
                .twelveHours,
                .twentyfourHours,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .oneHour: return "One_Hour"
            case .sixHours: return "Six_Hours"
            case .threeHours: return "Three_Hours"
            case .twelveHours: return "Twelve_Hours"
            case .twentyfourHours: return "TwentyFour_Hours"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = MaximumExecutionFrequency(rawValue: rawValue) ?? MaximumExecutionFrequency.sdkUnknown(rawValue)
        }
    }
}
