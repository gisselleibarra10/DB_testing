// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutResourceConfigInputBody: Swift.Equatable {
    let resourceType: Swift.String?
    let schemaVersionId: Swift.String?
    let resourceId: Swift.String?
    let resourceName: Swift.String?
    let configuration: Swift.String?
    let tags: [Swift.String:Swift.String]?
}

extension PutResourceConfigInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configuration = "Configuration"
        case resourceId = "ResourceId"
        case resourceName = "ResourceName"
        case resourceType = "ResourceType"
        case schemaVersionId = "SchemaVersionId"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let schemaVersionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schemaVersionId)
        schemaVersionId = schemaVersionIdDecoded
        let resourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let resourceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceName)
        resourceName = resourceNameDecoded
        let configurationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .configuration)
        configuration = configurationDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, value0) in tagsContainer {
                if let value0 = value0 {
                    tagsDecoded0?[key0] = value0
                }
            }
        }
        tags = tagsDecoded0
    }
}
