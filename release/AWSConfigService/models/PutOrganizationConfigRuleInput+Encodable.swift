// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutOrganizationConfigRuleInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case excludedAccounts = "ExcludedAccounts"
        case organizationConfigRuleName = "OrganizationConfigRuleName"
        case organizationCustomPolicyRuleMetadata = "OrganizationCustomPolicyRuleMetadata"
        case organizationCustomRuleMetadata = "OrganizationCustomRuleMetadata"
        case organizationManagedRuleMetadata = "OrganizationManagedRuleMetadata"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let excludedAccounts = excludedAccounts {
            var excludedAccountsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .excludedAccounts)
            for excludedaccounts0 in excludedAccounts {
                try excludedAccountsContainer.encode(excludedaccounts0)
            }
        }
        if let organizationConfigRuleName = self.organizationConfigRuleName {
            try encodeContainer.encode(organizationConfigRuleName, forKey: .organizationConfigRuleName)
        }
        if let organizationCustomPolicyRuleMetadata = self.organizationCustomPolicyRuleMetadata {
            try encodeContainer.encode(organizationCustomPolicyRuleMetadata, forKey: .organizationCustomPolicyRuleMetadata)
        }
        if let organizationCustomRuleMetadata = self.organizationCustomRuleMetadata {
            try encodeContainer.encode(organizationCustomRuleMetadata, forKey: .organizationCustomRuleMetadata)
        }
        if let organizationManagedRuleMetadata = self.organizationManagedRuleMetadata {
            try encodeContainer.encode(organizationManagedRuleMetadata, forKey: .organizationManagedRuleMetadata)
        }
    }
}
