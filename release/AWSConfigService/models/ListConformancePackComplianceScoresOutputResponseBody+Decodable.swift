// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConformancePackComplianceScoresOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let conformancePackComplianceScores: [ConfigClientTypes.ConformancePackComplianceScore]?
}

extension ListConformancePackComplianceScoresOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conformancePackComplianceScores = "ConformancePackComplianceScores"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let conformancePackComplianceScoresContainer = try containerValues.decodeIfPresent([ConfigClientTypes.ConformancePackComplianceScore?].self, forKey: .conformancePackComplianceScores)
        var conformancePackComplianceScoresDecoded0:[ConfigClientTypes.ConformancePackComplianceScore]? = nil
        if let conformancePackComplianceScoresContainer = conformancePackComplianceScoresContainer {
            conformancePackComplianceScoresDecoded0 = [ConfigClientTypes.ConformancePackComplianceScore]()
            for structure0 in conformancePackComplianceScoresContainer {
                if let structure0 = structure0 {
                    conformancePackComplianceScoresDecoded0?.append(structure0)
                }
            }
        }
        conformancePackComplianceScores = conformancePackComplianceScoresDecoded0
    }
}
