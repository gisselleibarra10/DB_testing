// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ConfigClientTypes {
    /// Compliance information of one or more Config rules within a conformance pack. You can filter using Config rule names and compliance types.
    public struct ConformancePackRuleCompliance: Swift.Equatable {
        /// Compliance of the Config rule. The allowed values are COMPLIANT, NON_COMPLIANT, and INSUFFICIENT_DATA.
        public var complianceType: ConfigClientTypes.ConformancePackComplianceType?
        /// Name of the Config rule.
        public var configRuleName: Swift.String?
        /// Controls for the conformance pack. A control is a process to prevent or detect problems while meeting objectives. A control can align with a specific compliance regime or map to internal controls defined by an organization.
        public var controls: [Swift.String]?

        public init (
            complianceType: ConfigClientTypes.ConformancePackComplianceType? = nil,
            configRuleName: Swift.String? = nil,
            controls: [Swift.String]? = nil
        )
        {
            self.complianceType = complianceType
            self.configRuleName = configRuleName
            self.controls = controls
        }
    }

}
