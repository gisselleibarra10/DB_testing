// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.EvaluationResultIdentifier: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case evaluationResultQualifier = "EvaluationResultQualifier"
        case orderingTimestamp = "OrderingTimestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let evaluationResultQualifier = self.evaluationResultQualifier {
            try encodeContainer.encode(evaluationResultQualifier, forKey: .evaluationResultQualifier)
        }
        if let orderingTimestamp = self.orderingTimestamp {
            try encodeContainer.encode(orderingTimestamp.timeIntervalSince1970, forKey: .orderingTimestamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let evaluationResultQualifierDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.EvaluationResultQualifier.self, forKey: .evaluationResultQualifier)
        evaluationResultQualifier = evaluationResultQualifierDecoded
        let orderingTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .orderingTimestamp)
        orderingTimestamp = orderingTimestampDecoded
    }
}
