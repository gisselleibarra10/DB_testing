// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetResourceConfigHistoryInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case chronologicalOrder
        case earlierTime
        case laterTime
        case limit
        case nextToken
        case resourceId
        case resourceType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let chronologicalOrder = self.chronologicalOrder {
            try encodeContainer.encode(chronologicalOrder.rawValue, forKey: .chronologicalOrder)
        }
        if let earlierTime = self.earlierTime {
            try encodeContainer.encode(earlierTime.timeIntervalSince1970, forKey: .earlierTime)
        }
        if let laterTime = self.laterTime {
            try encodeContainer.encode(laterTime.timeIntervalSince1970, forKey: .laterTime)
        }
        if limit != 0 {
            try encodeContainer.encode(limit, forKey: .limit)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let resourceId = self.resourceId {
            try encodeContainer.encode(resourceId, forKey: .resourceId)
        }
        if let resourceType = self.resourceType {
            try encodeContainer.encode(resourceType.rawValue, forKey: .resourceType)
        }
    }
}
