// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.AggregatedSourceStatus: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case awsRegion = "AwsRegion"
        case lastErrorCode = "LastErrorCode"
        case lastErrorMessage = "LastErrorMessage"
        case lastUpdateStatus = "LastUpdateStatus"
        case lastUpdateTime = "LastUpdateTime"
        case sourceId = "SourceId"
        case sourceType = "SourceType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let awsRegion = self.awsRegion {
            try encodeContainer.encode(awsRegion, forKey: .awsRegion)
        }
        if let lastErrorCode = self.lastErrorCode {
            try encodeContainer.encode(lastErrorCode, forKey: .lastErrorCode)
        }
        if let lastErrorMessage = self.lastErrorMessage {
            try encodeContainer.encode(lastErrorMessage, forKey: .lastErrorMessage)
        }
        if let lastUpdateStatus = self.lastUpdateStatus {
            try encodeContainer.encode(lastUpdateStatus.rawValue, forKey: .lastUpdateStatus)
        }
        if let lastUpdateTime = self.lastUpdateTime {
            try encodeContainer.encode(lastUpdateTime.timeIntervalSince1970, forKey: .lastUpdateTime)
        }
        if let sourceId = self.sourceId {
            try encodeContainer.encode(sourceId, forKey: .sourceId)
        }
        if let sourceType = self.sourceType {
            try encodeContainer.encode(sourceType.rawValue, forKey: .sourceType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceId)
        sourceId = sourceIdDecoded
        let sourceTypeDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.AggregatedSourceType.self, forKey: .sourceType)
        sourceType = sourceTypeDecoded
        let awsRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .awsRegion)
        awsRegion = awsRegionDecoded
        let lastUpdateStatusDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.AggregatedSourceStatusType.self, forKey: .lastUpdateStatus)
        lastUpdateStatus = lastUpdateStatusDecoded
        let lastUpdateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdateTime)
        lastUpdateTime = lastUpdateTimeDecoded
        let lastErrorCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastErrorCode)
        lastErrorCode = lastErrorCodeDecoded
        let lastErrorMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastErrorMessage)
        lastErrorMessage = lastErrorMessageDecoded
    }
}
