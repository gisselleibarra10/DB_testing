// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.Compliance: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case complianceContributorCount = "ComplianceContributorCount"
        case complianceType = "ComplianceType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let complianceContributorCount = self.complianceContributorCount {
            try encodeContainer.encode(complianceContributorCount, forKey: .complianceContributorCount)
        }
        if let complianceType = self.complianceType {
            try encodeContainer.encode(complianceType.rawValue, forKey: .complianceType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let complianceTypeDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.ComplianceType.self, forKey: .complianceType)
        complianceType = complianceTypeDecoded
        let complianceContributorCountDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.ComplianceContributorCount.self, forKey: .complianceContributorCount)
        complianceContributorCount = complianceContributorCountDecoded
    }
}
