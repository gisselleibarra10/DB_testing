// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.OrganizationConfigRule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case excludedAccounts = "ExcludedAccounts"
        case lastUpdateTime = "LastUpdateTime"
        case organizationConfigRuleArn = "OrganizationConfigRuleArn"
        case organizationConfigRuleName = "OrganizationConfigRuleName"
        case organizationCustomPolicyRuleMetadata = "OrganizationCustomPolicyRuleMetadata"
        case organizationCustomRuleMetadata = "OrganizationCustomRuleMetadata"
        case organizationManagedRuleMetadata = "OrganizationManagedRuleMetadata"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let excludedAccounts = excludedAccounts {
            var excludedAccountsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .excludedAccounts)
            for excludedaccounts0 in excludedAccounts {
                try excludedAccountsContainer.encode(excludedaccounts0)
            }
        }
        if let lastUpdateTime = self.lastUpdateTime {
            try encodeContainer.encode(lastUpdateTime.timeIntervalSince1970, forKey: .lastUpdateTime)
        }
        if let organizationConfigRuleArn = self.organizationConfigRuleArn {
            try encodeContainer.encode(organizationConfigRuleArn, forKey: .organizationConfigRuleArn)
        }
        if let organizationConfigRuleName = self.organizationConfigRuleName {
            try encodeContainer.encode(organizationConfigRuleName, forKey: .organizationConfigRuleName)
        }
        if let organizationCustomPolicyRuleMetadata = self.organizationCustomPolicyRuleMetadata {
            try encodeContainer.encode(organizationCustomPolicyRuleMetadata, forKey: .organizationCustomPolicyRuleMetadata)
        }
        if let organizationCustomRuleMetadata = self.organizationCustomRuleMetadata {
            try encodeContainer.encode(organizationCustomRuleMetadata, forKey: .organizationCustomRuleMetadata)
        }
        if let organizationManagedRuleMetadata = self.organizationManagedRuleMetadata {
            try encodeContainer.encode(organizationManagedRuleMetadata, forKey: .organizationManagedRuleMetadata)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationConfigRuleNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .organizationConfigRuleName)
        organizationConfigRuleName = organizationConfigRuleNameDecoded
        let organizationConfigRuleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .organizationConfigRuleArn)
        organizationConfigRuleArn = organizationConfigRuleArnDecoded
        let organizationManagedRuleMetadataDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.OrganizationManagedRuleMetadata.self, forKey: .organizationManagedRuleMetadata)
        organizationManagedRuleMetadata = organizationManagedRuleMetadataDecoded
        let organizationCustomRuleMetadataDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.OrganizationCustomRuleMetadata.self, forKey: .organizationCustomRuleMetadata)
        organizationCustomRuleMetadata = organizationCustomRuleMetadataDecoded
        let excludedAccountsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .excludedAccounts)
        var excludedAccountsDecoded0:[Swift.String]? = nil
        if let excludedAccountsContainer = excludedAccountsContainer {
            excludedAccountsDecoded0 = [Swift.String]()
            for string0 in excludedAccountsContainer {
                if let string0 = string0 {
                    excludedAccountsDecoded0?.append(string0)
                }
            }
        }
        excludedAccounts = excludedAccountsDecoded0
        let lastUpdateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdateTime)
        lastUpdateTime = lastUpdateTimeDecoded
        let organizationCustomPolicyRuleMetadataDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.OrganizationCustomPolicyRuleMetadataNoPolicy.self, forKey: .organizationCustomPolicyRuleMetadata)
        organizationCustomPolicyRuleMetadata = organizationCustomPolicyRuleMetadataDecoded
    }
}
