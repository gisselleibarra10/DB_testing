// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAggregateComplianceByConfigRulesOutputResponseBody: Swift.Equatable {
    let aggregateComplianceByConfigRules: [ConfigClientTypes.AggregateComplianceByConfigRule]?
    let nextToken: Swift.String?
}

extension DescribeAggregateComplianceByConfigRulesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregateComplianceByConfigRules = "AggregateComplianceByConfigRules"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aggregateComplianceByConfigRulesContainer = try containerValues.decodeIfPresent([ConfigClientTypes.AggregateComplianceByConfigRule?].self, forKey: .aggregateComplianceByConfigRules)
        var aggregateComplianceByConfigRulesDecoded0:[ConfigClientTypes.AggregateComplianceByConfigRule]? = nil
        if let aggregateComplianceByConfigRulesContainer = aggregateComplianceByConfigRulesContainer {
            aggregateComplianceByConfigRulesDecoded0 = [ConfigClientTypes.AggregateComplianceByConfigRule]()
            for structure0 in aggregateComplianceByConfigRulesContainer {
                if let structure0 = structure0 {
                    aggregateComplianceByConfigRulesDecoded0?.append(structure0)
                }
            }
        }
        aggregateComplianceByConfigRules = aggregateComplianceByConfigRulesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
