// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRemediationExecutionStatusOutputResponseBody: Swift.Equatable {
    let remediationExecutionStatuses: [ConfigClientTypes.RemediationExecutionStatus]?
    let nextToken: Swift.String?
}

extension DescribeRemediationExecutionStatusOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case remediationExecutionStatuses = "RemediationExecutionStatuses"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let remediationExecutionStatusesContainer = try containerValues.decodeIfPresent([ConfigClientTypes.RemediationExecutionStatus?].self, forKey: .remediationExecutionStatuses)
        var remediationExecutionStatusesDecoded0:[ConfigClientTypes.RemediationExecutionStatus]? = nil
        if let remediationExecutionStatusesContainer = remediationExecutionStatusesContainer {
            remediationExecutionStatusesDecoded0 = [ConfigClientTypes.RemediationExecutionStatus]()
            for structure0 in remediationExecutionStatusesContainer {
                if let structure0 = structure0 {
                    remediationExecutionStatusesDecoded0?.append(structure0)
                }
            }
        }
        remediationExecutionStatuses = remediationExecutionStatusesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
