// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConformancePackStatusOutputResponseBody: Swift.Equatable {
    let conformancePackStatusDetails: [ConfigClientTypes.ConformancePackStatusDetail]?
    let nextToken: Swift.String?
}

extension DescribeConformancePackStatusOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conformancePackStatusDetails = "ConformancePackStatusDetails"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackStatusDetailsContainer = try containerValues.decodeIfPresent([ConfigClientTypes.ConformancePackStatusDetail?].self, forKey: .conformancePackStatusDetails)
        var conformancePackStatusDetailsDecoded0:[ConfigClientTypes.ConformancePackStatusDetail]? = nil
        if let conformancePackStatusDetailsContainer = conformancePackStatusDetailsContainer {
            conformancePackStatusDetailsDecoded0 = [ConfigClientTypes.ConformancePackStatusDetail]()
            for structure0 in conformancePackStatusDetailsContainer {
                if let structure0 = structure0 {
                    conformancePackStatusDetailsDecoded0?.append(structure0)
                }
            }
        }
        conformancePackStatusDetails = conformancePackStatusDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
