// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeComplianceByConfigRuleOutputResponseBody: Swift.Equatable {
    let complianceByConfigRules: [ConfigClientTypes.ComplianceByConfigRule]?
    let nextToken: Swift.String?
}

extension DescribeComplianceByConfigRuleOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case complianceByConfigRules = "ComplianceByConfigRules"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let complianceByConfigRulesContainer = try containerValues.decodeIfPresent([ConfigClientTypes.ComplianceByConfigRule?].self, forKey: .complianceByConfigRules)
        var complianceByConfigRulesDecoded0:[ConfigClientTypes.ComplianceByConfigRule]? = nil
        if let complianceByConfigRulesContainer = complianceByConfigRulesContainer {
            complianceByConfigRulesDecoded0 = [ConfigClientTypes.ComplianceByConfigRule]()
            for structure0 in complianceByConfigRulesContainer {
                if let structure0 = structure0 {
                    complianceByConfigRulesDecoded0?.append(structure0)
                }
            }
        }
        complianceByConfigRules = complianceByConfigRulesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
