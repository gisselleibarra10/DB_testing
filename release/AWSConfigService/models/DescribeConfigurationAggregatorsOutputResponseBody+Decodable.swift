// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConfigurationAggregatorsOutputResponseBody: Swift.Equatable {
    let configurationAggregators: [ConfigClientTypes.ConfigurationAggregator]?
    let nextToken: Swift.String?
}

extension DescribeConfigurationAggregatorsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationAggregators = "ConfigurationAggregators"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationAggregatorsContainer = try containerValues.decodeIfPresent([ConfigClientTypes.ConfigurationAggregator?].self, forKey: .configurationAggregators)
        var configurationAggregatorsDecoded0:[ConfigClientTypes.ConfigurationAggregator]? = nil
        if let configurationAggregatorsContainer = configurationAggregatorsContainer {
            configurationAggregatorsDecoded0 = [ConfigClientTypes.ConfigurationAggregator]()
            for structure0 in configurationAggregatorsContainer {
                if let structure0 = structure0 {
                    configurationAggregatorsDecoded0?.append(structure0)
                }
            }
        }
        configurationAggregators = configurationAggregatorsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
