// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.AggregateConformancePackComplianceSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case complianceSummary = "ComplianceSummary"
        case groupName = "GroupName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let complianceSummary = self.complianceSummary {
            try encodeContainer.encode(complianceSummary, forKey: .complianceSummary)
        }
        if let groupName = self.groupName {
            try encodeContainer.encode(groupName, forKey: .groupName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let complianceSummaryDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.AggregateConformancePackComplianceCount.self, forKey: .complianceSummary)
        complianceSummary = complianceSummaryDecoded
        let groupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groupName)
        groupName = groupNameDecoded
    }
}
