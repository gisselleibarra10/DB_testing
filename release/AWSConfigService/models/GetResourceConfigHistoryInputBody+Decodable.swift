// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetResourceConfigHistoryInputBody: Swift.Equatable {
    let resourceType: ConfigClientTypes.ResourceType?
    let resourceId: Swift.String?
    let laterTime: ClientRuntime.Date?
    let earlierTime: ClientRuntime.Date?
    let chronologicalOrder: ConfigClientTypes.ChronologicalOrder?
    let limit: Swift.Int
    let nextToken: Swift.String?
}

extension GetResourceConfigHistoryInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case chronologicalOrder
        case earlierTime
        case laterTime
        case limit
        case nextToken
        case resourceId
        case resourceType
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceTypeDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.ResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let resourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let laterTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .laterTime)
        laterTime = laterTimeDecoded
        let earlierTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .earlierTime)
        earlierTime = earlierTimeDecoded
        let chronologicalOrderDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.ChronologicalOrder.self, forKey: .chronologicalOrder)
        chronologicalOrder = chronologicalOrderDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit) ?? 0
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
