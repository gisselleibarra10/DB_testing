// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.OrganizationAggregationSource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allAwsRegions = "AllAwsRegions"
        case awsRegions = "AwsRegions"
        case roleArn = "RoleArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if allAwsRegions != false {
            try encodeContainer.encode(allAwsRegions, forKey: .allAwsRegions)
        }
        if let awsRegions = awsRegions {
            var awsRegionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .awsRegions)
            for aggregatorregionlist0 in awsRegions {
                try awsRegionsContainer.encode(aggregatorregionlist0)
            }
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let awsRegionsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .awsRegions)
        var awsRegionsDecoded0:[Swift.String]? = nil
        if let awsRegionsContainer = awsRegionsContainer {
            awsRegionsDecoded0 = [Swift.String]()
            for string0 in awsRegionsContainer {
                if let string0 = string0 {
                    awsRegionsDecoded0?.append(string0)
                }
            }
        }
        awsRegions = awsRegionsDecoded0
        let allAwsRegionsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .allAwsRegions) ?? false
        allAwsRegions = allAwsRegionsDecoded
    }
}
