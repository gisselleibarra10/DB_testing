// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutConfigurationAggregatorInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountAggregationSources = "AccountAggregationSources"
        case configurationAggregatorName = "ConfigurationAggregatorName"
        case organizationAggregationSource = "OrganizationAggregationSource"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountAggregationSources = accountAggregationSources {
            var accountAggregationSourcesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .accountAggregationSources)
            for accountaggregationsourcelist0 in accountAggregationSources {
                try accountAggregationSourcesContainer.encode(accountaggregationsourcelist0)
            }
        }
        if let configurationAggregatorName = self.configurationAggregatorName {
            try encodeContainer.encode(configurationAggregatorName, forKey: .configurationAggregatorName)
        }
        if let organizationAggregationSource = self.organizationAggregationSource {
            try encodeContainer.encode(organizationAggregationSource, forKey: .organizationAggregationSource)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for tagslist0 in tags {
                try tagsContainer.encode(tagslist0)
            }
        }
    }
}
