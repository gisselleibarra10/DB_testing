// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRemediationExceptionsOutputResponseBody: Swift.Equatable {
    let remediationExceptions: [ConfigClientTypes.RemediationException]?
    let nextToken: Swift.String?
}

extension DescribeRemediationExceptionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case remediationExceptions = "RemediationExceptions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let remediationExceptionsContainer = try containerValues.decodeIfPresent([ConfigClientTypes.RemediationException?].self, forKey: .remediationExceptions)
        var remediationExceptionsDecoded0:[ConfigClientTypes.RemediationException]? = nil
        if let remediationExceptionsContainer = remediationExceptionsContainer {
            remediationExceptionsDecoded0 = [ConfigClientTypes.RemediationException]()
            for structure0 in remediationExceptionsContainer {
                if let structure0 = structure0 {
                    remediationExceptionsDecoded0?.append(structure0)
                }
            }
        }
        remediationExceptions = remediationExceptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
