// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.CustomPolicyDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enableDebugLogDelivery = "EnableDebugLogDelivery"
        case policyRuntime = "PolicyRuntime"
        case policyText = "PolicyText"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if enableDebugLogDelivery != false {
            try encodeContainer.encode(enableDebugLogDelivery, forKey: .enableDebugLogDelivery)
        }
        if let policyRuntime = self.policyRuntime {
            try encodeContainer.encode(policyRuntime, forKey: .policyRuntime)
        }
        if let policyText = self.policyText {
            try encodeContainer.encode(policyText, forKey: .policyText)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyRuntimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyRuntime)
        policyRuntime = policyRuntimeDecoded
        let policyTextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyText)
        policyText = policyTextDecoded
        let enableDebugLogDeliveryDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableDebugLogDelivery) ?? false
        enableDebugLogDelivery = enableDebugLogDeliveryDecoded
    }
}
