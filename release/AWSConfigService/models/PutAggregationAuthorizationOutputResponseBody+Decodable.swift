// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutAggregationAuthorizationOutputResponseBody: Swift.Equatable {
    let aggregationAuthorization: ConfigClientTypes.AggregationAuthorization?
}

extension PutAggregationAuthorizationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregationAuthorization = "AggregationAuthorization"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aggregationAuthorizationDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.AggregationAuthorization.self, forKey: .aggregationAuthorization)
        aggregationAuthorization = aggregationAuthorizationDecoded
    }
}
