// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.ConfigExportDeliveryInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastAttemptTime
        case lastErrorCode
        case lastErrorMessage
        case lastStatus
        case lastSuccessfulTime
        case nextDeliveryTime
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lastAttemptTime = self.lastAttemptTime {
            try encodeContainer.encode(lastAttemptTime.timeIntervalSince1970, forKey: .lastAttemptTime)
        }
        if let lastErrorCode = self.lastErrorCode {
            try encodeContainer.encode(lastErrorCode, forKey: .lastErrorCode)
        }
        if let lastErrorMessage = self.lastErrorMessage {
            try encodeContainer.encode(lastErrorMessage, forKey: .lastErrorMessage)
        }
        if let lastStatus = self.lastStatus {
            try encodeContainer.encode(lastStatus.rawValue, forKey: .lastStatus)
        }
        if let lastSuccessfulTime = self.lastSuccessfulTime {
            try encodeContainer.encode(lastSuccessfulTime.timeIntervalSince1970, forKey: .lastSuccessfulTime)
        }
        if let nextDeliveryTime = self.nextDeliveryTime {
            try encodeContainer.encode(nextDeliveryTime.timeIntervalSince1970, forKey: .nextDeliveryTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lastStatusDecoded = try containerValues.decodeIfPresent(ConfigClientTypes.DeliveryStatus.self, forKey: .lastStatus)
        lastStatus = lastStatusDecoded
        let lastErrorCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastErrorCode)
        lastErrorCode = lastErrorCodeDecoded
        let lastErrorMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastErrorMessage)
        lastErrorMessage = lastErrorMessageDecoded
        let lastAttemptTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastAttemptTime)
        lastAttemptTime = lastAttemptTimeDecoded
        let lastSuccessfulTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastSuccessfulTime)
        lastSuccessfulTime = lastSuccessfulTimeDecoded
        let nextDeliveryTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .nextDeliveryTime)
        nextDeliveryTime = nextDeliveryTimeDecoded
    }
}
