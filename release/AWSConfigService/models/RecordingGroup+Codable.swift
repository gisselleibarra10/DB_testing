// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigClientTypes.RecordingGroup: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allSupported
        case includeGlobalResourceTypes
        case resourceTypes
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if allSupported != false {
            try encodeContainer.encode(allSupported, forKey: .allSupported)
        }
        if includeGlobalResourceTypes != false {
            try encodeContainer.encode(includeGlobalResourceTypes, forKey: .includeGlobalResourceTypes)
        }
        if let resourceTypes = resourceTypes {
            var resourceTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .resourceTypes)
            for resourcetypelist0 in resourceTypes {
                try resourceTypesContainer.encode(resourcetypelist0.rawValue)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allSupportedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .allSupported) ?? false
        allSupported = allSupportedDecoded
        let includeGlobalResourceTypesDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeGlobalResourceTypes) ?? false
        includeGlobalResourceTypes = includeGlobalResourceTypesDecoded
        let resourceTypesContainer = try containerValues.decodeIfPresent([ConfigClientTypes.ResourceType?].self, forKey: .resourceTypes)
        var resourceTypesDecoded0:[ConfigClientTypes.ResourceType]? = nil
        if let resourceTypesContainer = resourceTypesContainer {
            resourceTypesDecoded0 = [ConfigClientTypes.ResourceType]()
            for string0 in resourceTypesContainer {
                if let string0 = string0 {
                    resourceTypesDecoded0?.append(string0)
                }
            }
        }
        resourceTypes = resourceTypesDecoded0
    }
}
