// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAggregateComplianceByConformancePacksOutputResponseBody: Swift.Equatable {
    let aggregateComplianceByConformancePacks: [ConfigClientTypes.AggregateComplianceByConformancePack]?
    let nextToken: Swift.String?
}

extension DescribeAggregateComplianceByConformancePacksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregateComplianceByConformancePacks = "AggregateComplianceByConformancePacks"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aggregateComplianceByConformancePacksContainer = try containerValues.decodeIfPresent([ConfigClientTypes.AggregateComplianceByConformancePack?].self, forKey: .aggregateComplianceByConformancePacks)
        var aggregateComplianceByConformancePacksDecoded0:[ConfigClientTypes.AggregateComplianceByConformancePack]? = nil
        if let aggregateComplianceByConformancePacksContainer = aggregateComplianceByConformancePacksContainer {
            aggregateComplianceByConformancePacksDecoded0 = [ConfigClientTypes.AggregateComplianceByConformancePack]()
            for structure0 in aggregateComplianceByConformancePacksContainer {
                if let structure0 = structure0 {
                    aggregateComplianceByConformancePacksDecoded0?.append(structure0)
                }
            }
        }
        aggregateComplianceByConformancePacks = aggregateComplianceByConformancePacksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
