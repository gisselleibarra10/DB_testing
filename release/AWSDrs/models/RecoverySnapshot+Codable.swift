// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DrsClientTypes.RecoverySnapshot: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ebsSnapshots
        case expectedTimestamp
        case snapshotID
        case sourceServerID
        case timestamp
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ebsSnapshots = ebsSnapshots {
            var ebsSnapshotsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ebsSnapshots)
            for ebssnapshotslist0 in ebsSnapshots {
                try ebsSnapshotsContainer.encode(ebssnapshotslist0)
            }
        }
        if let expectedTimestamp = self.expectedTimestamp {
            try encodeContainer.encode(expectedTimestamp, forKey: .expectedTimestamp)
        }
        if let snapshotID = self.snapshotID {
            try encodeContainer.encode(snapshotID, forKey: .snapshotID)
        }
        if let sourceServerID = self.sourceServerID {
            try encodeContainer.encode(sourceServerID, forKey: .sourceServerID)
        }
        if let timestamp = self.timestamp {
            try encodeContainer.encode(timestamp, forKey: .timestamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let snapshotIDDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snapshotID)
        snapshotID = snapshotIDDecoded
        let sourceServerIDDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceServerID)
        sourceServerID = sourceServerIDDecoded
        let expectedTimestampDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .expectedTimestamp)
        expectedTimestamp = expectedTimestampDecoded
        let timestampDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .timestamp)
        timestamp = timestampDecoded
        let ebsSnapshotsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .ebsSnapshots)
        var ebsSnapshotsDecoded0:[Swift.String]? = nil
        if let ebsSnapshotsContainer = ebsSnapshotsContainer {
            ebsSnapshotsDecoded0 = [Swift.String]()
            for string0 in ebsSnapshotsContainer {
                if let string0 = string0 {
                    ebsSnapshotsDecoded0?.append(string0)
                }
            }
        }
        ebsSnapshots = ebsSnapshotsDecoded0
    }
}
