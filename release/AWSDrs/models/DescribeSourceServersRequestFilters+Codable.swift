// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DrsClientTypes.DescribeSourceServersRequestFilters: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hardwareId
        case sourceServerIDs
        case stagingAccountIDs
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hardwareId = self.hardwareId {
            try encodeContainer.encode(hardwareId, forKey: .hardwareId)
        }
        if let sourceServerIDs = sourceServerIDs {
            var sourceServerIDsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .sourceServerIDs)
            for describesourceserversrequestfiltersids0 in sourceServerIDs {
                try sourceServerIDsContainer.encode(describesourceserversrequestfiltersids0)
            }
        }
        if let stagingAccountIDs = stagingAccountIDs {
            var stagingAccountIDsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .stagingAccountIDs)
            for accountids0 in stagingAccountIDs {
                try stagingAccountIDsContainer.encode(accountids0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceServerIDsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .sourceServerIDs)
        var sourceServerIDsDecoded0:[Swift.String]? = nil
        if let sourceServerIDsContainer = sourceServerIDsContainer {
            sourceServerIDsDecoded0 = [Swift.String]()
            for string0 in sourceServerIDsContainer {
                if let string0 = string0 {
                    sourceServerIDsDecoded0?.append(string0)
                }
            }
        }
        sourceServerIDs = sourceServerIDsDecoded0
        let hardwareIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hardwareId)
        hardwareId = hardwareIdDecoded
        let stagingAccountIDsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .stagingAccountIDs)
        var stagingAccountIDsDecoded0:[Swift.String]? = nil
        if let stagingAccountIDsContainer = stagingAccountIDsContainer {
            stagingAccountIDsDecoded0 = [Swift.String]()
            for string0 in stagingAccountIDsContainer {
                if let string0 = string0 {
                    stagingAccountIDsDecoded0?.append(string0)
                }
            }
        }
        stagingAccountIDs = stagingAccountIDsDecoded0
    }
}
