// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRecoverySnapshotsInputBody: Swift.Equatable {
    let sourceServerID: Swift.String?
    let filters: DrsClientTypes.DescribeRecoverySnapshotsRequestFilters?
    let order: DrsClientTypes.RecoverySnapshotsOrder?
    let maxResults: Swift.Int
    let nextToken: Swift.String?
}

extension DescribeRecoverySnapshotsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filters
        case maxResults
        case nextToken
        case order
        case sourceServerID
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceServerIDDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceServerID)
        sourceServerID = sourceServerIDDecoded
        let filtersDecoded = try containerValues.decodeIfPresent(DrsClientTypes.DescribeRecoverySnapshotsRequestFilters.self, forKey: .filters)
        filters = filtersDecoded
        let orderDecoded = try containerValues.decodeIfPresent(DrsClientTypes.RecoverySnapshotsOrder.self, forKey: .order)
        order = orderDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults) ?? 0
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
