// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamingImagesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let streamingImages: [NimbleClientTypes.StreamingImage]?
}

extension ListStreamingImagesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case streamingImages
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let streamingImagesContainer = try containerValues.decodeIfPresent([NimbleClientTypes.StreamingImage?].self, forKey: .streamingImages)
        var streamingImagesDecoded0:[NimbleClientTypes.StreamingImage]? = nil
        if let streamingImagesContainer = streamingImagesContainer {
            streamingImagesDecoded0 = [NimbleClientTypes.StreamingImage]()
            for structure0 in streamingImagesContainer {
                if let structure0 = structure0 {
                    streamingImagesDecoded0?.append(structure0)
                }
            }
        }
        streamingImages = streamingImagesDecoded0
    }
}
