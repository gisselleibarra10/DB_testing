// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension NimbleClientTypes {
    public enum LaunchProfileValidationStatusCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case validationFailedInternalServerError
        case validationFailedInvalidActiveDirectory
        case validationFailedInvalidSecurityGroupAssociation
        case validationFailedInvalidSubnetRouteTableAssociation
        case validationFailedSubnetNotFound
        case validationFailedUnauthorized
        case validationInProgress
        case validationNotStarted
        case validationSuccess
        case sdkUnknown(Swift.String)

        public static var allCases: [LaunchProfileValidationStatusCode] {
            return [
                .validationFailedInternalServerError,
                .validationFailedInvalidActiveDirectory,
                .validationFailedInvalidSecurityGroupAssociation,
                .validationFailedInvalidSubnetRouteTableAssociation,
                .validationFailedSubnetNotFound,
                .validationFailedUnauthorized,
                .validationInProgress,
                .validationNotStarted,
                .validationSuccess,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .validationFailedInternalServerError: return "VALIDATION_FAILED_INTERNAL_SERVER_ERROR"
            case .validationFailedInvalidActiveDirectory: return "VALIDATION_FAILED_INVALID_ACTIVE_DIRECTORY"
            case .validationFailedInvalidSecurityGroupAssociation: return "VALIDATION_FAILED_INVALID_SECURITY_GROUP_ASSOCIATION"
            case .validationFailedInvalidSubnetRouteTableAssociation: return "VALIDATION_FAILED_INVALID_SUBNET_ROUTE_TABLE_ASSOCIATION"
            case .validationFailedSubnetNotFound: return "VALIDATION_FAILED_SUBNET_NOT_FOUND"
            case .validationFailedUnauthorized: return "VALIDATION_FAILED_UNAUTHORIZED"
            case .validationInProgress: return "VALIDATION_IN_PROGRESS"
            case .validationNotStarted: return "VALIDATION_NOT_STARTED"
            case .validationSuccess: return "VALIDATION_SUCCESS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = LaunchProfileValidationStatusCode(rawValue: rawValue) ?? LaunchProfileValidationStatusCode.sdkUnknown(rawValue)
        }
    }
}
