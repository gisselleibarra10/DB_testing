// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NimbleClientTypes.EulaAcceptance: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceptedAt
        case acceptedBy
        case accepteeId
        case eulaAcceptanceId
        case eulaId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let acceptedAt = self.acceptedAt {
            try encodeContainer.encode(acceptedAt.timeIntervalSince1970, forKey: .acceptedAt)
        }
        if let acceptedBy = self.acceptedBy {
            try encodeContainer.encode(acceptedBy, forKey: .acceptedBy)
        }
        if let accepteeId = self.accepteeId {
            try encodeContainer.encode(accepteeId, forKey: .accepteeId)
        }
        if let eulaAcceptanceId = self.eulaAcceptanceId {
            try encodeContainer.encode(eulaAcceptanceId, forKey: .eulaAcceptanceId)
        }
        if let eulaId = self.eulaId {
            try encodeContainer.encode(eulaId, forKey: .eulaId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceptedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .acceptedAt)
        acceptedAt = acceptedAtDecoded
        let acceptedByDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .acceptedBy)
        acceptedBy = acceptedByDecoded
        let accepteeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accepteeId)
        accepteeId = accepteeIdDecoded
        let eulaAcceptanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eulaAcceptanceId)
        eulaAcceptanceId = eulaAcceptanceIdDecoded
        let eulaIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eulaId)
        eulaId = eulaIdDecoded
    }
}
