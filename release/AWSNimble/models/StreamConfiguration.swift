// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension NimbleClientTypes {
    /// A configuration for a streaming session.
    public struct StreamConfiguration: Swift.Equatable {
        /// Enable or disable the use of the system clipboard to copy and paste between the streaming session and streaming client.
        /// This member is required.
        public var clipboardMode: NimbleClientTypes.StreamingClipboardMode?
        /// The EC2 instance types that users can select from when launching a streaming session with this launch profile.
        /// This member is required.
        public var ec2InstanceTypes: [NimbleClientTypes.StreamingInstanceType]?
        /// The length of time, in minutes, that a streaming session can be active before it is stopped or terminated. After this point, Nimble Studio automatically terminates or stops the session. The default length of time is 690 minutes, and the maximum length of time is 30 days.
        public var maxSessionLengthInMinutes: Swift.Int?
        /// Integer that determines if you can start and stop your sessions and how long a session can stay in the STOPPED state. The default value is 0. The maximum value is 5760. If the value is missing or set to 0, your sessions canâ€™t be stopped. If you then call StopStreamingSession, the session fails. If the time that a session stays in the READY state exceeds the maxSessionLengthInMinutes value, the session will automatically be terminated (instead of stopped). If the value is set to a positive number, the session can be stopped. You can call StopStreamingSession to stop sessions in the READY state. If the time that a session stays in the READY state exceeds the maxSessionLengthInMinutes value, the session will automatically be stopped (instead of terminated).
        public var maxStoppedSessionLengthInMinutes: Swift.Int?
        /// (Optional) The upload storage for a streaming session.
        public var sessionStorage: NimbleClientTypes.StreamConfigurationSessionStorage?
        /// The streaming images that users can select from when launching a streaming session with this launch profile.
        /// This member is required.
        public var streamingImageIds: [Swift.String]?

        public init (
            clipboardMode: NimbleClientTypes.StreamingClipboardMode? = nil,
            ec2InstanceTypes: [NimbleClientTypes.StreamingInstanceType]? = nil,
            maxSessionLengthInMinutes: Swift.Int? = nil,
            maxStoppedSessionLengthInMinutes: Swift.Int? = nil,
            sessionStorage: NimbleClientTypes.StreamConfigurationSessionStorage? = nil,
            streamingImageIds: [Swift.String]? = nil
        )
        {
            self.clipboardMode = clipboardMode
            self.ec2InstanceTypes = ec2InstanceTypes
            self.maxSessionLengthInMinutes = maxSessionLengthInMinutes
            self.maxStoppedSessionLengthInMinutes = maxStoppedSessionLengthInMinutes
            self.sessionStorage = sessionStorage
            self.streamingImageIds = streamingImageIds
        }
    }

}
