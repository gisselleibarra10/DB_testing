// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NimbleClientTypes {
    /// A studio component represents a network resource to be used by a studio's users and workflows. A typical studio contains studio components for each of the following: render farm, Active Directory, licensing, and file system. Access to a studio component is managed by specifying security groups for the resource, as well as its endpoint. A studio component also has a set of initialization scripts that are returned by GetLaunchProfileInitialization. These initialization scripts run on streaming sessions when they start. They provide users with flexibility in controlling how the studio resources are configured on a streaming session.
    public struct StudioComponent: Swift.Equatable {
        /// The ARN of the resource.
        public var arn: Swift.String?
        /// The configuration of the studio component, based on component type.
        public var configuration: NimbleClientTypes.StudioComponentConfiguration?
        /// The Unix epoch timestamp in seconds for when the resource was created.
        public var createdAt: ClientRuntime.Date?
        /// The user ID of the user that created the studio component.
        public var createdBy: Swift.String?
        /// A human-readable description for the studio component resource.
        public var description: Swift.String?
        /// The EC2 security groups that control access to the studio component.
        public var ec2SecurityGroupIds: [Swift.String]?
        /// Initialization scripts for studio components.
        public var initializationScripts: [NimbleClientTypes.StudioComponentInitializationScript]?
        /// A friendly name for the studio component resource.
        public var name: Swift.String?
        /// An IAM role attached to a Studio Component that gives the studio component access to AWS resources at anytime while the instance is running.
        public var runtimeRoleArn: Swift.String?
        /// Parameters for the studio component scripts.
        public var scriptParameters: [NimbleClientTypes.ScriptParameterKeyValue]?
        /// An IAM role attached to Studio Component when the system initialization script runs which give the studio component access to AWS resources when the system initialization script runs.
        public var secureInitializationRoleArn: Swift.String?
        /// The current state.
        public var state: NimbleClientTypes.StudioComponentState?
        /// The status code.
        public var statusCode: NimbleClientTypes.StudioComponentStatusCode?
        /// The status message for the studio component.
        public var statusMessage: Swift.String?
        /// The unique identifier for a studio component resource.
        public var studioComponentId: Swift.String?
        /// The specific subtype of a studio component.
        public var subtype: NimbleClientTypes.StudioComponentSubtype?
        /// A collection of labels, in the form of key:value pairs, that apply to this resource.
        public var tags: [Swift.String:Swift.String]?
        /// The type of the studio component.
        public var type: NimbleClientTypes.StudioComponentType?
        /// The Unix epoch timestamp in seconds for when the resource was updated.
        public var updatedAt: ClientRuntime.Date?
        /// The user ID of the user that most recently updated the resource.
        public var updatedBy: Swift.String?

        public init (
            arn: Swift.String? = nil,
            configuration: NimbleClientTypes.StudioComponentConfiguration? = nil,
            createdAt: ClientRuntime.Date? = nil,
            createdBy: Swift.String? = nil,
            description: Swift.String? = nil,
            ec2SecurityGroupIds: [Swift.String]? = nil,
            initializationScripts: [NimbleClientTypes.StudioComponentInitializationScript]? = nil,
            name: Swift.String? = nil,
            runtimeRoleArn: Swift.String? = nil,
            scriptParameters: [NimbleClientTypes.ScriptParameterKeyValue]? = nil,
            secureInitializationRoleArn: Swift.String? = nil,
            state: NimbleClientTypes.StudioComponentState? = nil,
            statusCode: NimbleClientTypes.StudioComponentStatusCode? = nil,
            statusMessage: Swift.String? = nil,
            studioComponentId: Swift.String? = nil,
            subtype: NimbleClientTypes.StudioComponentSubtype? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            type: NimbleClientTypes.StudioComponentType? = nil,
            updatedAt: ClientRuntime.Date? = nil,
            updatedBy: Swift.String? = nil
        )
        {
            self.arn = arn
            self.configuration = configuration
            self.createdAt = createdAt
            self.createdBy = createdBy
            self.description = description
            self.ec2SecurityGroupIds = ec2SecurityGroupIds
            self.initializationScripts = initializationScripts
            self.name = name
            self.runtimeRoleArn = runtimeRoleArn
            self.scriptParameters = scriptParameters
            self.secureInitializationRoleArn = secureInitializationRoleArn
            self.state = state
            self.statusCode = statusCode
            self.statusMessage = statusMessage
            self.studioComponentId = studioComponentId
            self.subtype = subtype
            self.tags = tags
            self.type = type
            self.updatedAt = updatedAt
            self.updatedBy = updatedBy
        }
    }

}
