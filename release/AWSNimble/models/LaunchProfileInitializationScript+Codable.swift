// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NimbleClientTypes.LaunchProfileInitializationScript: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case runtimeRoleArn
        case script
        case secureInitializationRoleArn
        case studioComponentId
        case studioComponentName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let runtimeRoleArn = self.runtimeRoleArn {
            try encodeContainer.encode(runtimeRoleArn, forKey: .runtimeRoleArn)
        }
        if let script = self.script {
            try encodeContainer.encode(script, forKey: .script)
        }
        if let secureInitializationRoleArn = self.secureInitializationRoleArn {
            try encodeContainer.encode(secureInitializationRoleArn, forKey: .secureInitializationRoleArn)
        }
        if let studioComponentId = self.studioComponentId {
            try encodeContainer.encode(studioComponentId, forKey: .studioComponentId)
        }
        if let studioComponentName = self.studioComponentName {
            try encodeContainer.encode(studioComponentName, forKey: .studioComponentName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scriptDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .script)
        script = scriptDecoded
        let studioComponentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioComponentId)
        studioComponentId = studioComponentIdDecoded
        let studioComponentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioComponentName)
        studioComponentName = studioComponentNameDecoded
        let secureInitializationRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .secureInitializationRoleArn)
        secureInitializationRoleArn = secureInitializationRoleArnDecoded
        let runtimeRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .runtimeRoleArn)
        runtimeRoleArn = runtimeRoleArnDecoded
    }
}
