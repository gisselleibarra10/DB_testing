// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateStudioInputBody: Swift.Equatable {
    let adminRoleArn: Swift.String?
    let displayName: Swift.String?
    let studioEncryptionConfiguration: NimbleClientTypes.StudioEncryptionConfiguration?
    let studioName: Swift.String?
    let tags: [Swift.String:Swift.String]?
    let userRoleArn: Swift.String?
}

extension CreateStudioInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case adminRoleArn
        case displayName
        case studioEncryptionConfiguration
        case studioName
        case tags
        case userRoleArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let adminRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .adminRoleArn)
        adminRoleArn = adminRoleArnDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let studioEncryptionConfigurationDecoded = try containerValues.decodeIfPresent(NimbleClientTypes.StudioEncryptionConfiguration.self, forKey: .studioEncryptionConfiguration)
        studioEncryptionConfiguration = studioEncryptionConfigurationDecoded
        let studioNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioName)
        studioName = studioNameDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, string0) in tagsContainer {
                if let string0 = string0 {
                    tagsDecoded0?[key0] = string0
                }
            }
        }
        tags = tagsDecoded0
        let userRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userRoleArn)
        userRoleArn = userRoleArnDecoded
    }
}
