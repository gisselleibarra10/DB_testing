// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension NimbleClientTypes {
    public enum LaunchProfileValidationType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case validateActiveDirectoryStudioComponent
        case validateNetworkAclAssociation
        case validateSecurityGroupAssociation
        case validateSubnetAssociation
        case sdkUnknown(Swift.String)

        public static var allCases: [LaunchProfileValidationType] {
            return [
                .validateActiveDirectoryStudioComponent,
                .validateNetworkAclAssociation,
                .validateSecurityGroupAssociation,
                .validateSubnetAssociation,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .validateActiveDirectoryStudioComponent: return "VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT"
            case .validateNetworkAclAssociation: return "VALIDATE_NETWORK_ACL_ASSOCIATION"
            case .validateSecurityGroupAssociation: return "VALIDATE_SECURITY_GROUP_ASSOCIATION"
            case .validateSubnetAssociation: return "VALIDATE_SUBNET_ASSOCIATION"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = LaunchProfileValidationType(rawValue: rawValue) ?? LaunchProfileValidationType.sdkUnknown(rawValue)
        }
    }
}
