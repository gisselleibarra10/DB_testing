// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRegisterAccountStatusOutputResponseBody: Swift.Equatable {
    let customerAccountId: Swift.String?
    let accountStatus: IoTFleetWiseClientTypes.RegistrationStatus?
    let timestreamRegistrationResponse: IoTFleetWiseClientTypes.TimestreamRegistrationResponse?
    let iamRegistrationResponse: IoTFleetWiseClientTypes.IamRegistrationResponse?
    let creationTime: ClientRuntime.Date?
    let lastModificationTime: ClientRuntime.Date?
}

extension GetRegisterAccountStatusOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountStatus
        case creationTime
        case customerAccountId
        case iamRegistrationResponse
        case lastModificationTime
        case timestreamRegistrationResponse
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customerAccountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customerAccountId)
        customerAccountId = customerAccountIdDecoded
        let accountStatusDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.RegistrationStatus.self, forKey: .accountStatus)
        accountStatus = accountStatusDecoded
        let timestreamRegistrationResponseDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.TimestreamRegistrationResponse.self, forKey: .timestreamRegistrationResponse)
        timestreamRegistrationResponse = timestreamRegistrationResponseDecoded
        let iamRegistrationResponseDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.IamRegistrationResponse.self, forKey: .iamRegistrationResponse)
        iamRegistrationResponse = iamRegistrationResponseDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModificationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModificationTime)
        lastModificationTime = lastModificationTimeDecoded
    }
}
