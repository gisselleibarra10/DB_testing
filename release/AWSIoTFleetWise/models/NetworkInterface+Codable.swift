// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTFleetWiseClientTypes.NetworkInterface: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case canInterface
        case interfaceId
        case obdInterface
        case type
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let canInterface = self.canInterface {
            try encodeContainer.encode(canInterface, forKey: .canInterface)
        }
        if let interfaceId = self.interfaceId {
            try encodeContainer.encode(interfaceId, forKey: .interfaceId)
        }
        if let obdInterface = self.obdInterface {
            try encodeContainer.encode(obdInterface, forKey: .obdInterface)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let interfaceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .interfaceId)
        interfaceId = interfaceIdDecoded
        let typeDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.NetworkInterfaceType.self, forKey: .type)
        type = typeDecoded
        let canInterfaceDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.CanInterface.self, forKey: .canInterface)
        canInterface = canInterfaceDecoded
        let obdInterfaceDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.ObdInterface.self, forKey: .obdInterface)
        obdInterface = obdInterfaceDecoded
    }
}
