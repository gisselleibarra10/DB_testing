// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTFleetWiseClientTypes.SignalDecoder: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case canSignal
        case fullyQualifiedName
        case interfaceId
        case obdSignal
        case type
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let canSignal = self.canSignal {
            try encodeContainer.encode(canSignal, forKey: .canSignal)
        }
        if let fullyQualifiedName = self.fullyQualifiedName {
            try encodeContainer.encode(fullyQualifiedName, forKey: .fullyQualifiedName)
        }
        if let interfaceId = self.interfaceId {
            try encodeContainer.encode(interfaceId, forKey: .interfaceId)
        }
        if let obdSignal = self.obdSignal {
            try encodeContainer.encode(obdSignal, forKey: .obdSignal)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fullyQualifiedNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fullyQualifiedName)
        fullyQualifiedName = fullyQualifiedNameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.SignalDecoderType.self, forKey: .type)
        type = typeDecoded
        let interfaceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .interfaceId)
        interfaceId = interfaceIdDecoded
        let canSignalDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.CanSignal.self, forKey: .canSignal)
        canSignal = canSignalDecoded
        let obdSignalDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.ObdSignal.self, forKey: .obdSignal)
        obdSignal = obdSignalDecoded
    }
}
