// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateModelManifestInputBody: Swift.Equatable {
    let description: Swift.String?
    let nodesToAdd: [Swift.String]?
    let nodesToRemove: [Swift.String]?
    let status: IoTFleetWiseClientTypes.ManifestStatus?
}

extension UpdateModelManifestInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description
        case nodesToAdd
        case nodesToRemove
        case status
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let nodesToAddContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .nodesToAdd)
        var nodesToAddDecoded0:[Swift.String]? = nil
        if let nodesToAddContainer = nodesToAddContainer {
            nodesToAddDecoded0 = [Swift.String]()
            for string0 in nodesToAddContainer {
                if let string0 = string0 {
                    nodesToAddDecoded0?.append(string0)
                }
            }
        }
        nodesToAdd = nodesToAddDecoded0
        let nodesToRemoveContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .nodesToRemove)
        var nodesToRemoveDecoded0:[Swift.String]? = nil
        if let nodesToRemoveContainer = nodesToRemoveContainer {
            nodesToRemoveDecoded0 = [Swift.String]()
            for string0 in nodesToRemoveContainer {
                if let string0 = string0 {
                    nodesToRemoveDecoded0?.append(string0)
                }
            }
        }
        nodesToRemove = nodesToRemoveDecoded0
        let statusDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.ManifestStatus.self, forKey: .status)
        status = statusDecoded
    }
}
