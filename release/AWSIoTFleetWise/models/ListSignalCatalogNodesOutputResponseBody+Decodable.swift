// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSignalCatalogNodesOutputResponseBody: Swift.Equatable {
    let nodes: [IoTFleetWiseClientTypes.Node]?
    let nextToken: Swift.String?
}

extension ListSignalCatalogNodesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case nodes
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nodesContainer = try containerValues.decodeIfPresent([IoTFleetWiseClientTypes.Node?].self, forKey: .nodes)
        var nodesDecoded0:[IoTFleetWiseClientTypes.Node]? = nil
        if let nodesContainer = nodesContainer {
            nodesDecoded0 = [IoTFleetWiseClientTypes.Node]()
            for union0 in nodesContainer {
                if let union0 = union0 {
                    nodesDecoded0?.append(union0)
                }
            }
        }
        nodes = nodesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
