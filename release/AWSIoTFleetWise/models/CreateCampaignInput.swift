// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateCampaignInput: Swift.Equatable {
    /// The data collection scheme associated with the campaign. You can specify a scheme that collects data based on time or an event.
    /// This member is required.
    public var collectionScheme: IoTFleetWiseClientTypes.CollectionScheme?
    /// (Optional) Whether to compress signals before transmitting data to Amazon Web Services IoT FleetWise. If you don't want to compress the signals, use OFF. If it's not specified, SNAPPY is used. Default: SNAPPY
    public var compression: IoTFleetWiseClientTypes.Compression?
    /// (Optional) A list of vehicle attributes to associate with a campaign. Default: An empty array
    public var dataExtraDimensions: [Swift.String]?
    /// An optional description of the campaign to help identify its purpose.
    public var description: Swift.String?
    /// (Optional) Option for a vehicle to send diagnostic trouble codes to Amazon Web Services IoT FleetWise. If you want to send diagnostic trouble codes, use SEND_ACTIVE_DTCS. If it's not specified, OFF is used. Default: OFF
    public var diagnosticsMode: IoTFleetWiseClientTypes.DiagnosticsMode?
    /// (Optional) The time the campaign expires, in seconds since epoch (January 1, 1970 at midnight UTC time). Vehicle data won't be collected after the campaign expires. Default: 253402243200 (December 31, 9999, 00:00:00 UTC)
    public var expiryTime: ClientRuntime.Date?
    /// The name of the campaign to create.
    /// This member is required.
    public var name: Swift.String?
    /// (Optional) How long (in milliseconds) to collect raw data after a triggering event initiates the collection. If it's not specified, 0 is used. Default: 0
    public var postTriggerCollectionDuration: Swift.Int?
    /// (Optional) A number indicating the priority of one campaign over another campaign for a certain vehicle or fleet. A campaign with the lowest value is deployed to vehicles before any other campaigns. If it's not specified, 0 is used. Default: 0
    public var priority: Swift.Int?
    /// (Optional) The Amazon Resource Name (ARN) of the signal catalog to associate with the campaign.
    /// This member is required.
    public var signalCatalogArn: Swift.String?
    /// (Optional) A list of information about signals to collect.
    public var signalsToCollect: [IoTFleetWiseClientTypes.SignalInformation]?
    /// (Optional) Whether to store collected data after a vehicle lost a connection with the cloud. After a connection is re-established, the data is automatically forwarded to Amazon Web Services IoT FleetWise. If you want to store collected data when a vehicle loses connection with the cloud, use TO_DISK. If it's not specified, OFF is used. Default: OFF
    public var spoolingMode: IoTFleetWiseClientTypes.SpoolingMode?
    /// (Optional) The time, in milliseconds, to deliver a campaign after it was approved. If it's not specified, 0 is used. Default: 0
    public var startTime: ClientRuntime.Date?
    /// Metadata that can be used to manage the campaign.
    public var tags: [IoTFleetWiseClientTypes.Tag]?
    /// The ARN of the vehicle or fleet to deploy a campaign to.
    /// This member is required.
    public var targetArn: Swift.String?

    public init (
        collectionScheme: IoTFleetWiseClientTypes.CollectionScheme? = nil,
        compression: IoTFleetWiseClientTypes.Compression? = nil,
        dataExtraDimensions: [Swift.String]? = nil,
        description: Swift.String? = nil,
        diagnosticsMode: IoTFleetWiseClientTypes.DiagnosticsMode? = nil,
        expiryTime: ClientRuntime.Date? = nil,
        name: Swift.String? = nil,
        postTriggerCollectionDuration: Swift.Int? = nil,
        priority: Swift.Int? = nil,
        signalCatalogArn: Swift.String? = nil,
        signalsToCollect: [IoTFleetWiseClientTypes.SignalInformation]? = nil,
        spoolingMode: IoTFleetWiseClientTypes.SpoolingMode? = nil,
        startTime: ClientRuntime.Date? = nil,
        tags: [IoTFleetWiseClientTypes.Tag]? = nil,
        targetArn: Swift.String? = nil
    )
    {
        self.collectionScheme = collectionScheme
        self.compression = compression
        self.dataExtraDimensions = dataExtraDimensions
        self.description = description
        self.diagnosticsMode = diagnosticsMode
        self.expiryTime = expiryTime
        self.name = name
        self.postTriggerCollectionDuration = postTriggerCollectionDuration
        self.priority = priority
        self.signalCatalogArn = signalCatalogArn
        self.signalsToCollect = signalsToCollect
        self.spoolingMode = spoolingMode
        self.startTime = startTime
        self.tags = tags
        self.targetArn = targetArn
    }
}
