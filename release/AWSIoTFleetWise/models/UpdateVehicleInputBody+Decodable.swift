// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateVehicleInputBody: Swift.Equatable {
    let modelManifestArn: Swift.String?
    let decoderManifestArn: Swift.String?
    let attributes: [Swift.String:Swift.String]?
    let attributeUpdateMode: IoTFleetWiseClientTypes.UpdateMode?
}

extension UpdateVehicleInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributeUpdateMode
        case attributes
        case decoderManifestArn
        case modelManifestArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelManifestArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelManifestArn)
        modelManifestArn = modelManifestArnDecoded
        let decoderManifestArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .decoderManifestArn)
        decoderManifestArn = decoderManifestArnDecoded
        let attributesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .attributes)
        var attributesDecoded0: [Swift.String:Swift.String]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [Swift.String:Swift.String]()
            for (key0, attributevalue0) in attributesContainer {
                if let attributevalue0 = attributevalue0 {
                    attributesDecoded0?[key0] = attributevalue0
                }
            }
        }
        attributes = attributesDecoded0
        let attributeUpdateModeDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.UpdateMode.self, forKey: .attributeUpdateMode)
        attributeUpdateMode = attributeUpdateModeDecoded
    }
}
