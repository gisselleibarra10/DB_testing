// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTFleetWiseClientTypes {
    /// Information about a created decoder manifest. You can use the API operation to return this information about multiple decoder manifests.
    public struct DecoderManifestSummary: Swift.Equatable {
        /// The ARN of a vehicle model (model manifest) associated with the decoder manifest.
        public var arn: Swift.String?
        /// The time the decoder manifest was created in seconds since epoch (January 1, 1970 at midnight UTC time).
        /// This member is required.
        public var creationTime: ClientRuntime.Date?
        /// A brief description of the decoder manifest.
        public var description: Swift.String?
        /// The time the decoder manifest was last updated in seconds since epoch (January 1, 1970 at midnight UTC time).
        /// This member is required.
        public var lastModificationTime: ClientRuntime.Date?
        /// The ARN of a vehicle model (model manifest) associated with the decoder manifest.
        public var modelManifestArn: Swift.String?
        /// The name of the decoder manifest.
        public var name: Swift.String?
        /// The state of the decoder manifest. If the status is ACTIVE, the decoder manifest can't be edited. If the status is marked DRAFT, you can edit the decoder manifest.
        public var status: IoTFleetWiseClientTypes.ManifestStatus?

        public init (
            arn: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            lastModificationTime: ClientRuntime.Date? = nil,
            modelManifestArn: Swift.String? = nil,
            name: Swift.String? = nil,
            status: IoTFleetWiseClientTypes.ManifestStatus? = nil
        )
        {
            self.arn = arn
            self.creationTime = creationTime
            self.description = description
            self.lastModificationTime = lastModificationTime
            self.modelManifestArn = modelManifestArn
            self.name = name
            self.status = status
        }
    }

}
