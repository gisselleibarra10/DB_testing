// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTFleetWiseClientTypes.CollectionScheme: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conditionbasedcollectionscheme = "conditionBasedCollectionScheme"
        case sdkUnknown
        case timebasedcollectionscheme = "timeBasedCollectionScheme"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .conditionbasedcollectionscheme(conditionbasedcollectionscheme):
                try container.encode(conditionbasedcollectionscheme, forKey: .conditionbasedcollectionscheme)
            case let .timebasedcollectionscheme(timebasedcollectionscheme):
                try container.encode(timebasedcollectionscheme, forKey: .timebasedcollectionscheme)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let timebasedcollectionschemeDecoded = try values.decodeIfPresent(IoTFleetWiseClientTypes.TimeBasedCollectionScheme.self, forKey: .timebasedcollectionscheme)
        if let timebasedcollectionscheme = timebasedcollectionschemeDecoded {
            self = .timebasedcollectionscheme(timebasedcollectionscheme)
            return
        }
        let conditionbasedcollectionschemeDecoded = try values.decodeIfPresent(IoTFleetWiseClientTypes.ConditionBasedCollectionScheme.self, forKey: .conditionbasedcollectionscheme)
        if let conditionbasedcollectionscheme = conditionbasedcollectionschemeDecoded {
            self = .conditionbasedcollectionscheme(conditionbasedcollectionscheme)
            return
        }
        self = .sdkUnknown("")
    }
}
