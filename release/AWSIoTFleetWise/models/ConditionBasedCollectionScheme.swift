// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IoTFleetWiseClientTypes {
    /// Information about a collection scheme that uses a simple logical expression to recognize what data to collect.
    public struct ConditionBasedCollectionScheme: Swift.Equatable {
        /// Specifies the version of the conditional expression language.
        public var conditionLanguageVersion: Swift.Int?
        /// The logical expression used to recognize what data to collect. For example, $variable.Vehicle.OutsideAirTemperature >= 105.0.
        /// This member is required.
        public var expression: Swift.String?
        /// The minimum duration of time between two triggering events to collect data, in milliseconds. If a signal changes often, you might want to collect data at a slower rate.
        public var minimumTriggerIntervalMs: Swift.Int?
        /// Whether to collect data for all triggering events (ALWAYS). Specify (RISING_EDGE), or specify only when the condition first evaluates to false. For example, triggering on "AirbagDeployed"; Users aren't interested on triggering when the airbag is already exploded; they only care about the change from not deployed => deployed.
        public var triggerMode: IoTFleetWiseClientTypes.TriggerMode?

        public init (
            conditionLanguageVersion: Swift.Int? = nil,
            expression: Swift.String? = nil,
            minimumTriggerIntervalMs: Swift.Int? = nil,
            triggerMode: IoTFleetWiseClientTypes.TriggerMode? = nil
        )
        {
            self.conditionLanguageVersion = conditionLanguageVersion
            self.expression = expression
            self.minimumTriggerIntervalMs = minimumTriggerIntervalMs
            self.triggerMode = triggerMode
        }
    }

}
