// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTFleetWiseClientTypes.CanInterface: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name
        case protocolName
        case protocolVersion
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let protocolName = self.protocolName {
            try encodeContainer.encode(protocolName, forKey: .protocolName)
        }
        if let protocolVersion = self.protocolVersion {
            try encodeContainer.encode(protocolVersion, forKey: .protocolVersion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let protocolNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .protocolName)
        protocolName = protocolNameDecoded
        let protocolVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .protocolVersion)
        protocolVersion = protocolVersionDecoded
    }
}
