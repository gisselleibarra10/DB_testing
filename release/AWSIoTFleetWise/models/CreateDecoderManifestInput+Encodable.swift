// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateDecoderManifestInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description
        case modelManifestArn
        case networkInterfaces
        case signalDecoders
        case tags
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let modelManifestArn = self.modelManifestArn {
            try encodeContainer.encode(modelManifestArn, forKey: .modelManifestArn)
        }
        if let networkInterfaces = networkInterfaces {
            var networkInterfacesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .networkInterfaces)
            for networkinterfaces0 in networkInterfaces {
                try networkInterfacesContainer.encode(networkinterfaces0)
            }
        }
        if let signalDecoders = signalDecoders {
            var signalDecodersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .signalDecoders)
            for signaldecoders0 in signalDecoders {
                try signalDecodersContainer.encode(signaldecoders0)
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
