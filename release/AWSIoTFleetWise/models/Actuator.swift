// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IoTFleetWiseClientTypes {
    /// A signal that represents a vehicle device such as the engine, heater, and door locks. Data from an actuator reports the state of a certain vehicle device. Updating actuator data can change the state of a device. For example, you can turn on or off the heater by updating its actuator data.
    public struct Actuator: Swift.Equatable {
        /// A list of possible values an actuator can take.
        public var allowedValues: [Swift.String]?
        /// A specified value for the actuator.
        public var assignedValue: Swift.String?
        /// The specified data type of the actuator.
        /// This member is required.
        public var dataType: IoTFleetWiseClientTypes.NodeDataType?
        /// A brief description of the actuator.
        public var description: Swift.String?
        /// The fully qualified name of the actuator. For example, the fully qualified name of an actuator might be Vehicle.Front.Left.Door.Lock.
        /// This member is required.
        public var fullyQualifiedName: Swift.String?
        /// The specified possible maximum value of an actuator.
        public var max: Swift.Double?
        /// The specified possible minimum value of an actuator.
        public var min: Swift.Double?
        /// The scientific unit for the actuator.
        public var unit: Swift.String?

        public init (
            allowedValues: [Swift.String]? = nil,
            assignedValue: Swift.String? = nil,
            dataType: IoTFleetWiseClientTypes.NodeDataType? = nil,
            description: Swift.String? = nil,
            fullyQualifiedName: Swift.String? = nil,
            max: Swift.Double? = nil,
            min: Swift.Double? = nil,
            unit: Swift.String? = nil
        )
        {
            self.allowedValues = allowedValues
            self.assignedValue = assignedValue
            self.dataType = dataType
            self.description = description
            self.fullyQualifiedName = fullyQualifiedName
            self.max = max
            self.min = min
            self.unit = unit
        }
    }

}
