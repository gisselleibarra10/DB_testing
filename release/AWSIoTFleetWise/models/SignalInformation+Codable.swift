// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTFleetWiseClientTypes.SignalInformation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxSampleCount
        case minimumSamplingIntervalMs
        case name
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxSampleCount = self.maxSampleCount {
            try encodeContainer.encode(maxSampleCount, forKey: .maxSampleCount)
        }
        if let minimumSamplingIntervalMs = self.minimumSamplingIntervalMs {
            try encodeContainer.encode(minimumSamplingIntervalMs, forKey: .minimumSamplingIntervalMs)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let maxSampleCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxSampleCount)
        maxSampleCount = maxSampleCountDecoded
        let minimumSamplingIntervalMsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .minimumSamplingIntervalMs)
        minimumSamplingIntervalMs = minimumSamplingIntervalMsDecoded
    }
}
