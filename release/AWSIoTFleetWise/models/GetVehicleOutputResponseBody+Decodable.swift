// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetVehicleOutputResponseBody: Swift.Equatable {
    let vehicleName: Swift.String?
    let arn: Swift.String?
    let modelManifestArn: Swift.String?
    let decoderManifestArn: Swift.String?
    let attributes: [Swift.String:Swift.String]?
    let creationTime: ClientRuntime.Date?
    let lastModificationTime: ClientRuntime.Date?
}

extension GetVehicleOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case attributes
        case creationTime
        case decoderManifestArn
        case lastModificationTime
        case modelManifestArn
        case vehicleName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vehicleNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vehicleName)
        vehicleName = vehicleNameDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let modelManifestArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelManifestArn)
        modelManifestArn = modelManifestArnDecoded
        let decoderManifestArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .decoderManifestArn)
        decoderManifestArn = decoderManifestArnDecoded
        let attributesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .attributes)
        var attributesDecoded0: [Swift.String:Swift.String]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [Swift.String:Swift.String]()
            for (key0, attributevalue0) in attributesContainer {
                if let attributevalue0 = attributevalue0 {
                    attributesDecoded0?[key0] = attributevalue0
                }
            }
        }
        attributes = attributesDecoded0
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModificationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModificationTime)
        lastModificationTime = lastModificationTimeDecoded
    }
}
