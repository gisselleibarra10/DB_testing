// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTFleetWiseClientTypes.NodeCounts: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case totalActuators
        case totalAttributes
        case totalBranches
        case totalNodes
        case totalSensors
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if totalActuators != 0 {
            try encodeContainer.encode(totalActuators, forKey: .totalActuators)
        }
        if totalAttributes != 0 {
            try encodeContainer.encode(totalAttributes, forKey: .totalAttributes)
        }
        if totalBranches != 0 {
            try encodeContainer.encode(totalBranches, forKey: .totalBranches)
        }
        if totalNodes != 0 {
            try encodeContainer.encode(totalNodes, forKey: .totalNodes)
        }
        if totalSensors != 0 {
            try encodeContainer.encode(totalSensors, forKey: .totalSensors)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalNodesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalNodes) ?? 0
        totalNodes = totalNodesDecoded
        let totalBranchesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalBranches) ?? 0
        totalBranches = totalBranchesDecoded
        let totalSensorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalSensors) ?? 0
        totalSensors = totalSensorsDecoded
        let totalAttributesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalAttributes) ?? 0
        totalAttributes = totalAttributesDecoded
        let totalActuatorsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalActuators) ?? 0
        totalActuators = totalActuatorsDecoded
    }
}
