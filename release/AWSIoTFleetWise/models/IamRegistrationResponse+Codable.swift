// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTFleetWiseClientTypes.IamRegistrationResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errorMessage
        case registrationStatus
        case roleArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errorMessage = self.errorMessage {
            try encodeContainer.encode(errorMessage, forKey: .errorMessage)
        }
        if let registrationStatus = self.registrationStatus {
            try encodeContainer.encode(registrationStatus.rawValue, forKey: .registrationStatus)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let registrationStatusDecoded = try containerValues.decodeIfPresent(IoTFleetWiseClientTypes.RegistrationStatus.self, forKey: .registrationStatus)
        registrationStatus = registrationStatusDecoded
        let errorMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorMessage)
        errorMessage = errorMessageDecoded
    }
}
