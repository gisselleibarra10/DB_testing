// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InvalidSignalsExceptionBody: Swift.Equatable {
    let message: Swift.String?
    let invalidSignals: [IoTFleetWiseClientTypes.InvalidSignal]?
}

extension InvalidSignalsExceptionBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case invalidSignals
        case message
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let invalidSignalsContainer = try containerValues.decodeIfPresent([IoTFleetWiseClientTypes.InvalidSignal?].self, forKey: .invalidSignals)
        var invalidSignalsDecoded0:[IoTFleetWiseClientTypes.InvalidSignal]? = nil
        if let invalidSignalsContainer = invalidSignalsContainer {
            invalidSignalsDecoded0 = [IoTFleetWiseClientTypes.InvalidSignal]()
            for structure0 in invalidSignalsContainer {
                if let structure0 = structure0 {
                    invalidSignalsDecoded0?.append(structure0)
                }
            }
        }
        invalidSignals = invalidSignalsDecoded0
    }
}
