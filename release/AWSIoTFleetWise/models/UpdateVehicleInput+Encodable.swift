// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateVehicleInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributeUpdateMode
        case attributes
        case decoderManifestArn
        case modelManifestArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributeUpdateMode = self.attributeUpdateMode {
            try encodeContainer.encode(attributeUpdateMode.rawValue, forKey: .attributeUpdateMode)
        }
        if let attributes = attributes {
            var attributesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .attributes)
            for (dictKey0, attributesmap0) in attributes {
                try attributesContainer.encode(attributesmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let decoderManifestArn = self.decoderManifestArn {
            try encodeContainer.encode(decoderManifestArn, forKey: .decoderManifestArn)
        }
        if let modelManifestArn = self.modelManifestArn {
            try encodeContainer.encode(modelManifestArn, forKey: .modelManifestArn)
        }
    }
}
