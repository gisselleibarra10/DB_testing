// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetCampaignOutputResponse: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of the campaign.
    public var arn: Swift.String?
    /// Information about the data collection scheme associated with the campaign.
    public var collectionScheme: IoTFleetWiseClientTypes.CollectionScheme?
    /// Whether to compress signals before transmitting data to Amazon Web Services IoT FleetWise. If OFF is specified, the signals aren't compressed. If it's not specified, SNAPPY is used.
    public var compression: IoTFleetWiseClientTypes.Compression?
    /// The time the campaign was created in seconds since epoch (January 1, 1970 at midnight UTC time).
    public var creationTime: ClientRuntime.Date?
    /// A list of vehicle attributes associated with the campaign.
    public var dataExtraDimensions: [Swift.String]?
    /// The description of the campaign.
    public var description: Swift.String?
    /// Option for a vehicle to send diagnostic trouble codes to Amazon Web Services IoT FleetWise.
    public var diagnosticsMode: IoTFleetWiseClientTypes.DiagnosticsMode?
    /// The time the campaign expires, in seconds since epoch (January 1, 1970 at midnight UTC time). Vehicle data won't be collected after the campaign expires.
    public var expiryTime: ClientRuntime.Date?
    /// The last time the campaign was modified.
    public var lastModificationTime: ClientRuntime.Date?
    /// The name of the campaign.
    public var name: Swift.String?
    /// How long (in seconds) to collect raw data after a triggering event initiates the collection.
    public var postTriggerCollectionDuration: Swift.Int?
    /// A number indicating the priority of one campaign over another campaign for a certain vehicle or fleet. A campaign with the lowest value is deployed to vehicles before any other campaigns.
    public var priority: Swift.Int?
    /// The ARN of a signal catalog.
    public var signalCatalogArn: Swift.String?
    /// Information about a list of signals to collect data on.
    public var signalsToCollect: [IoTFleetWiseClientTypes.SignalInformation]?
    /// Whether to store collected data after a vehicle lost a connection with the cloud. After a connection is re-established, the data is automatically forwarded to Amazon Web Services IoT FleetWise.
    public var spoolingMode: IoTFleetWiseClientTypes.SpoolingMode?
    /// The time, in milliseconds, to deliver a campaign after it was approved.
    public var startTime: ClientRuntime.Date?
    /// The state of the campaign. The status can be one of: CREATING, WAITING_FOR_APPROVAL, RUNNING, and SUSPENDED.
    public var status: IoTFleetWiseClientTypes.CampaignStatus?
    /// The ARN of the vehicle or the fleet targeted by the campaign.
    public var targetArn: Swift.String?

    public init (
        arn: Swift.String? = nil,
        collectionScheme: IoTFleetWiseClientTypes.CollectionScheme? = nil,
        compression: IoTFleetWiseClientTypes.Compression? = nil,
        creationTime: ClientRuntime.Date? = nil,
        dataExtraDimensions: [Swift.String]? = nil,
        description: Swift.String? = nil,
        diagnosticsMode: IoTFleetWiseClientTypes.DiagnosticsMode? = nil,
        expiryTime: ClientRuntime.Date? = nil,
        lastModificationTime: ClientRuntime.Date? = nil,
        name: Swift.String? = nil,
        postTriggerCollectionDuration: Swift.Int? = nil,
        priority: Swift.Int? = nil,
        signalCatalogArn: Swift.String? = nil,
        signalsToCollect: [IoTFleetWiseClientTypes.SignalInformation]? = nil,
        spoolingMode: IoTFleetWiseClientTypes.SpoolingMode? = nil,
        startTime: ClientRuntime.Date? = nil,
        status: IoTFleetWiseClientTypes.CampaignStatus? = nil,
        targetArn: Swift.String? = nil
    )
    {
        self.arn = arn
        self.collectionScheme = collectionScheme
        self.compression = compression
        self.creationTime = creationTime
        self.dataExtraDimensions = dataExtraDimensions
        self.description = description
        self.diagnosticsMode = diagnosticsMode
        self.expiryTime = expiryTime
        self.lastModificationTime = lastModificationTime
        self.name = name
        self.postTriggerCollectionDuration = postTriggerCollectionDuration
        self.priority = priority
        self.signalCatalogArn = signalCatalogArn
        self.signalsToCollect = signalsToCollect
        self.spoolingMode = spoolingMode
        self.startTime = startTime
        self.status = status
        self.targetArn = targetArn
    }
}
