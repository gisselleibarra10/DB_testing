// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InvalidNodeExceptionBody: Swift.Equatable {
    let invalidNodes: [IoTFleetWiseClientTypes.Node]?
    let reason: Swift.String?
}

extension InvalidNodeExceptionBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case invalidNodes
        case reason
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let invalidNodesContainer = try containerValues.decodeIfPresent([IoTFleetWiseClientTypes.Node?].self, forKey: .invalidNodes)
        var invalidNodesDecoded0:[IoTFleetWiseClientTypes.Node]? = nil
        if let invalidNodesContainer = invalidNodesContainer {
            invalidNodesDecoded0 = [IoTFleetWiseClientTypes.Node]()
            for union0 in invalidNodesContainer {
                if let union0 = union0 {
                    invalidNodesDecoded0?.append(union0)
                }
            }
        }
        invalidNodes = invalidNodesDecoded0
        let reasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reason)
        reason = reasonDecoded
    }
}
