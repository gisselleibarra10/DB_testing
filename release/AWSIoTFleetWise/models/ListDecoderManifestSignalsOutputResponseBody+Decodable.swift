// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDecoderManifestSignalsOutputResponseBody: Swift.Equatable {
    let signalDecoders: [IoTFleetWiseClientTypes.SignalDecoder]?
    let nextToken: Swift.String?
}

extension ListDecoderManifestSignalsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case signalDecoders
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let signalDecodersContainer = try containerValues.decodeIfPresent([IoTFleetWiseClientTypes.SignalDecoder?].self, forKey: .signalDecoders)
        var signalDecodersDecoded0:[IoTFleetWiseClientTypes.SignalDecoder]? = nil
        if let signalDecodersContainer = signalDecodersContainer {
            signalDecodersDecoded0 = [IoTFleetWiseClientTypes.SignalDecoder]()
            for structure0 in signalDecodersContainer {
                if let structure0 = structure0 {
                    signalDecodersDecoded0?.append(structure0)
                }
            }
        }
        signalDecoders = signalDecodersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
