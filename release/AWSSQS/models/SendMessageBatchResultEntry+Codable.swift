// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SqsClientTypes.SendMessageBatchResultEntry: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case id = "Id"
        case mD5OfMessageAttributes = "MD5OfMessageAttributes"
        case mD5OfMessageBody = "MD5OfMessageBody"
        case mD5OfMessageSystemAttributes = "MD5OfMessageSystemAttributes"
        case messageId = "MessageId"
        case sequenceNumber = "SequenceNumber"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let id = id {
            try container.encode(id, forKey: ClientRuntime.Key("Id"))
        }
        if let mD5OfMessageAttributes = mD5OfMessageAttributes {
            try container.encode(mD5OfMessageAttributes, forKey: ClientRuntime.Key("MD5OfMessageAttributes"))
        }
        if let mD5OfMessageBody = mD5OfMessageBody {
            try container.encode(mD5OfMessageBody, forKey: ClientRuntime.Key("MD5OfMessageBody"))
        }
        if let mD5OfMessageSystemAttributes = mD5OfMessageSystemAttributes {
            try container.encode(mD5OfMessageSystemAttributes, forKey: ClientRuntime.Key("MD5OfMessageSystemAttributes"))
        }
        if let messageId = messageId {
            try container.encode(messageId, forKey: ClientRuntime.Key("MessageId"))
        }
        if let sequenceNumber = sequenceNumber {
            try container.encode(sequenceNumber, forKey: ClientRuntime.Key("SequenceNumber"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let messageIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .messageId)
        messageId = messageIdDecoded
        let mD5OfMessageBodyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mD5OfMessageBody)
        mD5OfMessageBody = mD5OfMessageBodyDecoded
        let mD5OfMessageAttributesDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mD5OfMessageAttributes)
        mD5OfMessageAttributes = mD5OfMessageAttributesDecoded
        let mD5OfMessageSystemAttributesDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mD5OfMessageSystemAttributes)
        mD5OfMessageSystemAttributes = mD5OfMessageSystemAttributesDecoded
        let sequenceNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sequenceNumber)
        sequenceNumber = sequenceNumberDecoded
    }
}
