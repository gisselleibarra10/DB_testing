// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SqsClientTypes {
    /// The user-specified message system attribute value. For string data types, the Value attribute has the same restrictions on the content as the message body. For more information, see [SendMessage].Name, type, value and the message body must not be empty or null.
    public struct MessageSystemAttributeValue: Swift.Equatable {
        /// Not implemented. Reserved for future use.
        public var binaryListValues: [ClientRuntime.Data]?
        /// Binary type attributes can store any binary data, such as compressed data, encrypted data, or images.
        public var binaryValue: ClientRuntime.Data?
        /// Amazon SQS supports the following logical data types: String, Number, and Binary. For the Number data type, you must use StringValue. You can also append custom labels. For more information, see [Amazon SQS Message Attributes](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-metadata.html#sqs-message-attributes) in the Amazon SQS Developer Guide.
        /// This member is required.
        public var dataType: Swift.String?
        /// Not implemented. Reserved for future use.
        public var stringListValues: [Swift.String]?
        /// Strings are Unicode with UTF-8 binary encoding. For a list of code values, see [ASCII Printable Characters](http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters).
        public var stringValue: Swift.String?

        public init (
            binaryListValues: [ClientRuntime.Data]? = nil,
            binaryValue: ClientRuntime.Data? = nil,
            dataType: Swift.String? = nil,
            stringListValues: [Swift.String]? = nil,
            stringValue: Swift.String? = nil
        )
        {
            self.binaryListValues = binaryListValues
            self.binaryValue = binaryValue
            self.dataType = dataType
            self.stringListValues = stringListValues
            self.stringValue = stringValue
        }
    }

}
