// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PersonalizeRuntimeClientTypes.Promotion: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterArn
        case filterValues
        case name
        case percentPromotedItems
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filterArn = self.filterArn {
            try encodeContainer.encode(filterArn, forKey: .filterArn)
        }
        if let filterValues = filterValues {
            var filterValuesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .filterValues)
            for (dictKey0, filtervalues0) in filterValues {
                try filterValuesContainer.encode(filtervalues0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if percentPromotedItems != 0 {
            try encodeContainer.encode(percentPromotedItems, forKey: .percentPromotedItems)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let percentPromotedItemsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .percentPromotedItems) ?? 0
        percentPromotedItems = percentPromotedItemsDecoded
        let filterArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filterArn)
        filterArn = filterArnDecoded
        let filterValuesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .filterValues)
        var filterValuesDecoded0: [Swift.String:Swift.String]? = nil
        if let filterValuesContainer = filterValuesContainer {
            filterValuesDecoded0 = [Swift.String:Swift.String]()
            for (key0, filterattributevalue0) in filterValuesContainer {
                if let filterattributevalue0 = filterattributevalue0 {
                    filterValuesDecoded0?[key0] = filterattributevalue0
                }
            }
        }
        filterValues = filterValuesDecoded0
    }
}
