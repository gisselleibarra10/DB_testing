// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudSearchDomainClientTypes.Hits: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cursor
        case found
        case hit
        case start
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cursor = self.cursor {
            try encodeContainer.encode(cursor, forKey: .cursor)
        }
        if found != 0 {
            try encodeContainer.encode(found, forKey: .found)
        }
        if let hit = hit {
            var hitContainer = encodeContainer.nestedUnkeyedContainer(forKey: .hit)
            for hitlist0 in hit {
                try hitContainer.encode(hitlist0)
            }
        }
        if start != 0 {
            try encodeContainer.encode(start, forKey: .start)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let foundDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .found) ?? 0
        found = foundDecoded
        let startDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .start) ?? 0
        start = startDecoded
        let cursorDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cursor)
        cursor = cursorDecoded
        let hitContainer = try containerValues.decodeIfPresent([CloudSearchDomainClientTypes.Hit?].self, forKey: .hit)
        var hitDecoded0:[CloudSearchDomainClientTypes.Hit]? = nil
        if let hitContainer = hitContainer {
            hitDecoded0 = [CloudSearchDomainClientTypes.Hit]()
            for structure0 in hitContainer {
                if let structure0 = structure0 {
                    hitDecoded0?.append(structure0)
                }
            }
        }
        hit = hitDecoded0
    }
}
