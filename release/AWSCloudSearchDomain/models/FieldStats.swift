// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CloudSearchDomainClientTypes {
    /// The statistics for a field calculated in the request.
    public struct FieldStats: Swift.Equatable {
        /// The number of documents that contain a value in the specified field in the result set.
        public var count: Swift.Int
        /// The maximum value found in the specified field in the result set. If the field is numeric (int, int-array, double, or double-array), max is the string representation of a double-precision 64-bit floating point value. If the field is date or date-array, max is the string representation of a date with the format specified in [IETF RFC3339](http://tools.ietf.org/html/rfc3339): yyyy-mm-ddTHH:mm:ss.SSSZ.
        public var max: Swift.String?
        /// The average of the values found in the specified field in the result set. If the field is numeric (int, int-array, double, or double-array), mean is the string representation of a double-precision 64-bit floating point value. If the field is date or date-array, mean is the string representation of a date with the format specified in [IETF RFC3339](http://tools.ietf.org/html/rfc3339): yyyy-mm-ddTHH:mm:ss.SSSZ.
        public var mean: Swift.String?
        /// The minimum value found in the specified field in the result set. If the field is numeric (int, int-array, double, or double-array), min is the string representation of a double-precision 64-bit floating point value. If the field is date or date-array, min is the string representation of a date with the format specified in [IETF RFC3339](http://tools.ietf.org/html/rfc3339): yyyy-mm-ddTHH:mm:ss.SSSZ.
        public var min: Swift.String?
        /// The number of documents that do not contain a value in the specified field in the result set.
        public var missing: Swift.Int
        /// The standard deviation of the values in the specified field in the result set.
        public var stddev: Swift.Double
        /// The sum of the field values across the documents in the result set. null for date fields.
        public var sum: Swift.Double
        /// The sum of all field values in the result set squared.
        public var sumOfSquares: Swift.Double

        public init (
            count: Swift.Int = 0,
            max: Swift.String? = nil,
            mean: Swift.String? = nil,
            min: Swift.String? = nil,
            missing: Swift.Int = 0,
            stddev: Swift.Double = 0.0,
            sum: Swift.Double = 0.0,
            sumOfSquares: Swift.Double = 0.0
        )
        {
            self.count = count
            self.max = max
            self.mean = mean
            self.min = min
            self.missing = missing
            self.stddev = stddev
            self.sum = sum
            self.sumOfSquares = sumOfSquares
        }
    }

}
