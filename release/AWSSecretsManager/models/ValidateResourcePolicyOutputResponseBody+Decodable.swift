// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ValidateResourcePolicyOutputResponseBody: Swift.Equatable {
    let policyValidationPassed: Swift.Bool
    let validationErrors: [SecretsManagerClientTypes.ValidationErrorsEntry]?
}

extension ValidateResourcePolicyOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case policyValidationPassed = "PolicyValidationPassed"
        case validationErrors = "ValidationErrors"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyValidationPassedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .policyValidationPassed) ?? false
        policyValidationPassed = policyValidationPassedDecoded
        let validationErrorsContainer = try containerValues.decodeIfPresent([SecretsManagerClientTypes.ValidationErrorsEntry?].self, forKey: .validationErrors)
        var validationErrorsDecoded0:[SecretsManagerClientTypes.ValidationErrorsEntry]? = nil
        if let validationErrorsContainer = validationErrorsContainer {
            validationErrorsDecoded0 = [SecretsManagerClientTypes.ValidationErrorsEntry]()
            for structure0 in validationErrorsContainer {
                if let structure0 = structure0 {
                    validationErrorsDecoded0?.append(structure0)
                }
            }
        }
        validationErrors = validationErrorsDecoded0
    }
}
