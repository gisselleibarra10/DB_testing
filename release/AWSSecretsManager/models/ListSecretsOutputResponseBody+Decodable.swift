// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSecretsOutputResponseBody: Swift.Equatable {
    let secretList: [SecretsManagerClientTypes.SecretListEntry]?
    let nextToken: Swift.String?
}

extension ListSecretsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case secretList = "SecretList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let secretListContainer = try containerValues.decodeIfPresent([SecretsManagerClientTypes.SecretListEntry?].self, forKey: .secretList)
        var secretListDecoded0:[SecretsManagerClientTypes.SecretListEntry]? = nil
        if let secretListContainer = secretListContainer {
            secretListDecoded0 = [SecretsManagerClientTypes.SecretListEntry]()
            for structure0 in secretListContainer {
                if let structure0 = structure0 {
                    secretListDecoded0?.append(structure0)
                }
            }
        }
        secretList = secretListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
