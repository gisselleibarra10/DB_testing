// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RotateSecretInputBody: Swift.Equatable {
    let secretId: Swift.String?
    let clientRequestToken: Swift.String?
    let rotationLambdaARN: Swift.String?
    let rotationRules: SecretsManagerClientTypes.RotationRulesType?
    let rotateImmediately: Swift.Bool?
}

extension RotateSecretInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case rotateImmediately = "RotateImmediately"
        case rotationLambdaARN = "RotationLambdaARN"
        case rotationRules = "RotationRules"
        case secretId = "SecretId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let secretIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .secretId)
        secretId = secretIdDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let rotationLambdaARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rotationLambdaARN)
        rotationLambdaARN = rotationLambdaARNDecoded
        let rotationRulesDecoded = try containerValues.decodeIfPresent(SecretsManagerClientTypes.RotationRulesType.self, forKey: .rotationRules)
        rotationRules = rotationRulesDecoded
        let rotateImmediatelyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .rotateImmediately)
        rotateImmediately = rotateImmediatelyDecoded
    }
}
