// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RotateSecretInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case rotateImmediately = "RotateImmediately"
        case rotationLambdaARN = "RotationLambdaARN"
        case rotationRules = "RotationRules"
        case secretId = "SecretId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientRequestToken = self.clientRequestToken {
            try encodeContainer.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let rotateImmediately = self.rotateImmediately {
            try encodeContainer.encode(rotateImmediately, forKey: .rotateImmediately)
        }
        if let rotationLambdaARN = self.rotationLambdaARN {
            try encodeContainer.encode(rotationLambdaARN, forKey: .rotationLambdaARN)
        }
        if let rotationRules = self.rotationRules {
            try encodeContainer.encode(rotationRules, forKey: .rotationRules)
        }
        if let secretId = self.secretId {
            try encodeContainer.encode(secretId, forKey: .secretId)
        }
    }
}
