// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRandomPasswordInputBody: Swift.Equatable {
    let passwordLength: Swift.Int?
    let excludeCharacters: Swift.String?
    let excludeNumbers: Swift.Bool?
    let excludePunctuation: Swift.Bool?
    let excludeUppercase: Swift.Bool?
    let excludeLowercase: Swift.Bool?
    let includeSpace: Swift.Bool?
    let requireEachIncludedType: Swift.Bool?
}

extension GetRandomPasswordInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case excludeCharacters = "ExcludeCharacters"
        case excludeLowercase = "ExcludeLowercase"
        case excludeNumbers = "ExcludeNumbers"
        case excludePunctuation = "ExcludePunctuation"
        case excludeUppercase = "ExcludeUppercase"
        case includeSpace = "IncludeSpace"
        case passwordLength = "PasswordLength"
        case requireEachIncludedType = "RequireEachIncludedType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let passwordLengthDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .passwordLength)
        passwordLength = passwordLengthDecoded
        let excludeCharactersDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .excludeCharacters)
        excludeCharacters = excludeCharactersDecoded
        let excludeNumbersDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .excludeNumbers)
        excludeNumbers = excludeNumbersDecoded
        let excludePunctuationDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .excludePunctuation)
        excludePunctuation = excludePunctuationDecoded
        let excludeUppercaseDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .excludeUppercase)
        excludeUppercase = excludeUppercaseDecoded
        let excludeLowercaseDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .excludeLowercase)
        excludeLowercase = excludeLowercaseDecoded
        let includeSpaceDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeSpace)
        includeSpace = includeSpaceDecoded
        let requireEachIncludedTypeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .requireEachIncludedType)
        requireEachIncludedType = requireEachIncludedTypeDecoded
    }
}
