// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecretsManagerClientTypes {
    /// A structure that contains the details about a secret. It does not include the encrypted SecretString and SecretBinary values. To get those values, use [GetSecretValue](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetSecretValue.html) .
    public struct SecretListEntry: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the secret.
        public var aRN: Swift.String?
        /// The date and time when a secret was created.
        public var createdDate: ClientRuntime.Date?
        /// The date and time the deletion of the secret occurred. Not present on active secrets. The secret can be recovered until the number of days in the recovery window has passed, as specified in the RecoveryWindowInDays parameter of the [DeleteSecret](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html) operation.
        public var deletedDate: ClientRuntime.Date?
        /// The user-provided description of the secret.
        public var description: Swift.String?
        /// The ARN of the KMS key that Secrets Manager uses to encrypt the secret value. If the secret is encrypted with the Amazon Web Services managed key aws/secretsmanager, this field is omitted.
        public var kmsKeyId: Swift.String?
        /// The date that the secret was last accessed in the Region. This field is omitted if the secret has never been retrieved in the Region.
        public var lastAccessedDate: ClientRuntime.Date?
        /// The last date and time that this secret was modified in any way.
        public var lastChangedDate: ClientRuntime.Date?
        /// The most recent date and time that the Secrets Manager rotation process was successfully completed. This value is null if the secret hasn't ever rotated.
        public var lastRotatedDate: ClientRuntime.Date?
        /// The friendly name of the secret. You can use forward slashes in the name to represent a path hierarchy. For example, /prod/databases/dbserver1 could represent the secret for a server named dbserver1 in the folder databases in the folder prod.
        public var name: Swift.String?
        /// Returns the name of the service that created the secret.
        public var owningService: Swift.String?
        /// The Region where Secrets Manager originated the secret.
        public var primaryRegion: Swift.String?
        /// Indicates whether automatic, scheduled rotation is enabled for this secret.
        public var rotationEnabled: Swift.Bool?
        /// The ARN of an Amazon Web Services Lambda function invoked by Secrets Manager to rotate and expire the secret either automatically per the schedule or manually by a call to [RotateSecret](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_RotateSecret.html).
        public var rotationLambdaARN: Swift.String?
        /// A structure that defines the rotation configuration for the secret.
        public var rotationRules: SecretsManagerClientTypes.RotationRulesType?
        /// A list of all of the currently assigned SecretVersionStage staging labels and the SecretVersionId attached to each one. Staging labels are used to keep track of the different versions during the rotation process. A version that does not have any SecretVersionStage is considered deprecated and subject to deletion. Such versions are not included in this list.
        public var secretVersionsToStages: [Swift.String:[Swift.String]]?
        /// The list of user-defined tags associated with the secret. To add tags to a secret, use [TagResource](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_TagResource.html). To remove tags, use [UntagResource](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_UntagResource.html).
        public var tags: [SecretsManagerClientTypes.Tag]?

        public init (
            aRN: Swift.String? = nil,
            createdDate: ClientRuntime.Date? = nil,
            deletedDate: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            kmsKeyId: Swift.String? = nil,
            lastAccessedDate: ClientRuntime.Date? = nil,
            lastChangedDate: ClientRuntime.Date? = nil,
            lastRotatedDate: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            owningService: Swift.String? = nil,
            primaryRegion: Swift.String? = nil,
            rotationEnabled: Swift.Bool? = nil,
            rotationLambdaARN: Swift.String? = nil,
            rotationRules: SecretsManagerClientTypes.RotationRulesType? = nil,
            secretVersionsToStages: [Swift.String:[Swift.String]]? = nil,
            tags: [SecretsManagerClientTypes.Tag]? = nil
        )
        {
            self.aRN = aRN
            self.createdDate = createdDate
            self.deletedDate = deletedDate
            self.description = description
            self.kmsKeyId = kmsKeyId
            self.lastAccessedDate = lastAccessedDate
            self.lastChangedDate = lastChangedDate
            self.lastRotatedDate = lastRotatedDate
            self.name = name
            self.owningService = owningService
            self.primaryRegion = primaryRegion
            self.rotationEnabled = rotationEnabled
            self.rotationLambdaARN = rotationLambdaARN
            self.rotationRules = rotationRules
            self.secretVersionsToStages = secretVersionsToStages
            self.tags = tags
        }
    }

}
