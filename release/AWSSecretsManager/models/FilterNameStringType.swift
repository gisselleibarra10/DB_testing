// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecretsManagerClientTypes {
    public enum FilterNameStringType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case all
        case description
        case name
        case primaryRegion
        case tagKey
        case tagValue
        case sdkUnknown(Swift.String)

        public static var allCases: [FilterNameStringType] {
            return [
                .all,
                .description,
                .name,
                .primaryRegion,
                .tagKey,
                .tagValue,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .all: return "all"
            case .description: return "description"
            case .name: return "name"
            case .primaryRegion: return "primary-region"
            case .tagKey: return "tag-key"
            case .tagValue: return "tag-value"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = FilterNameStringType(rawValue: rawValue) ?? FilterNameStringType.sdkUnknown(rawValue)
        }
    }
}
