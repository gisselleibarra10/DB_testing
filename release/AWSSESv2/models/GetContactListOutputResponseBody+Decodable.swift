// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetContactListOutputResponseBody: Swift.Equatable {
    let contactListName: Swift.String?
    let topics: [SesV2ClientTypes.Topic]?
    let description: Swift.String?
    let createdTimestamp: ClientRuntime.Date?
    let lastUpdatedTimestamp: ClientRuntime.Date?
    let tags: [SesV2ClientTypes.Tag]?
}

extension GetContactListOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contactListName = "ContactListName"
        case createdTimestamp = "CreatedTimestamp"
        case description = "Description"
        case lastUpdatedTimestamp = "LastUpdatedTimestamp"
        case tags = "Tags"
        case topics = "Topics"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactListNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .contactListName)
        contactListName = contactListNameDecoded
        let topicsContainer = try containerValues.decodeIfPresent([SesV2ClientTypes.Topic?].self, forKey: .topics)
        var topicsDecoded0:[SesV2ClientTypes.Topic]? = nil
        if let topicsContainer = topicsContainer {
            topicsDecoded0 = [SesV2ClientTypes.Topic]()
            for structure0 in topicsContainer {
                if let structure0 = structure0 {
                    topicsDecoded0?.append(structure0)
                }
            }
        }
        topics = topicsDecoded0
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let createdTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdTimestamp)
        createdTimestamp = createdTimestampDecoded
        let lastUpdatedTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedTimestamp)
        lastUpdatedTimestamp = lastUpdatedTimestampDecoded
        let tagsContainer = try containerValues.decodeIfPresent([SesV2ClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[SesV2ClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [SesV2ClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
