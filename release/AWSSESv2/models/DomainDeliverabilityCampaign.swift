// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SesV2ClientTypes {
    /// An object that contains the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for (PutDeliverabilityDashboardOption operation).
    public struct DomainDeliverabilityCampaign: Swift.Equatable {
        /// The unique identifier for the campaign. The Deliverability dashboard automatically generates and assigns this identifier to a campaign.
        public var campaignId: Swift.String?
        /// The percentage of email messages that were deleted by recipients, without being opened first. Due to technical limitations, this value only includes recipients who opened the message by using an email client that supports images.
        public var deleteRate: Swift.Double?
        /// The major email providers who handled the email message.
        public var esps: [Swift.String]?
        /// The first time, in Unix time format, when the email message was delivered to any recipient's inbox. This value can help you determine how long it took for a campaign to deliver an email message.
        public var firstSeenDateTime: ClientRuntime.Date?
        /// The verified email address that the email message was sent from.
        public var fromAddress: Swift.String?
        /// The URL of an image that contains a snapshot of the email message that was sent.
        public var imageUrl: Swift.String?
        /// The number of email messages that were delivered to recipientsâ€™ inboxes.
        public var inboxCount: Swift.Int?
        /// The last time, in Unix time format, when the email message was delivered to any recipient's inbox. This value can help you determine how long it took for a campaign to deliver an email message.
        public var lastSeenDateTime: ClientRuntime.Date?
        /// The projected number of recipients that the email message was sent to.
        public var projectedVolume: Swift.Int?
        /// The percentage of email messages that were opened and then deleted by recipients. Due to technical limitations, this value only includes recipients who opened the message by using an email client that supports images.
        public var readDeleteRate: Swift.Double?
        /// The percentage of email messages that were opened by recipients. Due to technical limitations, this value only includes recipients who opened the message by using an email client that supports images.
        public var readRate: Swift.Double?
        /// The IP addresses that were used to send the email message.
        public var sendingIps: [Swift.String]?
        /// The number of email messages that were delivered to recipients' spam or junk mail folders.
        public var spamCount: Swift.Int?
        /// The subject line, or title, of the email message.
        public var subject: Swift.String?

        public init (
            campaignId: Swift.String? = nil,
            deleteRate: Swift.Double? = nil,
            esps: [Swift.String]? = nil,
            firstSeenDateTime: ClientRuntime.Date? = nil,
            fromAddress: Swift.String? = nil,
            imageUrl: Swift.String? = nil,
            inboxCount: Swift.Int? = nil,
            lastSeenDateTime: ClientRuntime.Date? = nil,
            projectedVolume: Swift.Int? = nil,
            readDeleteRate: Swift.Double? = nil,
            readRate: Swift.Double? = nil,
            sendingIps: [Swift.String]? = nil,
            spamCount: Swift.Int? = nil,
            subject: Swift.String? = nil
        )
        {
            self.campaignId = campaignId
            self.deleteRate = deleteRate
            self.esps = esps
            self.firstSeenDateTime = firstSeenDateTime
            self.fromAddress = fromAddress
            self.imageUrl = imageUrl
            self.inboxCount = inboxCount
            self.lastSeenDateTime = lastSeenDateTime
            self.projectedVolume = projectedVolume
            self.readDeleteRate = readDeleteRate
            self.readRate = readRate
            self.sendingIps = sendingIps
            self.spamCount = spamCount
            self.subject = subject
        }
    }

}
