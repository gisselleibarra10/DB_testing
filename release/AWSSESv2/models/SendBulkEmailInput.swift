// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents a request to send email messages to multiple destinations using Amazon SES. For more information, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html).
public struct SendBulkEmailInput: Swift.Equatable {
    /// The list of bulk email entry objects.
    /// This member is required.
    public var bulkEmailEntries: [SesV2ClientTypes.BulkEmailEntry]?
    /// The name of the configuration set to use when sending the email.
    public var configurationSetName: Swift.String?
    /// An object that contains the body of the message. You can specify a template message.
    /// This member is required.
    public var defaultContent: SesV2ClientTypes.BulkEmailContent?
    /// A list of tags, in the form of name/value pairs, to apply to an email that you send using the SendEmail operation. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.
    public var defaultEmailTags: [SesV2ClientTypes.MessageTag]?
    /// The address that you want bounce and complaint notifications to be sent to.
    public var feedbackForwardingEmailAddress: Swift.String?
    /// This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the FeedbackForwardingEmailAddress parameter. For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the FeedbackForwardingEmailAddressIdentityArn to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the FeedbackForwardingEmailAddress to be feedback@example.com. For more information about sending authorization, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).
    public var feedbackForwardingEmailAddressIdentityArn: Swift.String?
    /// The email address to use as the "From" address for the email. The address that you specify has to be verified.
    public var fromEmailAddress: Swift.String?
    /// This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the FromEmailAddress parameter. For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the FromEmailAddressIdentityArn to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the FromEmailAddress to be sender@example.com. For more information about sending authorization, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).
    public var fromEmailAddressIdentityArn: Swift.String?
    /// The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.
    public var replyToAddresses: [Swift.String]?

    public init (
        bulkEmailEntries: [SesV2ClientTypes.BulkEmailEntry]? = nil,
        configurationSetName: Swift.String? = nil,
        defaultContent: SesV2ClientTypes.BulkEmailContent? = nil,
        defaultEmailTags: [SesV2ClientTypes.MessageTag]? = nil,
        feedbackForwardingEmailAddress: Swift.String? = nil,
        feedbackForwardingEmailAddressIdentityArn: Swift.String? = nil,
        fromEmailAddress: Swift.String? = nil,
        fromEmailAddressIdentityArn: Swift.String? = nil,
        replyToAddresses: [Swift.String]? = nil
    )
    {
        self.bulkEmailEntries = bulkEmailEntries
        self.configurationSetName = configurationSetName
        self.defaultContent = defaultContent
        self.defaultEmailTags = defaultEmailTags
        self.feedbackForwardingEmailAddress = feedbackForwardingEmailAddress
        self.feedbackForwardingEmailAddressIdentityArn = feedbackForwardingEmailAddressIdentityArn
        self.fromEmailAddress = fromEmailAddress
        self.fromEmailAddressIdentityArn = fromEmailAddressIdentityArn
        self.replyToAddresses = replyToAddresses
    }
}
