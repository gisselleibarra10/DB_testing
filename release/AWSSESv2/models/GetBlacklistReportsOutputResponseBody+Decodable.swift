// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBlacklistReportsOutputResponseBody: Swift.Equatable {
    let blacklistReport: [Swift.String:[SesV2ClientTypes.BlacklistEntry]]?
}

extension GetBlacklistReportsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blacklistReport = "BlacklistReport"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blacklistReportContainer = try containerValues.decodeIfPresent([Swift.String: [SesV2ClientTypes.BlacklistEntry?]?].self, forKey: .blacklistReport)
        var blacklistReportDecoded0: [Swift.String:[SesV2ClientTypes.BlacklistEntry]]? = nil
        if let blacklistReportContainer = blacklistReportContainer {
            blacklistReportDecoded0 = [Swift.String:[SesV2ClientTypes.BlacklistEntry]]()
            for (key0, blacklistentries0) in blacklistReportContainer {
                var blacklistentries0Decoded0: [SesV2ClientTypes.BlacklistEntry]? = nil
                if let blacklistentries0 = blacklistentries0 {
                    blacklistentries0Decoded0 = [SesV2ClientTypes.BlacklistEntry]()
                    for structure1 in blacklistentries0 {
                        if let structure1 = structure1 {
                            blacklistentries0Decoded0?.append(structure1)
                        }
                    }
                }
                blacklistReportDecoded0?[key0] = blacklistentries0Decoded0
            }
        }
        blacklistReport = blacklistReportDecoded0
    }
}
