// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAccountOutputResponseBody: Swift.Equatable {
    let dedicatedIpAutoWarmupEnabled: Swift.Bool
    let enforcementStatus: Swift.String?
    let productionAccessEnabled: Swift.Bool
    let sendQuota: SesV2ClientTypes.SendQuota?
    let sendingEnabled: Swift.Bool
    let suppressionAttributes: SesV2ClientTypes.SuppressionAttributes?
    let details: SesV2ClientTypes.AccountDetails?
}

extension GetAccountOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dedicatedIpAutoWarmupEnabled = "DedicatedIpAutoWarmupEnabled"
        case details = "Details"
        case enforcementStatus = "EnforcementStatus"
        case productionAccessEnabled = "ProductionAccessEnabled"
        case sendQuota = "SendQuota"
        case sendingEnabled = "SendingEnabled"
        case suppressionAttributes = "SuppressionAttributes"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dedicatedIpAutoWarmupEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dedicatedIpAutoWarmupEnabled) ?? false
        dedicatedIpAutoWarmupEnabled = dedicatedIpAutoWarmupEnabledDecoded
        let enforcementStatusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .enforcementStatus)
        enforcementStatus = enforcementStatusDecoded
        let productionAccessEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .productionAccessEnabled) ?? false
        productionAccessEnabled = productionAccessEnabledDecoded
        let sendQuotaDecoded = try containerValues.decodeIfPresent(SesV2ClientTypes.SendQuota.self, forKey: .sendQuota)
        sendQuota = sendQuotaDecoded
        let sendingEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .sendingEnabled) ?? false
        sendingEnabled = sendingEnabledDecoded
        let suppressionAttributesDecoded = try containerValues.decodeIfPresent(SesV2ClientTypes.SuppressionAttributes.self, forKey: .suppressionAttributes)
        suppressionAttributes = suppressionAttributesDecoded
        let detailsDecoded = try containerValues.decodeIfPresent(SesV2ClientTypes.AccountDetails.self, forKey: .details)
        details = detailsDecoded
    }
}
