// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents a request to create a custom verification email template.
public struct CreateCustomVerificationEmailTemplateInput: Swift.Equatable {
    /// The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
    /// This member is required.
    public var failureRedirectionURL: Swift.String?
    /// The email address that the custom verification email is sent from.
    /// This member is required.
    public var fromEmailAddress: Swift.String?
    /// The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
    /// This member is required.
    public var successRedirectionURL: Swift.String?
    /// The content of the custom verification email. The total size of the email must be less than 10 MB. The message body may contain HTML, with some limitations. For more information, see [Custom Verification Email Frequently Asked Questions](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html#custom-verification-emails-faq) in the Amazon SES Developer Guide.
    /// This member is required.
    public var templateContent: Swift.String?
    /// The name of the custom verification email template.
    /// This member is required.
    public var templateName: Swift.String?
    /// The subject line of the custom verification email.
    /// This member is required.
    public var templateSubject: Swift.String?

    public init (
        failureRedirectionURL: Swift.String? = nil,
        fromEmailAddress: Swift.String? = nil,
        successRedirectionURL: Swift.String? = nil,
        templateContent: Swift.String? = nil,
        templateName: Swift.String? = nil,
        templateSubject: Swift.String? = nil
    )
    {
        self.failureRedirectionURL = failureRedirectionURL
        self.fromEmailAddress = fromEmailAddress
        self.successRedirectionURL = successRedirectionURL
        self.templateContent = templateContent
        self.templateName = templateName
        self.templateSubject = templateSubject
    }
}
