// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEmailIdentitiesOutputResponseBody: Swift.Equatable {
    let emailIdentities: [SesV2ClientTypes.IdentityInfo]?
    let nextToken: Swift.String?
}

extension ListEmailIdentitiesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case emailIdentities = "EmailIdentities"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let emailIdentitiesContainer = try containerValues.decodeIfPresent([SesV2ClientTypes.IdentityInfo?].self, forKey: .emailIdentities)
        var emailIdentitiesDecoded0:[SesV2ClientTypes.IdentityInfo]? = nil
        if let emailIdentitiesContainer = emailIdentitiesContainer {
            emailIdentitiesDecoded0 = [SesV2ClientTypes.IdentityInfo]()
            for structure0 in emailIdentitiesContainer {
                if let structure0 = structure0 {
                    emailIdentitiesDecoded0?.append(structure0)
                }
            }
        }
        emailIdentities = emailIdentitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
