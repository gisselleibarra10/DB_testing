// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SesV2ClientTypes.SendQuota: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case max24HourSend = "Max24HourSend"
        case maxSendRate = "MaxSendRate"
        case sentLast24Hours = "SentLast24Hours"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if max24HourSend != 0.0 {
            try encodeContainer.encode(max24HourSend, forKey: .max24HourSend)
        }
        if maxSendRate != 0.0 {
            try encodeContainer.encode(maxSendRate, forKey: .maxSendRate)
        }
        if sentLast24Hours != 0.0 {
            try encodeContainer.encode(sentLast24Hours, forKey: .sentLast24Hours)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let max24HourSendDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .max24HourSend) ?? 0.0
        max24HourSend = max24HourSendDecoded
        let maxSendRateDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .maxSendRate) ?? 0.0
        maxSendRate = maxSendRateDecoded
        let sentLast24HoursDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .sentLast24Hours) ?? 0.0
        sentLast24Hours = sentLast24HoursDecoded
    }
}
