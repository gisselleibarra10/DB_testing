// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetImportJobOutputResponseBody: Swift.Equatable {
    let jobId: Swift.String?
    let importDestination: SesV2ClientTypes.ImportDestination?
    let importDataSource: SesV2ClientTypes.ImportDataSource?
    let failureInfo: SesV2ClientTypes.FailureInfo?
    let jobStatus: SesV2ClientTypes.JobStatus?
    let createdTimestamp: ClientRuntime.Date?
    let completedTimestamp: ClientRuntime.Date?
    let processedRecordsCount: Swift.Int?
    let failedRecordsCount: Swift.Int?
}

extension GetImportJobOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case completedTimestamp = "CompletedTimestamp"
        case createdTimestamp = "CreatedTimestamp"
        case failedRecordsCount = "FailedRecordsCount"
        case failureInfo = "FailureInfo"
        case importDataSource = "ImportDataSource"
        case importDestination = "ImportDestination"
        case jobId = "JobId"
        case jobStatus = "JobStatus"
        case processedRecordsCount = "ProcessedRecordsCount"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobId)
        jobId = jobIdDecoded
        let importDestinationDecoded = try containerValues.decodeIfPresent(SesV2ClientTypes.ImportDestination.self, forKey: .importDestination)
        importDestination = importDestinationDecoded
        let importDataSourceDecoded = try containerValues.decodeIfPresent(SesV2ClientTypes.ImportDataSource.self, forKey: .importDataSource)
        importDataSource = importDataSourceDecoded
        let failureInfoDecoded = try containerValues.decodeIfPresent(SesV2ClientTypes.FailureInfo.self, forKey: .failureInfo)
        failureInfo = failureInfoDecoded
        let jobStatusDecoded = try containerValues.decodeIfPresent(SesV2ClientTypes.JobStatus.self, forKey: .jobStatus)
        jobStatus = jobStatusDecoded
        let createdTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdTimestamp)
        createdTimestamp = createdTimestampDecoded
        let completedTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .completedTimestamp)
        completedTimestamp = completedTimestampDecoded
        let processedRecordsCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .processedRecordsCount)
        processedRecordsCount = processedRecordsCountDecoded
        let failedRecordsCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failedRecordsCount)
        failedRecordsCount = failedRecordsCountDecoded
    }
}
