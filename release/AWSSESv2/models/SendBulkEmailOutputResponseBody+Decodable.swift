// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendBulkEmailOutputResponseBody: Swift.Equatable {
    let bulkEmailEntryResults: [SesV2ClientTypes.BulkEmailEntryResult]?
}

extension SendBulkEmailOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bulkEmailEntryResults = "BulkEmailEntryResults"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bulkEmailEntryResultsContainer = try containerValues.decodeIfPresent([SesV2ClientTypes.BulkEmailEntryResult?].self, forKey: .bulkEmailEntryResults)
        var bulkEmailEntryResultsDecoded0:[SesV2ClientTypes.BulkEmailEntryResult]? = nil
        if let bulkEmailEntryResultsContainer = bulkEmailEntryResultsContainer {
            bulkEmailEntryResultsDecoded0 = [SesV2ClientTypes.BulkEmailEntryResult]()
            for structure0 in bulkEmailEntryResultsContainer {
                if let structure0 = structure0 {
                    bulkEmailEntryResultsDecoded0?.append(structure0)
                }
            }
        }
        bulkEmailEntryResults = bulkEmailEntryResultsDecoded0
    }
}
