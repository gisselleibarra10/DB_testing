// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSuppressedDestinationsOutputResponseBody: Swift.Equatable {
    let suppressedDestinationSummaries: [SesV2ClientTypes.SuppressedDestinationSummary]?
    let nextToken: Swift.String?
}

extension ListSuppressedDestinationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case suppressedDestinationSummaries = "SuppressedDestinationSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let suppressedDestinationSummariesContainer = try containerValues.decodeIfPresent([SesV2ClientTypes.SuppressedDestinationSummary?].self, forKey: .suppressedDestinationSummaries)
        var suppressedDestinationSummariesDecoded0:[SesV2ClientTypes.SuppressedDestinationSummary]? = nil
        if let suppressedDestinationSummariesContainer = suppressedDestinationSummariesContainer {
            suppressedDestinationSummariesDecoded0 = [SesV2ClientTypes.SuppressedDestinationSummary]()
            for structure0 in suppressedDestinationSummariesContainer {
                if let structure0 = structure0 {
                    suppressedDestinationSummariesDecoded0?.append(structure0)
                }
            }
        }
        suppressedDestinationSummaries = suppressedDestinationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
