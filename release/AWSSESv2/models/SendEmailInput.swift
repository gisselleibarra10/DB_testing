// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents a request to send a single formatted email using Amazon SES. For more information, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-formatted.html).
public struct SendEmailInput: Swift.Equatable {
    /// The name of the configuration set to use when sending the email.
    public var configurationSetName: Swift.String?
    /// An object that contains the body of the message. You can send either a Simple message Raw message or a template Message.
    /// This member is required.
    public var content: SesV2ClientTypes.EmailContent?
    /// An object that contains the recipients of the email message.
    public var destination: SesV2ClientTypes.Destination?
    /// A list of tags, in the form of name/value pairs, to apply to an email that you send using the SendEmail operation. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.
    public var emailTags: [SesV2ClientTypes.MessageTag]?
    /// The address that you want bounce and complaint notifications to be sent to.
    public var feedbackForwardingEmailAddress: Swift.String?
    /// This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the FeedbackForwardingEmailAddress parameter. For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the FeedbackForwardingEmailAddressIdentityArn to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the FeedbackForwardingEmailAddress to be feedback@example.com. For more information about sending authorization, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).
    public var feedbackForwardingEmailAddressIdentityArn: Swift.String?
    /// The email address to use as the "From" address for the email. The address that you specify has to be verified.
    public var fromEmailAddress: Swift.String?
    /// This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the FromEmailAddress parameter. For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the FromEmailAddressIdentityArn to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the FromEmailAddress to be sender@example.com. For more information about sending authorization, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html). For Raw emails, the FromEmailAddressIdentityArn value overrides the X-SES-SOURCE-ARN and X-SES-FROM-ARN headers specified in raw email message content.
    public var fromEmailAddressIdentityArn: Swift.String?
    /// An object used to specify a list or topic to which an email belongs, which will be used when a contact chooses to unsubscribe.
    public var listManagementOptions: SesV2ClientTypes.ListManagementOptions?
    /// The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.
    public var replyToAddresses: [Swift.String]?

    public init (
        configurationSetName: Swift.String? = nil,
        content: SesV2ClientTypes.EmailContent? = nil,
        destination: SesV2ClientTypes.Destination? = nil,
        emailTags: [SesV2ClientTypes.MessageTag]? = nil,
        feedbackForwardingEmailAddress: Swift.String? = nil,
        feedbackForwardingEmailAddressIdentityArn: Swift.String? = nil,
        fromEmailAddress: Swift.String? = nil,
        fromEmailAddressIdentityArn: Swift.String? = nil,
        listManagementOptions: SesV2ClientTypes.ListManagementOptions? = nil,
        replyToAddresses: [Swift.String]? = nil
    )
    {
        self.configurationSetName = configurationSetName
        self.content = content
        self.destination = destination
        self.emailTags = emailTags
        self.feedbackForwardingEmailAddress = feedbackForwardingEmailAddress
        self.feedbackForwardingEmailAddressIdentityArn = feedbackForwardingEmailAddressIdentityArn
        self.fromEmailAddress = fromEmailAddress
        self.fromEmailAddressIdentityArn = fromEmailAddressIdentityArn
        self.listManagementOptions = listManagementOptions
        self.replyToAddresses = replyToAddresses
    }
}
