// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCustomVerificationEmailTemplatesOutputResponseBody: Swift.Equatable {
    let customVerificationEmailTemplates: [SesV2ClientTypes.CustomVerificationEmailTemplateMetadata]?
    let nextToken: Swift.String?
}

extension ListCustomVerificationEmailTemplatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customVerificationEmailTemplates = "CustomVerificationEmailTemplates"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customVerificationEmailTemplatesContainer = try containerValues.decodeIfPresent([SesV2ClientTypes.CustomVerificationEmailTemplateMetadata?].self, forKey: .customVerificationEmailTemplates)
        var customVerificationEmailTemplatesDecoded0:[SesV2ClientTypes.CustomVerificationEmailTemplateMetadata]? = nil
        if let customVerificationEmailTemplatesContainer = customVerificationEmailTemplatesContainer {
            customVerificationEmailTemplatesDecoded0 = [SesV2ClientTypes.CustomVerificationEmailTemplateMetadata]()
            for structure0 in customVerificationEmailTemplatesContainer {
                if let structure0 = structure0 {
                    customVerificationEmailTemplatesDecoded0?.append(structure0)
                }
            }
        }
        customVerificationEmailTemplates = customVerificationEmailTemplatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
