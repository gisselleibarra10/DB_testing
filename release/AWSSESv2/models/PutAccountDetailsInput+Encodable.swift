// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutAccountDetailsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case additionalContactEmailAddresses = "AdditionalContactEmailAddresses"
        case contactLanguage = "ContactLanguage"
        case mailType = "MailType"
        case productionAccessEnabled = "ProductionAccessEnabled"
        case useCaseDescription = "UseCaseDescription"
        case websiteURL = "WebsiteURL"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let additionalContactEmailAddresses = additionalContactEmailAddresses {
            var additionalContactEmailAddressesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .additionalContactEmailAddresses)
            for additionalcontactemailaddresses0 in additionalContactEmailAddresses {
                try additionalContactEmailAddressesContainer.encode(additionalcontactemailaddresses0)
            }
        }
        if let contactLanguage = self.contactLanguage {
            try encodeContainer.encode(contactLanguage.rawValue, forKey: .contactLanguage)
        }
        if let mailType = self.mailType {
            try encodeContainer.encode(mailType.rawValue, forKey: .mailType)
        }
        if let productionAccessEnabled = self.productionAccessEnabled {
            try encodeContainer.encode(productionAccessEnabled, forKey: .productionAccessEnabled)
        }
        if let useCaseDescription = self.useCaseDescription {
            try encodeContainer.encode(useCaseDescription, forKey: .useCaseDescription)
        }
        if let websiteURL = self.websiteURL {
            try encodeContainer.encode(websiteURL, forKey: .websiteURL)
        }
    }
}
