// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutEmailIdentityDkimSigningAttributesOutputResponseBody: Swift.Equatable {
    let dkimStatus: SesV2ClientTypes.DkimStatus?
    let dkimTokens: [Swift.String]?
}

extension PutEmailIdentityDkimSigningAttributesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dkimStatus = "DkimStatus"
        case dkimTokens = "DkimTokens"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dkimStatusDecoded = try containerValues.decodeIfPresent(SesV2ClientTypes.DkimStatus.self, forKey: .dkimStatus)
        dkimStatus = dkimStatusDecoded
        let dkimTokensContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .dkimTokens)
        var dkimTokensDecoded0:[Swift.String]? = nil
        if let dkimTokensContainer = dkimTokensContainer {
            dkimTokensDecoded0 = [Swift.String]()
            for string0 in dkimTokensContainer {
                if let string0 = string0 {
                    dkimTokensDecoded0?.append(string0)
                }
            }
        }
        dkimTokens = dkimTokensDecoded0
    }
}
