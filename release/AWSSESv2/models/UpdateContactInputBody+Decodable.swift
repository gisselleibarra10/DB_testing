// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateContactInputBody: Swift.Equatable {
    let topicPreferences: [SesV2ClientTypes.TopicPreference]?
    let unsubscribeAll: Swift.Bool
    let attributesData: Swift.String?
}

extension UpdateContactInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributesData = "AttributesData"
        case topicPreferences = "TopicPreferences"
        case unsubscribeAll = "UnsubscribeAll"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let topicPreferencesContainer = try containerValues.decodeIfPresent([SesV2ClientTypes.TopicPreference?].self, forKey: .topicPreferences)
        var topicPreferencesDecoded0:[SesV2ClientTypes.TopicPreference]? = nil
        if let topicPreferencesContainer = topicPreferencesContainer {
            topicPreferencesDecoded0 = [SesV2ClientTypes.TopicPreference]()
            for structure0 in topicPreferencesContainer {
                if let structure0 = structure0 {
                    topicPreferencesDecoded0?.append(structure0)
                }
            }
        }
        topicPreferences = topicPreferencesDecoded0
        let unsubscribeAllDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .unsubscribeAll) ?? false
        unsubscribeAll = unsubscribeAllDecoded
        let attributesDataDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attributesData)
        attributesData = attributesDataDecoded
    }
}
