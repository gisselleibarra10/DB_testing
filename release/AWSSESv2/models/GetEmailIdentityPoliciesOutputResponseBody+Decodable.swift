// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetEmailIdentityPoliciesOutputResponseBody: Swift.Equatable {
    let policies: [Swift.String:Swift.String]?
}

extension GetEmailIdentityPoliciesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case policies = "Policies"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policiesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .policies)
        var policiesDecoded0: [Swift.String:Swift.String]? = nil
        if let policiesContainer = policiesContainer {
            policiesDecoded0 = [Swift.String:Swift.String]()
            for (key0, policy0) in policiesContainer {
                if let policy0 = policy0 {
                    policiesDecoded0?[key0] = policy0
                }
            }
        }
        policies = policiesDecoded0
    }
}
