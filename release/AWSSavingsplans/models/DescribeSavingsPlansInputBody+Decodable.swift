// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSavingsPlansInputBody: Swift.Equatable {
    let savingsPlanArns: [Swift.String]?
    let savingsPlanIds: [Swift.String]?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let states: [SavingsplansClientTypes.SavingsPlanState]?
    let filters: [SavingsplansClientTypes.SavingsPlanFilter]?
}

extension DescribeSavingsPlansInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filters
        case maxResults
        case nextToken
        case savingsPlanArns
        case savingsPlanIds
        case states
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let savingsPlanArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .savingsPlanArns)
        var savingsPlanArnsDecoded0:[Swift.String]? = nil
        if let savingsPlanArnsContainer = savingsPlanArnsContainer {
            savingsPlanArnsDecoded0 = [Swift.String]()
            for string0 in savingsPlanArnsContainer {
                if let string0 = string0 {
                    savingsPlanArnsDecoded0?.append(string0)
                }
            }
        }
        savingsPlanArns = savingsPlanArnsDecoded0
        let savingsPlanIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .savingsPlanIds)
        var savingsPlanIdsDecoded0:[Swift.String]? = nil
        if let savingsPlanIdsContainer = savingsPlanIdsContainer {
            savingsPlanIdsDecoded0 = [Swift.String]()
            for string0 in savingsPlanIdsContainer {
                if let string0 = string0 {
                    savingsPlanIdsDecoded0?.append(string0)
                }
            }
        }
        savingsPlanIds = savingsPlanIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let statesContainer = try containerValues.decodeIfPresent([SavingsplansClientTypes.SavingsPlanState?].self, forKey: .states)
        var statesDecoded0:[SavingsplansClientTypes.SavingsPlanState]? = nil
        if let statesContainer = statesContainer {
            statesDecoded0 = [SavingsplansClientTypes.SavingsPlanState]()
            for string0 in statesContainer {
                if let string0 = string0 {
                    statesDecoded0?.append(string0)
                }
            }
        }
        states = statesDecoded0
        let filtersContainer = try containerValues.decodeIfPresent([SavingsplansClientTypes.SavingsPlanFilter?].self, forKey: .filters)
        var filtersDecoded0:[SavingsplansClientTypes.SavingsPlanFilter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [SavingsplansClientTypes.SavingsPlanFilter]()
            for structure0 in filtersContainer {
                if let structure0 = structure0 {
                    filtersDecoded0?.append(structure0)
                }
            }
        }
        filters = filtersDecoded0
    }
}
