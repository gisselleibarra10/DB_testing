// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SavingsplansClientTypes {
    public enum SavingsPlansFilterName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case commitment
        case ec2InstanceFamily
        case end
        case paymentOption
        case region
        case savingsPlanType
        case start
        case term
        case upfront
        case sdkUnknown(Swift.String)

        public static var allCases: [SavingsPlansFilterName] {
            return [
                .commitment,
                .ec2InstanceFamily,
                .end,
                .paymentOption,
                .region,
                .savingsPlanType,
                .start,
                .term,
                .upfront,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .commitment: return "commitment"
            case .ec2InstanceFamily: return "ec2-instance-family"
            case .end: return "end"
            case .paymentOption: return "payment-option"
            case .region: return "region"
            case .savingsPlanType: return "savings-plan-type"
            case .start: return "start"
            case .term: return "term"
            case .upfront: return "upfront"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SavingsPlansFilterName(rawValue: rawValue) ?? SavingsPlansFilterName.sdkUnknown(rawValue)
        }
    }
}
