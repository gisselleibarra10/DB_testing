// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SavingsplansClientTypes.ParentSavingsPlanOffering: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case currency
        case durationSeconds
        case offeringId
        case paymentOption
        case planDescription
        case planType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let currency = self.currency {
            try encodeContainer.encode(currency.rawValue, forKey: .currency)
        }
        if durationSeconds != 0 {
            try encodeContainer.encode(durationSeconds, forKey: .durationSeconds)
        }
        if let offeringId = self.offeringId {
            try encodeContainer.encode(offeringId, forKey: .offeringId)
        }
        if let paymentOption = self.paymentOption {
            try encodeContainer.encode(paymentOption.rawValue, forKey: .paymentOption)
        }
        if let planDescription = self.planDescription {
            try encodeContainer.encode(planDescription, forKey: .planDescription)
        }
        if let planType = self.planType {
            try encodeContainer.encode(planType.rawValue, forKey: .planType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let offeringIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .offeringId)
        offeringId = offeringIdDecoded
        let paymentOptionDecoded = try containerValues.decodeIfPresent(SavingsplansClientTypes.SavingsPlanPaymentOption.self, forKey: .paymentOption)
        paymentOption = paymentOptionDecoded
        let planTypeDecoded = try containerValues.decodeIfPresent(SavingsplansClientTypes.SavingsPlanType.self, forKey: .planType)
        planType = planTypeDecoded
        let durationSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .durationSeconds) ?? 0
        durationSeconds = durationSecondsDecoded
        let currencyDecoded = try containerValues.decodeIfPresent(SavingsplansClientTypes.CurrencyCode.self, forKey: .currency)
        currency = currencyDecoded
        let planDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .planDescription)
        planDescription = planDescriptionDecoded
    }
}
