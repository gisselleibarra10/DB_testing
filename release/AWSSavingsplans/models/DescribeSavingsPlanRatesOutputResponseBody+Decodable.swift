// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSavingsPlanRatesOutputResponseBody: Swift.Equatable {
    let savingsPlanId: Swift.String?
    let searchResults: [SavingsplansClientTypes.SavingsPlanRate]?
    let nextToken: Swift.String?
}

extension DescribeSavingsPlanRatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case savingsPlanId
        case searchResults
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let savingsPlanIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .savingsPlanId)
        savingsPlanId = savingsPlanIdDecoded
        let searchResultsContainer = try containerValues.decodeIfPresent([SavingsplansClientTypes.SavingsPlanRate?].self, forKey: .searchResults)
        var searchResultsDecoded0:[SavingsplansClientTypes.SavingsPlanRate]? = nil
        if let searchResultsContainer = searchResultsContainer {
            searchResultsDecoded0 = [SavingsplansClientTypes.SavingsPlanRate]()
            for structure0 in searchResultsContainer {
                if let structure0 = structure0 {
                    searchResultsDecoded0?.append(structure0)
                }
            }
        }
        searchResults = searchResultsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
