// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateSavingsPlanInputBody: Swift.Equatable {
    let savingsPlanOfferingId: Swift.String?
    let commitment: Swift.String?
    let upfrontPaymentAmount: Swift.String?
    let purchaseTime: ClientRuntime.Date?
    let clientToken: Swift.String?
    let tags: [Swift.String:Swift.String]?
}

extension CreateSavingsPlanInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken
        case commitment
        case purchaseTime
        case savingsPlanOfferingId
        case tags
        case upfrontPaymentAmount
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let savingsPlanOfferingIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .savingsPlanOfferingId)
        savingsPlanOfferingId = savingsPlanOfferingIdDecoded
        let commitmentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .commitment)
        commitment = commitmentDecoded
        let upfrontPaymentAmountDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .upfrontPaymentAmount)
        upfrontPaymentAmount = upfrontPaymentAmountDecoded
        let purchaseTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .purchaseTime)
        purchaseTime = purchaseTimeDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
