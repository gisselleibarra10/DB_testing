// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudFrontClientTypes.OriginAccessControlConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case name = "Name"
        case originAccessControlOriginType = "OriginAccessControlOriginType"
        case signingBehavior = "SigningBehavior"
        case signingProtocol = "SigningProtocol"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://cloudfront.amazonaws.com/doc/2020-05-31/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let description = description {
            try container.encode(description, forKey: ClientRuntime.Key("Description"))
        }
        if let name = name {
            try container.encode(name, forKey: ClientRuntime.Key("Name"))
        }
        if let originAccessControlOriginType = originAccessControlOriginType {
            try container.encode(originAccessControlOriginType, forKey: ClientRuntime.Key("OriginAccessControlOriginType"))
        }
        if let signingBehavior = signingBehavior {
            try container.encode(signingBehavior, forKey: ClientRuntime.Key("SigningBehavior"))
        }
        if let signingProtocol = signingProtocol {
            try container.encode(signingProtocol, forKey: ClientRuntime.Key("SigningProtocol"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let signingProtocolDecoded = try containerValues.decodeIfPresent(CloudFrontClientTypes.OriginAccessControlSigningProtocols.self, forKey: .signingProtocol)
        signingProtocol = signingProtocolDecoded
        let signingBehaviorDecoded = try containerValues.decodeIfPresent(CloudFrontClientTypes.OriginAccessControlSigningBehaviors.self, forKey: .signingBehavior)
        signingBehavior = signingBehaviorDecoded
        let originAccessControlOriginTypeDecoded = try containerValues.decodeIfPresent(CloudFrontClientTypes.OriginAccessControlOriginTypes.self, forKey: .originAccessControlOriginType)
        originAccessControlOriginType = originAccessControlOriginTypeDecoded
    }
}
