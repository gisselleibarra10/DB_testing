// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudFrontClientTypes.ResponseHeadersPolicySecurityHeadersConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contentSecurityPolicy = "ContentSecurityPolicy"
        case contentTypeOptions = "ContentTypeOptions"
        case frameOptions = "FrameOptions"
        case referrerPolicy = "ReferrerPolicy"
        case strictTransportSecurity = "StrictTransportSecurity"
        case xSSProtection = "XSSProtection"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://cloudfront.amazonaws.com/doc/2020-05-31/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let contentSecurityPolicy = contentSecurityPolicy {
            try container.encode(contentSecurityPolicy, forKey: ClientRuntime.Key("ContentSecurityPolicy"))
        }
        if let contentTypeOptions = contentTypeOptions {
            try container.encode(contentTypeOptions, forKey: ClientRuntime.Key("ContentTypeOptions"))
        }
        if let frameOptions = frameOptions {
            try container.encode(frameOptions, forKey: ClientRuntime.Key("FrameOptions"))
        }
        if let referrerPolicy = referrerPolicy {
            try container.encode(referrerPolicy, forKey: ClientRuntime.Key("ReferrerPolicy"))
        }
        if let strictTransportSecurity = strictTransportSecurity {
            try container.encode(strictTransportSecurity, forKey: ClientRuntime.Key("StrictTransportSecurity"))
        }
        if let xSSProtection = xSSProtection {
            try container.encode(xSSProtection, forKey: ClientRuntime.Key("XSSProtection"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let xSSProtectionDecoded = try containerValues.decodeIfPresent(CloudFrontClientTypes.ResponseHeadersPolicyXSSProtection.self, forKey: .xSSProtection)
        xSSProtection = xSSProtectionDecoded
        let frameOptionsDecoded = try containerValues.decodeIfPresent(CloudFrontClientTypes.ResponseHeadersPolicyFrameOptions.self, forKey: .frameOptions)
        frameOptions = frameOptionsDecoded
        let referrerPolicyDecoded = try containerValues.decodeIfPresent(CloudFrontClientTypes.ResponseHeadersPolicyReferrerPolicy.self, forKey: .referrerPolicy)
        referrerPolicy = referrerPolicyDecoded
        let contentSecurityPolicyDecoded = try containerValues.decodeIfPresent(CloudFrontClientTypes.ResponseHeadersPolicyContentSecurityPolicy.self, forKey: .contentSecurityPolicy)
        contentSecurityPolicy = contentSecurityPolicyDecoded
        let contentTypeOptionsDecoded = try containerValues.decodeIfPresent(CloudFrontClientTypes.ResponseHeadersPolicyContentTypeOptions.self, forKey: .contentTypeOptions)
        contentTypeOptions = contentTypeOptionsDecoded
        let strictTransportSecurityDecoded = try containerValues.decodeIfPresent(CloudFrontClientTypes.ResponseHeadersPolicyStrictTransportSecurity.self, forKey: .strictTransportSecurity)
        strictTransportSecurity = strictTransportSecurityDecoded
    }
}
