// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudFrontClientTypes.ResponseHeadersPolicyStrictTransportSecurity: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessControlMaxAgeSec = "AccessControlMaxAgeSec"
        case includeSubdomains = "IncludeSubdomains"
        case `override` = "Override"
        case preload = "Preload"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://cloudfront.amazonaws.com/doc/2020-05-31/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let accessControlMaxAgeSec = accessControlMaxAgeSec {
            try container.encode(accessControlMaxAgeSec, forKey: ClientRuntime.Key("AccessControlMaxAgeSec"))
        }
        if let includeSubdomains = includeSubdomains {
            try container.encode(includeSubdomains, forKey: ClientRuntime.Key("IncludeSubdomains"))
        }
        if let `override` = `override` {
            try container.encode(`override`, forKey: ClientRuntime.Key("Override"))
        }
        if let preload = preload {
            try container.encode(preload, forKey: ClientRuntime.Key("Preload"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let overrideDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .override)
        `override` = overrideDecoded
        let includeSubdomainsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeSubdomains)
        includeSubdomains = includeSubdomainsDecoded
        let preloadDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .preload)
        preload = preloadDecoded
        let accessControlMaxAgeSecDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .accessControlMaxAgeSec)
        accessControlMaxAgeSec = accessControlMaxAgeSecDecoded
    }
}
