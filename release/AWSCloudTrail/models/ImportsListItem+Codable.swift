// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudTrailClientTypes.ImportsListItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdTimestamp = "CreatedTimestamp"
        case destinations = "Destinations"
        case importId = "ImportId"
        case importStatus = "ImportStatus"
        case updatedTimestamp = "UpdatedTimestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdTimestamp = self.createdTimestamp {
            try encodeContainer.encode(createdTimestamp.timeIntervalSince1970, forKey: .createdTimestamp)
        }
        if let destinations = destinations {
            var destinationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .destinations)
            for importdestinations0 in destinations {
                try destinationsContainer.encode(importdestinations0)
            }
        }
        if let importId = self.importId {
            try encodeContainer.encode(importId, forKey: .importId)
        }
        if let importStatus = self.importStatus {
            try encodeContainer.encode(importStatus.rawValue, forKey: .importStatus)
        }
        if let updatedTimestamp = self.updatedTimestamp {
            try encodeContainer.encode(updatedTimestamp.timeIntervalSince1970, forKey: .updatedTimestamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let importIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .importId)
        importId = importIdDecoded
        let importStatusDecoded = try containerValues.decodeIfPresent(CloudTrailClientTypes.ImportStatus.self, forKey: .importStatus)
        importStatus = importStatusDecoded
        let destinationsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .destinations)
        var destinationsDecoded0:[Swift.String]? = nil
        if let destinationsContainer = destinationsContainer {
            destinationsDecoded0 = [Swift.String]()
            for string0 in destinationsContainer {
                if let string0 = string0 {
                    destinationsDecoded0?.append(string0)
                }
            }
        }
        destinations = destinationsDecoded0
        let createdTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdTimestamp)
        createdTimestamp = createdTimestampDecoded
        let updatedTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .updatedTimestamp)
        updatedTimestamp = updatedTimestampDecoded
    }
}
