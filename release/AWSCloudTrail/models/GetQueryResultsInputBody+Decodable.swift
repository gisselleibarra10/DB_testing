// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetQueryResultsInputBody: Swift.Equatable {
    let eventDataStore: Swift.String?
    let queryId: Swift.String?
    let nextToken: Swift.String?
    let maxQueryResults: Swift.Int?
}

extension GetQueryResultsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventDataStore = "EventDataStore"
        case maxQueryResults = "MaxQueryResults"
        case nextToken = "NextToken"
        case queryId = "QueryId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventDataStoreDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventDataStore)
        eventDataStore = eventDataStoreDecoded
        let queryIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryId)
        queryId = queryIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxQueryResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxQueryResults)
        maxQueryResults = maxQueryResultsDecoded
    }
}
