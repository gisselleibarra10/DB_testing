// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct RestoreEventDataStoreOutputResponse: Swift.Equatable {
    /// The advanced event selectors that were used to select events.
    public var advancedEventSelectors: [CloudTrailClientTypes.AdvancedEventSelector]?
    /// The timestamp of an event data store's creation.
    public var createdTimestamp: ClientRuntime.Date?
    /// The event data store ARN.
    public var eventDataStoreArn: Swift.String?
    /// Indicates whether the event data store is collecting events from all regions, or only from the region in which the event data store was created.
    public var multiRegionEnabled: Swift.Bool?
    /// The name of the event data store.
    public var name: Swift.String?
    /// Indicates whether an event data store is collecting logged events for an organization in Organizations.
    public var organizationEnabled: Swift.Bool?
    /// The retention period, in days.
    public var retentionPeriod: Swift.Int?
    /// The status of the event data store.
    public var status: CloudTrailClientTypes.EventDataStoreStatus?
    /// Indicates that termination protection is enabled and the event data store cannot be automatically deleted.
    public var terminationProtectionEnabled: Swift.Bool?
    /// The timestamp that shows when an event data store was updated, if applicable. UpdatedTimestamp is always either the same or newer than the time shown in CreatedTimestamp.
    public var updatedTimestamp: ClientRuntime.Date?

    public init (
        advancedEventSelectors: [CloudTrailClientTypes.AdvancedEventSelector]? = nil,
        createdTimestamp: ClientRuntime.Date? = nil,
        eventDataStoreArn: Swift.String? = nil,
        multiRegionEnabled: Swift.Bool? = nil,
        name: Swift.String? = nil,
        organizationEnabled: Swift.Bool? = nil,
        retentionPeriod: Swift.Int? = nil,
        status: CloudTrailClientTypes.EventDataStoreStatus? = nil,
        terminationProtectionEnabled: Swift.Bool? = nil,
        updatedTimestamp: ClientRuntime.Date? = nil
    )
    {
        self.advancedEventSelectors = advancedEventSelectors
        self.createdTimestamp = createdTimestamp
        self.eventDataStoreArn = eventDataStoreArn
        self.multiRegionEnabled = multiRegionEnabled
        self.name = name
        self.organizationEnabled = organizationEnabled
        self.retentionPeriod = retentionPeriod
        self.status = status
        self.terminationProtectionEnabled = terminationProtectionEnabled
        self.updatedTimestamp = updatedTimestamp
    }
}
