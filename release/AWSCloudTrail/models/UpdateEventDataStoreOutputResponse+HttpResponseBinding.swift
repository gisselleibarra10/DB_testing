// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateEventDataStoreOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: UpdateEventDataStoreOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.advancedEventSelectors = output.advancedEventSelectors
            self.createdTimestamp = output.createdTimestamp
            self.eventDataStoreArn = output.eventDataStoreArn
            self.multiRegionEnabled = output.multiRegionEnabled
            self.name = output.name
            self.organizationEnabled = output.organizationEnabled
            self.retentionPeriod = output.retentionPeriod
            self.status = output.status
            self.terminationProtectionEnabled = output.terminationProtectionEnabled
            self.updatedTimestamp = output.updatedTimestamp
        } else {
            self.advancedEventSelectors = nil
            self.createdTimestamp = nil
            self.eventDataStoreArn = nil
            self.multiRegionEnabled = nil
            self.name = nil
            self.organizationEnabled = nil
            self.retentionPeriod = nil
            self.status = nil
            self.terminationProtectionEnabled = nil
            self.updatedTimestamp = nil
        }
    }
}
