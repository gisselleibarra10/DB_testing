// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudTrailClientTypes {
    /// A storage lake of event data against which you can run complex SQL-based queries. An event data store can include events that you have logged on your account from the last 90 to 2557 days (about three months to up to seven years). To select events for an event data store, use [advanced event selectors](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced).
    public struct EventDataStore: Swift.Equatable {
        /// This field is being deprecated. The advanced event selectors that were used to select events for the data store.
        @available(*, deprecated, message: "AdvancedEventSelectors is no longer returned by ListEventDataStores")
        public var advancedEventSelectors: [CloudTrailClientTypes.AdvancedEventSelector]?
        /// This field is being deprecated. The timestamp of the event data store's creation.
        @available(*, deprecated, message: "CreatedTimestamp is no longer returned by ListEventDataStores")
        public var createdTimestamp: ClientRuntime.Date?
        /// The ARN of the event data store.
        public var eventDataStoreArn: Swift.String?
        /// This field is being deprecated. Indicates whether the event data store includes events from all regions, or only from the region in which it was created.
        @available(*, deprecated, message: "MultiRegionEnabled is no longer returned by ListEventDataStores")
        public var multiRegionEnabled: Swift.Bool?
        /// The name of the event data store.
        public var name: Swift.String?
        /// This field is being deprecated. Indicates that an event data store is collecting logged events for an organization.
        @available(*, deprecated, message: "OrganizationEnabled is no longer returned by ListEventDataStores")
        public var organizationEnabled: Swift.Bool?
        /// This field is being deprecated. The retention period, in days.
        @available(*, deprecated, message: "RetentionPeriod is no longer returned by ListEventDataStores")
        public var retentionPeriod: Swift.Int?
        /// This field is being deprecated. The status of an event data store. Values are ENABLED and PENDING_DELETION.
        @available(*, deprecated, message: "Status is no longer returned by ListEventDataStores")
        public var status: CloudTrailClientTypes.EventDataStoreStatus?
        /// This field is being deprecated. Indicates whether the event data store is protected from termination.
        @available(*, deprecated, message: "TerminationProtectionEnabled is no longer returned by ListEventDataStores")
        public var terminationProtectionEnabled: Swift.Bool?
        /// This field is being deprecated. The timestamp showing when an event data store was updated, if applicable. UpdatedTimestamp is always either the same or newer than the time shown in CreatedTimestamp.
        @available(*, deprecated, message: "UpdatedTimestamp is no longer returned by ListEventDataStores")
        public var updatedTimestamp: ClientRuntime.Date?

        public init (
            advancedEventSelectors: [CloudTrailClientTypes.AdvancedEventSelector]? = nil,
            createdTimestamp: ClientRuntime.Date? = nil,
            eventDataStoreArn: Swift.String? = nil,
            multiRegionEnabled: Swift.Bool? = nil,
            name: Swift.String? = nil,
            organizationEnabled: Swift.Bool? = nil,
            retentionPeriod: Swift.Int? = nil,
            status: CloudTrailClientTypes.EventDataStoreStatus? = nil,
            terminationProtectionEnabled: Swift.Bool? = nil,
            updatedTimestamp: ClientRuntime.Date? = nil
        )
        {
            self.advancedEventSelectors = advancedEventSelectors
            self.createdTimestamp = createdTimestamp
            self.eventDataStoreArn = eventDataStoreArn
            self.multiRegionEnabled = multiRegionEnabled
            self.name = name
            self.organizationEnabled = organizationEnabled
            self.retentionPeriod = retentionPeriod
            self.status = status
            self.terminationProtectionEnabled = terminationProtectionEnabled
            self.updatedTimestamp = updatedTimestamp
        }
    }

}
