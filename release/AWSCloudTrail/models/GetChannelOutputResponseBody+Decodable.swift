// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetChannelOutputResponseBody: Swift.Equatable {
    let channelArn: Swift.String?
    let name: Swift.String?
    let source: Swift.String?
    let sourceConfig: CloudTrailClientTypes.SourceConfig?
    let destinations: [CloudTrailClientTypes.Destination]?
}

extension GetChannelOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channelArn = "ChannelArn"
        case destinations = "Destinations"
        case name = "Name"
        case source = "Source"
        case sourceConfig = "SourceConfig"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .channelArn)
        channelArn = channelArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .source)
        source = sourceDecoded
        let sourceConfigDecoded = try containerValues.decodeIfPresent(CloudTrailClientTypes.SourceConfig.self, forKey: .sourceConfig)
        sourceConfig = sourceConfigDecoded
        let destinationsContainer = try containerValues.decodeIfPresent([CloudTrailClientTypes.Destination?].self, forKey: .destinations)
        var destinationsDecoded0:[CloudTrailClientTypes.Destination]? = nil
        if let destinationsContainer = destinationsContainer {
            destinationsDecoded0 = [CloudTrailClientTypes.Destination]()
            for structure0 in destinationsContainer {
                if let structure0 = structure0 {
                    destinationsDecoded0?.append(structure0)
                }
            }
        }
        destinations = destinationsDecoded0
    }
}
