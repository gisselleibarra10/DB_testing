// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StopImportOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: StopImportOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.createdTimestamp = output.createdTimestamp
            self.destinations = output.destinations
            self.endEventTime = output.endEventTime
            self.importId = output.importId
            self.importSource = output.importSource
            self.importStatistics = output.importStatistics
            self.importStatus = output.importStatus
            self.startEventTime = output.startEventTime
            self.updatedTimestamp = output.updatedTimestamp
        } else {
            self.createdTimestamp = nil
            self.destinations = nil
            self.endEventTime = nil
            self.importId = nil
            self.importSource = nil
            self.importStatistics = nil
            self.importStatus = nil
            self.startEventTime = nil
            self.updatedTimestamp = nil
        }
    }
}
