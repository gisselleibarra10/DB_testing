// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateEventDataStoreInput: Swift.Equatable {
    /// The advanced event selectors to use to select the events for the data store. For more information about how to use advanced event selectors, see [Log events by using advanced event selectors](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced) in the CloudTrail User Guide.
    public var advancedEventSelectors: [CloudTrailClientTypes.AdvancedEventSelector]?
    /// Specifies whether the event data store includes events from all regions, or only from the region in which the event data store is created.
    public var multiRegionEnabled: Swift.Bool?
    /// The name of the event data store.
    /// This member is required.
    public var name: Swift.String?
    /// Specifies whether an event data store collects events logged for an organization in Organizations.
    public var organizationEnabled: Swift.Bool?
    /// The retention period of the event data store, in days. You can set a retention period of up to 2557 days, the equivalent of seven years.
    public var retentionPeriod: Swift.Int?
    /// A list of tags.
    public var tagsList: [CloudTrailClientTypes.Tag]?
    /// Specifies whether termination protection is enabled for the event data store. If termination protection is enabled, you cannot delete the event data store until termination protection is disabled.
    public var terminationProtectionEnabled: Swift.Bool?

    public init (
        advancedEventSelectors: [CloudTrailClientTypes.AdvancedEventSelector]? = nil,
        multiRegionEnabled: Swift.Bool? = nil,
        name: Swift.String? = nil,
        organizationEnabled: Swift.Bool? = nil,
        retentionPeriod: Swift.Int? = nil,
        tagsList: [CloudTrailClientTypes.Tag]? = nil,
        terminationProtectionEnabled: Swift.Bool? = nil
    )
    {
        self.advancedEventSelectors = advancedEventSelectors
        self.multiRegionEnabled = multiRegionEnabled
        self.name = name
        self.organizationEnabled = organizationEnabled
        self.retentionPeriod = retentionPeriod
        self.tagsList = tagsList
        self.terminationProtectionEnabled = terminationProtectionEnabled
    }
}
