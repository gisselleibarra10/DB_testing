// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateEventDataStoreInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case advancedEventSelectors = "AdvancedEventSelectors"
        case multiRegionEnabled = "MultiRegionEnabled"
        case name = "Name"
        case organizationEnabled = "OrganizationEnabled"
        case retentionPeriod = "RetentionPeriod"
        case tagsList = "TagsList"
        case terminationProtectionEnabled = "TerminationProtectionEnabled"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let advancedEventSelectors = advancedEventSelectors {
            var advancedEventSelectorsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .advancedEventSelectors)
            for advancedeventselectors0 in advancedEventSelectors {
                try advancedEventSelectorsContainer.encode(advancedeventselectors0)
            }
        }
        if let multiRegionEnabled = self.multiRegionEnabled {
            try encodeContainer.encode(multiRegionEnabled, forKey: .multiRegionEnabled)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let organizationEnabled = self.organizationEnabled {
            try encodeContainer.encode(organizationEnabled, forKey: .organizationEnabled)
        }
        if let retentionPeriod = self.retentionPeriod {
            try encodeContainer.encode(retentionPeriod, forKey: .retentionPeriod)
        }
        if let tagsList = tagsList {
            var tagsListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tagsList)
            for tagslist0 in tagsList {
                try tagsListContainer.encode(tagslist0)
            }
        }
        if let terminationProtectionEnabled = self.terminationProtectionEnabled {
            try encodeContainer.encode(terminationProtectionEnabled, forKey: .terminationProtectionEnabled)
        }
    }
}
