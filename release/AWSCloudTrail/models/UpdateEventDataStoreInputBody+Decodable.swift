// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateEventDataStoreInputBody: Swift.Equatable {
    let eventDataStore: Swift.String?
    let name: Swift.String?
    let advancedEventSelectors: [CloudTrailClientTypes.AdvancedEventSelector]?
    let multiRegionEnabled: Swift.Bool?
    let organizationEnabled: Swift.Bool?
    let retentionPeriod: Swift.Int?
    let terminationProtectionEnabled: Swift.Bool?
}

extension UpdateEventDataStoreInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case advancedEventSelectors = "AdvancedEventSelectors"
        case eventDataStore = "EventDataStore"
        case multiRegionEnabled = "MultiRegionEnabled"
        case name = "Name"
        case organizationEnabled = "OrganizationEnabled"
        case retentionPeriod = "RetentionPeriod"
        case terminationProtectionEnabled = "TerminationProtectionEnabled"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventDataStoreDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventDataStore)
        eventDataStore = eventDataStoreDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let advancedEventSelectorsContainer = try containerValues.decodeIfPresent([CloudTrailClientTypes.AdvancedEventSelector?].self, forKey: .advancedEventSelectors)
        var advancedEventSelectorsDecoded0:[CloudTrailClientTypes.AdvancedEventSelector]? = nil
        if let advancedEventSelectorsContainer = advancedEventSelectorsContainer {
            advancedEventSelectorsDecoded0 = [CloudTrailClientTypes.AdvancedEventSelector]()
            for structure0 in advancedEventSelectorsContainer {
                if let structure0 = structure0 {
                    advancedEventSelectorsDecoded0?.append(structure0)
                }
            }
        }
        advancedEventSelectors = advancedEventSelectorsDecoded0
        let multiRegionEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .multiRegionEnabled)
        multiRegionEnabled = multiRegionEnabledDecoded
        let organizationEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .organizationEnabled)
        organizationEnabled = organizationEnabledDecoded
        let retentionPeriodDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .retentionPeriod)
        retentionPeriod = retentionPeriodDecoded
        let terminationProtectionEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .terminationProtectionEnabled)
        terminationProtectionEnabled = terminationProtectionEnabledDecoded
    }
}
