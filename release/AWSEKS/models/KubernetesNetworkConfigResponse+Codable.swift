// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EksClientTypes.KubernetesNetworkConfigResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ipFamily
        case serviceIpv4Cidr
        case serviceIpv6Cidr
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ipFamily = self.ipFamily {
            try encodeContainer.encode(ipFamily.rawValue, forKey: .ipFamily)
        }
        if let serviceIpv4Cidr = self.serviceIpv4Cidr {
            try encodeContainer.encode(serviceIpv4Cidr, forKey: .serviceIpv4Cidr)
        }
        if let serviceIpv6Cidr = self.serviceIpv6Cidr {
            try encodeContainer.encode(serviceIpv6Cidr, forKey: .serviceIpv6Cidr)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serviceIpv4CidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serviceIpv4Cidr)
        serviceIpv4Cidr = serviceIpv4CidrDecoded
        let serviceIpv6CidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serviceIpv6Cidr)
        serviceIpv6Cidr = serviceIpv6CidrDecoded
        let ipFamilyDecoded = try containerValues.decodeIfPresent(EksClientTypes.IpFamily.self, forKey: .ipFamily)
        ipFamily = ipFamilyDecoded
    }
}
