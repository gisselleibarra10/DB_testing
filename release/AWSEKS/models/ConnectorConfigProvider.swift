// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EksClientTypes {
    public enum ConnectorConfigProvider: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case aks
        case anthos
        case ec2
        case eksAnywhere
        case gke
        case openshift
        case other
        case rancher
        case tanzu
        case sdkUnknown(Swift.String)

        public static var allCases: [ConnectorConfigProvider] {
            return [
                .aks,
                .anthos,
                .ec2,
                .eksAnywhere,
                .gke,
                .openshift,
                .other,
                .rancher,
                .tanzu,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .aks: return "AKS"
            case .anthos: return "ANTHOS"
            case .ec2: return "EC2"
            case .eksAnywhere: return "EKS_ANYWHERE"
            case .gke: return "GKE"
            case .openshift: return "OPENSHIFT"
            case .other: return "OTHER"
            case .rancher: return "RANCHER"
            case .tanzu: return "TANZU"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ConnectorConfigProvider(rawValue: rawValue) ?? ConnectorConfigProvider.sdkUnknown(rawValue)
        }
    }
}
