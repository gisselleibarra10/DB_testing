// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EksClientTypes.ConnectorConfigResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activationCode
        case activationExpiry
        case activationId
        case provider
        case roleArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let activationCode = self.activationCode {
            try encodeContainer.encode(activationCode, forKey: .activationCode)
        }
        if let activationExpiry = self.activationExpiry {
            try encodeContainer.encode(activationExpiry.timeIntervalSince1970, forKey: .activationExpiry)
        }
        if let activationId = self.activationId {
            try encodeContainer.encode(activationId, forKey: .activationId)
        }
        if let provider = self.provider {
            try encodeContainer.encode(provider, forKey: .provider)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .activationId)
        activationId = activationIdDecoded
        let activationCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .activationCode)
        activationCode = activationCodeDecoded
        let activationExpiryDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .activationExpiry)
        activationExpiry = activationExpiryDecoded
        let providerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .provider)
        provider = providerDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
