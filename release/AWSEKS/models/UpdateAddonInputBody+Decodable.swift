// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateAddonInputBody: Swift.Equatable {
    let addonVersion: Swift.String?
    let serviceAccountRoleArn: Swift.String?
    let resolveConflicts: EksClientTypes.ResolveConflicts?
    let clientRequestToken: Swift.String?
}

extension UpdateAddonInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addonVersion
        case clientRequestToken
        case resolveConflicts
        case serviceAccountRoleArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let addonVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .addonVersion)
        addonVersion = addonVersionDecoded
        let serviceAccountRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serviceAccountRoleArn)
        serviceAccountRoleArn = serviceAccountRoleArnDecoded
        let resolveConflictsDecoded = try containerValues.decodeIfPresent(EksClientTypes.ResolveConflicts.self, forKey: .resolveConflicts)
        resolveConflicts = resolveConflictsDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
