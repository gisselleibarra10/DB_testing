// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIdentityProviderConfigsOutputResponseBody: Swift.Equatable {
    let identityProviderConfigs: [EksClientTypes.IdentityProviderConfig]?
    let nextToken: Swift.String?
}

extension ListIdentityProviderConfigsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identityProviderConfigs
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityProviderConfigsContainer = try containerValues.decodeIfPresent([EksClientTypes.IdentityProviderConfig?].self, forKey: .identityProviderConfigs)
        var identityProviderConfigsDecoded0:[EksClientTypes.IdentityProviderConfig]? = nil
        if let identityProviderConfigsContainer = identityProviderConfigsContainer {
            identityProviderConfigsDecoded0 = [EksClientTypes.IdentityProviderConfig]()
            for structure0 in identityProviderConfigsContainer {
                if let structure0 = structure0 {
                    identityProviderConfigsDecoded0?.append(structure0)
                }
            }
        }
        identityProviderConfigs = identityProviderConfigsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
