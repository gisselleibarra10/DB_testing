// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateNodegroupConfigInput: Swift.Equatable {
    /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
    public var clientRequestToken: Swift.String?
    /// The name of the Amazon EKS cluster that the managed node group resides in.
    /// This member is required.
    public var clusterName: Swift.String?
    /// The Kubernetes labels to be applied to the nodes in the node group after the update.
    public var labels: EksClientTypes.UpdateLabelsPayload?
    /// The name of the managed node group to update.
    /// This member is required.
    public var nodegroupName: Swift.String?
    /// The scaling configuration details for the Auto Scaling group after the update.
    public var scalingConfig: EksClientTypes.NodegroupScalingConfig?
    /// The Kubernetes taints to be applied to the nodes in the node group after the update. For more information, see [Node taints on managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html).
    public var taints: EksClientTypes.UpdateTaintsPayload?
    /// The node group update configuration.
    public var updateConfig: EksClientTypes.NodegroupUpdateConfig?

    public init (
        clientRequestToken: Swift.String? = nil,
        clusterName: Swift.String? = nil,
        labels: EksClientTypes.UpdateLabelsPayload? = nil,
        nodegroupName: Swift.String? = nil,
        scalingConfig: EksClientTypes.NodegroupScalingConfig? = nil,
        taints: EksClientTypes.UpdateTaintsPayload? = nil,
        updateConfig: EksClientTypes.NodegroupUpdateConfig? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.clusterName = clusterName
        self.labels = labels
        self.nodegroupName = nodegroupName
        self.scalingConfig = scalingConfig
        self.taints = taints
        self.updateConfig = updateConfig
    }
}
