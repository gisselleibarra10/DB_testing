// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateEncryptionConfigInputBody: Swift.Equatable {
    let encryptionConfig: [EksClientTypes.EncryptionConfig]?
    let clientRequestToken: Swift.String?
}

extension AssociateEncryptionConfigInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken
        case encryptionConfig
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let encryptionConfigContainer = try containerValues.decodeIfPresent([EksClientTypes.EncryptionConfig?].self, forKey: .encryptionConfig)
        var encryptionConfigDecoded0:[EksClientTypes.EncryptionConfig]? = nil
        if let encryptionConfigContainer = encryptionConfigContainer {
            encryptionConfigDecoded0 = [EksClientTypes.EncryptionConfig]()
            for structure0 in encryptionConfigContainer {
                if let structure0 = structure0 {
                    encryptionConfigDecoded0?.append(structure0)
                }
            }
        }
        encryptionConfig = encryptionConfigDecoded0
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
