// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAddonVersionsOutputResponseBody: Swift.Equatable {
    let addons: [EksClientTypes.AddonInfo]?
    let nextToken: Swift.String?
}

extension DescribeAddonVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addons
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let addonsContainer = try containerValues.decodeIfPresent([EksClientTypes.AddonInfo?].self, forKey: .addons)
        var addonsDecoded0:[EksClientTypes.AddonInfo]? = nil
        if let addonsContainer = addonsContainer {
            addonsDecoded0 = [EksClientTypes.AddonInfo]()
            for structure0 in addonsContainer {
                if let structure0 = structure0 {
                    addonsDecoded0?.append(structure0)
                }
            }
        }
        addons = addonsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
