// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateNodegroupConfigInputBody: Swift.Equatable {
    let labels: EksClientTypes.UpdateLabelsPayload?
    let taints: EksClientTypes.UpdateTaintsPayload?
    let scalingConfig: EksClientTypes.NodegroupScalingConfig?
    let updateConfig: EksClientTypes.NodegroupUpdateConfig?
    let clientRequestToken: Swift.String?
}

extension UpdateNodegroupConfigInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken
        case labels
        case scalingConfig
        case taints
        case updateConfig
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelsDecoded = try containerValues.decodeIfPresent(EksClientTypes.UpdateLabelsPayload.self, forKey: .labels)
        labels = labelsDecoded
        let taintsDecoded = try containerValues.decodeIfPresent(EksClientTypes.UpdateTaintsPayload.self, forKey: .taints)
        taints = taintsDecoded
        let scalingConfigDecoded = try containerValues.decodeIfPresent(EksClientTypes.NodegroupScalingConfig.self, forKey: .scalingConfig)
        scalingConfig = scalingConfigDecoded
        let updateConfigDecoded = try containerValues.decodeIfPresent(EksClientTypes.NodegroupUpdateConfig.self, forKey: .updateConfig)
        updateConfig = updateConfigDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
