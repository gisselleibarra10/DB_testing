// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EksClientTypes.ClusterHealth: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case issues
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let issues = issues {
            var issuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .issues)
            for clusterissuelist0 in issues {
                try issuesContainer.encode(clusterissuelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let issuesContainer = try containerValues.decodeIfPresent([EksClientTypes.ClusterIssue?].self, forKey: .issues)
        var issuesDecoded0:[EksClientTypes.ClusterIssue]? = nil
        if let issuesContainer = issuesContainer {
            issuesDecoded0 = [EksClientTypes.ClusterIssue]()
            for structure0 in issuesContainer {
                if let structure0 = structure0 {
                    issuesDecoded0?.append(structure0)
                }
            }
        }
        issues = issuesDecoded0
    }
}
