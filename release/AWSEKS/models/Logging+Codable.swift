// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EksClientTypes.Logging: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusterLogging
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clusterLogging = clusterLogging {
            var clusterLoggingContainer = encodeContainer.nestedUnkeyedContainer(forKey: .clusterLogging)
            for logsetups0 in clusterLogging {
                try clusterLoggingContainer.encode(logsetups0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterLoggingContainer = try containerValues.decodeIfPresent([EksClientTypes.LogSetup?].self, forKey: .clusterLogging)
        var clusterLoggingDecoded0:[EksClientTypes.LogSetup]? = nil
        if let clusterLoggingContainer = clusterLoggingContainer {
            clusterLoggingDecoded0 = [EksClientTypes.LogSetup]()
            for structure0 in clusterLoggingContainer {
                if let structure0 = structure0 {
                    clusterLoggingDecoded0?.append(structure0)
                }
            }
        }
        clusterLogging = clusterLoggingDecoded0
    }
}
