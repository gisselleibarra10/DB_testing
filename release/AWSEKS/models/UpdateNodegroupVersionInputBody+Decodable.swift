// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateNodegroupVersionInputBody: Swift.Equatable {
    let version: Swift.String?
    let releaseVersion: Swift.String?
    let launchTemplate: EksClientTypes.LaunchTemplateSpecification?
    let force: Swift.Bool
    let clientRequestToken: Swift.String?
}

extension UpdateNodegroupVersionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken
        case force
        case launchTemplate
        case releaseVersion
        case version
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
        let releaseVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .releaseVersion)
        releaseVersion = releaseVersionDecoded
        let launchTemplateDecoded = try containerValues.decodeIfPresent(EksClientTypes.LaunchTemplateSpecification.self, forKey: .launchTemplate)
        launchTemplate = launchTemplateDecoded
        let forceDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .force) ?? false
        force = forceDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
