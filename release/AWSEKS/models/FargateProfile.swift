// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EksClientTypes {
    /// An object representing an Fargate profile.
    public struct FargateProfile: Swift.Equatable {
        /// The name of the Amazon EKS cluster that the Fargate profile belongs to.
        public var clusterName: Swift.String?
        /// The Unix epoch timestamp in seconds for when the Fargate profile was created.
        public var createdAt: ClientRuntime.Date?
        /// The full Amazon Resource Name (ARN) of the Fargate profile.
        public var fargateProfileArn: Swift.String?
        /// The name of the Fargate profile.
        public var fargateProfileName: Swift.String?
        /// The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. For more information, see [Pod Execution Role](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html) in the Amazon EKS User Guide.
        public var podExecutionRoleArn: Swift.String?
        /// The selectors to match for pods to use this Fargate profile.
        public var selectors: [EksClientTypes.FargateProfileSelector]?
        /// The current status of the Fargate profile.
        public var status: EksClientTypes.FargateProfileStatus?
        /// The IDs of subnets to launch pods into.
        public var subnets: [Swift.String]?
        /// The metadata applied to the Fargate profile to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.
        public var tags: [Swift.String:Swift.String]?

        public init (
            clusterName: Swift.String? = nil,
            createdAt: ClientRuntime.Date? = nil,
            fargateProfileArn: Swift.String? = nil,
            fargateProfileName: Swift.String? = nil,
            podExecutionRoleArn: Swift.String? = nil,
            selectors: [EksClientTypes.FargateProfileSelector]? = nil,
            status: EksClientTypes.FargateProfileStatus? = nil,
            subnets: [Swift.String]? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.clusterName = clusterName
            self.createdAt = createdAt
            self.fargateProfileArn = fargateProfileArn
            self.fargateProfileName = fargateProfileName
            self.podExecutionRoleArn = podExecutionRoleArn
            self.selectors = selectors
            self.status = status
            self.subnets = subnets
            self.tags = tags
        }
    }

}
