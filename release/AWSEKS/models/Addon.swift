// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EksClientTypes {
    /// An Amazon EKS add-on. For more information, see [Amazon EKS add-ons](https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html) in the Amazon EKS User Guide.
    public struct Addon: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the add-on.
        public var addonArn: Swift.String?
        /// The name of the add-on.
        public var addonName: Swift.String?
        /// The version of the add-on.
        public var addonVersion: Swift.String?
        /// The name of the cluster.
        public var clusterName: Swift.String?
        /// The date and time that the add-on was created.
        public var createdAt: ClientRuntime.Date?
        /// An object representing the health of the add-on.
        public var health: EksClientTypes.AddonHealth?
        /// The date and time that the add-on was last modified.
        public var modifiedAt: ClientRuntime.Date?
        /// The Amazon Resource Name (ARN) of the IAM role that is bound to the Kubernetes service account used by the add-on.
        public var serviceAccountRoleArn: Swift.String?
        /// The status of the add-on.
        public var status: EksClientTypes.AddonStatus?
        /// The metadata that you apply to the add-on to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Add-on tags do not propagate to any other resources associated with the cluster.
        public var tags: [Swift.String:Swift.String]?

        public init (
            addonArn: Swift.String? = nil,
            addonName: Swift.String? = nil,
            addonVersion: Swift.String? = nil,
            clusterName: Swift.String? = nil,
            createdAt: ClientRuntime.Date? = nil,
            health: EksClientTypes.AddonHealth? = nil,
            modifiedAt: ClientRuntime.Date? = nil,
            serviceAccountRoleArn: Swift.String? = nil,
            status: EksClientTypes.AddonStatus? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.addonArn = addonArn
            self.addonName = addonName
            self.addonVersion = addonVersion
            self.clusterName = clusterName
            self.createdAt = createdAt
            self.health = health
            self.modifiedAt = modifiedAt
            self.serviceAccountRoleArn = serviceAccountRoleArn
            self.status = status
            self.tags = tags
        }
    }

}
