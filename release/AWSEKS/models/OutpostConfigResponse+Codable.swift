// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EksClientTypes.OutpostConfigResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case controlPlaneInstanceType
        case outpostArns
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let controlPlaneInstanceType = self.controlPlaneInstanceType {
            try encodeContainer.encode(controlPlaneInstanceType, forKey: .controlPlaneInstanceType)
        }
        if let outpostArns = outpostArns {
            var outpostArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .outpostArns)
            for stringlist0 in outpostArns {
                try outpostArnsContainer.encode(stringlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outpostArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .outpostArns)
        var outpostArnsDecoded0:[Swift.String]? = nil
        if let outpostArnsContainer = outpostArnsContainer {
            outpostArnsDecoded0 = [Swift.String]()
            for string0 in outpostArnsContainer {
                if let string0 = string0 {
                    outpostArnsDecoded0?.append(string0)
                }
            }
        }
        outpostArns = outpostArnsDecoded0
        let controlPlaneInstanceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .controlPlaneInstanceType)
        controlPlaneInstanceType = controlPlaneInstanceTypeDecoded
    }
}
