// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UnsupportedAvailabilityZoneExceptionBody: Swift.Equatable {
    let message: Swift.String?
    let clusterName: Swift.String?
    let nodegroupName: Swift.String?
    let validZones: [Swift.String]?
}

extension UnsupportedAvailabilityZoneExceptionBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusterName
        case message
        case nodegroupName
        case validZones
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let clusterNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterName)
        clusterName = clusterNameDecoded
        let nodegroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nodegroupName)
        nodegroupName = nodegroupNameDecoded
        let validZonesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .validZones)
        var validZonesDecoded0:[Swift.String]? = nil
        if let validZonesContainer = validZonesContainer {
            validZonesDecoded0 = [Swift.String]()
            for string0 in validZonesContainer {
                if let string0 = string0 {
                    validZonesDecoded0?.append(string0)
                }
            }
        }
        validZones = validZonesDecoded0
    }
}
