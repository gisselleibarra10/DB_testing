// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// A request to send an email message.
public struct SendEmailInput: Swift.Equatable {
    /// The name of the configuration set that you want to use when sending the email.
    public var configurationSetName: Swift.String?
    /// An object that contains the body of the message. You can send either a Simple message or a Raw message.
    /// This member is required.
    public var content: PinpointEmailClientTypes.EmailContent?
    /// An object that contains the recipients of the email message.
    /// This member is required.
    public var destination: PinpointEmailClientTypes.Destination?
    /// A list of tags, in the form of name/value pairs, to apply to an email that you send using the SendEmail operation. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.
    public var emailTags: [PinpointEmailClientTypes.MessageTag]?
    /// The address that Amazon Pinpoint should send bounce and complaint notifications to.
    public var feedbackForwardingEmailAddress: Swift.String?
    /// The email address that you want to use as the "From" address for the email. The address that you specify has to be verified.
    public var fromEmailAddress: Swift.String?
    /// The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.
    public var replyToAddresses: [Swift.String]?

    public init (
        configurationSetName: Swift.String? = nil,
        content: PinpointEmailClientTypes.EmailContent? = nil,
        destination: PinpointEmailClientTypes.Destination? = nil,
        emailTags: [PinpointEmailClientTypes.MessageTag]? = nil,
        feedbackForwardingEmailAddress: Swift.String? = nil,
        fromEmailAddress: Swift.String? = nil,
        replyToAddresses: [Swift.String]? = nil
    )
    {
        self.configurationSetName = configurationSetName
        self.content = content
        self.destination = destination
        self.emailTags = emailTags
        self.feedbackForwardingEmailAddress = feedbackForwardingEmailAddress
        self.fromEmailAddress = fromEmailAddress
        self.replyToAddresses = replyToAddresses
    }
}
