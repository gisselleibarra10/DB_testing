// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointEmailClientTypes {
    /// An email sending event type. For example, email sends, opens, and bounces are all email events.
    public enum EventType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case bounce
        case click
        case complaint
        case delivery
        case `open`
        case reject
        case renderingFailure
        case send
        case sdkUnknown(Swift.String)

        public static var allCases: [EventType] {
            return [
                .bounce,
                .click,
                .complaint,
                .delivery,
                .open,
                .reject,
                .renderingFailure,
                .send,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .bounce: return "BOUNCE"
            case .click: return "CLICK"
            case .complaint: return "COMPLAINT"
            case .delivery: return "DELIVERY"
            case .open: return "OPEN"
            case .reject: return "REJECT"
            case .renderingFailure: return "RENDERING_FAILURE"
            case .send: return "SEND"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = EventType(rawValue: rawValue) ?? EventType.sdkUnknown(rawValue)
        }
    }
}
