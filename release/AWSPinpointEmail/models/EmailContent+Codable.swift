// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointEmailClientTypes.EmailContent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case raw = "Raw"
        case simple = "Simple"
        case template = "Template"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let raw = self.raw {
            try encodeContainer.encode(raw, forKey: .raw)
        }
        if let simple = self.simple {
            try encodeContainer.encode(simple, forKey: .simple)
        }
        if let template = self.template {
            try encodeContainer.encode(template, forKey: .template)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let simpleDecoded = try containerValues.decodeIfPresent(PinpointEmailClientTypes.Message.self, forKey: .simple)
        simple = simpleDecoded
        let rawDecoded = try containerValues.decodeIfPresent(PinpointEmailClientTypes.RawMessage.self, forKey: .raw)
        raw = rawDecoded
        let templateDecoded = try containerValues.decodeIfPresent(PinpointEmailClientTypes.Template.self, forKey: .template)
        template = templateDecoded
    }
}
