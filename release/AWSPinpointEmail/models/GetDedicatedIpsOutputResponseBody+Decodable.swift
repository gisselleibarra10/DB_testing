// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDedicatedIpsOutputResponseBody: Swift.Equatable {
    let dedicatedIps: [PinpointEmailClientTypes.DedicatedIp]?
    let nextToken: Swift.String?
}

extension GetDedicatedIpsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dedicatedIps = "DedicatedIps"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dedicatedIpsContainer = try containerValues.decodeIfPresent([PinpointEmailClientTypes.DedicatedIp?].self, forKey: .dedicatedIps)
        var dedicatedIpsDecoded0:[PinpointEmailClientTypes.DedicatedIp]? = nil
        if let dedicatedIpsContainer = dedicatedIpsContainer {
            dedicatedIpsDecoded0 = [PinpointEmailClientTypes.DedicatedIp]()
            for structure0 in dedicatedIpsContainer {
                if let structure0 = structure0 {
                    dedicatedIpsDecoded0?.append(structure0)
                }
            }
        }
        dedicatedIps = dedicatedIpsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
