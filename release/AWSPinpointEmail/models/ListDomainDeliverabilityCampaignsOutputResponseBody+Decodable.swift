// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainDeliverabilityCampaignsOutputResponseBody: Swift.Equatable {
    let domainDeliverabilityCampaigns: [PinpointEmailClientTypes.DomainDeliverabilityCampaign]?
    let nextToken: Swift.String?
}

extension ListDomainDeliverabilityCampaignsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainDeliverabilityCampaigns = "DomainDeliverabilityCampaigns"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainDeliverabilityCampaignsContainer = try containerValues.decodeIfPresent([PinpointEmailClientTypes.DomainDeliverabilityCampaign?].self, forKey: .domainDeliverabilityCampaigns)
        var domainDeliverabilityCampaignsDecoded0:[PinpointEmailClientTypes.DomainDeliverabilityCampaign]? = nil
        if let domainDeliverabilityCampaignsContainer = domainDeliverabilityCampaignsContainer {
            domainDeliverabilityCampaignsDecoded0 = [PinpointEmailClientTypes.DomainDeliverabilityCampaign]()
            for structure0 in domainDeliverabilityCampaignsContainer {
                if let structure0 = structure0 {
                    domainDeliverabilityCampaignsDecoded0?.append(structure0)
                }
            }
        }
        domainDeliverabilityCampaigns = domainDeliverabilityCampaignsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
