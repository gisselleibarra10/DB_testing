// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53RecoveryClusterClientTypes.RoutingControl: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case controlPanelArn = "ControlPanelArn"
        case controlPanelName = "ControlPanelName"
        case routingControlArn = "RoutingControlArn"
        case routingControlName = "RoutingControlName"
        case routingControlState = "RoutingControlState"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let controlPanelArn = self.controlPanelArn {
            try encodeContainer.encode(controlPanelArn, forKey: .controlPanelArn)
        }
        if let controlPanelName = self.controlPanelName {
            try encodeContainer.encode(controlPanelName, forKey: .controlPanelName)
        }
        if let routingControlArn = self.routingControlArn {
            try encodeContainer.encode(routingControlArn, forKey: .routingControlArn)
        }
        if let routingControlName = self.routingControlName {
            try encodeContainer.encode(routingControlName, forKey: .routingControlName)
        }
        if let routingControlState = self.routingControlState {
            try encodeContainer.encode(routingControlState.rawValue, forKey: .routingControlState)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let controlPanelArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .controlPanelArn)
        controlPanelArn = controlPanelArnDecoded
        let controlPanelNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .controlPanelName)
        controlPanelName = controlPanelNameDecoded
        let routingControlArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .routingControlArn)
        routingControlArn = routingControlArnDecoded
        let routingControlNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .routingControlName)
        routingControlName = routingControlNameDecoded
        let routingControlStateDecoded = try containerValues.decodeIfPresent(Route53RecoveryClusterClientTypes.RoutingControlState.self, forKey: .routingControlState)
        routingControlState = routingControlStateDecoded
    }
}
