// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateRoutingControlStatesInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case safetyRulesToOverride = "SafetyRulesToOverride"
        case updateRoutingControlStateEntries = "UpdateRoutingControlStateEntries"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let safetyRulesToOverride = safetyRulesToOverride {
            var safetyRulesToOverrideContainer = encodeContainer.nestedUnkeyedContainer(forKey: .safetyRulesToOverride)
            for arns0 in safetyRulesToOverride {
                try safetyRulesToOverrideContainer.encode(arns0)
            }
        }
        if let updateRoutingControlStateEntries = updateRoutingControlStateEntries {
            var updateRoutingControlStateEntriesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .updateRoutingControlStateEntries)
            for updateroutingcontrolstateentries0 in updateRoutingControlStateEntries {
                try updateRoutingControlStateEntriesContainer.encode(updateroutingcontrolstateentries0)
            }
        }
    }
}
