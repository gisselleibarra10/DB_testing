// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateRoutingControlStateInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case routingControlArn = "RoutingControlArn"
        case routingControlState = "RoutingControlState"
        case safetyRulesToOverride = "SafetyRulesToOverride"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let routingControlArn = self.routingControlArn {
            try encodeContainer.encode(routingControlArn, forKey: .routingControlArn)
        }
        if let routingControlState = self.routingControlState {
            try encodeContainer.encode(routingControlState.rawValue, forKey: .routingControlState)
        }
        if let safetyRulesToOverride = safetyRulesToOverride {
            var safetyRulesToOverrideContainer = encodeContainer.nestedUnkeyedContainer(forKey: .safetyRulesToOverride)
            for arns0 in safetyRulesToOverride {
                try safetyRulesToOverrideContainer.encode(arns0)
            }
        }
    }
}
