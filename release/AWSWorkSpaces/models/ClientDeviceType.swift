// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension WorkSpacesClientTypes {
    public enum ClientDeviceType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case deviceTypeAndroid
        case deviceTypeIos
        case deviceTypeLinux
        case deviceTypeOsx
        case deviceTypeWeb
        case deviceTypeWindows
        case sdkUnknown(Swift.String)

        public static var allCases: [ClientDeviceType] {
            return [
                .deviceTypeAndroid,
                .deviceTypeIos,
                .deviceTypeLinux,
                .deviceTypeOsx,
                .deviceTypeWeb,
                .deviceTypeWindows,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .deviceTypeAndroid: return "DeviceTypeAndroid"
            case .deviceTypeIos: return "DeviceTypeIos"
            case .deviceTypeLinux: return "DeviceTypeLinux"
            case .deviceTypeOsx: return "DeviceTypeOsx"
            case .deviceTypeWeb: return "DeviceTypeWeb"
            case .deviceTypeWindows: return "DeviceTypeWindows"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ClientDeviceType(rawValue: rawValue) ?? ClientDeviceType.sdkUnknown(rawValue)
        }
    }
}
