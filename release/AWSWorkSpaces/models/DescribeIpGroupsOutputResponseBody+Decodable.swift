// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeIpGroupsOutputResponseBody: Swift.Equatable {
    let result: [WorkSpacesClientTypes.WorkspacesIpGroup]?
    let nextToken: Swift.String?
}

extension DescribeIpGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case result = "Result"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultContainer = try containerValues.decodeIfPresent([WorkSpacesClientTypes.WorkspacesIpGroup?].self, forKey: .result)
        var resultDecoded0:[WorkSpacesClientTypes.WorkspacesIpGroup]? = nil
        if let resultContainer = resultContainer {
            resultDecoded0 = [WorkSpacesClientTypes.WorkspacesIpGroup]()
            for structure0 in resultContainer {
                if let structure0 = structure0 {
                    resultDecoded0?.append(structure0)
                }
            }
        }
        result = resultDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
