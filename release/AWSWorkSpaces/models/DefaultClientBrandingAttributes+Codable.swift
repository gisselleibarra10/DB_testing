// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WorkSpacesClientTypes.DefaultClientBrandingAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case forgotPasswordLink = "ForgotPasswordLink"
        case loginMessage = "LoginMessage"
        case logoUrl = "LogoUrl"
        case supportEmail = "SupportEmail"
        case supportLink = "SupportLink"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let forgotPasswordLink = self.forgotPasswordLink {
            try encodeContainer.encode(forgotPasswordLink, forKey: .forgotPasswordLink)
        }
        if let loginMessage = loginMessage {
            var loginMessageContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .loginMessage)
            for (dictKey0, loginmessage0) in loginMessage {
                try loginMessageContainer.encode(loginmessage0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let logoUrl = self.logoUrl {
            try encodeContainer.encode(logoUrl, forKey: .logoUrl)
        }
        if let supportEmail = self.supportEmail {
            try encodeContainer.encode(supportEmail, forKey: .supportEmail)
        }
        if let supportLink = self.supportLink {
            try encodeContainer.encode(supportLink, forKey: .supportLink)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logoUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logoUrl)
        logoUrl = logoUrlDecoded
        let supportEmailDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .supportEmail)
        supportEmail = supportEmailDecoded
        let supportLinkDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .supportLink)
        supportLink = supportLinkDecoded
        let forgotPasswordLinkDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .forgotPasswordLink)
        forgotPasswordLink = forgotPasswordLinkDecoded
        let loginMessageContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .loginMessage)
        var loginMessageDecoded0: [Swift.String:Swift.String]? = nil
        if let loginMessageContainer = loginMessageContainer {
            loginMessageDecoded0 = [Swift.String:Swift.String]()
            for (key0, clientloginmessage0) in loginMessageContainer {
                if let clientloginmessage0 = clientloginmessage0 {
                    loginMessageDecoded0?[key0] = clientloginmessage0
                }
            }
        }
        loginMessage = loginMessageDecoded0
    }
}
