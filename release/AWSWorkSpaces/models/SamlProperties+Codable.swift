// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WorkSpacesClientTypes.SamlProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case relayStateParameterName = "RelayStateParameterName"
        case status = "Status"
        case userAccessUrl = "UserAccessUrl"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let relayStateParameterName = self.relayStateParameterName {
            try encodeContainer.encode(relayStateParameterName, forKey: .relayStateParameterName)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let userAccessUrl = self.userAccessUrl {
            try encodeContainer.encode(userAccessUrl, forKey: .userAccessUrl)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(WorkSpacesClientTypes.SamlStatusEnum.self, forKey: .status)
        status = statusDecoded
        let userAccessUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userAccessUrl)
        userAccessUrl = userAccessUrlDecoded
        let relayStateParameterNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .relayStateParameterName)
        relayStateParameterName = relayStateParameterNameDecoded
    }
}
