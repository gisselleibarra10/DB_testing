// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension WorkSpacesClientTypes {
    /// Returns default client branding attributes that were imported. These attributes display on the client login screen. Client branding attributes are public facing. Ensure that you don't include sensitive information.
    public struct DefaultClientBrandingAttributes: Swift.Equatable {
        /// The forgotten password link. This is the web address that users can go to if they forget the password for their WorkSpace.
        public var forgotPasswordLink: Swift.String?
        /// The login message. Specified as a key value pair, in which the key is a locale and the value is the localized message for that locale. The only key supported is en_US. The HTML tags supported include the following: a, b, blockquote, br, cite, code, dd, dl, dt, div, em, i, li, ol, p, pre, q, small, span, strike, strong, sub, sup, u, ul.
        public var loginMessage: [Swift.String:Swift.String]?
        /// The logo. The only image format accepted is a binary data object that is converted from a .png file.
        public var logoUrl: Swift.String?
        /// The support email. The company's customer support email address.
        ///
        /// * In each platform type, the SupportEmail and SupportLink parameters are mutually exclusive. You can specify one parameter for each platform type, but not both.
        ///
        /// * The default email is workspaces-feedback@amazon.com.
        public var supportEmail: Swift.String?
        /// The support link. The link for the company's customer support page for their WorkSpace.
        ///
        /// * In each platform type, the SupportEmail and SupportLink parameters are mutually exclusive.You can specify one parameter for each platform type, but not both.
        ///
        /// * The default support link is workspaces-feedback@amazon.com.
        public var supportLink: Swift.String?

        public init (
            forgotPasswordLink: Swift.String? = nil,
            loginMessage: [Swift.String:Swift.String]? = nil,
            logoUrl: Swift.String? = nil,
            supportEmail: Swift.String? = nil,
            supportLink: Swift.String? = nil
        )
        {
            self.forgotPasswordLink = forgotPasswordLink
            self.loginMessage = loginMessage
            self.logoUrl = logoUrl
            self.supportEmail = supportEmail
            self.supportLink = supportLink
        }
    }

}
