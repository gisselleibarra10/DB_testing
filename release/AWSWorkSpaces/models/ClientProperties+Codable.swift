// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WorkSpacesClientTypes.ClientProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case logUploadEnabled = "LogUploadEnabled"
        case reconnectEnabled = "ReconnectEnabled"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let logUploadEnabled = self.logUploadEnabled {
            try encodeContainer.encode(logUploadEnabled.rawValue, forKey: .logUploadEnabled)
        }
        if let reconnectEnabled = self.reconnectEnabled {
            try encodeContainer.encode(reconnectEnabled.rawValue, forKey: .reconnectEnabled)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reconnectEnabledDecoded = try containerValues.decodeIfPresent(WorkSpacesClientTypes.ReconnectEnum.self, forKey: .reconnectEnabled)
        reconnectEnabled = reconnectEnabledDecoded
        let logUploadEnabledDecoded = try containerValues.decodeIfPresent(WorkSpacesClientTypes.LogUploadEnum.self, forKey: .logUploadEnabled)
        logUploadEnabled = logUploadEnabledDecoded
    }
}
