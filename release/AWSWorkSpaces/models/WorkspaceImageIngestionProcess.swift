// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension WorkSpacesClientTypes {
    public enum WorkspaceImageIngestionProcess: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case byolGraphics
        case byolGraphicspro
        case byolGraphicsG4dn
        case byolRegular
        case byolRegularWsp
        case sdkUnknown(Swift.String)

        public static var allCases: [WorkspaceImageIngestionProcess] {
            return [
                .byolGraphics,
                .byolGraphicspro,
                .byolGraphicsG4dn,
                .byolRegular,
                .byolRegularWsp,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .byolGraphics: return "BYOL_GRAPHICS"
            case .byolGraphicspro: return "BYOL_GRAPHICSPRO"
            case .byolGraphicsG4dn: return "BYOL_GRAPHICS_G4DN"
            case .byolRegular: return "BYOL_REGULAR"
            case .byolRegularWsp: return "BYOL_REGULAR_WSP"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = WorkspaceImageIngestionProcess(rawValue: rawValue) ?? WorkspaceImageIngestionProcess.sdkUnknown(rawValue)
        }
    }
}
