// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ImportClientBrandingInputBody: Swift.Equatable {
    let resourceId: Swift.String?
    let deviceTypeWindows: WorkSpacesClientTypes.DefaultImportClientBrandingAttributes?
    let deviceTypeOsx: WorkSpacesClientTypes.DefaultImportClientBrandingAttributes?
    let deviceTypeAndroid: WorkSpacesClientTypes.DefaultImportClientBrandingAttributes?
    let deviceTypeIos: WorkSpacesClientTypes.IosImportClientBrandingAttributes?
    let deviceTypeLinux: WorkSpacesClientTypes.DefaultImportClientBrandingAttributes?
    let deviceTypeWeb: WorkSpacesClientTypes.DefaultImportClientBrandingAttributes?
}

extension ImportClientBrandingInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceTypeAndroid = "DeviceTypeAndroid"
        case deviceTypeIos = "DeviceTypeIos"
        case deviceTypeLinux = "DeviceTypeLinux"
        case deviceTypeOsx = "DeviceTypeOsx"
        case deviceTypeWeb = "DeviceTypeWeb"
        case deviceTypeWindows = "DeviceTypeWindows"
        case resourceId = "ResourceId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let deviceTypeWindowsDecoded = try containerValues.decodeIfPresent(WorkSpacesClientTypes.DefaultImportClientBrandingAttributes.self, forKey: .deviceTypeWindows)
        deviceTypeWindows = deviceTypeWindowsDecoded
        let deviceTypeOsxDecoded = try containerValues.decodeIfPresent(WorkSpacesClientTypes.DefaultImportClientBrandingAttributes.self, forKey: .deviceTypeOsx)
        deviceTypeOsx = deviceTypeOsxDecoded
        let deviceTypeAndroidDecoded = try containerValues.decodeIfPresent(WorkSpacesClientTypes.DefaultImportClientBrandingAttributes.self, forKey: .deviceTypeAndroid)
        deviceTypeAndroid = deviceTypeAndroidDecoded
        let deviceTypeIosDecoded = try containerValues.decodeIfPresent(WorkSpacesClientTypes.IosImportClientBrandingAttributes.self, forKey: .deviceTypeIos)
        deviceTypeIos = deviceTypeIosDecoded
        let deviceTypeLinuxDecoded = try containerValues.decodeIfPresent(WorkSpacesClientTypes.DefaultImportClientBrandingAttributes.self, forKey: .deviceTypeLinux)
        deviceTypeLinux = deviceTypeLinuxDecoded
        let deviceTypeWebDecoded = try containerValues.decodeIfPresent(WorkSpacesClientTypes.DefaultImportClientBrandingAttributes.self, forKey: .deviceTypeWeb)
        deviceTypeWeb = deviceTypeWebDecoded
    }
}
