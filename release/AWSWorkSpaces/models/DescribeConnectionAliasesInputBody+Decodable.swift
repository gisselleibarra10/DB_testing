// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConnectionAliasesInputBody: Swift.Equatable {
    let aliasIds: [Swift.String]?
    let resourceId: Swift.String?
    let limit: Swift.Int?
    let nextToken: Swift.String?
}

extension DescribeConnectionAliasesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aliasIds = "AliasIds"
        case limit = "Limit"
        case nextToken = "NextToken"
        case resourceId = "ResourceId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aliasIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .aliasIds)
        var aliasIdsDecoded0:[Swift.String]? = nil
        if let aliasIdsContainer = aliasIdsContainer {
            aliasIdsDecoded0 = [Swift.String]()
            for string0 in aliasIdsContainer {
                if let string0 = string0 {
                    aliasIdsDecoded0?.append(string0)
                }
            }
        }
        aliasIds = aliasIdsDecoded0
        let resourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
