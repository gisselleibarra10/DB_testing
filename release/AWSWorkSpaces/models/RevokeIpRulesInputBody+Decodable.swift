// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RevokeIpRulesInputBody: Swift.Equatable {
    let groupId: Swift.String?
    let userRules: [Swift.String]?
}

extension RevokeIpRulesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groupId = "GroupId"
        case userRules = "UserRules"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groupId)
        groupId = groupIdDecoded
        let userRulesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .userRules)
        var userRulesDecoded0:[Swift.String]? = nil
        if let userRulesContainer = userRulesContainer {
            userRulesDecoded0 = [Swift.String]()
            for string0 in userRulesContainer {
                if let string0 = string0 {
                    userRulesDecoded0?.append(string0)
                }
            }
        }
        userRules = userRulesDecoded0
    }
}
