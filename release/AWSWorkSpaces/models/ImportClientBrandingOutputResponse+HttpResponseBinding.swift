// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImportClientBrandingOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: ImportClientBrandingOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.deviceTypeAndroid = output.deviceTypeAndroid
            self.deviceTypeIos = output.deviceTypeIos
            self.deviceTypeLinux = output.deviceTypeLinux
            self.deviceTypeOsx = output.deviceTypeOsx
            self.deviceTypeWeb = output.deviceTypeWeb
            self.deviceTypeWindows = output.deviceTypeWindows
        } else {
            self.deviceTypeAndroid = nil
            self.deviceTypeIos = nil
            self.deviceTypeLinux = nil
            self.deviceTypeOsx = nil
            self.deviceTypeWeb = nil
            self.deviceTypeWindows = nil
        }
    }
}
