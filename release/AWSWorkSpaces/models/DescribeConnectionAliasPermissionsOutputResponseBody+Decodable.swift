// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConnectionAliasPermissionsOutputResponseBody: Swift.Equatable {
    let aliasId: Swift.String?
    let connectionAliasPermissions: [WorkSpacesClientTypes.ConnectionAliasPermission]?
    let nextToken: Swift.String?
}

extension DescribeConnectionAliasPermissionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aliasId = "AliasId"
        case connectionAliasPermissions = "ConnectionAliasPermissions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aliasIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .aliasId)
        aliasId = aliasIdDecoded
        let connectionAliasPermissionsContainer = try containerValues.decodeIfPresent([WorkSpacesClientTypes.ConnectionAliasPermission?].self, forKey: .connectionAliasPermissions)
        var connectionAliasPermissionsDecoded0:[WorkSpacesClientTypes.ConnectionAliasPermission]? = nil
        if let connectionAliasPermissionsContainer = connectionAliasPermissionsContainer {
            connectionAliasPermissionsDecoded0 = [WorkSpacesClientTypes.ConnectionAliasPermission]()
            for structure0 in connectionAliasPermissionsContainer {
                if let structure0 = structure0 {
                    connectionAliasPermissionsDecoded0?.append(structure0)
                }
            }
        }
        connectionAliasPermissions = connectionAliasPermissionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
