// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateWorkspacesOutputResponseBody: Swift.Equatable {
    let failedRequests: [WorkSpacesClientTypes.FailedCreateWorkspaceRequest]?
    let pendingRequests: [WorkSpacesClientTypes.Workspace]?
}

extension CreateWorkspacesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failedRequests = "FailedRequests"
        case pendingRequests = "PendingRequests"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let failedRequestsContainer = try containerValues.decodeIfPresent([WorkSpacesClientTypes.FailedCreateWorkspaceRequest?].self, forKey: .failedRequests)
        var failedRequestsDecoded0:[WorkSpacesClientTypes.FailedCreateWorkspaceRequest]? = nil
        if let failedRequestsContainer = failedRequestsContainer {
            failedRequestsDecoded0 = [WorkSpacesClientTypes.FailedCreateWorkspaceRequest]()
            for structure0 in failedRequestsContainer {
                if let structure0 = structure0 {
                    failedRequestsDecoded0?.append(structure0)
                }
            }
        }
        failedRequests = failedRequestsDecoded0
        let pendingRequestsContainer = try containerValues.decodeIfPresent([WorkSpacesClientTypes.Workspace?].self, forKey: .pendingRequests)
        var pendingRequestsDecoded0:[WorkSpacesClientTypes.Workspace]? = nil
        if let pendingRequestsContainer = pendingRequestsContainer {
            pendingRequestsDecoded0 = [WorkSpacesClientTypes.Workspace]()
            for structure0 in pendingRequestsContainer {
                if let structure0 = structure0 {
                    pendingRequestsDecoded0?.append(structure0)
                }
            }
        }
        pendingRequests = pendingRequestsDecoded0
    }
}
