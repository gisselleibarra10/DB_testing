// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TerminateWorkspacesInputBody: Swift.Equatable {
    let terminateWorkspaceRequests: [WorkSpacesClientTypes.TerminateRequest]?
}

extension TerminateWorkspacesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case terminateWorkspaceRequests = "TerminateWorkspaceRequests"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let terminateWorkspaceRequestsContainer = try containerValues.decodeIfPresent([WorkSpacesClientTypes.TerminateRequest?].self, forKey: .terminateWorkspaceRequests)
        var terminateWorkspaceRequestsDecoded0:[WorkSpacesClientTypes.TerminateRequest]? = nil
        if let terminateWorkspaceRequestsContainer = terminateWorkspaceRequestsContainer {
            terminateWorkspaceRequestsDecoded0 = [WorkSpacesClientTypes.TerminateRequest]()
            for structure0 in terminateWorkspaceRequestsContainer {
                if let structure0 = structure0 {
                    terminateWorkspaceRequestsDecoded0?.append(structure0)
                }
            }
        }
        terminateWorkspaceRequests = terminateWorkspaceRequestsDecoded0
    }
}
