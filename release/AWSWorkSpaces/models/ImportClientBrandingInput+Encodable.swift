// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImportClientBrandingInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceTypeAndroid = "DeviceTypeAndroid"
        case deviceTypeIos = "DeviceTypeIos"
        case deviceTypeLinux = "DeviceTypeLinux"
        case deviceTypeOsx = "DeviceTypeOsx"
        case deviceTypeWeb = "DeviceTypeWeb"
        case deviceTypeWindows = "DeviceTypeWindows"
        case resourceId = "ResourceId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deviceTypeAndroid = self.deviceTypeAndroid {
            try encodeContainer.encode(deviceTypeAndroid, forKey: .deviceTypeAndroid)
        }
        if let deviceTypeIos = self.deviceTypeIos {
            try encodeContainer.encode(deviceTypeIos, forKey: .deviceTypeIos)
        }
        if let deviceTypeLinux = self.deviceTypeLinux {
            try encodeContainer.encode(deviceTypeLinux, forKey: .deviceTypeLinux)
        }
        if let deviceTypeOsx = self.deviceTypeOsx {
            try encodeContainer.encode(deviceTypeOsx, forKey: .deviceTypeOsx)
        }
        if let deviceTypeWeb = self.deviceTypeWeb {
            try encodeContainer.encode(deviceTypeWeb, forKey: .deviceTypeWeb)
        }
        if let deviceTypeWindows = self.deviceTypeWindows {
            try encodeContainer.encode(deviceTypeWindows, forKey: .deviceTypeWindows)
        }
        if let resourceId = self.resourceId {
            try encodeContainer.encode(resourceId, forKey: .resourceId)
        }
    }
}
