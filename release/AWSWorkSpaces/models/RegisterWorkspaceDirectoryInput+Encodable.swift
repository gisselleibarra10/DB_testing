// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RegisterWorkspaceDirectoryInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case directoryId = "DirectoryId"
        case enableSelfService = "EnableSelfService"
        case enableWorkDocs = "EnableWorkDocs"
        case subnetIds = "SubnetIds"
        case tags = "Tags"
        case tenancy = "Tenancy"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let directoryId = self.directoryId {
            try encodeContainer.encode(directoryId, forKey: .directoryId)
        }
        if let enableSelfService = self.enableSelfService {
            try encodeContainer.encode(enableSelfService, forKey: .enableSelfService)
        }
        if let enableWorkDocs = self.enableWorkDocs {
            try encodeContainer.encode(enableWorkDocs, forKey: .enableWorkDocs)
        }
        if let subnetIds = subnetIds {
            var subnetIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .subnetIds)
            for subnetids0 in subnetIds {
                try subnetIdsContainer.encode(subnetids0)
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
        if let tenancy = self.tenancy {
            try encodeContainer.encode(tenancy.rawValue, forKey: .tenancy)
        }
    }
}
