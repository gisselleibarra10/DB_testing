// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ImportWorkspaceImageInput: Swift.Equatable {
    /// If specified, the version of Microsoft Office to subscribe to. Valid only for Windows 10 BYOL images. For more information about subscribing to Office for BYOL images, see [ Bring Your Own Windows Desktop Licenses](https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html). Although this parameter is an array, only one item is allowed at this time.
    public var applications: [WorkSpacesClientTypes.Application]?
    /// The identifier of the EC2 image.
    /// This member is required.
    public var ec2ImageId: Swift.String?
    /// The description of the WorkSpace image.
    /// This member is required.
    public var imageDescription: Swift.String?
    /// The name of the WorkSpace image.
    /// This member is required.
    public var imageName: Swift.String?
    /// The ingestion process to be used when importing the image, depending on which protocol you want to use for your BYOL Workspace image, either PCoIP or WorkSpaces Streaming Protocol (WSP). To use WSP, specify a value that ends in _WSP. To use PCoIP, specify a value that does not end in _WSP. For non-GPU-enabled bundles (bundles other than Graphics or GraphicsPro), specify BYOL_REGULAR or BYOL_REGULAR_WSP, depending on the protocol.
    /// This member is required.
    public var ingestionProcess: WorkSpacesClientTypes.WorkspaceImageIngestionProcess?
    /// The tags. Each WorkSpaces resource can have a maximum of 50 tags.
    public var tags: [WorkSpacesClientTypes.Tag]?

    public init (
        applications: [WorkSpacesClientTypes.Application]? = nil,
        ec2ImageId: Swift.String? = nil,
        imageDescription: Swift.String? = nil,
        imageName: Swift.String? = nil,
        ingestionProcess: WorkSpacesClientTypes.WorkspaceImageIngestionProcess? = nil,
        tags: [WorkSpacesClientTypes.Tag]? = nil
    )
    {
        self.applications = applications
        self.ec2ImageId = ec2ImageId
        self.imageDescription = imageDescription
        self.imageName = imageName
        self.ingestionProcess = ingestionProcess
        self.tags = tags
    }
}
