// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension WorkSpacesClientTypes {
    /// Describes a WorkSpace.
    public struct Workspace: Swift.Equatable {
        /// The identifier of the bundle used to create the WorkSpace.
        public var bundleId: Swift.String?
        /// The name of the WorkSpace, as seen by the operating system. The format of this name varies. For more information, see [ Launch a WorkSpace](https://docs.aws.amazon.com/workspaces/latest/adminguide/launch-workspaces-tutorials.html).
        public var computerName: Swift.String?
        /// The identifier of the Directory Service directory for the WorkSpace.
        public var directoryId: Swift.String?
        /// The error code that is returned if the WorkSpace cannot be created.
        public var errorCode: Swift.String?
        /// The text of the error message that is returned if the WorkSpace cannot be created.
        public var errorMessage: Swift.String?
        /// The IP address of the WorkSpace.
        public var ipAddress: Swift.String?
        /// The modification states of the WorkSpace.
        public var modificationStates: [WorkSpacesClientTypes.ModificationState]?
        /// Indicates whether the data stored on the root volume is encrypted.
        public var rootVolumeEncryptionEnabled: Swift.Bool?
        /// The operational state of the WorkSpace. After a WorkSpace is terminated, the TERMINATED state is returned only briefly before the WorkSpace directory metadata is cleaned up, so this state is rarely returned. To confirm that a WorkSpace is terminated, check for the WorkSpace ID by using [ DescribeWorkSpaces](https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaces.html). If the WorkSpace ID isn't returned, then the WorkSpace has been successfully terminated.
        public var state: WorkSpacesClientTypes.WorkspaceState?
        /// The identifier of the subnet for the WorkSpace.
        public var subnetId: Swift.String?
        /// The user for the WorkSpace.
        public var userName: Swift.String?
        /// Indicates whether the data stored on the user volume is encrypted.
        public var userVolumeEncryptionEnabled: Swift.Bool?
        /// The symmetric KMS key used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric KMS keys.
        public var volumeEncryptionKey: Swift.String?
        /// The identifier of the WorkSpace.
        public var workspaceId: Swift.String?
        /// The properties of the WorkSpace.
        public var workspaceProperties: WorkSpacesClientTypes.WorkspaceProperties?

        public init (
            bundleId: Swift.String? = nil,
            computerName: Swift.String? = nil,
            directoryId: Swift.String? = nil,
            errorCode: Swift.String? = nil,
            errorMessage: Swift.String? = nil,
            ipAddress: Swift.String? = nil,
            modificationStates: [WorkSpacesClientTypes.ModificationState]? = nil,
            rootVolumeEncryptionEnabled: Swift.Bool? = nil,
            state: WorkSpacesClientTypes.WorkspaceState? = nil,
            subnetId: Swift.String? = nil,
            userName: Swift.String? = nil,
            userVolumeEncryptionEnabled: Swift.Bool? = nil,
            volumeEncryptionKey: Swift.String? = nil,
            workspaceId: Swift.String? = nil,
            workspaceProperties: WorkSpacesClientTypes.WorkspaceProperties? = nil
        )
        {
            self.bundleId = bundleId
            self.computerName = computerName
            self.directoryId = directoryId
            self.errorCode = errorCode
            self.errorMessage = errorMessage
            self.ipAddress = ipAddress
            self.modificationStates = modificationStates
            self.rootVolumeEncryptionEnabled = rootVolumeEncryptionEnabled
            self.state = state
            self.subnetId = subnetId
            self.userName = userName
            self.userVolumeEncryptionEnabled = userVolumeEncryptionEnabled
            self.volumeEncryptionKey = volumeEncryptionKey
            self.workspaceId = workspaceId
            self.workspaceProperties = workspaceProperties
        }
    }

}
