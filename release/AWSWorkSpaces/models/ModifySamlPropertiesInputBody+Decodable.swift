// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifySamlPropertiesInputBody: Swift.Equatable {
    let resourceId: Swift.String?
    let samlProperties: WorkSpacesClientTypes.SamlProperties?
    let propertiesToDelete: [WorkSpacesClientTypes.DeletableSamlProperty]?
}

extension ModifySamlPropertiesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case propertiesToDelete = "PropertiesToDelete"
        case resourceId = "ResourceId"
        case samlProperties = "SamlProperties"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let samlPropertiesDecoded = try containerValues.decodeIfPresent(WorkSpacesClientTypes.SamlProperties.self, forKey: .samlProperties)
        samlProperties = samlPropertiesDecoded
        let propertiesToDeleteContainer = try containerValues.decodeIfPresent([WorkSpacesClientTypes.DeletableSamlProperty?].self, forKey: .propertiesToDelete)
        var propertiesToDeleteDecoded0:[WorkSpacesClientTypes.DeletableSamlProperty]? = nil
        if let propertiesToDeleteContainer = propertiesToDeleteContainer {
            propertiesToDeleteDecoded0 = [WorkSpacesClientTypes.DeletableSamlProperty]()
            for enum0 in propertiesToDeleteContainer {
                if let enum0 = enum0 {
                    propertiesToDeleteDecoded0?.append(enum0)
                }
            }
        }
        propertiesToDelete = propertiesToDeleteDecoded0
    }
}
