// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension S3ClientTypes {
    /// Specifies which Amazon S3 objects to replicate and where to store the replicas.
    public struct ReplicationRule: Swift.Equatable {
        /// Specifies whether Amazon S3 replicates delete markers. If you specify a Filter in your replication configuration, you must also include a DeleteMarkerReplication element. If your Filter includes a Tag element, the DeleteMarkerReplicationStatus must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config). For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html). If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
        public var deleteMarkerReplication: S3ClientTypes.DeleteMarkerReplication?
        /// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
        /// This member is required.
        public var destination: S3ClientTypes.Destination?
        ///
        public var existingObjectReplication: S3ClientTypes.ExistingObjectReplication?
        /// A filter that identifies the subset of objects to which the replication rule applies. A Filter must specify exactly one Prefix, Tag, or an And child element.
        public var filter: S3ClientTypes.ReplicationRuleFilter?
        /// A unique identifier for the rule. The maximum value is 255 characters.
        public var iD: Swift.String?
        /// An object key name prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [ XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
        @available(*, deprecated)
        public var `prefix`: Swift.String?
        /// The priority indicates which rule has precedence whenever two or more replication rules conflict. Amazon S3 will attempt to replicate objects according to all replication rules. However, if there are two or more rules with the same destination bucket, then objects will be replicated according to the rule with the highest priority. The higher the number, the higher the priority. For more information, see [Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the Amazon S3 User Guide.
        public var priority: Swift.Int
        /// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. Currently, Amazon S3 supports only the filter that you can specify for objects created with server-side encryption using a customer managed key stored in Amazon Web Services Key Management Service (SSE-KMS).
        public var sourceSelectionCriteria: S3ClientTypes.SourceSelectionCriteria?
        /// Specifies whether the rule is enabled.
        /// This member is required.
        public var status: S3ClientTypes.ReplicationRuleStatus?

        public init (
            deleteMarkerReplication: S3ClientTypes.DeleteMarkerReplication? = nil,
            destination: S3ClientTypes.Destination? = nil,
            existingObjectReplication: S3ClientTypes.ExistingObjectReplication? = nil,
            filter: S3ClientTypes.ReplicationRuleFilter? = nil,
            iD: Swift.String? = nil,
            `prefix`: Swift.String? = nil,
            priority: Swift.Int = 0,
            sourceSelectionCriteria: S3ClientTypes.SourceSelectionCriteria? = nil,
            status: S3ClientTypes.ReplicationRuleStatus? = nil
        )
        {
            self.deleteMarkerReplication = deleteMarkerReplication
            self.destination = destination
            self.existingObjectReplication = existingObjectReplication
            self.filter = filter
            self.iD = iD
            self.`prefix` = `prefix`
            self.priority = priority
            self.sourceSelectionCriteria = sourceSelectionCriteria
            self.status = status
        }
    }

}
