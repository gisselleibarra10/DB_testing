// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListObjectsInput: Swift.Equatable {
    /// The name of the bucket containing the objects. When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see [Using access points](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html) in the Amazon S3 User Guide. When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see [Using Amazon S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html) in the Amazon S3 User Guide.
    /// This member is required.
    public var bucket: Swift.String?
    /// A delimiter is a character you use to group keys.
    public var delimiter: Swift.String?
    /// Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.
    public var encodingType: S3ClientTypes.EncodingType?
    /// The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).
    public var expectedBucketOwner: Swift.String?
    /// Marker is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. Marker can be any key in the bucket.
    public var marker: Swift.String?
    /// Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.
    public var maxKeys: Swift.Int
    /// Limits the response to keys that begin with the specified prefix.
    public var `prefix`: Swift.String?
    /// Confirms that the requester knows that she or he will be charged for the list objects request. Bucket owners need not specify this parameter in their requests.
    public var requestPayer: S3ClientTypes.RequestPayer?

    public init (
        bucket: Swift.String? = nil,
        delimiter: Swift.String? = nil,
        encodingType: S3ClientTypes.EncodingType? = nil,
        expectedBucketOwner: Swift.String? = nil,
        marker: Swift.String? = nil,
        maxKeys: Swift.Int = 0,
        `prefix`: Swift.String? = nil,
        requestPayer: S3ClientTypes.RequestPayer? = nil
    )
    {
        self.bucket = bucket
        self.delimiter = delimiter
        self.encodingType = encodingType
        self.expectedBucketOwner = expectedBucketOwner
        self.marker = marker
        self.maxKeys = maxKeys
        self.`prefix` = `prefix`
        self.requestPayer = requestPayer
    }
}
