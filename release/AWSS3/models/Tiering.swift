// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension S3ClientTypes {
    /// The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without additional operational overhead.
    public struct Tiering: Swift.Equatable {
        /// S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
        /// This member is required.
        public var accessTier: S3ClientTypes.IntelligentTieringAccessTier?
        /// The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
        /// This member is required.
        public var days: Swift.Int

        public init (
            accessTier: S3ClientTypes.IntelligentTieringAccessTier? = nil,
            days: Swift.Int = 0
        )
        {
            self.accessTier = accessTier
            self.days = days
        }
    }

}
