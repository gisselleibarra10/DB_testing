// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListObjectsV2Input: Swift.Equatable {
    /// Bucket name to list. When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see [Using access points](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html) in the Amazon S3 User Guide. When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form  AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see [Using Amazon S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html) in the Amazon S3 User Guide.
    /// This member is required.
    public var bucket: Swift.String?
    /// ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key.
    public var continuationToken: Swift.String?
    /// A delimiter is a character you use to group keys.
    public var delimiter: Swift.String?
    /// Encoding type used by Amazon S3 to encode object keys in the response.
    public var encodingType: S3ClientTypes.EncodingType?
    /// The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).
    public var expectedBucketOwner: Swift.String?
    /// The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true.
    public var fetchOwner: Swift.Bool
    /// Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.
    public var maxKeys: Swift.Int
    /// Limits the response to keys that begin with the specified prefix.
    public var `prefix`: Swift.String?
    /// Confirms that the requester knows that she or he will be charged for the list objects request in V2 style. Bucket owners need not specify this parameter in their requests.
    public var requestPayer: S3ClientTypes.RequestPayer?
    /// StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket.
    public var startAfter: Swift.String?

    public init (
        bucket: Swift.String? = nil,
        continuationToken: Swift.String? = nil,
        delimiter: Swift.String? = nil,
        encodingType: S3ClientTypes.EncodingType? = nil,
        expectedBucketOwner: Swift.String? = nil,
        fetchOwner: Swift.Bool = false,
        maxKeys: Swift.Int = 0,
        `prefix`: Swift.String? = nil,
        requestPayer: S3ClientTypes.RequestPayer? = nil,
        startAfter: Swift.String? = nil
    )
    {
        self.bucket = bucket
        self.continuationToken = continuationToken
        self.delimiter = delimiter
        self.encodingType = encodingType
        self.expectedBucketOwner = expectedBucketOwner
        self.fetchOwner = fetchOwner
        self.maxKeys = maxKeys
        self.`prefix` = `prefix`
        self.requestPayer = requestPayer
        self.startAfter = startAfter
    }
}
