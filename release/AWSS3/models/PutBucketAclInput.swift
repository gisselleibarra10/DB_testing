// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutBucketAclInput: Swift.Equatable {
    /// Contains the elements that set the ACL permissions for an object per grantee.
    public var accessControlPolicy: S3ClientTypes.AccessControlPolicy?
    /// The canned ACL to apply to the bucket.
    public var acl: S3ClientTypes.BucketCannedACL?
    /// The bucket to which to apply the ACL.
    /// This member is required.
    public var bucket: Swift.String?
    /// Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see [Checking object integrity](https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html) in the Amazon S3 User Guide. If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.
    public var checksumAlgorithm: S3ClientTypes.ChecksumAlgorithm?
    /// The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message integrity check to verify that the request body was not corrupted in transit. For more information, go to [RFC 1864.](http://www.ietf.org/rfc/rfc1864.txt) For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
    public var contentMD5: Swift.String?
    /// The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).
    public var expectedBucketOwner: Swift.String?
    /// Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.
    public var grantFullControl: Swift.String?
    /// Allows grantee to list the objects in the bucket.
    public var grantRead: Swift.String?
    /// Allows grantee to read the bucket ACL.
    public var grantReadACP: Swift.String?
    /// Allows grantee to create new objects in the bucket. For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.
    public var grantWrite: Swift.String?
    /// Allows grantee to write the ACL for the applicable bucket.
    public var grantWriteACP: Swift.String?

    public init (
        accessControlPolicy: S3ClientTypes.AccessControlPolicy? = nil,
        acl: S3ClientTypes.BucketCannedACL? = nil,
        bucket: Swift.String? = nil,
        checksumAlgorithm: S3ClientTypes.ChecksumAlgorithm? = nil,
        contentMD5: Swift.String? = nil,
        expectedBucketOwner: Swift.String? = nil,
        grantFullControl: Swift.String? = nil,
        grantRead: Swift.String? = nil,
        grantReadACP: Swift.String? = nil,
        grantWrite: Swift.String? = nil,
        grantWriteACP: Swift.String? = nil
    )
    {
        self.accessControlPolicy = accessControlPolicy
        self.acl = acl
        self.bucket = bucket
        self.checksumAlgorithm = checksumAlgorithm
        self.contentMD5 = contentMD5
        self.expectedBucketOwner = expectedBucketOwner
        self.grantFullControl = grantFullControl
        self.grantRead = grantRead
        self.grantReadACP = grantReadACP
        self.grantWrite = grantWrite
        self.grantWriteACP = grantWriteACP
    }
}
