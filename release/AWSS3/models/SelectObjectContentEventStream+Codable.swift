// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ClientTypes.SelectObjectContentEventStream: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cont = "Cont"
        case end = "End"
        case progress = "Progress"
        case records = "Records"
        case stats = "Stats"
        case sdkUnknown
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        switch self {
            case let .cont(cont):
                try container.encode(cont, forKey: ClientRuntime.Key("Cont"))
            case let .end(end):
                try container.encode(end, forKey: ClientRuntime.Key("End"))
            case let .progress(progress):
                try container.encode(progress, forKey: ClientRuntime.Key("Progress"))
            case let .records(records):
                try container.encode(records, forKey: ClientRuntime.Key("Records"))
            case let .stats(stats):
                try container.encode(stats, forKey: ClientRuntime.Key("Stats"))
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: ClientRuntime.Key("sdkUnknown"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let key = containerValues.allKeys.first
        switch key {
            case .records:
                let recordsDecoded = try containerValues.decode(S3ClientTypes.RecordsEvent.self, forKey: .records)
                self = .records(recordsDecoded)
            case .stats:
                let statsDecoded = try containerValues.decode(S3ClientTypes.StatsEvent.self, forKey: .stats)
                self = .stats(statsDecoded)
            case .progress:
                let progressDecoded = try containerValues.decode(S3ClientTypes.ProgressEvent.self, forKey: .progress)
                self = .progress(progressDecoded)
            case .cont:
                let contDecoded = try containerValues.decode(S3ClientTypes.ContinuationEvent.self, forKey: .cont)
                self = .cont(contDecoded)
            case .end:
                let endDecoded = try containerValues.decode(S3ClientTypes.EndEvent.self, forKey: .end)
                self = .end(endDecoded)
            default:
                self = .sdkUnknown("")
        }
    }
}
