// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct WriteGetObjectResponseInput: Swift.Equatable {
    /// Indicates that a range of bytes was specified.
    public var acceptRanges: Swift.String?
    /// The object data.
    public var body: ClientRuntime.ByteStream?
    /// Indicates whether the object stored in Amazon S3 uses an S3 bucket key for server-side encryption with Amazon Web Services KMS (SSE-KMS).
    public var bucketKeyEnabled: Swift.Bool
    /// Specifies caching behavior along the request/reply chain.
    public var cacheControl: Swift.String?
    /// This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 32-bit CRC32 checksum of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original GetObject request required checksum validation. For more information about checksums, see [Checking object integrity](https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html) in the Amazon S3 User Guide. Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.
    public var checksumCRC32: Swift.String?
    /// This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 32-bit CRC32C checksum of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original GetObject request required checksum validation. For more information about checksums, see [Checking object integrity](https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html) in the Amazon S3 User Guide. Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.
    public var checksumCRC32C: Swift.String?
    /// This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 160-bit SHA-1 digest of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original GetObject request required checksum validation. For more information about checksums, see [Checking object integrity](https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html) in the Amazon S3 User Guide. Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.
    public var checksumSHA1: Swift.String?
    /// This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 256-bit SHA-256 digest of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original GetObject request required checksum validation. For more information about checksums, see [Checking object integrity](https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html) in the Amazon S3 User Guide. Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.
    public var checksumSHA256: Swift.String?
    /// Specifies presentational information for the object.
    public var contentDisposition: Swift.String?
    /// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
    public var contentEncoding: Swift.String?
    /// The language the content is in.
    public var contentLanguage: Swift.String?
    /// The size of the content body in bytes.
    public var contentLength: Swift.Int
    /// The portion of the object returned in the response.
    public var contentRange: Swift.String?
    /// A standard MIME type describing the format of the object data.
    public var contentType: Swift.String?
    /// Specifies whether an object stored in Amazon S3 is (true) or is not (false) a delete marker.
    public var deleteMarker: Swift.Bool
    /// An opaque identifier assigned by a web server to a specific version of a resource found at a URL.
    public var eTag: Swift.String?
    /// A string that uniquely identifies an error condition. Returned in the  tag of the error XML response for a corresponding GetObject call. Cannot be used with a successful StatusCode header or when the transformed object is provided in the body. All error codes from S3 are sentence-cased. The regular expression (regex) value is "^[A-Z][a-zA-Z]+$".
    public var errorCode: Swift.String?
    /// Contains a generic description of the error condition. Returned in the tag of the error XML response for a corresponding GetObject call. Cannot be used with a successful StatusCode header or when the transformed object is provided in body.
    public var errorMessage: Swift.String?
    /// If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the expiry-date and rule-id key-value pairs that provide the object expiration information. The value of the rule-id is URL-encoded.
    public var expiration: Swift.String?
    /// The date and time at which the object is no longer cacheable.
    public var expires: ClientRuntime.Date?
    /// The date and time that the object was last modified.
    public var lastModified: ClientRuntime.Date?
    /// A map of metadata to store with the object in S3.
    public var metadata: [Swift.String:Swift.String]?
    /// Set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.
    public var missingMeta: Swift.Int
    /// Indicates whether an object stored in Amazon S3 has an active legal hold.
    public var objectLockLegalHoldStatus: S3ClientTypes.ObjectLockLegalHoldStatus?
    /// Indicates whether an object stored in Amazon S3 has Object Lock enabled. For more information about S3 Object Lock, see [Object Lock](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock.html).
    public var objectLockMode: S3ClientTypes.ObjectLockMode?
    /// The date and time when Object Lock is configured to expire.
    public var objectLockRetainUntilDate: ClientRuntime.Date?
    /// The count of parts this object has.
    public var partsCount: Swift.Int
    /// Indicates if request involves bucket that is either a source or destination in a Replication rule. For more information about S3 Replication, see [Replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication.html).
    public var replicationStatus: S3ClientTypes.ReplicationStatus?
    /// If present, indicates that the requester was successfully charged for the request.
    public var requestCharged: S3ClientTypes.RequestCharged?
    /// Route prefix to the HTTP URL generated.
    /// This member is required.
    public var requestRoute: Swift.String?
    /// A single use encrypted token that maps WriteGetObjectResponse to the end user GetObject request.
    /// This member is required.
    public var requestToken: Swift.String?
    /// Provides information about object restoration operation and expiration time of the restored object copy.
    public var restore: Swift.String?
    /// Encryption algorithm used if server-side encryption with a customer-provided encryption key was specified for object stored in Amazon S3.
    public var sSECustomerAlgorithm: Swift.String?
    /// 128-bit MD5 digest of customer-provided encryption key used in Amazon S3 to encrypt data stored in S3. For more information, see [Protecting data using server-side encryption with customer-provided encryption keys (SSE-C)](https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html).
    public var sSECustomerKeyMD5: Swift.String?
    /// If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for stored in Amazon S3 object.
    public var sSEKMSKeyId: Swift.String?
    /// The server-side encryption algorithm used when storing requested object in Amazon S3 (for example, AES256, aws:kms).
    public var serverSideEncryption: S3ClientTypes.ServerSideEncryption?
    /// The integer status code for an HTTP response of a corresponding GetObject request. Status Codes
    ///
    /// * 200 - OK
    ///
    /// * 206 - Partial Content
    ///
    /// * 304 - Not Modified
    ///
    /// * 400 - Bad Request
    ///
    /// * 401 - Unauthorized
    ///
    /// * 403 - Forbidden
    ///
    /// * 404 - Not Found
    ///
    /// * 405 - Method Not Allowed
    ///
    /// * 409 - Conflict
    ///
    /// * 411 - Length Required
    ///
    /// * 412 - Precondition Failed
    ///
    /// * 416 - Range Not Satisfiable
    ///
    /// * 500 - Internal Server Error
    ///
    /// * 503 - Service Unavailable
    public var statusCode: Swift.Int
    /// Provides storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects. For more information, see [Storage Classes](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html).
    public var storageClass: S3ClientTypes.StorageClass?
    /// The number of tags, if any, on the object.
    public var tagCount: Swift.Int
    /// An ID used to reference a specific version of the object.
    public var versionId: Swift.String?

    public init (
        acceptRanges: Swift.String? = nil,
        body: ClientRuntime.ByteStream? = nil,
        bucketKeyEnabled: Swift.Bool = false,
        cacheControl: Swift.String? = nil,
        checksumCRC32: Swift.String? = nil,
        checksumCRC32C: Swift.String? = nil,
        checksumSHA1: Swift.String? = nil,
        checksumSHA256: Swift.String? = nil,
        contentDisposition: Swift.String? = nil,
        contentEncoding: Swift.String? = nil,
        contentLanguage: Swift.String? = nil,
        contentLength: Swift.Int = 0,
        contentRange: Swift.String? = nil,
        contentType: Swift.String? = nil,
        deleteMarker: Swift.Bool = false,
        eTag: Swift.String? = nil,
        errorCode: Swift.String? = nil,
        errorMessage: Swift.String? = nil,
        expiration: Swift.String? = nil,
        expires: ClientRuntime.Date? = nil,
        lastModified: ClientRuntime.Date? = nil,
        metadata: [Swift.String:Swift.String]? = nil,
        missingMeta: Swift.Int = 0,
        objectLockLegalHoldStatus: S3ClientTypes.ObjectLockLegalHoldStatus? = nil,
        objectLockMode: S3ClientTypes.ObjectLockMode? = nil,
        objectLockRetainUntilDate: ClientRuntime.Date? = nil,
        partsCount: Swift.Int = 0,
        replicationStatus: S3ClientTypes.ReplicationStatus? = nil,
        requestCharged: S3ClientTypes.RequestCharged? = nil,
        requestRoute: Swift.String? = nil,
        requestToken: Swift.String? = nil,
        restore: Swift.String? = nil,
        sSECustomerAlgorithm: Swift.String? = nil,
        sSECustomerKeyMD5: Swift.String? = nil,
        sSEKMSKeyId: Swift.String? = nil,
        serverSideEncryption: S3ClientTypes.ServerSideEncryption? = nil,
        statusCode: Swift.Int = 0,
        storageClass: S3ClientTypes.StorageClass? = nil,
        tagCount: Swift.Int = 0,
        versionId: Swift.String? = nil
    )
    {
        self.acceptRanges = acceptRanges
        self.body = body
        self.bucketKeyEnabled = bucketKeyEnabled
        self.cacheControl = cacheControl
        self.checksumCRC32 = checksumCRC32
        self.checksumCRC32C = checksumCRC32C
        self.checksumSHA1 = checksumSHA1
        self.checksumSHA256 = checksumSHA256
        self.contentDisposition = contentDisposition
        self.contentEncoding = contentEncoding
        self.contentLanguage = contentLanguage
        self.contentLength = contentLength
        self.contentRange = contentRange
        self.contentType = contentType
        self.deleteMarker = deleteMarker
        self.eTag = eTag
        self.errorCode = errorCode
        self.errorMessage = errorMessage
        self.expiration = expiration
        self.expires = expires
        self.lastModified = lastModified
        self.metadata = metadata
        self.missingMeta = missingMeta
        self.objectLockLegalHoldStatus = objectLockLegalHoldStatus
        self.objectLockMode = objectLockMode
        self.objectLockRetainUntilDate = objectLockRetainUntilDate
        self.partsCount = partsCount
        self.replicationStatus = replicationStatus
        self.requestCharged = requestCharged
        self.requestRoute = requestRoute
        self.requestToken = requestToken
        self.restore = restore
        self.sSECustomerAlgorithm = sSECustomerAlgorithm
        self.sSECustomerKeyMD5 = sSECustomerKeyMD5
        self.sSEKMSKeyId = sSEKMSKeyId
        self.serverSideEncryption = serverSideEncryption
        self.statusCode = statusCode
        self.storageClass = storageClass
        self.tagCount = tagCount
        self.versionId = versionId
    }
}
