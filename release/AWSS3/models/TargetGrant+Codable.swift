// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ClientTypes.TargetGrant: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case grantee = "Grantee"
        case permission = "Permission"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let grantee = grantee {
            var granteeContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Grantee"))
            try granteeContainer.encode(grantee, forKey: ClientRuntime.Key(""))
            try granteeContainer.encode("http://www.w3.org/2001/XMLSchema-instance", forKey: ClientRuntime.Key("xmlns:xsi"))
        }
        if let permission = permission {
            try container.encode(permission, forKey: ClientRuntime.Key("Permission"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let granteeDecoded = try containerValues.decodeIfPresent(S3ClientTypes.Grantee.self, forKey: .grantee)
        grantee = granteeDecoded
        let permissionDecoded = try containerValues.decodeIfPresent(S3ClientTypes.BucketLogsPermission.self, forKey: .permission)
        permission = permissionDecoded
    }
}
