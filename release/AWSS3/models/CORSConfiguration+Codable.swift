// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ClientTypes.CORSConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case corsRules = "CORSRule"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let corsRules = corsRules {
            if corsRules.isEmpty {
                var corsRulesContainer = container.nestedUnkeyedContainer(forKey: ClientRuntime.Key("CORSRule"))
                try corsRulesContainer.encodeNil()
            } else {
                for corsrule0 in corsRules {
                    var corsRulesContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("CORSRule"))
                    try corsRulesContainer0.encode(corsrule0, forKey: ClientRuntime.Key(""))
                }
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.corsRules) {
            let corsRulesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CodingKeys.self, forKey: .corsRules)
            if corsRulesWrappedContainer != nil {
                let corsRulesContainer = try containerValues.decodeIfPresent([S3ClientTypes.CORSRule].self, forKey: .corsRules)
                var corsRulesBuffer:[S3ClientTypes.CORSRule]? = nil
                if let corsRulesContainer = corsRulesContainer {
                    corsRulesBuffer = [S3ClientTypes.CORSRule]()
                    for structureContainer0 in corsRulesContainer {
                        corsRulesBuffer?.append(structureContainer0)
                    }
                }
                corsRules = corsRulesBuffer
            } else {
                corsRules = []
            }
        } else {
            corsRules = nil
        }
    }
}
