// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutObjectLockConfigurationInput: Swift.Equatable {
    /// The bucket whose Object Lock configuration you want to create or replace.
    /// This member is required.
    public var bucket: Swift.String?
    /// Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding x-amz-checksum or x-amz-trailer header sent. Otherwise, Amazon S3 fails the request with the HTTP status code 400 Bad Request. For more information, see [Checking object integrity](https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html) in the Amazon S3 User Guide. If you provide an individual checksum, Amazon S3 ignores any provided ChecksumAlgorithm parameter.
    public var checksumAlgorithm: S3ClientTypes.ChecksumAlgorithm?
    /// The MD5 hash for the request body. For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
    public var contentMD5: Swift.String?
    /// The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code 403 Forbidden (access denied).
    public var expectedBucketOwner: Swift.String?
    /// The Object Lock configuration that you want to apply to the specified bucket.
    public var objectLockConfiguration: S3ClientTypes.ObjectLockConfiguration?
    /// Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see [Downloading Objects in Requester Pays Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html) in the Amazon S3 User Guide.
    public var requestPayer: S3ClientTypes.RequestPayer?
    /// A token to allow Object Lock to be enabled for an existing bucket.
    public var token: Swift.String?

    public init (
        bucket: Swift.String? = nil,
        checksumAlgorithm: S3ClientTypes.ChecksumAlgorithm? = nil,
        contentMD5: Swift.String? = nil,
        expectedBucketOwner: Swift.String? = nil,
        objectLockConfiguration: S3ClientTypes.ObjectLockConfiguration? = nil,
        requestPayer: S3ClientTypes.RequestPayer? = nil,
        token: Swift.String? = nil
    )
    {
        self.bucket = bucket
        self.checksumAlgorithm = checksumAlgorithm
        self.contentMD5 = contentMD5
        self.expectedBucketOwner = expectedBucketOwner
        self.objectLockConfiguration = objectLockConfiguration
        self.requestPayer = requestPayer
        self.token = token
    }
}
