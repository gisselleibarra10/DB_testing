// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetObjectInput: ClientRuntime.HeaderProvider {
    public var headers: ClientRuntime.Headers {
        var items = ClientRuntime.Headers()
        if let checksumMode = checksumMode {
            items.add(Header(name: "x-amz-checksum-mode", value: Swift.String(checksumMode.rawValue)))
        }
        if let expectedBucketOwner = expectedBucketOwner {
            items.add(Header(name: "x-amz-expected-bucket-owner", value: Swift.String(expectedBucketOwner)))
        }
        if let ifMatch = ifMatch {
            items.add(Header(name: "If-Match", value: Swift.String(ifMatch)))
        }
        if let ifModifiedSince = ifModifiedSince {
            items.add(Header(name: "If-Modified-Since", value: Swift.String(TimestampFormatter(format: .httpDate).string(from: ifModifiedSince))))
        }
        if let ifNoneMatch = ifNoneMatch {
            items.add(Header(name: "If-None-Match", value: Swift.String(ifNoneMatch)))
        }
        if let ifUnmodifiedSince = ifUnmodifiedSince {
            items.add(Header(name: "If-Unmodified-Since", value: Swift.String(TimestampFormatter(format: .httpDate).string(from: ifUnmodifiedSince))))
        }
        if let range = range {
            items.add(Header(name: "Range", value: Swift.String(range)))
        }
        if let requestPayer = requestPayer {
            items.add(Header(name: "x-amz-request-payer", value: Swift.String(requestPayer.rawValue)))
        }
        if let sseCustomerAlgorithm = sseCustomerAlgorithm {
            items.add(Header(name: "x-amz-server-side-encryption-customer-algorithm", value: Swift.String(sseCustomerAlgorithm)))
        }
        if let sseCustomerKey = sseCustomerKey {
            items.add(Header(name: "x-amz-server-side-encryption-customer-key", value: Swift.String(sseCustomerKey)))
        }
        if let sseCustomerKeyMD5 = sseCustomerKeyMD5 {
            items.add(Header(name: "x-amz-server-side-encryption-customer-key-MD5", value: Swift.String(sseCustomerKeyMD5)))
        }
        return items
    }
}
