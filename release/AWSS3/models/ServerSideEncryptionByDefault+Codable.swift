// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ClientTypes.ServerSideEncryptionByDefault: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case kmsMasterKeyID = "KMSMasterKeyID"
        case sseAlgorithm = "SSEAlgorithm"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let kmsMasterKeyID = kmsMasterKeyID {
            try container.encode(kmsMasterKeyID, forKey: ClientRuntime.Key("KMSMasterKeyID"))
        }
        if let sseAlgorithm = sseAlgorithm {
            try container.encode(sseAlgorithm, forKey: ClientRuntime.Key("SSEAlgorithm"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sseAlgorithmDecoded = try containerValues.decodeIfPresent(S3ClientTypes.ServerSideEncryption.self, forKey: .sseAlgorithm)
        sseAlgorithm = sseAlgorithmDecoded
        let kmsMasterKeyIDDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsMasterKeyID)
        kmsMasterKeyID = kmsMasterKeyIDDecoded
    }
}
