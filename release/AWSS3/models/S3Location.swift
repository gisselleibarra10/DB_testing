// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension S3ClientTypes {
    /// Describes an Amazon S3 location that will receive the results of the restore request.
    public struct S3Location: Swift.Equatable {
        /// A list of grants that control access to the staged results.
        public var accessControlList: [S3ClientTypes.Grant]?
        /// The name of the bucket where the restore results will be placed.
        /// This member is required.
        public var bucketName: Swift.String?
        /// The canned ACL to apply to the restore results.
        public var cannedACL: S3ClientTypes.ObjectCannedACL?
        /// Contains the type of server-side encryption used.
        public var encryption: S3ClientTypes.Encryption?
        /// The prefix that is prepended to the restore results for this request.
        /// This member is required.
        public var `prefix`: Swift.String?
        /// The class of storage used to store the restore results.
        public var storageClass: S3ClientTypes.StorageClass?
        /// The tag-set that is applied to the restore results.
        public var tagging: S3ClientTypes.Tagging?
        /// A list of metadata to store with the restore results in S3.
        public var userMetadata: [S3ClientTypes.MetadataEntry]?

        public init (
            accessControlList: [S3ClientTypes.Grant]? = nil,
            bucketName: Swift.String? = nil,
            cannedACL: S3ClientTypes.ObjectCannedACL? = nil,
            encryption: S3ClientTypes.Encryption? = nil,
            `prefix`: Swift.String? = nil,
            storageClass: S3ClientTypes.StorageClass? = nil,
            tagging: S3ClientTypes.Tagging? = nil,
            userMetadata: [S3ClientTypes.MetadataEntry]? = nil
        )
        {
            self.accessControlList = accessControlList
            self.bucketName = bucketName
            self.cannedACL = cannedACL
            self.encryption = encryption
            self.`prefix` = `prefix`
            self.storageClass = storageClass
            self.tagging = tagging
            self.userMetadata = userMetadata
        }
    }

}
