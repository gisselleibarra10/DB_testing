// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBucketCorsOutputResponseBody: Swift.Equatable {
    let cORSRules: [S3ClientTypes.CORSRule]?
}

extension GetBucketCorsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cORSRules = "CORSRule"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.cORSRules) {
            let cORSRulesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CodingKeys.self, forKey: .cORSRules)
            if cORSRulesWrappedContainer != nil {
                let cORSRulesContainer = try containerValues.decodeIfPresent([S3ClientTypes.CORSRule].self, forKey: .cORSRules)
                var cORSRulesBuffer:[S3ClientTypes.CORSRule]? = nil
                if let cORSRulesContainer = cORSRulesContainer {
                    cORSRulesBuffer = [S3ClientTypes.CORSRule]()
                    for structureContainer0 in cORSRulesContainer {
                        cORSRulesBuffer?.append(structureContainer0)
                    }
                }
                cORSRules = cORSRulesBuffer
            } else {
                cORSRules = []
            }
        } else {
            cORSRules = nil
        }
    }
}
