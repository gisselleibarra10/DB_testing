// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ClientTypes.InputSerialization: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cSV = "CSV"
        case compressionType = "CompressionType"
        case jSON = "JSON"
        case parquet = "Parquet"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let cSV = cSV {
            try container.encode(cSV, forKey: ClientRuntime.Key("CSV"))
        }
        if let compressionType = compressionType {
            try container.encode(compressionType, forKey: ClientRuntime.Key("CompressionType"))
        }
        if let jSON = jSON {
            try container.encode(jSON, forKey: ClientRuntime.Key("JSON"))
        }
        if let parquet = parquet {
            try container.encode(parquet, forKey: ClientRuntime.Key("Parquet"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cSVDecoded = try containerValues.decodeIfPresent(S3ClientTypes.CSVInput.self, forKey: .cSV)
        cSV = cSVDecoded
        let compressionTypeDecoded = try containerValues.decodeIfPresent(S3ClientTypes.CompressionType.self, forKey: .compressionType)
        compressionType = compressionTypeDecoded
        let jSONDecoded = try containerValues.decodeIfPresent(S3ClientTypes.JSONInput.self, forKey: .jSON)
        jSON = jSONDecoded
        let parquetDecoded = try containerValues.decodeIfPresent(S3ClientTypes.ParquetInput.self, forKey: .parquet)
        parquet = parquetDecoded
    }
}
