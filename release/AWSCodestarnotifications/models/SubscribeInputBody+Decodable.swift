// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SubscribeInputBody: Swift.Equatable {
    let arn: Swift.String?
    let target: CodestarNotificationsClientTypes.Target?
    let clientRequestToken: Swift.String?
}

extension SubscribeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case clientRequestToken = "ClientRequestToken"
        case target = "Target"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let targetDecoded = try containerValues.decodeIfPresent(CodestarNotificationsClientTypes.Target.self, forKey: .target)
        target = targetDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
