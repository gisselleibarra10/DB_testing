// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSignalingChannelsOutputResponseBody: Swift.Equatable {
    let channelInfoList: [KinesisVideoClientTypes.ChannelInfo]?
    let nextToken: Swift.String?
}

extension ListSignalingChannelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channelInfoList = "ChannelInfoList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelInfoListContainer = try containerValues.decodeIfPresent([KinesisVideoClientTypes.ChannelInfo?].self, forKey: .channelInfoList)
        var channelInfoListDecoded0:[KinesisVideoClientTypes.ChannelInfo]? = nil
        if let channelInfoListContainer = channelInfoListContainer {
            channelInfoListDecoded0 = [KinesisVideoClientTypes.ChannelInfo]()
            for structure0 in channelInfoListContainer {
                if let structure0 = structure0 {
                    channelInfoListDecoded0?.append(structure0)
                }
            }
        }
        channelInfoList = channelInfoListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
