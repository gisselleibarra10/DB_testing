// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisVideoClientTypes {
    /// An object describing a Kinesis video stream.
    public struct StreamInfo: Swift.Equatable {
        /// A time stamp that indicates when the stream was created.
        public var creationTime: ClientRuntime.Date?
        /// How long the stream retains data, in hours.
        public var dataRetentionInHours: Swift.Int?
        /// The name of the device that is associated with the stream.
        public var deviceName: Swift.String?
        /// The ID of the Key Management Service (KMS) key that Kinesis Video Streams uses to encrypt data on the stream.
        public var kmsKeyId: Swift.String?
        /// The MediaType of the stream.
        public var mediaType: Swift.String?
        /// The status of the stream.
        public var status: KinesisVideoClientTypes.Status?
        /// The Amazon Resource Name (ARN) of the stream.
        public var streamARN: Swift.String?
        /// The name of the stream.
        public var streamName: Swift.String?
        /// The version of the stream.
        public var version: Swift.String?

        public init (
            creationTime: ClientRuntime.Date? = nil,
            dataRetentionInHours: Swift.Int? = nil,
            deviceName: Swift.String? = nil,
            kmsKeyId: Swift.String? = nil,
            mediaType: Swift.String? = nil,
            status: KinesisVideoClientTypes.Status? = nil,
            streamARN: Swift.String? = nil,
            streamName: Swift.String? = nil,
            version: Swift.String? = nil
        )
        {
            self.creationTime = creationTime
            self.dataRetentionInHours = dataRetentionInHours
            self.deviceName = deviceName
            self.kmsKeyId = kmsKeyId
            self.mediaType = mediaType
            self.status = status
            self.streamARN = streamARN
            self.streamName = streamName
            self.version = version
        }
    }

}
