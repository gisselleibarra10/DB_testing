// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KinesisVideoClientTypes {
    public enum APIName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case getClip
        case getDashStreamingSessionUrl
        case getHlsStreamingSessionUrl
        case getImages
        case getMedia
        case getMediaForFragmentList
        case listFragments
        case putMedia
        case sdkUnknown(Swift.String)

        public static var allCases: [APIName] {
            return [
                .getClip,
                .getDashStreamingSessionUrl,
                .getHlsStreamingSessionUrl,
                .getImages,
                .getMedia,
                .getMediaForFragmentList,
                .listFragments,
                .putMedia,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .getClip: return "GET_CLIP"
            case .getDashStreamingSessionUrl: return "GET_DASH_STREAMING_SESSION_URL"
            case .getHlsStreamingSessionUrl: return "GET_HLS_STREAMING_SESSION_URL"
            case .getImages: return "GET_IMAGES"
            case .getMedia: return "GET_MEDIA"
            case .getMediaForFragmentList: return "GET_MEDIA_FOR_FRAGMENT_LIST"
            case .listFragments: return "LIST_FRAGMENTS"
            case .putMedia: return "PUT_MEDIA"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = APIName(rawValue: rawValue) ?? APIName.sdkUnknown(rawValue)
        }
    }
}
