// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDataRetentionInputBody: Swift.Equatable {
    let streamName: Swift.String?
    let streamARN: Swift.String?
    let currentVersion: Swift.String?
    let operation: KinesisVideoClientTypes.UpdateDataRetentionOperation?
    let dataRetentionChangeInHours: Swift.Int?
}

extension UpdateDataRetentionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case currentVersion = "CurrentVersion"
        case dataRetentionChangeInHours = "DataRetentionChangeInHours"
        case operation = "Operation"
        case streamARN = "StreamARN"
        case streamName = "StreamName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let streamARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamARN)
        streamARN = streamARNDecoded
        let currentVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .currentVersion)
        currentVersion = currentVersionDecoded
        let operationDecoded = try containerValues.decodeIfPresent(KinesisVideoClientTypes.UpdateDataRetentionOperation.self, forKey: .operation)
        operation = operationDecoded
        let dataRetentionChangeInHoursDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .dataRetentionChangeInHours)
        dataRetentionChangeInHours = dataRetentionChangeInHoursDecoded
    }
}
