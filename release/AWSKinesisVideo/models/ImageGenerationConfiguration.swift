// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KinesisVideoClientTypes {
    /// The structure that contains the information required for the KVS images delivery. If null, the configuration will be deleted from the stream.
    public struct ImageGenerationConfiguration: Swift.Equatable {
        /// The structure that contains the information required to deliver images to a customer.
        /// This member is required.
        public var destinationConfig: KinesisVideoClientTypes.ImageGenerationDestinationConfig?
        /// The accepted image format.
        /// This member is required.
        public var format: KinesisVideoClientTypes.Format?
        /// The list of a key-value pair structure that contains extra parameters that can be applied when the image is generated. The FormatConfig key is the JPEGQuality, which indicates the JPEG quality key to be used to generate the image. The FormatConfig value accepts ints from 1 to 100. If the value is 1, the image will be generated with less quality and the best compression. If the value is 100, the image will be generated with the best quality and less compression. If no value is provided, the default value of the JPEGQuality key will be set to 80.
        public var formatConfig: [Swift.String:Swift.String]?
        /// The height of the output image that is used in conjunction with the WidthPixels parameter. When both HeightPixels and WidthPixels parameters are provided, the image will be stretched to fit the specified aspect ratio. If only the HeightPixels parameter is provided, its original aspect ratio will be used to calculate the WidthPixels ratio. If neither parameter is provided, the original image size will be returned.
        public var heightPixels: Swift.Int?
        /// The origin of the Server or Producer timestamps to use to generate the images.
        /// This member is required.
        public var imageSelectorType: KinesisVideoClientTypes.ImageSelectorType?
        /// The time interval in milliseconds (ms) at which the images need to be generated from the stream. The minimum value that can be provided is 33 ms, because a camera that generates content at 30 FPS would create a frame every 33.3 ms. If the timestamp range is less than the sampling interval, the Image from the StartTimestamp will be returned if available.
        /// This member is required.
        public var samplingInterval: Swift.Int?
        /// Indicates whether the ContinuousImageGenerationConfigurations API is enabled or disabled.
        /// This member is required.
        public var status: KinesisVideoClientTypes.ConfigurationStatus?
        /// The width of the output image that is used in conjunction with the HeightPixels parameter. When both WidthPixels and HeightPixels parameters are provided, the image will be stretched to fit the specified aspect ratio. If only the WidthPixels parameter is provided, its original aspect ratio will be used to calculate the HeightPixels ratio. If neither parameter is provided, the original image size will be returned.
        public var widthPixels: Swift.Int?

        public init (
            destinationConfig: KinesisVideoClientTypes.ImageGenerationDestinationConfig? = nil,
            format: KinesisVideoClientTypes.Format? = nil,
            formatConfig: [Swift.String:Swift.String]? = nil,
            heightPixels: Swift.Int? = nil,
            imageSelectorType: KinesisVideoClientTypes.ImageSelectorType? = nil,
            samplingInterval: Swift.Int? = nil,
            status: KinesisVideoClientTypes.ConfigurationStatus? = nil,
            widthPixels: Swift.Int? = nil
        )
        {
            self.destinationConfig = destinationConfig
            self.format = format
            self.formatConfig = formatConfig
            self.heightPixels = heightPixels
            self.imageSelectorType = imageSelectorType
            self.samplingInterval = samplingInterval
            self.status = status
            self.widthPixels = widthPixels
        }
    }

}
