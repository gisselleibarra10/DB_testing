// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateSignalingChannelInputBody: Swift.Equatable {
    let channelARN: Swift.String?
    let currentVersion: Swift.String?
    let singleMasterConfiguration: KinesisVideoClientTypes.SingleMasterConfiguration?
}

extension UpdateSignalingChannelInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channelARN = "ChannelARN"
        case currentVersion = "CurrentVersion"
        case singleMasterConfiguration = "SingleMasterConfiguration"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .channelARN)
        channelARN = channelARNDecoded
        let currentVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .currentVersion)
        currentVersion = currentVersionDecoded
        let singleMasterConfigurationDecoded = try containerValues.decodeIfPresent(KinesisVideoClientTypes.SingleMasterConfiguration.self, forKey: .singleMasterConfiguration)
        singleMasterConfiguration = singleMasterConfigurationDecoded
    }
}
