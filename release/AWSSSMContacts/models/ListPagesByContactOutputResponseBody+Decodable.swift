// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPagesByContactOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let pages: [SsmContactsClientTypes.Page]?
}

extension ListPagesByContactOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case pages = "Pages"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let pagesContainer = try containerValues.decodeIfPresent([SsmContactsClientTypes.Page?].self, forKey: .pages)
        var pagesDecoded0:[SsmContactsClientTypes.Page]? = nil
        if let pagesContainer = pagesContainer {
            pagesDecoded0 = [SsmContactsClientTypes.Page]()
            for structure0 in pagesContainer {
                if let structure0 = structure0 {
                    pagesDecoded0?.append(structure0)
                }
            }
        }
        pages = pagesDecoded0
    }
}
