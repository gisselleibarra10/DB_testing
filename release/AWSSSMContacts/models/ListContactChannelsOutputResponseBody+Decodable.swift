// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContactChannelsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let contactChannels: [SsmContactsClientTypes.ContactChannel]?
}

extension ListContactChannelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contactChannels = "ContactChannels"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let contactChannelsContainer = try containerValues.decodeIfPresent([SsmContactsClientTypes.ContactChannel?].self, forKey: .contactChannels)
        var contactChannelsDecoded0:[SsmContactsClientTypes.ContactChannel]? = nil
        if let contactChannelsContainer = contactChannelsContainer {
            contactChannelsDecoded0 = [SsmContactsClientTypes.ContactChannel]()
            for structure0 in contactChannelsContainer {
                if let structure0 = structure0 {
                    contactChannelsDecoded0?.append(structure0)
                }
            }
        }
        contactChannels = contactChannelsDecoded0
    }
}
