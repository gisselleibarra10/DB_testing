// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmContactsClientTypes.Plan: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case stages = "Stages"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let stages = stages {
            var stagesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .stages)
            for stageslist0 in stages {
                try stagesContainer.encode(stageslist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stagesContainer = try containerValues.decodeIfPresent([SsmContactsClientTypes.Stage?].self, forKey: .stages)
        var stagesDecoded0:[SsmContactsClientTypes.Stage]? = nil
        if let stagesContainer = stagesContainer {
            stagesDecoded0 = [SsmContactsClientTypes.Stage]()
            for structure0 in stagesContainer {
                if let structure0 = structure0 {
                    stagesDecoded0?.append(structure0)
                }
            }
        }
        stages = stagesDecoded0
    }
}
