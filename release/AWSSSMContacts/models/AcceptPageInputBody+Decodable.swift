// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AcceptPageInputBody: Swift.Equatable {
    let pageId: Swift.String?
    let contactChannelId: Swift.String?
    let acceptType: SsmContactsClientTypes.AcceptType?
    let note: Swift.String?
    let acceptCode: Swift.String?
    let acceptCodeValidation: SsmContactsClientTypes.AcceptCodeValidation?
}

extension AcceptPageInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceptCode = "AcceptCode"
        case acceptCodeValidation = "AcceptCodeValidation"
        case acceptType = "AcceptType"
        case contactChannelId = "ContactChannelId"
        case note = "Note"
        case pageId = "PageId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pageIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pageId)
        pageId = pageIdDecoded
        let contactChannelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .contactChannelId)
        contactChannelId = contactChannelIdDecoded
        let acceptTypeDecoded = try containerValues.decodeIfPresent(SsmContactsClientTypes.AcceptType.self, forKey: .acceptType)
        acceptType = acceptTypeDecoded
        let noteDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .note)
        note = noteDecoded
        let acceptCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .acceptCode)
        acceptCode = acceptCodeDecoded
        let acceptCodeValidationDecoded = try containerValues.decodeIfPresent(SsmContactsClientTypes.AcceptCodeValidation.self, forKey: .acceptCodeValidation)
        acceptCodeValidation = acceptCodeValidationDecoded
    }
}
