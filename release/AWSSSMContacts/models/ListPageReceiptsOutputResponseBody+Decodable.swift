// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPageReceiptsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let receipts: [SsmContactsClientTypes.Receipt]?
}

extension ListPageReceiptsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case receipts = "Receipts"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let receiptsContainer = try containerValues.decodeIfPresent([SsmContactsClientTypes.Receipt?].self, forKey: .receipts)
        var receiptsDecoded0:[SsmContactsClientTypes.Receipt]? = nil
        if let receiptsContainer = receiptsContainer {
            receiptsDecoded0 = [SsmContactsClientTypes.Receipt]()
            for structure0 in receiptsContainer {
                if let structure0 = structure0 {
                    receiptsDecoded0?.append(structure0)
                }
            }
        }
        receipts = receiptsDecoded0
    }
}
