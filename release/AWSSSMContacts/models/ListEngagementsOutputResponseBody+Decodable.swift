// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEngagementsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let engagements: [SsmContactsClientTypes.Engagement]?
}

extension ListEngagementsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case engagements = "Engagements"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let engagementsContainer = try containerValues.decodeIfPresent([SsmContactsClientTypes.Engagement?].self, forKey: .engagements)
        var engagementsDecoded0:[SsmContactsClientTypes.Engagement]? = nil
        if let engagementsContainer = engagementsContainer {
            engagementsDecoded0 = [SsmContactsClientTypes.Engagement]()
            for structure0 in engagementsContainer {
                if let structure0 = structure0 {
                    engagementsDecoded0?.append(structure0)
                }
            }
        }
        engagements = engagementsDecoded0
    }
}
