// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointSmsVoiceClientTypes.VoiceMessageContent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case callInstructionsMessage = "CallInstructionsMessage"
        case plainTextMessage = "PlainTextMessage"
        case sSMLMessage = "SSMLMessage"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let callInstructionsMessage = self.callInstructionsMessage {
            try encodeContainer.encode(callInstructionsMessage, forKey: .callInstructionsMessage)
        }
        if let plainTextMessage = self.plainTextMessage {
            try encodeContainer.encode(plainTextMessage, forKey: .plainTextMessage)
        }
        if let sSMLMessage = self.sSMLMessage {
            try encodeContainer.encode(sSMLMessage, forKey: .sSMLMessage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let callInstructionsMessageDecoded = try containerValues.decodeIfPresent(PinpointSmsVoiceClientTypes.CallInstructionsMessageType.self, forKey: .callInstructionsMessage)
        callInstructionsMessage = callInstructionsMessageDecoded
        let plainTextMessageDecoded = try containerValues.decodeIfPresent(PinpointSmsVoiceClientTypes.PlainTextMessageType.self, forKey: .plainTextMessage)
        plainTextMessage = plainTextMessageDecoded
        let sSMLMessageDecoded = try containerValues.decodeIfPresent(PinpointSmsVoiceClientTypes.SSMLMessageType.self, forKey: .sSMLMessage)
        sSMLMessage = sSMLMessageDecoded
    }
}
