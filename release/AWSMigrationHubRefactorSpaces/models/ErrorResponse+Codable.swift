// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MigrationHubRefactorSpacesClientTypes.ErrorResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountId = "AccountId"
        case additionalDetails = "AdditionalDetails"
        case code = "Code"
        case message = "Message"
        case resourceIdentifier = "ResourceIdentifier"
        case resourceType = "ResourceType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountId = self.accountId {
            try encodeContainer.encode(accountId, forKey: .accountId)
        }
        if let additionalDetails = additionalDetails {
            var additionalDetailsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .additionalDetails)
            for (dictKey0, additionaldetails0) in additionalDetails {
                try additionalDetailsContainer.encode(additionaldetails0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let code = self.code {
            try encodeContainer.encode(code.rawValue, forKey: .code)
        }
        if let message = self.message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let resourceIdentifier = self.resourceIdentifier {
            try encodeContainer.encode(resourceIdentifier, forKey: .resourceIdentifier)
        }
        if let resourceType = self.resourceType {
            try encodeContainer.encode(resourceType.rawValue, forKey: .resourceType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeDecoded = try containerValues.decodeIfPresent(MigrationHubRefactorSpacesClientTypes.ErrorCode.self, forKey: .code)
        code = codeDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let accountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let resourceIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceIdentifier)
        resourceIdentifier = resourceIdentifierDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(MigrationHubRefactorSpacesClientTypes.ErrorResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let additionalDetailsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .additionalDetails)
        var additionalDetailsDecoded0: [Swift.String:Swift.String]? = nil
        if let additionalDetailsContainer = additionalDetailsContainer {
            additionalDetailsDecoded0 = [Swift.String:Swift.String]()
            for (key0, additionaldetailsvalue0) in additionalDetailsContainer {
                if let additionaldetailsvalue0 = additionaldetailsvalue0 {
                    additionalDetailsDecoded0?[key0] = additionaldetailsvalue0
                }
            }
        }
        additionalDetails = additionalDetailsDecoded0
    }
}
