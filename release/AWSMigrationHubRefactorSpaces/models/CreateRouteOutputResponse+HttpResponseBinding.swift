// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateRouteOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: CreateRouteOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.applicationId = output.applicationId
            self.arn = output.arn
            self.createdByAccountId = output.createdByAccountId
            self.createdTime = output.createdTime
            self.lastUpdatedTime = output.lastUpdatedTime
            self.ownerAccountId = output.ownerAccountId
            self.routeId = output.routeId
            self.routeType = output.routeType
            self.serviceId = output.serviceId
            self.state = output.state
            self.tags = output.tags
            self.uriPathRoute = output.uriPathRoute
        } else {
            self.applicationId = nil
            self.arn = nil
            self.createdByAccountId = nil
            self.createdTime = nil
            self.lastUpdatedTime = nil
            self.ownerAccountId = nil
            self.routeId = nil
            self.routeType = nil
            self.serviceId = nil
            self.state = nil
            self.tags = nil
            self.uriPathRoute = nil
        }
    }
}
