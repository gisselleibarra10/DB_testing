// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MigrationHubRefactorSpacesClientTypes {
    /// The summary information for the routes as a response to ListRoutes.
    public struct RouteSummary: Swift.Equatable {
        /// The unique identifier of the application.
        public var applicationId: Swift.String?
        /// The Amazon Resource Name (ARN) of the route.
        public var arn: Swift.String?
        /// The Amazon Web Services account ID of the route creator.
        public var createdByAccountId: Swift.String?
        /// A timestamp that indicates when the route is created.
        public var createdTime: ClientRuntime.Date?
        /// The unique identifier of the environment.
        public var environmentId: Swift.String?
        /// Any error associated with the route resource.
        public var error: MigrationHubRefactorSpacesClientTypes.ErrorResponse?
        /// Indicates whether to match all subpaths of the given source path. If this value is false, requests must match the source path exactly before they are forwarded to this route's service.
        public var includeChildPaths: Swift.Bool?
        /// A timestamp that indicates when the route was last updated.
        public var lastUpdatedTime: ClientRuntime.Date?
        /// A list of HTTP methods to match. An empty list matches all values. If a method is present, only HTTP requests using that method are forwarded to this routeâ€™s service.
        public var methods: [MigrationHubRefactorSpacesClientTypes.HttpMethod]?
        /// The Amazon Web Services account ID of the route owner.
        public var ownerAccountId: Swift.String?
        /// A mapping of Amazon API Gateway path resources to resource IDs.
        public var pathResourceToId: [Swift.String:Swift.String]?
        /// The unique identifier of the route.
        public var routeId: Swift.String?
        /// The route type of the route.
        public var routeType: MigrationHubRefactorSpacesClientTypes.RouteType?
        /// The unique identifier of the service.
        public var serviceId: Swift.String?
        /// The path to use to match traffic. Paths must start with / and are relative to the base of the application.
        public var sourcePath: Swift.String?
        /// The current state of the route.
        public var state: MigrationHubRefactorSpacesClientTypes.RouteState?
        /// The tags assigned to the route.
        public var tags: [Swift.String:Swift.String]?

        public init (
            applicationId: Swift.String? = nil,
            arn: Swift.String? = nil,
            createdByAccountId: Swift.String? = nil,
            createdTime: ClientRuntime.Date? = nil,
            environmentId: Swift.String? = nil,
            error: MigrationHubRefactorSpacesClientTypes.ErrorResponse? = nil,
            includeChildPaths: Swift.Bool? = nil,
            lastUpdatedTime: ClientRuntime.Date? = nil,
            methods: [MigrationHubRefactorSpacesClientTypes.HttpMethod]? = nil,
            ownerAccountId: Swift.String? = nil,
            pathResourceToId: [Swift.String:Swift.String]? = nil,
            routeId: Swift.String? = nil,
            routeType: MigrationHubRefactorSpacesClientTypes.RouteType? = nil,
            serviceId: Swift.String? = nil,
            sourcePath: Swift.String? = nil,
            state: MigrationHubRefactorSpacesClientTypes.RouteState? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.applicationId = applicationId
            self.arn = arn
            self.createdByAccountId = createdByAccountId
            self.createdTime = createdTime
            self.environmentId = environmentId
            self.error = error
            self.includeChildPaths = includeChildPaths
            self.lastUpdatedTime = lastUpdatedTime
            self.methods = methods
            self.ownerAccountId = ownerAccountId
            self.pathResourceToId = pathResourceToId
            self.routeId = routeId
            self.routeType = routeType
            self.serviceId = serviceId
            self.sourcePath = sourcePath
            self.state = state
            self.tags = tags
        }
    }

}
