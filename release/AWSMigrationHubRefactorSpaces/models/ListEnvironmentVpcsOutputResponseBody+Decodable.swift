// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEnvironmentVpcsOutputResponseBody: Swift.Equatable {
    let environmentVpcList: [MigrationHubRefactorSpacesClientTypes.EnvironmentVpc]?
    let nextToken: Swift.String?
}

extension ListEnvironmentVpcsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case environmentVpcList = "EnvironmentVpcList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let environmentVpcListContainer = try containerValues.decodeIfPresent([MigrationHubRefactorSpacesClientTypes.EnvironmentVpc?].self, forKey: .environmentVpcList)
        var environmentVpcListDecoded0:[MigrationHubRefactorSpacesClientTypes.EnvironmentVpc]? = nil
        if let environmentVpcListContainer = environmentVpcListContainer {
            environmentVpcListDecoded0 = [MigrationHubRefactorSpacesClientTypes.EnvironmentVpc]()
            for structure0 in environmentVpcListContainer {
                if let structure0 = structure0 {
                    environmentVpcListDecoded0?.append(structure0)
                }
            }
        }
        environmentVpcList = environmentVpcListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
