// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEnvironmentsOutputResponseBody: Swift.Equatable {
    let environmentSummaryList: [MigrationHubRefactorSpacesClientTypes.EnvironmentSummary]?
    let nextToken: Swift.String?
}

extension ListEnvironmentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case environmentSummaryList = "EnvironmentSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let environmentSummaryListContainer = try containerValues.decodeIfPresent([MigrationHubRefactorSpacesClientTypes.EnvironmentSummary?].self, forKey: .environmentSummaryList)
        var environmentSummaryListDecoded0:[MigrationHubRefactorSpacesClientTypes.EnvironmentSummary]? = nil
        if let environmentSummaryListContainer = environmentSummaryListContainer {
            environmentSummaryListDecoded0 = [MigrationHubRefactorSpacesClientTypes.EnvironmentSummary]()
            for structure0 in environmentSummaryListContainer {
                if let structure0 = structure0 {
                    environmentSummaryListDecoded0?.append(structure0)
                }
            }
        }
        environmentSummaryList = environmentSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
