// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRoutesOutputResponseBody: Swift.Equatable {
    let routeSummaryList: [MigrationHubRefactorSpacesClientTypes.RouteSummary]?
    let nextToken: Swift.String?
}

extension ListRoutesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case routeSummaryList = "RouteSummaryList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let routeSummaryListContainer = try containerValues.decodeIfPresent([MigrationHubRefactorSpacesClientTypes.RouteSummary?].self, forKey: .routeSummaryList)
        var routeSummaryListDecoded0:[MigrationHubRefactorSpacesClientTypes.RouteSummary]? = nil
        if let routeSummaryListContainer = routeSummaryListContainer {
            routeSummaryListDecoded0 = [MigrationHubRefactorSpacesClientTypes.RouteSummary]()
            for structure0 in routeSummaryListContainer {
                if let structure0 = structure0 {
                    routeSummaryListDecoded0?.append(structure0)
                }
            }
        }
        routeSummaryList = routeSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
