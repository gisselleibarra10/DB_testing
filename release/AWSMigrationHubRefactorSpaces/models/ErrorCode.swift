// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MigrationHubRefactorSpacesClientTypes {
    public enum ErrorCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case invalidResourceState
        case notAuthorized
        case requestLimitExceeded
        case resourceCreationFailure
        case resourceDeletionFailure
        case resourceInUse
        case resourceLimitExceeded
        case resourceNotFound
        case resourceRetrievalFailure
        case resourceUpdateFailure
        case serviceEndpointHealthCheckFailure
        case stateTransitionFailure
        case sdkUnknown(Swift.String)

        public static var allCases: [ErrorCode] {
            return [
                .invalidResourceState,
                .notAuthorized,
                .requestLimitExceeded,
                .resourceCreationFailure,
                .resourceDeletionFailure,
                .resourceInUse,
                .resourceLimitExceeded,
                .resourceNotFound,
                .resourceRetrievalFailure,
                .resourceUpdateFailure,
                .serviceEndpointHealthCheckFailure,
                .stateTransitionFailure,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .invalidResourceState: return "INVALID_RESOURCE_STATE"
            case .notAuthorized: return "NOT_AUTHORIZED"
            case .requestLimitExceeded: return "REQUEST_LIMIT_EXCEEDED"
            case .resourceCreationFailure: return "RESOURCE_CREATION_FAILURE"
            case .resourceDeletionFailure: return "RESOURCE_DELETION_FAILURE"
            case .resourceInUse: return "RESOURCE_IN_USE"
            case .resourceLimitExceeded: return "RESOURCE_LIMIT_EXCEEDED"
            case .resourceNotFound: return "RESOURCE_NOT_FOUND"
            case .resourceRetrievalFailure: return "RESOURCE_RETRIEVAL_FAILURE"
            case .resourceUpdateFailure: return "RESOURCE_UPDATE_FAILURE"
            case .serviceEndpointHealthCheckFailure: return "SERVICE_ENDPOINT_HEALTH_CHECK_FAILURE"
            case .stateTransitionFailure: return "STATE_TRANSITION_FAILURE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ErrorCode(rawValue: rawValue) ?? ErrorCode.sdkUnknown(rawValue)
        }
    }
}
