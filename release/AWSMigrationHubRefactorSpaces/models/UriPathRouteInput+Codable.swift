// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MigrationHubRefactorSpacesClientTypes.UriPathRouteInput: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activationState = "ActivationState"
        case includeChildPaths = "IncludeChildPaths"
        case methods = "Methods"
        case sourcePath = "SourcePath"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let activationState = self.activationState {
            try encodeContainer.encode(activationState.rawValue, forKey: .activationState)
        }
        if let includeChildPaths = self.includeChildPaths {
            try encodeContainer.encode(includeChildPaths, forKey: .includeChildPaths)
        }
        if let methods = methods {
            var methodsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .methods)
            for httpmethods0 in methods {
                try methodsContainer.encode(httpmethods0.rawValue)
            }
        }
        if let sourcePath = self.sourcePath {
            try encodeContainer.encode(sourcePath, forKey: .sourcePath)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourcePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourcePath)
        sourcePath = sourcePathDecoded
        let activationStateDecoded = try containerValues.decodeIfPresent(MigrationHubRefactorSpacesClientTypes.RouteActivationState.self, forKey: .activationState)
        activationState = activationStateDecoded
        let methodsContainer = try containerValues.decodeIfPresent([MigrationHubRefactorSpacesClientTypes.HttpMethod?].self, forKey: .methods)
        var methodsDecoded0:[MigrationHubRefactorSpacesClientTypes.HttpMethod]? = nil
        if let methodsContainer = methodsContainer {
            methodsDecoded0 = [MigrationHubRefactorSpacesClientTypes.HttpMethod]()
            for string0 in methodsContainer {
                if let string0 = string0 {
                    methodsDecoded0?.append(string0)
                }
            }
        }
        methods = methodsDecoded0
        let includeChildPathsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeChildPaths)
        includeChildPaths = includeChildPathsDecoded
    }
}
