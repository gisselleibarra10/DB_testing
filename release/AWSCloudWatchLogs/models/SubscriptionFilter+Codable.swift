// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchLogsClientTypes.SubscriptionFilter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime
        case destinationArn
        case distribution
        case filterName
        case filterPattern
        case logGroupName
        case roleArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime, forKey: .creationTime)
        }
        if let destinationArn = self.destinationArn {
            try encodeContainer.encode(destinationArn, forKey: .destinationArn)
        }
        if let distribution = self.distribution {
            try encodeContainer.encode(distribution.rawValue, forKey: .distribution)
        }
        if let filterName = self.filterName {
            try encodeContainer.encode(filterName, forKey: .filterName)
        }
        if let filterPattern = self.filterPattern {
            try encodeContainer.encode(filterPattern, forKey: .filterPattern)
        }
        if let logGroupName = self.logGroupName {
            try encodeContainer.encode(logGroupName, forKey: .logGroupName)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filterName)
        filterName = filterNameDecoded
        let logGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logGroupName)
        logGroupName = logGroupNameDecoded
        let filterPatternDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filterPattern)
        filterPattern = filterPatternDecoded
        let destinationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationArn)
        destinationArn = destinationArnDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let distributionDecoded = try containerValues.decodeIfPresent(CloudWatchLogsClientTypes.Distribution.self, forKey: .distribution)
        distribution = distributionDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
    }
}
