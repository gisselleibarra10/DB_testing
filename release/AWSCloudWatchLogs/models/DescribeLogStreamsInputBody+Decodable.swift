// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLogStreamsInputBody: Swift.Equatable {
    let logGroupName: Swift.String?
    let logStreamNamePrefix: Swift.String?
    let orderBy: CloudWatchLogsClientTypes.OrderBy?
    let descending: Swift.Bool?
    let nextToken: Swift.String?
    let limit: Swift.Int?
}

extension DescribeLogStreamsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case descending
        case limit
        case logGroupName
        case logStreamNamePrefix
        case nextToken
        case orderBy
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logGroupName)
        logGroupName = logGroupNameDecoded
        let logStreamNamePrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logStreamNamePrefix)
        logStreamNamePrefix = logStreamNamePrefixDecoded
        let orderByDecoded = try containerValues.decodeIfPresent(CloudWatchLogsClientTypes.OrderBy.self, forKey: .orderBy)
        orderBy = orderByDecoded
        let descendingDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .descending)
        descending = descendingDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
    }
}
