// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetQueryResultsOutputResponseBody: Swift.Equatable {
    let results: [[CloudWatchLogsClientTypes.ResultField]]?
    let statistics: CloudWatchLogsClientTypes.QueryStatistics?
    let status: CloudWatchLogsClientTypes.QueryStatus?
}

extension GetQueryResultsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case results
        case statistics
        case status
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultsContainer = try containerValues.decodeIfPresent([[CloudWatchLogsClientTypes.ResultField?]?].self, forKey: .results)
        var resultsDecoded0:[[CloudWatchLogsClientTypes.ResultField]]? = nil
        if let resultsContainer = resultsContainer {
            resultsDecoded0 = [[CloudWatchLogsClientTypes.ResultField]]()
            for list0 in resultsContainer {
                var list0Decoded0: [CloudWatchLogsClientTypes.ResultField]? = nil
                if let list0 = list0 {
                    list0Decoded0 = [CloudWatchLogsClientTypes.ResultField]()
                    for structure1 in list0 {
                        if let structure1 = structure1 {
                            list0Decoded0?.append(structure1)
                        }
                    }
                }
                if let list0Decoded0 = list0Decoded0 {
                    resultsDecoded0?.append(list0Decoded0)
                }
            }
        }
        results = resultsDecoded0
        let statisticsDecoded = try containerValues.decodeIfPresent(CloudWatchLogsClientTypes.QueryStatistics.self, forKey: .statistics)
        statistics = statisticsDecoded
        let statusDecoded = try containerValues.decodeIfPresent(CloudWatchLogsClientTypes.QueryStatus.self, forKey: .status)
        status = statusDecoded
    }
}
