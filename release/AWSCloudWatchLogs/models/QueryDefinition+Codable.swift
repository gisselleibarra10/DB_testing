// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchLogsClientTypes.QueryDefinition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastModified
        case logGroupNames
        case name
        case queryDefinitionId
        case queryString
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lastModified = self.lastModified {
            try encodeContainer.encode(lastModified, forKey: .lastModified)
        }
        if let logGroupNames = logGroupNames {
            var logGroupNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .logGroupNames)
            for loggroupnames0 in logGroupNames {
                try logGroupNamesContainer.encode(loggroupnames0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let queryDefinitionId = self.queryDefinitionId {
            try encodeContainer.encode(queryDefinitionId, forKey: .queryDefinitionId)
        }
        if let queryString = self.queryString {
            try encodeContainer.encode(queryString, forKey: .queryString)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queryDefinitionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryDefinitionId)
        queryDefinitionId = queryDefinitionIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let queryStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryString)
        queryString = queryStringDecoded
        let lastModifiedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .lastModified)
        lastModified = lastModifiedDecoded
        let logGroupNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .logGroupNames)
        var logGroupNamesDecoded0:[Swift.String]? = nil
        if let logGroupNamesContainer = logGroupNamesContainer {
            logGroupNamesDecoded0 = [Swift.String]()
            for string0 in logGroupNamesContainer {
                if let string0 = string0 {
                    logGroupNamesDecoded0?.append(string0)
                }
            }
        }
        logGroupNames = logGroupNamesDecoded0
    }
}
