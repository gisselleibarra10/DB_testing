// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchLogsClientTypes.MetricFilterMatchRecord: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventMessage
        case eventNumber
        case extractedValues
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let eventMessage = self.eventMessage {
            try encodeContainer.encode(eventMessage, forKey: .eventMessage)
        }
        if eventNumber != 0 {
            try encodeContainer.encode(eventNumber, forKey: .eventNumber)
        }
        if let extractedValues = extractedValues {
            var extractedValuesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .extractedValues)
            for (dictKey0, extractedvalues0) in extractedValues {
                try extractedValuesContainer.encode(extractedvalues0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventNumberDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .eventNumber) ?? 0
        eventNumber = eventNumberDecoded
        let eventMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventMessage)
        eventMessage = eventMessageDecoded
        let extractedValuesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .extractedValues)
        var extractedValuesDecoded0: [Swift.String:Swift.String]? = nil
        if let extractedValuesContainer = extractedValuesContainer {
            extractedValuesDecoded0 = [Swift.String:Swift.String]()
            for (key0, value0) in extractedValuesContainer {
                if let value0 = value0 {
                    extractedValuesDecoded0?[key0] = value0
                }
            }
        }
        extractedValues = extractedValuesDecoded0
    }
}
