// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutSubscriptionFilterInput: Swift.Equatable {
    /// The ARN of the destination to deliver matching log events to. Currently, the supported destinations are:
    ///
    /// * An Amazon Kinesis stream belonging to the same account as the subscription filter, for same-account delivery.
    ///
    /// * A logical destination (specified using an ARN) belonging to a different account, for cross-account delivery. If you are setting up a cross-account subscription, the destination must have an IAM policy associated with it that allows the sender to send logs to the destination. For more information, see [PutDestinationPolicy](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html).
    ///
    /// * An Amazon Kinesis Firehose delivery stream belonging to the same account as the subscription filter, for same-account delivery.
    ///
    /// * A Lambda function belonging to the same account as the subscription filter, for same-account delivery.
    /// This member is required.
    public var destinationArn: Swift.String?
    /// The method used to distribute log data to the destination. By default, log data is grouped by log stream, but the grouping can be set to random for a more even distribution. This property is only applicable when the destination is an Amazon Kinesis stream.
    public var distribution: CloudWatchLogsClientTypes.Distribution?
    /// A name for the subscription filter. If you are updating an existing filter, you must specify the correct name in filterName. To find the name of the filter currently associated with a log group, use [DescribeSubscriptionFilters](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeSubscriptionFilters.html).
    /// This member is required.
    public var filterName: Swift.String?
    /// A filter pattern for subscribing to a filtered stream of log events.
    /// This member is required.
    public var filterPattern: Swift.String?
    /// The name of the log group.
    /// This member is required.
    public var logGroupName: Swift.String?
    /// The ARN of an IAM role that grants CloudWatch Logs permissions to deliver ingested log events to the destination stream. You don't need to provide the ARN when you are working with a logical destination for cross-account delivery.
    public var roleArn: Swift.String?

    public init (
        destinationArn: Swift.String? = nil,
        distribution: CloudWatchLogsClientTypes.Distribution? = nil,
        filterName: Swift.String? = nil,
        filterPattern: Swift.String? = nil,
        logGroupName: Swift.String? = nil,
        roleArn: Swift.String? = nil
    )
    {
        self.destinationArn = destinationArn
        self.distribution = distribution
        self.filterName = filterName
        self.filterPattern = filterPattern
        self.logGroupName = logGroupName
        self.roleArn = roleArn
    }
}
