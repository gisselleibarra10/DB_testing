// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLogGroupsInputBody: Swift.Equatable {
    let logGroupNamePrefix: Swift.String?
    let nextToken: Swift.String?
    let limit: Swift.Int?
}

extension DescribeLogGroupsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case limit
        case logGroupNamePrefix
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logGroupNamePrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logGroupNamePrefix)
        logGroupNamePrefix = logGroupNamePrefixDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
    }
}
