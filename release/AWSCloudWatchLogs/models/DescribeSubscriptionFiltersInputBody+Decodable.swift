// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSubscriptionFiltersInputBody: Swift.Equatable {
    let logGroupName: Swift.String?
    let filterNamePrefix: Swift.String?
    let nextToken: Swift.String?
    let limit: Swift.Int?
}

extension DescribeSubscriptionFiltersInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterNamePrefix
        case limit
        case logGroupName
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logGroupName)
        logGroupName = logGroupNameDecoded
        let filterNamePrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filterNamePrefix)
        filterNamePrefix = filterNamePrefixDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
    }
}
