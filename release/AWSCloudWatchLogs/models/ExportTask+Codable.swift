// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchLogsClientTypes.ExportTask: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destination
        case destinationPrefix
        case executionInfo
        case from
        case logGroupName
        case status
        case taskId
        case taskName
        case to
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destination = self.destination {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if let destinationPrefix = self.destinationPrefix {
            try encodeContainer.encode(destinationPrefix, forKey: .destinationPrefix)
        }
        if let executionInfo = self.executionInfo {
            try encodeContainer.encode(executionInfo, forKey: .executionInfo)
        }
        if let from = self.from {
            try encodeContainer.encode(from, forKey: .from)
        }
        if let logGroupName = self.logGroupName {
            try encodeContainer.encode(logGroupName, forKey: .logGroupName)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let taskId = self.taskId {
            try encodeContainer.encode(taskId, forKey: .taskId)
        }
        if let taskName = self.taskName {
            try encodeContainer.encode(taskName, forKey: .taskName)
        }
        if let to = self.to {
            try encodeContainer.encode(to, forKey: .to)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskId)
        taskId = taskIdDecoded
        let taskNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskName)
        taskName = taskNameDecoded
        let logGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logGroupName)
        logGroupName = logGroupNameDecoded
        let fromDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .from)
        from = fromDecoded
        let toDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .to)
        to = toDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destination)
        destination = destinationDecoded
        let destinationPrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationPrefix)
        destinationPrefix = destinationPrefixDecoded
        let statusDecoded = try containerValues.decodeIfPresent(CloudWatchLogsClientTypes.ExportTaskStatus.self, forKey: .status)
        status = statusDecoded
        let executionInfoDecoded = try containerValues.decodeIfPresent(CloudWatchLogsClientTypes.ExportTaskExecutionInfo.self, forKey: .executionInfo)
        executionInfo = executionInfoDecoded
    }
}
