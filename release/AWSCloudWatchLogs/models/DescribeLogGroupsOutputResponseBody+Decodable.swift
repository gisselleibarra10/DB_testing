// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLogGroupsOutputResponseBody: Swift.Equatable {
    let logGroups: [CloudWatchLogsClientTypes.LogGroup]?
    let nextToken: Swift.String?
}

extension DescribeLogGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case logGroups
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logGroupsContainer = try containerValues.decodeIfPresent([CloudWatchLogsClientTypes.LogGroup?].self, forKey: .logGroups)
        var logGroupsDecoded0:[CloudWatchLogsClientTypes.LogGroup]? = nil
        if let logGroupsContainer = logGroupsContainer {
            logGroupsDecoded0 = [CloudWatchLogsClientTypes.LogGroup]()
            for structure0 in logGroupsContainer {
                if let structure0 = structure0 {
                    logGroupsDecoded0?.append(structure0)
                }
            }
        }
        logGroups = logGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
