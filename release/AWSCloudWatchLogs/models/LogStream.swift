// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CloudWatchLogsClientTypes {
    /// Represents a log stream, which is a sequence of log events from a single emitter of logs.
    public struct LogStream: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the log stream.
        public var arn: Swift.String?
        /// The creation time of the stream, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
        public var creationTime: Swift.Int?
        /// The time of the first event, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
        public var firstEventTimestamp: Swift.Int?
        /// The time of the most recent log event in the log stream in CloudWatch Logs. This number is expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. The lastEventTime value updates on an eventual consistency basis. It typically updates in less than an hour from ingestion, but in rare situations might take longer.
        public var lastEventTimestamp: Swift.Int?
        /// The ingestion time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
        public var lastIngestionTime: Swift.Int?
        /// The name of the log stream.
        public var logStreamName: Swift.String?
        /// The number of bytes stored. Important: On June 17, 2019, this parameter was deprecated for log streams, and is always reported as zero. This change applies only to log streams. The storedBytes parameter for log groups is not affected.
        @available(*, deprecated, message: "Starting on June 17, 2019, this parameter will be deprecated for log streams, and will be reported as zero. This change applies only to log streams. The storedBytes parameter for log groups is not affected.")
        public var storedBytes: Swift.Int?
        /// The sequence token.
        public var uploadSequenceToken: Swift.String?

        public init (
            arn: Swift.String? = nil,
            creationTime: Swift.Int? = nil,
            firstEventTimestamp: Swift.Int? = nil,
            lastEventTimestamp: Swift.Int? = nil,
            lastIngestionTime: Swift.Int? = nil,
            logStreamName: Swift.String? = nil,
            storedBytes: Swift.Int? = nil,
            uploadSequenceToken: Swift.String? = nil
        )
        {
            self.arn = arn
            self.creationTime = creationTime
            self.firstEventTimestamp = firstEventTimestamp
            self.lastEventTimestamp = lastEventTimestamp
            self.lastIngestionTime = lastIngestionTime
            self.logStreamName = logStreamName
            self.storedBytes = storedBytes
            self.uploadSequenceToken = uploadSequenceToken
        }
    }

}
