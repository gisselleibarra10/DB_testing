// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSubscriptionFiltersOutputResponseBody: Swift.Equatable {
    let subscriptionFilters: [CloudWatchLogsClientTypes.SubscriptionFilter]?
    let nextToken: Swift.String?
}

extension DescribeSubscriptionFiltersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case subscriptionFilters
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subscriptionFiltersContainer = try containerValues.decodeIfPresent([CloudWatchLogsClientTypes.SubscriptionFilter?].self, forKey: .subscriptionFilters)
        var subscriptionFiltersDecoded0:[CloudWatchLogsClientTypes.SubscriptionFilter]? = nil
        if let subscriptionFiltersContainer = subscriptionFiltersContainer {
            subscriptionFiltersDecoded0 = [CloudWatchLogsClientTypes.SubscriptionFilter]()
            for structure0 in subscriptionFiltersContainer {
                if let structure0 = structure0 {
                    subscriptionFiltersDecoded0?.append(structure0)
                }
            }
        }
        subscriptionFilters = subscriptionFiltersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
