// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetLogEventsInput: Swift.Equatable {
    /// The end of the time range, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to or later than this time are not included.
    public var endTime: Swift.Int?
    /// The maximum number of log events returned. If you don't specify a value, the maximum is as many log events as can fit in a response size of 1 MB, up to 10,000 log events.
    public var limit: Swift.Int?
    /// The name of the log group.
    /// This member is required.
    public var logGroupName: Swift.String?
    /// The name of the log stream.
    /// This member is required.
    public var logStreamName: Swift.String?
    /// The token for the next set of items to return. (You received this token from a previous call.)
    public var nextToken: Swift.String?
    /// If the value is true, the earliest log events are returned first. If the value is false, the latest log events are returned first. The default value is false. If you are using a previous nextForwardToken value as the nextToken in this operation, you must specify true for startFromHead.
    public var startFromHead: Swift.Bool?
    /// The start of the time range, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to this time or later than this time are included. Events with a timestamp earlier than this time are not included.
    public var startTime: Swift.Int?

    public init (
        endTime: Swift.Int? = nil,
        limit: Swift.Int? = nil,
        logGroupName: Swift.String? = nil,
        logStreamName: Swift.String? = nil,
        nextToken: Swift.String? = nil,
        startFromHead: Swift.Bool? = nil,
        startTime: Swift.Int? = nil
    )
    {
        self.endTime = endTime
        self.limit = limit
        self.logGroupName = logGroupName
        self.logStreamName = logStreamName
        self.nextToken = nextToken
        self.startFromHead = startFromHead
        self.startTime = startTime
    }
}
