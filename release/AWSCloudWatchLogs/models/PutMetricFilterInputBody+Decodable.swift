// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutMetricFilterInputBody: Swift.Equatable {
    let logGroupName: Swift.String?
    let filterName: Swift.String?
    let filterPattern: Swift.String?
    let metricTransformations: [CloudWatchLogsClientTypes.MetricTransformation]?
}

extension PutMetricFilterInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterName
        case filterPattern
        case logGroupName
        case metricTransformations
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logGroupName)
        logGroupName = logGroupNameDecoded
        let filterNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filterName)
        filterName = filterNameDecoded
        let filterPatternDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filterPattern)
        filterPattern = filterPatternDecoded
        let metricTransformationsContainer = try containerValues.decodeIfPresent([CloudWatchLogsClientTypes.MetricTransformation?].self, forKey: .metricTransformations)
        var metricTransformationsDecoded0:[CloudWatchLogsClientTypes.MetricTransformation]? = nil
        if let metricTransformationsContainer = metricTransformationsContainer {
            metricTransformationsDecoded0 = [CloudWatchLogsClientTypes.MetricTransformation]()
            for structure0 in metricTransformationsContainer {
                if let structure0 = structure0 {
                    metricTransformationsDecoded0?.append(structure0)
                }
            }
        }
        metricTransformations = metricTransformationsDecoded0
    }
}
