// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutSubscriptionFilterInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationArn
        case distribution
        case filterName
        case filterPattern
        case logGroupName
        case roleArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destinationArn = self.destinationArn {
            try encodeContainer.encode(destinationArn, forKey: .destinationArn)
        }
        if let distribution = self.distribution {
            try encodeContainer.encode(distribution.rawValue, forKey: .distribution)
        }
        if let filterName = self.filterName {
            try encodeContainer.encode(filterName, forKey: .filterName)
        }
        if let filterPattern = self.filterPattern {
            try encodeContainer.encode(filterPattern, forKey: .filterPattern)
        }
        if let logGroupName = self.logGroupName {
            try encodeContainer.encode(logGroupName, forKey: .logGroupName)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }
}
