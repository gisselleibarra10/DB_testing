// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchLogsClientTypes.LogGroup: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case creationTime
        case kmsKeyId
        case logGroupName
        case metricFilterCount
        case retentionInDays
        case storedBytes
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime, forKey: .creationTime)
        }
        if let kmsKeyId = self.kmsKeyId {
            try encodeContainer.encode(kmsKeyId, forKey: .kmsKeyId)
        }
        if let logGroupName = self.logGroupName {
            try encodeContainer.encode(logGroupName, forKey: .logGroupName)
        }
        if let metricFilterCount = self.metricFilterCount {
            try encodeContainer.encode(metricFilterCount, forKey: .metricFilterCount)
        }
        if let retentionInDays = self.retentionInDays {
            try encodeContainer.encode(retentionInDays, forKey: .retentionInDays)
        }
        if let storedBytes = self.storedBytes {
            try encodeContainer.encode(storedBytes, forKey: .storedBytes)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logGroupName)
        logGroupName = logGroupNameDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let retentionInDaysDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .retentionInDays)
        retentionInDays = retentionInDaysDecoded
        let metricFilterCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .metricFilterCount)
        metricFilterCount = metricFilterCountDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let storedBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .storedBytes)
        storedBytes = storedBytesDecoded
        let kmsKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyId)
        kmsKeyId = kmsKeyIdDecoded
    }
}
