// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutQueryDefinitionInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case logGroupNames
        case name
        case queryDefinitionId
        case queryString
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let logGroupNames = logGroupNames {
            var logGroupNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .logGroupNames)
            for loggroupnames0 in logGroupNames {
                try logGroupNamesContainer.encode(loggroupnames0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let queryDefinitionId = self.queryDefinitionId {
            try encodeContainer.encode(queryDefinitionId, forKey: .queryDefinitionId)
        }
        if let queryString = self.queryString {
            try encodeContainer.encode(queryString, forKey: .queryString)
        }
    }
}
