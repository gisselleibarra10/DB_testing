// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLogEventsOutputResponseBody: Swift.Equatable {
    let events: [CloudWatchLogsClientTypes.OutputLogEvent]?
    let nextForwardToken: Swift.String?
    let nextBackwardToken: Swift.String?
}

extension GetLogEventsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case events
        case nextBackwardToken
        case nextForwardToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventsContainer = try containerValues.decodeIfPresent([CloudWatchLogsClientTypes.OutputLogEvent?].self, forKey: .events)
        var eventsDecoded0:[CloudWatchLogsClientTypes.OutputLogEvent]? = nil
        if let eventsContainer = eventsContainer {
            eventsDecoded0 = [CloudWatchLogsClientTypes.OutputLogEvent]()
            for structure0 in eventsContainer {
                if let structure0 = structure0 {
                    eventsDecoded0?.append(structure0)
                }
            }
        }
        events = eventsDecoded0
        let nextForwardTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextForwardToken)
        nextForwardToken = nextForwardTokenDecoded
        let nextBackwardTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextBackwardToken)
        nextBackwardToken = nextBackwardTokenDecoded
    }
}
