// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLogRecordOutputResponseBody: Swift.Equatable {
    let logRecord: [Swift.String:Swift.String]?
}

extension GetLogRecordOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case logRecord
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logRecordContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .logRecord)
        var logRecordDecoded0: [Swift.String:Swift.String]? = nil
        if let logRecordContainer = logRecordContainer {
            logRecordDecoded0 = [Swift.String:Swift.String]()
            for (key0, value0) in logRecordContainer {
                if let value0 = value0 {
                    logRecordDecoded0?[key0] = value0
                }
            }
        }
        logRecord = logRecordDecoded0
    }
}
