// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchLogsClientTypes.RejectedLogEventsInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case expiredLogEventEndIndex
        case tooNewLogEventStartIndex
        case tooOldLogEventEndIndex
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let expiredLogEventEndIndex = self.expiredLogEventEndIndex {
            try encodeContainer.encode(expiredLogEventEndIndex, forKey: .expiredLogEventEndIndex)
        }
        if let tooNewLogEventStartIndex = self.tooNewLogEventStartIndex {
            try encodeContainer.encode(tooNewLogEventStartIndex, forKey: .tooNewLogEventStartIndex)
        }
        if let tooOldLogEventEndIndex = self.tooOldLogEventEndIndex {
            try encodeContainer.encode(tooOldLogEventEndIndex, forKey: .tooOldLogEventEndIndex)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tooNewLogEventStartIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .tooNewLogEventStartIndex)
        tooNewLogEventStartIndex = tooNewLogEventStartIndexDecoded
        let tooOldLogEventEndIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .tooOldLogEventEndIndex)
        tooOldLogEventEndIndex = tooOldLogEventEndIndexDecoded
        let expiredLogEventEndIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .expiredLogEventEndIndex)
        expiredLogEventEndIndex = expiredLogEventEndIndexDecoded
    }
}
