// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateExportTaskInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destination
        case destinationPrefix
        case from
        case logGroupName
        case logStreamNamePrefix
        case taskName
        case to
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destination = self.destination {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if let destinationPrefix = self.destinationPrefix {
            try encodeContainer.encode(destinationPrefix, forKey: .destinationPrefix)
        }
        if let from = self.from {
            try encodeContainer.encode(from, forKey: .from)
        }
        if let logGroupName = self.logGroupName {
            try encodeContainer.encode(logGroupName, forKey: .logGroupName)
        }
        if let logStreamNamePrefix = self.logStreamNamePrefix {
            try encodeContainer.encode(logStreamNamePrefix, forKey: .logStreamNamePrefix)
        }
        if let taskName = self.taskName {
            try encodeContainer.encode(taskName, forKey: .taskName)
        }
        if let to = self.to {
            try encodeContainer.encode(to, forKey: .to)
        }
    }
}
