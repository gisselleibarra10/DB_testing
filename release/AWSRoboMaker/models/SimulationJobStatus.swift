// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RoboMakerClientTypes {
    public enum SimulationJobStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case canceled
        case completed
        case failed
        case pending
        case preparing
        case restarting
        case running
        case runningfailed
        case terminated
        case terminating
        case sdkUnknown(Swift.String)

        public static var allCases: [SimulationJobStatus] {
            return [
                .canceled,
                .completed,
                .failed,
                .pending,
                .preparing,
                .restarting,
                .running,
                .runningfailed,
                .terminated,
                .terminating,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .canceled: return "Canceled"
            case .completed: return "Completed"
            case .failed: return "Failed"
            case .pending: return "Pending"
            case .preparing: return "Preparing"
            case .restarting: return "Restarting"
            case .running: return "Running"
            case .runningfailed: return "RunningFailed"
            case .terminated: return "Terminated"
            case .terminating: return "Terminating"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SimulationJobStatus(rawValue: rawValue) ?? SimulationJobStatus.sdkUnknown(rawValue)
        }
    }
}
