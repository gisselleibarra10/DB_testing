// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SyncDeploymentJobOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let fleet: Swift.String?
    let status: RoboMakerClientTypes.DeploymentStatus?
    let deploymentConfig: RoboMakerClientTypes.DeploymentConfig?
    let deploymentApplicationConfigs: [RoboMakerClientTypes.DeploymentApplicationConfig]?
    let failureReason: Swift.String?
    let failureCode: RoboMakerClientTypes.DeploymentJobErrorCode?
    let createdAt: ClientRuntime.Date?
}

extension SyncDeploymentJobOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case createdAt
        case deploymentApplicationConfigs
        case deploymentConfig
        case failureCode
        case failureReason
        case fleet
        case status
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let fleetDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fleet)
        fleet = fleetDecoded
        let statusDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.DeploymentStatus.self, forKey: .status)
        status = statusDecoded
        let deploymentConfigDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.DeploymentConfig.self, forKey: .deploymentConfig)
        deploymentConfig = deploymentConfigDecoded
        let deploymentApplicationConfigsContainer = try containerValues.decodeIfPresent([RoboMakerClientTypes.DeploymentApplicationConfig?].self, forKey: .deploymentApplicationConfigs)
        var deploymentApplicationConfigsDecoded0:[RoboMakerClientTypes.DeploymentApplicationConfig]? = nil
        if let deploymentApplicationConfigsContainer = deploymentApplicationConfigsContainer {
            deploymentApplicationConfigsDecoded0 = [RoboMakerClientTypes.DeploymentApplicationConfig]()
            for structure0 in deploymentApplicationConfigsContainer {
                if let structure0 = structure0 {
                    deploymentApplicationConfigsDecoded0?.append(structure0)
                }
            }
        }
        deploymentApplicationConfigs = deploymentApplicationConfigsDecoded0
        let failureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let failureCodeDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.DeploymentJobErrorCode.self, forKey: .failureCode)
        failureCode = failureCodeDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
    }
}
