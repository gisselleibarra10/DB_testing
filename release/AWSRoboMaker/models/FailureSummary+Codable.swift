// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RoboMakerClientTypes.FailureSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failures
        case totalFailureCount
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let failures = failures {
            var failuresContainer = encodeContainer.nestedUnkeyedContainer(forKey: .failures)
            for worldfailures0 in failures {
                try failuresContainer.encode(worldfailures0)
            }
        }
        if totalFailureCount != 0 {
            try encodeContainer.encode(totalFailureCount, forKey: .totalFailureCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalFailureCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalFailureCount) ?? 0
        totalFailureCount = totalFailureCountDecoded
        let failuresContainer = try containerValues.decodeIfPresent([RoboMakerClientTypes.WorldFailure?].self, forKey: .failures)
        var failuresDecoded0:[RoboMakerClientTypes.WorldFailure]? = nil
        if let failuresContainer = failuresContainer {
            failuresDecoded0 = [RoboMakerClientTypes.WorldFailure]()
            for structure0 in failuresContainer {
                if let structure0 = structure0 {
                    failuresDecoded0?.append(structure0)
                }
            }
        }
        failures = failuresDecoded0
    }
}
