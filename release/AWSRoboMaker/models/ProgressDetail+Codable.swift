// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RoboMakerClientTypes.ProgressDetail: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case currentProgress
        case estimatedTimeRemainingSeconds
        case percentDone
        case targetResource
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let currentProgress = self.currentProgress {
            try encodeContainer.encode(currentProgress.rawValue, forKey: .currentProgress)
        }
        if let estimatedTimeRemainingSeconds = self.estimatedTimeRemainingSeconds {
            try encodeContainer.encode(estimatedTimeRemainingSeconds, forKey: .estimatedTimeRemainingSeconds)
        }
        if let percentDone = self.percentDone {
            try encodeContainer.encode(percentDone, forKey: .percentDone)
        }
        if let targetResource = self.targetResource {
            try encodeContainer.encode(targetResource, forKey: .targetResource)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let currentProgressDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.RobotDeploymentStep.self, forKey: .currentProgress)
        currentProgress = currentProgressDecoded
        let percentDoneDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .percentDone)
        percentDone = percentDoneDecoded
        let estimatedTimeRemainingSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .estimatedTimeRemainingSeconds)
        estimatedTimeRemainingSeconds = estimatedTimeRemainingSecondsDecoded
        let targetResourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetResource)
        targetResource = targetResourceDecoded
    }
}
