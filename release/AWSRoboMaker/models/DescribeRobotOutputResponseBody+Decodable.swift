// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRobotOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let name: Swift.String?
    let fleetArn: Swift.String?
    let status: RoboMakerClientTypes.RobotStatus?
    let greengrassGroupId: Swift.String?
    let createdAt: ClientRuntime.Date?
    let architecture: RoboMakerClientTypes.Architecture?
    let lastDeploymentJob: Swift.String?
    let lastDeploymentTime: ClientRuntime.Date?
    let tags: [Swift.String:Swift.String]?
}

extension DescribeRobotOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case architecture
        case arn
        case createdAt
        case fleetArn
        case greengrassGroupId
        case lastDeploymentJob
        case lastDeploymentTime
        case name
        case status
        case tags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let fleetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fleetArn)
        fleetArn = fleetArnDecoded
        let statusDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.RobotStatus.self, forKey: .status)
        status = statusDecoded
        let greengrassGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .greengrassGroupId)
        greengrassGroupId = greengrassGroupIdDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let architectureDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.Architecture.self, forKey: .architecture)
        architecture = architectureDecoded
        let lastDeploymentJobDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastDeploymentJob)
        lastDeploymentJob = lastDeploymentJobDecoded
        let lastDeploymentTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastDeploymentTime)
        lastDeploymentTime = lastDeploymentTimeDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
