// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSimulationApplicationsOutputResponseBody: Swift.Equatable {
    let simulationApplicationSummaries: [RoboMakerClientTypes.SimulationApplicationSummary]?
    let nextToken: Swift.String?
}

extension ListSimulationApplicationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case simulationApplicationSummaries
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let simulationApplicationSummariesContainer = try containerValues.decodeIfPresent([RoboMakerClientTypes.SimulationApplicationSummary?].self, forKey: .simulationApplicationSummaries)
        var simulationApplicationSummariesDecoded0:[RoboMakerClientTypes.SimulationApplicationSummary]? = nil
        if let simulationApplicationSummariesContainer = simulationApplicationSummariesContainer {
            simulationApplicationSummariesDecoded0 = [RoboMakerClientTypes.SimulationApplicationSummary]()
            for structure0 in simulationApplicationSummariesContainer {
                if let structure0 = structure0 {
                    simulationApplicationSummariesDecoded0?.append(structure0)
                }
            }
        }
        simulationApplicationSummaries = simulationApplicationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
