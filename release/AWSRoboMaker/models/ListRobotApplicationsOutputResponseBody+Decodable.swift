// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRobotApplicationsOutputResponseBody: Swift.Equatable {
    let robotApplicationSummaries: [RoboMakerClientTypes.RobotApplicationSummary]?
    let nextToken: Swift.String?
}

extension ListRobotApplicationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case robotApplicationSummaries
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let robotApplicationSummariesContainer = try containerValues.decodeIfPresent([RoboMakerClientTypes.RobotApplicationSummary?].self, forKey: .robotApplicationSummaries)
        var robotApplicationSummariesDecoded0:[RoboMakerClientTypes.RobotApplicationSummary]? = nil
        if let robotApplicationSummariesContainer = robotApplicationSummariesContainer {
            robotApplicationSummariesDecoded0 = [RoboMakerClientTypes.RobotApplicationSummary]()
            for structure0 in robotApplicationSummariesContainer {
                if let structure0 = structure0 {
                    robotApplicationSummariesDecoded0?.append(structure0)
                }
            }
        }
        robotApplicationSummaries = robotApplicationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
