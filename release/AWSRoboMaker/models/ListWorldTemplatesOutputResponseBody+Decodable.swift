// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorldTemplatesOutputResponseBody: Swift.Equatable {
    let templateSummaries: [RoboMakerClientTypes.TemplateSummary]?
    let nextToken: Swift.String?
}

extension ListWorldTemplatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case templateSummaries
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let templateSummariesContainer = try containerValues.decodeIfPresent([RoboMakerClientTypes.TemplateSummary?].self, forKey: .templateSummaries)
        var templateSummariesDecoded0:[RoboMakerClientTypes.TemplateSummary]? = nil
        if let templateSummariesContainer = templateSummariesContainer {
            templateSummariesDecoded0 = [RoboMakerClientTypes.TemplateSummary]()
            for structure0 in templateSummariesContainer {
                if let structure0 = structure0 {
                    templateSummariesDecoded0?.append(structure0)
                }
            }
        }
        templateSummaries = templateSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
