// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateSimulationApplicationVersionOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let name: Swift.String?
    let version: Swift.String?
    let sources: [RoboMakerClientTypes.Source]?
    let simulationSoftwareSuite: RoboMakerClientTypes.SimulationSoftwareSuite?
    let robotSoftwareSuite: RoboMakerClientTypes.RobotSoftwareSuite?
    let renderingEngine: RoboMakerClientTypes.RenderingEngine?
    let lastUpdatedAt: ClientRuntime.Date?
    let revisionId: Swift.String?
    let environment: RoboMakerClientTypes.Environment?
}

extension CreateSimulationApplicationVersionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case environment
        case lastUpdatedAt
        case name
        case renderingEngine
        case revisionId
        case robotSoftwareSuite
        case simulationSoftwareSuite
        case sources
        case version
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
        let sourcesContainer = try containerValues.decodeIfPresent([RoboMakerClientTypes.Source?].self, forKey: .sources)
        var sourcesDecoded0:[RoboMakerClientTypes.Source]? = nil
        if let sourcesContainer = sourcesContainer {
            sourcesDecoded0 = [RoboMakerClientTypes.Source]()
            for structure0 in sourcesContainer {
                if let structure0 = structure0 {
                    sourcesDecoded0?.append(structure0)
                }
            }
        }
        sources = sourcesDecoded0
        let simulationSoftwareSuiteDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.SimulationSoftwareSuite.self, forKey: .simulationSoftwareSuite)
        simulationSoftwareSuite = simulationSoftwareSuiteDecoded
        let robotSoftwareSuiteDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.RobotSoftwareSuite.self, forKey: .robotSoftwareSuite)
        robotSoftwareSuite = robotSoftwareSuiteDecoded
        let renderingEngineDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.RenderingEngine.self, forKey: .renderingEngine)
        renderingEngine = renderingEngineDecoded
        let lastUpdatedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedAt)
        lastUpdatedAt = lastUpdatedAtDecoded
        let revisionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .revisionId)
        revisionId = revisionIdDecoded
        let environmentDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.Environment.self, forKey: .environment)
        environment = environmentDecoded
    }
}
