// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RoboMakerClientTypes {
    public enum RobotStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case available
        case deploying
        case failed
        case insync
        case noresponse
        case pendingnewdeployment
        case registered
        case sdkUnknown(Swift.String)

        public static var allCases: [RobotStatus] {
            return [
                .available,
                .deploying,
                .failed,
                .insync,
                .noresponse,
                .pendingnewdeployment,
                .registered,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .available: return "Available"
            case .deploying: return "Deploying"
            case .failed: return "Failed"
            case .insync: return "InSync"
            case .noresponse: return "NoResponse"
            case .pendingnewdeployment: return "PendingNewDeployment"
            case .registered: return "Registered"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = RobotStatus(rawValue: rawValue) ?? RobotStatus.sdkUnknown(rawValue)
        }
    }
}
