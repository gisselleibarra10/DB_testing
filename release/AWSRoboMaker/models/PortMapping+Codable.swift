// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RoboMakerClientTypes.PortMapping: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationPort
        case enableOnPublicIp
        case jobPort
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if applicationPort != 0 {
            try encodeContainer.encode(applicationPort, forKey: .applicationPort)
        }
        if enableOnPublicIp != false {
            try encodeContainer.encode(enableOnPublicIp, forKey: .enableOnPublicIp)
        }
        if jobPort != 0 {
            try encodeContainer.encode(jobPort, forKey: .jobPort)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobPortDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .jobPort) ?? 0
        jobPort = jobPortDecoded
        let applicationPortDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .applicationPort) ?? 0
        applicationPort = applicationPortDecoded
        let enableOnPublicIpDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableOnPublicIp) ?? false
        enableOnPublicIp = enableOnPublicIpDecoded
    }
}
