// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RoboMakerClientTypes {
    public enum SimulationJobBatchStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case canceled
        case canceling
        case completed
        case completing
        case failed
        case inprogress
        case pending
        case timedout
        case timingout
        case sdkUnknown(Swift.String)

        public static var allCases: [SimulationJobBatchStatus] {
            return [
                .canceled,
                .canceling,
                .completed,
                .completing,
                .failed,
                .inprogress,
                .pending,
                .timedout,
                .timingout,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .canceled: return "Canceled"
            case .canceling: return "Canceling"
            case .completed: return "Completed"
            case .completing: return "Completing"
            case .failed: return "Failed"
            case .inprogress: return "InProgress"
            case .pending: return "Pending"
            case .timedout: return "TimedOut"
            case .timingout: return "TimingOut"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SimulationJobBatchStatus(rawValue: rawValue) ?? SimulationJobBatchStatus.sdkUnknown(rawValue)
        }
    }
}
