// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RoboMakerClientTypes {
    /// Information about a simulation application configuration.
    public struct SimulationApplicationConfig: Swift.Equatable {
        /// The application information for the simulation application.
        /// This member is required.
        public var application: Swift.String?
        /// The version of the simulation application.
        public var applicationVersion: Swift.String?
        /// The launch configuration for the simulation application.
        /// This member is required.
        public var launchConfig: RoboMakerClientTypes.LaunchConfig?
        /// Information about tools configured for the simulation application.
        public var tools: [RoboMakerClientTypes.Tool]?
        /// Information about upload configurations for the simulation application.
        public var uploadConfigurations: [RoboMakerClientTypes.UploadConfiguration]?
        /// A Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False. This API is no longer supported and will throw an error if used.
        @available(*, deprecated, message: "AWS RoboMaker is ending support for ROS software suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html.")
        public var useDefaultTools: Swift.Bool?
        /// A Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded. If you set this value, you must specify an outputLocation. This API is no longer supported and will throw an error if used.
        @available(*, deprecated, message: "AWS RoboMaker is ending support for ROS software suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html.")
        public var useDefaultUploadConfigurations: Swift.Bool?
        /// A list of world configurations.
        public var worldConfigs: [RoboMakerClientTypes.WorldConfig]?

        public init (
            application: Swift.String? = nil,
            applicationVersion: Swift.String? = nil,
            launchConfig: RoboMakerClientTypes.LaunchConfig? = nil,
            tools: [RoboMakerClientTypes.Tool]? = nil,
            uploadConfigurations: [RoboMakerClientTypes.UploadConfiguration]? = nil,
            useDefaultTools: Swift.Bool? = nil,
            useDefaultUploadConfigurations: Swift.Bool? = nil,
            worldConfigs: [RoboMakerClientTypes.WorldConfig]? = nil
        )
        {
            self.application = application
            self.applicationVersion = applicationVersion
            self.launchConfig = launchConfig
            self.tools = tools
            self.uploadConfigurations = uploadConfigurations
            self.useDefaultTools = useDefaultTools
            self.useDefaultUploadConfigurations = useDefaultUploadConfigurations
            self.worldConfigs = worldConfigs
        }
    }

}
