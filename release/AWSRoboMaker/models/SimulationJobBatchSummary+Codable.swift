// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RoboMakerClientTypes.SimulationJobBatchSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case createdAt
        case createdRequestCount
        case failedRequestCount
        case lastUpdatedAt
        case pendingRequestCount
        case status
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let createdAt = self.createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if createdRequestCount != 0 {
            try encodeContainer.encode(createdRequestCount, forKey: .createdRequestCount)
        }
        if failedRequestCount != 0 {
            try encodeContainer.encode(failedRequestCount, forKey: .failedRequestCount)
        }
        if let lastUpdatedAt = self.lastUpdatedAt {
            try encodeContainer.encode(lastUpdatedAt.timeIntervalSince1970, forKey: .lastUpdatedAt)
        }
        if pendingRequestCount != 0 {
            try encodeContainer.encode(pendingRequestCount, forKey: .pendingRequestCount)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let lastUpdatedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedAt)
        lastUpdatedAt = lastUpdatedAtDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let statusDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.SimulationJobBatchStatus.self, forKey: .status)
        status = statusDecoded
        let failedRequestCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failedRequestCount) ?? 0
        failedRequestCount = failedRequestCountDecoded
        let pendingRequestCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .pendingRequestCount) ?? 0
        pendingRequestCount = pendingRequestCountDecoded
        let createdRequestCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .createdRequestCount) ?? 0
        createdRequestCount = createdRequestCountDecoded
    }
}
