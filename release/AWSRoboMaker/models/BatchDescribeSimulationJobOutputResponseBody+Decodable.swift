// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDescribeSimulationJobOutputResponseBody: Swift.Equatable {
    let jobs: [RoboMakerClientTypes.SimulationJob]?
    let unprocessedJobs: [Swift.String]?
}

extension BatchDescribeSimulationJobOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jobs
        case unprocessedJobs
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobsContainer = try containerValues.decodeIfPresent([RoboMakerClientTypes.SimulationJob?].self, forKey: .jobs)
        var jobsDecoded0:[RoboMakerClientTypes.SimulationJob]? = nil
        if let jobsContainer = jobsContainer {
            jobsDecoded0 = [RoboMakerClientTypes.SimulationJob]()
            for structure0 in jobsContainer {
                if let structure0 = structure0 {
                    jobsDecoded0?.append(structure0)
                }
            }
        }
        jobs = jobsDecoded0
        let unprocessedJobsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .unprocessedJobs)
        var unprocessedJobsDecoded0:[Swift.String]? = nil
        if let unprocessedJobsContainer = unprocessedJobsContainer {
            unprocessedJobsDecoded0 = [Swift.String]()
            for string0 in unprocessedJobsContainer {
                if let string0 = string0 {
                    unprocessedJobsDecoded0?.append(string0)
                }
            }
        }
        unprocessedJobs = unprocessedJobsDecoded0
    }
}
