// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RoboMakerClientTypes.Compute: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case computeType
        case gpuUnitLimit
        case simulationUnitLimit
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let computeType = self.computeType {
            try encodeContainer.encode(computeType.rawValue, forKey: .computeType)
        }
        if let gpuUnitLimit = self.gpuUnitLimit {
            try encodeContainer.encode(gpuUnitLimit, forKey: .gpuUnitLimit)
        }
        if let simulationUnitLimit = self.simulationUnitLimit {
            try encodeContainer.encode(simulationUnitLimit, forKey: .simulationUnitLimit)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let simulationUnitLimitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .simulationUnitLimit)
        simulationUnitLimit = simulationUnitLimitDecoded
        let computeTypeDecoded = try containerValues.decodeIfPresent(RoboMakerClientTypes.ComputeType.self, forKey: .computeType)
        computeType = computeTypeDecoded
        let gpuUnitLimitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .gpuUnitLimit)
        gpuUnitLimit = gpuUnitLimitDecoded
    }
}
