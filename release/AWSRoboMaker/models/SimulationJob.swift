// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RoboMakerClientTypes {
    /// Information about a simulation job.
    public struct SimulationJob: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the simulation job.
        public var arn: Swift.String?
        /// A unique identifier for this SimulationJob request.
        public var clientRequestToken: Swift.String?
        /// Compute information for the simulation job
        public var compute: RoboMakerClientTypes.ComputeResponse?
        /// The data sources for the simulation job.
        public var dataSources: [RoboMakerClientTypes.DataSource]?
        /// The failure behavior the simulation job. Continue Leaves the host running for its maximum timeout duration after a 4XX error code. Fail Stop the simulation job and terminate the instance.
        public var failureBehavior: RoboMakerClientTypes.FailureBehavior?
        /// The failure code of the simulation job if it failed.
        public var failureCode: RoboMakerClientTypes.SimulationJobErrorCode?
        /// The reason why the simulation job failed.
        public var failureReason: Swift.String?
        /// The IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job.
        public var iamRole: Swift.String?
        /// The time, in milliseconds since the epoch, when the simulation job was last started.
        public var lastStartedAt: ClientRuntime.Date?
        /// The time, in milliseconds since the epoch, when the simulation job was last updated.
        public var lastUpdatedAt: ClientRuntime.Date?
        /// The logging configuration.
        public var loggingConfig: RoboMakerClientTypes.LoggingConfig?
        /// The maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.
        public var maxJobDurationInSeconds: Swift.Int
        /// The name of the simulation job.
        public var name: Swift.String?
        /// Information about a network interface.
        public var networkInterface: RoboMakerClientTypes.NetworkInterface?
        /// Location for output files generated by the simulation job.
        public var outputLocation: RoboMakerClientTypes.OutputLocation?
        /// A list of robot applications.
        public var robotApplications: [RoboMakerClientTypes.RobotApplicationConfig]?
        /// A list of simulation applications.
        public var simulationApplications: [RoboMakerClientTypes.SimulationApplicationConfig]?
        /// The simulation job execution duration in milliseconds.
        public var simulationTimeMillis: Swift.Int
        /// Status of the simulation job.
        public var status: RoboMakerClientTypes.SimulationJobStatus?
        /// A map that contains tag keys and tag values that are attached to the simulation job.
        public var tags: [Swift.String:Swift.String]?
        /// VPC configuration information.
        public var vpcConfig: RoboMakerClientTypes.VPCConfigResponse?

        public init (
            arn: Swift.String? = nil,
            clientRequestToken: Swift.String? = nil,
            compute: RoboMakerClientTypes.ComputeResponse? = nil,
            dataSources: [RoboMakerClientTypes.DataSource]? = nil,
            failureBehavior: RoboMakerClientTypes.FailureBehavior? = nil,
            failureCode: RoboMakerClientTypes.SimulationJobErrorCode? = nil,
            failureReason: Swift.String? = nil,
            iamRole: Swift.String? = nil,
            lastStartedAt: ClientRuntime.Date? = nil,
            lastUpdatedAt: ClientRuntime.Date? = nil,
            loggingConfig: RoboMakerClientTypes.LoggingConfig? = nil,
            maxJobDurationInSeconds: Swift.Int = 0,
            name: Swift.String? = nil,
            networkInterface: RoboMakerClientTypes.NetworkInterface? = nil,
            outputLocation: RoboMakerClientTypes.OutputLocation? = nil,
            robotApplications: [RoboMakerClientTypes.RobotApplicationConfig]? = nil,
            simulationApplications: [RoboMakerClientTypes.SimulationApplicationConfig]? = nil,
            simulationTimeMillis: Swift.Int = 0,
            status: RoboMakerClientTypes.SimulationJobStatus? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            vpcConfig: RoboMakerClientTypes.VPCConfigResponse? = nil
        )
        {
            self.arn = arn
            self.clientRequestToken = clientRequestToken
            self.compute = compute
            self.dataSources = dataSources
            self.failureBehavior = failureBehavior
            self.failureCode = failureCode
            self.failureReason = failureReason
            self.iamRole = iamRole
            self.lastStartedAt = lastStartedAt
            self.lastUpdatedAt = lastUpdatedAt
            self.loggingConfig = loggingConfig
            self.maxJobDurationInSeconds = maxJobDurationInSeconds
            self.name = name
            self.networkInterface = networkInterface
            self.outputLocation = outputLocation
            self.robotApplications = robotApplications
            self.simulationApplications = simulationApplications
            self.simulationTimeMillis = simulationTimeMillis
            self.status = status
            self.tags = tags
            self.vpcConfig = vpcConfig
        }
    }

}
