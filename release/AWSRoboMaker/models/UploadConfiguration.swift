// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RoboMakerClientTypes {
    /// Provides upload configuration information. Files are uploaded from the simulation job to a location you specify.
    public struct UploadConfiguration: Swift.Equatable {
        /// A prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path. For example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test, your files will be uploaded to s3://my-bucket///robot-test.
        /// This member is required.
        public var name: Swift.String?
        /// Specifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk. For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see [Glob Library](https://github.com/gobwas/glob).
        /// This member is required.
        public var path: Swift.String?
        /// Specifies when to upload the files: UPLOAD_ON_TERMINATE Matching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped. If there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made. UPLOAD_ROLLING_AUTO_REMOVE Matching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.
        /// This member is required.
        public var uploadBehavior: RoboMakerClientTypes.UploadBehavior?

        public init (
            name: Swift.String? = nil,
            path: Swift.String? = nil,
            uploadBehavior: RoboMakerClientTypes.UploadBehavior? = nil
        )
        {
            self.name = name
            self.path = path
            self.uploadBehavior = uploadBehavior
        }
    }

}
