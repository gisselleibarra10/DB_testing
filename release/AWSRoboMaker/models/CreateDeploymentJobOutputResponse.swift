// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

@available(*, deprecated, message: "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.")
public struct CreateDeploymentJobOutputResponse: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of the deployment job.
    public var arn: Swift.String?
    /// The time, in milliseconds since the epoch, when the fleet was created.
    public var createdAt: ClientRuntime.Date?
    /// The deployment application configuration.
    public var deploymentApplicationConfigs: [RoboMakerClientTypes.DeploymentApplicationConfig]?
    /// The deployment configuration.
    public var deploymentConfig: RoboMakerClientTypes.DeploymentConfig?
    /// The failure code of the simulation job if it failed: BadPermissionError AWS Greengrass requires a service-level role permission to access other services. The role must include the [AWSGreengrassResourceAccessRolePolicy] managed policy(https://console.aws.amazon.com/iam/home?#/policies/arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy$jsonEditor). ExtractingBundleFailure The robot application could not be extracted from the bundle. FailureThresholdBreached The percentage of robots that could not be updated exceeded the percentage set for the deployment. GreengrassDeploymentFailed The robot application could not be deployed to the robot. GreengrassGroupVersionDoesNotExist The AWS Greengrass group or version associated with a robot is missing. InternalServerError An internal error has occurred. Retry your request, but if the problem persists, contact us with details. MissingRobotApplicationArchitecture The robot application does not have a source that matches the architecture of the robot. MissingRobotDeploymentResource One or more of the resources specified for the robot application are missing. For example, does the robot application have the correct launch package and launch file? PostLaunchFileFailure The post-launch script failed. PreLaunchFileFailure The pre-launch script failed. ResourceNotFound One or more deployment resources are missing. For example, do robot application source bundles still exist? RobotDeploymentNoResponse There is no response from the robot. It might not be powered on or connected to the internet.
    public var failureCode: RoboMakerClientTypes.DeploymentJobErrorCode?
    /// The failure reason of the deployment job if it failed.
    public var failureReason: Swift.String?
    /// The target fleet for the deployment job.
    public var fleet: Swift.String?
    /// The status of the deployment job.
    public var status: RoboMakerClientTypes.DeploymentStatus?
    /// The list of all tags added to the deployment job.
    public var tags: [Swift.String:Swift.String]?

    public init (
        arn: Swift.String? = nil,
        createdAt: ClientRuntime.Date? = nil,
        deploymentApplicationConfigs: [RoboMakerClientTypes.DeploymentApplicationConfig]? = nil,
        deploymentConfig: RoboMakerClientTypes.DeploymentConfig? = nil,
        failureCode: RoboMakerClientTypes.DeploymentJobErrorCode? = nil,
        failureReason: Swift.String? = nil,
        fleet: Swift.String? = nil,
        status: RoboMakerClientTypes.DeploymentStatus? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.arn = arn
        self.createdAt = createdAt
        self.deploymentApplicationConfigs = deploymentApplicationConfigs
        self.deploymentConfig = deploymentConfig
        self.failureCode = failureCode
        self.failureReason = failureReason
        self.fleet = fleet
        self.status = status
        self.tags = tags
    }
}
