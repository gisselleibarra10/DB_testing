// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateExperimentInput: Swift.Equatable {
    /// An optional description of the experiment.
    public var description: Swift.String?
    /// The name of the experiment to update.
    /// This member is required.
    public var experiment: Swift.String?
    /// An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal.
    public var metricGoals: [EvidentlyClientTypes.MetricGoalConfig]?
    /// A structure that contains the configuration of which variation o use as the "control" version. The "control" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
    public var onlineAbConfig: EvidentlyClientTypes.OnlineAbConfig?
    /// The name or ARN of the project that contains the experiment that you want to update.
    /// This member is required.
    public var project: Swift.String?
    /// When Evidently assigns a particular user session to an experiment, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and randomizationSalt. If you omit randomizationSalt, Evidently uses the experiment name as the randomizationSalt.
    public var randomizationSalt: Swift.String?
    /// Removes a segment from being used in an experiment. You can't use this parameter if the experiment is currently running.
    public var removeSegment: Swift.Bool
    /// The portion of the available audience that you want to allocate to this experiment, in thousandths of a percent. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature. This is represented in thousandths of a percent. For example, specify 20,000 to allocate 20% of the available audience.
    public var samplingRate: Swift.Int?
    /// Adds an audience segment to an experiment. When a segment is used in an experiment, only user sessions that match the segment pattern are used in the experiment. You can't use this parameter if the experiment is currently running.
    public var segment: Swift.String?
    /// An array of structures that define the variations being tested in the experiment.
    public var treatments: [EvidentlyClientTypes.TreatmentConfig]?

    public init (
        description: Swift.String? = nil,
        experiment: Swift.String? = nil,
        metricGoals: [EvidentlyClientTypes.MetricGoalConfig]? = nil,
        onlineAbConfig: EvidentlyClientTypes.OnlineAbConfig? = nil,
        project: Swift.String? = nil,
        randomizationSalt: Swift.String? = nil,
        removeSegment: Swift.Bool = false,
        samplingRate: Swift.Int? = nil,
        segment: Swift.String? = nil,
        treatments: [EvidentlyClientTypes.TreatmentConfig]? = nil
    )
    {
        self.description = description
        self.experiment = experiment
        self.metricGoals = metricGoals
        self.onlineAbConfig = onlineAbConfig
        self.project = project
        self.randomizationSalt = randomizationSalt
        self.removeSegment = removeSegment
        self.samplingRate = samplingRate
        self.segment = segment
        self.treatments = treatments
    }
}
