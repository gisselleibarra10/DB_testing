// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StopExperimentInputBody: Swift.Equatable {
    let desiredState: EvidentlyClientTypes.ExperimentStopDesiredState?
    let reason: Swift.String?
}

extension StopExperimentInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case desiredState
        case reason
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let desiredStateDecoded = try containerValues.decodeIfPresent(EvidentlyClientTypes.ExperimentStopDesiredState.self, forKey: .desiredState)
        desiredState = desiredStateDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reason)
        reason = reasonDecoded
    }
}
