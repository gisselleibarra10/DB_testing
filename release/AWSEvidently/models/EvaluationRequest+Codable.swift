// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EvidentlyClientTypes.EvaluationRequest: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entityId
        case evaluationContext
        case feature
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let entityId = self.entityId {
            try encodeContainer.encode(entityId, forKey: .entityId)
        }
        if let evaluationContext = self.evaluationContext {
            try encodeContainer.encode(evaluationContext, forKey: .evaluationContext)
        }
        if let feature = self.feature {
            try encodeContainer.encode(feature, forKey: .feature)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let featureDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .feature)
        feature = featureDecoded
        let entityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .entityId)
        entityId = entityIdDecoded
        let evaluationContextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .evaluationContext)
        evaluationContext = evaluationContextDecoded
    }
}
