// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSegmentReferencesOutputResponseBody: Swift.Equatable {
    let referencedBy: [EvidentlyClientTypes.RefResource]?
    let nextToken: Swift.String?
}

extension ListSegmentReferencesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case referencedBy
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let referencedByContainer = try containerValues.decodeIfPresent([EvidentlyClientTypes.RefResource?].self, forKey: .referencedBy)
        var referencedByDecoded0:[EvidentlyClientTypes.RefResource]? = nil
        if let referencedByContainer = referencedByContainer {
            referencedByDecoded0 = [EvidentlyClientTypes.RefResource]()
            for structure0 in referencedByContainer {
                if let structure0 = structure0 {
                    referencedByDecoded0?.append(structure0)
                }
            }
        }
        referencedBy = referencedByDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
