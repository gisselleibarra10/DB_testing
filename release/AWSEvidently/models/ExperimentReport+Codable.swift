// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EvidentlyClientTypes.ExperimentReport: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case content
        case metricName
        case reportName
        case treatmentName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let content = self.content {
            try encodeContainer.encode(content, forKey: .content)
        }
        if let metricName = self.metricName {
            try encodeContainer.encode(metricName, forKey: .metricName)
        }
        if let reportName = self.reportName {
            try encodeContainer.encode(reportName.rawValue, forKey: .reportName)
        }
        if let treatmentName = self.treatmentName {
            try encodeContainer.encode(treatmentName, forKey: .treatmentName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metricName)
        metricName = metricNameDecoded
        let treatmentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .treatmentName)
        treatmentName = treatmentNameDecoded
        let reportNameDecoded = try containerValues.decodeIfPresent(EvidentlyClientTypes.ExperimentReportName.self, forKey: .reportName)
        reportName = reportNameDecoded
        let contentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .content)
        content = contentDecoded
    }
}
