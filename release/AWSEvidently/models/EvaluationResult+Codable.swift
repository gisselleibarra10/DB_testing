// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EvidentlyClientTypes.EvaluationResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case details
        case entityId
        case feature
        case project
        case reason
        case value
        case variation
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let details = self.details {
            try encodeContainer.encode(details, forKey: .details)
        }
        if let entityId = self.entityId {
            try encodeContainer.encode(entityId, forKey: .entityId)
        }
        if let feature = self.feature {
            try encodeContainer.encode(feature, forKey: .feature)
        }
        if let project = self.project {
            try encodeContainer.encode(project, forKey: .project)
        }
        if let reason = self.reason {
            try encodeContainer.encode(reason, forKey: .reason)
        }
        if let value = self.value {
            try encodeContainer.encode(value, forKey: .value)
        }
        if let variation = self.variation {
            try encodeContainer.encode(variation, forKey: .variation)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .project)
        project = projectDecoded
        let featureDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .feature)
        feature = featureDecoded
        let variationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .variation)
        variation = variationDecoded
        let valueDecoded = try containerValues.decodeIfPresent(EvidentlyClientTypes.VariableValue.self, forKey: .value)
        value = valueDecoded
        let entityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .entityId)
        entityId = entityIdDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reason)
        reason = reasonDecoded
        let detailsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .details)
        details = detailsDecoded
    }
}
