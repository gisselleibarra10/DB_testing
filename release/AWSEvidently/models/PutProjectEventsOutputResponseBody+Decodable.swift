// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutProjectEventsOutputResponseBody: Swift.Equatable {
    let failedEventCount: Swift.Int?
    let eventResults: [EvidentlyClientTypes.PutProjectEventsResultEntry]?
}

extension PutProjectEventsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventResults
        case failedEventCount
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let failedEventCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failedEventCount)
        failedEventCount = failedEventCountDecoded
        let eventResultsContainer = try containerValues.decodeIfPresent([EvidentlyClientTypes.PutProjectEventsResultEntry?].self, forKey: .eventResults)
        var eventResultsDecoded0:[EvidentlyClientTypes.PutProjectEventsResultEntry]? = nil
        if let eventResultsContainer = eventResultsContainer {
            eventResultsDecoded0 = [EvidentlyClientTypes.PutProjectEventsResultEntry]()
            for structure0 in eventResultsContainer {
                if let structure0 = structure0 {
                    eventResultsDecoded0?.append(structure0)
                }
            }
        }
        eventResults = eventResultsDecoded0
    }
}
