// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EvidentlyClientTypes {
    /// This structure displays the results of one feature evaluation assignment to one user session.
    public struct EvaluationResult: Swift.Equatable {
        /// If this user was assigned to a launch or experiment, this field lists the launch or experiment name.
        public var details: Swift.String?
        /// An internal ID that represents a unique user session of the application.
        /// This member is required.
        public var entityId: Swift.String?
        /// The name of the feature being evaluated.
        /// This member is required.
        public var feature: Swift.String?
        /// The name or ARN of the project that contains the feature being evaluated.
        public var project: Swift.String?
        /// Specifies the reason that the user session was assigned this variation. Possible values include DEFAULT, meaning the user was served the default variation; LAUNCH_RULE_MATCH, if the user session was enrolled in a launch; or EXPERIMENT_RULE_MATCH, if the user session was enrolled in an experiment.
        public var reason: Swift.String?
        /// The value assigned to this variation to differentiate it from the other variations of this feature.
        public var value: EvidentlyClientTypes.VariableValue?
        /// The name of the variation that was served to the user session.
        public var variation: Swift.String?

        public init (
            details: Swift.String? = nil,
            entityId: Swift.String? = nil,
            feature: Swift.String? = nil,
            project: Swift.String? = nil,
            reason: Swift.String? = nil,
            value: EvidentlyClientTypes.VariableValue? = nil,
            variation: Swift.String? = nil
        )
        {
            self.details = details
            self.entityId = entityId
            self.feature = feature
            self.project = project
            self.reason = reason
            self.value = value
            self.variation = variation
        }
    }

}
