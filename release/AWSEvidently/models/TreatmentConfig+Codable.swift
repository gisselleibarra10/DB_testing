// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EvidentlyClientTypes.TreatmentConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description
        case feature
        case name
        case variation
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let feature = self.feature {
            try encodeContainer.encode(feature, forKey: .feature)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let variation = self.variation {
            try encodeContainer.encode(variation, forKey: .variation)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let featureDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .feature)
        feature = featureDecoded
        let variationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .variation)
        variation = variationDecoded
    }
}
