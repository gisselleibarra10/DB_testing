// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListExperimentsOutputResponseBody: Swift.Equatable {
    let experiments: [EvidentlyClientTypes.Experiment]?
    let nextToken: Swift.String?
}

extension ListExperimentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case experiments
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let experimentsContainer = try containerValues.decodeIfPresent([EvidentlyClientTypes.Experiment?].self, forKey: .experiments)
        var experimentsDecoded0:[EvidentlyClientTypes.Experiment]? = nil
        if let experimentsContainer = experimentsContainer {
            experimentsDecoded0 = [EvidentlyClientTypes.Experiment]()
            for structure0 in experimentsContainer {
                if let structure0 = structure0 {
                    experimentsDecoded0?.append(structure0)
                }
            }
        }
        experiments = experimentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
