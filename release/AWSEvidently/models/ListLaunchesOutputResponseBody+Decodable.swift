// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLaunchesOutputResponseBody: Swift.Equatable {
    let launches: [EvidentlyClientTypes.Launch]?
    let nextToken: Swift.String?
}

extension ListLaunchesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case launches
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let launchesContainer = try containerValues.decodeIfPresent([EvidentlyClientTypes.Launch?].self, forKey: .launches)
        var launchesDecoded0:[EvidentlyClientTypes.Launch]? = nil
        if let launchesContainer = launchesContainer {
            launchesDecoded0 = [EvidentlyClientTypes.Launch]()
            for structure0 in launchesContainer {
                if let structure0 = structure0 {
                    launchesDecoded0?.append(structure0)
                }
            }
        }
        launches = launchesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
