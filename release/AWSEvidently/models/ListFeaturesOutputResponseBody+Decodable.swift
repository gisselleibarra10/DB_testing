// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFeaturesOutputResponseBody: Swift.Equatable {
    let features: [EvidentlyClientTypes.FeatureSummary]?
    let nextToken: Swift.String?
}

extension ListFeaturesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case features
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let featuresContainer = try containerValues.decodeIfPresent([EvidentlyClientTypes.FeatureSummary?].self, forKey: .features)
        var featuresDecoded0:[EvidentlyClientTypes.FeatureSummary]? = nil
        if let featuresContainer = featuresContainer {
            featuresDecoded0 = [EvidentlyClientTypes.FeatureSummary]()
            for structure0 in featuresContainer {
                if let structure0 = structure0 {
                    featuresDecoded0?.append(structure0)
                }
            }
        }
        features = featuresDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
