// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EvidentlyClientTypes.ExperimentExecution: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case endedTime
        case startedTime
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let endedTime = self.endedTime {
            try encodeContainer.encode(endedTime.timeIntervalSince1970, forKey: .endedTime)
        }
        if let startedTime = self.startedTime {
            try encodeContainer.encode(startedTime.timeIntervalSince1970, forKey: .startedTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startedTime)
        startedTime = startedTimeDecoded
        let endedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endedTime)
        endedTime = endedTimeDecoded
    }
}
