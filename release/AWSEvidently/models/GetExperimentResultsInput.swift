// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetExperimentResultsInput: Swift.Equatable {
    /// The statistic used to calculate experiment results. Currently the only valid value is mean, which uses the mean of the collected values as the statistic.
    public var baseStat: EvidentlyClientTypes.ExperimentBaseStat?
    /// The date and time that the experiment ended, if it is completed. This must be no longer than 30 days after the experiment start time.
    public var endTime: ClientRuntime.Date?
    /// The name of the experiment to retrieve the results of.
    /// This member is required.
    public var experiment: Swift.String?
    /// The names of the experiment metrics that you want to see the results of.
    /// This member is required.
    public var metricNames: [Swift.String]?
    /// In seconds, the amount of time to aggregate results together.
    public var period: Swift.Int
    /// The name or ARN of the project that contains the experiment that you want to see the results of.
    /// This member is required.
    public var project: Swift.String?
    /// The names of the report types that you want to see. Currently, BayesianInference is the only valid value.
    public var reportNames: [EvidentlyClientTypes.ExperimentReportName]?
    /// The statistics that you want to see in the returned results.
    ///
    /// * PValue specifies to use p-values for the results. A p-value is used in hypothesis testing to measure how often you are willing to make a mistake in rejecting the null hypothesis. A general practice is to reject the null hypothesis and declare that the results are statistically significant when the p-value is less than 0.05.
    ///
    /// * ConfidenceInterval specifies a confidence interval for the results. The confidence interval represents the range of values for the chosen metric that is likely to contain the true difference between the baseStat of a variation and the baseline. Evidently returns the 95% confidence interval.
    ///
    /// * TreatmentEffect is the difference in the statistic specified by the baseStat parameter between each variation and the default variation.
    ///
    /// * BaseStat returns the statistical values collected for the metric for each variation. The statistic uses the same statistic specified in the baseStat parameter. Therefore, if baseStat is mean, this returns the mean of the values collected for each variation.
    public var resultStats: [EvidentlyClientTypes.ExperimentResultRequestType]?
    /// The date and time that the experiment started.
    public var startTime: ClientRuntime.Date?
    /// The names of the experiment treatments that you want to see the results for.
    /// This member is required.
    public var treatmentNames: [Swift.String]?

    public init (
        baseStat: EvidentlyClientTypes.ExperimentBaseStat? = nil,
        endTime: ClientRuntime.Date? = nil,
        experiment: Swift.String? = nil,
        metricNames: [Swift.String]? = nil,
        period: Swift.Int = 0,
        project: Swift.String? = nil,
        reportNames: [EvidentlyClientTypes.ExperimentReportName]? = nil,
        resultStats: [EvidentlyClientTypes.ExperimentResultRequestType]? = nil,
        startTime: ClientRuntime.Date? = nil,
        treatmentNames: [Swift.String]? = nil
    )
    {
        self.baseStat = baseStat
        self.endTime = endTime
        self.experiment = experiment
        self.metricNames = metricNames
        self.period = period
        self.project = project
        self.reportNames = reportNames
        self.resultStats = resultStats
        self.startTime = startTime
        self.treatmentNames = treatmentNames
    }
}
