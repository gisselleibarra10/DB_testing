// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EvidentlyClientTypes {
    /// This structure contains information about one Evidently feature in your account.
    public struct Feature: Swift.Equatable {
        /// The ARN of the feature.
        /// This member is required.
        public var arn: Swift.String?
        /// The date and time that the feature is created.
        /// This member is required.
        public var createdTime: ClientRuntime.Date?
        /// The name of the variation that is used as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature. This variation must also be listed in the variations structure. If you omit defaultVariation, the first variation listed in the variations structure is used as the default variation.
        public var defaultVariation: Swift.String?
        /// The description of the feature.
        public var description: Swift.String?
        /// A set of key-value pairs that specify users who should always be served a specific variation of a feature. Each key specifies a user using their user ID, account ID, or some other identifier. The value specifies the name of the variation that the user is to be served. For the override to be successful, the value of the key must match the entityId used in the [EvaluateFeature](https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html) operation.
        public var entityOverrides: [Swift.String:Swift.String]?
        /// An array of structures that define the evaluation rules for the feature.
        public var evaluationRules: [EvidentlyClientTypes.EvaluationRule]?
        /// If this value is ALL_RULES, the traffic allocation specified by any ongoing launches or experiments is being used. If this is DEFAULT_VARIATION, the default variation is being served to all users.
        /// This member is required.
        public var evaluationStrategy: EvidentlyClientTypes.FeatureEvaluationStrategy?
        /// The date and time that the feature was most recently updated.
        /// This member is required.
        public var lastUpdatedTime: ClientRuntime.Date?
        /// The name of the feature.
        /// This member is required.
        public var name: Swift.String?
        /// The name or ARN of the project that contains the feature.
        public var project: Swift.String?
        /// The current state of the feature.
        /// This member is required.
        public var status: EvidentlyClientTypes.FeatureStatus?
        /// The list of tag keys and values associated with this feature.
        public var tags: [Swift.String:Swift.String]?
        /// Defines the type of value used to define the different feature variations. For more information, see [Variation types](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-variationtypes.html)
        /// This member is required.
        public var valueType: EvidentlyClientTypes.VariationValueType?
        /// An array of structures that contain the configuration of the feature's different variations.
        /// This member is required.
        public var variations: [EvidentlyClientTypes.Variation]?

        public init (
            arn: Swift.String? = nil,
            createdTime: ClientRuntime.Date? = nil,
            defaultVariation: Swift.String? = nil,
            description: Swift.String? = nil,
            entityOverrides: [Swift.String:Swift.String]? = nil,
            evaluationRules: [EvidentlyClientTypes.EvaluationRule]? = nil,
            evaluationStrategy: EvidentlyClientTypes.FeatureEvaluationStrategy? = nil,
            lastUpdatedTime: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            project: Swift.String? = nil,
            status: EvidentlyClientTypes.FeatureStatus? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            valueType: EvidentlyClientTypes.VariationValueType? = nil,
            variations: [EvidentlyClientTypes.Variation]? = nil
        )
        {
            self.arn = arn
            self.createdTime = createdTime
            self.defaultVariation = defaultVariation
            self.description = description
            self.entityOverrides = entityOverrides
            self.evaluationRules = evaluationRules
            self.evaluationStrategy = evaluationStrategy
            self.lastUpdatedTime = lastUpdatedTime
            self.name = name
            self.project = project
            self.status = status
            self.tags = tags
            self.valueType = valueType
            self.variations = variations
        }
    }

}
