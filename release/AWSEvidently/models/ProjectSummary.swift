// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EvidentlyClientTypes {
    /// A structure that contains configuration information about an Evidently project.
    public struct ProjectSummary: Swift.Equatable {
        /// The number of experiments currently in the project.
        public var activeExperimentCount: Swift.Int?
        /// The number of ongoing launches currently in the project.
        public var activeLaunchCount: Swift.Int?
        /// The name or ARN of the project.
        /// This member is required.
        public var arn: Swift.String?
        /// The date and time that the project is created.
        /// This member is required.
        public var createdTime: ClientRuntime.Date?
        /// The description of the project.
        public var description: Swift.String?
        /// The number of experiments currently in the project.
        public var experimentCount: Swift.Int?
        /// The number of features currently in the project.
        public var featureCount: Swift.Int?
        /// The date and time that the project was most recently updated.
        /// This member is required.
        public var lastUpdatedTime: ClientRuntime.Date?
        /// The number of launches currently in the project, including launches that are ongoing, completed, and not started yet.
        public var launchCount: Swift.Int?
        /// The name of the project.
        /// This member is required.
        public var name: Swift.String?
        /// The current state of the project.
        /// This member is required.
        public var status: EvidentlyClientTypes.ProjectStatus?
        /// The list of tag keys and values associated with this project.
        public var tags: [Swift.String:Swift.String]?

        public init (
            activeExperimentCount: Swift.Int? = nil,
            activeLaunchCount: Swift.Int? = nil,
            arn: Swift.String? = nil,
            createdTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            experimentCount: Swift.Int? = nil,
            featureCount: Swift.Int? = nil,
            lastUpdatedTime: ClientRuntime.Date? = nil,
            launchCount: Swift.Int? = nil,
            name: Swift.String? = nil,
            status: EvidentlyClientTypes.ProjectStatus? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.activeExperimentCount = activeExperimentCount
            self.activeLaunchCount = activeLaunchCount
            self.arn = arn
            self.createdTime = createdTime
            self.description = description
            self.experimentCount = experimentCount
            self.featureCount = featureCount
            self.lastUpdatedTime = lastUpdatedTime
            self.launchCount = launchCount
            self.name = name
            self.status = status
            self.tags = tags
        }
    }

}
