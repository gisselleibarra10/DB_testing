// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFederationTokenOutputResponseBody: Swift.Equatable {
    let credentials: StsClientTypes.Credentials?
    let federatedUser: StsClientTypes.FederatedUser?
    let packedPolicySize: Swift.Int?
}

extension GetFederationTokenOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case credentials = "Credentials"
        case federatedUser = "FederatedUser"
        case packedPolicySize = "PackedPolicySize"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("GetFederationTokenResult"))
        let credentialsDecoded = try containerValues.decodeIfPresent(StsClientTypes.Credentials.self, forKey: .credentials)
        credentials = credentialsDecoded
        let federatedUserDecoded = try containerValues.decodeIfPresent(StsClientTypes.FederatedUser.self, forKey: .federatedUser)
        federatedUser = federatedUserDecoded
        let packedPolicySizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .packedPolicySize)
        packedPolicySize = packedPolicySizeDecoded
    }
}
