// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AssumeRoleWithSAMLInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let durationSeconds = durationSeconds {
            try container.encode(durationSeconds, forKey: ClientRuntime.Key("DurationSeconds"))
        }
        if let policy = policy {
            try container.encode(policy, forKey: ClientRuntime.Key("Policy"))
        }
        if let policyArns = policyArns {
            var policyArnsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("PolicyArns"))
            for (index0, policydescriptortype0) in policyArns.enumerated() {
                try policyArnsContainer.encode(policydescriptortype0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let principalArn = principalArn {
            try container.encode(principalArn, forKey: ClientRuntime.Key("PrincipalArn"))
        }
        if let roleArn = roleArn {
            try container.encode(roleArn, forKey: ClientRuntime.Key("RoleArn"))
        }
        if let sAMLAssertion = sAMLAssertion {
            try container.encode(sAMLAssertion, forKey: ClientRuntime.Key("SAMLAssertion"))
        }
        try container.encode("AssumeRoleWithSAML", forKey:ClientRuntime.Key("Action"))
        try container.encode("2011-06-15", forKey:ClientRuntime.Key("Version"))
    }
}
