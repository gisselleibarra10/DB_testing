// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOrganizationResourceCollectionHealthInputBody: Swift.Equatable {
    let organizationResourceCollectionType: DevOpsGuruClientTypes.OrganizationResourceCollectionType?
    let accountIds: [Swift.String]?
    let organizationalUnitIds: [Swift.String]?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension DescribeOrganizationResourceCollectionHealthInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountIds = "AccountIds"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case organizationResourceCollectionType = "OrganizationResourceCollectionType"
        case organizationalUnitIds = "OrganizationalUnitIds"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationResourceCollectionTypeDecoded = try containerValues.decodeIfPresent(DevOpsGuruClientTypes.OrganizationResourceCollectionType.self, forKey: .organizationResourceCollectionType)
        organizationResourceCollectionType = organizationResourceCollectionTypeDecoded
        let accountIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .accountIds)
        var accountIdsDecoded0:[Swift.String]? = nil
        if let accountIdsContainer = accountIdsContainer {
            accountIdsDecoded0 = [Swift.String]()
            for string0 in accountIdsContainer {
                if let string0 = string0 {
                    accountIdsDecoded0?.append(string0)
                }
            }
        }
        accountIds = accountIdsDecoded0
        let organizationalUnitIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .organizationalUnitIds)
        var organizationalUnitIdsDecoded0:[Swift.String]? = nil
        if let organizationalUnitIdsContainer = organizationalUnitIdsContainer {
            organizationalUnitIdsDecoded0 = [Swift.String]()
            for string0 in organizationalUnitIdsContainer {
                if let string0 = string0 {
                    organizationalUnitIdsDecoded0?.append(string0)
                }
            }
        }
        organizationalUnitIds = organizationalUnitIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
