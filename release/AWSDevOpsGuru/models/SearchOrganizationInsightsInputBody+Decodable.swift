// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchOrganizationInsightsInputBody: Swift.Equatable {
    let accountIds: [Swift.String]?
    let startTimeRange: DevOpsGuruClientTypes.StartTimeRange?
    let filters: DevOpsGuruClientTypes.SearchOrganizationInsightsFilters?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
    let type: DevOpsGuruClientTypes.InsightType?
}

extension SearchOrganizationInsightsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountIds = "AccountIds"
        case filters = "Filters"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case startTimeRange = "StartTimeRange"
        case type = "Type"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .accountIds)
        var accountIdsDecoded0:[Swift.String]? = nil
        if let accountIdsContainer = accountIdsContainer {
            accountIdsDecoded0 = [Swift.String]()
            for string0 in accountIdsContainer {
                if let string0 = string0 {
                    accountIdsDecoded0?.append(string0)
                }
            }
        }
        accountIds = accountIdsDecoded0
        let startTimeRangeDecoded = try containerValues.decodeIfPresent(DevOpsGuruClientTypes.StartTimeRange.self, forKey: .startTimeRange)
        startTimeRange = startTimeRangeDecoded
        let filtersDecoded = try containerValues.decodeIfPresent(DevOpsGuruClientTypes.SearchOrganizationInsightsFilters.self, forKey: .filters)
        filters = filtersDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let typeDecoded = try containerValues.decodeIfPresent(DevOpsGuruClientTypes.InsightType.self, forKey: .type)
        type = typeDecoded
    }
}
