// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DevOpsGuruClientTypes.MonitoredResourceIdentifier: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case monitoredResourceName = "MonitoredResourceName"
        case resourcePermission = "ResourcePermission"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let monitoredResourceName = self.monitoredResourceName {
            try encodeContainer.encode(monitoredResourceName, forKey: .monitoredResourceName)
        }
        if let resourcePermission = self.resourcePermission {
            try encodeContainer.encode(resourcePermission.rawValue, forKey: .resourcePermission)
        }
        if let type = self.type {
            try encodeContainer.encode(type, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let monitoredResourceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .monitoredResourceName)
        monitoredResourceName = monitoredResourceNameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .type)
        type = typeDecoded
        let resourcePermissionDecoded = try containerValues.decodeIfPresent(DevOpsGuruClientTypes.ResourcePermission.self, forKey: .resourcePermission)
        resourcePermission = resourcePermissionDecoded
    }
}
