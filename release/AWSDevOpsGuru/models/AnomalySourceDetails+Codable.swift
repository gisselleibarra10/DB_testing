// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DevOpsGuruClientTypes.AnomalySourceDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cloudWatchMetrics = "CloudWatchMetrics"
        case performanceInsightsMetrics = "PerformanceInsightsMetrics"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cloudWatchMetrics = cloudWatchMetrics {
            var cloudWatchMetricsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .cloudWatchMetrics)
            for cloudwatchmetricsdetails0 in cloudWatchMetrics {
                try cloudWatchMetricsContainer.encode(cloudwatchmetricsdetails0)
            }
        }
        if let performanceInsightsMetrics = performanceInsightsMetrics {
            var performanceInsightsMetricsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .performanceInsightsMetrics)
            for performanceinsightsmetricsdetails0 in performanceInsightsMetrics {
                try performanceInsightsMetricsContainer.encode(performanceinsightsmetricsdetails0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cloudWatchMetricsContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.CloudWatchMetricsDetail?].self, forKey: .cloudWatchMetrics)
        var cloudWatchMetricsDecoded0:[DevOpsGuruClientTypes.CloudWatchMetricsDetail]? = nil
        if let cloudWatchMetricsContainer = cloudWatchMetricsContainer {
            cloudWatchMetricsDecoded0 = [DevOpsGuruClientTypes.CloudWatchMetricsDetail]()
            for structure0 in cloudWatchMetricsContainer {
                if let structure0 = structure0 {
                    cloudWatchMetricsDecoded0?.append(structure0)
                }
            }
        }
        cloudWatchMetrics = cloudWatchMetricsDecoded0
        let performanceInsightsMetricsContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.PerformanceInsightsMetricsDetail?].self, forKey: .performanceInsightsMetrics)
        var performanceInsightsMetricsDecoded0:[DevOpsGuruClientTypes.PerformanceInsightsMetricsDetail]? = nil
        if let performanceInsightsMetricsContainer = performanceInsightsMetricsContainer {
            performanceInsightsMetricsDecoded0 = [DevOpsGuruClientTypes.PerformanceInsightsMetricsDetail]()
            for structure0 in performanceInsightsMetricsContainer {
                if let structure0 = structure0 {
                    performanceInsightsMetricsDecoded0?.append(structure0)
                }
            }
        }
        performanceInsightsMetrics = performanceInsightsMetricsDecoded0
    }
}
