// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOrganizationHealthOutputResponseBody: Swift.Equatable {
    let openReactiveInsights: Swift.Int
    let openProactiveInsights: Swift.Int
    let metricsAnalyzed: Swift.Int
    let resourceHours: Swift.Int?
}

extension DescribeOrganizationHealthOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metricsAnalyzed = "MetricsAnalyzed"
        case openProactiveInsights = "OpenProactiveInsights"
        case openReactiveInsights = "OpenReactiveInsights"
        case resourceHours = "ResourceHours"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let openReactiveInsightsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .openReactiveInsights) ?? 0
        openReactiveInsights = openReactiveInsightsDecoded
        let openProactiveInsightsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .openProactiveInsights) ?? 0
        openProactiveInsights = openProactiveInsightsDecoded
        let metricsAnalyzedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .metricsAnalyzed) ?? 0
        metricsAnalyzed = metricsAnalyzedDecoded
        let resourceHoursDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .resourceHours)
        resourceHours = resourceHoursDecoded
    }
}
