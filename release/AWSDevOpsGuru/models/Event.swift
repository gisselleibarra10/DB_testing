// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DevOpsGuruClientTypes {
    /// An Amazon Web Services resource event. Amazon Web Services resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions.
    public struct Event: Swift.Equatable {
        /// The source, AWS_CLOUD_TRAIL or AWS_CODE_DEPLOY, where DevOps Guru analysis found the event.
        public var dataSource: DevOpsGuruClientTypes.EventDataSource?
        /// The class of the event. The class specifies what the event is related to, such as an infrastructure change, a deployment, or a schema change.
        public var eventClass: DevOpsGuruClientTypes.EventClass?
        /// The Amazon Web Services source that emitted the event.
        public var eventSource: Swift.String?
        /// The ID of the event.
        public var id: Swift.String?
        /// The name of the event.
        public var name: Swift.String?
        /// A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag key. You can specify up to 500 Amazon Web Services CloudFormation stacks.
        public var resourceCollection: DevOpsGuruClientTypes.ResourceCollection?
        /// An EventResource object that contains information about the resource that emitted the event.
        public var resources: [DevOpsGuruClientTypes.EventResource]?
        /// A Timestamp that specifies the time the event occurred.
        public var time: ClientRuntime.Date?

        public init (
            dataSource: DevOpsGuruClientTypes.EventDataSource? = nil,
            eventClass: DevOpsGuruClientTypes.EventClass? = nil,
            eventSource: Swift.String? = nil,
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            resourceCollection: DevOpsGuruClientTypes.ResourceCollection? = nil,
            resources: [DevOpsGuruClientTypes.EventResource]? = nil,
            time: ClientRuntime.Date? = nil
        )
        {
            self.dataSource = dataSource
            self.eventClass = eventClass
            self.eventSource = eventSource
            self.id = id
            self.name = name
            self.resourceCollection = resourceCollection
            self.resources = resources
            self.time = time
        }
    }

}
