// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DevOpsGuruClientTypes {
    /// Contains information used to update a collection of Amazon Web Services resources.
    public struct UpdateResourceCollectionFilter: Swift.Equatable {
        /// A collection of Amazon Web Services CloudFormation stacks. You can specify up to 500 Amazon Web Services CloudFormation stacks.
        public var cloudFormation: DevOpsGuruClientTypes.UpdateCloudFormationCollectionFilter?
        /// The updated Amazon Web Services tags used to filter the resources in the resource collection. Tags help you identify and organize your Amazon Web Services resources. Many Amazon Web Services services support tagging, so you can assign the same tag to resources from different services to indicate that the resources are related. For example, you can assign the same tag to an Amazon DynamoDB table resource that you assign to an Lambda function. For more information about using tags, see the [Tagging best practices](https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf) whitepaper. Each Amazon Web Services tag has two parts.
        ///
        /// * A tag key (for example, CostCenter, Environment, Project, or Secret). Tag keys are case-sensitive.
        ///
        /// * An optional field known as a tag value (for example, 111122223333, Production, or a team name). Omitting the tag value is the same as using an empty string. Like tag keys, tag values are case-sensitive.
        ///
        ///
        /// Together these are known as key-value pairs. The string used for a key in a tag that you use to define your resource coverage must begin with the prefix Devops-guru-. The tag key might be Devops-guru-deployment-application or Devops-guru-rds-application. While keys are case-sensitive, the case of key characters don't matter to DevOps Guru. For example, DevOps Guru works with a key named devops-guru-rds and a key named DevOps-Guru-RDS. Possible key/value pairs in your application might be Devops-Guru-production-application/RDS or Devops-Guru-production-application/containers.
        public var tags: [DevOpsGuruClientTypes.UpdateTagCollectionFilter]?

        public init (
            cloudFormation: DevOpsGuruClientTypes.UpdateCloudFormationCollectionFilter? = nil,
            tags: [DevOpsGuruClientTypes.UpdateTagCollectionFilter]? = nil
        )
        {
            self.cloudFormation = cloudFormation
            self.tags = tags
        }
    }

}
