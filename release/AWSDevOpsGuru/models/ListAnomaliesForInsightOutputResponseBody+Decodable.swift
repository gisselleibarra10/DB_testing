// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAnomaliesForInsightOutputResponseBody: Swift.Equatable {
    let proactiveAnomalies: [DevOpsGuruClientTypes.ProactiveAnomalySummary]?
    let reactiveAnomalies: [DevOpsGuruClientTypes.ReactiveAnomalySummary]?
    let nextToken: Swift.String?
}

extension ListAnomaliesForInsightOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case proactiveAnomalies = "ProactiveAnomalies"
        case reactiveAnomalies = "ReactiveAnomalies"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let proactiveAnomaliesContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.ProactiveAnomalySummary?].self, forKey: .proactiveAnomalies)
        var proactiveAnomaliesDecoded0:[DevOpsGuruClientTypes.ProactiveAnomalySummary]? = nil
        if let proactiveAnomaliesContainer = proactiveAnomaliesContainer {
            proactiveAnomaliesDecoded0 = [DevOpsGuruClientTypes.ProactiveAnomalySummary]()
            for structure0 in proactiveAnomaliesContainer {
                if let structure0 = structure0 {
                    proactiveAnomaliesDecoded0?.append(structure0)
                }
            }
        }
        proactiveAnomalies = proactiveAnomaliesDecoded0
        let reactiveAnomaliesContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.ReactiveAnomalySummary?].self, forKey: .reactiveAnomalies)
        var reactiveAnomaliesDecoded0:[DevOpsGuruClientTypes.ReactiveAnomalySummary]? = nil
        if let reactiveAnomaliesContainer = reactiveAnomaliesContainer {
            reactiveAnomaliesDecoded0 = [DevOpsGuruClientTypes.ReactiveAnomalySummary]()
            for structure0 in reactiveAnomaliesContainer {
                if let structure0 = structure0 {
                    reactiveAnomaliesDecoded0?.append(structure0)
                }
            }
        }
        reactiveAnomalies = reactiveAnomaliesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
