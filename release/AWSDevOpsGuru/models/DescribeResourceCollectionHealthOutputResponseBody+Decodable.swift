// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeResourceCollectionHealthOutputResponseBody: Swift.Equatable {
    let cloudFormation: [DevOpsGuruClientTypes.CloudFormationHealth]?
    let service: [DevOpsGuruClientTypes.ServiceHealth]?
    let nextToken: Swift.String?
    let tags: [DevOpsGuruClientTypes.TagHealth]?
}

extension DescribeResourceCollectionHealthOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cloudFormation = "CloudFormation"
        case nextToken = "NextToken"
        case service = "Service"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cloudFormationContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.CloudFormationHealth?].self, forKey: .cloudFormation)
        var cloudFormationDecoded0:[DevOpsGuruClientTypes.CloudFormationHealth]? = nil
        if let cloudFormationContainer = cloudFormationContainer {
            cloudFormationDecoded0 = [DevOpsGuruClientTypes.CloudFormationHealth]()
            for structure0 in cloudFormationContainer {
                if let structure0 = structure0 {
                    cloudFormationDecoded0?.append(structure0)
                }
            }
        }
        cloudFormation = cloudFormationDecoded0
        let serviceContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.ServiceHealth?].self, forKey: .service)
        var serviceDecoded0:[DevOpsGuruClientTypes.ServiceHealth]? = nil
        if let serviceContainer = serviceContainer {
            serviceDecoded0 = [DevOpsGuruClientTypes.ServiceHealth]()
            for structure0 in serviceContainer {
                if let structure0 = structure0 {
                    serviceDecoded0?.append(structure0)
                }
            }
        }
        service = serviceDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let tagsContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.TagHealth?].self, forKey: .tags)
        var tagsDecoded0:[DevOpsGuruClientTypes.TagHealth]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [DevOpsGuruClientTypes.TagHealth]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
