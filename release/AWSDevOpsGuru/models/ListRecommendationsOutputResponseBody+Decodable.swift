// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecommendationsOutputResponseBody: Swift.Equatable {
    let recommendations: [DevOpsGuruClientTypes.Recommendation]?
    let nextToken: Swift.String?
}

extension ListRecommendationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case recommendations = "Recommendations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recommendationsContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.Recommendation?].self, forKey: .recommendations)
        var recommendationsDecoded0:[DevOpsGuruClientTypes.Recommendation]? = nil
        if let recommendationsContainer = recommendationsContainer {
            recommendationsDecoded0 = [DevOpsGuruClientTypes.Recommendation]()
            for structure0 in recommendationsContainer {
                if let structure0 = structure0 {
                    recommendationsDecoded0?.append(structure0)
                }
            }
        }
        recommendations = recommendationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
