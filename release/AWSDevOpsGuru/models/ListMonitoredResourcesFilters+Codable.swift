// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DevOpsGuruClientTypes.ListMonitoredResourcesFilters: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourcePermission = "ResourcePermission"
        case resourceTypeFilters = "ResourceTypeFilters"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourcePermission = self.resourcePermission {
            try encodeContainer.encode(resourcePermission.rawValue, forKey: .resourcePermission)
        }
        if let resourceTypeFilters = resourceTypeFilters {
            var resourceTypeFiltersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .resourceTypeFilters)
            for resourcetypefilters0 in resourceTypeFilters {
                try resourceTypeFiltersContainer.encode(resourcetypefilters0.rawValue)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourcePermissionDecoded = try containerValues.decodeIfPresent(DevOpsGuruClientTypes.ResourcePermission.self, forKey: .resourcePermission)
        resourcePermission = resourcePermissionDecoded
        let resourceTypeFiltersContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.ResourceTypeFilter?].self, forKey: .resourceTypeFilters)
        var resourceTypeFiltersDecoded0:[DevOpsGuruClientTypes.ResourceTypeFilter]? = nil
        if let resourceTypeFiltersContainer = resourceTypeFiltersContainer {
            resourceTypeFiltersDecoded0 = [DevOpsGuruClientTypes.ResourceTypeFilter]()
            for string0 in resourceTypeFiltersContainer {
                if let string0 = string0 {
                    resourceTypeFiltersDecoded0?.append(string0)
                }
            }
        }
        resourceTypeFilters = resourceTypeFiltersDecoded0
    }
}
