// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListOrganizationInsightsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountIds = "AccountIds"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case organizationalUnitIds = "OrganizationalUnitIds"
        case statusFilter = "StatusFilter"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountIds = accountIds {
            var accountIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .accountIds)
            for listinsightsaccountidlist0 in accountIds {
                try accountIdsContainer.encode(listinsightsaccountidlist0)
            }
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let organizationalUnitIds = organizationalUnitIds {
            var organizationalUnitIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .organizationalUnitIds)
            for listinsightsorganizationalunitidlist0 in organizationalUnitIds {
                try organizationalUnitIdsContainer.encode(listinsightsorganizationalunitidlist0)
            }
        }
        if let statusFilter = self.statusFilter {
            try encodeContainer.encode(statusFilter, forKey: .statusFilter)
        }
    }
}
