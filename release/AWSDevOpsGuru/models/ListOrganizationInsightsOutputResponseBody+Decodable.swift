// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOrganizationInsightsOutputResponseBody: Swift.Equatable {
    let proactiveInsights: [DevOpsGuruClientTypes.ProactiveOrganizationInsightSummary]?
    let reactiveInsights: [DevOpsGuruClientTypes.ReactiveOrganizationInsightSummary]?
    let nextToken: Swift.String?
}

extension ListOrganizationInsightsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case proactiveInsights = "ProactiveInsights"
        case reactiveInsights = "ReactiveInsights"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let proactiveInsightsContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.ProactiveOrganizationInsightSummary?].self, forKey: .proactiveInsights)
        var proactiveInsightsDecoded0:[DevOpsGuruClientTypes.ProactiveOrganizationInsightSummary]? = nil
        if let proactiveInsightsContainer = proactiveInsightsContainer {
            proactiveInsightsDecoded0 = [DevOpsGuruClientTypes.ProactiveOrganizationInsightSummary]()
            for structure0 in proactiveInsightsContainer {
                if let structure0 = structure0 {
                    proactiveInsightsDecoded0?.append(structure0)
                }
            }
        }
        proactiveInsights = proactiveInsightsDecoded0
        let reactiveInsightsContainer = try containerValues.decodeIfPresent([DevOpsGuruClientTypes.ReactiveOrganizationInsightSummary?].self, forKey: .reactiveInsights)
        var reactiveInsightsDecoded0:[DevOpsGuruClientTypes.ReactiveOrganizationInsightSummary]? = nil
        if let reactiveInsightsContainer = reactiveInsightsContainer {
            reactiveInsightsDecoded0 = [DevOpsGuruClientTypes.ReactiveOrganizationInsightSummary]()
            for structure0 in reactiveInsightsContainer {
                if let structure0 = structure0 {
                    reactiveInsightsDecoded0?.append(structure0)
                }
            }
        }
        reactiveInsights = reactiveInsightsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
