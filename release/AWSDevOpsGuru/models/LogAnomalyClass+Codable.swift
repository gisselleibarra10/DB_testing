// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DevOpsGuruClientTypes.LogAnomalyClass: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case explanation = "Explanation"
        case logAnomalyToken = "LogAnomalyToken"
        case logAnomalyType = "LogAnomalyType"
        case logEventId = "LogEventId"
        case logEventTimestamp = "LogEventTimestamp"
        case logStreamName = "LogStreamName"
        case numberOfLogLinesOccurrences = "NumberOfLogLinesOccurrences"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let explanation = self.explanation {
            try encodeContainer.encode(explanation, forKey: .explanation)
        }
        if let logAnomalyToken = self.logAnomalyToken {
            try encodeContainer.encode(logAnomalyToken, forKey: .logAnomalyToken)
        }
        if let logAnomalyType = self.logAnomalyType {
            try encodeContainer.encode(logAnomalyType.rawValue, forKey: .logAnomalyType)
        }
        if let logEventId = self.logEventId {
            try encodeContainer.encode(logEventId, forKey: .logEventId)
        }
        if let logEventTimestamp = self.logEventTimestamp {
            try encodeContainer.encode(logEventTimestamp.timeIntervalSince1970, forKey: .logEventTimestamp)
        }
        if let logStreamName = self.logStreamName {
            try encodeContainer.encode(logStreamName, forKey: .logStreamName)
        }
        if numberOfLogLinesOccurrences != 0 {
            try encodeContainer.encode(numberOfLogLinesOccurrences, forKey: .numberOfLogLinesOccurrences)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logStreamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logStreamName)
        logStreamName = logStreamNameDecoded
        let logAnomalyTypeDecoded = try containerValues.decodeIfPresent(DevOpsGuruClientTypes.LogAnomalyType.self, forKey: .logAnomalyType)
        logAnomalyType = logAnomalyTypeDecoded
        let logAnomalyTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logAnomalyToken)
        logAnomalyToken = logAnomalyTokenDecoded
        let logEventIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logEventId)
        logEventId = logEventIdDecoded
        let explanationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .explanation)
        explanation = explanationDecoded
        let numberOfLogLinesOccurrencesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfLogLinesOccurrences) ?? 0
        numberOfLogLinesOccurrences = numberOfLogLinesOccurrencesDecoded
        let logEventTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .logEventTimestamp)
        logEventTimestamp = logEventTimestampDecoded
    }
}
