// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeOrganizationOverviewInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountIds = "AccountIds"
        case fromTime = "FromTime"
        case organizationalUnitIds = "OrganizationalUnitIds"
        case toTime = "ToTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountIds = accountIds {
            var accountIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .accountIds)
            for accountidlist0 in accountIds {
                try accountIdsContainer.encode(accountidlist0)
            }
        }
        if let fromTime = self.fromTime {
            try encodeContainer.encode(fromTime.timeIntervalSince1970, forKey: .fromTime)
        }
        if let organizationalUnitIds = organizationalUnitIds {
            var organizationalUnitIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .organizationalUnitIds)
            for organizationalunitidlist0 in organizationalUnitIds {
                try organizationalUnitIdsContainer.encode(organizationalunitidlist0)
            }
        }
        if let toTime = self.toTime {
            try encodeContainer.encode(toTime.timeIntervalSince1970, forKey: .toTime)
        }
    }
}
