// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateEntityToThingInputBody: Swift.Equatable {
    let thingName: Swift.String?
    let entityId: Swift.String?
    let namespaceVersion: Swift.Int?
}

extension AssociateEntityToThingInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entityId
        case namespaceVersion
        case thingName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingName)
        thingName = thingNameDecoded
        let entityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .entityId)
        entityId = entityIdDecoded
        let namespaceVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .namespaceVersion)
        namespaceVersion = namespaceVersionDecoded
    }
}
