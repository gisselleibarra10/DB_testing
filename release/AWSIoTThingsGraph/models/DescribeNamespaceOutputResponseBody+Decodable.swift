// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeNamespaceOutputResponseBody: Swift.Equatable {
    let namespaceArn: Swift.String?
    let namespaceName: Swift.String?
    let trackingNamespaceName: Swift.String?
    let trackingNamespaceVersion: Swift.Int?
    let namespaceVersion: Swift.Int?
}

extension DescribeNamespaceOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case namespaceArn
        case namespaceName
        case namespaceVersion
        case trackingNamespaceName
        case trackingNamespaceVersion
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let namespaceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .namespaceArn)
        namespaceArn = namespaceArnDecoded
        let namespaceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .namespaceName)
        namespaceName = namespaceNameDecoded
        let trackingNamespaceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trackingNamespaceName)
        trackingNamespaceName = trackingNamespaceNameDecoded
        let trackingNamespaceVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .trackingNamespaceVersion)
        trackingNamespaceVersion = trackingNamespaceVersionDecoded
        let namespaceVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .namespaceVersion)
        namespaceVersion = namespaceVersionDecoded
    }
}
