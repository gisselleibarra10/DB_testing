// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MqClientTypes {
    /// Returns information about all brokers.
    public struct BrokerSummary: Swift.Equatable {
        /// The broker's Amazon Resource Name (ARN).
        public var brokerArn: Swift.String?
        /// The unique ID that Amazon MQ generates for the broker.
        public var brokerId: Swift.String?
        /// The broker's name. This value is unique in your AWS account, 1-50 characters long, and containing only letters, numbers, dashes, and underscores, and must not contain white spaces, brackets, wildcard characters, or special characters.
        public var brokerName: Swift.String?
        /// The broker's status.
        public var brokerState: MqClientTypes.BrokerState?
        /// The time when the broker was created.
        public var created: ClientRuntime.Date?
        /// The broker's deployment mode.
        /// This member is required.
        public var deploymentMode: MqClientTypes.DeploymentMode?
        /// The type of broker engine.
        /// This member is required.
        public var engineType: MqClientTypes.EngineType?
        /// The broker's instance type.
        public var hostInstanceType: Swift.String?

        public init (
            brokerArn: Swift.String? = nil,
            brokerId: Swift.String? = nil,
            brokerName: Swift.String? = nil,
            brokerState: MqClientTypes.BrokerState? = nil,
            created: ClientRuntime.Date? = nil,
            deploymentMode: MqClientTypes.DeploymentMode? = nil,
            engineType: MqClientTypes.EngineType? = nil,
            hostInstanceType: Swift.String? = nil
        )
        {
            self.brokerArn = brokerArn
            self.brokerId = brokerId
            self.brokerName = brokerName
            self.brokerState = brokerState
            self.created = created
            self.deploymentMode = deploymentMode
            self.engineType = engineType
            self.hostInstanceType = hostInstanceType
        }
    }

}
