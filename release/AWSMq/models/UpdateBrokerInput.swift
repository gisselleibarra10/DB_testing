// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Updates the broker using the specified properties.
public struct UpdateBrokerInput: Swift.Equatable {
    /// Optional. The authentication strategy used to secure the broker. The default is SIMPLE.
    public var authenticationStrategy: MqClientTypes.AuthenticationStrategy?
    /// Enables automatic upgrades to new minor versions for brokers, as new versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window of the broker or after a manual broker reboot.
    public var autoMinorVersionUpgrade: Swift.Bool?
    /// The unique ID that Amazon MQ generates for the broker.
    /// This member is required.
    public var brokerId: Swift.String?
    /// A list of information about the configuration.
    public var configuration: MqClientTypes.ConfigurationId?
    /// The broker engine version. For a list of supported engine versions, see [Supported engines](https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html).
    public var engineVersion: Swift.String?
    /// The broker's host instance type to upgrade to. For a list of supported instance types, see [Broker instance types](https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker.html#broker-instance-types).
    public var hostInstanceType: Swift.String?
    /// Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker. Does not apply to RabbitMQ brokers.
    public var ldapServerMetadata: MqClientTypes.LdapServerMetadataInput?
    /// Enables Amazon CloudWatch logging for brokers.
    public var logs: MqClientTypes.Logs?
    /// The parameters that determine the WeeklyStartTime.
    public var maintenanceWindowStartTime: MqClientTypes.WeeklyStartTime?
    /// The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.
    public var securityGroups: [Swift.String]?

    public init (
        authenticationStrategy: MqClientTypes.AuthenticationStrategy? = nil,
        autoMinorVersionUpgrade: Swift.Bool? = nil,
        brokerId: Swift.String? = nil,
        configuration: MqClientTypes.ConfigurationId? = nil,
        engineVersion: Swift.String? = nil,
        hostInstanceType: Swift.String? = nil,
        ldapServerMetadata: MqClientTypes.LdapServerMetadataInput? = nil,
        logs: MqClientTypes.Logs? = nil,
        maintenanceWindowStartTime: MqClientTypes.WeeklyStartTime? = nil,
        securityGroups: [Swift.String]? = nil
    )
    {
        self.authenticationStrategy = authenticationStrategy
        self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
        self.brokerId = brokerId
        self.configuration = configuration
        self.engineVersion = engineVersion
        self.hostInstanceType = hostInstanceType
        self.ldapServerMetadata = ldapServerMetadata
        self.logs = logs
        self.maintenanceWindowStartTime = maintenanceWindowStartTime
        self.securityGroups = securityGroups
    }
}
