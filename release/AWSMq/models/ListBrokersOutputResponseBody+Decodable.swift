// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBrokersOutputResponseBody: Swift.Equatable {
    let brokerSummaries: [MqClientTypes.BrokerSummary]?
    let nextToken: Swift.String?
}

extension ListBrokersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case brokerSummaries = "brokerSummaries"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let brokerSummariesContainer = try containerValues.decodeIfPresent([MqClientTypes.BrokerSummary?].self, forKey: .brokerSummaries)
        var brokerSummariesDecoded0:[MqClientTypes.BrokerSummary]? = nil
        if let brokerSummariesContainer = brokerSummariesContainer {
            brokerSummariesDecoded0 = [MqClientTypes.BrokerSummary]()
            for structure0 in brokerSummariesContainer {
                if let structure0 = structure0 {
                    brokerSummariesDecoded0?.append(structure0)
                }
            }
        }
        brokerSummaries = brokerSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
