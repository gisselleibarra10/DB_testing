// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MqClientTypes {
    /// The broker's status.
    public enum BrokerState: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case creationFailed
        case creationInProgress
        case criticalActionRequired
        case deletionInProgress
        case rebootInProgress
        case running
        case sdkUnknown(Swift.String)

        public static var allCases: [BrokerState] {
            return [
                .creationFailed,
                .creationInProgress,
                .criticalActionRequired,
                .deletionInProgress,
                .rebootInProgress,
                .running,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .creationFailed: return "CREATION_FAILED"
            case .creationInProgress: return "CREATION_IN_PROGRESS"
            case .criticalActionRequired: return "CRITICAL_ACTION_REQUIRED"
            case .deletionInProgress: return "DELETION_IN_PROGRESS"
            case .rebootInProgress: return "REBOOT_IN_PROGRESS"
            case .running: return "RUNNING"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = BrokerState(rawValue: rawValue) ?? BrokerState.sdkUnknown(rawValue)
        }
    }
}
