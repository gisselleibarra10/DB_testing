// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContainersOutputResponseBody: Swift.Equatable {
    let containers: [MediaStoreClientTypes.Container]?
    let nextToken: Swift.String?
}

extension ListContainersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case containers = "Containers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let containersContainer = try containerValues.decodeIfPresent([MediaStoreClientTypes.Container?].self, forKey: .containers)
        var containersDecoded0:[MediaStoreClientTypes.Container]? = nil
        if let containersContainer = containersContainer {
            containersDecoded0 = [MediaStoreClientTypes.Container]()
            for structure0 in containersContainer {
                if let structure0 = structure0 {
                    containersDecoded0?.append(structure0)
                }
            }
        }
        containers = containersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
