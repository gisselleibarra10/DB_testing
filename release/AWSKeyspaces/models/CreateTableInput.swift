// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateTableInput: Swift.Equatable {
    /// Specifies the read/write throughput capacity mode for the table. The options are: • throughputMode:PAY_PER_REQUEST and • throughputMode:PROVISIONED - Provisioned capacity mode requires readCapacityUnits and writeCapacityUnits as input. The default is throughput_mode:PAY_PER_REQUEST. For more information, see [Read/write capacity modes](https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html) in the Amazon Keyspaces Developer Guide.
    public var capacitySpecification: KeyspacesClientTypes.CapacitySpecification?
    /// This parameter allows to enter a description of the table.
    public var comment: KeyspacesClientTypes.Comment?
    /// The default Time to Live setting in seconds for the table. For more information, see [Setting the default TTL value for a table](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl) in the Amazon Keyspaces Developer Guide.
    public var defaultTimeToLive: Swift.Int?
    /// Specifies how the encryption key for encryption at rest is managed for the table. You can choose one of the following KMS key (KMS key): • type:AWS_OWNED_KMS_KEY - This key is owned by Amazon Keyspaces. • type:CUSTOMER_MANAGED_KMS_KEY - This key is stored in your account and is created, owned, and managed by you. This option requires the kms_key_identifier of the KMS key in Amazon Resource Name (ARN) format as input. The default is type:AWS_OWNED_KMS_KEY. For more information, see [Encryption at rest](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html) in the Amazon Keyspaces Developer Guide.
    public var encryptionSpecification: KeyspacesClientTypes.EncryptionSpecification?
    /// The name of the keyspace that the table is going to be created in.
    /// This member is required.
    public var keyspaceName: Swift.String?
    /// Specifies if pointInTimeRecovery is enabled or disabled for the table. The options are: • ENABLED • DISABLED If it's not specified, the default is DISABLED. For more information, see [Point-in-time recovery](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html) in the Amazon Keyspaces Developer Guide.
    public var pointInTimeRecovery: KeyspacesClientTypes.PointInTimeRecovery?
    /// The schemaDefinition consists of the following parameters. For each column to be created: • name - The name of the column. • type - An Amazon Keyspaces data type. For more information, see [Data types](https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.data-types) in the Amazon Keyspaces Developer Guide. The primary key of the table consists of the following columns: • partitionKeys - The partition key can be a single column, or it can be a compound value composed of two or more columns. The partition key portion of the primary key is required and determines how Amazon Keyspaces stores your data. • name - The name of each partition key column. • clusteringKeys - The optional clustering column portion of your primary key determines how the data is clustered and sorted within each partition. • name - The name of the clustering column. • orderBy - Sets the ascendant (ASC) or descendant (DESC) order modifier. To define a column as static use staticColumns - Static columns store values that are shared by all rows in the same partition: • name - The name of the column. • type - An Amazon Keyspaces data type.
    /// This member is required.
    public var schemaDefinition: KeyspacesClientTypes.SchemaDefinition?
    /// The name of the table.
    /// This member is required.
    public var tableName: Swift.String?
    /// A list of key-value pair tags to be attached to the resource. For more information, see [Adding tags and labels to Amazon Keyspaces resources](https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html) in the Amazon Keyspaces Developer Guide.
    public var tags: [KeyspacesClientTypes.Tag]?
    /// Enables Time to Live custom settings for the table. The options are: • status:enabled • status:disabled The default is status:disabled. After ttl is enabled, you can't disable it for the table. For more information, see [Expiring data by using Amazon Keyspaces Time to Live (TTL)](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html) in the Amazon Keyspaces Developer Guide.
    public var ttl: KeyspacesClientTypes.TimeToLive?

    public init (
        capacitySpecification: KeyspacesClientTypes.CapacitySpecification? = nil,
        comment: KeyspacesClientTypes.Comment? = nil,
        defaultTimeToLive: Swift.Int? = nil,
        encryptionSpecification: KeyspacesClientTypes.EncryptionSpecification? = nil,
        keyspaceName: Swift.String? = nil,
        pointInTimeRecovery: KeyspacesClientTypes.PointInTimeRecovery? = nil,
        schemaDefinition: KeyspacesClientTypes.SchemaDefinition? = nil,
        tableName: Swift.String? = nil,
        tags: [KeyspacesClientTypes.Tag]? = nil,
        ttl: KeyspacesClientTypes.TimeToLive? = nil
    )
    {
        self.capacitySpecification = capacitySpecification
        self.comment = comment
        self.defaultTimeToLive = defaultTimeToLive
        self.encryptionSpecification = encryptionSpecification
        self.keyspaceName = keyspaceName
        self.pointInTimeRecovery = pointInTimeRecovery
        self.schemaDefinition = schemaDefinition
        self.tableName = tableName
        self.tags = tags
        self.ttl = ttl
    }
}
