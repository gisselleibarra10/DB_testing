// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTablesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let tables: [KeyspacesClientTypes.TableSummary]?
}

extension ListTablesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case tables
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let tablesContainer = try containerValues.decodeIfPresent([KeyspacesClientTypes.TableSummary?].self, forKey: .tables)
        var tablesDecoded0:[KeyspacesClientTypes.TableSummary]? = nil
        if let tablesContainer = tablesContainer {
            tablesDecoded0 = [KeyspacesClientTypes.TableSummary]()
            for structure0 in tablesContainer {
                if let structure0 = structure0 {
                    tablesDecoded0?.append(structure0)
                }
            }
        }
        tables = tablesDecoded0
    }
}
