// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTableOutputResponseBody: Swift.Equatable {
    let keyspaceName: Swift.String?
    let tableName: Swift.String?
    let resourceArn: Swift.String?
    let creationTimestamp: ClientRuntime.Date?
    let status: KeyspacesClientTypes.TableStatus?
    let schemaDefinition: KeyspacesClientTypes.SchemaDefinition?
    let capacitySpecification: KeyspacesClientTypes.CapacitySpecificationSummary?
    let encryptionSpecification: KeyspacesClientTypes.EncryptionSpecification?
    let pointInTimeRecovery: KeyspacesClientTypes.PointInTimeRecoverySummary?
    let ttl: KeyspacesClientTypes.TimeToLive?
    let defaultTimeToLive: Swift.Int?
    let comment: KeyspacesClientTypes.Comment?
}

extension GetTableOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case capacitySpecification
        case comment
        case creationTimestamp
        case defaultTimeToLive
        case encryptionSpecification
        case keyspaceName
        case pointInTimeRecovery
        case resourceArn
        case schemaDefinition
        case status
        case tableName
        case ttl
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyspaceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyspaceName)
        keyspaceName = keyspaceNameDecoded
        let tableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let creationTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTimestamp)
        creationTimestamp = creationTimestampDecoded
        let statusDecoded = try containerValues.decodeIfPresent(KeyspacesClientTypes.TableStatus.self, forKey: .status)
        status = statusDecoded
        let schemaDefinitionDecoded = try containerValues.decodeIfPresent(KeyspacesClientTypes.SchemaDefinition.self, forKey: .schemaDefinition)
        schemaDefinition = schemaDefinitionDecoded
        let capacitySpecificationDecoded = try containerValues.decodeIfPresent(KeyspacesClientTypes.CapacitySpecificationSummary.self, forKey: .capacitySpecification)
        capacitySpecification = capacitySpecificationDecoded
        let encryptionSpecificationDecoded = try containerValues.decodeIfPresent(KeyspacesClientTypes.EncryptionSpecification.self, forKey: .encryptionSpecification)
        encryptionSpecification = encryptionSpecificationDecoded
        let pointInTimeRecoveryDecoded = try containerValues.decodeIfPresent(KeyspacesClientTypes.PointInTimeRecoverySummary.self, forKey: .pointInTimeRecovery)
        pointInTimeRecovery = pointInTimeRecoveryDecoded
        let ttlDecoded = try containerValues.decodeIfPresent(KeyspacesClientTypes.TimeToLive.self, forKey: .ttl)
        ttl = ttlDecoded
        let defaultTimeToLiveDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .defaultTimeToLive)
        defaultTimeToLive = defaultTimeToLiveDecoded
        let commentDecoded = try containerValues.decodeIfPresent(KeyspacesClientTypes.Comment.self, forKey: .comment)
        comment = commentDecoded
    }
}
