// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateTableInput: Swift.Equatable {
    /// For each column to be added to the specified table: • name - The name of the column. • type - An Amazon Keyspaces data type. For more information, see [Data types](https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.data-types) in the Amazon Keyspaces Developer Guide.
    public var addColumns: [KeyspacesClientTypes.ColumnDefinition]?
    /// Modifies the read/write throughput capacity mode for the table. The options are: • throughputMode:PAY_PER_REQUEST and • throughputMode:PROVISIONED - Provisioned capacity mode requires readCapacityUnits and writeCapacityUnits as input. The default is throughput_mode:PAY_PER_REQUEST. For more information, see [Read/write capacity modes](https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html) in the Amazon Keyspaces Developer Guide.
    public var capacitySpecification: KeyspacesClientTypes.CapacitySpecification?
    /// The default Time to Live setting in seconds for the table. For more information, see [Setting the default TTL value for a table](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl) in the Amazon Keyspaces Developer Guide.
    public var defaultTimeToLive: Swift.Int?
    /// Modifies the encryption settings of the table. You can choose one of the following KMS key (KMS key): • type:AWS_OWNED_KMS_KEY - This key is owned by Amazon Keyspaces. • type:CUSTOMER_MANAGED_KMS_KEY - This key is stored in your account and is created, owned, and managed by you. This option requires the kms_key_identifier of the KMS key in Amazon Resource Name (ARN) format as input. The default is AWS_OWNED_KMS_KEY. For more information, see [Encryption at rest](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html) in the Amazon Keyspaces Developer Guide.
    public var encryptionSpecification: KeyspacesClientTypes.EncryptionSpecification?
    /// The name of the keyspace the specified table is stored in.
    /// This member is required.
    public var keyspaceName: Swift.String?
    /// Modifies the pointInTimeRecovery settings of the table. The options are: • ENABLED • DISABLED If it's not specified, the default is DISABLED. For more information, see [Point-in-time recovery](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html) in the Amazon Keyspaces Developer Guide.
    public var pointInTimeRecovery: KeyspacesClientTypes.PointInTimeRecovery?
    /// The name of the table.
    /// This member is required.
    public var tableName: Swift.String?
    /// Modifies Time to Live custom settings for the table. The options are: • status:enabled • status:disabled The default is status:disabled. After ttl is enabled, you can't disable it for the table. For more information, see [Expiring data by using Amazon Keyspaces Time to Live (TTL)](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html) in the Amazon Keyspaces Developer Guide.
    public var ttl: KeyspacesClientTypes.TimeToLive?

    public init (
        addColumns: [KeyspacesClientTypes.ColumnDefinition]? = nil,
        capacitySpecification: KeyspacesClientTypes.CapacitySpecification? = nil,
        defaultTimeToLive: Swift.Int? = nil,
        encryptionSpecification: KeyspacesClientTypes.EncryptionSpecification? = nil,
        keyspaceName: Swift.String? = nil,
        pointInTimeRecovery: KeyspacesClientTypes.PointInTimeRecovery? = nil,
        tableName: Swift.String? = nil,
        ttl: KeyspacesClientTypes.TimeToLive? = nil
    )
    {
        self.addColumns = addColumns
        self.capacitySpecification = capacitySpecification
        self.defaultTimeToLive = defaultTimeToLive
        self.encryptionSpecification = encryptionSpecification
        self.keyspaceName = keyspaceName
        self.pointInTimeRecovery = pointInTimeRecovery
        self.tableName = tableName
        self.ttl = ttl
    }
}
