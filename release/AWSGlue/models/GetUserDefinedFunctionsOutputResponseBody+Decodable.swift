// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUserDefinedFunctionsOutputResponseBody: Swift.Equatable {
    let userDefinedFunctions: [GlueClientTypes.UserDefinedFunction]?
    let nextToken: Swift.String?
}

extension GetUserDefinedFunctionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case userDefinedFunctions = "UserDefinedFunctions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userDefinedFunctionsContainer = try containerValues.decodeIfPresent([GlueClientTypes.UserDefinedFunction?].self, forKey: .userDefinedFunctions)
        var userDefinedFunctionsDecoded0:[GlueClientTypes.UserDefinedFunction]? = nil
        if let userDefinedFunctionsContainer = userDefinedFunctionsContainer {
            userDefinedFunctionsDecoded0 = [GlueClientTypes.UserDefinedFunction]()
            for structure0 in userDefinedFunctionsContainer {
                if let structure0 = structure0 {
                    userDefinedFunctionsDecoded0?.append(structure0)
                }
            }
        }
        userDefinedFunctions = userDefinedFunctionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
