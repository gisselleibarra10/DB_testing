// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.ColumnStatisticsData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case binaryColumnStatisticsData = "BinaryColumnStatisticsData"
        case booleanColumnStatisticsData = "BooleanColumnStatisticsData"
        case dateColumnStatisticsData = "DateColumnStatisticsData"
        case decimalColumnStatisticsData = "DecimalColumnStatisticsData"
        case doubleColumnStatisticsData = "DoubleColumnStatisticsData"
        case longColumnStatisticsData = "LongColumnStatisticsData"
        case stringColumnStatisticsData = "StringColumnStatisticsData"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let binaryColumnStatisticsData = self.binaryColumnStatisticsData {
            try encodeContainer.encode(binaryColumnStatisticsData, forKey: .binaryColumnStatisticsData)
        }
        if let booleanColumnStatisticsData = self.booleanColumnStatisticsData {
            try encodeContainer.encode(booleanColumnStatisticsData, forKey: .booleanColumnStatisticsData)
        }
        if let dateColumnStatisticsData = self.dateColumnStatisticsData {
            try encodeContainer.encode(dateColumnStatisticsData, forKey: .dateColumnStatisticsData)
        }
        if let decimalColumnStatisticsData = self.decimalColumnStatisticsData {
            try encodeContainer.encode(decimalColumnStatisticsData, forKey: .decimalColumnStatisticsData)
        }
        if let doubleColumnStatisticsData = self.doubleColumnStatisticsData {
            try encodeContainer.encode(doubleColumnStatisticsData, forKey: .doubleColumnStatisticsData)
        }
        if let longColumnStatisticsData = self.longColumnStatisticsData {
            try encodeContainer.encode(longColumnStatisticsData, forKey: .longColumnStatisticsData)
        }
        if let stringColumnStatisticsData = self.stringColumnStatisticsData {
            try encodeContainer.encode(stringColumnStatisticsData, forKey: .stringColumnStatisticsData)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(GlueClientTypes.ColumnStatisticsType.self, forKey: .type)
        type = typeDecoded
        let booleanColumnStatisticsDataDecoded = try containerValues.decodeIfPresent(GlueClientTypes.BooleanColumnStatisticsData.self, forKey: .booleanColumnStatisticsData)
        booleanColumnStatisticsData = booleanColumnStatisticsDataDecoded
        let dateColumnStatisticsDataDecoded = try containerValues.decodeIfPresent(GlueClientTypes.DateColumnStatisticsData.self, forKey: .dateColumnStatisticsData)
        dateColumnStatisticsData = dateColumnStatisticsDataDecoded
        let decimalColumnStatisticsDataDecoded = try containerValues.decodeIfPresent(GlueClientTypes.DecimalColumnStatisticsData.self, forKey: .decimalColumnStatisticsData)
        decimalColumnStatisticsData = decimalColumnStatisticsDataDecoded
        let doubleColumnStatisticsDataDecoded = try containerValues.decodeIfPresent(GlueClientTypes.DoubleColumnStatisticsData.self, forKey: .doubleColumnStatisticsData)
        doubleColumnStatisticsData = doubleColumnStatisticsDataDecoded
        let longColumnStatisticsDataDecoded = try containerValues.decodeIfPresent(GlueClientTypes.LongColumnStatisticsData.self, forKey: .longColumnStatisticsData)
        longColumnStatisticsData = longColumnStatisticsDataDecoded
        let stringColumnStatisticsDataDecoded = try containerValues.decodeIfPresent(GlueClientTypes.StringColumnStatisticsData.self, forKey: .stringColumnStatisticsData)
        stringColumnStatisticsData = stringColumnStatisticsDataDecoded
        let binaryColumnStatisticsDataDecoded = try containerValues.decodeIfPresent(GlueClientTypes.BinaryColumnStatisticsData.self, forKey: .binaryColumnStatisticsData)
        binaryColumnStatisticsData = binaryColumnStatisticsDataDecoded
    }
}
