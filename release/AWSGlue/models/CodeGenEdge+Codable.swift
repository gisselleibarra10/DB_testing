// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.CodeGenEdge: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case source = "Source"
        case target = "Target"
        case targetParameter = "TargetParameter"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let source = self.source {
            try encodeContainer.encode(source, forKey: .source)
        }
        if let target = self.target {
            try encodeContainer.encode(target, forKey: .target)
        }
        if let targetParameter = self.targetParameter {
            try encodeContainer.encode(targetParameter, forKey: .targetParameter)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .source)
        source = sourceDecoded
        let targetDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .target)
        target = targetDecoded
        let targetParameterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetParameter)
        targetParameter = targetParameterDecoded
    }
}
