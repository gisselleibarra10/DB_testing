// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes {
    /// Specifies a crawler program that examines a data source and uses classifiers to try to determine its schema. If successful, the crawler records metadata concerning the data source in the Glue Data Catalog.
    public struct Crawler: Swift.Equatable {
        /// A list of UTF-8 strings that specify the custom classifiers that are associated with the crawler.
        public var classifiers: [Swift.String]?
        /// Crawler configuration information. This versioned JSON string allows users to specify aspects of a crawler's behavior. For more information, see [Include and Exclude Patterns](https://docs.aws.amazon.com/glue/latest/dg/define-crawler.html#crawler-data-stores-exclude).
        public var configuration: Swift.String?
        /// If the crawler is running, contains the total time elapsed since the last crawl began.
        public var crawlElapsedTime: Swift.Int
        /// The name of the SecurityConfiguration structure to be used by this crawler.
        public var crawlerSecurityConfiguration: Swift.String?
        /// The time that the crawler was created.
        public var creationTime: ClientRuntime.Date?
        /// The name of the database in which the crawler's output is stored.
        public var databaseName: Swift.String?
        /// A description of the crawler.
        public var description: Swift.String?
        /// Specifies whether the crawler should use Lake Formation credentials for the crawler instead of the IAM role credentials.
        public var lakeFormationConfiguration: GlueClientTypes.LakeFormationConfiguration?
        /// The status of the last crawl, and potentially error information if an error occurred.
        public var lastCrawl: GlueClientTypes.LastCrawlInfo?
        /// The time that the crawler was last updated.
        public var lastUpdated: ClientRuntime.Date?
        /// A configuration that specifies whether data lineage is enabled for the crawler.
        public var lineageConfiguration: GlueClientTypes.LineageConfiguration?
        /// The name of the crawler.
        public var name: Swift.String?
        /// A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.
        public var recrawlPolicy: GlueClientTypes.RecrawlPolicy?
        /// The Amazon Resource Name (ARN) of an IAM role that's used to access customer resources, such as Amazon Simple Storage Service (Amazon S3) data.
        public var role: Swift.String?
        /// For scheduled crawlers, the schedule when the crawler runs.
        public var schedule: GlueClientTypes.Schedule?
        /// The policy that specifies update and delete behaviors for the crawler.
        public var schemaChangePolicy: GlueClientTypes.SchemaChangePolicy?
        /// Indicates whether the crawler is running, or whether a run is pending.
        public var state: GlueClientTypes.CrawlerState?
        /// The prefix added to the names of tables that are created.
        public var tablePrefix: Swift.String?
        /// A collection of targets to crawl.
        public var targets: GlueClientTypes.CrawlerTargets?
        /// The version of the crawler.
        public var version: Swift.Int

        public init (
            classifiers: [Swift.String]? = nil,
            configuration: Swift.String? = nil,
            crawlElapsedTime: Swift.Int = 0,
            crawlerSecurityConfiguration: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            databaseName: Swift.String? = nil,
            description: Swift.String? = nil,
            lakeFormationConfiguration: GlueClientTypes.LakeFormationConfiguration? = nil,
            lastCrawl: GlueClientTypes.LastCrawlInfo? = nil,
            lastUpdated: ClientRuntime.Date? = nil,
            lineageConfiguration: GlueClientTypes.LineageConfiguration? = nil,
            name: Swift.String? = nil,
            recrawlPolicy: GlueClientTypes.RecrawlPolicy? = nil,
            role: Swift.String? = nil,
            schedule: GlueClientTypes.Schedule? = nil,
            schemaChangePolicy: GlueClientTypes.SchemaChangePolicy? = nil,
            state: GlueClientTypes.CrawlerState? = nil,
            tablePrefix: Swift.String? = nil,
            targets: GlueClientTypes.CrawlerTargets? = nil,
            version: Swift.Int = 0
        )
        {
            self.classifiers = classifiers
            self.configuration = configuration
            self.crawlElapsedTime = crawlElapsedTime
            self.crawlerSecurityConfiguration = crawlerSecurityConfiguration
            self.creationTime = creationTime
            self.databaseName = databaseName
            self.description = description
            self.lakeFormationConfiguration = lakeFormationConfiguration
            self.lastCrawl = lastCrawl
            self.lastUpdated = lastUpdated
            self.lineageConfiguration = lineageConfiguration
            self.name = name
            self.recrawlPolicy = recrawlPolicy
            self.role = role
            self.schedule = schedule
            self.schemaChangePolicy = schemaChangePolicy
            self.state = state
            self.tablePrefix = tablePrefix
            self.targets = targets
            self.version = version
        }
    }

}
