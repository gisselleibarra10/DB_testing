// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetBlueprintsOutputResponseBody: Swift.Equatable {
    let blueprints: [GlueClientTypes.Blueprint]?
    let missingBlueprints: [Swift.String]?
}

extension BatchGetBlueprintsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blueprints = "Blueprints"
        case missingBlueprints = "MissingBlueprints"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blueprintsContainer = try containerValues.decodeIfPresent([GlueClientTypes.Blueprint?].self, forKey: .blueprints)
        var blueprintsDecoded0:[GlueClientTypes.Blueprint]? = nil
        if let blueprintsContainer = blueprintsContainer {
            blueprintsDecoded0 = [GlueClientTypes.Blueprint]()
            for structure0 in blueprintsContainer {
                if let structure0 = structure0 {
                    blueprintsDecoded0?.append(structure0)
                }
            }
        }
        blueprints = blueprintsDecoded0
        let missingBlueprintsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .missingBlueprints)
        var missingBlueprintsDecoded0:[Swift.String]? = nil
        if let missingBlueprintsContainer = missingBlueprintsContainer {
            missingBlueprintsDecoded0 = [Swift.String]()
            for string0 in missingBlueprintsContainer {
                if let string0 = string0 {
                    missingBlueprintsDecoded0?.append(string0)
                }
            }
        }
        missingBlueprints = missingBlueprintsDecoded0
    }
}
