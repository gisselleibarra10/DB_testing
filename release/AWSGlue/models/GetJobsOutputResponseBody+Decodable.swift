// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetJobsOutputResponseBody: Swift.Equatable {
    let jobs: [GlueClientTypes.Job]?
    let nextToken: Swift.String?
}

extension GetJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jobs = "Jobs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobsContainer = try containerValues.decodeIfPresent([GlueClientTypes.Job?].self, forKey: .jobs)
        var jobsDecoded0:[GlueClientTypes.Job]? = nil
        if let jobsContainer = jobsContainer {
            jobsDecoded0 = [GlueClientTypes.Job]()
            for structure0 in jobsContainer {
                if let structure0 = structure0 {
                    jobsDecoded0?.append(structure0)
                }
            }
        }
        jobs = jobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
