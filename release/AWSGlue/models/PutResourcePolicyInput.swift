// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutResourcePolicyInput: Swift.Equatable {
    /// If 'TRUE', indicates that you are using both methods to grant cross-account access to Data Catalog resources:
    ///
    /// * By directly updating the resource policy with PutResourePolicy
    ///
    /// * By using the Grant permissions command on the Amazon Web Services Management Console.
    ///
    ///
    /// Must be set to 'TRUE' if you have already used the Management Console to grant cross-account access, otherwise the call fails. Default is 'FALSE'.
    public var enableHybrid: GlueClientTypes.EnableHybridValues?
    /// A value of MUST_EXIST is used to update a policy. A value of NOT_EXIST is used to create a new policy. If a value of NONE or a null value is used, the call does not depend on the existence of a policy.
    public var policyExistsCondition: GlueClientTypes.ExistCondition?
    /// The hash value returned when the previous policy was set using PutResourcePolicy. Its purpose is to prevent concurrent modifications of a policy. Do not use this parameter if no previous policy has been set.
    public var policyHashCondition: Swift.String?
    /// Contains the policy document to set, in JSON format.
    /// This member is required.
    public var policyInJson: Swift.String?
    /// Do not use. For internal use only.
    public var resourceArn: Swift.String?

    public init (
        enableHybrid: GlueClientTypes.EnableHybridValues? = nil,
        policyExistsCondition: GlueClientTypes.ExistCondition? = nil,
        policyHashCondition: Swift.String? = nil,
        policyInJson: Swift.String? = nil,
        resourceArn: Swift.String? = nil
    )
    {
        self.enableHybrid = enableHybrid
        self.policyExistsCondition = policyExistsCondition
        self.policyHashCondition = policyHashCondition
        self.policyInJson = policyInJson
        self.resourceArn = resourceArn
    }
}
