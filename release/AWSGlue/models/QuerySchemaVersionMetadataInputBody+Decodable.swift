// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct QuerySchemaVersionMetadataInputBody: Swift.Equatable {
    let schemaId: GlueClientTypes.SchemaId?
    let schemaVersionNumber: GlueClientTypes.SchemaVersionNumber?
    let schemaVersionId: Swift.String?
    let metadataList: [GlueClientTypes.MetadataKeyValuePair]?
    let maxResults: Swift.Int
    let nextToken: Swift.String?
}

extension QuerySchemaVersionMetadataInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case metadataList = "MetadataList"
        case nextToken = "NextToken"
        case schemaId = "SchemaId"
        case schemaVersionId = "SchemaVersionId"
        case schemaVersionNumber = "SchemaVersionNumber"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaIdDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaId.self, forKey: .schemaId)
        schemaId = schemaIdDecoded
        let schemaVersionNumberDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaVersionNumber.self, forKey: .schemaVersionNumber)
        schemaVersionNumber = schemaVersionNumberDecoded
        let schemaVersionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schemaVersionId)
        schemaVersionId = schemaVersionIdDecoded
        let metadataListContainer = try containerValues.decodeIfPresent([GlueClientTypes.MetadataKeyValuePair?].self, forKey: .metadataList)
        var metadataListDecoded0:[GlueClientTypes.MetadataKeyValuePair]? = nil
        if let metadataListContainer = metadataListContainer {
            metadataListDecoded0 = [GlueClientTypes.MetadataKeyValuePair]()
            for structure0 in metadataListContainer {
                if let structure0 = structure0 {
                    metadataListDecoded0?.append(structure0)
                }
            }
        }
        metadataList = metadataListDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults) ?? 0
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
