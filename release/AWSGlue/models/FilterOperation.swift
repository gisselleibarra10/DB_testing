// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GlueClientTypes {
    public enum FilterOperation: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case eq
        case gt
        case gte
        case isnull
        case lt
        case lte
        case regex
        case sdkUnknown(Swift.String)

        public static var allCases: [FilterOperation] {
            return [
                .eq,
                .gt,
                .gte,
                .isnull,
                .lt,
                .lte,
                .regex,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .eq: return "EQ"
            case .gt: return "GT"
            case .gte: return "GTE"
            case .isnull: return "ISNULL"
            case .lt: return "LT"
            case .lte: return "LTE"
            case .regex: return "REGEX"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = FilterOperation(rawValue: rawValue) ?? FilterOperation.sdkUnknown(rawValue)
        }
    }
}
