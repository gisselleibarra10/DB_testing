// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRegistriesOutputResponseBody: Swift.Equatable {
    let registries: [GlueClientTypes.RegistryListItem]?
    let nextToken: Swift.String?
}

extension ListRegistriesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case registries = "Registries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registriesContainer = try containerValues.decodeIfPresent([GlueClientTypes.RegistryListItem?].self, forKey: .registries)
        var registriesDecoded0:[GlueClientTypes.RegistryListItem]? = nil
        if let registriesContainer = registriesContainer {
            registriesDecoded0 = [GlueClientTypes.RegistryListItem]()
            for structure0 in registriesContainer {
                if let structure0 = structure0 {
                    registriesDecoded0?.append(structure0)
                }
            }
        }
        registries = registriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
