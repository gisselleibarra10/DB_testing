// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GlueClientTypes {
    public enum ColumnStatisticsType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case binary
        case boolean
        case date
        case decimal
        case double
        case long
        case string
        case sdkUnknown(Swift.String)

        public static var allCases: [ColumnStatisticsType] {
            return [
                .binary,
                .boolean,
                .date,
                .decimal,
                .double,
                .long,
                .string,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .binary: return "BINARY"
            case .boolean: return "BOOLEAN"
            case .date: return "DATE"
            case .decimal: return "DECIMAL"
            case .double: return "DOUBLE"
            case .long: return "LONG"
            case .string: return "STRING"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ColumnStatisticsType(rawValue: rawValue) ?? ColumnStatisticsType.sdkUnknown(rawValue)
        }
    }
}
