// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SearchTablesInput: Swift.Equatable {
    /// A unique identifier, consisting of  account_id .
    public var catalogId: Swift.String?
    /// A list of key-value pairs, and a comparator used to filter the search results. Returns all entities matching the predicate. The Comparator member of the PropertyPredicate struct is used only for time fields, and can be omitted for other field types. Also, when comparing string values, such as when Key=Name, a fuzzy match algorithm is used. The Key field (for example, the value of the Name field) is split on certain punctuation characters, for example, -, :, #, etc. into tokens. Then each token is exact-match compared with the Value member of PropertyPredicate. For example, if Key=Name and Value=link, tables named customer-link and xx-link-yy are returned, but xxlinkyy is not returned.
    public var filters: [GlueClientTypes.PropertyPredicate]?
    /// The maximum number of tables to return in a single response.
    public var maxResults: Swift.Int?
    /// A continuation token, included if this is a continuation call.
    public var nextToken: Swift.String?
    /// Allows you to specify that you want to search the tables shared with your account. The allowable values are FOREIGN or ALL.
    ///
    /// * If set to FOREIGN, will search the tables shared with your account.
    ///
    /// * If set to ALL, will search the tables shared with your account, as well as the tables in yor local account.
    public var resourceShareType: GlueClientTypes.ResourceShareType?
    /// A string used for a text search. Specifying a value in quotes filters based on an exact match to the value.
    public var searchText: Swift.String?
    /// A list of criteria for sorting the results by a field name, in an ascending or descending order.
    public var sortCriteria: [GlueClientTypes.SortCriterion]?

    public init (
        catalogId: Swift.String? = nil,
        filters: [GlueClientTypes.PropertyPredicate]? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        resourceShareType: GlueClientTypes.ResourceShareType? = nil,
        searchText: Swift.String? = nil,
        sortCriteria: [GlueClientTypes.SortCriterion]? = nil
    )
    {
        self.catalogId = catalogId
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.resourceShareType = resourceShareType
        self.searchText = searchText
        self.sortCriteria = sortCriteria
    }
}
