// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBlueprintInputBody: Swift.Equatable {
    let name: Swift.String?
    let includeBlueprint: Swift.Bool?
    let includeParameterSpec: Swift.Bool?
}

extension GetBlueprintInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case includeBlueprint = "IncludeBlueprint"
        case includeParameterSpec = "IncludeParameterSpec"
        case name = "Name"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let includeBlueprintDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeBlueprint)
        includeBlueprint = includeBlueprintDecoded
        let includeParameterSpecDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeParameterSpec)
        includeParameterSpec = includeParameterSpecDecoded
    }
}
