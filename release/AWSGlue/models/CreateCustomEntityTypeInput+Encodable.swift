// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateCustomEntityTypeInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contextWords = "ContextWords"
        case name = "Name"
        case regexString = "RegexString"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contextWords = contextWords {
            var contextWordsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .contextWords)
            for contextwords0 in contextWords {
                try contextWordsContainer.encode(contextwords0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let regexString = self.regexString {
            try encodeContainer.encode(regexString, forKey: .regexString)
        }
    }
}
