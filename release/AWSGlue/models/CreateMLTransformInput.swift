// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateMLTransformInput: Swift.Equatable {
    /// A description of the machine learning transform that is being defined. The default is an empty string.
    public var description: Swift.String?
    /// This value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see [Glue Versions](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions) in the developer guide.
    public var glueVersion: Swift.String?
    /// A list of Glue table definitions used by the transform.
    /// This member is required.
    public var inputRecordTables: [GlueClientTypes.GlueTable]?
    /// The number of Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the [Glue pricing page](https://aws.amazon.com/glue/pricing/). MaxCapacity is a mutually exclusive option with NumberOfWorkers and WorkerType.
    ///
    /// * If either NumberOfWorkers or WorkerType is set, then MaxCapacity cannot be set.
    ///
    /// * If MaxCapacity is set then neither NumberOfWorkers or WorkerType can be set.
    ///
    /// * If WorkerType is set, then NumberOfWorkers is required (and vice versa).
    ///
    /// * MaxCapacity and NumberOfWorkers must both be at least 1.
    ///
    ///
    /// When the WorkerType field is set to a value other than Standard, the MaxCapacity field is set automatically and becomes read-only. When the WorkerType field is set to a value other than Standard, the MaxCapacity field is set automatically and becomes read-only.
    public var maxCapacity: Swift.Double?
    /// The maximum number of times to retry a task for this transform after a task run fails.
    public var maxRetries: Swift.Int?
    /// The unique name that you give the transform when you create it.
    /// This member is required.
    public var name: Swift.String?
    /// The number of workers of a defined workerType that are allocated when this task runs. If WorkerType is set, then NumberOfWorkers is required (and vice versa).
    public var numberOfWorkers: Swift.Int?
    /// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type.
    /// This member is required.
    public var parameters: GlueClientTypes.TransformParameters?
    /// The name or Amazon Resource Name (ARN) of the IAM role with the required permissions. The required permissions include both Glue service role permissions to Glue resources, and Amazon S3 permissions required by the transform.
    ///
    /// * This role needs Glue service role permissions to allow access to resources in Glue. See [Attach a Policy to IAM Users That Access Glue](https://docs.aws.amazon.com/glue/latest/dg/attach-policy-iam-user.html).
    ///
    /// * This role needs permission to your Amazon Simple Storage Service (Amazon S3) sources, targets, temporary directory, scripts, and any libraries used by the task run for this transform.
    /// This member is required.
    public var role: Swift.String?
    /// The tags to use with this machine learning transform. You may use tags to limit access to the machine learning transform. For more information about tags in Glue, see [Amazon Web Services Tags in Glue](https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html) in the developer guide.
    public var tags: [Swift.String:Swift.String]?
    /// The timeout of the task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).
    public var timeout: Swift.Int?
    /// The encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.
    public var transformEncryption: GlueClientTypes.TransformEncryption?
    /// The type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.
    ///
    /// * For the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.
    ///
    /// * For the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.
    ///
    /// * For the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.
    ///
    ///
    /// MaxCapacity is a mutually exclusive option with NumberOfWorkers and WorkerType.
    ///
    /// * If either NumberOfWorkers or WorkerType is set, then MaxCapacity cannot be set.
    ///
    /// * If MaxCapacity is set then neither NumberOfWorkers or WorkerType can be set.
    ///
    /// * If WorkerType is set, then NumberOfWorkers is required (and vice versa).
    ///
    /// * MaxCapacity and NumberOfWorkers must both be at least 1.
    public var workerType: GlueClientTypes.WorkerType?

    public init (
        description: Swift.String? = nil,
        glueVersion: Swift.String? = nil,
        inputRecordTables: [GlueClientTypes.GlueTable]? = nil,
        maxCapacity: Swift.Double? = nil,
        maxRetries: Swift.Int? = nil,
        name: Swift.String? = nil,
        numberOfWorkers: Swift.Int? = nil,
        parameters: GlueClientTypes.TransformParameters? = nil,
        role: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        timeout: Swift.Int? = nil,
        transformEncryption: GlueClientTypes.TransformEncryption? = nil,
        workerType: GlueClientTypes.WorkerType? = nil
    )
    {
        self.description = description
        self.glueVersion = glueVersion
        self.inputRecordTables = inputRecordTables
        self.maxCapacity = maxCapacity
        self.maxRetries = maxRetries
        self.name = name
        self.numberOfWorkers = numberOfWorkers
        self.parameters = parameters
        self.role = role
        self.tags = tags
        self.timeout = timeout
        self.transformEncryption = transformEncryption
        self.workerType = workerType
    }
}
