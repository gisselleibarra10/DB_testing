// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetPartitionIndexesOutputResponseBody: Swift.Equatable {
    let partitionIndexDescriptorList: [GlueClientTypes.PartitionIndexDescriptor]?
    let nextToken: Swift.String?
}

extension GetPartitionIndexesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case partitionIndexDescriptorList = "PartitionIndexDescriptorList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partitionIndexDescriptorListContainer = try containerValues.decodeIfPresent([GlueClientTypes.PartitionIndexDescriptor?].self, forKey: .partitionIndexDescriptorList)
        var partitionIndexDescriptorListDecoded0:[GlueClientTypes.PartitionIndexDescriptor]? = nil
        if let partitionIndexDescriptorListContainer = partitionIndexDescriptorListContainer {
            partitionIndexDescriptorListDecoded0 = [GlueClientTypes.PartitionIndexDescriptor]()
            for structure0 in partitionIndexDescriptorListContainer {
                if let structure0 = structure0 {
                    partitionIndexDescriptorListDecoded0?.append(structure0)
                }
            }
        }
        partitionIndexDescriptorList = partitionIndexDescriptorListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
