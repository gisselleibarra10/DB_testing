// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateWorkflowInputBody: Swift.Equatable {
    let name: Swift.String?
    let description: Swift.String?
    let defaultRunProperties: [Swift.String:Swift.String]?
    let maxConcurrentRuns: Swift.Int?
}

extension UpdateWorkflowInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultRunProperties = "DefaultRunProperties"
        case description = "Description"
        case maxConcurrentRuns = "MaxConcurrentRuns"
        case name = "Name"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let defaultRunPropertiesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .defaultRunProperties)
        var defaultRunPropertiesDecoded0: [Swift.String:Swift.String]? = nil
        if let defaultRunPropertiesContainer = defaultRunPropertiesContainer {
            defaultRunPropertiesDecoded0 = [Swift.String:Swift.String]()
            for (key0, genericstring0) in defaultRunPropertiesContainer {
                if let genericstring0 = genericstring0 {
                    defaultRunPropertiesDecoded0?[key0] = genericstring0
                }
            }
        }
        defaultRunProperties = defaultRunPropertiesDecoded0
        let maxConcurrentRunsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxConcurrentRuns)
        maxConcurrentRuns = maxConcurrentRunsDecoded
    }
}
