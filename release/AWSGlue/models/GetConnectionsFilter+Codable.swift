// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.GetConnectionsFilter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionType = "ConnectionType"
        case matchCriteria = "MatchCriteria"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionType = self.connectionType {
            try encodeContainer.encode(connectionType.rawValue, forKey: .connectionType)
        }
        if let matchCriteria = matchCriteria {
            var matchCriteriaContainer = encodeContainer.nestedUnkeyedContainer(forKey: .matchCriteria)
            for matchcriteria0 in matchCriteria {
                try matchCriteriaContainer.encode(matchcriteria0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let matchCriteriaContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .matchCriteria)
        var matchCriteriaDecoded0:[Swift.String]? = nil
        if let matchCriteriaContainer = matchCriteriaContainer {
            matchCriteriaDecoded0 = [Swift.String]()
            for string0 in matchCriteriaContainer {
                if let string0 = string0 {
                    matchCriteriaDecoded0?.append(string0)
                }
            }
        }
        matchCriteria = matchCriteriaDecoded0
        let connectionTypeDecoded = try containerValues.decodeIfPresent(GlueClientTypes.ConnectionType.self, forKey: .connectionType)
        connectionType = connectionTypeDecoded
    }
}
