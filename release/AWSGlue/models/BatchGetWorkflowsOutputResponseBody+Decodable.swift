// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetWorkflowsOutputResponseBody: Swift.Equatable {
    let workflows: [GlueClientTypes.Workflow]?
    let missingWorkflows: [Swift.String]?
}

extension BatchGetWorkflowsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case missingWorkflows = "MissingWorkflows"
        case workflows = "Workflows"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workflowsContainer = try containerValues.decodeIfPresent([GlueClientTypes.Workflow?].self, forKey: .workflows)
        var workflowsDecoded0:[GlueClientTypes.Workflow]? = nil
        if let workflowsContainer = workflowsContainer {
            workflowsDecoded0 = [GlueClientTypes.Workflow]()
            for structure0 in workflowsContainer {
                if let structure0 = structure0 {
                    workflowsDecoded0?.append(structure0)
                }
            }
        }
        workflows = workflowsDecoded0
        let missingWorkflowsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .missingWorkflows)
        var missingWorkflowsDecoded0:[Swift.String]? = nil
        if let missingWorkflowsContainer = missingWorkflowsContainer {
            missingWorkflowsDecoded0 = [Swift.String]()
            for string0 in missingWorkflowsContainer {
                if let string0 = string0 {
                    missingWorkflowsDecoded0?.append(string0)
                }
            }
        }
        missingWorkflows = missingWorkflowsDecoded0
    }
}
