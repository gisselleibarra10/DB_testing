// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchStopJobRunOutputResponseBody: Swift.Equatable {
    let successfulSubmissions: [GlueClientTypes.BatchStopJobRunSuccessfulSubmission]?
    let errors: [GlueClientTypes.BatchStopJobRunError]?
}

extension BatchStopJobRunOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errors = "Errors"
        case successfulSubmissions = "SuccessfulSubmissions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successfulSubmissionsContainer = try containerValues.decodeIfPresent([GlueClientTypes.BatchStopJobRunSuccessfulSubmission?].self, forKey: .successfulSubmissions)
        var successfulSubmissionsDecoded0:[GlueClientTypes.BatchStopJobRunSuccessfulSubmission]? = nil
        if let successfulSubmissionsContainer = successfulSubmissionsContainer {
            successfulSubmissionsDecoded0 = [GlueClientTypes.BatchStopJobRunSuccessfulSubmission]()
            for structure0 in successfulSubmissionsContainer {
                if let structure0 = structure0 {
                    successfulSubmissionsDecoded0?.append(structure0)
                }
            }
        }
        successfulSubmissions = successfulSubmissionsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([GlueClientTypes.BatchStopJobRunError?].self, forKey: .errors)
        var errorsDecoded0:[GlueClientTypes.BatchStopJobRunError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [GlueClientTypes.BatchStopJobRunError]()
            for structure0 in errorsContainer {
                if let structure0 = structure0 {
                    errorsDecoded0?.append(structure0)
                }
            }
        }
        errors = errorsDecoded0
    }
}
