// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateSchemaOutputResponse: Swift.Equatable {
    /// The schema compatibility mode.
    public var compatibility: GlueClientTypes.Compatibility?
    /// The data format of the schema definition. Currently AVRO, JSON and PROTOBUF are supported.
    public var dataFormat: GlueClientTypes.DataFormat?
    /// A description of the schema if specified when created.
    public var description: Swift.String?
    /// The latest version of the schema associated with the returned schema definition.
    public var latestSchemaVersion: Swift.Int
    /// The next version of the schema associated with the returned schema definition.
    public var nextSchemaVersion: Swift.Int
    /// The Amazon Resource Name (ARN) of the registry.
    public var registryArn: Swift.String?
    /// The name of the registry.
    public var registryName: Swift.String?
    /// The Amazon Resource Name (ARN) of the schema.
    public var schemaArn: Swift.String?
    /// The version number of the checkpoint (the last time the compatibility mode was changed).
    public var schemaCheckpoint: Swift.Int
    /// The name of the schema.
    public var schemaName: Swift.String?
    /// The status of the schema.
    public var schemaStatus: GlueClientTypes.SchemaStatus?
    /// The unique identifier of the first schema version.
    public var schemaVersionId: Swift.String?
    /// The status of the first schema version created.
    public var schemaVersionStatus: GlueClientTypes.SchemaVersionStatus?
    /// The tags for the schema.
    public var tags: [Swift.String:Swift.String]?

    public init (
        compatibility: GlueClientTypes.Compatibility? = nil,
        dataFormat: GlueClientTypes.DataFormat? = nil,
        description: Swift.String? = nil,
        latestSchemaVersion: Swift.Int = 0,
        nextSchemaVersion: Swift.Int = 0,
        registryArn: Swift.String? = nil,
        registryName: Swift.String? = nil,
        schemaArn: Swift.String? = nil,
        schemaCheckpoint: Swift.Int = 0,
        schemaName: Swift.String? = nil,
        schemaStatus: GlueClientTypes.SchemaStatus? = nil,
        schemaVersionId: Swift.String? = nil,
        schemaVersionStatus: GlueClientTypes.SchemaVersionStatus? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.compatibility = compatibility
        self.dataFormat = dataFormat
        self.description = description
        self.latestSchemaVersion = latestSchemaVersion
        self.nextSchemaVersion = nextSchemaVersion
        self.registryArn = registryArn
        self.registryName = registryName
        self.schemaArn = schemaArn
        self.schemaCheckpoint = schemaCheckpoint
        self.schemaName = schemaName
        self.schemaStatus = schemaStatus
        self.schemaVersionId = schemaVersionId
        self.schemaVersionStatus = schemaVersionStatus
        self.tags = tags
    }
}
