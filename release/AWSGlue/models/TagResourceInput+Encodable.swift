// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TagResourceInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceArn = "ResourceArn"
        case tagsToAdd = "TagsToAdd"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourceArn = self.resourceArn {
            try encodeContainer.encode(resourceArn, forKey: .resourceArn)
        }
        if let tagsToAdd = tagsToAdd {
            var tagsToAddContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tagsToAdd)
            for (dictKey0, tagsmap0) in tagsToAdd {
                try tagsToAddContainer.encode(tagsmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
