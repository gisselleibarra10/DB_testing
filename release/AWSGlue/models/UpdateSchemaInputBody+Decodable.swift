// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateSchemaInputBody: Swift.Equatable {
    let schemaId: GlueClientTypes.SchemaId?
    let schemaVersionNumber: GlueClientTypes.SchemaVersionNumber?
    let compatibility: GlueClientTypes.Compatibility?
    let description: Swift.String?
}

extension UpdateSchemaInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case compatibility = "Compatibility"
        case description = "Description"
        case schemaId = "SchemaId"
        case schemaVersionNumber = "SchemaVersionNumber"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaIdDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaId.self, forKey: .schemaId)
        schemaId = schemaIdDecoded
        let schemaVersionNumberDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaVersionNumber.self, forKey: .schemaVersionNumber)
        schemaVersionNumber = schemaVersionNumberDecoded
        let compatibilityDecoded = try containerValues.decodeIfPresent(GlueClientTypes.Compatibility.self, forKey: .compatibility)
        compatibility = compatibilityDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
    }
}
