// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDevEndpointInput: Swift.Equatable {
    /// A map of arguments used to configure the DevEndpoint.
    public var arguments: [Swift.String:Swift.String]?
    /// The name to be assigned to the new DevEndpoint.
    /// This member is required.
    public var endpointName: Swift.String?
    /// The path to one or more Java .jar files in an S3 bucket that should be loaded in your DevEndpoint.
    public var extraJarsS3Path: Swift.String?
    /// The paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your DevEndpoint. Multiple values must be complete paths separated by a comma. You can only use pure Python libraries with a DevEndpoint. Libraries that rely on C extensions, such as the [pandas](http://pandas.pydata.org/) Python data analysis library, are not yet supported.
    public var extraPythonLibsS3Path: Swift.String?
    /// Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints. For more information about the available Glue versions and corresponding Spark and Python versions, see [Glue version](https://docs.aws.amazon.com/glue/latest/dg/add-job.html) in the developer guide. Development endpoints that are created without specifying a Glue version default to Glue 0.9. You can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.
    public var glueVersion: Swift.String?
    /// The number of Glue Data Processing Units (DPUs) to allocate to this DevEndpoint.
    public var numberOfNodes: Swift.Int
    /// The number of workers of a defined workerType that are allocated to the development endpoint. The maximum number of workers you can define are 299 for G.1X, and 149 for G.2X.
    public var numberOfWorkers: Swift.Int?
    /// The public key to be used by this DevEndpoint for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.
    public var publicKey: Swift.String?
    /// A list of public keys to be used by the development endpoints for authentication. The use of this attribute is preferred over a single public key because the public keys allow you to have a different private key per client. If you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the UpdateDevEndpoint API with the public key content in the deletePublicKeys attribute, and the list of new keys in the addPublicKeys attribute.
    public var publicKeys: [Swift.String]?
    /// The IAM role for the DevEndpoint.
    /// This member is required.
    public var roleArn: Swift.String?
    /// The name of the SecurityConfiguration structure to be used with this DevEndpoint.
    public var securityConfiguration: Swift.String?
    /// Security group IDs for the security groups to be used by the new DevEndpoint.
    public var securityGroupIds: [Swift.String]?
    /// The subnet ID for the new DevEndpoint to use.
    public var subnetId: Swift.String?
    /// The tags to use with this DevEndpoint. You may use tags to limit access to the DevEndpoint. For more information about tags in Glue, see [Amazon Web Services Tags in Glue](https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html) in the developer guide.
    public var tags: [Swift.String:Swift.String]?
    /// The type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.
    ///
    /// * For the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.
    ///
    /// * For the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.
    ///
    /// * For the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.
    ///
    ///
    /// Known issue: when a development endpoint is created with the G.2XWorkerType configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk.
    public var workerType: GlueClientTypes.WorkerType?

    public init (
        arguments: [Swift.String:Swift.String]? = nil,
        endpointName: Swift.String? = nil,
        extraJarsS3Path: Swift.String? = nil,
        extraPythonLibsS3Path: Swift.String? = nil,
        glueVersion: Swift.String? = nil,
        numberOfNodes: Swift.Int = 0,
        numberOfWorkers: Swift.Int? = nil,
        publicKey: Swift.String? = nil,
        publicKeys: [Swift.String]? = nil,
        roleArn: Swift.String? = nil,
        securityConfiguration: Swift.String? = nil,
        securityGroupIds: [Swift.String]? = nil,
        subnetId: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        workerType: GlueClientTypes.WorkerType? = nil
    )
    {
        self.arguments = arguments
        self.endpointName = endpointName
        self.extraJarsS3Path = extraJarsS3Path
        self.extraPythonLibsS3Path = extraPythonLibsS3Path
        self.glueVersion = glueVersion
        self.numberOfNodes = numberOfNodes
        self.numberOfWorkers = numberOfWorkers
        self.publicKey = publicKey
        self.publicKeys = publicKeys
        self.roleArn = roleArn
        self.securityConfiguration = securityConfiguration
        self.securityGroupIds = securityGroupIds
        self.subnetId = subnetId
        self.tags = tags
        self.workerType = workerType
    }
}
