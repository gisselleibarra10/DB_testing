// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.DecimalNumber: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case scale = "Scale"
        case unscaledValue = "UnscaledValue"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if scale != 0 {
            try encodeContainer.encode(scale, forKey: .scale)
        }
        if let unscaledValue = self.unscaledValue {
            try encodeContainer.encode(unscaledValue.base64EncodedString(), forKey: .unscaledValue)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let unscaledValueDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .unscaledValue)
        unscaledValue = unscaledValueDecoded
        let scaleDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .scale) ?? 0
        scale = scaleDecoded
    }
}
