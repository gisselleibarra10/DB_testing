// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.DeltaTarget: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionName = "ConnectionName"
        case deltaTables = "DeltaTables"
        case writeManifest = "WriteManifest"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionName = self.connectionName {
            try encodeContainer.encode(connectionName, forKey: .connectionName)
        }
        if let deltaTables = deltaTables {
            var deltaTablesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .deltaTables)
            for pathlist0 in deltaTables {
                try deltaTablesContainer.encode(pathlist0)
            }
        }
        if let writeManifest = self.writeManifest {
            try encodeContainer.encode(writeManifest, forKey: .writeManifest)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deltaTablesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .deltaTables)
        var deltaTablesDecoded0:[Swift.String]? = nil
        if let deltaTablesContainer = deltaTablesContainer {
            deltaTablesDecoded0 = [Swift.String]()
            for string0 in deltaTablesContainer {
                if let string0 = string0 {
                    deltaTablesDecoded0?.append(string0)
                }
            }
        }
        deltaTables = deltaTablesDecoded0
        let connectionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectionName)
        connectionName = connectionNameDecoded
        let writeManifestDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .writeManifest)
        writeManifest = writeManifestDecoded
    }
}
