// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.S3DirectSourceAdditionalOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case boundedFiles = "BoundedFiles"
        case boundedSize = "BoundedSize"
        case enableSamplePath = "EnableSamplePath"
        case samplePath = "SamplePath"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let boundedFiles = self.boundedFiles {
            try encodeContainer.encode(boundedFiles, forKey: .boundedFiles)
        }
        if let boundedSize = self.boundedSize {
            try encodeContainer.encode(boundedSize, forKey: .boundedSize)
        }
        if let enableSamplePath = self.enableSamplePath {
            try encodeContainer.encode(enableSamplePath, forKey: .enableSamplePath)
        }
        if let samplePath = self.samplePath {
            try encodeContainer.encode(samplePath, forKey: .samplePath)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let boundedSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .boundedSize)
        boundedSize = boundedSizeDecoded
        let boundedFilesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .boundedFiles)
        boundedFiles = boundedFilesDecoded
        let enableSamplePathDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableSamplePath)
        enableSamplePath = enableSamplePathDecoded
        let samplePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .samplePath)
        samplePath = samplePathDecoded
    }
}
