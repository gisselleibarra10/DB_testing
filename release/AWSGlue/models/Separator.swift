// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GlueClientTypes {
    public enum Separator: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case comma
        case ctrla
        case pipe
        case semicolon
        case tab
        case sdkUnknown(Swift.String)

        public static var allCases: [Separator] {
            return [
                .comma,
                .ctrla,
                .pipe,
                .semicolon,
                .tab,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .comma: return "comma"
            case .ctrla: return "ctrla"
            case .pipe: return "pipe"
            case .semicolon: return "semicolon"
            case .tab: return "tab"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = Separator(rawValue: rawValue) ?? Separator.sdkUnknown(rawValue)
        }
    }
}
