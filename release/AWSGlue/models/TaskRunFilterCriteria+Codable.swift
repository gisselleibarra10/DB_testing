// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.TaskRunFilterCriteria: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case startedAfter = "StartedAfter"
        case startedBefore = "StartedBefore"
        case status = "Status"
        case taskRunType = "TaskRunType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let startedAfter = self.startedAfter {
            try encodeContainer.encode(startedAfter.timeIntervalSince1970, forKey: .startedAfter)
        }
        if let startedBefore = self.startedBefore {
            try encodeContainer.encode(startedBefore.timeIntervalSince1970, forKey: .startedBefore)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let taskRunType = self.taskRunType {
            try encodeContainer.encode(taskRunType.rawValue, forKey: .taskRunType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskRunTypeDecoded = try containerValues.decodeIfPresent(GlueClientTypes.TaskType.self, forKey: .taskRunType)
        taskRunType = taskRunTypeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(GlueClientTypes.TaskStatusType.self, forKey: .status)
        status = statusDecoded
        let startedBeforeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startedBefore)
        startedBefore = startedBeforeDecoded
        let startedAfterDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startedAfter)
        startedAfter = startedAfterDecoded
    }
}
