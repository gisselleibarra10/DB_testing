// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateDevEndpointInput: Swift.Equatable {
    /// The map of arguments to add the map of arguments used to configure the DevEndpoint. Valid arguments are:
    ///
    /// * "--enable-glue-datacatalog": ""
    ///
    ///
    /// You can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.
    public var addArguments: [Swift.String:Swift.String]?
    /// The list of public keys for the DevEndpoint to use.
    public var addPublicKeys: [Swift.String]?
    /// Custom Python or Java libraries to be loaded in the DevEndpoint.
    public var customLibraries: GlueClientTypes.DevEndpointCustomLibraries?
    /// The list of argument keys to be deleted from the map of arguments used to configure the DevEndpoint.
    public var deleteArguments: [Swift.String]?
    /// The list of public keys to be deleted from the DevEndpoint.
    public var deletePublicKeys: [Swift.String]?
    /// The name of the DevEndpoint to be updated.
    /// This member is required.
    public var endpointName: Swift.String?
    /// The public key for the DevEndpoint to use.
    public var publicKey: Swift.String?
    /// True if the list of custom libraries to be loaded in the development endpoint needs to be updated, or False if otherwise.
    public var updateEtlLibraries: Swift.Bool

    public init (
        addArguments: [Swift.String:Swift.String]? = nil,
        addPublicKeys: [Swift.String]? = nil,
        customLibraries: GlueClientTypes.DevEndpointCustomLibraries? = nil,
        deleteArguments: [Swift.String]? = nil,
        deletePublicKeys: [Swift.String]? = nil,
        endpointName: Swift.String? = nil,
        publicKey: Swift.String? = nil,
        updateEtlLibraries: Swift.Bool = false
    )
    {
        self.addArguments = addArguments
        self.addPublicKeys = addPublicKeys
        self.customLibraries = customLibraries
        self.deleteArguments = deleteArguments
        self.deletePublicKeys = deletePublicKeys
        self.endpointName = endpointName
        self.publicKey = publicKey
        self.updateEtlLibraries = updateEtlLibraries
    }
}
