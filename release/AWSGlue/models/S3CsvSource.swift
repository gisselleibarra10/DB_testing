// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GlueClientTypes {
    /// Specifies a command-separated value (CSV) data store stored in Amazon S3.
    public struct S3CsvSource: Swift.Equatable {
        /// Specifies additional connection options.
        public var additionalOptions: GlueClientTypes.S3DirectSourceAdditionalOptions?
        /// Specifies how the data is compressed. This is generally not necessary if the data has a standard file extension. Possible values are "gzip" and "bzip").
        public var compressionType: GlueClientTypes.CompressionType?
        /// Specifies a character to use for escaping. This option is used only when reading CSV files. The default value is none. If enabled, the character which immediately follows is used as-is, except for a small set of well-known escapes (\n, \r, \t, and \0).
        public var escaper: Swift.String?
        /// A string containing a JSON list of Unix-style glob patterns to exclude. For example, "[\"**.pdf\"]" excludes all PDF files.
        public var exclusions: [Swift.String]?
        /// Grouping files is turned on by default when the input contains more than 50,000 files. To turn on grouping with fewer than 50,000 files, set this parameter to "inPartition". To disable grouping when there are more than 50,000 files, set this parameter to "none".
        public var groupFiles: Swift.String?
        /// The target group size in bytes. The default is computed based on the input data size and the size of your cluster. When there are fewer than 50,000 input files, "groupFiles" must be set to "inPartition" for this to take effect.
        public var groupSize: Swift.String?
        /// This option controls the duration in milliseconds after which the s3 listing is likely to be consistent. Files with modification timestamps falling within the last maxBand milliseconds are tracked specially when using JobBookmarks to account for Amazon S3 eventual consistency. Most users don't need to set this option. The default is 900000 milliseconds, or 15 minutes.
        public var maxBand: Swift.Int?
        /// This option specifies the maximum number of files to save from the last maxBand seconds. If this number is exceeded, extra files are skipped and only processed in the next job run.
        public var maxFilesInBand: Swift.Int?
        /// A Boolean value that specifies whether a single record can span multiple lines. This can occur when a field contains a quoted new-line character. You must set this option to True if any record spans multiple lines. The default value is False, which allows for more aggressive file-splitting during parsing.
        public var multiline: Swift.Bool?
        /// The name of the data store.
        /// This member is required.
        public var name: Swift.String?
        /// A Boolean value that specifies whether to use the advanced SIMD CSV reader along with Apache Arrow based columnar memory formats. Only available in Glue version 3.0.
        public var optimizePerformance: Swift.Bool
        /// Specifies the data schema for the S3 CSV source.
        public var outputSchemas: [GlueClientTypes.GlueSchema]?
        /// A list of the Amazon S3 paths to read from.
        /// This member is required.
        public var paths: [Swift.String]?
        /// Specifies the character to use for quoting. The default is a double quote: '"'. Set this to -1 to turn off quoting entirely.
        /// This member is required.
        public var quoteChar: GlueClientTypes.QuoteChar?
        /// If set to true, recursively reads files in all subdirectories under the specified paths.
        public var recurse: Swift.Bool?
        /// Specifies the delimiter character. The default is a comma: ",", but any other character can be specified.
        /// This member is required.
        public var separator: GlueClientTypes.Separator?
        /// A Boolean value that specifies whether to skip the first data line. The default value is False.
        public var skipFirst: Swift.Bool?
        /// A Boolean value that specifies whether to treat the first line as a header. The default value is False.
        public var withHeader: Swift.Bool?
        /// A Boolean value that specifies whether to write the header to output. The default value is True.
        public var writeHeader: Swift.Bool?

        public init (
            additionalOptions: GlueClientTypes.S3DirectSourceAdditionalOptions? = nil,
            compressionType: GlueClientTypes.CompressionType? = nil,
            escaper: Swift.String? = nil,
            exclusions: [Swift.String]? = nil,
            groupFiles: Swift.String? = nil,
            groupSize: Swift.String? = nil,
            maxBand: Swift.Int? = nil,
            maxFilesInBand: Swift.Int? = nil,
            multiline: Swift.Bool? = nil,
            name: Swift.String? = nil,
            optimizePerformance: Swift.Bool = false,
            outputSchemas: [GlueClientTypes.GlueSchema]? = nil,
            paths: [Swift.String]? = nil,
            quoteChar: GlueClientTypes.QuoteChar? = nil,
            recurse: Swift.Bool? = nil,
            separator: GlueClientTypes.Separator? = nil,
            skipFirst: Swift.Bool? = nil,
            withHeader: Swift.Bool? = nil,
            writeHeader: Swift.Bool? = nil
        )
        {
            self.additionalOptions = additionalOptions
            self.compressionType = compressionType
            self.escaper = escaper
            self.exclusions = exclusions
            self.groupFiles = groupFiles
            self.groupSize = groupSize
            self.maxBand = maxBand
            self.maxFilesInBand = maxFilesInBand
            self.multiline = multiline
            self.name = name
            self.optimizePerformance = optimizePerformance
            self.outputSchemas = outputSchemas
            self.paths = paths
            self.quoteChar = quoteChar
            self.recurse = recurse
            self.separator = separator
            self.skipFirst = skipFirst
            self.withHeader = withHeader
            self.writeHeader = writeHeader
        }
    }

}
