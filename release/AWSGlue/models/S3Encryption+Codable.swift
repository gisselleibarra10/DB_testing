// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.S3Encryption: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case kmsKeyArn = "KmsKeyArn"
        case s3EncryptionMode = "S3EncryptionMode"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kmsKeyArn = self.kmsKeyArn {
            try encodeContainer.encode(kmsKeyArn, forKey: .kmsKeyArn)
        }
        if let s3EncryptionMode = self.s3EncryptionMode {
            try encodeContainer.encode(s3EncryptionMode.rawValue, forKey: .s3EncryptionMode)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3EncryptionModeDecoded = try containerValues.decodeIfPresent(GlueClientTypes.S3EncryptionMode.self, forKey: .s3EncryptionMode)
        s3EncryptionMode = s3EncryptionModeDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
    }
}
