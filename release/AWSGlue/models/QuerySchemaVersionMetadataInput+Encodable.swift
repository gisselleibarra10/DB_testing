// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuerySchemaVersionMetadataInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case metadataList = "MetadataList"
        case nextToken = "NextToken"
        case schemaId = "SchemaId"
        case schemaVersionId = "SchemaVersionId"
        case schemaVersionNumber = "SchemaVersionNumber"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let metadataList = metadataList {
            var metadataListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .metadataList)
            for metadatalist0 in metadataList {
                try metadataListContainer.encode(metadatalist0)
            }
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let schemaId = self.schemaId {
            try encodeContainer.encode(schemaId, forKey: .schemaId)
        }
        if let schemaVersionId = self.schemaVersionId {
            try encodeContainer.encode(schemaVersionId, forKey: .schemaVersionId)
        }
        if let schemaVersionNumber = self.schemaVersionNumber {
            try encodeContainer.encode(schemaVersionNumber, forKey: .schemaVersionNumber)
        }
    }
}
