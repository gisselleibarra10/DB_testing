// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GlueClientTypes {
    /// Describes the physical storage of table data.
    public struct StorageDescriptor: Swift.Equatable {
        /// A list of locations that point to the path where a Delta table is located.
        public var additionalLocations: [Swift.String]?
        /// A list of reducer grouping columns, clustering columns, and bucketing columns in the table.
        public var bucketColumns: [Swift.String]?
        /// A list of the Columns in the table.
        public var columns: [GlueClientTypes.Column]?
        /// True if the data in the table is compressed, or False if not.
        public var compressed: Swift.Bool
        /// The input format: SequenceFileInputFormat (binary), or TextInputFormat, or a custom format.
        public var inputFormat: Swift.String?
        /// The physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.
        public var location: Swift.String?
        /// Must be specified if the table contains any dimension columns.
        public var numberOfBuckets: Swift.Int
        /// The output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat, or a custom format.
        public var outputFormat: Swift.String?
        /// The user-supplied properties in key-value form.
        public var parameters: [Swift.String:Swift.String]?
        /// An object that references a schema stored in the Glue Schema Registry. When creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.
        public var schemaReference: GlueClientTypes.SchemaReference?
        /// The serialization/deserialization (SerDe) information.
        public var serdeInfo: GlueClientTypes.SerDeInfo?
        /// The information about values that appear frequently in a column (skewed values).
        public var skewedInfo: GlueClientTypes.SkewedInfo?
        /// A list specifying the sort order of each bucket in the table.
        public var sortColumns: [GlueClientTypes.Order]?
        /// True if the table data is stored in subdirectories, or False if not.
        public var storedAsSubDirectories: Swift.Bool

        public init (
            additionalLocations: [Swift.String]? = nil,
            bucketColumns: [Swift.String]? = nil,
            columns: [GlueClientTypes.Column]? = nil,
            compressed: Swift.Bool = false,
            inputFormat: Swift.String? = nil,
            location: Swift.String? = nil,
            numberOfBuckets: Swift.Int = 0,
            outputFormat: Swift.String? = nil,
            parameters: [Swift.String:Swift.String]? = nil,
            schemaReference: GlueClientTypes.SchemaReference? = nil,
            serdeInfo: GlueClientTypes.SerDeInfo? = nil,
            skewedInfo: GlueClientTypes.SkewedInfo? = nil,
            sortColumns: [GlueClientTypes.Order]? = nil,
            storedAsSubDirectories: Swift.Bool = false
        )
        {
            self.additionalLocations = additionalLocations
            self.bucketColumns = bucketColumns
            self.columns = columns
            self.compressed = compressed
            self.inputFormat = inputFormat
            self.location = location
            self.numberOfBuckets = numberOfBuckets
            self.outputFormat = outputFormat
            self.parameters = parameters
            self.schemaReference = schemaReference
            self.serdeInfo = serdeInfo
            self.skewedInfo = skewedInfo
            self.sortColumns = sortColumns
            self.storedAsSubDirectories = storedAsSubDirectories
        }
    }

}
