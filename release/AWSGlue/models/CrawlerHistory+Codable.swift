// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.CrawlerHistory: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case crawlId = "CrawlId"
        case dPUHour = "DPUHour"
        case endTime = "EndTime"
        case errorMessage = "ErrorMessage"
        case logGroup = "LogGroup"
        case logStream = "LogStream"
        case messagePrefix = "MessagePrefix"
        case startTime = "StartTime"
        case state = "State"
        case summary = "Summary"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let crawlId = self.crawlId {
            try encodeContainer.encode(crawlId, forKey: .crawlId)
        }
        if dPUHour != 0.0 {
            try encodeContainer.encode(dPUHour, forKey: .dPUHour)
        }
        if let endTime = self.endTime {
            try encodeContainer.encode(endTime.timeIntervalSince1970, forKey: .endTime)
        }
        if let errorMessage = self.errorMessage {
            try encodeContainer.encode(errorMessage, forKey: .errorMessage)
        }
        if let logGroup = self.logGroup {
            try encodeContainer.encode(logGroup, forKey: .logGroup)
        }
        if let logStream = self.logStream {
            try encodeContainer.encode(logStream, forKey: .logStream)
        }
        if let messagePrefix = self.messagePrefix {
            try encodeContainer.encode(messagePrefix, forKey: .messagePrefix)
        }
        if let startTime = self.startTime {
            try encodeContainer.encode(startTime.timeIntervalSince1970, forKey: .startTime)
        }
        if let state = self.state {
            try encodeContainer.encode(state.rawValue, forKey: .state)
        }
        if let summary = self.summary {
            try encodeContainer.encode(summary, forKey: .summary)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let crawlIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .crawlId)
        crawlId = crawlIdDecoded
        let stateDecoded = try containerValues.decodeIfPresent(GlueClientTypes.CrawlerHistoryState.self, forKey: .state)
        state = stateDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let summaryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .summary)
        summary = summaryDecoded
        let errorMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorMessage)
        errorMessage = errorMessageDecoded
        let logGroupDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logGroup)
        logGroup = logGroupDecoded
        let logStreamDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logStream)
        logStream = logStreamDecoded
        let messagePrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .messagePrefix)
        messagePrefix = messagePrefixDecoded
        let dPUHourDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .dPUHour) ?? 0.0
        dPUHour = dPUHourDecoded
    }
}
