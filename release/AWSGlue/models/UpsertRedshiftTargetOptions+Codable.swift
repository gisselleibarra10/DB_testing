// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.UpsertRedshiftTargetOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionName = "ConnectionName"
        case tableLocation = "TableLocation"
        case upsertKeys = "UpsertKeys"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionName = self.connectionName {
            try encodeContainer.encode(connectionName, forKey: .connectionName)
        }
        if let tableLocation = self.tableLocation {
            try encodeContainer.encode(tableLocation, forKey: .tableLocation)
        }
        if let upsertKeys = upsertKeys {
            var upsertKeysContainer = encodeContainer.nestedUnkeyedContainer(forKey: .upsertKeys)
            for enclosedinstringpropertiesminone0 in upsertKeys {
                try upsertKeysContainer.encode(enclosedinstringpropertiesminone0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableLocationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .tableLocation)
        tableLocation = tableLocationDecoded
        let connectionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectionName)
        connectionName = connectionNameDecoded
        let upsertKeysContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .upsertKeys)
        var upsertKeysDecoded0:[Swift.String]? = nil
        if let upsertKeysContainer = upsertKeysContainer {
            upsertKeysDecoded0 = [Swift.String]()
            for string0 in upsertKeysContainer {
                if let string0 = string0 {
                    upsertKeysDecoded0?.append(string0)
                }
            }
        }
        upsertKeys = upsertKeysDecoded0
    }
}
