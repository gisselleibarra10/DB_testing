// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.UnfilteredPartition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authorizedColumns = "AuthorizedColumns"
        case isRegisteredWithLakeFormation = "IsRegisteredWithLakeFormation"
        case partition = "Partition"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let authorizedColumns = authorizedColumns {
            var authorizedColumnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .authorizedColumns)
            for namestringlist0 in authorizedColumns {
                try authorizedColumnsContainer.encode(namestringlist0)
            }
        }
        if isRegisteredWithLakeFormation != false {
            try encodeContainer.encode(isRegisteredWithLakeFormation, forKey: .isRegisteredWithLakeFormation)
        }
        if let partition = self.partition {
            try encodeContainer.encode(partition, forKey: .partition)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partitionDecoded = try containerValues.decodeIfPresent(GlueClientTypes.Partition.self, forKey: .partition)
        partition = partitionDecoded
        let authorizedColumnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .authorizedColumns)
        var authorizedColumnsDecoded0:[Swift.String]? = nil
        if let authorizedColumnsContainer = authorizedColumnsContainer {
            authorizedColumnsDecoded0 = [Swift.String]()
            for string0 in authorizedColumnsContainer {
                if let string0 = string0 {
                    authorizedColumnsDecoded0?.append(string0)
                }
            }
        }
        authorizedColumns = authorizedColumnsDecoded0
        let isRegisteredWithLakeFormationDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isRegisteredWithLakeFormation) ?? false
        isRegisteredWithLakeFormation = isRegisteredWithLakeFormationDecoded
    }
}
