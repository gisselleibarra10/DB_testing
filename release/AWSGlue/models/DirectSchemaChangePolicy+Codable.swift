// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.DirectSchemaChangePolicy: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case database = "Database"
        case enableUpdateCatalog = "EnableUpdateCatalog"
        case table = "Table"
        case updateBehavior = "UpdateBehavior"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let database = self.database {
            try encodeContainer.encode(database, forKey: .database)
        }
        if let enableUpdateCatalog = self.enableUpdateCatalog {
            try encodeContainer.encode(enableUpdateCatalog, forKey: .enableUpdateCatalog)
        }
        if let table = self.table {
            try encodeContainer.encode(table, forKey: .table)
        }
        if let updateBehavior = self.updateBehavior {
            try encodeContainer.encode(updateBehavior.rawValue, forKey: .updateBehavior)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enableUpdateCatalogDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableUpdateCatalog)
        enableUpdateCatalog = enableUpdateCatalogDecoded
        let updateBehaviorDecoded = try containerValues.decodeIfPresent(GlueClientTypes.UpdateCatalogBehavior.self, forKey: .updateBehavior)
        updateBehavior = updateBehaviorDecoded
        let tableDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .table)
        table = tableDecoded
        let databaseDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .database)
        database = databaseDecoded
    }
}
