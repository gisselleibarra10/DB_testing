// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMappingOutputResponseBody: Swift.Equatable {
    let mapping: [GlueClientTypes.MappingEntry]?
}

extension GetMappingOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case mapping = "Mapping"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mappingContainer = try containerValues.decodeIfPresent([GlueClientTypes.MappingEntry?].self, forKey: .mapping)
        var mappingDecoded0:[GlueClientTypes.MappingEntry]? = nil
        if let mappingContainer = mappingContainer {
            mappingDecoded0 = [GlueClientTypes.MappingEntry]()
            for structure0 in mappingContainer {
                if let structure0 = structure0 {
                    mappingDecoded0?.append(structure0)
                }
            }
        }
        mapping = mappingDecoded0
    }
}
