// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.ConnectionsList: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connections = "Connections"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connections = connections {
            var connectionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .connections)
            for orchestrationstringlist0 in connections {
                try connectionsContainer.encode(orchestrationstringlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .connections)
        var connectionsDecoded0:[Swift.String]? = nil
        if let connectionsContainer = connectionsContainer {
            connectionsDecoded0 = [Swift.String]()
            for string0 in connectionsContainer {
                if let string0 = string0 {
                    connectionsDecoded0?.append(string0)
                }
            }
        }
        connections = connectionsDecoded0
    }
}
