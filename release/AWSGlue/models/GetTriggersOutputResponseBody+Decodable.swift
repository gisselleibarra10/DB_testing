// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTriggersOutputResponseBody: Swift.Equatable {
    let triggers: [GlueClientTypes.Trigger]?
    let nextToken: Swift.String?
}

extension GetTriggersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case triggers = "Triggers"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let triggersContainer = try containerValues.decodeIfPresent([GlueClientTypes.Trigger?].self, forKey: .triggers)
        var triggersDecoded0:[GlueClientTypes.Trigger]? = nil
        if let triggersContainer = triggersContainer {
            triggersDecoded0 = [GlueClientTypes.Trigger]()
            for structure0 in triggersContainer {
                if let structure0 = structure0 {
                    triggersDecoded0?.append(structure0)
                }
            }
        }
        triggers = triggersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
