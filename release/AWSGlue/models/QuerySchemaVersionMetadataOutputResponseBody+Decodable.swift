// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct QuerySchemaVersionMetadataOutputResponseBody: Swift.Equatable {
    let metadataInfoMap: [Swift.String:GlueClientTypes.MetadataInfo]?
    let schemaVersionId: Swift.String?
    let nextToken: Swift.String?
}

extension QuerySchemaVersionMetadataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metadataInfoMap = "MetadataInfoMap"
        case nextToken = "NextToken"
        case schemaVersionId = "SchemaVersionId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metadataInfoMapContainer = try containerValues.decodeIfPresent([Swift.String: GlueClientTypes.MetadataInfo?].self, forKey: .metadataInfoMap)
        var metadataInfoMapDecoded0: [Swift.String:GlueClientTypes.MetadataInfo]? = nil
        if let metadataInfoMapContainer = metadataInfoMapContainer {
            metadataInfoMapDecoded0 = [Swift.String:GlueClientTypes.MetadataInfo]()
            for (key0, metadatainfo0) in metadataInfoMapContainer {
                if let metadatainfo0 = metadatainfo0 {
                    metadataInfoMapDecoded0?[key0] = metadatainfo0
                }
            }
        }
        metadataInfoMap = metadataInfoMapDecoded0
        let schemaVersionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schemaVersionId)
        schemaVersionId = schemaVersionIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
