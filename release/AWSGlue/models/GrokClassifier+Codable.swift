// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.GrokClassifier: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case classification = "Classification"
        case creationTime = "CreationTime"
        case customPatterns = "CustomPatterns"
        case grokPattern = "GrokPattern"
        case lastUpdated = "LastUpdated"
        case name = "Name"
        case version = "Version"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let classification = self.classification {
            try encodeContainer.encode(classification, forKey: .classification)
        }
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let customPatterns = self.customPatterns {
            try encodeContainer.encode(customPatterns, forKey: .customPatterns)
        }
        if let grokPattern = self.grokPattern {
            try encodeContainer.encode(grokPattern, forKey: .grokPattern)
        }
        if let lastUpdated = self.lastUpdated {
            try encodeContainer.encode(lastUpdated.timeIntervalSince1970, forKey: .lastUpdated)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if version != 0 {
            try encodeContainer.encode(version, forKey: .version)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let classificationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .classification)
        classification = classificationDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastUpdatedDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdated)
        lastUpdated = lastUpdatedDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .version) ?? 0
        version = versionDecoded
        let grokPatternDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .grokPattern)
        grokPattern = grokPatternDecoded
        let customPatternsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customPatterns)
        customPatterns = customPatternsDecoded
    }
}
