// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutWorkflowRunPropertiesInputBody: Swift.Equatable {
    let name: Swift.String?
    let runId: Swift.String?
    let runProperties: [Swift.String:Swift.String]?
}

extension PutWorkflowRunPropertiesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name = "Name"
        case runId = "RunId"
        case runProperties = "RunProperties"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let runIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .runId)
        runId = runIdDecoded
        let runPropertiesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .runProperties)
        var runPropertiesDecoded0: [Swift.String:Swift.String]? = nil
        if let runPropertiesContainer = runPropertiesContainer {
            runPropertiesDecoded0 = [Swift.String:Swift.String]()
            for (key0, genericstring0) in runPropertiesContainer {
                if let genericstring0 = genericstring0 {
                    runPropertiesDecoded0?[key0] = genericstring0
                }
            }
        }
        runProperties = runPropertiesDecoded0
    }
}
