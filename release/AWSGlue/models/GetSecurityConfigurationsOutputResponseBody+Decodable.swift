// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSecurityConfigurationsOutputResponseBody: Swift.Equatable {
    let securityConfigurations: [GlueClientTypes.SecurityConfiguration]?
    let nextToken: Swift.String?
}

extension GetSecurityConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case securityConfigurations = "SecurityConfigurations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let securityConfigurationsContainer = try containerValues.decodeIfPresent([GlueClientTypes.SecurityConfiguration?].self, forKey: .securityConfigurations)
        var securityConfigurationsDecoded0:[GlueClientTypes.SecurityConfiguration]? = nil
        if let securityConfigurationsContainer = securityConfigurationsContainer {
            securityConfigurationsDecoded0 = [GlueClientTypes.SecurityConfiguration]()
            for structure0 in securityConfigurationsContainer {
                if let structure0 = structure0 {
                    securityConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        securityConfigurations = securityConfigurationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
