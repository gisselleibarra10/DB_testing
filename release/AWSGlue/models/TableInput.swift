// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes {
    /// A structure used to define a table.
    public struct TableInput: Swift.Equatable {
        /// A description of the table.
        public var description: Swift.String?
        /// The last time that the table was accessed.
        public var lastAccessTime: ClientRuntime.Date?
        /// The last time that column statistics were computed for this table.
        public var lastAnalyzedTime: ClientRuntime.Date?
        /// The table name. For Hive compatibility, this is folded to lowercase when it is stored.
        /// This member is required.
        public var name: Swift.String?
        /// The table owner.
        public var owner: Swift.String?
        /// These key-value pairs define properties associated with the table.
        public var parameters: [Swift.String:Swift.String]?
        /// A list of columns by which the table is partitioned. Only primitive types are supported as partition keys. When you create a table used by Amazon Athena, and you do not specify any partitionKeys, you must at least set the value of partitionKeys to an empty list. For example: "PartitionKeys": []
        public var partitionKeys: [GlueClientTypes.Column]?
        /// The retention time for this table.
        public var retention: Swift.Int
        /// A storage descriptor containing information about the physical storage of this table.
        public var storageDescriptor: GlueClientTypes.StorageDescriptor?
        /// The type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.).
        public var tableType: Swift.String?
        /// A TableIdentifier structure that describes a target table for resource linking.
        public var targetTable: GlueClientTypes.TableIdentifier?
        /// If the table is a view, the expanded text of the view; otherwise null.
        public var viewExpandedText: Swift.String?
        /// If the table is a view, the original text of the view; otherwise null.
        public var viewOriginalText: Swift.String?

        public init (
            description: Swift.String? = nil,
            lastAccessTime: ClientRuntime.Date? = nil,
            lastAnalyzedTime: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            owner: Swift.String? = nil,
            parameters: [Swift.String:Swift.String]? = nil,
            partitionKeys: [GlueClientTypes.Column]? = nil,
            retention: Swift.Int = 0,
            storageDescriptor: GlueClientTypes.StorageDescriptor? = nil,
            tableType: Swift.String? = nil,
            targetTable: GlueClientTypes.TableIdentifier? = nil,
            viewExpandedText: Swift.String? = nil,
            viewOriginalText: Swift.String? = nil
        )
        {
            self.description = description
            self.lastAccessTime = lastAccessTime
            self.lastAnalyzedTime = lastAnalyzedTime
            self.name = name
            self.owner = owner
            self.parameters = parameters
            self.partitionKeys = partitionKeys
            self.retention = retention
            self.storageDescriptor = storageDescriptor
            self.tableType = tableType
            self.targetTable = targetTable
            self.viewExpandedText = viewExpandedText
            self.viewOriginalText = viewOriginalText
        }
    }

}
