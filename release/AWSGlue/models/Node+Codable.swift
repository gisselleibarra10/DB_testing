// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.Node: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case crawlerDetails = "CrawlerDetails"
        case jobDetails = "JobDetails"
        case name = "Name"
        case triggerDetails = "TriggerDetails"
        case type = "Type"
        case uniqueId = "UniqueId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let crawlerDetails = self.crawlerDetails {
            try encodeContainer.encode(crawlerDetails, forKey: .crawlerDetails)
        }
        if let jobDetails = self.jobDetails {
            try encodeContainer.encode(jobDetails, forKey: .jobDetails)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let triggerDetails = self.triggerDetails {
            try encodeContainer.encode(triggerDetails, forKey: .triggerDetails)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
        if let uniqueId = self.uniqueId {
            try encodeContainer.encode(uniqueId, forKey: .uniqueId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(GlueClientTypes.NodeType.self, forKey: .type)
        type = typeDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let uniqueIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .uniqueId)
        uniqueId = uniqueIdDecoded
        let triggerDetailsDecoded = try containerValues.decodeIfPresent(GlueClientTypes.TriggerNodeDetails.self, forKey: .triggerDetails)
        triggerDetails = triggerDetailsDecoded
        let jobDetailsDecoded = try containerValues.decodeIfPresent(GlueClientTypes.JobNodeDetails.self, forKey: .jobDetails)
        jobDetails = jobDetailsDecoded
        let crawlerDetailsDecoded = try containerValues.decodeIfPresent(GlueClientTypes.CrawlerNodeDetails.self, forKey: .crawlerDetails)
        crawlerDetails = crawlerDetailsDecoded
    }
}
