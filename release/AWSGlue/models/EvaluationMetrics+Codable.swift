// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.EvaluationMetrics: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case findMatchesMetrics = "FindMatchesMetrics"
        case transformType = "TransformType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let findMatchesMetrics = self.findMatchesMetrics {
            try encodeContainer.encode(findMatchesMetrics, forKey: .findMatchesMetrics)
        }
        if let transformType = self.transformType {
            try encodeContainer.encode(transformType.rawValue, forKey: .transformType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transformTypeDecoded = try containerValues.decodeIfPresent(GlueClientTypes.TransformType.self, forKey: .transformType)
        transformType = transformTypeDecoded
        let findMatchesMetricsDecoded = try containerValues.decodeIfPresent(GlueClientTypes.FindMatchesMetrics.self, forKey: .findMatchesMetrics)
        findMatchesMetrics = findMatchesMetricsDecoded
    }
}
