// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.AuditContext: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case additionalAuditContext = "AdditionalAuditContext"
        case allColumnsRequested = "AllColumnsRequested"
        case requestedColumns = "RequestedColumns"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let additionalAuditContext = self.additionalAuditContext {
            try encodeContainer.encode(additionalAuditContext, forKey: .additionalAuditContext)
        }
        if let allColumnsRequested = self.allColumnsRequested {
            try encodeContainer.encode(allColumnsRequested, forKey: .allColumnsRequested)
        }
        if let requestedColumns = requestedColumns {
            var requestedColumnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .requestedColumns)
            for auditcolumnnameslist0 in requestedColumns {
                try requestedColumnsContainer.encode(auditcolumnnameslist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let additionalAuditContextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .additionalAuditContext)
        additionalAuditContext = additionalAuditContextDecoded
        let requestedColumnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .requestedColumns)
        var requestedColumnsDecoded0:[Swift.String]? = nil
        if let requestedColumnsContainer = requestedColumnsContainer {
            requestedColumnsDecoded0 = [Swift.String]()
            for string0 in requestedColumnsContainer {
                if let string0 = string0 {
                    requestedColumnsDecoded0?.append(string0)
                }
            }
        }
        requestedColumns = requestedColumnsDecoded0
        let allColumnsRequestedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .allColumnsRequested)
        allColumnsRequested = allColumnsRequestedDecoded
    }
}
