// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMappingInputBody: Swift.Equatable {
    let source: GlueClientTypes.CatalogEntry?
    let sinks: [GlueClientTypes.CatalogEntry]?
    let location: GlueClientTypes.Location?
}

extension GetMappingInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case location = "Location"
        case sinks = "Sinks"
        case source = "Source"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceDecoded = try containerValues.decodeIfPresent(GlueClientTypes.CatalogEntry.self, forKey: .source)
        source = sourceDecoded
        let sinksContainer = try containerValues.decodeIfPresent([GlueClientTypes.CatalogEntry?].self, forKey: .sinks)
        var sinksDecoded0:[GlueClientTypes.CatalogEntry]? = nil
        if let sinksContainer = sinksContainer {
            sinksDecoded0 = [GlueClientTypes.CatalogEntry]()
            for structure0 in sinksContainer {
                if let structure0 = structure0 {
                    sinksDecoded0?.append(structure0)
                }
            }
        }
        sinks = sinksDecoded0
        let locationDecoded = try containerValues.decodeIfPresent(GlueClientTypes.Location.self, forKey: .location)
        location = locationDecoded
    }
}
