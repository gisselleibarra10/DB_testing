// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Request to create a new session.
public struct CreateSessionInput: Swift.Equatable {
    /// The SessionCommand that runs the job.
    /// This member is required.
    public var command: GlueClientTypes.SessionCommand?
    /// The number of connections to use for the session.
    public var connections: GlueClientTypes.ConnectionsList?
    /// A map array of key-value pairs. Max is 75 pairs.
    public var defaultArguments: [Swift.String:Swift.String]?
    /// The description of the session.
    public var description: Swift.String?
    /// The Glue version determines the versions of Apache Spark and Python that Glue supports. The GlueVersion must be greater than 2.0.
    public var glueVersion: Swift.String?
    /// The ID of the session request.
    /// This member is required.
    public var id: Swift.String?
    /// The number of seconds when idle before request times out.
    public var idleTimeout: Swift.Int?
    /// The number of Glue data processing units (DPUs) that can be allocated when the job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB memory.
    public var maxCapacity: Swift.Double?
    /// The number of workers of a defined WorkerType to use for the session.
    public var numberOfWorkers: Swift.Int?
    /// The origin of the request.
    public var requestOrigin: Swift.String?
    /// The IAM Role ARN
    /// This member is required.
    public var role: Swift.String?
    /// The name of the SecurityConfiguration structure to be used with the session
    public var securityConfiguration: Swift.String?
    /// The map of key value pairs (tags) belonging to the session.
    public var tags: [Swift.String:Swift.String]?
    /// The number of seconds before request times out.
    public var timeout: Swift.Int?
    /// The type of predefined worker that is allocated to use for the session. Accepts a value of Standard, G.1X, G.2X, or G.025X.
    ///
    /// * For the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.
    ///
    /// * For the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.
    ///
    /// * For the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.
    ///
    /// * For the G.025X worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for low volume streaming jobs. This worker type is only available for Glue version 3.0 streaming jobs.
    public var workerType: GlueClientTypes.WorkerType?

    public init (
        command: GlueClientTypes.SessionCommand? = nil,
        connections: GlueClientTypes.ConnectionsList? = nil,
        defaultArguments: [Swift.String:Swift.String]? = nil,
        description: Swift.String? = nil,
        glueVersion: Swift.String? = nil,
        id: Swift.String? = nil,
        idleTimeout: Swift.Int? = nil,
        maxCapacity: Swift.Double? = nil,
        numberOfWorkers: Swift.Int? = nil,
        requestOrigin: Swift.String? = nil,
        role: Swift.String? = nil,
        securityConfiguration: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        timeout: Swift.Int? = nil,
        workerType: GlueClientTypes.WorkerType? = nil
    )
    {
        self.command = command
        self.connections = connections
        self.defaultArguments = defaultArguments
        self.description = description
        self.glueVersion = glueVersion
        self.id = id
        self.idleTimeout = idleTimeout
        self.maxCapacity = maxCapacity
        self.numberOfWorkers = numberOfWorkers
        self.requestOrigin = requestOrigin
        self.role = role
        self.securityConfiguration = securityConfiguration
        self.tags = tags
        self.timeout = timeout
        self.workerType = workerType
    }
}
