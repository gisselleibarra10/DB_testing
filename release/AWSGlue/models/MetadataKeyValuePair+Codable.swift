// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.MetadataKeyValuePair: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metadataKey = "MetadataKey"
        case metadataValue = "MetadataValue"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let metadataKey = self.metadataKey {
            try encodeContainer.encode(metadataKey, forKey: .metadataKey)
        }
        if let metadataValue = self.metadataValue {
            try encodeContainer.encode(metadataValue, forKey: .metadataValue)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metadataKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metadataKey)
        metadataKey = metadataKeyDecoded
        let metadataValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metadataValue)
        metadataValue = metadataValueDecoded
    }
}
