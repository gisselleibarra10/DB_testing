// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.EventBatchingCondition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case batchSize = "BatchSize"
        case batchWindow = "BatchWindow"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if batchSize != 0 {
            try encodeContainer.encode(batchSize, forKey: .batchSize)
        }
        if let batchWindow = self.batchWindow {
            try encodeContainer.encode(batchWindow, forKey: .batchWindow)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let batchSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .batchSize) ?? 0
        batchSize = batchSizeDecoded
        let batchWindowDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .batchWindow)
        batchWindow = batchWindowDecoded
    }
}
