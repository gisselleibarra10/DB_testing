// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetCustomEntityTypesOutputResponseBody: Swift.Equatable {
    let customEntityTypes: [GlueClientTypes.CustomEntityType]?
    let customEntityTypesNotFound: [Swift.String]?
}

extension BatchGetCustomEntityTypesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customEntityTypes = "CustomEntityTypes"
        case customEntityTypesNotFound = "CustomEntityTypesNotFound"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customEntityTypesContainer = try containerValues.decodeIfPresent([GlueClientTypes.CustomEntityType?].self, forKey: .customEntityTypes)
        var customEntityTypesDecoded0:[GlueClientTypes.CustomEntityType]? = nil
        if let customEntityTypesContainer = customEntityTypesContainer {
            customEntityTypesDecoded0 = [GlueClientTypes.CustomEntityType]()
            for structure0 in customEntityTypesContainer {
                if let structure0 = structure0 {
                    customEntityTypesDecoded0?.append(structure0)
                }
            }
        }
        customEntityTypes = customEntityTypesDecoded0
        let customEntityTypesNotFoundContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .customEntityTypesNotFound)
        var customEntityTypesNotFoundDecoded0:[Swift.String]? = nil
        if let customEntityTypesNotFoundContainer = customEntityTypesNotFoundContainer {
            customEntityTypesNotFoundDecoded0 = [Swift.String]()
            for string0 in customEntityTypesNotFoundContainer {
                if let string0 = string0 {
                    customEntityTypesNotFoundDecoded0?.append(string0)
                }
            }
        }
        customEntityTypesNotFound = customEntityTypesNotFoundDecoded0
    }
}
