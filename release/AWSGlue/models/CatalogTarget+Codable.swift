// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.CatalogTarget: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionName = "ConnectionName"
        case databaseName = "DatabaseName"
        case dlqEventQueueArn = "DlqEventQueueArn"
        case eventQueueArn = "EventQueueArn"
        case tables = "Tables"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionName = self.connectionName {
            try encodeContainer.encode(connectionName, forKey: .connectionName)
        }
        if let databaseName = self.databaseName {
            try encodeContainer.encode(databaseName, forKey: .databaseName)
        }
        if let dlqEventQueueArn = self.dlqEventQueueArn {
            try encodeContainer.encode(dlqEventQueueArn, forKey: .dlqEventQueueArn)
        }
        if let eventQueueArn = self.eventQueueArn {
            try encodeContainer.encode(eventQueueArn, forKey: .eventQueueArn)
        }
        if let tables = tables {
            var tablesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tables)
            for catalogtableslist0 in tables {
                try tablesContainer.encode(catalogtableslist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let databaseNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .databaseName)
        databaseName = databaseNameDecoded
        let tablesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .tables)
        var tablesDecoded0:[Swift.String]? = nil
        if let tablesContainer = tablesContainer {
            tablesDecoded0 = [Swift.String]()
            for string0 in tablesContainer {
                if let string0 = string0 {
                    tablesDecoded0?.append(string0)
                }
            }
        }
        tables = tablesDecoded0
        let connectionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectionName)
        connectionName = connectionNameDecoded
        let eventQueueArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventQueueArn)
        eventQueueArn = eventQueueArnDecoded
        let dlqEventQueueArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dlqEventQueueArn)
        dlqEventQueueArn = dlqEventQueueArnDecoded
    }
}
