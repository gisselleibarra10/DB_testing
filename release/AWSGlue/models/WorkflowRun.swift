// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes {
    /// A workflow run is an execution of a workflow providing all the runtime information.
    public struct WorkflowRun: Swift.Equatable {
        /// The date and time when the workflow run completed.
        public var completedOn: ClientRuntime.Date?
        /// This error message describes any error that may have occurred in starting the workflow run. Currently the only error message is "Concurrent runs exceeded for workflow: foo."
        public var errorMessage: Swift.String?
        /// The graph representing all the Glue components that belong to the workflow as nodes and directed connections between them as edges.
        public var graph: GlueClientTypes.WorkflowGraph?
        /// Name of the workflow that was run.
        public var name: Swift.String?
        /// The ID of the previous workflow run.
        public var previousRunId: Swift.String?
        /// The date and time when the workflow run was started.
        public var startedOn: ClientRuntime.Date?
        /// The batch condition that started the workflow run.
        public var startingEventBatchCondition: GlueClientTypes.StartingEventBatchCondition?
        /// The statistics of the run.
        public var statistics: GlueClientTypes.WorkflowRunStatistics?
        /// The status of the workflow run.
        public var status: GlueClientTypes.WorkflowRunStatus?
        /// The ID of this workflow run.
        public var workflowRunId: Swift.String?
        /// The workflow run properties which were set during the run.
        public var workflowRunProperties: [Swift.String:Swift.String]?

        public init (
            completedOn: ClientRuntime.Date? = nil,
            errorMessage: Swift.String? = nil,
            graph: GlueClientTypes.WorkflowGraph? = nil,
            name: Swift.String? = nil,
            previousRunId: Swift.String? = nil,
            startedOn: ClientRuntime.Date? = nil,
            startingEventBatchCondition: GlueClientTypes.StartingEventBatchCondition? = nil,
            statistics: GlueClientTypes.WorkflowRunStatistics? = nil,
            status: GlueClientTypes.WorkflowRunStatus? = nil,
            workflowRunId: Swift.String? = nil,
            workflowRunProperties: [Swift.String:Swift.String]? = nil
        )
        {
            self.completedOn = completedOn
            self.errorMessage = errorMessage
            self.graph = graph
            self.name = name
            self.previousRunId = previousRunId
            self.startedOn = startedOn
            self.startingEventBatchCondition = startingEventBatchCondition
            self.statistics = statistics
            self.status = status
            self.workflowRunId = workflowRunId
            self.workflowRunProperties = workflowRunProperties
        }
    }

}
