// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateScriptInputBody: Swift.Equatable {
    let dagNodes: [GlueClientTypes.CodeGenNode]?
    let dagEdges: [GlueClientTypes.CodeGenEdge]?
    let language: GlueClientTypes.Language?
}

extension CreateScriptInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dagEdges = "DagEdges"
        case dagNodes = "DagNodes"
        case language = "Language"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dagNodesContainer = try containerValues.decodeIfPresent([GlueClientTypes.CodeGenNode?].self, forKey: .dagNodes)
        var dagNodesDecoded0:[GlueClientTypes.CodeGenNode]? = nil
        if let dagNodesContainer = dagNodesContainer {
            dagNodesDecoded0 = [GlueClientTypes.CodeGenNode]()
            for structure0 in dagNodesContainer {
                if let structure0 = structure0 {
                    dagNodesDecoded0?.append(structure0)
                }
            }
        }
        dagNodes = dagNodesDecoded0
        let dagEdgesContainer = try containerValues.decodeIfPresent([GlueClientTypes.CodeGenEdge?].self, forKey: .dagEdges)
        var dagEdgesDecoded0:[GlueClientTypes.CodeGenEdge]? = nil
        if let dagEdgesContainer = dagEdgesContainer {
            dagEdgesDecoded0 = [GlueClientTypes.CodeGenEdge]()
            for structure0 in dagEdgesContainer {
                if let structure0 = structure0 {
                    dagEdgesDecoded0?.append(structure0)
                }
            }
        }
        dagEdges = dagEdgesDecoded0
        let languageDecoded = try containerValues.decodeIfPresent(GlueClientTypes.Language.self, forKey: .language)
        language = languageDecoded
    }
}
