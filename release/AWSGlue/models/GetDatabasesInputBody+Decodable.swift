// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDatabasesInputBody: Swift.Equatable {
    let catalogId: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let resourceShareType: GlueClientTypes.ResourceShareType?
}

extension GetDatabasesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case catalogId = "CatalogId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case resourceShareType = "ResourceShareType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let resourceShareTypeDecoded = try containerValues.decodeIfPresent(GlueClientTypes.ResourceShareType.self, forKey: .resourceShareType)
        resourceShareType = resourceShareTypeDecoded
    }
}
