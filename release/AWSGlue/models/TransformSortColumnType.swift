// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GlueClientTypes {
    public enum TransformSortColumnType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case created
        case lastModified
        case name
        case status
        case transformType
        case sdkUnknown(Swift.String)

        public static var allCases: [TransformSortColumnType] {
            return [
                .created,
                .lastModified,
                .name,
                .status,
                .transformType,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .created: return "CREATED"
            case .lastModified: return "LAST_MODIFIED"
            case .name: return "NAME"
            case .status: return "STATUS"
            case .transformType: return "TRANSFORM_TYPE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = TransformSortColumnType(rawValue: rawValue) ?? TransformSortColumnType.sdkUnknown(rawValue)
        }
    }
}
