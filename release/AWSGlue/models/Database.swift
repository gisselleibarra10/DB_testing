// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes {
    /// The Database object represents a logical grouping of tables that might reside in a Hive metastore or an RDBMS.
    public struct Database: Swift.Equatable {
        /// The ID of the Data Catalog in which the database resides.
        public var catalogId: Swift.String?
        /// Creates a set of default permissions on the table for principals.
        public var createTableDefaultPermissions: [GlueClientTypes.PrincipalPermissions]?
        /// The time at which the metadata database was created in the catalog.
        public var createTime: ClientRuntime.Date?
        /// A description of the database.
        public var description: Swift.String?
        /// The location of the database (for example, an HDFS path).
        public var locationUri: Swift.String?
        /// The name of the database. For Hive compatibility, this is folded to lowercase when it is stored.
        /// This member is required.
        public var name: Swift.String?
        /// These key-value pairs define parameters and properties of the database.
        public var parameters: [Swift.String:Swift.String]?
        /// A DatabaseIdentifier structure that describes a target database for resource linking.
        public var targetDatabase: GlueClientTypes.DatabaseIdentifier?

        public init (
            catalogId: Swift.String? = nil,
            createTableDefaultPermissions: [GlueClientTypes.PrincipalPermissions]? = nil,
            createTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            locationUri: Swift.String? = nil,
            name: Swift.String? = nil,
            parameters: [Swift.String:Swift.String]? = nil,
            targetDatabase: GlueClientTypes.DatabaseIdentifier? = nil
        )
        {
            self.catalogId = catalogId
            self.createTableDefaultPermissions = createTableDefaultPermissions
            self.createTime = createTime
            self.description = description
            self.locationUri = locationUri
            self.name = name
            self.parameters = parameters
            self.targetDatabase = targetDatabase
        }
    }

}
