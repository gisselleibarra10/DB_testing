// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.RedshiftSource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case database = "Database"
        case name = "Name"
        case redshiftTmpDir = "RedshiftTmpDir"
        case table = "Table"
        case tmpDirIAMRole = "TmpDirIAMRole"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let database = self.database {
            try encodeContainer.encode(database, forKey: .database)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let redshiftTmpDir = self.redshiftTmpDir {
            try encodeContainer.encode(redshiftTmpDir, forKey: .redshiftTmpDir)
        }
        if let table = self.table {
            try encodeContainer.encode(table, forKey: .table)
        }
        if let tmpDirIAMRole = self.tmpDirIAMRole {
            try encodeContainer.encode(tmpDirIAMRole, forKey: .tmpDirIAMRole)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let databaseDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .database)
        database = databaseDecoded
        let tableDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .table)
        table = tableDecoded
        let redshiftTmpDirDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .redshiftTmpDir)
        redshiftTmpDir = redshiftTmpDirDecoded
        let tmpDirIAMRoleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .tmpDirIAMRole)
        tmpDirIAMRole = tmpDirIAMRoleDecoded
    }
}
