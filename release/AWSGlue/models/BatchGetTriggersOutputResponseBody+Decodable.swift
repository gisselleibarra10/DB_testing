// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetTriggersOutputResponseBody: Swift.Equatable {
    let triggers: [GlueClientTypes.Trigger]?
    let triggersNotFound: [Swift.String]?
}

extension BatchGetTriggersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case triggers = "Triggers"
        case triggersNotFound = "TriggersNotFound"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let triggersContainer = try containerValues.decodeIfPresent([GlueClientTypes.Trigger?].self, forKey: .triggers)
        var triggersDecoded0:[GlueClientTypes.Trigger]? = nil
        if let triggersContainer = triggersContainer {
            triggersDecoded0 = [GlueClientTypes.Trigger]()
            for structure0 in triggersContainer {
                if let structure0 = structure0 {
                    triggersDecoded0?.append(structure0)
                }
            }
        }
        triggers = triggersDecoded0
        let triggersNotFoundContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .triggersNotFound)
        var triggersNotFoundDecoded0:[Swift.String]? = nil
        if let triggersNotFoundContainer = triggersNotFoundContainer {
            triggersNotFoundDecoded0 = [Swift.String]()
            for string0 in triggersNotFoundContainer {
                if let string0 = string0 {
                    triggersNotFoundDecoded0?.append(string0)
                }
            }
        }
        triggersNotFound = triggersNotFoundDecoded0
    }
}
