// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.GlueSchema: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case columns = "Columns"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let columns = columns {
            var columnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .columns)
            for gluestudioschemacolumnlist0 in columns {
                try columnsContainer.encode(gluestudioschemacolumnlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let columnsContainer = try containerValues.decodeIfPresent([GlueClientTypes.GlueStudioSchemaColumn?].self, forKey: .columns)
        var columnsDecoded0:[GlueClientTypes.GlueStudioSchemaColumn]? = nil
        if let columnsContainer = columnsContainer {
            columnsDecoded0 = [GlueClientTypes.GlueStudioSchemaColumn]()
            for structure0 in columnsContainer {
                if let structure0 = structure0 {
                    columnsDecoded0?.append(structure0)
                }
            }
        }
        columns = columnsDecoded0
    }
}
