// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutResourcePolicyInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enableHybrid = "EnableHybrid"
        case policyExistsCondition = "PolicyExistsCondition"
        case policyHashCondition = "PolicyHashCondition"
        case policyInJson = "PolicyInJson"
        case resourceArn = "ResourceArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let enableHybrid = self.enableHybrid {
            try encodeContainer.encode(enableHybrid.rawValue, forKey: .enableHybrid)
        }
        if let policyExistsCondition = self.policyExistsCondition {
            try encodeContainer.encode(policyExistsCondition.rawValue, forKey: .policyExistsCondition)
        }
        if let policyHashCondition = self.policyHashCondition {
            try encodeContainer.encode(policyHashCondition, forKey: .policyHashCondition)
        }
        if let policyInJson = self.policyInJson {
            try encodeContainer.encode(policyInJson, forKey: .policyInJson)
        }
        if let resourceArn = self.resourceArn {
            try encodeContainer.encode(resourceArn, forKey: .resourceArn)
        }
    }
}
