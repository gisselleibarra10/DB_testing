// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.SchemaReference: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case schemaId = "SchemaId"
        case schemaVersionId = "SchemaVersionId"
        case schemaVersionNumber = "SchemaVersionNumber"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let schemaId = self.schemaId {
            try encodeContainer.encode(schemaId, forKey: .schemaId)
        }
        if let schemaVersionId = self.schemaVersionId {
            try encodeContainer.encode(schemaVersionId, forKey: .schemaVersionId)
        }
        if let schemaVersionNumber = self.schemaVersionNumber {
            try encodeContainer.encode(schemaVersionNumber, forKey: .schemaVersionNumber)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaIdDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaId.self, forKey: .schemaId)
        schemaId = schemaIdDecoded
        let schemaVersionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schemaVersionId)
        schemaVersionId = schemaVersionIdDecoded
        let schemaVersionNumberDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .schemaVersionNumber)
        schemaVersionNumber = schemaVersionNumberDecoded
    }
}
