// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchTablesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let tableList: [GlueClientTypes.Table]?
}

extension SearchTablesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case tableList = "TableList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let tableListContainer = try containerValues.decodeIfPresent([GlueClientTypes.Table?].self, forKey: .tableList)
        var tableListDecoded0:[GlueClientTypes.Table]? = nil
        if let tableListContainer = tableListContainer {
            tableListDecoded0 = [GlueClientTypes.Table]()
            for structure0 in tableListContainer {
                if let structure0 = structure0 {
                    tableListDecoded0?.append(structure0)
                }
            }
        }
        tableList = tableListDecoded0
    }
}
