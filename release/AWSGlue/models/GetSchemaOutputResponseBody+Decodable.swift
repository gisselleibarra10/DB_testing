// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSchemaOutputResponseBody: Swift.Equatable {
    let registryName: Swift.String?
    let registryArn: Swift.String?
    let schemaName: Swift.String?
    let schemaArn: Swift.String?
    let description: Swift.String?
    let dataFormat: GlueClientTypes.DataFormat?
    let compatibility: GlueClientTypes.Compatibility?
    let schemaCheckpoint: Swift.Int
    let latestSchemaVersion: Swift.Int
    let nextSchemaVersion: Swift.Int
    let schemaStatus: GlueClientTypes.SchemaStatus?
    let createdTime: Swift.String?
    let updatedTime: Swift.String?
}

extension GetSchemaOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case compatibility = "Compatibility"
        case createdTime = "CreatedTime"
        case dataFormat = "DataFormat"
        case description = "Description"
        case latestSchemaVersion = "LatestSchemaVersion"
        case nextSchemaVersion = "NextSchemaVersion"
        case registryArn = "RegistryArn"
        case registryName = "RegistryName"
        case schemaArn = "SchemaArn"
        case schemaCheckpoint = "SchemaCheckpoint"
        case schemaName = "SchemaName"
        case schemaStatus = "SchemaStatus"
        case updatedTime = "UpdatedTime"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .registryName)
        registryName = registryNameDecoded
        let registryArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .registryArn)
        registryArn = registryArnDecoded
        let schemaNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schemaName)
        schemaName = schemaNameDecoded
        let schemaArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schemaArn)
        schemaArn = schemaArnDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let dataFormatDecoded = try containerValues.decodeIfPresent(GlueClientTypes.DataFormat.self, forKey: .dataFormat)
        dataFormat = dataFormatDecoded
        let compatibilityDecoded = try containerValues.decodeIfPresent(GlueClientTypes.Compatibility.self, forKey: .compatibility)
        compatibility = compatibilityDecoded
        let schemaCheckpointDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .schemaCheckpoint) ?? 0
        schemaCheckpoint = schemaCheckpointDecoded
        let latestSchemaVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .latestSchemaVersion) ?? 0
        latestSchemaVersion = latestSchemaVersionDecoded
        let nextSchemaVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .nextSchemaVersion) ?? 0
        nextSchemaVersion = nextSchemaVersionDecoded
        let schemaStatusDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaStatus.self, forKey: .schemaStatus)
        schemaStatus = schemaStatusDecoded
        let createdTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .createdTime)
        createdTime = createdTimeDecoded
        let updatedTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .updatedTime)
        updatedTime = updatedTimeDecoded
    }
}
