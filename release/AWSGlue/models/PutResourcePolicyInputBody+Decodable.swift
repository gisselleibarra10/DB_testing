// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutResourcePolicyInputBody: Swift.Equatable {
    let policyInJson: Swift.String?
    let resourceArn: Swift.String?
    let policyHashCondition: Swift.String?
    let policyExistsCondition: GlueClientTypes.ExistCondition?
    let enableHybrid: GlueClientTypes.EnableHybridValues?
}

extension PutResourcePolicyInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enableHybrid = "EnableHybrid"
        case policyExistsCondition = "PolicyExistsCondition"
        case policyHashCondition = "PolicyHashCondition"
        case policyInJson = "PolicyInJson"
        case resourceArn = "ResourceArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyInJsonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyInJson)
        policyInJson = policyInJsonDecoded
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let policyHashConditionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyHashCondition)
        policyHashCondition = policyHashConditionDecoded
        let policyExistsConditionDecoded = try containerValues.decodeIfPresent(GlueClientTypes.ExistCondition.self, forKey: .policyExistsCondition)
        policyExistsCondition = policyExistsConditionDecoded
        let enableHybridDecoded = try containerValues.decodeIfPresent(GlueClientTypes.EnableHybridValues.self, forKey: .enableHybrid)
        enableHybrid = enableHybridDecoded
    }
}
