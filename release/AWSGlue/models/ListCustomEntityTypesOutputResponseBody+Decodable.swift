// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCustomEntityTypesOutputResponseBody: Swift.Equatable {
    let customEntityTypes: [GlueClientTypes.CustomEntityType]?
    let nextToken: Swift.String?
}

extension ListCustomEntityTypesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customEntityTypes = "CustomEntityTypes"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customEntityTypesContainer = try containerValues.decodeIfPresent([GlueClientTypes.CustomEntityType?].self, forKey: .customEntityTypes)
        var customEntityTypesDecoded0:[GlueClientTypes.CustomEntityType]? = nil
        if let customEntityTypesContainer = customEntityTypesContainer {
            customEntityTypesDecoded0 = [GlueClientTypes.CustomEntityType]()
            for structure0 in customEntityTypesContainer {
                if let structure0 = structure0 {
                    customEntityTypesDecoded0?.append(structure0)
                }
            }
        }
        customEntityTypes = customEntityTypesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
