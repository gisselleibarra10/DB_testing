// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDeleteTableInputBody: Swift.Equatable {
    let catalogId: Swift.String?
    let databaseName: Swift.String?
    let tablesToDelete: [Swift.String]?
    let transactionId: Swift.String?
}

extension BatchDeleteTableInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case catalogId = "CatalogId"
        case databaseName = "DatabaseName"
        case tablesToDelete = "TablesToDelete"
        case transactionId = "TransactionId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let databaseNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .databaseName)
        databaseName = databaseNameDecoded
        let tablesToDeleteContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .tablesToDelete)
        var tablesToDeleteDecoded0:[Swift.String]? = nil
        if let tablesToDeleteContainer = tablesToDeleteContainer {
            tablesToDeleteDecoded0 = [Swift.String]()
            for string0 in tablesToDeleteContainer {
                if let string0 = string0 {
                    tablesToDeleteDecoded0?.append(string0)
                }
            }
        }
        tablesToDelete = tablesToDeleteDecoded0
        let transactionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transactionId)
        transactionId = transactionIdDecoded
    }
}
