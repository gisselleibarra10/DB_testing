// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUnfilteredPartitionsMetadataOutputResponseBody: Swift.Equatable {
    let unfilteredPartitions: [GlueClientTypes.UnfilteredPartition]?
    let nextToken: Swift.String?
}

extension GetUnfilteredPartitionsMetadataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case unfilteredPartitions = "UnfilteredPartitions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let unfilteredPartitionsContainer = try containerValues.decodeIfPresent([GlueClientTypes.UnfilteredPartition?].self, forKey: .unfilteredPartitions)
        var unfilteredPartitionsDecoded0:[GlueClientTypes.UnfilteredPartition]? = nil
        if let unfilteredPartitionsContainer = unfilteredPartitionsContainer {
            unfilteredPartitionsDecoded0 = [GlueClientTypes.UnfilteredPartition]()
            for structure0 in unfilteredPartitionsContainer {
                if let structure0 = structure0 {
                    unfilteredPartitionsDecoded0?.append(structure0)
                }
            }
        }
        unfilteredPartitions = unfilteredPartitionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
