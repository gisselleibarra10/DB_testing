// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetPartitionOutputResponseBody: Swift.Equatable {
    let partitions: [GlueClientTypes.Partition]?
    let unprocessedKeys: [GlueClientTypes.PartitionValueList]?
}

extension BatchGetPartitionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case partitions = "Partitions"
        case unprocessedKeys = "UnprocessedKeys"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partitionsContainer = try containerValues.decodeIfPresent([GlueClientTypes.Partition?].self, forKey: .partitions)
        var partitionsDecoded0:[GlueClientTypes.Partition]? = nil
        if let partitionsContainer = partitionsContainer {
            partitionsDecoded0 = [GlueClientTypes.Partition]()
            for structure0 in partitionsContainer {
                if let structure0 = structure0 {
                    partitionsDecoded0?.append(structure0)
                }
            }
        }
        partitions = partitionsDecoded0
        let unprocessedKeysContainer = try containerValues.decodeIfPresent([GlueClientTypes.PartitionValueList?].self, forKey: .unprocessedKeys)
        var unprocessedKeysDecoded0:[GlueClientTypes.PartitionValueList]? = nil
        if let unprocessedKeysContainer = unprocessedKeysContainer {
            unprocessedKeysDecoded0 = [GlueClientTypes.PartitionValueList]()
            for structure0 in unprocessedKeysContainer {
                if let structure0 = structure0 {
                    unprocessedKeysDecoded0?.append(structure0)
                }
            }
        }
        unprocessedKeys = unprocessedKeysDecoded0
    }
}
