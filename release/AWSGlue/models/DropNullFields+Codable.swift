// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.DropNullFields: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inputs = "Inputs"
        case name = "Name"
        case nullCheckBoxList = "NullCheckBoxList"
        case nullTextList = "NullTextList"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inputs = inputs {
            var inputsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .inputs)
            for oneinput0 in inputs {
                try inputsContainer.encode(oneinput0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let nullCheckBoxList = self.nullCheckBoxList {
            try encodeContainer.encode(nullCheckBoxList, forKey: .nullCheckBoxList)
        }
        if let nullTextList = nullTextList {
            var nullTextListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .nullTextList)
            for nullvaluefields0 in nullTextList {
                try nullTextListContainer.encode(nullvaluefields0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let inputsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .inputs)
        var inputsDecoded0:[Swift.String]? = nil
        if let inputsContainer = inputsContainer {
            inputsDecoded0 = [Swift.String]()
            for string0 in inputsContainer {
                if let string0 = string0 {
                    inputsDecoded0?.append(string0)
                }
            }
        }
        inputs = inputsDecoded0
        let nullCheckBoxListDecoded = try containerValues.decodeIfPresent(GlueClientTypes.NullCheckBoxList.self, forKey: .nullCheckBoxList)
        nullCheckBoxList = nullCheckBoxListDecoded
        let nullTextListContainer = try containerValues.decodeIfPresent([GlueClientTypes.NullValueField?].self, forKey: .nullTextList)
        var nullTextListDecoded0:[GlueClientTypes.NullValueField]? = nil
        if let nullTextListContainer = nullTextListContainer {
            nullTextListDecoded0 = [GlueClientTypes.NullValueField]()
            for structure0 in nullTextListContainer {
                if let structure0 = structure0 {
                    nullTextListDecoded0?.append(structure0)
                }
            }
        }
        nullTextList = nullTextListDecoded0
    }
}
