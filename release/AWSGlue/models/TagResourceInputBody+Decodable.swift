// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TagResourceInputBody: Swift.Equatable {
    let resourceArn: Swift.String?
    let tagsToAdd: [Swift.String:Swift.String]?
}

extension TagResourceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceArn = "ResourceArn"
        case tagsToAdd = "TagsToAdd"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let tagsToAddContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tagsToAdd)
        var tagsToAddDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsToAddContainer = tagsToAddContainer {
            tagsToAddDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsToAddContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsToAddDecoded0?[key0] = tagvalue0
                }
            }
        }
        tagsToAdd = tagsToAddDecoded0
    }
}
