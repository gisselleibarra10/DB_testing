// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.GluePolicy: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createTime = "CreateTime"
        case policyHash = "PolicyHash"
        case policyInJson = "PolicyInJson"
        case updateTime = "UpdateTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createTime = self.createTime {
            try encodeContainer.encode(createTime.timeIntervalSince1970, forKey: .createTime)
        }
        if let policyHash = self.policyHash {
            try encodeContainer.encode(policyHash, forKey: .policyHash)
        }
        if let policyInJson = self.policyInJson {
            try encodeContainer.encode(policyInJson, forKey: .policyInJson)
        }
        if let updateTime = self.updateTime {
            try encodeContainer.encode(updateTime.timeIntervalSince1970, forKey: .updateTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyInJsonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyInJson)
        policyInJson = policyInJsonDecoded
        let policyHashDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyHash)
        policyHash = policyHashDecoded
        let createTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createTime)
        createTime = createTimeDecoded
        let updateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .updateTime)
        updateTime = updateTimeDecoded
    }
}
