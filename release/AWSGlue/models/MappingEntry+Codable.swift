// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.MappingEntry: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case sourcePath = "SourcePath"
        case sourceTable = "SourceTable"
        case sourceType = "SourceType"
        case targetPath = "TargetPath"
        case targetTable = "TargetTable"
        case targetType = "TargetType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sourcePath = self.sourcePath {
            try encodeContainer.encode(sourcePath, forKey: .sourcePath)
        }
        if let sourceTable = self.sourceTable {
            try encodeContainer.encode(sourceTable, forKey: .sourceTable)
        }
        if let sourceType = self.sourceType {
            try encodeContainer.encode(sourceType, forKey: .sourceType)
        }
        if let targetPath = self.targetPath {
            try encodeContainer.encode(targetPath, forKey: .targetPath)
        }
        if let targetTable = self.targetTable {
            try encodeContainer.encode(targetTable, forKey: .targetTable)
        }
        if let targetType = self.targetType {
            try encodeContainer.encode(targetType, forKey: .targetType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceTableDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceTable)
        sourceTable = sourceTableDecoded
        let sourcePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourcePath)
        sourcePath = sourcePathDecoded
        let sourceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceType)
        sourceType = sourceTypeDecoded
        let targetTableDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetTable)
        targetTable = targetTableDecoded
        let targetPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetPath)
        targetPath = targetPathDecoded
        let targetTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetType)
        targetType = targetTypeDecoded
    }
}
