// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSchemaVersionsDiffInputBody: Swift.Equatable {
    let schemaId: GlueClientTypes.SchemaId?
    let firstSchemaVersionNumber: GlueClientTypes.SchemaVersionNumber?
    let secondSchemaVersionNumber: GlueClientTypes.SchemaVersionNumber?
    let schemaDiffType: GlueClientTypes.SchemaDiffType?
}

extension GetSchemaVersionsDiffInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case firstSchemaVersionNumber = "FirstSchemaVersionNumber"
        case schemaDiffType = "SchemaDiffType"
        case schemaId = "SchemaId"
        case secondSchemaVersionNumber = "SecondSchemaVersionNumber"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaIdDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaId.self, forKey: .schemaId)
        schemaId = schemaIdDecoded
        let firstSchemaVersionNumberDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaVersionNumber.self, forKey: .firstSchemaVersionNumber)
        firstSchemaVersionNumber = firstSchemaVersionNumberDecoded
        let secondSchemaVersionNumberDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaVersionNumber.self, forKey: .secondSchemaVersionNumber)
        secondSchemaVersionNumber = secondSchemaVersionNumberDecoded
        let schemaDiffTypeDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaDiffType.self, forKey: .schemaDiffType)
        schemaDiffType = schemaDiffTypeDecoded
    }
}
