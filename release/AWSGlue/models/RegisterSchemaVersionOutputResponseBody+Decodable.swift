// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterSchemaVersionOutputResponseBody: Swift.Equatable {
    let schemaVersionId: Swift.String?
    let versionNumber: Swift.Int
    let status: GlueClientTypes.SchemaVersionStatus?
}

extension RegisterSchemaVersionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case schemaVersionId = "SchemaVersionId"
        case status = "Status"
        case versionNumber = "VersionNumber"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaVersionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schemaVersionId)
        schemaVersionId = schemaVersionIdDecoded
        let versionNumberDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .versionNumber) ?? 0
        versionNumber = versionNumberDecoded
        let statusDecoded = try containerValues.decodeIfPresent(GlueClientTypes.SchemaVersionStatus.self, forKey: .status)
        status = statusDecoded
    }
}
