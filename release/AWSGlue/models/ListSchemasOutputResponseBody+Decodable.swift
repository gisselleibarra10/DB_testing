// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSchemasOutputResponseBody: Swift.Equatable {
    let schemas: [GlueClientTypes.SchemaListItem]?
    let nextToken: Swift.String?
}

extension ListSchemasOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case schemas = "Schemas"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemasContainer = try containerValues.decodeIfPresent([GlueClientTypes.SchemaListItem?].self, forKey: .schemas)
        var schemasDecoded0:[GlueClientTypes.SchemaListItem]? = nil
        if let schemasContainer = schemasContainer {
            schemasDecoded0 = [GlueClientTypes.SchemaListItem]()
            for structure0 in schemasContainer {
                if let structure0 = structure0 {
                    schemasDecoded0?.append(structure0)
                }
            }
        }
        schemas = schemasDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
