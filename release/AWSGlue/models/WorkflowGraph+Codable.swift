// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlueClientTypes.WorkflowGraph: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case edges = "Edges"
        case nodes = "Nodes"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let edges = edges {
            var edgesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .edges)
            for edgelist0 in edges {
                try edgesContainer.encode(edgelist0)
            }
        }
        if let nodes = nodes {
            var nodesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .nodes)
            for nodelist0 in nodes {
                try nodesContainer.encode(nodelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nodesContainer = try containerValues.decodeIfPresent([GlueClientTypes.Node?].self, forKey: .nodes)
        var nodesDecoded0:[GlueClientTypes.Node]? = nil
        if let nodesContainer = nodesContainer {
            nodesDecoded0 = [GlueClientTypes.Node]()
            for structure0 in nodesContainer {
                if let structure0 = structure0 {
                    nodesDecoded0?.append(structure0)
                }
            }
        }
        nodes = nodesDecoded0
        let edgesContainer = try containerValues.decodeIfPresent([GlueClientTypes.Edge?].self, forKey: .edges)
        var edgesDecoded0:[GlueClientTypes.Edge]? = nil
        if let edgesContainer = edgesContainer {
            edgesDecoded0 = [GlueClientTypes.Edge]()
            for structure0 in edgesContainer {
                if let structure0 = structure0 {
                    edgesDecoded0?.append(structure0)
                }
            }
        }
        edges = edgesDecoded0
    }
}
