// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateKeyPairOutputResponseBody: Swift.Equatable {
    let keyPair: LightsailClientTypes.KeyPair?
    let publicKeyBase64: Swift.String?
    let privateKeyBase64: Swift.String?
    let operation: LightsailClientTypes.Operation?
}

extension CreateKeyPairOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case keyPair
        case operation
        case privateKeyBase64
        case publicKeyBase64
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyPairDecoded = try containerValues.decodeIfPresent(LightsailClientTypes.KeyPair.self, forKey: .keyPair)
        keyPair = keyPairDecoded
        let publicKeyBase64Decoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publicKeyBase64)
        publicKeyBase64 = publicKeyBase64Decoded
        let privateKeyBase64Decoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .privateKeyBase64)
        privateKeyBase64 = privateKeyBase64Decoded
        let operationDecoded = try containerValues.decodeIfPresent(LightsailClientTypes.Operation.self, forKey: .operation)
        operation = operationDecoded
    }
}
