// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LightsailClientTypes.PasswordData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ciphertext
        case keyPairName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ciphertext = self.ciphertext {
            try encodeContainer.encode(ciphertext, forKey: .ciphertext)
        }
        if let keyPairName = self.keyPairName {
            try encodeContainer.encode(keyPairName, forKey: .keyPairName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ciphertextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ciphertext)
        ciphertext = ciphertextDecoded
        let keyPairNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyPairName)
        keyPairName = keyPairNameDecoded
    }
}
