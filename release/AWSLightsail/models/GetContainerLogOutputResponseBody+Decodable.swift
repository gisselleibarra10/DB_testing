// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetContainerLogOutputResponseBody: Swift.Equatable {
    let logEvents: [LightsailClientTypes.ContainerServiceLogEvent]?
    let nextPageToken: Swift.String?
}

extension GetContainerLogOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case logEvents
        case nextPageToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logEventsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.ContainerServiceLogEvent?].self, forKey: .logEvents)
        var logEventsDecoded0:[LightsailClientTypes.ContainerServiceLogEvent]? = nil
        if let logEventsContainer = logEventsContainer {
            logEventsDecoded0 = [LightsailClientTypes.ContainerServiceLogEvent]()
            for structure0 in logEventsContainer {
                if let structure0 = structure0 {
                    logEventsDecoded0?.append(structure0)
                }
            }
        }
        logEvents = logEventsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
