// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLoadBalancerTlsPoliciesOutputResponseBody: Swift.Equatable {
    let tlsPolicies: [LightsailClientTypes.LoadBalancerTlsPolicy]?
    let nextPageToken: Swift.String?
}

extension GetLoadBalancerTlsPoliciesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextPageToken
        case tlsPolicies
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tlsPoliciesContainer = try containerValues.decodeIfPresent([LightsailClientTypes.LoadBalancerTlsPolicy?].self, forKey: .tlsPolicies)
        var tlsPoliciesDecoded0:[LightsailClientTypes.LoadBalancerTlsPolicy]? = nil
        if let tlsPoliciesContainer = tlsPoliciesContainer {
            tlsPoliciesDecoded0 = [LightsailClientTypes.LoadBalancerTlsPolicy]()
            for structure0 in tlsPoliciesContainer {
                if let structure0 = structure0 {
                    tlsPoliciesDecoded0?.append(structure0)
                }
            }
        }
        tlsPolicies = tlsPoliciesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
