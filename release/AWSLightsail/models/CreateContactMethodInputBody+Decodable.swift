// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateContactMethodInputBody: Swift.Equatable {
    let `protocol`: LightsailClientTypes.ContactProtocol?
    let contactEndpoint: Swift.String?
}

extension CreateContactMethodInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contactEndpoint
        case `protocol` = "protocol"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let protocolDecoded = try containerValues.decodeIfPresent(LightsailClientTypes.ContactProtocol.self, forKey: .protocol)
        `protocol` = protocolDecoded
        let contactEndpointDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .contactEndpoint)
        contactEndpoint = contactEndpointDecoded
    }
}
