// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetKeyPairsOutputResponseBody: Swift.Equatable {
    let keyPairs: [LightsailClientTypes.KeyPair]?
    let nextPageToken: Swift.String?
}

extension GetKeyPairsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case keyPairs
        case nextPageToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyPairsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.KeyPair?].self, forKey: .keyPairs)
        var keyPairsDecoded0:[LightsailClientTypes.KeyPair]? = nil
        if let keyPairsContainer = keyPairsContainer {
            keyPairsDecoded0 = [LightsailClientTypes.KeyPair]()
            for structure0 in keyPairsContainer {
                if let structure0 = structure0 {
                    keyPairsDecoded0?.append(structure0)
                }
            }
        }
        keyPairs = keyPairsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
