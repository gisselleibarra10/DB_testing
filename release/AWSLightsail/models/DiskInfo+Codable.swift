// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LightsailClientTypes.DiskInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case isSystemDisk
        case name
        case path
        case sizeInGb
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let isSystemDisk = self.isSystemDisk {
            try encodeContainer.encode(isSystemDisk, forKey: .isSystemDisk)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let path = self.path {
            try encodeContainer.encode(path, forKey: .path)
        }
        if let sizeInGb = self.sizeInGb {
            try encodeContainer.encode(sizeInGb, forKey: .sizeInGb)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let pathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .path)
        path = pathDecoded
        let sizeInGbDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sizeInGb)
        sizeInGb = sizeInGbDecoded
        let isSystemDiskDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isSystemDisk)
        isSystemDisk = isSystemDiskDecoded
    }
}
