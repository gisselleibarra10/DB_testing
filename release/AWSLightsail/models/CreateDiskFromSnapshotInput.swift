// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDiskFromSnapshotInput: Swift.Equatable {
    /// An array of objects that represent the add-ons to enable for the new disk.
    public var addOns: [LightsailClientTypes.AddOnRequest]?
    /// The Availability Zone where you want to create the disk (e.g., us-east-2a). Choose the same Availability Zone as the Lightsail instance where you want to create the disk. Use the GetRegions operation to list the Availability Zones where Lightsail is currently available.
    /// This member is required.
    public var availabilityZone: Swift.String?
    /// The unique Lightsail disk name (e.g., my-disk).
    /// This member is required.
    public var diskName: Swift.String?
    /// The name of the disk snapshot (e.g., my-snapshot) from which to create the new storage disk. Constraint:
    ///
    /// * This parameter cannot be defined together with the source disk name parameter. The disk snapshot name and source disk name parameters are mutually exclusive.
    public var diskSnapshotName: Swift.String?
    /// The date of the automatic snapshot to use for the new disk. Use the get auto snapshots operation to identify the dates of the available automatic snapshots. Constraints:
    ///
    /// * Must be specified in YYYY-MM-DD format.
    ///
    /// * This parameter cannot be defined together with the use latest restorable auto snapshot parameter. The restore date and use latest restorable auto snapshot parameters are mutually exclusive.
    ///
    /// * Define this parameter only when creating a new disk from an automatic snapshot. For more information, see the [Amazon Lightsail Developer Guide](https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots).
    public var restoreDate: Swift.String?
    /// The size of the disk in GB (e.g., 32).
    /// This member is required.
    public var sizeInGb: Swift.Int?
    /// The name of the source disk from which the source automatic snapshot was created. Constraints:
    ///
    /// * This parameter cannot be defined together with the disk snapshot name parameter. The source disk name and disk snapshot name parameters are mutually exclusive.
    ///
    /// * Define this parameter only when creating a new disk from an automatic snapshot. For more information, see the [Amazon Lightsail Developer Guide](https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots).
    public var sourceDiskName: Swift.String?
    /// The tag keys and optional values to add to the resource during create. Use the TagResource action to tag a resource after it's created.
    public var tags: [LightsailClientTypes.Tag]?
    /// A Boolean value to indicate whether to use the latest available automatic snapshot. Constraints:
    ///
    /// * This parameter cannot be defined together with the restore date parameter. The use latest restorable auto snapshot and restore date parameters are mutually exclusive.
    ///
    /// * Define this parameter only when creating a new disk from an automatic snapshot. For more information, see the [Amazon Lightsail Developer Guide](https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots).
    public var useLatestRestorableAutoSnapshot: Swift.Bool?

    public init (
        addOns: [LightsailClientTypes.AddOnRequest]? = nil,
        availabilityZone: Swift.String? = nil,
        diskName: Swift.String? = nil,
        diskSnapshotName: Swift.String? = nil,
        restoreDate: Swift.String? = nil,
        sizeInGb: Swift.Int? = nil,
        sourceDiskName: Swift.String? = nil,
        tags: [LightsailClientTypes.Tag]? = nil,
        useLatestRestorableAutoSnapshot: Swift.Bool? = nil
    )
    {
        self.addOns = addOns
        self.availabilityZone = availabilityZone
        self.diskName = diskName
        self.diskSnapshotName = diskSnapshotName
        self.restoreDate = restoreDate
        self.sizeInGb = sizeInGb
        self.sourceDiskName = sourceDiskName
        self.tags = tags
        self.useLatestRestorableAutoSnapshot = useLatestRestorableAutoSnapshot
    }
}
