// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateBucketInputBody: Swift.Equatable {
    let bucketName: Swift.String?
    let bundleId: Swift.String?
    let tags: [LightsailClientTypes.Tag]?
    let enableObjectVersioning: Swift.Bool?
}

extension CreateBucketInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bucketName
        case bundleId
        case enableObjectVersioning
        case tags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bucketNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bucketName)
        bucketName = bucketNameDecoded
        let bundleIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bundleId)
        bundleId = bundleIdDecoded
        let tagsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[LightsailClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [LightsailClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
        let enableObjectVersioningDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableObjectVersioning)
        enableObjectVersioning = enableObjectVersioningDecoded
    }
}
