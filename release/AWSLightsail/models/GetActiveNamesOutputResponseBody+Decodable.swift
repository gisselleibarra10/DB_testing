// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetActiveNamesOutputResponseBody: Swift.Equatable {
    let activeNames: [Swift.String]?
    let nextPageToken: Swift.String?
}

extension GetActiveNamesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activeNames
        case nextPageToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activeNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .activeNames)
        var activeNamesDecoded0:[Swift.String]? = nil
        if let activeNamesContainer = activeNamesContainer {
            activeNamesDecoded0 = [Swift.String]()
            for string0 in activeNamesContainer {
                if let string0 = string0 {
                    activeNamesDecoded0?.append(string0)
                }
            }
        }
        activeNames = activeNamesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
