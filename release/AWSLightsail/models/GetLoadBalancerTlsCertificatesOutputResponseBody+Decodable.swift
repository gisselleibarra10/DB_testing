// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLoadBalancerTlsCertificatesOutputResponseBody: Swift.Equatable {
    let tlsCertificates: [LightsailClientTypes.LoadBalancerTlsCertificate]?
}

extension GetLoadBalancerTlsCertificatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case tlsCertificates
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tlsCertificatesContainer = try containerValues.decodeIfPresent([LightsailClientTypes.LoadBalancerTlsCertificate?].self, forKey: .tlsCertificates)
        var tlsCertificatesDecoded0:[LightsailClientTypes.LoadBalancerTlsCertificate]? = nil
        if let tlsCertificatesContainer = tlsCertificatesContainer {
            tlsCertificatesDecoded0 = [LightsailClientTypes.LoadBalancerTlsCertificate]()
            for structure0 in tlsCertificatesContainer {
                if let structure0 = structure0 {
                    tlsCertificatesDecoded0?.append(structure0)
                }
            }
        }
        tlsCertificates = tlsCertificatesDecoded0
    }
}
