// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateRelationalDatabaseFromSnapshotInputBody: Swift.Equatable {
    let relationalDatabaseName: Swift.String?
    let availabilityZone: Swift.String?
    let publiclyAccessible: Swift.Bool?
    let relationalDatabaseSnapshotName: Swift.String?
    let relationalDatabaseBundleId: Swift.String?
    let sourceRelationalDatabaseName: Swift.String?
    let restoreTime: ClientRuntime.Date?
    let useLatestRestorableTime: Swift.Bool?
    let tags: [LightsailClientTypes.Tag]?
}

extension CreateRelationalDatabaseFromSnapshotInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case availabilityZone
        case publiclyAccessible
        case relationalDatabaseBundleId
        case relationalDatabaseName
        case relationalDatabaseSnapshotName
        case restoreTime
        case sourceRelationalDatabaseName
        case tags
        case useLatestRestorableTime
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relationalDatabaseNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .relationalDatabaseName)
        relationalDatabaseName = relationalDatabaseNameDecoded
        let availabilityZoneDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .availabilityZone)
        availabilityZone = availabilityZoneDecoded
        let publiclyAccessibleDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .publiclyAccessible)
        publiclyAccessible = publiclyAccessibleDecoded
        let relationalDatabaseSnapshotNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .relationalDatabaseSnapshotName)
        relationalDatabaseSnapshotName = relationalDatabaseSnapshotNameDecoded
        let relationalDatabaseBundleIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .relationalDatabaseBundleId)
        relationalDatabaseBundleId = relationalDatabaseBundleIdDecoded
        let sourceRelationalDatabaseNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceRelationalDatabaseName)
        sourceRelationalDatabaseName = sourceRelationalDatabaseNameDecoded
        let restoreTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .restoreTime)
        restoreTime = restoreTimeDecoded
        let useLatestRestorableTimeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .useLatestRestorableTime)
        useLatestRestorableTime = useLatestRestorableTimeDecoded
        let tagsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[LightsailClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [LightsailClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
