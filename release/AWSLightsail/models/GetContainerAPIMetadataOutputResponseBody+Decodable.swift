// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetContainerAPIMetadataOutputResponseBody: Swift.Equatable {
    let metadata: [[Swift.String:Swift.String]]?
}

extension GetContainerAPIMetadataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metadata
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metadataContainer = try containerValues.decodeIfPresent([[Swift.String: Swift.String?]?].self, forKey: .metadata)
        var metadataDecoded0:[[Swift.String:Swift.String]]? = nil
        if let metadataContainer = metadataContainer {
            metadataDecoded0 = [[Swift.String:Swift.String]]()
            for map0 in metadataContainer {
                var metadataContainerDecoded0: [Swift.String: Swift.String]? = nil
                if let map0 = map0 {
                    metadataContainerDecoded0 = [Swift.String: Swift.String]()
                    for (key1, string1) in map0 {
                        if let string1 = string1 {
                            metadataContainerDecoded0?[key1] = string1
                        }
                    }
                }
                if let metadataContainerDecoded0 = metadataContainerDecoded0 {
                    metadataDecoded0?.append(metadataContainerDecoded0)
                }
            }
        }
        metadata = metadataDecoded0
    }
}
