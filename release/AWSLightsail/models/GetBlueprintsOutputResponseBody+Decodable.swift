// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBlueprintsOutputResponseBody: Swift.Equatable {
    let blueprints: [LightsailClientTypes.Blueprint]?
    let nextPageToken: Swift.String?
}

extension GetBlueprintsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blueprints
        case nextPageToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blueprintsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.Blueprint?].self, forKey: .blueprints)
        var blueprintsDecoded0:[LightsailClientTypes.Blueprint]? = nil
        if let blueprintsContainer = blueprintsContainer {
            blueprintsDecoded0 = [LightsailClientTypes.Blueprint]()
            for structure0 in blueprintsContainer {
                if let structure0 = structure0 {
                    blueprintsDecoded0?.append(structure0)
                }
            }
        }
        blueprints = blueprintsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
