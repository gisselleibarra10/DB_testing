// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LightsailClientTypes.HostKeyAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case algorithm
        case fingerprintSHA1
        case fingerprintSHA256
        case notValidAfter
        case notValidBefore
        case publicKey
        case witnessedAt
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let algorithm = self.algorithm {
            try encodeContainer.encode(algorithm, forKey: .algorithm)
        }
        if let fingerprintSHA1 = self.fingerprintSHA1 {
            try encodeContainer.encode(fingerprintSHA1, forKey: .fingerprintSHA1)
        }
        if let fingerprintSHA256 = self.fingerprintSHA256 {
            try encodeContainer.encode(fingerprintSHA256, forKey: .fingerprintSHA256)
        }
        if let notValidAfter = self.notValidAfter {
            try encodeContainer.encode(notValidAfter.timeIntervalSince1970, forKey: .notValidAfter)
        }
        if let notValidBefore = self.notValidBefore {
            try encodeContainer.encode(notValidBefore.timeIntervalSince1970, forKey: .notValidBefore)
        }
        if let publicKey = self.publicKey {
            try encodeContainer.encode(publicKey, forKey: .publicKey)
        }
        if let witnessedAt = self.witnessedAt {
            try encodeContainer.encode(witnessedAt.timeIntervalSince1970, forKey: .witnessedAt)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let algorithmDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .algorithm)
        algorithm = algorithmDecoded
        let publicKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publicKey)
        publicKey = publicKeyDecoded
        let witnessedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .witnessedAt)
        witnessedAt = witnessedAtDecoded
        let fingerprintSHA1Decoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fingerprintSHA1)
        fingerprintSHA1 = fingerprintSHA1Decoded
        let fingerprintSHA256Decoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fingerprintSHA256)
        fingerprintSHA256 = fingerprintSHA256Decoded
        let notValidBeforeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .notValidBefore)
        notValidBefore = notValidBeforeDecoded
        let notValidAfterDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .notValidAfter)
        notValidAfter = notValidAfterDecoded
    }
}
