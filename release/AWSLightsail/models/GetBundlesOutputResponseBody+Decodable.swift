// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBundlesOutputResponseBody: Swift.Equatable {
    let bundles: [LightsailClientTypes.Bundle]?
    let nextPageToken: Swift.String?
}

extension GetBundlesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bundles
        case nextPageToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bundlesContainer = try containerValues.decodeIfPresent([LightsailClientTypes.Bundle?].self, forKey: .bundles)
        var bundlesDecoded0:[LightsailClientTypes.Bundle]? = nil
        if let bundlesContainer = bundlesContainer {
            bundlesDecoded0 = [LightsailClientTypes.Bundle]()
            for structure0 in bundlesContainer {
                if let structure0 = structure0 {
                    bundlesDecoded0?.append(structure0)
                }
            }
        }
        bundles = bundlesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
