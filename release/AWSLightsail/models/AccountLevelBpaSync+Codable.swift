// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LightsailClientTypes.AccountLevelBpaSync: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bpaImpactsLightsail
        case lastSyncedAt
        case message
        case status
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bpaImpactsLightsail = self.bpaImpactsLightsail {
            try encodeContainer.encode(bpaImpactsLightsail, forKey: .bpaImpactsLightsail)
        }
        if let lastSyncedAt = self.lastSyncedAt {
            try encodeContainer.encode(lastSyncedAt.timeIntervalSince1970, forKey: .lastSyncedAt)
        }
        if let message = self.message {
            try encodeContainer.encode(message.rawValue, forKey: .message)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(LightsailClientTypes.AccountLevelBpaSyncStatus.self, forKey: .status)
        status = statusDecoded
        let lastSyncedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastSyncedAt)
        lastSyncedAt = lastSyncedAtDecoded
        let messageDecoded = try containerValues.decodeIfPresent(LightsailClientTypes.BPAStatusMessage.self, forKey: .message)
        message = messageDecoded
        let bpaImpactsLightsailDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .bpaImpactsLightsail)
        bpaImpactsLightsail = bpaImpactsLightsailDecoded
    }
}
