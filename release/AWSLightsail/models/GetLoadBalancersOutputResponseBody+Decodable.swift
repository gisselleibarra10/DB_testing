// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLoadBalancersOutputResponseBody: Swift.Equatable {
    let loadBalancers: [LightsailClientTypes.LoadBalancer]?
    let nextPageToken: Swift.String?
}

extension GetLoadBalancersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case loadBalancers
        case nextPageToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let loadBalancersContainer = try containerValues.decodeIfPresent([LightsailClientTypes.LoadBalancer?].self, forKey: .loadBalancers)
        var loadBalancersDecoded0:[LightsailClientTypes.LoadBalancer]? = nil
        if let loadBalancersContainer = loadBalancersContainer {
            loadBalancersDecoded0 = [LightsailClientTypes.LoadBalancer]()
            for structure0 in loadBalancersContainer {
                if let structure0 = structure0 {
                    loadBalancersDecoded0?.append(structure0)
                }
            }
        }
        loadBalancers = loadBalancersDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
