// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateLoadBalancerAttributeInput: Swift.Equatable {
    /// The name of the attribute you want to update.
    /// This member is required.
    public var attributeName: LightsailClientTypes.LoadBalancerAttributeName?
    /// The value that you want to specify for the attribute name. The following values are supported depending on what you specify for the attributeName request parameter:
    ///
    /// * If you specify HealthCheckPath for the attributeName request parameter, then the attributeValue request parameter must be the path to ping on the target (for example, /weather/us/wa/seattle).
    ///
    /// * If you specify SessionStickinessEnabled for the attributeName request parameter, then the attributeValue request parameter must be true to activate session stickiness or false to deactivate session stickiness.
    ///
    /// * If you specify SessionStickiness_LB_CookieDurationSeconds for the attributeName request parameter, then the attributeValue request parameter must be an interger that represents the cookie duration in seconds.
    ///
    /// * If you specify HttpsRedirectionEnabled for the attributeName request parameter, then the attributeValue request parameter must be true to activate HTTP to HTTPS redirection or false to deactivate HTTP to HTTPS redirection.
    ///
    /// * If you specify TlsPolicyName for the attributeName request parameter, then the attributeValue request parameter must be the name of the TLS policy. Use the [GetLoadBalancerTlsPolicies](https://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetLoadBalancerTlsPolicies.html) action to get a list of TLS policy names that you can specify.
    /// This member is required.
    public var attributeValue: Swift.String?
    /// The name of the load balancer that you want to modify (e.g., my-load-balancer.
    /// This member is required.
    public var loadBalancerName: Swift.String?

    public init (
        attributeName: LightsailClientTypes.LoadBalancerAttributeName? = nil,
        attributeValue: Swift.String? = nil,
        loadBalancerName: Swift.String? = nil
    )
    {
        self.attributeName = attributeName
        self.attributeValue = attributeValue
        self.loadBalancerName = loadBalancerName
    }
}
