// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDistributionMetricDataOutputResponseBody: Swift.Equatable {
    let metricName: LightsailClientTypes.DistributionMetricName?
    let metricData: [LightsailClientTypes.MetricDatapoint]?
}

extension GetDistributionMetricDataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metricData
        case metricName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricNameDecoded = try containerValues.decodeIfPresent(LightsailClientTypes.DistributionMetricName.self, forKey: .metricName)
        metricName = metricNameDecoded
        let metricDataContainer = try containerValues.decodeIfPresent([LightsailClientTypes.MetricDatapoint?].self, forKey: .metricData)
        var metricDataDecoded0:[LightsailClientTypes.MetricDatapoint]? = nil
        if let metricDataContainer = metricDataContainer {
            metricDataDecoded0 = [LightsailClientTypes.MetricDatapoint]()
            for structure0 in metricDataContainer {
                if let structure0 = structure0 {
                    metricDataDecoded0?.append(structure0)
                }
            }
        }
        metricData = metricDataDecoded0
    }
}
