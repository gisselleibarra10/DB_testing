// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LightsailClientTypes {
    /// Describes a database bundle. A bundle describes the performance specifications of the database.
    public struct RelationalDatabaseBundle: Swift.Equatable {
        /// The ID for the database bundle.
        public var bundleId: Swift.String?
        /// The number of virtual CPUs (vCPUs) for the database bundle.
        public var cpuCount: Swift.Int?
        /// The size of the disk for the database bundle.
        public var diskSizeInGb: Swift.Int?
        /// A Boolean value indicating whether the database bundle is active.
        public var isActive: Swift.Bool?
        /// A Boolean value indicating whether the database bundle is encrypted.
        public var isEncrypted: Swift.Bool?
        /// The name for the database bundle.
        public var name: Swift.String?
        /// The cost of the database bundle in US currency.
        public var price: Swift.Float?
        /// The amount of RAM in GB (for example, 2.0) for the database bundle.
        public var ramSizeInGb: Swift.Float?
        /// The data transfer rate per month in GB for the database bundle.
        public var transferPerMonthInGb: Swift.Int?

        public init (
            bundleId: Swift.String? = nil,
            cpuCount: Swift.Int? = nil,
            diskSizeInGb: Swift.Int? = nil,
            isActive: Swift.Bool? = nil,
            isEncrypted: Swift.Bool? = nil,
            name: Swift.String? = nil,
            price: Swift.Float? = nil,
            ramSizeInGb: Swift.Float? = nil,
            transferPerMonthInGb: Swift.Int? = nil
        )
        {
            self.bundleId = bundleId
            self.cpuCount = cpuCount
            self.diskSizeInGb = diskSizeInGb
            self.isActive = isActive
            self.isEncrypted = isEncrypted
            self.name = name
            self.price = price
            self.ramSizeInGb = ramSizeInGb
            self.transferPerMonthInGb = transferPerMonthInGb
        }
    }

}
