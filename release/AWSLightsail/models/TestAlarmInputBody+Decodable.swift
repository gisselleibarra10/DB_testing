// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestAlarmInputBody: Swift.Equatable {
    let alarmName: Swift.String?
    let state: LightsailClientTypes.AlarmState?
}

extension TestAlarmInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarmName
        case state
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alarmName)
        alarmName = alarmNameDecoded
        let stateDecoded = try containerValues.decodeIfPresent(LightsailClientTypes.AlarmState.self, forKey: .state)
        state = stateDecoded
    }
}
