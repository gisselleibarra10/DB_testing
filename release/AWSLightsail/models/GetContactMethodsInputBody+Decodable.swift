// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetContactMethodsInputBody: Swift.Equatable {
    let protocols: [LightsailClientTypes.ContactProtocol]?
}

extension GetContactMethodsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case protocols
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let protocolsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.ContactProtocol?].self, forKey: .protocols)
        var protocolsDecoded0:[LightsailClientTypes.ContactProtocol]? = nil
        if let protocolsContainer = protocolsContainer {
            protocolsDecoded0 = [LightsailClientTypes.ContactProtocol]()
            for enum0 in protocolsContainer {
                if let enum0 = enum0 {
                    protocolsDecoded0?.append(enum0)
                }
            }
        }
        protocols = protocolsDecoded0
    }
}
