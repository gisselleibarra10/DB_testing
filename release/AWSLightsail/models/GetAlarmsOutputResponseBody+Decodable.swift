// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAlarmsOutputResponseBody: Swift.Equatable {
    let alarms: [LightsailClientTypes.Alarm]?
    let nextPageToken: Swift.String?
}

extension GetAlarmsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarms
        case nextPageToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.Alarm?].self, forKey: .alarms)
        var alarmsDecoded0:[LightsailClientTypes.Alarm]? = nil
        if let alarmsContainer = alarmsContainer {
            alarmsDecoded0 = [LightsailClientTypes.Alarm]()
            for structure0 in alarmsContainer {
                if let structure0 = structure0 {
                    alarmsDecoded0?.append(structure0)
                }
            }
        }
        alarms = alarmsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
