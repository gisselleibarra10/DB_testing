// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateRelationalDatabaseInput: Swift.Equatable {
    /// When true, applies changes immediately. When false, applies changes during the preferred maintenance window. Some changes may cause an outage. Default: false
    public var applyImmediately: Swift.Bool?
    /// Indicates the certificate that needs to be associated with the database.
    public var caCertificateIdentifier: Swift.String?
    /// When true, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database using the create relational database snapshot operation. Updates are applied during the next maintenance window because this can result in an outage.
    public var disableBackupRetention: Swift.Bool?
    /// When true, enables automated backup retention for your database. Updates are applied during the next maintenance window because this can result in an outage.
    public var enableBackupRetention: Swift.Bool?
    /// The password for the master user. The password can include any printable ASCII character except "/", """, or "@". MySQL Constraints: Must contain from 8 to 41 characters. PostgreSQL Constraints: Must contain from 8 to 128 characters.
    public var masterUserPassword: Swift.String?
    /// The daily time range during which automated backups are created for your database if automated backups are enabled. Constraints:
    ///
    /// * Must be in the hh24:mi-hh24:mi format. Example: 16:00-16:30
    ///
    /// * Specified in Coordinated Universal Time (UTC).
    ///
    /// * Must not conflict with the preferred maintenance window.
    ///
    /// * Must be at least 30 minutes.
    public var preferredBackupWindow: Swift.String?
    /// The weekly time range during which system maintenance can occur on your database. The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. Constraints:
    ///
    /// * Must be in the ddd:hh24:mi-ddd:hh24:mi format.
    ///
    /// * Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
    ///
    /// * Must be at least 30 minutes.
    ///
    /// * Specified in Coordinated Universal Time (UTC).
    ///
    /// * Example: Tue:17:00-Tue:17:30
    public var preferredMaintenanceWindow: Swift.String?
    /// Specifies the accessibility options for your database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
    public var publiclyAccessible: Swift.Bool?
    /// The name of your Lightsail database resource to update.
    /// This member is required.
    public var relationalDatabaseName: Swift.String?
    /// When true, the master user password is changed to a new strong password generated by Lightsail. Use the get relational database master user password operation to get the new password.
    public var rotateMasterUserPassword: Swift.Bool?

    public init (
        applyImmediately: Swift.Bool? = nil,
        caCertificateIdentifier: Swift.String? = nil,
        disableBackupRetention: Swift.Bool? = nil,
        enableBackupRetention: Swift.Bool? = nil,
        masterUserPassword: Swift.String? = nil,
        preferredBackupWindow: Swift.String? = nil,
        preferredMaintenanceWindow: Swift.String? = nil,
        publiclyAccessible: Swift.Bool? = nil,
        relationalDatabaseName: Swift.String? = nil,
        rotateMasterUserPassword: Swift.Bool? = nil
    )
    {
        self.applyImmediately = applyImmediately
        self.caCertificateIdentifier = caCertificateIdentifier
        self.disableBackupRetention = disableBackupRetention
        self.enableBackupRetention = enableBackupRetention
        self.masterUserPassword = masterUserPassword
        self.preferredBackupWindow = preferredBackupWindow
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.publiclyAccessible = publiclyAccessible
        self.relationalDatabaseName = relationalDatabaseName
        self.rotateMasterUserPassword = rotateMasterUserPassword
    }
}
