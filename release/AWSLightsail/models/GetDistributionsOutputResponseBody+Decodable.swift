// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDistributionsOutputResponseBody: Swift.Equatable {
    let distributions: [LightsailClientTypes.LightsailDistribution]?
    let nextPageToken: Swift.String?
}

extension GetDistributionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case distributions
        case nextPageToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let distributionsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.LightsailDistribution?].self, forKey: .distributions)
        var distributionsDecoded0:[LightsailClientTypes.LightsailDistribution]? = nil
        if let distributionsContainer = distributionsContainer {
            distributionsDecoded0 = [LightsailClientTypes.LightsailDistribution]()
            for structure0 in distributionsContainer {
                if let structure0 = structure0 {
                    distributionsDecoded0?.append(structure0)
                }
            }
        }
        distributions = distributionsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
