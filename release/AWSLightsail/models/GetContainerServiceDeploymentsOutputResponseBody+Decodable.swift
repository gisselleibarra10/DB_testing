// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetContainerServiceDeploymentsOutputResponseBody: Swift.Equatable {
    let deployments: [LightsailClientTypes.ContainerServiceDeployment]?
}

extension GetContainerServiceDeploymentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deployments
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.ContainerServiceDeployment?].self, forKey: .deployments)
        var deploymentsDecoded0:[LightsailClientTypes.ContainerServiceDeployment]? = nil
        if let deploymentsContainer = deploymentsContainer {
            deploymentsDecoded0 = [LightsailClientTypes.ContainerServiceDeployment]()
            for structure0 in deploymentsContainer {
                if let structure0 = structure0 {
                    deploymentsDecoded0?.append(structure0)
                }
            }
        }
        deployments = deploymentsDecoded0
    }
}
