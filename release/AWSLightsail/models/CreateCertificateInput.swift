// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateCertificateInput: Swift.Equatable {
    /// The name for the certificate.
    /// This member is required.
    public var certificateName: Swift.String?
    /// The domain name (e.g., example.com) for the certificate.
    /// This member is required.
    public var domainName: Swift.String?
    /// An array of strings that specify the alternate domains (e.g., example2.com) and subdomains (e.g., blog.example.com) for the certificate. You can specify a maximum of nine alternate domains (in addition to the primary domain name). Wildcard domain entries (e.g., *.example.com) are not supported.
    public var subjectAlternativeNames: [Swift.String]?
    /// The tag keys and optional values to add to the certificate during create. Use the TagResource action to tag a resource after it's created.
    public var tags: [LightsailClientTypes.Tag]?

    public init (
        certificateName: Swift.String? = nil,
        domainName: Swift.String? = nil,
        subjectAlternativeNames: [Swift.String]? = nil,
        tags: [LightsailClientTypes.Tag]? = nil
    )
    {
        self.certificateName = certificateName
        self.domainName = domainName
        self.subjectAlternativeNames = subjectAlternativeNames
        self.tags = tags
    }
}
