// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AttachDiskInputBody: Swift.Equatable {
    let diskName: Swift.String?
    let instanceName: Swift.String?
    let diskPath: Swift.String?
}

extension AttachDiskInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case diskName
        case diskPath
        case instanceName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let diskNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .diskName)
        diskName = diskNameDecoded
        let instanceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceName)
        instanceName = instanceNameDecoded
        let diskPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .diskPath)
        diskPath = diskPathDecoded
    }
}
