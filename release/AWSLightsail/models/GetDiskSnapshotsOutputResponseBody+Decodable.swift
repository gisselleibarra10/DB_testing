// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDiskSnapshotsOutputResponseBody: Swift.Equatable {
    let diskSnapshots: [LightsailClientTypes.DiskSnapshot]?
    let nextPageToken: Swift.String?
}

extension GetDiskSnapshotsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case diskSnapshots
        case nextPageToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let diskSnapshotsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.DiskSnapshot?].self, forKey: .diskSnapshots)
        var diskSnapshotsDecoded0:[LightsailClientTypes.DiskSnapshot]? = nil
        if let diskSnapshotsContainer = diskSnapshotsContainer {
            diskSnapshotsDecoded0 = [LightsailClientTypes.DiskSnapshot]()
            for structure0 in diskSnapshotsContainer {
                if let structure0 = structure0 {
                    diskSnapshotsDecoded0?.append(structure0)
                }
            }
        }
        diskSnapshots = diskSnapshotsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
