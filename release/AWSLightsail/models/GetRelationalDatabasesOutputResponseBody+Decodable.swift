// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRelationalDatabasesOutputResponseBody: Swift.Equatable {
    let relationalDatabases: [LightsailClientTypes.RelationalDatabase]?
    let nextPageToken: Swift.String?
}

extension GetRelationalDatabasesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextPageToken
        case relationalDatabases
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relationalDatabasesContainer = try containerValues.decodeIfPresent([LightsailClientTypes.RelationalDatabase?].self, forKey: .relationalDatabases)
        var relationalDatabasesDecoded0:[LightsailClientTypes.RelationalDatabase]? = nil
        if let relationalDatabasesContainer = relationalDatabasesContainer {
            relationalDatabasesDecoded0 = [LightsailClientTypes.RelationalDatabase]()
            for structure0 in relationalDatabasesContainer {
                if let structure0 = structure0 {
                    relationalDatabasesDecoded0?.append(structure0)
                }
            }
        }
        relationalDatabases = relationalDatabasesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
