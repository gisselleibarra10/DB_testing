// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LightsailClientTypes {
    /// Describes the cache settings of an Amazon Lightsail content delivery network (CDN) distribution. These settings apply only to your distribution's cacheBehaviors (including the defaultCacheBehavior) that have a behavior of cache.
    public struct CacheSettings: Swift.Equatable {
        /// The HTTP methods that are processed and forwarded to the distribution's origin. You can specify the following options:
        ///
        /// * GET,HEAD - The distribution forwards the GET and HEAD methods.
        ///
        /// * GET,HEAD,OPTIONS - The distribution forwards the GET, HEAD, and OPTIONS methods.
        ///
        /// * GET,HEAD,OPTIONS,PUT,PATCH,POST,DELETE - The distribution forwards the GET, HEAD, OPTIONS, PUT, PATCH, POST, and DELETE methods.
        ///
        ///
        /// If you specify the third option, you might need to restrict access to your distribution's origin so users can't perform operations that you don't want them to. For example, you might not want users to have permission to delete objects from your origin.
        public var allowedHTTPMethods: Swift.String?
        /// The HTTP method responses that are cached by your distribution. You can specify the following options:
        ///
        /// * GET,HEAD - The distribution caches responses to the GET and HEAD methods.
        ///
        /// * GET,HEAD,OPTIONS - The distribution caches responses to the GET, HEAD, and OPTIONS methods.
        public var cachedHTTPMethods: Swift.String?
        /// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated. The value specified applies only when the origin does not add HTTP headers such as Cache-Control max-age, Cache-Control s-maxage, and Expires to objects.
        public var defaultTTL: Swift.Int?
        /// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded.
        public var forwardedCookies: LightsailClientTypes.CookieObject?
        /// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded.
        public var forwardedHeaders: LightsailClientTypes.HeaderObject?
        /// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded.
        public var forwardedQueryStrings: LightsailClientTypes.QueryStringObject?
        /// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated. The value specified applies only when the origin adds HTTP headers such as Cache-Control max-age, Cache-Control s-maxage, and Expires to objects.
        public var maximumTTL: Swift.Int?
        /// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated. A value of 0 must be specified for minimumTTL if the distribution is configured to forward all headers to the origin.
        public var minimumTTL: Swift.Int?

        public init (
            allowedHTTPMethods: Swift.String? = nil,
            cachedHTTPMethods: Swift.String? = nil,
            defaultTTL: Swift.Int? = nil,
            forwardedCookies: LightsailClientTypes.CookieObject? = nil,
            forwardedHeaders: LightsailClientTypes.HeaderObject? = nil,
            forwardedQueryStrings: LightsailClientTypes.QueryStringObject? = nil,
            maximumTTL: Swift.Int? = nil,
            minimumTTL: Swift.Int? = nil
        )
        {
            self.allowedHTTPMethods = allowedHTTPMethods
            self.cachedHTTPMethods = cachedHTTPMethods
            self.defaultTTL = defaultTTL
            self.forwardedCookies = forwardedCookies
            self.forwardedHeaders = forwardedHeaders
            self.forwardedQueryStrings = forwardedQueryStrings
            self.maximumTTL = maximumTTL
            self.minimumTTL = minimumTTL
        }
    }

}
