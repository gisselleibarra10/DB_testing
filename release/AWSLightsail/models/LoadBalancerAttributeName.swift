// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LightsailClientTypes {
    public enum LoadBalancerAttributeName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case healthcheckpath
        case httpsredirectionenabled
        case sessionstickinessenabled
        case sessionstickinessLbCookiedurationseconds
        case tlspolicyname
        case sdkUnknown(Swift.String)

        public static var allCases: [LoadBalancerAttributeName] {
            return [
                .healthcheckpath,
                .httpsredirectionenabled,
                .sessionstickinessenabled,
                .sessionstickinessLbCookiedurationseconds,
                .tlspolicyname,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .healthcheckpath: return "HealthCheckPath"
            case .httpsredirectionenabled: return "HttpsRedirectionEnabled"
            case .sessionstickinessenabled: return "SessionStickinessEnabled"
            case .sessionstickinessLbCookiedurationseconds: return "SessionStickiness_LB_CookieDurationSeconds"
            case .tlspolicyname: return "TlsPolicyName"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = LoadBalancerAttributeName(rawValue: rawValue) ?? LoadBalancerAttributeName.sdkUnknown(rawValue)
        }
    }
}
