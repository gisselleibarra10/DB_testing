// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateInstancesInput: Swift.Equatable {
    /// An array of objects representing the add-ons to enable for the new instance.
    public var addOns: [LightsailClientTypes.AddOnRequest]?
    /// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). You can get a list of Availability Zones by using the [get regions](http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html) operation. Be sure to add the include Availability Zones parameter to your request.
    /// This member is required.
    public var availabilityZone: Swift.String?
    /// The ID for a virtual private server image (e.g., app_wordpress_4_4 or app_lamp_7_0). Use the get blueprints operation to return a list of available images (or blueprints). Use active blueprints when creating new instances. Inactive blueprints are listed to support customers with existing instances and are not necessarily available to create new instances. Blueprints are marked inactive when they become outdated due to operating system updates or new application releases.
    /// This member is required.
    public var blueprintId: Swift.String?
    /// The bundle of specification information for your virtual private server (or instance), including the pricing plan (e.g., micro_1_0).
    /// This member is required.
    public var bundleId: Swift.String?
    /// (Deprecated) The name for your custom image. In releases prior to June 12, 2017, this parameter was ignored by the API. It is now deprecated.
    @available(*, deprecated)
    public var customImageName: Swift.String?
    /// The names to use for your new Lightsail instances. Separate multiple values using quotation marks and commas, for example: ["MyFirstInstance","MySecondInstance"]
    /// This member is required.
    public var instanceNames: [Swift.String]?
    /// The IP address type for the instance. The possible values are ipv4 for IPv4 only, and dualstack for IPv4 and IPv6. The default value is dualstack.
    public var ipAddressType: LightsailClientTypes.IpAddressType?
    /// The name of your key pair.
    public var keyPairName: Swift.String?
    /// The tag keys and optional values to add to the resource during create. Use the TagResource action to tag a resource after it's created.
    public var tags: [LightsailClientTypes.Tag]?
    /// A launch script you can create that configures a server with additional user data. For example, you might want to run apt-get -y update. Depending on the machine image you choose, the command to get software on your instance varies. Amazon Linux and CentOS use yum, Debian and Ubuntu use apt-get, and FreeBSD uses pkg. For a complete list, see the [Amazon Lightsail Developer Guide](https://lightsail.aws.amazon.com/ls/docs/en_us/articles/compare-options-choose-lightsail-instance-image).
    public var userData: Swift.String?

    public init (
        addOns: [LightsailClientTypes.AddOnRequest]? = nil,
        availabilityZone: Swift.String? = nil,
        blueprintId: Swift.String? = nil,
        bundleId: Swift.String? = nil,
        customImageName: Swift.String? = nil,
        instanceNames: [Swift.String]? = nil,
        ipAddressType: LightsailClientTypes.IpAddressType? = nil,
        keyPairName: Swift.String? = nil,
        tags: [LightsailClientTypes.Tag]? = nil,
        userData: Swift.String? = nil
    )
    {
        self.addOns = addOns
        self.availabilityZone = availabilityZone
        self.blueprintId = blueprintId
        self.bundleId = bundleId
        self.customImageName = customImageName
        self.instanceNames = instanceNames
        self.ipAddressType = ipAddressType
        self.keyPairName = keyPairName
        self.tags = tags
        self.userData = userData
    }
}
