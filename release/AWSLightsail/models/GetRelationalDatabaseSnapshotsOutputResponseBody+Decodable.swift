// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRelationalDatabaseSnapshotsOutputResponseBody: Swift.Equatable {
    let relationalDatabaseSnapshots: [LightsailClientTypes.RelationalDatabaseSnapshot]?
    let nextPageToken: Swift.String?
}

extension GetRelationalDatabaseSnapshotsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextPageToken
        case relationalDatabaseSnapshots
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relationalDatabaseSnapshotsContainer = try containerValues.decodeIfPresent([LightsailClientTypes.RelationalDatabaseSnapshot?].self, forKey: .relationalDatabaseSnapshots)
        var relationalDatabaseSnapshotsDecoded0:[LightsailClientTypes.RelationalDatabaseSnapshot]? = nil
        if let relationalDatabaseSnapshotsContainer = relationalDatabaseSnapshotsContainer {
            relationalDatabaseSnapshotsDecoded0 = [LightsailClientTypes.RelationalDatabaseSnapshot]()
            for structure0 in relationalDatabaseSnapshotsContainer {
                if let structure0 = structure0 {
                    relationalDatabaseSnapshotsDecoded0?.append(structure0)
                }
            }
        }
        relationalDatabaseSnapshots = relationalDatabaseSnapshotsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
