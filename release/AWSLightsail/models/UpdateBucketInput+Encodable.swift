// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateBucketInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessLogConfig
        case accessRules
        case bucketName
        case readonlyAccessAccounts
        case versioning
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessLogConfig = self.accessLogConfig {
            try encodeContainer.encode(accessLogConfig, forKey: .accessLogConfig)
        }
        if let accessRules = self.accessRules {
            try encodeContainer.encode(accessRules, forKey: .accessRules)
        }
        if let bucketName = self.bucketName {
            try encodeContainer.encode(bucketName, forKey: .bucketName)
        }
        if let readonlyAccessAccounts = readonlyAccessAccounts {
            var readonlyAccessAccountsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .readonlyAccessAccounts)
            for partneridlist0 in readonlyAccessAccounts {
                try readonlyAccessAccountsContainer.encode(partneridlist0)
            }
        }
        if let versioning = self.versioning {
            try encodeContainer.encode(versioning, forKey: .versioning)
        }
    }
}
