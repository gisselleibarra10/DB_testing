// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LightsailClientTypes.InstanceSnapshotInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fromBlueprintId
        case fromBundleId
        case fromDiskInfo
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fromBlueprintId = self.fromBlueprintId {
            try encodeContainer.encode(fromBlueprintId, forKey: .fromBlueprintId)
        }
        if let fromBundleId = self.fromBundleId {
            try encodeContainer.encode(fromBundleId, forKey: .fromBundleId)
        }
        if let fromDiskInfo = fromDiskInfo {
            var fromDiskInfoContainer = encodeContainer.nestedUnkeyedContainer(forKey: .fromDiskInfo)
            for diskinfolist0 in fromDiskInfo {
                try fromDiskInfoContainer.encode(diskinfolist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fromBundleIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fromBundleId)
        fromBundleId = fromBundleIdDecoded
        let fromBlueprintIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fromBlueprintId)
        fromBlueprintId = fromBlueprintIdDecoded
        let fromDiskInfoContainer = try containerValues.decodeIfPresent([LightsailClientTypes.DiskInfo?].self, forKey: .fromDiskInfo)
        var fromDiskInfoDecoded0:[LightsailClientTypes.DiskInfo]? = nil
        if let fromDiskInfoContainer = fromDiskInfoContainer {
            fromDiskInfoDecoded0 = [LightsailClientTypes.DiskInfo]()
            for structure0 in fromDiskInfoContainer {
                if let structure0 = structure0 {
                    fromDiskInfoDecoded0?.append(structure0)
                }
            }
        }
        fromDiskInfo = fromDiskInfoDecoded0
    }
}
