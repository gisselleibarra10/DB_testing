// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateConnectorInput: Swift.Equatable {
    /// Information about the capacity allocated to the connector. Exactly one of the two properties must be specified.
    /// This member is required.
    public var capacity: KafkaConnectClientTypes.Capacity?
    /// A map of keys to values that represent the configuration for the connector.
    /// This member is required.
    public var connectorConfiguration: [Swift.String:Swift.String]?
    /// A summary description of the connector.
    public var connectorDescription: Swift.String?
    /// The name of the connector.
    /// This member is required.
    public var connectorName: Swift.String?
    /// Specifies which Apache Kafka cluster to connect to.
    /// This member is required.
    public var kafkaCluster: KafkaConnectClientTypes.KafkaCluster?
    /// Details of the client authentication used by the Apache Kafka cluster.
    /// This member is required.
    public var kafkaClusterClientAuthentication: KafkaConnectClientTypes.KafkaClusterClientAuthentication?
    /// Details of encryption in transit to the Apache Kafka cluster.
    /// This member is required.
    public var kafkaClusterEncryptionInTransit: KafkaConnectClientTypes.KafkaClusterEncryptionInTransit?
    /// The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
    /// This member is required.
    public var kafkaConnectVersion: Swift.String?
    /// Details about log delivery.
    public var logDelivery: KafkaConnectClientTypes.LogDelivery?
    /// Specifies which plugins to use for the connector.
    /// This member is required.
    public var plugins: [KafkaConnectClientTypes.Plugin]?
    /// The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
    /// This member is required.
    public var serviceExecutionRoleArn: Swift.String?
    /// Specifies which worker configuration to use with the connector.
    public var workerConfiguration: KafkaConnectClientTypes.WorkerConfiguration?

    public init (
        capacity: KafkaConnectClientTypes.Capacity? = nil,
        connectorConfiguration: [Swift.String:Swift.String]? = nil,
        connectorDescription: Swift.String? = nil,
        connectorName: Swift.String? = nil,
        kafkaCluster: KafkaConnectClientTypes.KafkaCluster? = nil,
        kafkaClusterClientAuthentication: KafkaConnectClientTypes.KafkaClusterClientAuthentication? = nil,
        kafkaClusterEncryptionInTransit: KafkaConnectClientTypes.KafkaClusterEncryptionInTransit? = nil,
        kafkaConnectVersion: Swift.String? = nil,
        logDelivery: KafkaConnectClientTypes.LogDelivery? = nil,
        plugins: [KafkaConnectClientTypes.Plugin]? = nil,
        serviceExecutionRoleArn: Swift.String? = nil,
        workerConfiguration: KafkaConnectClientTypes.WorkerConfiguration? = nil
    )
    {
        self.capacity = capacity
        self.connectorConfiguration = connectorConfiguration
        self.connectorDescription = connectorDescription
        self.connectorName = connectorName
        self.kafkaCluster = kafkaCluster
        self.kafkaClusterClientAuthentication = kafkaClusterClientAuthentication
        self.kafkaClusterEncryptionInTransit = kafkaClusterEncryptionInTransit
        self.kafkaConnectVersion = kafkaConnectVersion
        self.logDelivery = logDelivery
        self.plugins = plugins
        self.serviceExecutionRoleArn = serviceExecutionRoleArn
        self.workerConfiguration = workerConfiguration
    }
}
