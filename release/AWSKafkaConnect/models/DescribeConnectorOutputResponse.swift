// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeConnectorOutputResponse: Swift.Equatable {
    /// Information about the capacity of the connector, whether it is auto scaled or provisioned.
    public var capacity: KafkaConnectClientTypes.CapacityDescription?
    /// The Amazon Resource Name (ARN) of the connector.
    public var connectorArn: Swift.String?
    /// A map of keys to values that represent the configuration for the connector.
    public var connectorConfiguration: [Swift.String:Swift.String]?
    /// A summary description of the connector.
    public var connectorDescription: Swift.String?
    /// The name of the connector.
    public var connectorName: Swift.String?
    /// The state of the connector.
    public var connectorState: KafkaConnectClientTypes.ConnectorState?
    /// The time the connector was created.
    public var creationTime: ClientRuntime.Date?
    /// The current version of the connector.
    public var currentVersion: Swift.String?
    /// The Apache Kafka cluster that the connector is connected to.
    public var kafkaCluster: KafkaConnectClientTypes.KafkaClusterDescription?
    /// The type of client authentication used to connect to the Apache Kafka cluster. The value is NONE when no client authentication is used.
    public var kafkaClusterClientAuthentication: KafkaConnectClientTypes.KafkaClusterClientAuthenticationDescription?
    /// Details of encryption in transit to the Apache Kafka cluster.
    public var kafkaClusterEncryptionInTransit: KafkaConnectClientTypes.KafkaClusterEncryptionInTransitDescription?
    /// The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
    public var kafkaConnectVersion: Swift.String?
    /// Details about delivering logs to Amazon CloudWatch Logs.
    public var logDelivery: KafkaConnectClientTypes.LogDeliveryDescription?
    /// Specifies which plugins were used for this connector.
    public var plugins: [KafkaConnectClientTypes.PluginDescription]?
    /// The Amazon Resource Name (ARN) of the IAM role used by the connector to access Amazon Web Services resources.
    public var serviceExecutionRoleArn: Swift.String?
    /// Details about the state of a connector.
    public var stateDescription: KafkaConnectClientTypes.StateDescription?
    /// Specifies which worker configuration was used for the connector.
    public var workerConfiguration: KafkaConnectClientTypes.WorkerConfigurationDescription?

    public init (
        capacity: KafkaConnectClientTypes.CapacityDescription? = nil,
        connectorArn: Swift.String? = nil,
        connectorConfiguration: [Swift.String:Swift.String]? = nil,
        connectorDescription: Swift.String? = nil,
        connectorName: Swift.String? = nil,
        connectorState: KafkaConnectClientTypes.ConnectorState? = nil,
        creationTime: ClientRuntime.Date? = nil,
        currentVersion: Swift.String? = nil,
        kafkaCluster: KafkaConnectClientTypes.KafkaClusterDescription? = nil,
        kafkaClusterClientAuthentication: KafkaConnectClientTypes.KafkaClusterClientAuthenticationDescription? = nil,
        kafkaClusterEncryptionInTransit: KafkaConnectClientTypes.KafkaClusterEncryptionInTransitDescription? = nil,
        kafkaConnectVersion: Swift.String? = nil,
        logDelivery: KafkaConnectClientTypes.LogDeliveryDescription? = nil,
        plugins: [KafkaConnectClientTypes.PluginDescription]? = nil,
        serviceExecutionRoleArn: Swift.String? = nil,
        stateDescription: KafkaConnectClientTypes.StateDescription? = nil,
        workerConfiguration: KafkaConnectClientTypes.WorkerConfigurationDescription? = nil
    )
    {
        self.capacity = capacity
        self.connectorArn = connectorArn
        self.connectorConfiguration = connectorConfiguration
        self.connectorDescription = connectorDescription
        self.connectorName = connectorName
        self.connectorState = connectorState
        self.creationTime = creationTime
        self.currentVersion = currentVersion
        self.kafkaCluster = kafkaCluster
        self.kafkaClusterClientAuthentication = kafkaClusterClientAuthentication
        self.kafkaClusterEncryptionInTransit = kafkaClusterEncryptionInTransit
        self.kafkaConnectVersion = kafkaConnectVersion
        self.logDelivery = logDelivery
        self.plugins = plugins
        self.serviceExecutionRoleArn = serviceExecutionRoleArn
        self.stateDescription = stateDescription
        self.workerConfiguration = workerConfiguration
    }
}
