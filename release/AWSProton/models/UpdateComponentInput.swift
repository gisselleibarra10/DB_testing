// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateComponentInput: Swift.Equatable {
    /// The deployment type. It defines the mode for updating a component, as follows: NONE In this mode, a deployment doesn't occur. Only the requested metadata parameters are updated. You can only specify description in this mode. CURRENT_VERSION In this mode, the component is deployed and updated with the new serviceSpec, templateSource, and/or type that you provide. Only requested parameters are updated.
    /// This member is required.
    public var deploymentType: ProtonClientTypes.ComponentDeploymentUpdateType?
    /// An optional customer-provided description of the component.
    public var description: Swift.String?
    /// The name of the component to update.
    /// This member is required.
    public var name: Swift.String?
    /// The name of the service instance that you want to attach this component to. Don't specify to keep the component's current service instance attachment. Specify an empty string to detach the component from the service instance it's attached to. Specify non-empty values for both serviceInstanceName and serviceName or for neither of them.
    public var serviceInstanceName: Swift.String?
    /// The name of the service that serviceInstanceName is associated with. Don't specify to keep the component's current service instance attachment. Specify an empty string to detach the component from the service instance it's attached to. Specify non-empty values for both serviceInstanceName and serviceName or for neither of them.
    public var serviceName: Swift.String?
    /// The service spec that you want the component to use to access service inputs. Set this only when the component is attached to a service instance.
    public var serviceSpec: Swift.String?
    /// A path to the Infrastructure as Code (IaC) file describing infrastructure that a custom component provisions. Components support a single IaC file, even if you use Terraform as your template language.
    public var templateFile: Swift.String?

    public init (
        deploymentType: ProtonClientTypes.ComponentDeploymentUpdateType? = nil,
        description: Swift.String? = nil,
        name: Swift.String? = nil,
        serviceInstanceName: Swift.String? = nil,
        serviceName: Swift.String? = nil,
        serviceSpec: Swift.String? = nil,
        templateFile: Swift.String? = nil
    )
    {
        self.deploymentType = deploymentType
        self.description = description
        self.name = name
        self.serviceInstanceName = serviceInstanceName
        self.serviceName = serviceName
        self.serviceSpec = serviceSpec
        self.templateFile = templateFile
    }
}
