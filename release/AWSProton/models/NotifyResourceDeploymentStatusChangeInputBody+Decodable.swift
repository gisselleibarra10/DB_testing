// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct NotifyResourceDeploymentStatusChangeInputBody: Swift.Equatable {
    let resourceArn: Swift.String?
    let status: ProtonClientTypes.ResourceDeploymentStatus?
    let outputs: [ProtonClientTypes.Output]?
    let deploymentId: Swift.String?
    let statusMessage: Swift.String?
}

extension NotifyResourceDeploymentStatusChangeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deploymentId
        case outputs
        case resourceArn
        case status
        case statusMessage
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let statusDecoded = try containerValues.decodeIfPresent(ProtonClientTypes.ResourceDeploymentStatus.self, forKey: .status)
        status = statusDecoded
        let outputsContainer = try containerValues.decodeIfPresent([ProtonClientTypes.Output?].self, forKey: .outputs)
        var outputsDecoded0:[ProtonClientTypes.Output]? = nil
        if let outputsContainer = outputsContainer {
            outputsDecoded0 = [ProtonClientTypes.Output]()
            for structure0 in outputsContainer {
                if let structure0 = structure0 {
                    outputsDecoded0?.append(structure0)
                }
            }
        }
        outputs = outputsDecoded0
        let deploymentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deploymentId)
        deploymentId = deploymentIdDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
    }
}
