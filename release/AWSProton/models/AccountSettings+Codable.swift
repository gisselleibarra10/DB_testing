// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ProtonClientTypes.AccountSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case pipelineProvisioningRepository
        case pipelineServiceRoleArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let pipelineProvisioningRepository = self.pipelineProvisioningRepository {
            try encodeContainer.encode(pipelineProvisioningRepository, forKey: .pipelineProvisioningRepository)
        }
        if let pipelineServiceRoleArn = self.pipelineServiceRoleArn {
            try encodeContainer.encode(pipelineServiceRoleArn, forKey: .pipelineServiceRoleArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineServiceRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineServiceRoleArn)
        pipelineServiceRoleArn = pipelineServiceRoleArnDecoded
        let pipelineProvisioningRepositoryDecoded = try containerValues.decodeIfPresent(ProtonClientTypes.RepositoryBranch.self, forKey: .pipelineProvisioningRepository)
        pipelineProvisioningRepository = pipelineProvisioningRepositoryDecoded
    }
}
