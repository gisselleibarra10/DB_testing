// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRepositorySyncDefinitionsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let syncDefinitions: [ProtonClientTypes.RepositorySyncDefinition]?
}

extension ListRepositorySyncDefinitionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case syncDefinitions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let syncDefinitionsContainer = try containerValues.decodeIfPresent([ProtonClientTypes.RepositorySyncDefinition?].self, forKey: .syncDefinitions)
        var syncDefinitionsDecoded0:[ProtonClientTypes.RepositorySyncDefinition]? = nil
        if let syncDefinitionsContainer = syncDefinitionsContainer {
            syncDefinitionsDecoded0 = [ProtonClientTypes.RepositorySyncDefinition]()
            for structure0 in syncDefinitionsContainer {
                if let structure0 = structure0 {
                    syncDefinitionsDecoded0?.append(structure0)
                }
            }
        }
        syncDefinitions = syncDefinitionsDecoded0
    }
}
