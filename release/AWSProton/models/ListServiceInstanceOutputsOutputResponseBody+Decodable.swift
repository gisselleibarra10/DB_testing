// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServiceInstanceOutputsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let outputs: [ProtonClientTypes.Output]?
}

extension ListServiceInstanceOutputsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case outputs
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let outputsContainer = try containerValues.decodeIfPresent([ProtonClientTypes.Output?].self, forKey: .outputs)
        var outputsDecoded0:[ProtonClientTypes.Output]? = nil
        if let outputsContainer = outputsContainer {
            outputsDecoded0 = [ProtonClientTypes.Output]()
            for structure0 in outputsContainer {
                if let structure0 = structure0 {
                    outputsDecoded0?.append(structure0)
                }
            }
        }
        outputs = outputsDecoded0
    }
}
