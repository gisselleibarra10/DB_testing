// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateEnvironmentTemplateVersionInputBody: Swift.Equatable {
    let templateName: Swift.String?
    let majorVersion: Swift.String?
    let minorVersion: Swift.String?
    let description: Swift.String?
    let status: ProtonClientTypes.TemplateVersionStatus?
}

extension UpdateEnvironmentTemplateVersionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description
        case majorVersion
        case minorVersion
        case status
        case templateName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let templateNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .templateName)
        templateName = templateNameDecoded
        let majorVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .majorVersion)
        majorVersion = majorVersionDecoded
        let minorVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .minorVersion)
        minorVersion = minorVersionDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let statusDecoded = try containerValues.decodeIfPresent(ProtonClientTypes.TemplateVersionStatus.self, forKey: .status)
        status = statusDecoded
    }
}
