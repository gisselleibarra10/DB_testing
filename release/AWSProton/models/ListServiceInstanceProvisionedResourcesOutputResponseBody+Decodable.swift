// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServiceInstanceProvisionedResourcesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let provisionedResources: [ProtonClientTypes.ProvisionedResource]?
}

extension ListServiceInstanceProvisionedResourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case provisionedResources
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let provisionedResourcesContainer = try containerValues.decodeIfPresent([ProtonClientTypes.ProvisionedResource?].self, forKey: .provisionedResources)
        var provisionedResourcesDecoded0:[ProtonClientTypes.ProvisionedResource]? = nil
        if let provisionedResourcesContainer = provisionedResourcesContainer {
            provisionedResourcesDecoded0 = [ProtonClientTypes.ProvisionedResource]()
            for structure0 in provisionedResourcesContainer {
                if let structure0 = structure0 {
                    provisionedResourcesDecoded0?.append(structure0)
                }
            }
        }
        provisionedResources = provisionedResourcesDecoded0
    }
}
