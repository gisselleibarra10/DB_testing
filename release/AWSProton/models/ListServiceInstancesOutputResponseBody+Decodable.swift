// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServiceInstancesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let serviceInstances: [ProtonClientTypes.ServiceInstanceSummary]?
}

extension ListServiceInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case serviceInstances
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let serviceInstancesContainer = try containerValues.decodeIfPresent([ProtonClientTypes.ServiceInstanceSummary?].self, forKey: .serviceInstances)
        var serviceInstancesDecoded0:[ProtonClientTypes.ServiceInstanceSummary]? = nil
        if let serviceInstancesContainer = serviceInstancesContainer {
            serviceInstancesDecoded0 = [ProtonClientTypes.ServiceInstanceSummary]()
            for structure0 in serviceInstancesContainer {
                if let structure0 = structure0 {
                    serviceInstancesDecoded0?.append(structure0)
                }
            }
        }
        serviceInstances = serviceInstancesDecoded0
    }
}
