// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ProtonClientTypes {
    public enum ServiceStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case active
        case createFailed
        case createFailedCleanupComplete
        case createFailedCleanupFailed
        case createFailedCleanupInProgress
        case createInProgress
        case deleteFailed
        case deleteInProgress
        case updateCompleteCleanupFailed
        case updateFailed
        case updateFailedCleanupComplete
        case updateFailedCleanupFailed
        case updateFailedCleanupInProgress
        case updateInProgress
        case sdkUnknown(Swift.String)

        public static var allCases: [ServiceStatus] {
            return [
                .active,
                .createFailed,
                .createFailedCleanupComplete,
                .createFailedCleanupFailed,
                .createFailedCleanupInProgress,
                .createInProgress,
                .deleteFailed,
                .deleteInProgress,
                .updateCompleteCleanupFailed,
                .updateFailed,
                .updateFailedCleanupComplete,
                .updateFailedCleanupFailed,
                .updateFailedCleanupInProgress,
                .updateInProgress,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .active: return "ACTIVE"
            case .createFailed: return "CREATE_FAILED"
            case .createFailedCleanupComplete: return "CREATE_FAILED_CLEANUP_COMPLETE"
            case .createFailedCleanupFailed: return "CREATE_FAILED_CLEANUP_FAILED"
            case .createFailedCleanupInProgress: return "CREATE_FAILED_CLEANUP_IN_PROGRESS"
            case .createInProgress: return "CREATE_IN_PROGRESS"
            case .deleteFailed: return "DELETE_FAILED"
            case .deleteInProgress: return "DELETE_IN_PROGRESS"
            case .updateCompleteCleanupFailed: return "UPDATE_COMPLETE_CLEANUP_FAILED"
            case .updateFailed: return "UPDATE_FAILED"
            case .updateFailedCleanupComplete: return "UPDATE_FAILED_CLEANUP_COMPLETE"
            case .updateFailedCleanupFailed: return "UPDATE_FAILED_CLEANUP_FAILED"
            case .updateFailedCleanupInProgress: return "UPDATE_FAILED_CLEANUP_IN_PROGRESS"
            case .updateInProgress: return "UPDATE_IN_PROGRESS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ServiceStatus(rawValue: rawValue) ?? ServiceStatus.sdkUnknown(rawValue)
        }
    }
}
