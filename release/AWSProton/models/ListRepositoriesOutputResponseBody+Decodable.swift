// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRepositoriesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let repositories: [ProtonClientTypes.RepositorySummary]?
}

extension ListRepositoriesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case repositories
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let repositoriesContainer = try containerValues.decodeIfPresent([ProtonClientTypes.RepositorySummary?].self, forKey: .repositories)
        var repositoriesDecoded0:[ProtonClientTypes.RepositorySummary]? = nil
        if let repositoriesContainer = repositoriesContainer {
            repositoriesDecoded0 = [ProtonClientTypes.RepositorySummary]()
            for structure0 in repositoriesContainer {
                if let structure0 = structure0 {
                    repositoriesDecoded0?.append(structure0)
                }
            }
        }
        repositories = repositoriesDecoded0
    }
}
