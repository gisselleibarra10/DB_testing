// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoScalingPlansClientTypes.PredefinedLoadMetricSpecification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case predefinedLoadMetricType = "PredefinedLoadMetricType"
        case resourceLabel = "ResourceLabel"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let predefinedLoadMetricType = self.predefinedLoadMetricType {
            try encodeContainer.encode(predefinedLoadMetricType.rawValue, forKey: .predefinedLoadMetricType)
        }
        if let resourceLabel = self.resourceLabel {
            try encodeContainer.encode(resourceLabel, forKey: .resourceLabel)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let predefinedLoadMetricTypeDecoded = try containerValues.decodeIfPresent(AutoScalingPlansClientTypes.LoadMetricType.self, forKey: .predefinedLoadMetricType)
        predefinedLoadMetricType = predefinedLoadMetricTypeDecoded
        let resourceLabelDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceLabel)
        resourceLabel = resourceLabelDecoded
    }
}
