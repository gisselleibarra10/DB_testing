// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeScalingPlansInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationSources = "ApplicationSources"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case scalingPlanNames = "ScalingPlanNames"
        case scalingPlanVersion = "ScalingPlanVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applicationSources = applicationSources {
            var applicationSourcesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .applicationSources)
            for applicationsources0 in applicationSources {
                try applicationSourcesContainer.encode(applicationsources0)
            }
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let scalingPlanNames = scalingPlanNames {
            var scalingPlanNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .scalingPlanNames)
            for scalingplannames0 in scalingPlanNames {
                try scalingPlanNamesContainer.encode(scalingplannames0)
            }
        }
        if let scalingPlanVersion = self.scalingPlanVersion {
            try encodeContainer.encode(scalingPlanVersion, forKey: .scalingPlanVersion)
        }
    }
}
