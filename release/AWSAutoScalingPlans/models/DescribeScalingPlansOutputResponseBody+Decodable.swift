// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeScalingPlansOutputResponseBody: Swift.Equatable {
    let scalingPlans: [AutoScalingPlansClientTypes.ScalingPlan]?
    let nextToken: Swift.String?
}

extension DescribeScalingPlansOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case scalingPlans = "ScalingPlans"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scalingPlansContainer = try containerValues.decodeIfPresent([AutoScalingPlansClientTypes.ScalingPlan?].self, forKey: .scalingPlans)
        var scalingPlansDecoded0:[AutoScalingPlansClientTypes.ScalingPlan]? = nil
        if let scalingPlansContainer = scalingPlansContainer {
            scalingPlansDecoded0 = [AutoScalingPlansClientTypes.ScalingPlan]()
            for structure0 in scalingPlansContainer {
                if let structure0 = structure0 {
                    scalingPlansDecoded0?.append(structure0)
                }
            }
        }
        scalingPlans = scalingPlansDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
