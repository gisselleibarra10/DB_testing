// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateScalingPlanInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationSource = "ApplicationSource"
        case scalingInstructions = "ScalingInstructions"
        case scalingPlanName = "ScalingPlanName"
        case scalingPlanVersion = "ScalingPlanVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applicationSource = self.applicationSource {
            try encodeContainer.encode(applicationSource, forKey: .applicationSource)
        }
        if let scalingInstructions = scalingInstructions {
            var scalingInstructionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .scalingInstructions)
            for scalinginstructions0 in scalingInstructions {
                try scalingInstructionsContainer.encode(scalinginstructions0)
            }
        }
        if let scalingPlanName = self.scalingPlanName {
            try encodeContainer.encode(scalingPlanName, forKey: .scalingPlanName)
        }
        if let scalingPlanVersion = self.scalingPlanVersion {
            try encodeContainer.encode(scalingPlanVersion, forKey: .scalingPlanVersion)
        }
    }
}
