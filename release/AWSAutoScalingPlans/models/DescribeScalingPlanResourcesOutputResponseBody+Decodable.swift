// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeScalingPlanResourcesOutputResponseBody: Swift.Equatable {
    let scalingPlanResources: [AutoScalingPlansClientTypes.ScalingPlanResource]?
    let nextToken: Swift.String?
}

extension DescribeScalingPlanResourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case scalingPlanResources = "ScalingPlanResources"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scalingPlanResourcesContainer = try containerValues.decodeIfPresent([AutoScalingPlansClientTypes.ScalingPlanResource?].self, forKey: .scalingPlanResources)
        var scalingPlanResourcesDecoded0:[AutoScalingPlansClientTypes.ScalingPlanResource]? = nil
        if let scalingPlanResourcesContainer = scalingPlanResourcesContainer {
            scalingPlanResourcesDecoded0 = [AutoScalingPlansClientTypes.ScalingPlanResource]()
            for structure0 in scalingPlanResourcesContainer {
                if let structure0 = structure0 {
                    scalingPlanResourcesDecoded0?.append(structure0)
                }
            }
        }
        scalingPlanResources = scalingPlanResourcesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
