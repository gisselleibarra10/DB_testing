// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AutoScalingPlansClientTypes {
    public enum ForecastDataType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case capacityforecast
        case loadforecast
        case scheduledactionmaxcapacity
        case scheduledactionmincapacity
        case sdkUnknown(Swift.String)

        public static var allCases: [ForecastDataType] {
            return [
                .capacityforecast,
                .loadforecast,
                .scheduledactionmaxcapacity,
                .scheduledactionmincapacity,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .capacityforecast: return "CapacityForecast"
            case .loadforecast: return "LoadForecast"
            case .scheduledactionmaxcapacity: return "ScheduledActionMaxCapacity"
            case .scheduledactionmincapacity: return "ScheduledActionMinCapacity"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ForecastDataType(rawValue: rawValue) ?? ForecastDataType.sdkUnknown(rawValue)
        }
    }
}
