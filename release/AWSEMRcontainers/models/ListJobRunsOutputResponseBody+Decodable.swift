// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobRunsOutputResponseBody: Swift.Equatable {
    let jobRuns: [EmrContainersClientTypes.JobRun]?
    let nextToken: Swift.String?
}

extension ListJobRunsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jobRuns
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobRunsContainer = try containerValues.decodeIfPresent([EmrContainersClientTypes.JobRun?].self, forKey: .jobRuns)
        var jobRunsDecoded0:[EmrContainersClientTypes.JobRun]? = nil
        if let jobRunsContainer = jobRunsContainer {
            jobRunsDecoded0 = [EmrContainersClientTypes.JobRun]()
            for structure0 in jobRunsContainer {
                if let structure0 = structure0 {
                    jobRunsDecoded0?.append(structure0)
                }
            }
        }
        jobRuns = jobRunsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
