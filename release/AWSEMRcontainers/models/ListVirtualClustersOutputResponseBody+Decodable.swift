// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVirtualClustersOutputResponseBody: Swift.Equatable {
    let virtualClusters: [EmrContainersClientTypes.VirtualCluster]?
    let nextToken: Swift.String?
}

extension ListVirtualClustersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case virtualClusters
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let virtualClustersContainer = try containerValues.decodeIfPresent([EmrContainersClientTypes.VirtualCluster?].self, forKey: .virtualClusters)
        var virtualClustersDecoded0:[EmrContainersClientTypes.VirtualCluster]? = nil
        if let virtualClustersContainer = virtualClustersContainer {
            virtualClustersDecoded0 = [EmrContainersClientTypes.VirtualCluster]()
            for structure0 in virtualClustersContainer {
                if let structure0 = structure0 {
                    virtualClustersDecoded0?.append(structure0)
                }
            }
        }
        virtualClusters = virtualClustersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
