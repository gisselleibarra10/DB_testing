// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCustomerManagedPolicyReferencesInPermissionSetOutputResponseBody: Swift.Equatable {
    let customerManagedPolicyReferences: [SsoAdminClientTypes.CustomerManagedPolicyReference]?
    let nextToken: Swift.String?
}

extension ListCustomerManagedPolicyReferencesInPermissionSetOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customerManagedPolicyReferences = "CustomerManagedPolicyReferences"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customerManagedPolicyReferencesContainer = try containerValues.decodeIfPresent([SsoAdminClientTypes.CustomerManagedPolicyReference?].self, forKey: .customerManagedPolicyReferences)
        var customerManagedPolicyReferencesDecoded0:[SsoAdminClientTypes.CustomerManagedPolicyReference]? = nil
        if let customerManagedPolicyReferencesContainer = customerManagedPolicyReferencesContainer {
            customerManagedPolicyReferencesDecoded0 = [SsoAdminClientTypes.CustomerManagedPolicyReference]()
            for structure0 in customerManagedPolicyReferencesContainer {
                if let structure0 = structure0 {
                    customerManagedPolicyReferencesDecoded0?.append(structure0)
                }
            }
        }
        customerManagedPolicyReferences = customerManagedPolicyReferencesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
