// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RetryDataReplicationOutputResponseBody: Swift.Equatable {
    let sourceServerID: Swift.String?
    let arn: Swift.String?
    let isArchived: Swift.Bool?
    let tags: [Swift.String:Swift.String]?
    let launchedInstance: MgnClientTypes.LaunchedInstance?
    let dataReplicationInfo: MgnClientTypes.DataReplicationInfo?
    let lifeCycle: MgnClientTypes.LifeCycle?
    let sourceProperties: MgnClientTypes.SourceProperties?
    let replicationType: MgnClientTypes.ReplicationType?
    let vcenterClientID: Swift.String?
}

extension RetryDataReplicationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case dataReplicationInfo
        case isArchived
        case launchedInstance
        case lifeCycle
        case replicationType
        case sourceProperties
        case sourceServerID
        case tags
        case vcenterClientID
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceServerIDDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceServerID)
        sourceServerID = sourceServerIDDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let isArchivedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isArchived)
        isArchived = isArchivedDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
        let launchedInstanceDecoded = try containerValues.decodeIfPresent(MgnClientTypes.LaunchedInstance.self, forKey: .launchedInstance)
        launchedInstance = launchedInstanceDecoded
        let dataReplicationInfoDecoded = try containerValues.decodeIfPresent(MgnClientTypes.DataReplicationInfo.self, forKey: .dataReplicationInfo)
        dataReplicationInfo = dataReplicationInfoDecoded
        let lifeCycleDecoded = try containerValues.decodeIfPresent(MgnClientTypes.LifeCycle.self, forKey: .lifeCycle)
        lifeCycle = lifeCycleDecoded
        let sourcePropertiesDecoded = try containerValues.decodeIfPresent(MgnClientTypes.SourceProperties.self, forKey: .sourceProperties)
        sourceProperties = sourcePropertiesDecoded
        let replicationTypeDecoded = try containerValues.decodeIfPresent(MgnClientTypes.ReplicationType.self, forKey: .replicationType)
        replicationType = replicationTypeDecoded
        let vcenterClientIDDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vcenterClientID)
        vcenterClientID = vcenterClientIDDecoded
    }
}
