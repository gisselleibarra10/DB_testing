// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MgnClientTypes.PostLaunchActions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cloudWatchLogGroupName
        case deployment
        case s3LogBucket
        case s3OutputKeyPrefix
        case ssmDocuments
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cloudWatchLogGroupName = self.cloudWatchLogGroupName {
            try encodeContainer.encode(cloudWatchLogGroupName, forKey: .cloudWatchLogGroupName)
        }
        if let deployment = self.deployment {
            try encodeContainer.encode(deployment.rawValue, forKey: .deployment)
        }
        if let s3LogBucket = self.s3LogBucket {
            try encodeContainer.encode(s3LogBucket, forKey: .s3LogBucket)
        }
        if let s3OutputKeyPrefix = self.s3OutputKeyPrefix {
            try encodeContainer.encode(s3OutputKeyPrefix, forKey: .s3OutputKeyPrefix)
        }
        if let ssmDocuments = ssmDocuments {
            var ssmDocumentsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ssmDocuments)
            for ssmdocuments0 in ssmDocuments {
                try ssmDocumentsContainer.encode(ssmdocuments0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentDecoded = try containerValues.decodeIfPresent(MgnClientTypes.PostLaunchActionsDeploymentType.self, forKey: .deployment)
        deployment = deploymentDecoded
        let s3LogBucketDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3LogBucket)
        s3LogBucket = s3LogBucketDecoded
        let s3OutputKeyPrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3OutputKeyPrefix)
        s3OutputKeyPrefix = s3OutputKeyPrefixDecoded
        let cloudWatchLogGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cloudWatchLogGroupName)
        cloudWatchLogGroupName = cloudWatchLogGroupNameDecoded
        let ssmDocumentsContainer = try containerValues.decodeIfPresent([MgnClientTypes.SsmDocument?].self, forKey: .ssmDocuments)
        var ssmDocumentsDecoded0:[MgnClientTypes.SsmDocument]? = nil
        if let ssmDocumentsContainer = ssmDocumentsContainer {
            ssmDocumentsDecoded0 = [MgnClientTypes.SsmDocument]()
            for structure0 in ssmDocumentsContainer {
                if let structure0 = structure0 {
                    ssmDocumentsDecoded0?.append(structure0)
                }
            }
        }
        ssmDocuments = ssmDocumentsDecoded0
    }
}
