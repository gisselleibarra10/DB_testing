// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MgnClientTypes.ParticipatingServer: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case launchStatus
        case launchedEc2InstanceID
        case postLaunchActionsStatus
        case sourceServerID
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let launchStatus = self.launchStatus {
            try encodeContainer.encode(launchStatus.rawValue, forKey: .launchStatus)
        }
        if let launchedEc2InstanceID = self.launchedEc2InstanceID {
            try encodeContainer.encode(launchedEc2InstanceID, forKey: .launchedEc2InstanceID)
        }
        if let postLaunchActionsStatus = self.postLaunchActionsStatus {
            try encodeContainer.encode(postLaunchActionsStatus, forKey: .postLaunchActionsStatus)
        }
        if let sourceServerID = self.sourceServerID {
            try encodeContainer.encode(sourceServerID, forKey: .sourceServerID)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceServerIDDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceServerID)
        sourceServerID = sourceServerIDDecoded
        let launchStatusDecoded = try containerValues.decodeIfPresent(MgnClientTypes.LaunchStatus.self, forKey: .launchStatus)
        launchStatus = launchStatusDecoded
        let launchedEc2InstanceIDDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .launchedEc2InstanceID)
        launchedEc2InstanceID = launchedEc2InstanceIDDecoded
        let postLaunchActionsStatusDecoded = try containerValues.decodeIfPresent(MgnClientTypes.PostLaunchActionsStatus.self, forKey: .postLaunchActionsStatus)
        postLaunchActionsStatus = postLaunchActionsStatusDecoded
    }
}
