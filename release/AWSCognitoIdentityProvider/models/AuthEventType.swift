// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CognitoIdentityProviderClientTypes {
    /// The authentication event type.
    public struct AuthEventType: Swift.Equatable {
        /// The challenge responses.
        public var challengeResponses: [CognitoIdentityProviderClientTypes.ChallengeResponseType]?
        /// The creation date
        public var creationDate: ClientRuntime.Date?
        /// The user context data captured at the time of an event request. This value provides additional information about the client from which event the request is received.
        public var eventContextData: CognitoIdentityProviderClientTypes.EventContextDataType?
        /// A flag specifying the user feedback captured at the time of an event request is good or bad.
        public var eventFeedback: CognitoIdentityProviderClientTypes.EventFeedbackType?
        /// The event ID.
        public var eventId: Swift.String?
        /// The event response.
        public var eventResponse: CognitoIdentityProviderClientTypes.EventResponseType?
        /// The event risk.
        public var eventRisk: CognitoIdentityProviderClientTypes.EventRiskType?
        /// The event type.
        public var eventType: CognitoIdentityProviderClientTypes.EventType?

        public init (
            challengeResponses: [CognitoIdentityProviderClientTypes.ChallengeResponseType]? = nil,
            creationDate: ClientRuntime.Date? = nil,
            eventContextData: CognitoIdentityProviderClientTypes.EventContextDataType? = nil,
            eventFeedback: CognitoIdentityProviderClientTypes.EventFeedbackType? = nil,
            eventId: Swift.String? = nil,
            eventResponse: CognitoIdentityProviderClientTypes.EventResponseType? = nil,
            eventRisk: CognitoIdentityProviderClientTypes.EventRiskType? = nil,
            eventType: CognitoIdentityProviderClientTypes.EventType? = nil
        )
        {
            self.challengeResponses = challengeResponses
            self.creationDate = creationDate
            self.eventContextData = eventContextData
            self.eventFeedback = eventFeedback
            self.eventId = eventId
            self.eventResponse = eventResponse
            self.eventRisk = eventRisk
            self.eventType = eventType
        }
    }

}
