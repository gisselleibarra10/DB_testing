// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CognitoIdentityProviderClientTypes.NewDeviceMetadataType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceGroupKey = "DeviceGroupKey"
        case deviceKey = "DeviceKey"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deviceGroupKey = self.deviceGroupKey {
            try encodeContainer.encode(deviceGroupKey, forKey: .deviceGroupKey)
        }
        if let deviceKey = self.deviceKey {
            try encodeContainer.encode(deviceKey, forKey: .deviceKey)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceKey)
        deviceKey = deviceKeyDecoded
        let deviceGroupKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceGroupKey)
        deviceGroupKey = deviceGroupKeyDecoded
    }
}
