// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Represents the response from the server from the request to get the specified user as an administrator.
public struct AdminGetUserOutputResponse: Swift.Equatable {
    /// Indicates that the status is enabled.
    public var enabled: Swift.Bool
    /// This response parameter is no longer supported. It provides information only about SMS MFA configurations. It doesn't provide information about time-based one-time password (TOTP) software token MFA configurations. To look up information about either type of MFA configuration, use UserMFASettingList instead.
    public var mFAOptions: [CognitoIdentityProviderClientTypes.MFAOptionType]?
    /// The user's preferred MFA setting.
    public var preferredMfaSetting: Swift.String?
    /// An array of name-value pairs representing user attributes.
    public var userAttributes: [CognitoIdentityProviderClientTypes.AttributeType]?
    /// The date the user was created.
    public var userCreateDate: ClientRuntime.Date?
    /// The date the user was last modified.
    public var userLastModifiedDate: ClientRuntime.Date?
    /// The MFA options that are activated for the user. The possible values in this list are SMS_MFA and SOFTWARE_TOKEN_MFA.
    public var userMFASettingList: [Swift.String]?
    /// The user status. Can be one of the following:
    ///
    /// * UNCONFIRMED - User has been created but not confirmed.
    ///
    /// * CONFIRMED - User has been confirmed.
    ///
    /// * ARCHIVED - User is no longer active.
    ///
    /// * UNKNOWN - User status isn't known.
    ///
    /// * RESET_REQUIRED - User is confirmed, but the user must request a code and reset their password before they can sign in.
    ///
    /// * FORCE_CHANGE_PASSWORD - The user is confirmed and the user can sign in using a temporary password, but on first sign-in, the user must change their password to a new value before doing anything else.
    public var userStatus: CognitoIdentityProviderClientTypes.UserStatusType?
    /// The user name of the user about whom you're receiving information.
    /// This member is required.
    public var username: Swift.String?

    public init (
        enabled: Swift.Bool = false,
        mFAOptions: [CognitoIdentityProviderClientTypes.MFAOptionType]? = nil,
        preferredMfaSetting: Swift.String? = nil,
        userAttributes: [CognitoIdentityProviderClientTypes.AttributeType]? = nil,
        userCreateDate: ClientRuntime.Date? = nil,
        userLastModifiedDate: ClientRuntime.Date? = nil,
        userMFASettingList: [Swift.String]? = nil,
        userStatus: CognitoIdentityProviderClientTypes.UserStatusType? = nil,
        username: Swift.String? = nil
    )
    {
        self.enabled = enabled
        self.mFAOptions = mFAOptions
        self.preferredMfaSetting = preferredMfaSetting
        self.userAttributes = userAttributes
        self.userCreateDate = userCreateDate
        self.userLastModifiedDate = userLastModifiedDate
        self.userMFASettingList = userMFASettingList
        self.userStatus = userStatus
        self.username = username
    }
}
