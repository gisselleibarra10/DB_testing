// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CognitoIdentityProviderClientTypes {
    /// The notify configuration type.
    public struct NotifyConfigurationType: Swift.Equatable {
        /// Email template used when a detected risk event is blocked.
        public var blockEmail: CognitoIdentityProviderClientTypes.NotifyEmailType?
        /// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
        public var from: Swift.String?
        /// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk.
        public var mfaEmail: CognitoIdentityProviderClientTypes.NotifyEmailType?
        /// The email template used when a detected risk event is allowed.
        public var noActionEmail: CognitoIdentityProviderClientTypes.NotifyEmailType?
        /// The destination to which the receiver of an email should reply to.
        public var replyTo: Swift.String?
        /// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.
        /// This member is required.
        public var sourceArn: Swift.String?

        public init (
            blockEmail: CognitoIdentityProviderClientTypes.NotifyEmailType? = nil,
            from: Swift.String? = nil,
            mfaEmail: CognitoIdentityProviderClientTypes.NotifyEmailType? = nil,
            noActionEmail: CognitoIdentityProviderClientTypes.NotifyEmailType? = nil,
            replyTo: Swift.String? = nil,
            sourceArn: Swift.String? = nil
        )
        {
            self.blockEmail = blockEmail
            self.from = from
            self.mfaEmail = mfaEmail
            self.noActionEmail = noActionEmail
            self.replyTo = replyTo
            self.sourceArn = sourceArn
        }
    }

}
