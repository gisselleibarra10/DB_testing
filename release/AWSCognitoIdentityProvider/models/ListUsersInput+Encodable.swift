// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListUsersInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributesToGet = "AttributesToGet"
        case filter = "Filter"
        case limit = "Limit"
        case paginationToken = "PaginationToken"
        case userPoolId = "UserPoolId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributesToGet = attributesToGet {
            var attributesToGetContainer = encodeContainer.nestedUnkeyedContainer(forKey: .attributesToGet)
            for searchedattributenameslisttype0 in attributesToGet {
                try attributesToGetContainer.encode(searchedattributenameslisttype0)
            }
        }
        if let filter = self.filter {
            try encodeContainer.encode(filter, forKey: .filter)
        }
        if let limit = self.limit {
            try encodeContainer.encode(limit, forKey: .limit)
        }
        if let paginationToken = self.paginationToken {
            try encodeContainer.encode(paginationToken, forKey: .paginationToken)
        }
        if let userPoolId = self.userPoolId {
            try encodeContainer.encode(userPoolId, forKey: .userPoolId)
        }
    }
}
