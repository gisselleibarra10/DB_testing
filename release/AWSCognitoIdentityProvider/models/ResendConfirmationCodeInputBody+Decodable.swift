// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResendConfirmationCodeInputBody: Swift.Equatable {
    let clientId: Swift.String?
    let secretHash: Swift.String?
    let userContextData: CognitoIdentityProviderClientTypes.UserContextDataType?
    let username: Swift.String?
    let analyticsMetadata: CognitoIdentityProviderClientTypes.AnalyticsMetadataType?
    let clientMetadata: [Swift.String:Swift.String]?
}

extension ResendConfirmationCodeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case analyticsMetadata = "AnalyticsMetadata"
        case clientId = "ClientId"
        case clientMetadata = "ClientMetadata"
        case secretHash = "SecretHash"
        case userContextData = "UserContextData"
        case username = "Username"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientId)
        clientId = clientIdDecoded
        let secretHashDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .secretHash)
        secretHash = secretHashDecoded
        let userContextDataDecoded = try containerValues.decodeIfPresent(CognitoIdentityProviderClientTypes.UserContextDataType.self, forKey: .userContextData)
        userContextData = userContextDataDecoded
        let usernameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .username)
        username = usernameDecoded
        let analyticsMetadataDecoded = try containerValues.decodeIfPresent(CognitoIdentityProviderClientTypes.AnalyticsMetadataType.self, forKey: .analyticsMetadata)
        analyticsMetadata = analyticsMetadataDecoded
        let clientMetadataContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .clientMetadata)
        var clientMetadataDecoded0: [Swift.String:Swift.String]? = nil
        if let clientMetadataContainer = clientMetadataContainer {
            clientMetadataDecoded0 = [Swift.String:Swift.String]()
            for (key0, stringtype0) in clientMetadataContainer {
                if let stringtype0 = stringtype0 {
                    clientMetadataDecoded0?[key0] = stringtype0
                }
            }
        }
        clientMetadata = clientMetadataDecoded0
    }
}
