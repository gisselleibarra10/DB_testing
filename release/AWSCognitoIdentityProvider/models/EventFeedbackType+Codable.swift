// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CognitoIdentityProviderClientTypes.EventFeedbackType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case feedbackDate = "FeedbackDate"
        case feedbackValue = "FeedbackValue"
        case provider = "Provider"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let feedbackDate = self.feedbackDate {
            try encodeContainer.encode(feedbackDate.timeIntervalSince1970, forKey: .feedbackDate)
        }
        if let feedbackValue = self.feedbackValue {
            try encodeContainer.encode(feedbackValue.rawValue, forKey: .feedbackValue)
        }
        if let provider = self.provider {
            try encodeContainer.encode(provider, forKey: .provider)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let feedbackValueDecoded = try containerValues.decodeIfPresent(CognitoIdentityProviderClientTypes.FeedbackValueType.self, forKey: .feedbackValue)
        feedbackValue = feedbackValueDecoded
        let providerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .provider)
        provider = providerDecoded
        let feedbackDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .feedbackDate)
        feedbackDate = feedbackDateDecoded
    }
}
