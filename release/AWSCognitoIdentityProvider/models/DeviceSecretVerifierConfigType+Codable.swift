// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CognitoIdentityProviderClientTypes.DeviceSecretVerifierConfigType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case passwordVerifier = "PasswordVerifier"
        case salt = "Salt"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let passwordVerifier = self.passwordVerifier {
            try encodeContainer.encode(passwordVerifier, forKey: .passwordVerifier)
        }
        if let salt = self.salt {
            try encodeContainer.encode(salt, forKey: .salt)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let passwordVerifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .passwordVerifier)
        passwordVerifier = passwordVerifierDecoded
        let saltDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .salt)
        salt = saltDecoded
    }
}
