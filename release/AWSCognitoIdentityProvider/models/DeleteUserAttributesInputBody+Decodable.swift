// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteUserAttributesInputBody: Swift.Equatable {
    let userAttributeNames: [Swift.String]?
    let accessToken: Swift.String?
}

extension DeleteUserAttributesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessToken = "AccessToken"
        case userAttributeNames = "UserAttributeNames"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userAttributeNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .userAttributeNames)
        var userAttributeNamesDecoded0:[Swift.String]? = nil
        if let userAttributeNamesContainer = userAttributeNamesContainer {
            userAttributeNamesDecoded0 = [Swift.String]()
            for string0 in userAttributeNamesContainer {
                if let string0 = string0 {
                    userAttributeNamesDecoded0?.append(string0)
                }
            }
        }
        userAttributeNames = userAttributeNamesDecoded0
        let accessTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accessToken)
        accessToken = accessTokenDecoded
    }
}
