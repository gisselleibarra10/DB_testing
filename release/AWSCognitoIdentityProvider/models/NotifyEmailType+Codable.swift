// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CognitoIdentityProviderClientTypes.NotifyEmailType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case htmlBody = "HtmlBody"
        case subject = "Subject"
        case textBody = "TextBody"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let htmlBody = self.htmlBody {
            try encodeContainer.encode(htmlBody, forKey: .htmlBody)
        }
        if let subject = self.subject {
            try encodeContainer.encode(subject, forKey: .subject)
        }
        if let textBody = self.textBody {
            try encodeContainer.encode(textBody, forKey: .textBody)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subjectDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subject)
        subject = subjectDecoded
        let htmlBodyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .htmlBody)
        htmlBody = htmlBodyDecoded
        let textBodyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .textBody)
        textBody = textBodyDecoded
    }
}
