// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CognitoIdentityProviderClientTypes.AdminCreateUserConfigType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowAdminCreateUserOnly = "AllowAdminCreateUserOnly"
        case inviteMessageTemplate = "InviteMessageTemplate"
        case unusedAccountValidityDays = "UnusedAccountValidityDays"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if allowAdminCreateUserOnly != false {
            try encodeContainer.encode(allowAdminCreateUserOnly, forKey: .allowAdminCreateUserOnly)
        }
        if let inviteMessageTemplate = self.inviteMessageTemplate {
            try encodeContainer.encode(inviteMessageTemplate, forKey: .inviteMessageTemplate)
        }
        if unusedAccountValidityDays != 0 {
            try encodeContainer.encode(unusedAccountValidityDays, forKey: .unusedAccountValidityDays)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allowAdminCreateUserOnlyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .allowAdminCreateUserOnly) ?? false
        allowAdminCreateUserOnly = allowAdminCreateUserOnlyDecoded
        let unusedAccountValidityDaysDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unusedAccountValidityDays) ?? 0
        unusedAccountValidityDays = unusedAccountValidityDaysDecoded
        let inviteMessageTemplateDecoded = try containerValues.decodeIfPresent(CognitoIdentityProviderClientTypes.MessageTemplateType.self, forKey: .inviteMessageTemplate)
        inviteMessageTemplate = inviteMessageTemplateDecoded
    }
}
