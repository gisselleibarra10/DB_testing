// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CognitoIdentityProviderClientTypes.SchemaAttributeType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributeDataType = "AttributeDataType"
        case developerOnlyAttribute = "DeveloperOnlyAttribute"
        case mutable = "Mutable"
        case name = "Name"
        case numberAttributeConstraints = "NumberAttributeConstraints"
        case `required` = "Required"
        case stringAttributeConstraints = "StringAttributeConstraints"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributeDataType = self.attributeDataType {
            try encodeContainer.encode(attributeDataType.rawValue, forKey: .attributeDataType)
        }
        if let developerOnlyAttribute = self.developerOnlyAttribute {
            try encodeContainer.encode(developerOnlyAttribute, forKey: .developerOnlyAttribute)
        }
        if let mutable = self.mutable {
            try encodeContainer.encode(mutable, forKey: .mutable)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let numberAttributeConstraints = self.numberAttributeConstraints {
            try encodeContainer.encode(numberAttributeConstraints, forKey: .numberAttributeConstraints)
        }
        if let `required` = self.`required` {
            try encodeContainer.encode(`required`, forKey: .`required`)
        }
        if let stringAttributeConstraints = self.stringAttributeConstraints {
            try encodeContainer.encode(stringAttributeConstraints, forKey: .stringAttributeConstraints)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let attributeDataTypeDecoded = try containerValues.decodeIfPresent(CognitoIdentityProviderClientTypes.AttributeDataType.self, forKey: .attributeDataType)
        attributeDataType = attributeDataTypeDecoded
        let developerOnlyAttributeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .developerOnlyAttribute)
        developerOnlyAttribute = developerOnlyAttributeDecoded
        let mutableDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .mutable)
        mutable = mutableDecoded
        let requiredDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .required)
        `required` = requiredDecoded
        let numberAttributeConstraintsDecoded = try containerValues.decodeIfPresent(CognitoIdentityProviderClientTypes.NumberAttributeConstraintsType.self, forKey: .numberAttributeConstraints)
        numberAttributeConstraints = numberAttributeConstraintsDecoded
        let stringAttributeConstraintsDecoded = try containerValues.decodeIfPresent(CognitoIdentityProviderClientTypes.StringAttributeConstraintsType.self, forKey: .stringAttributeConstraints)
        stringAttributeConstraints = stringAttributeConstraintsDecoded
    }
}
