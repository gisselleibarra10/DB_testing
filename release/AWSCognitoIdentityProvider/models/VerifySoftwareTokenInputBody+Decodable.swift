// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct VerifySoftwareTokenInputBody: Swift.Equatable {
    let accessToken: Swift.String?
    let session: Swift.String?
    let userCode: Swift.String?
    let friendlyDeviceName: Swift.String?
}

extension VerifySoftwareTokenInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessToken = "AccessToken"
        case friendlyDeviceName = "FriendlyDeviceName"
        case session = "Session"
        case userCode = "UserCode"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accessToken)
        accessToken = accessTokenDecoded
        let sessionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .session)
        session = sessionDecoded
        let userCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userCode)
        userCode = userCodeDecoded
        let friendlyDeviceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .friendlyDeviceName)
        friendlyDeviceName = friendlyDeviceNameDecoded
    }
}
