// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the request to reset a user's password as an administrator.
public struct AdminResetUserPasswordInput: Swift.Equatable {
    /// A map of custom key-value pairs that you can provide as input for any custom workflows that this action triggers. You create custom workflows by assigning Lambda functions to user pool triggers. When you use the AdminResetUserPassword API action, Amazon Cognito invokes the function that is assigned to the custom message trigger. When Amazon Cognito invokes this function, it passes a JSON payload, which the function receives as input. This payload contains a clientMetadata attribute, which provides the data that you assigned to the ClientMetadata parameter in your AdminResetUserPassword request. In your function code in Lambda, you can process the clientMetadata value to enhance your workflow for your specific needs. For more information, see [ Customizing user pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html) in the Amazon Cognito Developer Guide. When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the following:
    ///
    /// * Store the ClientMetadata value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration doesn't include triggers, the ClientMetadata parameter serves no purpose.
    ///
    /// * Validate the ClientMetadata value.
    ///
    /// * Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
    public var clientMetadata: [Swift.String:Swift.String]?
    /// The user pool ID for the user pool where you want to reset the user's password.
    /// This member is required.
    public var userPoolId: Swift.String?
    /// The user name of the user whose password you want to reset.
    /// This member is required.
    public var username: Swift.String?

    public init (
        clientMetadata: [Swift.String:Swift.String]? = nil,
        userPoolId: Swift.String? = nil,
        username: Swift.String? = nil
    )
    {
        self.clientMetadata = clientMetadata
        self.userPoolId = userPoolId
        self.username = username
    }
}
