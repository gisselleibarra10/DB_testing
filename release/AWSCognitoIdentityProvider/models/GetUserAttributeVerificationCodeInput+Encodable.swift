// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetUserAttributeVerificationCodeInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessToken = "AccessToken"
        case attributeName = "AttributeName"
        case clientMetadata = "ClientMetadata"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessToken = self.accessToken {
            try encodeContainer.encode(accessToken, forKey: .accessToken)
        }
        if let attributeName = self.attributeName {
            try encodeContainer.encode(attributeName, forKey: .attributeName)
        }
        if let clientMetadata = clientMetadata {
            var clientMetadataContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .clientMetadata)
            for (dictKey0, clientmetadatatype0) in clientMetadata {
                try clientMetadataContainer.encode(clientmetadatatype0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
