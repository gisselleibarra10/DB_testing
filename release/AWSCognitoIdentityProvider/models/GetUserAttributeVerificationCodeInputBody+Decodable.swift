// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUserAttributeVerificationCodeInputBody: Swift.Equatable {
    let accessToken: Swift.String?
    let attributeName: Swift.String?
    let clientMetadata: [Swift.String:Swift.String]?
}

extension GetUserAttributeVerificationCodeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessToken = "AccessToken"
        case attributeName = "AttributeName"
        case clientMetadata = "ClientMetadata"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accessToken)
        accessToken = accessTokenDecoded
        let attributeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attributeName)
        attributeName = attributeNameDecoded
        let clientMetadataContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .clientMetadata)
        var clientMetadataDecoded0: [Swift.String:Swift.String]? = nil
        if let clientMetadataContainer = clientMetadataContainer {
            clientMetadataDecoded0 = [Swift.String:Swift.String]()
            for (key0, stringtype0) in clientMetadataContainer {
                if let stringtype0 = stringtype0 {
                    clientMetadataDecoded0?[key0] = stringtype0
                }
            }
        }
        clientMetadata = clientMetadataDecoded0
    }
}
