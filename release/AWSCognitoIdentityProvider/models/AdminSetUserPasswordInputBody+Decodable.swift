// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AdminSetUserPasswordInputBody: Swift.Equatable {
    let userPoolId: Swift.String?
    let username: Swift.String?
    let password: Swift.String?
    let permanent: Swift.Bool
}

extension AdminSetUserPasswordInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case password = "Password"
        case permanent = "Permanent"
        case userPoolId = "UserPoolId"
        case username = "Username"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userPoolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userPoolId)
        userPoolId = userPoolIdDecoded
        let usernameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .username)
        username = usernameDecoded
        let passwordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .password)
        password = passwordDecoded
        let permanentDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .permanent) ?? false
        permanent = permanentDecoded
    }
}
