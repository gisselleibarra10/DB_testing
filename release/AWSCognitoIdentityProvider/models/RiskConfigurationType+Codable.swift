// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CognitoIdentityProviderClientTypes.RiskConfigurationType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountTakeoverRiskConfiguration = "AccountTakeoverRiskConfiguration"
        case clientId = "ClientId"
        case compromisedCredentialsRiskConfiguration = "CompromisedCredentialsRiskConfiguration"
        case lastModifiedDate = "LastModifiedDate"
        case riskExceptionConfiguration = "RiskExceptionConfiguration"
        case userPoolId = "UserPoolId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountTakeoverRiskConfiguration = self.accountTakeoverRiskConfiguration {
            try encodeContainer.encode(accountTakeoverRiskConfiguration, forKey: .accountTakeoverRiskConfiguration)
        }
        if let clientId = self.clientId {
            try encodeContainer.encode(clientId, forKey: .clientId)
        }
        if let compromisedCredentialsRiskConfiguration = self.compromisedCredentialsRiskConfiguration {
            try encodeContainer.encode(compromisedCredentialsRiskConfiguration, forKey: .compromisedCredentialsRiskConfiguration)
        }
        if let lastModifiedDate = self.lastModifiedDate {
            try encodeContainer.encode(lastModifiedDate.timeIntervalSince1970, forKey: .lastModifiedDate)
        }
        if let riskExceptionConfiguration = self.riskExceptionConfiguration {
            try encodeContainer.encode(riskExceptionConfiguration, forKey: .riskExceptionConfiguration)
        }
        if let userPoolId = self.userPoolId {
            try encodeContainer.encode(userPoolId, forKey: .userPoolId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userPoolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userPoolId)
        userPoolId = userPoolIdDecoded
        let clientIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientId)
        clientId = clientIdDecoded
        let compromisedCredentialsRiskConfigurationDecoded = try containerValues.decodeIfPresent(CognitoIdentityProviderClientTypes.CompromisedCredentialsRiskConfigurationType.self, forKey: .compromisedCredentialsRiskConfiguration)
        compromisedCredentialsRiskConfiguration = compromisedCredentialsRiskConfigurationDecoded
        let accountTakeoverRiskConfigurationDecoded = try containerValues.decodeIfPresent(CognitoIdentityProviderClientTypes.AccountTakeoverRiskConfigurationType.self, forKey: .accountTakeoverRiskConfiguration)
        accountTakeoverRiskConfiguration = accountTakeoverRiskConfigurationDecoded
        let riskExceptionConfigurationDecoded = try containerValues.decodeIfPresent(CognitoIdentityProviderClientTypes.RiskExceptionConfigurationType.self, forKey: .riskExceptionConfiguration)
        riskExceptionConfiguration = riskExceptionConfigurationDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
    }
}
