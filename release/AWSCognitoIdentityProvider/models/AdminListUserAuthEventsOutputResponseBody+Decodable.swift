// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AdminListUserAuthEventsOutputResponseBody: Swift.Equatable {
    let authEvents: [CognitoIdentityProviderClientTypes.AuthEventType]?
    let nextToken: Swift.String?
}

extension AdminListUserAuthEventsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authEvents = "AuthEvents"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authEventsContainer = try containerValues.decodeIfPresent([CognitoIdentityProviderClientTypes.AuthEventType?].self, forKey: .authEvents)
        var authEventsDecoded0:[CognitoIdentityProviderClientTypes.AuthEventType]? = nil
        if let authEventsContainer = authEventsContainer {
            authEventsDecoded0 = [CognitoIdentityProviderClientTypes.AuthEventType]()
            for structure0 in authEventsContainer {
                if let structure0 = structure0 {
                    authEventsDecoded0?.append(structure0)
                }
            }
        }
        authEvents = authEventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
