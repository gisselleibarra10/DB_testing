// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AdminDeleteUserAttributesInputBody: Swift.Equatable {
    let userPoolId: Swift.String?
    let username: Swift.String?
    let userAttributeNames: [Swift.String]?
}

extension AdminDeleteUserAttributesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case userAttributeNames = "UserAttributeNames"
        case userPoolId = "UserPoolId"
        case username = "Username"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userPoolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userPoolId)
        userPoolId = userPoolIdDecoded
        let usernameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .username)
        username = usernameDecoded
        let userAttributeNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .userAttributeNames)
        var userAttributeNamesDecoded0:[Swift.String]? = nil
        if let userAttributeNamesContainer = userAttributeNamesContainer {
            userAttributeNamesDecoded0 = [Swift.String]()
            for string0 in userAttributeNamesContainer {
                if let string0 = string0 {
                    userAttributeNamesDecoded0?.append(string0)
                }
            }
        }
        userAttributeNames = userAttributeNamesDecoded0
    }
}
