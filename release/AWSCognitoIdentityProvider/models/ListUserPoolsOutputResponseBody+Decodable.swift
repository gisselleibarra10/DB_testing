// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUserPoolsOutputResponseBody: Swift.Equatable {
    let userPools: [CognitoIdentityProviderClientTypes.UserPoolDescriptionType]?
    let nextToken: Swift.String?
}

extension ListUserPoolsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case userPools = "UserPools"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userPoolsContainer = try containerValues.decodeIfPresent([CognitoIdentityProviderClientTypes.UserPoolDescriptionType?].self, forKey: .userPools)
        var userPoolsDecoded0:[CognitoIdentityProviderClientTypes.UserPoolDescriptionType]? = nil
        if let userPoolsContainer = userPoolsContainer {
            userPoolsDecoded0 = [CognitoIdentityProviderClientTypes.UserPoolDescriptionType]()
            for structure0 in userPoolsContainer {
                if let structure0 = structure0 {
                    userPoolsDecoded0?.append(structure0)
                }
            }
        }
        userPools = userPoolsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
