// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUserImportJobsOutputResponseBody: Swift.Equatable {
    let userImportJobs: [CognitoIdentityProviderClientTypes.UserImportJobType]?
    let paginationToken: Swift.String?
}

extension ListUserImportJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case paginationToken = "PaginationToken"
        case userImportJobs = "UserImportJobs"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userImportJobsContainer = try containerValues.decodeIfPresent([CognitoIdentityProviderClientTypes.UserImportJobType?].self, forKey: .userImportJobs)
        var userImportJobsDecoded0:[CognitoIdentityProviderClientTypes.UserImportJobType]? = nil
        if let userImportJobsContainer = userImportJobsContainer {
            userImportJobsDecoded0 = [CognitoIdentityProviderClientTypes.UserImportJobType]()
            for structure0 in userImportJobsContainer {
                if let structure0 = structure0 {
                    userImportJobsDecoded0?.append(structure0)
                }
            }
        }
        userImportJobs = userImportJobsDecoded0
        let paginationTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .paginationToken)
        paginationToken = paginationTokenDecoded
    }
}
