// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProjectsOutputResponseBody: Swift.Equatable {
    let projects: [LookoutVisionClientTypes.ProjectMetadata]?
    let nextToken: Swift.String?
}

extension ListProjectsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case projects = "Projects"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectsContainer = try containerValues.decodeIfPresent([LookoutVisionClientTypes.ProjectMetadata?].self, forKey: .projects)
        var projectsDecoded0:[LookoutVisionClientTypes.ProjectMetadata]? = nil
        if let projectsContainer = projectsContainer {
            projectsDecoded0 = [LookoutVisionClientTypes.ProjectMetadata]()
            for structure0 in projectsContainer {
                if let structure0 = structure0 {
                    projectsDecoded0?.append(structure0)
                }
            }
        }
        projects = projectsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
