// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutVisionClientTypes.GreengrassOutputDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case componentName = "ComponentName"
        case componentVersion = "ComponentVersion"
        case componentVersionArn = "ComponentVersionArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let componentName = self.componentName {
            try encodeContainer.encode(componentName, forKey: .componentName)
        }
        if let componentVersion = self.componentVersion {
            try encodeContainer.encode(componentVersion, forKey: .componentVersion)
        }
        if let componentVersionArn = self.componentVersionArn {
            try encodeContainer.encode(componentVersionArn, forKey: .componentVersionArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let componentVersionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .componentVersionArn)
        componentVersionArn = componentVersionArnDecoded
        let componentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .componentName)
        componentName = componentNameDecoded
        let componentVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .componentVersion)
        componentVersion = componentVersionDecoded
    }
}
