// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListModelsOutputResponseBody: Swift.Equatable {
    let models: [LookoutVisionClientTypes.ModelMetadata]?
    let nextToken: Swift.String?
}

extension ListModelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case models = "Models"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelsContainer = try containerValues.decodeIfPresent([LookoutVisionClientTypes.ModelMetadata?].self, forKey: .models)
        var modelsDecoded0:[LookoutVisionClientTypes.ModelMetadata]? = nil
        if let modelsContainer = modelsContainer {
            modelsDecoded0 = [LookoutVisionClientTypes.ModelMetadata]()
            for structure0 in modelsContainer {
                if let structure0 = structure0 {
                    modelsDecoded0?.append(structure0)
                }
            }
        }
        models = modelsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
