// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutVisionClientTypes.PixelAnomaly: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case color = "Color"
        case totalPercentageArea = "TotalPercentageArea"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let color = self.color {
            try encodeContainer.encode(color, forKey: .color)
        }
        if let totalPercentageArea = self.totalPercentageArea {
            try encodeContainer.encode(totalPercentageArea, forKey: .totalPercentageArea)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalPercentageAreaDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .totalPercentageArea)
        totalPercentageArea = totalPercentageAreaDecoded
        let colorDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .color)
        color = colorDecoded
    }
}
