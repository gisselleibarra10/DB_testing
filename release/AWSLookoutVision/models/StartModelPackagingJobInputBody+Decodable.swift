// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartModelPackagingJobInputBody: Swift.Equatable {
    let modelVersion: Swift.String?
    let jobName: Swift.String?
    let configuration: LookoutVisionClientTypes.ModelPackagingConfiguration?
    let description: Swift.String?
}

extension StartModelPackagingJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configuration = "Configuration"
        case description = "Description"
        case jobName = "JobName"
        case modelVersion = "ModelVersion"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelVersion)
        modelVersion = modelVersionDecoded
        let jobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobName)
        jobName = jobNameDecoded
        let configurationDecoded = try containerValues.decodeIfPresent(LookoutVisionClientTypes.ModelPackagingConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
    }
}
