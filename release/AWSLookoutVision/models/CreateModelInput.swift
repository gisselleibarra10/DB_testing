// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateModelInput: Swift.Equatable {
    /// ClientToken is an idempotency token that ensures a call to CreateModel completes only once. You choose the value to pass. For example, An issue might prevent you from getting a response from CreateModel. In this case, safely retry your call to CreateModel by using the same ClientToken parameter value. If you don't supply a value for ClientToken, the AWS SDK you are using inserts a value for you. This prevents retries after a network error from starting multiple training jobs. You'll need to provide your own value for other use cases. An error occurs if the other input parameters are not the same as in the first request. Using a different value for ClientToken is considered a new call to CreateModel. An idempotency token is active for 8 hours.
    public var clientToken: Swift.String?
    /// A description for the version of the model.
    public var description: Swift.String?
    /// The identifier for your AWS KMS key. The key is used to encrypt training and test images copied into the service for model training. Your source images are unaffected. If this parameter is not specified, the copied images are encrypted by a key that AWS owns and manages.
    public var kmsKeyId: Swift.String?
    /// The location where Amazon Lookout for Vision saves the training results.
    /// This member is required.
    public var outputConfig: LookoutVisionClientTypes.OutputConfig?
    /// The name of the project in which you want to create a model version.
    /// This member is required.
    public var projectName: Swift.String?
    /// A set of tags (key-value pairs) that you want to attach to the model.
    public var tags: [LookoutVisionClientTypes.Tag]?

    public init (
        clientToken: Swift.String? = nil,
        description: Swift.String? = nil,
        kmsKeyId: Swift.String? = nil,
        outputConfig: LookoutVisionClientTypes.OutputConfig? = nil,
        projectName: Swift.String? = nil,
        tags: [LookoutVisionClientTypes.Tag]? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.kmsKeyId = kmsKeyId
        self.outputConfig = outputConfig
        self.projectName = projectName
        self.tags = tags
    }
}
