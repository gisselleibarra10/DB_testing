// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutVisionClientTypes.DatasetImageStats: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomaly = "Anomaly"
        case labeled = "Labeled"
        case normal = "Normal"
        case total = "Total"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let anomaly = self.anomaly {
            try encodeContainer.encode(anomaly, forKey: .anomaly)
        }
        if let labeled = self.labeled {
            try encodeContainer.encode(labeled, forKey: .labeled)
        }
        if let normal = self.normal {
            try encodeContainer.encode(normal, forKey: .normal)
        }
        if let total = self.total {
            try encodeContainer.encode(total, forKey: .total)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .total)
        total = totalDecoded
        let labeledDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .labeled)
        labeled = labeledDecoded
        let normalDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .normal)
        normal = normalDecoded
        let anomalyDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .anomaly)
        anomaly = anomalyDecoded
    }
}
