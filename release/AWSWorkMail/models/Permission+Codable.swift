// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WorkMailClientTypes.Permission: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case granteeId = "GranteeId"
        case granteeType = "GranteeType"
        case permissionValues = "PermissionValues"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let granteeId = self.granteeId {
            try encodeContainer.encode(granteeId, forKey: .granteeId)
        }
        if let granteeType = self.granteeType {
            try encodeContainer.encode(granteeType.rawValue, forKey: .granteeType)
        }
        if let permissionValues = permissionValues {
            var permissionValuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .permissionValues)
            for permissionvalues0 in permissionValues {
                try permissionValuesContainer.encode(permissionvalues0.rawValue)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let granteeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .granteeId)
        granteeId = granteeIdDecoded
        let granteeTypeDecoded = try containerValues.decodeIfPresent(WorkMailClientTypes.MemberType.self, forKey: .granteeType)
        granteeType = granteeTypeDecoded
        let permissionValuesContainer = try containerValues.decodeIfPresent([WorkMailClientTypes.PermissionType?].self, forKey: .permissionValues)
        var permissionValuesDecoded0:[WorkMailClientTypes.PermissionType]? = nil
        if let permissionValuesContainer = permissionValuesContainer {
            permissionValuesDecoded0 = [WorkMailClientTypes.PermissionType]()
            for string0 in permissionValuesContainer {
                if let string0 = string0 {
                    permissionValuesDecoded0?.append(string0)
                }
            }
        }
        permissionValues = permissionValuesDecoded0
    }
}
