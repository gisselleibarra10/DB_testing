// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourceDelegatesOutputResponseBody: Swift.Equatable {
    let delegates: [WorkMailClientTypes.Delegate]?
    let nextToken: Swift.String?
}

extension ListResourceDelegatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case delegates = "Delegates"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let delegatesContainer = try containerValues.decodeIfPresent([WorkMailClientTypes.Delegate?].self, forKey: .delegates)
        var delegatesDecoded0:[WorkMailClientTypes.Delegate]? = nil
        if let delegatesContainer = delegatesContainer {
            delegatesDecoded0 = [WorkMailClientTypes.Delegate]()
            for structure0 in delegatesContainer {
                if let structure0 = structure0 {
                    delegatesDecoded0?.append(structure0)
                }
            }
        }
        delegates = delegatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
