// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAvailabilityConfigurationsOutputResponseBody: Swift.Equatable {
    let availabilityConfigurations: [WorkMailClientTypes.AvailabilityConfiguration]?
    let nextToken: Swift.String?
}

extension ListAvailabilityConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case availabilityConfigurations = "AvailabilityConfigurations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let availabilityConfigurationsContainer = try containerValues.decodeIfPresent([WorkMailClientTypes.AvailabilityConfiguration?].self, forKey: .availabilityConfigurations)
        var availabilityConfigurationsDecoded0:[WorkMailClientTypes.AvailabilityConfiguration]? = nil
        if let availabilityConfigurationsContainer = availabilityConfigurationsContainer {
            availabilityConfigurationsDecoded0 = [WorkMailClientTypes.AvailabilityConfiguration]()
            for structure0 in availabilityConfigurationsContainer {
                if let structure0 = structure0 {
                    availabilityConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        availabilityConfigurations = availabilityConfigurationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
