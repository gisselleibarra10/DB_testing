// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMailboxExportJobOutputResponseBody: Swift.Equatable {
    let entityId: Swift.String?
    let description: Swift.String?
    let roleArn: Swift.String?
    let kmsKeyArn: Swift.String?
    let s3BucketName: Swift.String?
    let s3Prefix: Swift.String?
    let s3Path: Swift.String?
    let estimatedProgress: Swift.Int
    let state: WorkMailClientTypes.MailboxExportJobState?
    let errorInfo: Swift.String?
    let startTime: ClientRuntime.Date?
    let endTime: ClientRuntime.Date?
}

extension DescribeMailboxExportJobOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case endTime = "EndTime"
        case entityId = "EntityId"
        case errorInfo = "ErrorInfo"
        case estimatedProgress = "EstimatedProgress"
        case kmsKeyArn = "KmsKeyArn"
        case roleArn = "RoleArn"
        case s3BucketName = "S3BucketName"
        case s3Path = "S3Path"
        case s3Prefix = "S3Prefix"
        case startTime = "StartTime"
        case state = "State"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .entityId)
        entityId = entityIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
        let s3BucketNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3BucketName)
        s3BucketName = s3BucketNameDecoded
        let s3PrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3Prefix)
        s3Prefix = s3PrefixDecoded
        let s3PathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3Path)
        s3Path = s3PathDecoded
        let estimatedProgressDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .estimatedProgress) ?? 0
        estimatedProgress = estimatedProgressDecoded
        let stateDecoded = try containerValues.decodeIfPresent(WorkMailClientTypes.MailboxExportJobState.self, forKey: .state)
        state = stateDecoded
        let errorInfoDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorInfo)
        errorInfo = errorInfoDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endTime)
        endTime = endTimeDecoded
    }
}
