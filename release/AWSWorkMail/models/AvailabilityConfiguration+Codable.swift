// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WorkMailClientTypes.AvailabilityConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dateCreated = "DateCreated"
        case dateModified = "DateModified"
        case domainName = "DomainName"
        case ewsProvider = "EwsProvider"
        case lambdaProvider = "LambdaProvider"
        case providerType = "ProviderType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dateCreated = self.dateCreated {
            try encodeContainer.encode(dateCreated.timeIntervalSince1970, forKey: .dateCreated)
        }
        if let dateModified = self.dateModified {
            try encodeContainer.encode(dateModified.timeIntervalSince1970, forKey: .dateModified)
        }
        if let domainName = self.domainName {
            try encodeContainer.encode(domainName, forKey: .domainName)
        }
        if let ewsProvider = self.ewsProvider {
            try encodeContainer.encode(ewsProvider, forKey: .ewsProvider)
        }
        if let lambdaProvider = self.lambdaProvider {
            try encodeContainer.encode(lambdaProvider, forKey: .lambdaProvider)
        }
        if let providerType = self.providerType {
            try encodeContainer.encode(providerType.rawValue, forKey: .providerType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let providerTypeDecoded = try containerValues.decodeIfPresent(WorkMailClientTypes.AvailabilityProviderType.self, forKey: .providerType)
        providerType = providerTypeDecoded
        let ewsProviderDecoded = try containerValues.decodeIfPresent(WorkMailClientTypes.RedactedEwsAvailabilityProvider.self, forKey: .ewsProvider)
        ewsProvider = ewsProviderDecoded
        let lambdaProviderDecoded = try containerValues.decodeIfPresent(WorkMailClientTypes.LambdaAvailabilityProvider.self, forKey: .lambdaProvider)
        lambdaProvider = lambdaProviderDecoded
        let dateCreatedDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .dateCreated)
        dateCreated = dateCreatedDecoded
        let dateModifiedDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .dateModified)
        dateModified = dateModifiedDecoded
    }
}
