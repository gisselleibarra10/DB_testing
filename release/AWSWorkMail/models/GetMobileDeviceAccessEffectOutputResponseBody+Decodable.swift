// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMobileDeviceAccessEffectOutputResponseBody: Swift.Equatable {
    let effect: WorkMailClientTypes.MobileDeviceAccessRuleEffect?
    let matchedRules: [WorkMailClientTypes.MobileDeviceAccessMatchedRule]?
}

extension GetMobileDeviceAccessEffectOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case effect = "Effect"
        case matchedRules = "MatchedRules"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let effectDecoded = try containerValues.decodeIfPresent(WorkMailClientTypes.MobileDeviceAccessRuleEffect.self, forKey: .effect)
        effect = effectDecoded
        let matchedRulesContainer = try containerValues.decodeIfPresent([WorkMailClientTypes.MobileDeviceAccessMatchedRule?].self, forKey: .matchedRules)
        var matchedRulesDecoded0:[WorkMailClientTypes.MobileDeviceAccessMatchedRule]? = nil
        if let matchedRulesContainer = matchedRulesContainer {
            matchedRulesDecoded0 = [WorkMailClientTypes.MobileDeviceAccessMatchedRule]()
            for structure0 in matchedRulesContainer {
                if let structure0 = structure0 {
                    matchedRulesDecoded0?.append(structure0)
                }
            }
        }
        matchedRules = matchedRulesDecoded0
    }
}
