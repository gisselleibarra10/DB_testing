// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutMailboxPermissionsInputBody: Swift.Equatable {
    let organizationId: Swift.String?
    let entityId: Swift.String?
    let granteeId: Swift.String?
    let permissionValues: [WorkMailClientTypes.PermissionType]?
}

extension PutMailboxPermissionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entityId = "EntityId"
        case granteeId = "GranteeId"
        case organizationId = "OrganizationId"
        case permissionValues = "PermissionValues"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .organizationId)
        organizationId = organizationIdDecoded
        let entityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .entityId)
        entityId = entityIdDecoded
        let granteeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .granteeId)
        granteeId = granteeIdDecoded
        let permissionValuesContainer = try containerValues.decodeIfPresent([WorkMailClientTypes.PermissionType?].self, forKey: .permissionValues)
        var permissionValuesDecoded0:[WorkMailClientTypes.PermissionType]? = nil
        if let permissionValuesContainer = permissionValuesContainer {
            permissionValuesDecoded0 = [WorkMailClientTypes.PermissionType]()
            for string0 in permissionValuesContainer {
                if let string0 = string0 {
                    permissionValuesDecoded0?.append(string0)
                }
            }
        }
        permissionValues = permissionValuesDecoded0
    }
}
