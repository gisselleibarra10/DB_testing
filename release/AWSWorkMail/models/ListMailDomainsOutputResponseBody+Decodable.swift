// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMailDomainsOutputResponseBody: Swift.Equatable {
    let mailDomains: [WorkMailClientTypes.MailDomainSummary]?
    let nextToken: Swift.String?
}

extension ListMailDomainsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case mailDomains = "MailDomains"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mailDomainsContainer = try containerValues.decodeIfPresent([WorkMailClientTypes.MailDomainSummary?].self, forKey: .mailDomains)
        var mailDomainsDecoded0:[WorkMailClientTypes.MailDomainSummary]? = nil
        if let mailDomainsContainer = mailDomainsContainer {
            mailDomainsDecoded0 = [WorkMailClientTypes.MailDomainSummary]()
            for structure0 in mailDomainsContainer {
                if let structure0 = structure0 {
                    mailDomainsDecoded0?.append(structure0)
                }
            }
        }
        mailDomains = mailDomainsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
