// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRequestedServiceQuotaChangeHistoryOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let requestedQuotas: [ServiceQuotasClientTypes.RequestedServiceQuotaChange]?
}

extension ListRequestedServiceQuotaChangeHistoryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case requestedQuotas = "RequestedQuotas"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let requestedQuotasContainer = try containerValues.decodeIfPresent([ServiceQuotasClientTypes.RequestedServiceQuotaChange?].self, forKey: .requestedQuotas)
        var requestedQuotasDecoded0:[ServiceQuotasClientTypes.RequestedServiceQuotaChange]? = nil
        if let requestedQuotasContainer = requestedQuotasContainer {
            requestedQuotasDecoded0 = [ServiceQuotasClientTypes.RequestedServiceQuotaChange]()
            for structure0 in requestedQuotasContainer {
                if let structure0 = structure0 {
                    requestedQuotasDecoded0?.append(structure0)
                }
            }
        }
        requestedQuotas = requestedQuotasDecoded0
    }
}
