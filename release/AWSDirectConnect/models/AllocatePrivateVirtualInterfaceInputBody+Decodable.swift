// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AllocatePrivateVirtualInterfaceInputBody: Swift.Equatable {
    let connectionId: Swift.String?
    let ownerAccount: Swift.String?
    let newPrivateVirtualInterfaceAllocation: DirectConnectClientTypes.NewPrivateVirtualInterfaceAllocation?
}

extension AllocatePrivateVirtualInterfaceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionId
        case newPrivateVirtualInterfaceAllocation
        case ownerAccount
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectionId)
        connectionId = connectionIdDecoded
        let ownerAccountDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ownerAccount)
        ownerAccount = ownerAccountDecoded
        let newPrivateVirtualInterfaceAllocationDecoded = try containerValues.decodeIfPresent(DirectConnectClientTypes.NewPrivateVirtualInterfaceAllocation.self, forKey: .newPrivateVirtualInterfaceAllocation)
        newPrivateVirtualInterfaceAllocation = newPrivateVirtualInterfaceAllocationDecoded
    }
}
