// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DirectConnectClientTypes {
    /// Information about a BGP peer.
    public struct BGPPeer: Swift.Equatable {
        /// The address family for the BGP peer.
        public var addressFamily: DirectConnectClientTypes.AddressFamily?
        /// The IP address assigned to the Amazon interface.
        public var amazonAddress: Swift.String?
        /// The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
        public var asn: Swift.Int
        /// The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.
        public var authKey: Swift.String?
        /// The Direct Connect endpoint that terminates the BGP peer.
        public var awsDeviceV2: Swift.String?
        /// The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.
        public var awsLogicalDeviceId: Swift.String?
        /// The ID of the BGP peer.
        public var bgpPeerId: Swift.String?
        /// The state of the BGP peer. The following are the possible values:
        ///
        /// * verifying: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.
        ///
        /// * pending: The BGP peer is created, and remains in this state until it is ready to be established.
        ///
        /// * available: The BGP peer is ready to be established.
        ///
        /// * deleting: The BGP peer is being deleted.
        ///
        /// * deleted: The BGP peer is deleted and cannot be established.
        public var bgpPeerState: DirectConnectClientTypes.BGPPeerState?
        /// The status of the BGP peer. The following are the possible values:
        ///
        /// * up: The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.
        ///
        /// * down: The BGP peer is down.
        ///
        /// * unknown: The BGP peer status is not available.
        public var bgpStatus: DirectConnectClientTypes.BGPStatus?
        /// The IP address assigned to the customer interface.
        public var customerAddress: Swift.String?

        public init (
            addressFamily: DirectConnectClientTypes.AddressFamily? = nil,
            amazonAddress: Swift.String? = nil,
            asn: Swift.Int = 0,
            authKey: Swift.String? = nil,
            awsDeviceV2: Swift.String? = nil,
            awsLogicalDeviceId: Swift.String? = nil,
            bgpPeerId: Swift.String? = nil,
            bgpPeerState: DirectConnectClientTypes.BGPPeerState? = nil,
            bgpStatus: DirectConnectClientTypes.BGPStatus? = nil,
            customerAddress: Swift.String? = nil
        )
        {
            self.addressFamily = addressFamily
            self.amazonAddress = amazonAddress
            self.asn = asn
            self.authKey = authKey
            self.awsDeviceV2 = awsDeviceV2
            self.awsLogicalDeviceId = awsLogicalDeviceId
            self.bgpPeerId = bgpPeerId
            self.bgpPeerState = bgpPeerState
            self.bgpStatus = bgpStatus
            self.customerAddress = customerAddress
        }
    }

}
