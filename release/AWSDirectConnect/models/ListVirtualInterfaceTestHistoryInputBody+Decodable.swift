// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVirtualInterfaceTestHistoryInputBody: Swift.Equatable {
    let testId: Swift.String?
    let virtualInterfaceId: Swift.String?
    let bgpPeers: [Swift.String]?
    let status: Swift.String?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension ListVirtualInterfaceTestHistoryInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bgpPeers
        case maxResults
        case nextToken
        case status
        case testId
        case virtualInterfaceId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let testIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .testId)
        testId = testIdDecoded
        let virtualInterfaceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .virtualInterfaceId)
        virtualInterfaceId = virtualInterfaceIdDecoded
        let bgpPeersContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .bgpPeers)
        var bgpPeersDecoded0:[Swift.String]? = nil
        if let bgpPeersContainer = bgpPeersContainer {
            bgpPeersDecoded0 = [Swift.String]()
            for string0 in bgpPeersContainer {
                if let string0 = string0 {
                    bgpPeersDecoded0?.append(string0)
                }
            }
        }
        bgpPeers = bgpPeersDecoded0
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
