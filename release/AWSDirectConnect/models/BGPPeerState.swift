// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DirectConnectClientTypes {
    public enum BGPPeerState: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case available
        case deleted
        case deleting
        case pending
        case verifying
        case sdkUnknown(Swift.String)

        public static var allCases: [BGPPeerState] {
            return [
                .available,
                .deleted,
                .deleting,
                .pending,
                .verifying,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .available: return "available"
            case .deleted: return "deleted"
            case .deleting: return "deleting"
            case .pending: return "pending"
            case .verifying: return "verifying"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = BGPPeerState(rawValue: rawValue) ?? BGPPeerState.sdkUnknown(rawValue)
        }
    }
}
