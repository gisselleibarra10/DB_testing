// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVirtualInterfaceTestHistoryOutputResponseBody: Swift.Equatable {
    let virtualInterfaceTestHistory: [DirectConnectClientTypes.VirtualInterfaceTestHistory]?
    let nextToken: Swift.String?
}

extension ListVirtualInterfaceTestHistoryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case virtualInterfaceTestHistory
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let virtualInterfaceTestHistoryContainer = try containerValues.decodeIfPresent([DirectConnectClientTypes.VirtualInterfaceTestHistory?].self, forKey: .virtualInterfaceTestHistory)
        var virtualInterfaceTestHistoryDecoded0:[DirectConnectClientTypes.VirtualInterfaceTestHistory]? = nil
        if let virtualInterfaceTestHistoryContainer = virtualInterfaceTestHistoryContainer {
            virtualInterfaceTestHistoryDecoded0 = [DirectConnectClientTypes.VirtualInterfaceTestHistory]()
            for structure0 in virtualInterfaceTestHistoryContainer {
                if let structure0 = structure0 {
                    virtualInterfaceTestHistoryDecoded0?.append(structure0)
                }
            }
        }
        virtualInterfaceTestHistory = virtualInterfaceTestHistoryDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
