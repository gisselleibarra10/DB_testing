// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRouterConfigurationOutputResponseBody: Swift.Equatable {
    let customerRouterConfig: Swift.String?
    let router: DirectConnectClientTypes.RouterType?
    let virtualInterfaceId: Swift.String?
    let virtualInterfaceName: Swift.String?
}

extension DescribeRouterConfigurationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customerRouterConfig
        case router
        case virtualInterfaceId
        case virtualInterfaceName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customerRouterConfigDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customerRouterConfig)
        customerRouterConfig = customerRouterConfigDecoded
        let routerDecoded = try containerValues.decodeIfPresent(DirectConnectClientTypes.RouterType.self, forKey: .router)
        router = routerDecoded
        let virtualInterfaceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .virtualInterfaceId)
        virtualInterfaceId = virtualInterfaceIdDecoded
        let virtualInterfaceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .virtualInterfaceName)
        virtualInterfaceName = virtualInterfaceNameDecoded
    }
}
