// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateMacSecKeyOutputResponseBody: Swift.Equatable {
    let connectionId: Swift.String?
    let macSecKeys: [DirectConnectClientTypes.MacSecKey]?
}

extension AssociateMacSecKeyOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionId
        case macSecKeys
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectionId)
        connectionId = connectionIdDecoded
        let macSecKeysContainer = try containerValues.decodeIfPresent([DirectConnectClientTypes.MacSecKey?].self, forKey: .macSecKeys)
        var macSecKeysDecoded0:[DirectConnectClientTypes.MacSecKey]? = nil
        if let macSecKeysContainer = macSecKeysContainer {
            macSecKeysDecoded0 = [DirectConnectClientTypes.MacSecKey]()
            for structure0 in macSecKeysContainer {
                if let structure0 = structure0 {
                    macSecKeysDecoded0?.append(structure0)
                }
            }
        }
        macSecKeys = macSecKeysDecoded0
    }
}
