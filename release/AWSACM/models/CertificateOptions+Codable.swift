// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AcmClientTypes.CertificateOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateTransparencyLoggingPreference = "CertificateTransparencyLoggingPreference"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificateTransparencyLoggingPreference = self.certificateTransparencyLoggingPreference {
            try encodeContainer.encode(certificateTransparencyLoggingPreference.rawValue, forKey: .certificateTransparencyLoggingPreference)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateTransparencyLoggingPreferenceDecoded = try containerValues.decodeIfPresent(AcmClientTypes.CertificateTransparencyLoggingPreference.self, forKey: .certificateTransparencyLoggingPreference)
        certificateTransparencyLoggingPreference = certificateTransparencyLoggingPreferenceDecoded
    }
}
