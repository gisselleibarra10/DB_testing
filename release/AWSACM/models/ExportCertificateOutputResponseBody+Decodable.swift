// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExportCertificateOutputResponseBody: Swift.Equatable {
    let certificate: Swift.String?
    let certificateChain: Swift.String?
    let privateKey: Swift.String?
}

extension ExportCertificateOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificate = "Certificate"
        case certificateChain = "CertificateChain"
        case privateKey = "PrivateKey"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificate)
        certificate = certificateDecoded
        let certificateChainDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificateChain)
        certificateChain = certificateChainDecoded
        let privateKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .privateKey)
        privateKey = privateKeyDecoded
    }
}
