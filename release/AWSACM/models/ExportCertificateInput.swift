// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ExportCertificateInput: Swift.Equatable {
    /// An Amazon Resource Name (ARN) of the issued certificate. This must be of the form: arn:aws:acm:region:account:certificate/12345678-1234-1234-1234-123456789012
    /// This member is required.
    public var certificateArn: Swift.String?
    /// Passphrase to associate with the encrypted exported private key. When creating your passphrase, you can use any ASCII character except #, $, or %. If you want to later decrypt the private key, you must have the passphrase. You can use the following OpenSSL command to decrypt a private key. After entering the command, you are prompted for the passphrase. openssl rsa -in encrypted_key.pem -out decrypted_key.pem
    /// This member is required.
    public var passphrase: ClientRuntime.Data?

    public init (
        certificateArn: Swift.String? = nil,
        passphrase: ClientRuntime.Data? = nil
    )
    {
        self.certificateArn = certificateArn
        self.passphrase = passphrase
    }
}
