// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AcmClientTypes {
    /// This structure can be used in the [ListCertificates] action to filter the output of the certificate list.
    public struct Filters: Swift.Equatable {
        /// Specify one or more [ExtendedKeyUsage] extension values.
        public var extendedKeyUsage: [AcmClientTypes.ExtendedKeyUsageName]?
        /// Specify one or more algorithms that can be used to generate key pairs. Default filtering returns only RSA_1024 and RSA_2048 certificates that have at least one domain. To return other certificate types, provide the desired type signatures in a comma-separated list. For example, "keyTypes": ["RSA_2048","RSA_4096"] returns both RSA_2048 and RSA_4096 certificates.
        public var keyTypes: [AcmClientTypes.KeyAlgorithm]?
        /// Specify one or more [KeyUsage] extension values.
        public var keyUsage: [AcmClientTypes.KeyUsageName]?

        public init (
            extendedKeyUsage: [AcmClientTypes.ExtendedKeyUsageName]? = nil,
            keyTypes: [AcmClientTypes.KeyAlgorithm]? = nil,
            keyUsage: [AcmClientTypes.KeyUsageName]? = nil
        )
        {
            self.extendedKeyUsage = extendedKeyUsage
            self.keyTypes = keyTypes
            self.keyUsage = keyUsage
        }
    }

}
