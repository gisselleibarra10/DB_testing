// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AcmClientTypes {
    /// This structure is returned in the response object of [ListCertificates] action.
    public struct CertificateSummary: Swift.Equatable {
        /// Amazon Resource Name (ARN) of the certificate. This is of the form: arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012 For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).
        public var certificateArn: Swift.String?
        /// The time at which the certificate was requested.
        public var createdAt: ClientRuntime.Date?
        /// Fully qualified domain name (FQDN), such as www.example.com or example.com, for the certificate.
        public var domainName: Swift.String?
        /// Indicates whether the certificate has been exported. This value exists only when the certificate type is PRIVATE.
        public var exported: Swift.Bool?
        /// Contains a list of Extended Key Usage X.509 v3 extension objects. Each object specifies a purpose for which the certificate public key can be used and consists of a name and an object identifier (OID).
        public var extendedKeyUsages: [AcmClientTypes.ExtendedKeyUsageName]?
        /// When called by [ListCertificates](https://docs.aws.amazon.com/acm/latestAPIReference/API_ListCertificates.html), indicates whether the full list of subject alternative names has been included in the response. If false, the response includes all of the subject alternative names included in the certificate. If true, the response only includes the first 100 subject alternative names included in the certificate. To display the full list of subject alternative names, use [DescribeCertificate](https://docs.aws.amazon.com/acm/latestAPIReference/API_DescribeCertificate.html).
        public var hasAdditionalSubjectAlternativeNames: Swift.Bool?
        /// The date and time when the certificate was imported. This value exists only when the certificate type is IMPORTED.
        public var importedAt: ClientRuntime.Date?
        /// Indicates whether the certificate is currently in use by any Amazon Web Services resources.
        public var inUse: Swift.Bool?
        /// The time at which the certificate was issued. This value exists only when the certificate type is AMAZON_ISSUED.
        public var issuedAt: ClientRuntime.Date?
        /// The algorithm that was used to generate the public-private key pair.
        public var keyAlgorithm: AcmClientTypes.KeyAlgorithm?
        /// A list of Key Usage X.509 v3 extension objects. Each object is a string value that identifies the purpose of the public key contained in the certificate. Possible extension values include DIGITAL_SIGNATURE, KEY_ENCHIPHERMENT, NON_REPUDIATION, and more.
        public var keyUsages: [AcmClientTypes.KeyUsageName]?
        /// The time after which the certificate is not valid.
        public var notAfter: ClientRuntime.Date?
        /// The time before which the certificate is not valid.
        public var notBefore: ClientRuntime.Date?
        /// Specifies whether the certificate is eligible for renewal. At this time, only exported private certificates can be renewed with the [RenewCertificate] command.
        public var renewalEligibility: AcmClientTypes.RenewalEligibility?
        /// The time at which the certificate was revoked. This value exists only when the certificate status is REVOKED.
        public var revokedAt: ClientRuntime.Date?
        /// The status of the certificate. A certificate enters status PENDING_VALIDATION upon being requested, unless it fails for any of the reasons given in the troubleshooting topic [Certificate request fails](https://docs.aws.amazon.com/acm/latest/userguide/troubleshooting-failed.html). ACM makes repeated attempts to validate a certificate for 72 hours and then times out. If a certificate shows status FAILED or VALIDATION_TIMED_OUT, delete the request, correct the issue with [DNS validation](https://docs.aws.amazon.com/acm/latest/userguide/dns-validation.html) or [Email validation](https://docs.aws.amazon.com/acm/latest/userguide/email-validation.html), and try again. If validation succeeds, the certificate enters status ISSUED.
        public var status: AcmClientTypes.CertificateStatus?
        /// One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website. When called by [ListCertificates](https://docs.aws.amazon.com/acm/latestAPIReference/API_ListCertificates.html), this parameter will only return the first 100 subject alternative names included in the certificate. To display the full list of subject alternative names, use [DescribeCertificate](https://docs.aws.amazon.com/acm/latestAPIReference/API_DescribeCertificate.html).
        public var subjectAlternativeNameSummaries: [Swift.String]?
        /// The source of the certificate. For certificates provided by ACM, this value is AMAZON_ISSUED. For certificates that you imported with [ImportCertificate], this value is IMPORTED. ACM does not provide [managed renewal](https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html) for imported certificates. For more information about the differences between certificates that you import and those that ACM provides, see [Importing Certificates](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the Certificate Manager User Guide.
        public var type: AcmClientTypes.CertificateType?

        public init (
            certificateArn: Swift.String? = nil,
            createdAt: ClientRuntime.Date? = nil,
            domainName: Swift.String? = nil,
            exported: Swift.Bool? = nil,
            extendedKeyUsages: [AcmClientTypes.ExtendedKeyUsageName]? = nil,
            hasAdditionalSubjectAlternativeNames: Swift.Bool? = nil,
            importedAt: ClientRuntime.Date? = nil,
            inUse: Swift.Bool? = nil,
            issuedAt: ClientRuntime.Date? = nil,
            keyAlgorithm: AcmClientTypes.KeyAlgorithm? = nil,
            keyUsages: [AcmClientTypes.KeyUsageName]? = nil,
            notAfter: ClientRuntime.Date? = nil,
            notBefore: ClientRuntime.Date? = nil,
            renewalEligibility: AcmClientTypes.RenewalEligibility? = nil,
            revokedAt: ClientRuntime.Date? = nil,
            status: AcmClientTypes.CertificateStatus? = nil,
            subjectAlternativeNameSummaries: [Swift.String]? = nil,
            type: AcmClientTypes.CertificateType? = nil
        )
        {
            self.certificateArn = certificateArn
            self.createdAt = createdAt
            self.domainName = domainName
            self.exported = exported
            self.extendedKeyUsages = extendedKeyUsages
            self.hasAdditionalSubjectAlternativeNames = hasAdditionalSubjectAlternativeNames
            self.importedAt = importedAt
            self.inUse = inUse
            self.issuedAt = issuedAt
            self.keyAlgorithm = keyAlgorithm
            self.keyUsages = keyUsages
            self.notAfter = notAfter
            self.notBefore = notBefore
            self.renewalEligibility = renewalEligibility
            self.revokedAt = revokedAt
            self.status = status
            self.subjectAlternativeNameSummaries = subjectAlternativeNameSummaries
            self.type = type
        }
    }

}
