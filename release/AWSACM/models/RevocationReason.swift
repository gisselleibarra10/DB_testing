// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AcmClientTypes {
    public enum RevocationReason: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case affiliationChanged
        case aACompromise
        case caCompromise
        case certificateHold
        case cessationOfOperation
        case keyCompromise
        case privilegeWithdrawn
        case removeFromCrl
        case superceded
        case unspecified
        case sdkUnknown(Swift.String)

        public static var allCases: [RevocationReason] {
            return [
                .affiliationChanged,
                .aACompromise,
                .caCompromise,
                .certificateHold,
                .cessationOfOperation,
                .keyCompromise,
                .privilegeWithdrawn,
                .removeFromCrl,
                .superceded,
                .unspecified,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .affiliationChanged: return "AFFILIATION_CHANGED"
            case .aACompromise: return "A_A_COMPROMISE"
            case .caCompromise: return "CA_COMPROMISE"
            case .certificateHold: return "CERTIFICATE_HOLD"
            case .cessationOfOperation: return "CESSATION_OF_OPERATION"
            case .keyCompromise: return "KEY_COMPROMISE"
            case .privilegeWithdrawn: return "PRIVILEGE_WITHDRAWN"
            case .removeFromCrl: return "REMOVE_FROM_CRL"
            case .superceded: return "SUPERCEDED"
            case .unspecified: return "UNSPECIFIED"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = RevocationReason(rawValue: rawValue) ?? RevocationReason.sdkUnknown(rawValue)
        }
    }
}
