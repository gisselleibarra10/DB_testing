// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PostContentInput: ClientRuntime.HeaderProvider {
    public var headers: ClientRuntime.Headers {
        var items = ClientRuntime.Headers()
        if let accept = accept {
            items.add(Header(name: "Accept", value: Swift.String(accept)))
        }
        if let activeContexts = activeContexts {
            do {
                let base64EncodedValue = try activeContexts.base64EncodedString()
                items.add(Header(name: "x-amz-lex-active-contexts", value: Swift.String(base64EncodedValue)))
            } catch let err {
            }
        }
        if let contentType = contentType {
            items.add(Header(name: "Content-Type", value: Swift.String(contentType)))
        }
        if let requestAttributes = requestAttributes {
            do {
                let base64EncodedValue = try requestAttributes.base64EncodedString()
                items.add(Header(name: "x-amz-lex-request-attributes", value: Swift.String(base64EncodedValue)))
            } catch let err {
            }
        }
        if let sessionAttributes = sessionAttributes {
            do {
                let base64EncodedValue = try sessionAttributes.base64EncodedString()
                items.add(Header(name: "x-amz-lex-session-attributes", value: Swift.String(base64EncodedValue)))
            } catch let err {
            }
        }
        return items
    }
}
