// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PostTextInput: Swift.Equatable {
    /// A list of contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request, If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared.
    public var activeContexts: [LexRuntimeClientTypes.ActiveContext]?
    /// The alias of the Amazon Lex bot.
    /// This member is required.
    public var botAlias: Swift.String?
    /// The name of the Amazon Lex bot.
    /// This member is required.
    public var botName: Swift.String?
    /// The text that the user entered (Amazon Lex interprets this text).
    /// This member is required.
    public var inputText: Swift.String?
    /// Request-specific information passed between Amazon Lex and a client application. The namespace x-amz-lex: is reserved for special attributes. Don't create any request attributes with the prefix x-amz-lex:. For more information, see [Setting Request Attributes](https://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs).
    public var requestAttributes: [Swift.String:Swift.String]?
    /// Application-specific information passed between Amazon Lex and a client application. For more information, see [Setting Session Attributes](https://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs).
    public var sessionAttributes: [Swift.String:Swift.String]?
    /// The ID of the client application user. Amazon Lex uses this to identify a user's conversation with your bot. At runtime, each request must contain the userID field. To decide the user ID to use for your application, consider the following factors.
    ///
    /// * The userID field must not contain any personally identifiable information of the user, for example, name, personal identification numbers, or other end user personal information.
    ///
    /// * If you want a user to start a conversation on one device and continue on another device, use a user-specific identifier.
    ///
    /// * If you want the same user to be able to have two independent conversations on two different devices, choose a device-specific identifier.
    ///
    /// * A user can't have two independent conversations with two different versions of the same bot. For example, a user can't have a conversation with the PROD and BETA versions of the same bot. If you anticipate that a user will need to have conversation with two different versions, for example, while testing, include the bot alias in the user ID to separate the two conversations.
    /// This member is required.
    public var userId: Swift.String?

    public init (
        activeContexts: [LexRuntimeClientTypes.ActiveContext]? = nil,
        botAlias: Swift.String? = nil,
        botName: Swift.String? = nil,
        inputText: Swift.String? = nil,
        requestAttributes: [Swift.String:Swift.String]? = nil,
        sessionAttributes: [Swift.String:Swift.String]? = nil,
        userId: Swift.String? = nil
    )
    {
        self.activeContexts = activeContexts
        self.botAlias = botAlias
        self.botName = botName
        self.inputText = inputText
        self.requestAttributes = requestAttributes
        self.sessionAttributes = sessionAttributes
        self.userId = userId
    }
}
