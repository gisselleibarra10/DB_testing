// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResolverConfigsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let resolverConfigs: [Route53ResolverClientTypes.ResolverConfig]?
}

extension ListResolverConfigsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case resolverConfigs = "ResolverConfigs"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let resolverConfigsContainer = try containerValues.decodeIfPresent([Route53ResolverClientTypes.ResolverConfig?].self, forKey: .resolverConfigs)
        var resolverConfigsDecoded0:[Route53ResolverClientTypes.ResolverConfig]? = nil
        if let resolverConfigsContainer = resolverConfigsContainer {
            resolverConfigsDecoded0 = [Route53ResolverClientTypes.ResolverConfig]()
            for structure0 in resolverConfigsContainer {
                if let structure0 = structure0 {
                    resolverConfigsDecoded0?.append(structure0)
                }
            }
        }
        resolverConfigs = resolverConfigsDecoded0
    }
}
