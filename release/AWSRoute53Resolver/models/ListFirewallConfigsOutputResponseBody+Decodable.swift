// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFirewallConfigsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let firewallConfigs: [Route53ResolverClientTypes.FirewallConfig]?
}

extension ListFirewallConfigsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case firewallConfigs = "FirewallConfigs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let firewallConfigsContainer = try containerValues.decodeIfPresent([Route53ResolverClientTypes.FirewallConfig?].self, forKey: .firewallConfigs)
        var firewallConfigsDecoded0:[Route53ResolverClientTypes.FirewallConfig]? = nil
        if let firewallConfigsContainer = firewallConfigsContainer {
            firewallConfigsDecoded0 = [Route53ResolverClientTypes.FirewallConfig]()
            for structure0 in firewallConfigsContainer {
                if let structure0 = structure0 {
                    firewallConfigsDecoded0?.append(structure0)
                }
            }
        }
        firewallConfigs = firewallConfigsDecoded0
    }
}
