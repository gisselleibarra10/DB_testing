// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResolverEndpointsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let resolverEndpoints: [Route53ResolverClientTypes.ResolverEndpoint]?
}

extension ListResolverEndpointsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case resolverEndpoints = "ResolverEndpoints"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let resolverEndpointsContainer = try containerValues.decodeIfPresent([Route53ResolverClientTypes.ResolverEndpoint?].self, forKey: .resolverEndpoints)
        var resolverEndpointsDecoded0:[Route53ResolverClientTypes.ResolverEndpoint]? = nil
        if let resolverEndpointsContainer = resolverEndpointsContainer {
            resolverEndpointsDecoded0 = [Route53ResolverClientTypes.ResolverEndpoint]()
            for structure0 in resolverEndpointsContainer {
                if let structure0 = structure0 {
                    resolverEndpointsDecoded0?.append(structure0)
                }
            }
        }
        resolverEndpoints = resolverEndpointsDecoded0
    }
}
