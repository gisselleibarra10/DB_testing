// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFirewallRuleGroupAssociationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let firewallRuleGroupAssociations: [Route53ResolverClientTypes.FirewallRuleGroupAssociation]?
}

extension ListFirewallRuleGroupAssociationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case firewallRuleGroupAssociations = "FirewallRuleGroupAssociations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let firewallRuleGroupAssociationsContainer = try containerValues.decodeIfPresent([Route53ResolverClientTypes.FirewallRuleGroupAssociation?].self, forKey: .firewallRuleGroupAssociations)
        var firewallRuleGroupAssociationsDecoded0:[Route53ResolverClientTypes.FirewallRuleGroupAssociation]? = nil
        if let firewallRuleGroupAssociationsContainer = firewallRuleGroupAssociationsContainer {
            firewallRuleGroupAssociationsDecoded0 = [Route53ResolverClientTypes.FirewallRuleGroupAssociation]()
            for structure0 in firewallRuleGroupAssociationsContainer {
                if let structure0 = structure0 {
                    firewallRuleGroupAssociationsDecoded0?.append(structure0)
                }
            }
        }
        firewallRuleGroupAssociations = firewallRuleGroupAssociationsDecoded0
    }
}
