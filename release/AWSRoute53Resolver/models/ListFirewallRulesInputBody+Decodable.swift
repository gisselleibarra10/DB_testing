// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFirewallRulesInputBody: Swift.Equatable {
    let firewallRuleGroupId: Swift.String?
    let priority: Swift.Int?
    let action: Route53ResolverClientTypes.Action?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension ListFirewallRulesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case action = "Action"
        case firewallRuleGroupId = "FirewallRuleGroupId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case priority = "Priority"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let firewallRuleGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .firewallRuleGroupId)
        firewallRuleGroupId = firewallRuleGroupIdDecoded
        let priorityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .priority)
        priority = priorityDecoded
        let actionDecoded = try containerValues.decodeIfPresent(Route53ResolverClientTypes.Action.self, forKey: .action)
        action = actionDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
