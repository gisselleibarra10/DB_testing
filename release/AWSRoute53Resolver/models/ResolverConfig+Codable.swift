// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53ResolverClientTypes.ResolverConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case autodefinedReverse = "AutodefinedReverse"
        case id = "Id"
        case ownerId = "OwnerId"
        case resourceId = "ResourceId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let autodefinedReverse = self.autodefinedReverse {
            try encodeContainer.encode(autodefinedReverse.rawValue, forKey: .autodefinedReverse)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let ownerId = self.ownerId {
            try encodeContainer.encode(ownerId, forKey: .ownerId)
        }
        if let resourceId = self.resourceId {
            try encodeContainer.encode(resourceId, forKey: .resourceId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let resourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let ownerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ownerId)
        ownerId = ownerIdDecoded
        let autodefinedReverseDecoded = try containerValues.decodeIfPresent(Route53ResolverClientTypes.ResolverAutodefinedReverseStatus.self, forKey: .autodefinedReverse)
        autodefinedReverse = autodefinedReverseDecoded
    }
}
