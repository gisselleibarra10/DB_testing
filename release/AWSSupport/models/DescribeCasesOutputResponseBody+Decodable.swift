// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCasesOutputResponseBody: Swift.Equatable {
    let cases: [SupportClientTypes.CaseDetails]?
    let nextToken: Swift.String?
}

extension DescribeCasesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cases
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let casesContainer = try containerValues.decodeIfPresent([SupportClientTypes.CaseDetails?].self, forKey: .cases)
        var casesDecoded0:[SupportClientTypes.CaseDetails]? = nil
        if let casesContainer = casesContainer {
            casesDecoded0 = [SupportClientTypes.CaseDetails]()
            for structure0 in casesContainer {
                if let structure0 = structure0 {
                    casesDecoded0?.append(structure0)
                }
            }
        }
        cases = casesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
