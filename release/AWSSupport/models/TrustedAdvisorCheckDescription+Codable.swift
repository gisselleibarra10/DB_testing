// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SupportClientTypes.TrustedAdvisorCheckDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case category
        case description
        case id
        case metadata
        case name
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let category = self.category {
            try encodeContainer.encode(category, forKey: .category)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let metadata = metadata {
            var metadataContainer = encodeContainer.nestedUnkeyedContainer(forKey: .metadata)
            for stringlist0 in metadata {
                try metadataContainer.encode(stringlist0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let categoryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .category)
        category = categoryDecoded
        let metadataContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .metadata)
        var metadataDecoded0:[Swift.String]? = nil
        if let metadataContainer = metadataContainer {
            metadataDecoded0 = [Swift.String]()
            for string0 in metadataContainer {
                if let string0 = string0 {
                    metadataDecoded0?.append(string0)
                }
            }
        }
        metadata = metadataDecoded0
    }
}
