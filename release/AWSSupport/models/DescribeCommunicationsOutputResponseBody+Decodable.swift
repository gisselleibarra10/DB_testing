// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCommunicationsOutputResponseBody: Swift.Equatable {
    let communications: [SupportClientTypes.Communication]?
    let nextToken: Swift.String?
}

extension DescribeCommunicationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case communications
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let communicationsContainer = try containerValues.decodeIfPresent([SupportClientTypes.Communication?].self, forKey: .communications)
        var communicationsDecoded0:[SupportClientTypes.Communication]? = nil
        if let communicationsContainer = communicationsContainer {
            communicationsDecoded0 = [SupportClientTypes.Communication]()
            for structure0 in communicationsContainer {
                if let structure0 = structure0 {
                    communicationsDecoded0?.append(structure0)
                }
            }
        }
        communications = communicationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
