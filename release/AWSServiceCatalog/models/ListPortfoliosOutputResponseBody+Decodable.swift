// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPortfoliosOutputResponseBody: Swift.Equatable {
    let portfolioDetails: [ServiceCatalogClientTypes.PortfolioDetail]?
    let nextPageToken: Swift.String?
}

extension ListPortfoliosOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextPageToken = "NextPageToken"
        case portfolioDetails = "PortfolioDetails"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let portfolioDetailsContainer = try containerValues.decodeIfPresent([ServiceCatalogClientTypes.PortfolioDetail?].self, forKey: .portfolioDetails)
        var portfolioDetailsDecoded0:[ServiceCatalogClientTypes.PortfolioDetail]? = nil
        if let portfolioDetailsContainer = portfolioDetailsContainer {
            portfolioDetailsDecoded0 = [ServiceCatalogClientTypes.PortfolioDetail]()
            for structure0 in portfolioDetailsContainer {
                if let structure0 = structure0 {
                    portfolioDetailsDecoded0?.append(structure0)
                }
            }
        }
        portfolioDetails = portfolioDetailsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
