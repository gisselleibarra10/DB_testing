// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ServiceCatalogClientTypes.ProvisioningArtifactProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case disableTemplateValidation = "DisableTemplateValidation"
        case info = "Info"
        case name = "Name"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if disableTemplateValidation != false {
            try encodeContainer.encode(disableTemplateValidation, forKey: .disableTemplateValidation)
        }
        if let info = info {
            var infoContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .info)
            for (dictKey0, provisioningartifactinfo0) in info {
                try infoContainer.encode(provisioningartifactinfo0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let infoContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .info)
        var infoDecoded0: [Swift.String:Swift.String]? = nil
        if let infoContainer = infoContainer {
            infoDecoded0 = [Swift.String:Swift.String]()
            for (key0, provisioningartifactinfovalue0) in infoContainer {
                if let provisioningartifactinfovalue0 = provisioningartifactinfovalue0 {
                    infoDecoded0?[key0] = provisioningartifactinfovalue0
                }
            }
        }
        info = infoDecoded0
        let typeDecoded = try containerValues.decodeIfPresent(ServiceCatalogClientTypes.ProvisioningArtifactType.self, forKey: .type)
        type = typeDecoded
        let disableTemplateValidationDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .disableTemplateValidation) ?? false
        disableTemplateValidation = disableTemplateValidationDecoded
    }
}
