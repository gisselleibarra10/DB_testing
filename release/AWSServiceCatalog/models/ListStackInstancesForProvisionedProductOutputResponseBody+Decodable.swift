// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStackInstancesForProvisionedProductOutputResponseBody: Swift.Equatable {
    let stackInstances: [ServiceCatalogClientTypes.StackInstance]?
    let nextPageToken: Swift.String?
}

extension ListStackInstancesForProvisionedProductOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextPageToken = "NextPageToken"
        case stackInstances = "StackInstances"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackInstancesContainer = try containerValues.decodeIfPresent([ServiceCatalogClientTypes.StackInstance?].self, forKey: .stackInstances)
        var stackInstancesDecoded0:[ServiceCatalogClientTypes.StackInstance]? = nil
        if let stackInstancesContainer = stackInstancesContainer {
            stackInstancesDecoded0 = [ServiceCatalogClientTypes.StackInstance]()
            for structure0 in stackInstancesContainer {
                if let structure0 = structure0 {
                    stackInstancesDecoded0?.append(structure0)
                }
            }
        }
        stackInstances = stackInstancesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
