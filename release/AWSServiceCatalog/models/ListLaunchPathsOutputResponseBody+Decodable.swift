// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLaunchPathsOutputResponseBody: Swift.Equatable {
    let launchPathSummaries: [ServiceCatalogClientTypes.LaunchPathSummary]?
    let nextPageToken: Swift.String?
}

extension ListLaunchPathsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case launchPathSummaries = "LaunchPathSummaries"
        case nextPageToken = "NextPageToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let launchPathSummariesContainer = try containerValues.decodeIfPresent([ServiceCatalogClientTypes.LaunchPathSummary?].self, forKey: .launchPathSummaries)
        var launchPathSummariesDecoded0:[ServiceCatalogClientTypes.LaunchPathSummary]? = nil
        if let launchPathSummariesContainer = launchPathSummariesContainer {
            launchPathSummariesDecoded0 = [ServiceCatalogClientTypes.LaunchPathSummary]()
            for structure0 in launchPathSummariesContainer {
                if let structure0 = structure0 {
                    launchPathSummariesDecoded0?.append(structure0)
                }
            }
        }
        launchPathSummaries = launchPathSummariesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
