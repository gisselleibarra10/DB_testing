// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProvisioningArtifactsOutputResponseBody: Swift.Equatable {
    let provisioningArtifactDetails: [ServiceCatalogClientTypes.ProvisioningArtifactDetail]?
    let nextPageToken: Swift.String?
}

extension ListProvisioningArtifactsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextPageToken = "NextPageToken"
        case provisioningArtifactDetails = "ProvisioningArtifactDetails"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let provisioningArtifactDetailsContainer = try containerValues.decodeIfPresent([ServiceCatalogClientTypes.ProvisioningArtifactDetail?].self, forKey: .provisioningArtifactDetails)
        var provisioningArtifactDetailsDecoded0:[ServiceCatalogClientTypes.ProvisioningArtifactDetail]? = nil
        if let provisioningArtifactDetailsContainer = provisioningArtifactDetailsContainer {
            provisioningArtifactDetailsDecoded0 = [ServiceCatalogClientTypes.ProvisioningArtifactDetail]()
            for structure0 in provisioningArtifactDetailsContainer {
                if let structure0 = structure0 {
                    provisioningArtifactDetailsDecoded0?.append(structure0)
                }
            }
        }
        provisioningArtifactDetails = provisioningArtifactDetailsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
