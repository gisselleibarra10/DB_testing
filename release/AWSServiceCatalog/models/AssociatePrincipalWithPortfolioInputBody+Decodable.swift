// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociatePrincipalWithPortfolioInputBody: Swift.Equatable {
    let acceptLanguage: Swift.String?
    let portfolioId: Swift.String?
    let principalARN: Swift.String?
    let principalType: ServiceCatalogClientTypes.PrincipalType?
}

extension AssociatePrincipalWithPortfolioInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceptLanguage = "AcceptLanguage"
        case portfolioId = "PortfolioId"
        case principalARN = "PrincipalARN"
        case principalType = "PrincipalType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceptLanguageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .acceptLanguage)
        acceptLanguage = acceptLanguageDecoded
        let portfolioIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .portfolioId)
        portfolioId = portfolioIdDecoded
        let principalARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .principalARN)
        principalARN = principalARNDecoded
        let principalTypeDecoded = try containerValues.decodeIfPresent(ServiceCatalogClientTypes.PrincipalType.self, forKey: .principalType)
        principalType = principalTypeDecoded
    }
}
