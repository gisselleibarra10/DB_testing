// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProvisionedProductOutputResponseBody: Swift.Equatable {
    let provisionedProductDetail: ServiceCatalogClientTypes.ProvisionedProductDetail?
    let cloudWatchDashboards: [ServiceCatalogClientTypes.CloudWatchDashboard]?
}

extension DescribeProvisionedProductOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cloudWatchDashboards = "CloudWatchDashboards"
        case provisionedProductDetail = "ProvisionedProductDetail"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let provisionedProductDetailDecoded = try containerValues.decodeIfPresent(ServiceCatalogClientTypes.ProvisionedProductDetail.self, forKey: .provisionedProductDetail)
        provisionedProductDetail = provisionedProductDetailDecoded
        let cloudWatchDashboardsContainer = try containerValues.decodeIfPresent([ServiceCatalogClientTypes.CloudWatchDashboard?].self, forKey: .cloudWatchDashboards)
        var cloudWatchDashboardsDecoded0:[ServiceCatalogClientTypes.CloudWatchDashboard]? = nil
        if let cloudWatchDashboardsContainer = cloudWatchDashboardsContainer {
            cloudWatchDashboardsDecoded0 = [ServiceCatalogClientTypes.CloudWatchDashboard]()
            for structure0 in cloudWatchDashboardsContainer {
                if let structure0 = structure0 {
                    cloudWatchDashboardsDecoded0?.append(structure0)
                }
            }
        }
        cloudWatchDashboards = cloudWatchDashboardsDecoded0
    }
}
