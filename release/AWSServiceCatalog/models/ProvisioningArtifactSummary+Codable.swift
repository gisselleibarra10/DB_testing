// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ServiceCatalogClientTypes.ProvisioningArtifactSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdTime = "CreatedTime"
        case description = "Description"
        case id = "Id"
        case name = "Name"
        case provisioningArtifactMetadata = "ProvisioningArtifactMetadata"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdTime = self.createdTime {
            try encodeContainer.encode(createdTime.timeIntervalSince1970, forKey: .createdTime)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let provisioningArtifactMetadata = provisioningArtifactMetadata {
            var provisioningArtifactMetadataContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .provisioningArtifactMetadata)
            for (dictKey0, provisioningartifactinfo0) in provisioningArtifactMetadata {
                try provisioningArtifactMetadataContainer.encode(provisioningartifactinfo0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let createdTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdTime)
        createdTime = createdTimeDecoded
        let provisioningArtifactMetadataContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .provisioningArtifactMetadata)
        var provisioningArtifactMetadataDecoded0: [Swift.String:Swift.String]? = nil
        if let provisioningArtifactMetadataContainer = provisioningArtifactMetadataContainer {
            provisioningArtifactMetadataDecoded0 = [Swift.String:Swift.String]()
            for (key0, provisioningartifactinfovalue0) in provisioningArtifactMetadataContainer {
                if let provisioningartifactinfovalue0 = provisioningartifactinfovalue0 {
                    provisioningArtifactMetadataDecoded0?[key0] = provisioningartifactinfovalue0
                }
            }
        }
        provisioningArtifactMetadata = provisioningArtifactMetadataDecoded0
    }
}
