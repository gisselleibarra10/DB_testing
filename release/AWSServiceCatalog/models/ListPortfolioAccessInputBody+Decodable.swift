// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPortfolioAccessInputBody: Swift.Equatable {
    let acceptLanguage: Swift.String?
    let portfolioId: Swift.String?
    let organizationParentId: Swift.String?
    let pageToken: Swift.String?
    let pageSize: Swift.Int
}

extension ListPortfolioAccessInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceptLanguage = "AcceptLanguage"
        case organizationParentId = "OrganizationParentId"
        case pageSize = "PageSize"
        case pageToken = "PageToken"
        case portfolioId = "PortfolioId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceptLanguageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .acceptLanguage)
        acceptLanguage = acceptLanguageDecoded
        let portfolioIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .portfolioId)
        portfolioId = portfolioIdDecoded
        let organizationParentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .organizationParentId)
        organizationParentId = organizationParentIdDecoded
        let pageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pageToken)
        pageToken = pageTokenDecoded
        let pageSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .pageSize) ?? 0
        pageSize = pageSizeDecoded
    }
}
