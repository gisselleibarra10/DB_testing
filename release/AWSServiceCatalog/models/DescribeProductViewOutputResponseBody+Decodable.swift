// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProductViewOutputResponseBody: Swift.Equatable {
    let productViewSummary: ServiceCatalogClientTypes.ProductViewSummary?
    let provisioningArtifacts: [ServiceCatalogClientTypes.ProvisioningArtifact]?
}

extension DescribeProductViewOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case productViewSummary = "ProductViewSummary"
        case provisioningArtifacts = "ProvisioningArtifacts"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let productViewSummaryDecoded = try containerValues.decodeIfPresent(ServiceCatalogClientTypes.ProductViewSummary.self, forKey: .productViewSummary)
        productViewSummary = productViewSummaryDecoded
        let provisioningArtifactsContainer = try containerValues.decodeIfPresent([ServiceCatalogClientTypes.ProvisioningArtifact?].self, forKey: .provisioningArtifacts)
        var provisioningArtifactsDecoded0:[ServiceCatalogClientTypes.ProvisioningArtifact]? = nil
        if let provisioningArtifactsContainer = provisioningArtifactsContainer {
            provisioningArtifactsDecoded0 = [ServiceCatalogClientTypes.ProvisioningArtifact]()
            for structure0 in provisioningArtifactsContainer {
                if let structure0 = structure0 {
                    provisioningArtifactsDecoded0?.append(structure0)
                }
            }
        }
        provisioningArtifacts = provisioningArtifactsDecoded0
    }
}
