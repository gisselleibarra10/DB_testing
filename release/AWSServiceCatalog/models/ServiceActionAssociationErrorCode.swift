// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ServiceCatalogClientTypes {
    public enum ServiceActionAssociationErrorCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case duplicateresourceexception
        case internalfailure
        case limitexceededexception
        case resourcenotfoundexception
        case throttlingexception
        case sdkUnknown(Swift.String)

        public static var allCases: [ServiceActionAssociationErrorCode] {
            return [
                .duplicateresourceexception,
                .internalfailure,
                .limitexceededexception,
                .resourcenotfoundexception,
                .throttlingexception,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .duplicateresourceexception: return "DUPLICATE_RESOURCE"
            case .internalfailure: return "INTERNAL_FAILURE"
            case .limitexceededexception: return "LIMIT_EXCEEDED"
            case .resourcenotfoundexception: return "RESOURCE_NOT_FOUND"
            case .throttlingexception: return "THROTTLING"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ServiceActionAssociationErrorCode(rawValue: rawValue) ?? ServiceActionAssociationErrorCode.sdkUnknown(rawValue)
        }
    }
}
