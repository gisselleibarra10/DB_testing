// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDisassociateServiceActionFromProvisioningArtifactInputBody: Swift.Equatable {
    let serviceActionAssociations: [ServiceCatalogClientTypes.ServiceActionAssociation]?
    let acceptLanguage: Swift.String?
}

extension BatchDisassociateServiceActionFromProvisioningArtifactInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceptLanguage = "AcceptLanguage"
        case serviceActionAssociations = "ServiceActionAssociations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serviceActionAssociationsContainer = try containerValues.decodeIfPresent([ServiceCatalogClientTypes.ServiceActionAssociation?].self, forKey: .serviceActionAssociations)
        var serviceActionAssociationsDecoded0:[ServiceCatalogClientTypes.ServiceActionAssociation]? = nil
        if let serviceActionAssociationsContainer = serviceActionAssociationsContainer {
            serviceActionAssociationsDecoded0 = [ServiceCatalogClientTypes.ServiceActionAssociation]()
            for structure0 in serviceActionAssociationsContainer {
                if let structure0 = structure0 {
                    serviceActionAssociationsDecoded0?.append(structure0)
                }
            }
        }
        serviceActionAssociations = serviceActionAssociationsDecoded0
        let acceptLanguageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .acceptLanguage)
        acceptLanguage = acceptLanguageDecoded
    }
}
