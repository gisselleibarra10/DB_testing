// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ServiceCatalogClientTypes.PortfolioShareDetail: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accepted = "Accepted"
        case principalId = "PrincipalId"
        case shareTagOptions = "ShareTagOptions"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if accepted != false {
            try encodeContainer.encode(accepted, forKey: .accepted)
        }
        if let principalId = self.principalId {
            try encodeContainer.encode(principalId, forKey: .principalId)
        }
        if shareTagOptions != false {
            try encodeContainer.encode(shareTagOptions, forKey: .shareTagOptions)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let principalIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .principalId)
        principalId = principalIdDecoded
        let typeDecoded = try containerValues.decodeIfPresent(ServiceCatalogClientTypes.DescribePortfolioShareType.self, forKey: .type)
        type = typeDecoded
        let acceptedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .accepted) ?? false
        accepted = acceptedDecoded
        let shareTagOptionsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .shareTagOptions) ?? false
        shareTagOptions = shareTagOptionsDecoded
    }
}
