// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRecordOutputResponseBody: Swift.Equatable {
    let recordDetail: ServiceCatalogClientTypes.RecordDetail?
    let recordOutputs: [ServiceCatalogClientTypes.RecordOutput]?
    let nextPageToken: Swift.String?
}

extension DescribeRecordOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextPageToken = "NextPageToken"
        case recordDetail = "RecordDetail"
        case recordOutputs = "RecordOutputs"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recordDetailDecoded = try containerValues.decodeIfPresent(ServiceCatalogClientTypes.RecordDetail.self, forKey: .recordDetail)
        recordDetail = recordDetailDecoded
        let recordOutputsContainer = try containerValues.decodeIfPresent([ServiceCatalogClientTypes.RecordOutput?].self, forKey: .recordOutputs)
        var recordOutputsDecoded0:[ServiceCatalogClientTypes.RecordOutput]? = nil
        if let recordOutputsContainer = recordOutputsContainer {
            recordOutputsDecoded0 = [ServiceCatalogClientTypes.RecordOutput]()
            for structure0 in recordOutputsContainer {
                if let structure0 = structure0 {
                    recordOutputsDecoded0?.append(structure0)
                }
            }
        }
        recordOutputs = recordOutputsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
