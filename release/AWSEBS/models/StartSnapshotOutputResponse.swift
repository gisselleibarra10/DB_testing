// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct StartSnapshotOutputResponse: Swift.Equatable {
    /// The size of the blocks in the snapshot, in bytes.
    public var blockSize: Swift.Int?
    /// The description of the snapshot.
    public var description: Swift.String?
    /// The Amazon Resource Name (ARN) of the Key Management Service (KMS) key used to encrypt the snapshot.
    public var kmsKeyArn: Swift.String?
    /// The Amazon Web Services account ID of the snapshot owner.
    public var ownerId: Swift.String?
    /// The ID of the parent snapshot.
    public var parentSnapshotId: Swift.String?
    /// The ID of the snapshot.
    public var snapshotId: Swift.String?
    /// The timestamp when the snapshot was created.
    public var startTime: ClientRuntime.Date?
    /// The status of the snapshot.
    public var status: EbsClientTypes.Status?
    /// The tags applied to the snapshot. You can specify up to 50 tags per snapshot. For more information, see [ Tagging your Amazon EC2 resources](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html) in the Amazon Elastic Compute Cloud User Guide.
    public var tags: [EbsClientTypes.Tag]?
    /// The size of the volume, in GiB.
    public var volumeSize: Swift.Int?

    public init (
        blockSize: Swift.Int? = nil,
        description: Swift.String? = nil,
        kmsKeyArn: Swift.String? = nil,
        ownerId: Swift.String? = nil,
        parentSnapshotId: Swift.String? = nil,
        snapshotId: Swift.String? = nil,
        startTime: ClientRuntime.Date? = nil,
        status: EbsClientTypes.Status? = nil,
        tags: [EbsClientTypes.Tag]? = nil,
        volumeSize: Swift.Int? = nil
    )
    {
        self.blockSize = blockSize
        self.description = description
        self.kmsKeyArn = kmsKeyArn
        self.ownerId = ownerId
        self.parentSnapshotId = parentSnapshotId
        self.snapshotId = snapshotId
        self.startTime = startTime
        self.status = status
        self.tags = tags
        self.volumeSize = volumeSize
    }
}
