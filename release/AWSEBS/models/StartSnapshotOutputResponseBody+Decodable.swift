// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartSnapshotOutputResponseBody: Swift.Equatable {
    let description: Swift.String?
    let snapshotId: Swift.String?
    let ownerId: Swift.String?
    let status: EbsClientTypes.Status?
    let startTime: ClientRuntime.Date?
    let volumeSize: Swift.Int?
    let blockSize: Swift.Int?
    let tags: [EbsClientTypes.Tag]?
    let parentSnapshotId: Swift.String?
    let kmsKeyArn: Swift.String?
}

extension StartSnapshotOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blockSize = "BlockSize"
        case description = "Description"
        case kmsKeyArn = "KmsKeyArn"
        case ownerId = "OwnerId"
        case parentSnapshotId = "ParentSnapshotId"
        case snapshotId = "SnapshotId"
        case startTime = "StartTime"
        case status = "Status"
        case tags = "Tags"
        case volumeSize = "VolumeSize"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let snapshotIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snapshotId)
        snapshotId = snapshotIdDecoded
        let ownerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ownerId)
        ownerId = ownerIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(EbsClientTypes.Status.self, forKey: .status)
        status = statusDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let volumeSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .volumeSize)
        volumeSize = volumeSizeDecoded
        let blockSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .blockSize)
        blockSize = blockSizeDecoded
        let tagsContainer = try containerValues.decodeIfPresent([EbsClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[EbsClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [EbsClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
        let parentSnapshotIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parentSnapshotId)
        parentSnapshotId = parentSnapshotIdDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
    }
}
