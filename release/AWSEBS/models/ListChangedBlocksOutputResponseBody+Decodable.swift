// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListChangedBlocksOutputResponseBody: Swift.Equatable {
    let changedBlocks: [EbsClientTypes.ChangedBlock]?
    let expiryTime: ClientRuntime.Date?
    let volumeSize: Swift.Int?
    let blockSize: Swift.Int?
    let nextToken: Swift.String?
}

extension ListChangedBlocksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blockSize = "BlockSize"
        case changedBlocks = "ChangedBlocks"
        case expiryTime = "ExpiryTime"
        case nextToken = "NextToken"
        case volumeSize = "VolumeSize"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let changedBlocksContainer = try containerValues.decodeIfPresent([EbsClientTypes.ChangedBlock?].self, forKey: .changedBlocks)
        var changedBlocksDecoded0:[EbsClientTypes.ChangedBlock]? = nil
        if let changedBlocksContainer = changedBlocksContainer {
            changedBlocksDecoded0 = [EbsClientTypes.ChangedBlock]()
            for structure0 in changedBlocksContainer {
                if let structure0 = structure0 {
                    changedBlocksDecoded0?.append(structure0)
                }
            }
        }
        changedBlocks = changedBlocksDecoded0
        let expiryTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .expiryTime)
        expiryTime = expiryTimeDecoded
        let volumeSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .volumeSize)
        volumeSize = volumeSizeDecoded
        let blockSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .blockSize)
        blockSize = blockSizeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
