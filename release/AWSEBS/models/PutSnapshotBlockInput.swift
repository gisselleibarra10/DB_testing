// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct PutSnapshotBlockInput: Swift.Equatable {
    /// The data to write to the block. The block data is not signed as part of the Signature Version 4 signing process. As a result, you must generate and provide a Base64-encoded SHA256 checksum for the block data using the x-amz-Checksum header. Also, you must specify the checksum algorithm using the x-amz-Checksum-Algorithm header. The checksum that you provide is part of the Signature Version 4 signing process. It is validated against a checksum generated by Amazon EBS to ensure the validity and authenticity of the data. If the checksums do not correspond, the request fails. For more information, see [ Using checksums with the EBS direct APIs](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-accessing-snapshot.html#ebsapis-using-checksums) in the Amazon Elastic Compute Cloud User Guide.
    /// This member is required.
    public var blockData: ClientRuntime.ByteStream?
    /// The block index of the block in which to write the data. A block index is a logical index in units of 512 KiB blocks. To identify the block index, divide the logical offset of the data in the logical volume by the block size (logical offset of data/524288). The logical offset of the data must be 512 KiB aligned.
    /// This member is required.
    public var blockIndex: Swift.Int?
    /// A Base64-encoded SHA256 checksum of the data. Only SHA256 checksums are supported.
    /// This member is required.
    public var checksum: Swift.String?
    /// The algorithm used to generate the checksum. Currently, the only supported algorithm is SHA256.
    /// This member is required.
    public var checksumAlgorithm: EbsClientTypes.ChecksumAlgorithm?
    /// The size of the data to write to the block, in bytes. Currently, the only supported size is 524288 bytes. Valid values: 524288
    /// This member is required.
    public var dataLength: Swift.Int?
    /// The progress of the write process, as a percentage.
    public var progress: Swift.Int?
    /// The ID of the snapshot. If the specified snapshot is encrypted, you must have permission to use the KMS key that was used to encrypt the snapshot. For more information, see [ Using encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapis-using-encryption.html) in the Amazon Elastic Compute Cloud User Guide..
    /// This member is required.
    public var snapshotId: Swift.String?

    public init (
        blockData: ClientRuntime.ByteStream? = nil,
        blockIndex: Swift.Int? = nil,
        checksum: Swift.String? = nil,
        checksumAlgorithm: EbsClientTypes.ChecksumAlgorithm? = nil,
        dataLength: Swift.Int? = nil,
        progress: Swift.Int? = nil,
        snapshotId: Swift.String? = nil
    )
    {
        self.blockData = blockData
        self.blockIndex = blockIndex
        self.checksum = checksum
        self.checksumAlgorithm = checksumAlgorithm
        self.dataLength = dataLength
        self.progress = progress
        self.snapshotId = snapshotId
    }
}
