// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EbsClientTypes.Block: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blockIndex = "BlockIndex"
        case blockToken = "BlockToken"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let blockIndex = self.blockIndex {
            try encodeContainer.encode(blockIndex, forKey: .blockIndex)
        }
        if let blockToken = self.blockToken {
            try encodeContainer.encode(blockToken, forKey: .blockToken)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blockIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .blockIndex)
        blockIndex = blockIndexDecoded
        let blockTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .blockToken)
        blockToken = blockTokenDecoded
    }
}
