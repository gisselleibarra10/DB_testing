// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectCampaignsClientTypes.Campaign: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case connectInstanceId
        case dialerConfig
        case id
        case name
        case outboundCallConfig
        case tags
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let connectInstanceId = self.connectInstanceId {
            try encodeContainer.encode(connectInstanceId, forKey: .connectInstanceId)
        }
        if let dialerConfig = self.dialerConfig {
            try encodeContainer.encode(dialerConfig, forKey: .dialerConfig)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let outboundCallConfig = self.outboundCallConfig {
            try encodeContainer.encode(outboundCallConfig, forKey: .outboundCallConfig)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, tagmap0) in tags {
                try tagsContainer.encode(tagmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let connectInstanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectInstanceId)
        connectInstanceId = connectInstanceIdDecoded
        let dialerConfigDecoded = try containerValues.decodeIfPresent(ConnectCampaignsClientTypes.DialerConfig.self, forKey: .dialerConfig)
        dialerConfig = dialerConfigDecoded
        let outboundCallConfigDecoded = try containerValues.decodeIfPresent(ConnectCampaignsClientTypes.OutboundCallConfig.self, forKey: .outboundCallConfig)
        outboundCallConfig = outboundCallConfigDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
