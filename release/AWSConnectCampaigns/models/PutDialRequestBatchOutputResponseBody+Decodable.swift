// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutDialRequestBatchOutputResponseBody: Swift.Equatable {
    let successfulRequests: [ConnectCampaignsClientTypes.SuccessfulRequest]?
    let failedRequests: [ConnectCampaignsClientTypes.FailedRequest]?
}

extension PutDialRequestBatchOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failedRequests
        case successfulRequests
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successfulRequestsContainer = try containerValues.decodeIfPresent([ConnectCampaignsClientTypes.SuccessfulRequest?].self, forKey: .successfulRequests)
        var successfulRequestsDecoded0:[ConnectCampaignsClientTypes.SuccessfulRequest]? = nil
        if let successfulRequestsContainer = successfulRequestsContainer {
            successfulRequestsDecoded0 = [ConnectCampaignsClientTypes.SuccessfulRequest]()
            for structure0 in successfulRequestsContainer {
                if let structure0 = structure0 {
                    successfulRequestsDecoded0?.append(structure0)
                }
            }
        }
        successfulRequests = successfulRequestsDecoded0
        let failedRequestsContainer = try containerValues.decodeIfPresent([ConnectCampaignsClientTypes.FailedRequest?].self, forKey: .failedRequests)
        var failedRequestsDecoded0:[ConnectCampaignsClientTypes.FailedRequest]? = nil
        if let failedRequestsContainer = failedRequestsContainer {
            failedRequestsDecoded0 = [ConnectCampaignsClientTypes.FailedRequest]()
            for structure0 in failedRequestsContainer {
                if let structure0 = structure0 {
                    failedRequestsDecoded0?.append(structure0)
                }
            }
        }
        failedRequests = failedRequestsDecoded0
    }
}
