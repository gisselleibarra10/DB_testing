// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AutoScalingClientTypes {
    /// When you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values. Represents requirements for the types of instances that can be launched. You must specify VCpuCount and MemoryMiB, but all other parameters are optional. For more information, see [Creating an Auto Scaling group using attribute-based instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html) in the Amazon EC2 Auto Scaling User Guide.
    public struct InstanceRequirements: Swift.Equatable {
        /// The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) for an instance type. To exclude accelerator-enabled instance types, set Max to 0. Default: No minimum or maximum
        public var acceleratorCount: AutoScalingClientTypes.AcceleratorCountRequest?
        /// Indicates whether instance types must have accelerators by specific manufacturers.
        ///
        /// * For instance types with NVIDIA devices, specify nvidia.
        ///
        /// * For instance types with AMD devices, specify amd.
        ///
        /// * For instance types with Amazon Web Services devices, specify amazon-web-services.
        ///
        /// * For instance types with Xilinx devices, specify xilinx.
        ///
        ///
        /// Default: Any manufacturer
        public var acceleratorManufacturers: [AutoScalingClientTypes.AcceleratorManufacturer]?
        /// Lists the accelerators that must be on an instance type.
        ///
        /// * For instance types with NVIDIA A100 GPUs, specify a100.
        ///
        /// * For instance types with NVIDIA V100 GPUs, specify v100.
        ///
        /// * For instance types with NVIDIA K80 GPUs, specify k80.
        ///
        /// * For instance types with NVIDIA T4 GPUs, specify t4.
        ///
        /// * For instance types with NVIDIA M60 GPUs, specify m60.
        ///
        /// * For instance types with AMD Radeon Pro V520 GPUs, specify radeon-pro-v520.
        ///
        /// * For instance types with Xilinx VU9P FPGAs, specify vu9p.
        ///
        ///
        /// Default: Any accelerator
        public var acceleratorNames: [AutoScalingClientTypes.AcceleratorName]?
        /// The minimum and maximum total memory size for the accelerators on an instance type, in MiB. Default: No minimum or maximum
        public var acceleratorTotalMemoryMiB: AutoScalingClientTypes.AcceleratorTotalMemoryMiBRequest?
        /// Lists the accelerator types that must be on an instance type.
        ///
        /// * For instance types with GPU accelerators, specify gpu.
        ///
        /// * For instance types with FPGA accelerators, specify fpga.
        ///
        /// * For instance types with inference accelerators, specify inference.
        ///
        ///
        /// Default: Any accelerator type
        public var acceleratorTypes: [AutoScalingClientTypes.AcceleratorType]?
        /// Indicates whether bare metal instance types are included, excluded, or required. Default: excluded
        public var bareMetal: AutoScalingClientTypes.BareMetal?
        /// The minimum and maximum baseline bandwidth performance for an instance type, in Mbps. For more information, see [Amazon EBS–optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the Amazon EC2 User Guide for Linux Instances. Default: No minimum or maximum
        public var baselineEbsBandwidthMbps: AutoScalingClientTypes.BaselineEbsBandwidthMbpsRequest?
        /// Indicates whether burstable performance instance types are included, excluded, or required. For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the Amazon EC2 User Guide for Linux Instances. Default: excluded
        public var burstablePerformance: AutoScalingClientTypes.BurstablePerformance?
        /// Lists which specific CPU manufacturers to include.
        ///
        /// * For instance types with Intel CPUs, specify intel.
        ///
        /// * For instance types with AMD CPUs, specify amd.
        ///
        /// * For instance types with Amazon Web Services CPUs, specify amazon-web-services.
        ///
        ///
        /// Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template. Default: Any manufacturer
        public var cpuManufacturers: [AutoScalingClientTypes.CpuManufacturer]?
        /// Lists which instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Default: No excluded instance types
        public var excludedInstanceTypes: [Swift.String]?
        /// Indicates whether current or previous generation instance types are included.
        ///
        /// * For current generation instance types, specify current. The current generation includes EC2 instance types currently recommended for use. This typically includes the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the Amazon EC2 User Guide for Linux Instances.
        ///
        /// * For previous generation instance types, specify previous.
        ///
        ///
        /// Default: Any current or previous generation
        public var instanceGenerations: [AutoScalingClientTypes.InstanceGeneration]?
        /// Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, see [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the Amazon EC2 User Guide for Linux Instances. Default: included
        public var localStorage: AutoScalingClientTypes.LocalStorage?
        /// Indicates the type of local storage that is required.
        ///
        /// * For instance types with hard disk drive (HDD) storage, specify hdd.
        ///
        /// * For instance types with solid state drive (SSD) storage, specify ssd.
        ///
        ///
        /// Default: Any local storage type
        public var localStorageTypes: [AutoScalingClientTypes.LocalStorageType]?
        /// The minimum and maximum amount of memory per vCPU for an instance type, in GiB. Default: No minimum or maximum
        public var memoryGiBPerVCpu: AutoScalingClientTypes.MemoryGiBPerVCpuRequest?
        /// The minimum and maximum instance memory size for an instance type, in MiB.
        /// This member is required.
        public var memoryMiB: AutoScalingClientTypes.MemoryMiBRequest?
        /// The minimum and maximum number of network interfaces for an instance type. Default: No minimum or maximum
        public var networkInterfaceCount: AutoScalingClientTypes.NetworkInterfaceCountRequest?
        /// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price. Default: 20
        public var onDemandMaxPricePercentageOverLowestPrice: Swift.Int?
        /// Indicates whether instance types must provide On-Demand Instance hibernation support. Default: false
        public var requireHibernateSupport: Swift.Bool?
        /// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price. Default: 100
        public var spotMaxPricePercentageOverLowestPrice: Swift.Int?
        /// The minimum and maximum total local storage size for an instance type, in GB. Default: No minimum or maximum
        public var totalLocalStorageGB: AutoScalingClientTypes.TotalLocalStorageGBRequest?
        /// The minimum and maximum number of vCPUs for an instance type.
        /// This member is required.
        public var vCpuCount: AutoScalingClientTypes.VCpuCountRequest?

        public init (
            acceleratorCount: AutoScalingClientTypes.AcceleratorCountRequest? = nil,
            acceleratorManufacturers: [AutoScalingClientTypes.AcceleratorManufacturer]? = nil,
            acceleratorNames: [AutoScalingClientTypes.AcceleratorName]? = nil,
            acceleratorTotalMemoryMiB: AutoScalingClientTypes.AcceleratorTotalMemoryMiBRequest? = nil,
            acceleratorTypes: [AutoScalingClientTypes.AcceleratorType]? = nil,
            bareMetal: AutoScalingClientTypes.BareMetal? = nil,
            baselineEbsBandwidthMbps: AutoScalingClientTypes.BaselineEbsBandwidthMbpsRequest? = nil,
            burstablePerformance: AutoScalingClientTypes.BurstablePerformance? = nil,
            cpuManufacturers: [AutoScalingClientTypes.CpuManufacturer]? = nil,
            excludedInstanceTypes: [Swift.String]? = nil,
            instanceGenerations: [AutoScalingClientTypes.InstanceGeneration]? = nil,
            localStorage: AutoScalingClientTypes.LocalStorage? = nil,
            localStorageTypes: [AutoScalingClientTypes.LocalStorageType]? = nil,
            memoryGiBPerVCpu: AutoScalingClientTypes.MemoryGiBPerVCpuRequest? = nil,
            memoryMiB: AutoScalingClientTypes.MemoryMiBRequest? = nil,
            networkInterfaceCount: AutoScalingClientTypes.NetworkInterfaceCountRequest? = nil,
            onDemandMaxPricePercentageOverLowestPrice: Swift.Int? = nil,
            requireHibernateSupport: Swift.Bool? = nil,
            spotMaxPricePercentageOverLowestPrice: Swift.Int? = nil,
            totalLocalStorageGB: AutoScalingClientTypes.TotalLocalStorageGBRequest? = nil,
            vCpuCount: AutoScalingClientTypes.VCpuCountRequest? = nil
        )
        {
            self.acceleratorCount = acceleratorCount
            self.acceleratorManufacturers = acceleratorManufacturers
            self.acceleratorNames = acceleratorNames
            self.acceleratorTotalMemoryMiB = acceleratorTotalMemoryMiB
            self.acceleratorTypes = acceleratorTypes
            self.bareMetal = bareMetal
            self.baselineEbsBandwidthMbps = baselineEbsBandwidthMbps
            self.burstablePerformance = burstablePerformance
            self.cpuManufacturers = cpuManufacturers
            self.excludedInstanceTypes = excludedInstanceTypes
            self.instanceGenerations = instanceGenerations
            self.localStorage = localStorage
            self.localStorageTypes = localStorageTypes
            self.memoryGiBPerVCpu = memoryGiBPerVCpu
            self.memoryMiB = memoryMiB
            self.networkInterfaceCount = networkInterfaceCount
            self.onDemandMaxPricePercentageOverLowestPrice = onDemandMaxPricePercentageOverLowestPrice
            self.requireHibernateSupport = requireHibernateSupport
            self.spotMaxPricePercentageOverLowestPrice = spotMaxPricePercentageOverLowestPrice
            self.totalLocalStorageGB = totalLocalStorageGB
            self.vCpuCount = vCpuCount
        }
    }

}
