// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoScalingClientTypes.InstanceRefreshProgressDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case livePoolProgress = "LivePoolProgress"
        case warmPoolProgress = "WarmPoolProgress"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let livePoolProgress = livePoolProgress {
            try container.encode(livePoolProgress, forKey: ClientRuntime.Key("LivePoolProgress"))
        }
        if let warmPoolProgress = warmPoolProgress {
            try container.encode(warmPoolProgress, forKey: ClientRuntime.Key("WarmPoolProgress"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let livePoolProgressDecoded = try containerValues.decodeIfPresent(AutoScalingClientTypes.InstanceRefreshLivePoolProgress.self, forKey: .livePoolProgress)
        livePoolProgress = livePoolProgressDecoded
        let warmPoolProgressDecoded = try containerValues.decodeIfPresent(AutoScalingClientTypes.InstanceRefreshWarmPoolProgress.self, forKey: .warmPoolProgress)
        warmPoolProgress = warmPoolProgressDecoded
    }
}
