// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AutoScalingClientTypes {
    public enum AcceleratorName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case a100
        case k80
        case m60
        case radeonProV520
        case t4
        case v100
        case vu9p
        case sdkUnknown(Swift.String)

        public static var allCases: [AcceleratorName] {
            return [
                .a100,
                .k80,
                .m60,
                .radeonProV520,
                .t4,
                .v100,
                .vu9p,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .a100: return "a100"
            case .k80: return "k80"
            case .m60: return "m60"
            case .radeonProV520: return "radeon-pro-v520"
            case .t4: return "t4"
            case .v100: return "v100"
            case .vu9p: return "vu9p"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = AcceleratorName(rawValue: rawValue) ?? AcceleratorName.sdkUnknown(rawValue)
        }
    }
}
