// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AutoScalingClientTypes {
    /// Describes a warm pool configuration.
    public struct WarmPoolConfiguration: Swift.Equatable {
        /// The instance reuse policy.
        public var instanceReusePolicy: AutoScalingClientTypes.InstanceReusePolicy?
        /// The maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.
        public var maxGroupPreparedCapacity: Swift.Int?
        /// The minimum number of instances to maintain in the warm pool.
        public var minSize: Swift.Int?
        /// The instance state to transition to after the lifecycle actions are complete.
        public var poolState: AutoScalingClientTypes.WarmPoolState?
        /// The status of a warm pool that is marked for deletion.
        public var status: AutoScalingClientTypes.WarmPoolStatus?

        public init (
            instanceReusePolicy: AutoScalingClientTypes.InstanceReusePolicy? = nil,
            maxGroupPreparedCapacity: Swift.Int? = nil,
            minSize: Swift.Int? = nil,
            poolState: AutoScalingClientTypes.WarmPoolState? = nil,
            status: AutoScalingClientTypes.WarmPoolStatus? = nil
        )
        {
            self.instanceReusePolicy = instanceReusePolicy
            self.maxGroupPreparedCapacity = maxGroupPreparedCapacity
            self.minSize = minSize
            self.poolState = poolState
            self.status = status
        }
    }

}
