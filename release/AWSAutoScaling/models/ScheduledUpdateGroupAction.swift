// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoScalingClientTypes {
    /// Describes a scheduled scaling action.
    public struct ScheduledUpdateGroupAction: Swift.Equatable {
        /// The name of the Auto Scaling group.
        public var autoScalingGroupName: Swift.String?
        /// The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain.
        public var desiredCapacity: Swift.Int?
        /// The date and time in UTC for the recurring schedule to end. For example, "2019-06-01T00:00:00Z".
        public var endTime: ClientRuntime.Date?
        /// The maximum size of the Auto Scaling group.
        public var maxSize: Swift.Int?
        /// The minimum size of the Auto Scaling group.
        public var minSize: Swift.Int?
        /// The recurring schedule for the action, in Unix cron syntax format. When StartTime and EndTime are specified with Recurrence, they form the boundaries of when the recurring action starts and stops.
        public var recurrence: Swift.String?
        /// The Amazon Resource Name (ARN) of the scheduled action.
        public var scheduledActionARN: Swift.String?
        /// The name of the scheduled action.
        public var scheduledActionName: Swift.String?
        /// The date and time in UTC for this action to start. For example, "2019-06-01T00:00:00Z".
        public var startTime: ClientRuntime.Date?
        /// This property is no longer used.
        public var time: ClientRuntime.Date?
        /// The time zone for the cron expression.
        public var timeZone: Swift.String?

        public init (
            autoScalingGroupName: Swift.String? = nil,
            desiredCapacity: Swift.Int? = nil,
            endTime: ClientRuntime.Date? = nil,
            maxSize: Swift.Int? = nil,
            minSize: Swift.Int? = nil,
            recurrence: Swift.String? = nil,
            scheduledActionARN: Swift.String? = nil,
            scheduledActionName: Swift.String? = nil,
            startTime: ClientRuntime.Date? = nil,
            time: ClientRuntime.Date? = nil,
            timeZone: Swift.String? = nil
        )
        {
            self.autoScalingGroupName = autoScalingGroupName
            self.desiredCapacity = desiredCapacity
            self.endTime = endTime
            self.maxSize = maxSize
            self.minSize = minSize
            self.recurrence = recurrence
            self.scheduledActionARN = scheduledActionARN
            self.scheduledActionName = scheduledActionName
            self.startTime = startTime
            self.time = time
            self.timeZone = timeZone
        }
    }

}
