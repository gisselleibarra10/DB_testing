// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoScalingClientTypes {
    /// Describes an instance refresh for an Auto Scaling group.
    public struct InstanceRefresh: Swift.Equatable {
        /// The name of the Auto Scaling group.
        public var autoScalingGroupName: Swift.String?
        /// Describes the specific update you want to deploy.
        public var desiredConfiguration: AutoScalingClientTypes.DesiredConfiguration?
        /// The date and time at which the instance refresh ended.
        public var endTime: ClientRuntime.Date?
        /// The instance refresh ID.
        public var instanceRefreshId: Swift.String?
        /// The number of instances remaining to update before the instance refresh is complete.
        public var instancesToUpdate: Swift.Int?
        /// The percentage of the instance refresh that is complete. For each instance replacement, Amazon EC2 Auto Scaling tracks the instance's health status and warm-up time. When the instance's health status changes to healthy and the specified warm-up time passes, the instance is considered updated and is added to the percentage complete.
        public var percentageComplete: Swift.Int?
        /// Describes the preferences for an instance refresh.
        public var preferences: AutoScalingClientTypes.RefreshPreferences?
        /// Additional progress details for an Auto Scaling group that has a warm pool.
        public var progressDetails: AutoScalingClientTypes.InstanceRefreshProgressDetails?
        /// The date and time at which the instance refresh began.
        public var startTime: ClientRuntime.Date?
        /// The current status for the instance refresh operation:
        ///
        /// * Pending - The request was created, but the operation has not started.
        ///
        /// * InProgress - The operation is in progress.
        ///
        /// * Successful - The operation completed successfully.
        ///
        /// * Failed - The operation failed to complete. You can troubleshoot using the status reason and the scaling activities.
        ///
        /// * Cancelling - An ongoing operation is being cancelled. Cancellation does not roll back any replacements that have already been completed, but it prevents new replacements from being started.
        ///
        /// * Cancelled - The operation is cancelled.
        public var status: AutoScalingClientTypes.InstanceRefreshStatus?
        /// Provides more details about the current status of the instance refresh.
        public var statusReason: Swift.String?

        public init (
            autoScalingGroupName: Swift.String? = nil,
            desiredConfiguration: AutoScalingClientTypes.DesiredConfiguration? = nil,
            endTime: ClientRuntime.Date? = nil,
            instanceRefreshId: Swift.String? = nil,
            instancesToUpdate: Swift.Int? = nil,
            percentageComplete: Swift.Int? = nil,
            preferences: AutoScalingClientTypes.RefreshPreferences? = nil,
            progressDetails: AutoScalingClientTypes.InstanceRefreshProgressDetails? = nil,
            startTime: ClientRuntime.Date? = nil,
            status: AutoScalingClientTypes.InstanceRefreshStatus? = nil,
            statusReason: Swift.String? = nil
        )
        {
            self.autoScalingGroupName = autoScalingGroupName
            self.desiredConfiguration = desiredConfiguration
            self.endTime = endTime
            self.instanceRefreshId = instanceRefreshId
            self.instancesToUpdate = instancesToUpdate
            self.percentageComplete = percentageComplete
            self.preferences = preferences
            self.progressDetails = progressDetails
            self.startTime = startTime
            self.status = status
            self.statusReason = statusReason
        }
    }

}
