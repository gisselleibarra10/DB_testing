// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AutoScalingClientTypes {
    /// Describes the state of a Classic Load Balancer.
    public struct LoadBalancerState: Swift.Equatable {
        /// The name of the load balancer.
        public var loadBalancerName: Swift.String?
        /// One of the following load balancer states:
        ///
        /// * Adding - The Auto Scaling instances are being registered with the load balancer.
        ///
        /// * Added - All Auto Scaling instances are registered with the load balancer.
        ///
        /// * InService - At least one Auto Scaling instance passed an ELB health check.
        ///
        /// * Removing - The Auto Scaling instances are being deregistered from the load balancer. If connection draining is enabled, Elastic Load Balancing waits for in-flight requests to complete before deregistering the instances.
        ///
        /// * Removed - All Auto Scaling instances are deregistered from the load balancer.
        public var state: Swift.String?

        public init (
            loadBalancerName: Swift.String? = nil,
            state: Swift.String? = nil
        )
        {
            self.loadBalancerName = loadBalancerName
            self.state = state
        }
    }

}
