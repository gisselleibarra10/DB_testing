// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeScalingActivitiesInputBody: Swift.Equatable {
    let activityIds: [Swift.String]?
    let autoScalingGroupName: Swift.String?
    let includeDeletedGroups: Swift.Bool?
    let maxRecords: Swift.Int?
    let nextToken: Swift.String?
}

extension DescribeScalingActivitiesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activityIds = "ActivityIds"
        case autoScalingGroupName = "AutoScalingGroupName"
        case includeDeletedGroups = "IncludeDeletedGroups"
        case maxRecords = "MaxRecords"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.activityIds) {
            struct KeyVal0{struct member{}}
            let activityIdsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .activityIds)
            if let activityIdsWrappedContainer = activityIdsWrappedContainer {
                let activityIdsContainer = try activityIdsWrappedContainer.decodeIfPresent([Swift.String].self, forKey: .member)
                var activityIdsBuffer:[Swift.String]? = nil
                if let activityIdsContainer = activityIdsContainer {
                    activityIdsBuffer = [Swift.String]()
                    for stringContainer0 in activityIdsContainer {
                        activityIdsBuffer?.append(stringContainer0)
                    }
                }
                activityIds = activityIdsBuffer
            } else {
                activityIds = []
            }
        } else {
            activityIds = nil
        }
        let autoScalingGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .autoScalingGroupName)
        autoScalingGroupName = autoScalingGroupNameDecoded
        let includeDeletedGroupsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeDeletedGroups)
        includeDeletedGroups = includeDeletedGroupsDecoded
        let maxRecordsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxRecords)
        maxRecords = maxRecordsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
