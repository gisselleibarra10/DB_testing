// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoScalingClientTypes.PredictiveScalingPredefinedMetricPair: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case predefinedMetricType = "PredefinedMetricType"
        case resourceLabel = "ResourceLabel"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let predefinedMetricType = predefinedMetricType {
            try container.encode(predefinedMetricType, forKey: ClientRuntime.Key("PredefinedMetricType"))
        }
        if let resourceLabel = resourceLabel {
            try container.encode(resourceLabel, forKey: ClientRuntime.Key("ResourceLabel"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let predefinedMetricTypeDecoded = try containerValues.decodeIfPresent(AutoScalingClientTypes.PredefinedMetricPairType.self, forKey: .predefinedMetricType)
        predefinedMetricType = predefinedMetricTypeDecoded
        let resourceLabelDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceLabel)
        resourceLabel = resourceLabelDecoded
    }
}
