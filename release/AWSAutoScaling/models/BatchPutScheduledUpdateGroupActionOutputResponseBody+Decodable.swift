// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchPutScheduledUpdateGroupActionOutputResponseBody: Swift.Equatable {
    let failedScheduledUpdateGroupActions: [AutoScalingClientTypes.FailedScheduledUpdateGroupActionRequest]?
}

extension BatchPutScheduledUpdateGroupActionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failedScheduledUpdateGroupActions = "FailedScheduledUpdateGroupActions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("BatchPutScheduledUpdateGroupActionResult"))
        if containerValues.contains(.failedScheduledUpdateGroupActions) {
            struct KeyVal0{struct member{}}
            let failedScheduledUpdateGroupActionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .failedScheduledUpdateGroupActions)
            if let failedScheduledUpdateGroupActionsWrappedContainer = failedScheduledUpdateGroupActionsWrappedContainer {
                let failedScheduledUpdateGroupActionsContainer = try failedScheduledUpdateGroupActionsWrappedContainer.decodeIfPresent([AutoScalingClientTypes.FailedScheduledUpdateGroupActionRequest].self, forKey: .member)
                var failedScheduledUpdateGroupActionsBuffer:[AutoScalingClientTypes.FailedScheduledUpdateGroupActionRequest]? = nil
                if let failedScheduledUpdateGroupActionsContainer = failedScheduledUpdateGroupActionsContainer {
                    failedScheduledUpdateGroupActionsBuffer = [AutoScalingClientTypes.FailedScheduledUpdateGroupActionRequest]()
                    for structureContainer0 in failedScheduledUpdateGroupActionsContainer {
                        failedScheduledUpdateGroupActionsBuffer?.append(structureContainer0)
                    }
                }
                failedScheduledUpdateGroupActions = failedScheduledUpdateGroupActionsBuffer
            } else {
                failedScheduledUpdateGroupActions = []
            }
        } else {
            failedScheduledUpdateGroupActions = nil
        }
    }
}
