// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoScalingClientTypes.InstancesDistribution: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case onDemandAllocationStrategy = "OnDemandAllocationStrategy"
        case onDemandBaseCapacity = "OnDemandBaseCapacity"
        case onDemandPercentageAboveBaseCapacity = "OnDemandPercentageAboveBaseCapacity"
        case spotAllocationStrategy = "SpotAllocationStrategy"
        case spotInstancePools = "SpotInstancePools"
        case spotMaxPrice = "SpotMaxPrice"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let onDemandAllocationStrategy = onDemandAllocationStrategy {
            try container.encode(onDemandAllocationStrategy, forKey: ClientRuntime.Key("OnDemandAllocationStrategy"))
        }
        if let onDemandBaseCapacity = onDemandBaseCapacity {
            try container.encode(onDemandBaseCapacity, forKey: ClientRuntime.Key("OnDemandBaseCapacity"))
        }
        if let onDemandPercentageAboveBaseCapacity = onDemandPercentageAboveBaseCapacity {
            try container.encode(onDemandPercentageAboveBaseCapacity, forKey: ClientRuntime.Key("OnDemandPercentageAboveBaseCapacity"))
        }
        if let spotAllocationStrategy = spotAllocationStrategy {
            try container.encode(spotAllocationStrategy, forKey: ClientRuntime.Key("SpotAllocationStrategy"))
        }
        if let spotInstancePools = spotInstancePools {
            try container.encode(spotInstancePools, forKey: ClientRuntime.Key("SpotInstancePools"))
        }
        if let spotMaxPrice = spotMaxPrice {
            try container.encode(spotMaxPrice, forKey: ClientRuntime.Key("SpotMaxPrice"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let onDemandAllocationStrategyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .onDemandAllocationStrategy)
        onDemandAllocationStrategy = onDemandAllocationStrategyDecoded
        let onDemandBaseCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .onDemandBaseCapacity)
        onDemandBaseCapacity = onDemandBaseCapacityDecoded
        let onDemandPercentageAboveBaseCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .onDemandPercentageAboveBaseCapacity)
        onDemandPercentageAboveBaseCapacity = onDemandPercentageAboveBaseCapacityDecoded
        let spotAllocationStrategyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .spotAllocationStrategy)
        spotAllocationStrategy = spotAllocationStrategyDecoded
        let spotInstancePoolsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .spotInstancePools)
        spotInstancePools = spotInstancePoolsDecoded
        let spotMaxPriceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .spotMaxPrice)
        spotMaxPrice = spotMaxPriceDecoded
    }
}
