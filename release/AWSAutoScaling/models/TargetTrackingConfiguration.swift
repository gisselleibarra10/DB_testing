// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AutoScalingClientTypes {
    /// Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
    public struct TargetTrackingConfiguration: Swift.Equatable {
        /// A customized metric. You must specify either a predefined metric or a customized metric.
        public var customizedMetricSpecification: AutoScalingClientTypes.CustomizedMetricSpecification?
        /// Indicates whether scaling in by the target tracking scaling policy is disabled. If scaling in is disabled, the target tracking scaling policy doesn't remove instances from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove instances from the Auto Scaling group. The default is false.
        public var disableScaleIn: Swift.Bool?
        /// A predefined metric. You must specify either a predefined metric or a customized metric.
        public var predefinedMetricSpecification: AutoScalingClientTypes.PredefinedMetricSpecification?
        /// The target value for the metric. Some metrics are based on a count instead of a percentage, such as the request count for an Application Load Balancer or the number of messages in an SQS queue. If the scaling policy specifies one of these metrics, specify the target utilization as the optimal average request or message count per instance during any one-minute interval.
        /// This member is required.
        public var targetValue: Swift.Double?

        public init (
            customizedMetricSpecification: AutoScalingClientTypes.CustomizedMetricSpecification? = nil,
            disableScaleIn: Swift.Bool? = nil,
            predefinedMetricSpecification: AutoScalingClientTypes.PredefinedMetricSpecification? = nil,
            targetValue: Swift.Double? = nil
        )
        {
            self.customizedMetricSpecification = customizedMetricSpecification
            self.disableScaleIn = disableScaleIn
            self.predefinedMetricSpecification = predefinedMetricSpecification
            self.targetValue = targetValue
        }
    }

}
