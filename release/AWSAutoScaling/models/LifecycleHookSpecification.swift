// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AutoScalingClientTypes {
    /// Describes information used to specify a lifecycle hook for an Auto Scaling group. For more information, see [Amazon EC2 Auto Scaling lifecycle hooks](https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html) in the Amazon EC2 Auto Scaling User Guide.
    public struct LifecycleHookSpecification: Swift.Equatable {
        /// The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The default value is ABANDON. Valid values: CONTINUE | ABANDON
        public var defaultResult: Swift.String?
        /// The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from 30 to 7200 seconds. The default value is 3600 seconds (1 hour).
        public var heartbeatTimeout: Swift.Int?
        /// The name of the lifecycle hook.
        /// This member is required.
        public var lifecycleHookName: Swift.String?
        /// The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions.
        ///
        /// * To create a lifecycle hook for scale-out events, specify autoscaling:EC2_INSTANCE_LAUNCHING.
        ///
        /// * To create a lifecycle hook for scale-in events, specify autoscaling:EC2_INSTANCE_TERMINATING.
        /// This member is required.
        public var lifecycleTransition: Swift.String?
        /// Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
        public var notificationMetadata: Swift.String?
        /// The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an instance is in a wait state for the lifecycle hook. You can specify an Amazon SNS topic or an Amazon SQS queue.
        public var notificationTargetARN: Swift.String?
        /// The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. For information about creating this role, see [Configure a notification target for a lifecycle hook](https://docs.aws.amazon.com/autoscaling/ec2/userguide/prepare-for-lifecycle-notifications.html#lifecycle-hook-notification-target) in the Amazon EC2 Auto Scaling User Guide. Valid only if the notification target is an Amazon SNS topic or an Amazon SQS queue.
        public var roleARN: Swift.String?

        public init (
            defaultResult: Swift.String? = nil,
            heartbeatTimeout: Swift.Int? = nil,
            lifecycleHookName: Swift.String? = nil,
            lifecycleTransition: Swift.String? = nil,
            notificationMetadata: Swift.String? = nil,
            notificationTargetARN: Swift.String? = nil,
            roleARN: Swift.String? = nil
        )
        {
            self.defaultResult = defaultResult
            self.heartbeatTimeout = heartbeatTimeout
            self.lifecycleHookName = lifecycleHookName
            self.lifecycleTransition = lifecycleTransition
            self.notificationMetadata = notificationMetadata
            self.notificationTargetARN = notificationTargetARN
            self.roleARN = roleARN
        }
    }

}
