// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetachInstancesOutputResponseBody: Swift.Equatable {
    let activities: [AutoScalingClientTypes.Activity]?
}

extension DetachInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activities = "Activities"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DetachInstancesResult"))
        if containerValues.contains(.activities) {
            struct KeyVal0{struct member{}}
            let activitiesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .activities)
            if let activitiesWrappedContainer = activitiesWrappedContainer {
                let activitiesContainer = try activitiesWrappedContainer.decodeIfPresent([AutoScalingClientTypes.Activity].self, forKey: .member)
                var activitiesBuffer:[AutoScalingClientTypes.Activity]? = nil
                if let activitiesContainer = activitiesContainer {
                    activitiesBuffer = [AutoScalingClientTypes.Activity]()
                    for structureContainer0 in activitiesContainer {
                        activitiesBuffer?.append(structureContainer0)
                    }
                }
                activities = activitiesBuffer
            } else {
                activities = []
            }
        } else {
            activities = nil
        }
    }
}
