// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchEventsClientTypes {
    /// A Replay object that contains details about a replay.
    public struct Replay: Swift.Equatable {
        /// A time stamp for the time to start replaying events. Any event with a creation time prior to the EventEndTime specified is replayed.
        public var eventEndTime: ClientRuntime.Date?
        /// A time stamp for the time that the last event was replayed.
        public var eventLastReplayedTime: ClientRuntime.Date?
        /// The ARN of the archive to replay event from.
        public var eventSourceArn: Swift.String?
        /// A time stamp for the time to start replaying events. This is determined by the time in the event as described in [Time](https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEventsRequestEntry.html#eventbridge-Type-PutEventsRequestEntry-Time).
        public var eventStartTime: ClientRuntime.Date?
        /// A time stamp for the time that the replay completed.
        public var replayEndTime: ClientRuntime.Date?
        /// The name of the replay.
        public var replayName: Swift.String?
        /// A time stamp for the time that the replay started.
        public var replayStartTime: ClientRuntime.Date?
        /// The current state of the replay.
        public var state: CloudWatchEventsClientTypes.ReplayState?
        /// A description of why the replay is in the current state.
        public var stateReason: Swift.String?

        public init (
            eventEndTime: ClientRuntime.Date? = nil,
            eventLastReplayedTime: ClientRuntime.Date? = nil,
            eventSourceArn: Swift.String? = nil,
            eventStartTime: ClientRuntime.Date? = nil,
            replayEndTime: ClientRuntime.Date? = nil,
            replayName: Swift.String? = nil,
            replayStartTime: ClientRuntime.Date? = nil,
            state: CloudWatchEventsClientTypes.ReplayState? = nil,
            stateReason: Swift.String? = nil
        )
        {
            self.eventEndTime = eventEndTime
            self.eventLastReplayedTime = eventLastReplayedTime
            self.eventSourceArn = eventSourceArn
            self.eventStartTime = eventStartTime
            self.replayEndTime = replayEndTime
            self.replayName = replayName
            self.replayStartTime = replayStartTime
            self.state = state
            self.stateReason = stateReason
        }
    }

}
