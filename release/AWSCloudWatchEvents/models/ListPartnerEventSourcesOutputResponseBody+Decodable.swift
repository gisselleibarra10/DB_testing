// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPartnerEventSourcesOutputResponseBody: Swift.Equatable {
    let partnerEventSources: [CloudWatchEventsClientTypes.PartnerEventSource]?
    let nextToken: Swift.String?
}

extension ListPartnerEventSourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case partnerEventSources = "PartnerEventSources"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partnerEventSourcesContainer = try containerValues.decodeIfPresent([CloudWatchEventsClientTypes.PartnerEventSource?].self, forKey: .partnerEventSources)
        var partnerEventSourcesDecoded0:[CloudWatchEventsClientTypes.PartnerEventSource]? = nil
        if let partnerEventSourcesContainer = partnerEventSourcesContainer {
            partnerEventSourcesDecoded0 = [CloudWatchEventsClientTypes.PartnerEventSource]()
            for structure0 in partnerEventSourcesContainer {
                if let structure0 = structure0 {
                    partnerEventSourcesDecoded0?.append(structure0)
                }
            }
        }
        partnerEventSources = partnerEventSourcesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
