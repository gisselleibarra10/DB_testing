// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutTargetsInputBody: Swift.Equatable {
    let rule: Swift.String?
    let eventBusName: Swift.String?
    let targets: [CloudWatchEventsClientTypes.Target]?
}

extension PutTargetsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventBusName = "EventBusName"
        case rule = "Rule"
        case targets = "Targets"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rule)
        rule = ruleDecoded
        let eventBusNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventBusName)
        eventBusName = eventBusNameDecoded
        let targetsContainer = try containerValues.decodeIfPresent([CloudWatchEventsClientTypes.Target?].self, forKey: .targets)
        var targetsDecoded0:[CloudWatchEventsClientTypes.Target]? = nil
        if let targetsContainer = targetsContainer {
            targetsDecoded0 = [CloudWatchEventsClientTypes.Target]()
            for structure0 in targetsContainer {
                if let structure0 = structure0 {
                    targetsDecoded0?.append(structure0)
                }
            }
        }
        targets = targetsDecoded0
    }
}
