// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RemovePermissionInputBody: Swift.Equatable {
    let statementId: Swift.String?
    let removeAllPermissions: Swift.Bool
    let eventBusName: Swift.String?
}

extension RemovePermissionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventBusName = "EventBusName"
        case removeAllPermissions = "RemoveAllPermissions"
        case statementId = "StatementId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statementIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statementId)
        statementId = statementIdDecoded
        let removeAllPermissionsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .removeAllPermissions) ?? false
        removeAllPermissions = removeAllPermissionsDecoded
        let eventBusNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventBusName)
        eventBusName = eventBusNameDecoded
    }
}
