// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchEventsClientTypes {
    /// A partner event source is created by an SaaS partner. If a customer creates a partner event bus that matches this event source, that Amazon Web Services account can receive events from the partner's applications or services.
    public struct EventSource: Swift.Equatable {
        /// The ARN of the event source.
        public var arn: Swift.String?
        /// The name of the partner that created the event source.
        public var createdBy: Swift.String?
        /// The date and time the event source was created.
        public var creationTime: ClientRuntime.Date?
        /// The date and time that the event source will expire, if the Amazon Web Services account doesn't create a matching event bus for it.
        public var expirationTime: ClientRuntime.Date?
        /// The name of the event source.
        public var name: Swift.String?
        /// The state of the event source. If it is ACTIVE, you have already created a matching event bus for this event source, and that event bus is active. If it is PENDING, either you haven't yet created a matching event bus, or that event bus is deactivated. If it is DELETED, you have created a matching event bus, but the event source has since been deleted.
        public var state: CloudWatchEventsClientTypes.EventSourceState?

        public init (
            arn: Swift.String? = nil,
            createdBy: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            expirationTime: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            state: CloudWatchEventsClientTypes.EventSourceState? = nil
        )
        {
            self.arn = arn
            self.createdBy = createdBy
            self.creationTime = creationTime
            self.expirationTime = expirationTime
            self.name = name
            self.state = state
        }
    }

}
