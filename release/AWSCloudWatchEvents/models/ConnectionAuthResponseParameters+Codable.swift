// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchEventsClientTypes.ConnectionAuthResponseParameters: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case apiKeyAuthParameters = "ApiKeyAuthParameters"
        case basicAuthParameters = "BasicAuthParameters"
        case invocationHttpParameters = "InvocationHttpParameters"
        case oAuthParameters = "OAuthParameters"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let apiKeyAuthParameters = self.apiKeyAuthParameters {
            try encodeContainer.encode(apiKeyAuthParameters, forKey: .apiKeyAuthParameters)
        }
        if let basicAuthParameters = self.basicAuthParameters {
            try encodeContainer.encode(basicAuthParameters, forKey: .basicAuthParameters)
        }
        if let invocationHttpParameters = self.invocationHttpParameters {
            try encodeContainer.encode(invocationHttpParameters, forKey: .invocationHttpParameters)
        }
        if let oAuthParameters = self.oAuthParameters {
            try encodeContainer.encode(oAuthParameters, forKey: .oAuthParameters)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let basicAuthParametersDecoded = try containerValues.decodeIfPresent(CloudWatchEventsClientTypes.ConnectionBasicAuthResponseParameters.self, forKey: .basicAuthParameters)
        basicAuthParameters = basicAuthParametersDecoded
        let oAuthParametersDecoded = try containerValues.decodeIfPresent(CloudWatchEventsClientTypes.ConnectionOAuthResponseParameters.self, forKey: .oAuthParameters)
        oAuthParameters = oAuthParametersDecoded
        let apiKeyAuthParametersDecoded = try containerValues.decodeIfPresent(CloudWatchEventsClientTypes.ConnectionApiKeyAuthResponseParameters.self, forKey: .apiKeyAuthParameters)
        apiKeyAuthParameters = apiKeyAuthParametersDecoded
        let invocationHttpParametersDecoded = try containerValues.decodeIfPresent(CloudWatchEventsClientTypes.ConnectionHttpParameters.self, forKey: .invocationHttpParameters)
        invocationHttpParameters = invocationHttpParametersDecoded
    }
}
