// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListArchivesOutputResponseBody: Swift.Equatable {
    let archives: [CloudWatchEventsClientTypes.Archive]?
    let nextToken: Swift.String?
}

extension ListArchivesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case archives = "Archives"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let archivesContainer = try containerValues.decodeIfPresent([CloudWatchEventsClientTypes.Archive?].self, forKey: .archives)
        var archivesDecoded0:[CloudWatchEventsClientTypes.Archive]? = nil
        if let archivesContainer = archivesContainer {
            archivesDecoded0 = [CloudWatchEventsClientTypes.Archive]()
            for structure0 in archivesContainer {
                if let structure0 = structure0 {
                    archivesDecoded0?.append(structure0)
                }
            }
        }
        archives = archivesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
