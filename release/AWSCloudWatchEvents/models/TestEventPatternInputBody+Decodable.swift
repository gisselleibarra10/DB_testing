// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestEventPatternInputBody: Swift.Equatable {
    let eventPattern: Swift.String?
    let event: Swift.String?
}

extension TestEventPatternInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case event = "Event"
        case eventPattern = "EventPattern"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventPatternDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventPattern)
        eventPattern = eventPatternDecoded
        let eventDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .event)
        event = eventDecoded
    }
}
