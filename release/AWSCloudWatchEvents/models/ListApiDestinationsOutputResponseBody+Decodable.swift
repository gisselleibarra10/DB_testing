// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApiDestinationsOutputResponseBody: Swift.Equatable {
    let apiDestinations: [CloudWatchEventsClientTypes.ApiDestination]?
    let nextToken: Swift.String?
}

extension ListApiDestinationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case apiDestinations = "ApiDestinations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let apiDestinationsContainer = try containerValues.decodeIfPresent([CloudWatchEventsClientTypes.ApiDestination?].self, forKey: .apiDestinations)
        var apiDestinationsDecoded0:[CloudWatchEventsClientTypes.ApiDestination]? = nil
        if let apiDestinationsContainer = apiDestinationsContainer {
            apiDestinationsDecoded0 = [CloudWatchEventsClientTypes.ApiDestination]()
            for structure0 in apiDestinationsContainer {
                if let structure0 = structure0 {
                    apiDestinationsDecoded0?.append(structure0)
                }
            }
        }
        apiDestinations = apiDestinationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
