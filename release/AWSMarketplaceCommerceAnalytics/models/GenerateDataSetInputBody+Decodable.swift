// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GenerateDataSetInputBody: Swift.Equatable {
    let dataSetType: MarketplaceCommerceAnalyticsClientTypes.DataSetType?
    let dataSetPublicationDate: ClientRuntime.Date?
    let roleNameArn: Swift.String?
    let destinationS3BucketName: Swift.String?
    let destinationS3Prefix: Swift.String?
    let snsTopicArn: Swift.String?
    let customerDefinedValues: [Swift.String:Swift.String]?
}

extension GenerateDataSetInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customerDefinedValues
        case dataSetPublicationDate
        case dataSetType
        case destinationS3BucketName
        case destinationS3Prefix
        case roleNameArn
        case snsTopicArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSetTypeDecoded = try containerValues.decodeIfPresent(MarketplaceCommerceAnalyticsClientTypes.DataSetType.self, forKey: .dataSetType)
        dataSetType = dataSetTypeDecoded
        let dataSetPublicationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .dataSetPublicationDate)
        dataSetPublicationDate = dataSetPublicationDateDecoded
        let roleNameArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleNameArn)
        roleNameArn = roleNameArnDecoded
        let destinationS3BucketNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationS3BucketName)
        destinationS3BucketName = destinationS3BucketNameDecoded
        let destinationS3PrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationS3Prefix)
        destinationS3Prefix = destinationS3PrefixDecoded
        let snsTopicArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snsTopicArn)
        snsTopicArn = snsTopicArnDecoded
        let customerDefinedValuesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .customerDefinedValues)
        var customerDefinedValuesDecoded0: [Swift.String:Swift.String]? = nil
        if let customerDefinedValuesContainer = customerDefinedValuesContainer {
            customerDefinedValuesDecoded0 = [Swift.String:Swift.String]()
            for (key0, optionalvalue0) in customerDefinedValuesContainer {
                if let optionalvalue0 = optionalvalue0 {
                    customerDefinedValuesDecoded0?[key0] = optionalvalue0
                }
            }
        }
        customerDefinedValues = customerDefinedValuesDecoded0
    }
}
