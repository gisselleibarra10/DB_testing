// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MarketplaceCatalogClientTypes.Filter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name = "Name"
        case valueList = "ValueList"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let valueList = valueList {
            var valueListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .valueList)
            for valuelist0 in valueList {
                try valueListContainer.encode(valuelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let valueListContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .valueList)
        var valueListDecoded0:[Swift.String]? = nil
        if let valueListContainer = valueListContainer {
            valueListDecoded0 = [Swift.String]()
            for string0 in valueListContainer {
                if let string0 = string0 {
                    valueListDecoded0?.append(string0)
                }
            }
        }
        valueList = valueListDecoded0
    }
}
