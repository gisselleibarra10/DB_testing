// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeChangeSetOutputResponseBody: Swift.Equatable {
    let changeSetId: Swift.String?
    let changeSetArn: Swift.String?
    let changeSetName: Swift.String?
    let startTime: Swift.String?
    let endTime: Swift.String?
    let status: MarketplaceCatalogClientTypes.ChangeStatus?
    let failureCode: MarketplaceCatalogClientTypes.FailureCode?
    let failureDescription: Swift.String?
    let changeSet: [MarketplaceCatalogClientTypes.ChangeSummary]?
}

extension DescribeChangeSetOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case changeSet = "ChangeSet"
        case changeSetArn = "ChangeSetArn"
        case changeSetId = "ChangeSetId"
        case changeSetName = "ChangeSetName"
        case endTime = "EndTime"
        case failureCode = "FailureCode"
        case failureDescription = "FailureDescription"
        case startTime = "StartTime"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let changeSetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .changeSetId)
        changeSetId = changeSetIdDecoded
        let changeSetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .changeSetArn)
        changeSetArn = changeSetArnDecoded
        let changeSetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .changeSetName)
        changeSetName = changeSetNameDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endTime)
        endTime = endTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(MarketplaceCatalogClientTypes.ChangeStatus.self, forKey: .status)
        status = statusDecoded
        let failureCodeDecoded = try containerValues.decodeIfPresent(MarketplaceCatalogClientTypes.FailureCode.self, forKey: .failureCode)
        failureCode = failureCodeDecoded
        let failureDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureDescription)
        failureDescription = failureDescriptionDecoded
        let changeSetContainer = try containerValues.decodeIfPresent([MarketplaceCatalogClientTypes.ChangeSummary?].self, forKey: .changeSet)
        var changeSetDecoded0:[MarketplaceCatalogClientTypes.ChangeSummary]? = nil
        if let changeSetContainer = changeSetContainer {
            changeSetDecoded0 = [MarketplaceCatalogClientTypes.ChangeSummary]()
            for structure0 in changeSetContainer {
                if let structure0 = structure0 {
                    changeSetDecoded0?.append(structure0)
                }
            }
        }
        changeSet = changeSetDecoded0
    }
}
