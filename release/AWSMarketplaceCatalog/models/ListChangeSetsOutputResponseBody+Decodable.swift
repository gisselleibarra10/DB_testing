// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListChangeSetsOutputResponseBody: Swift.Equatable {
    let changeSetSummaryList: [MarketplaceCatalogClientTypes.ChangeSetSummaryListItem]?
    let nextToken: Swift.String?
}

extension ListChangeSetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case changeSetSummaryList = "ChangeSetSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let changeSetSummaryListContainer = try containerValues.decodeIfPresent([MarketplaceCatalogClientTypes.ChangeSetSummaryListItem?].self, forKey: .changeSetSummaryList)
        var changeSetSummaryListDecoded0:[MarketplaceCatalogClientTypes.ChangeSetSummaryListItem]? = nil
        if let changeSetSummaryListContainer = changeSetSummaryListContainer {
            changeSetSummaryListDecoded0 = [MarketplaceCatalogClientTypes.ChangeSetSummaryListItem]()
            for structure0 in changeSetSummaryListContainer {
                if let structure0 = structure0 {
                    changeSetSummaryListDecoded0?.append(structure0)
                }
            }
        }
        changeSetSummaryList = changeSetSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
