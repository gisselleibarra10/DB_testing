// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetRecordOutputResponseBody: Swift.Equatable {
    let records: [SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordResultDetail]?
    let errors: [SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordError]?
    let unprocessedIdentifiers: [SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordIdentifier]?
}

extension BatchGetRecordOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errors = "Errors"
        case records = "Records"
        case unprocessedIdentifiers = "UnprocessedIdentifiers"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recordsContainer = try containerValues.decodeIfPresent([SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordResultDetail?].self, forKey: .records)
        var recordsDecoded0:[SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordResultDetail]? = nil
        if let recordsContainer = recordsContainer {
            recordsDecoded0 = [SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordResultDetail]()
            for structure0 in recordsContainer {
                if let structure0 = structure0 {
                    recordsDecoded0?.append(structure0)
                }
            }
        }
        records = recordsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordError?].self, forKey: .errors)
        var errorsDecoded0:[SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordError]()
            for structure0 in errorsContainer {
                if let structure0 = structure0 {
                    errorsDecoded0?.append(structure0)
                }
            }
        }
        errors = errorsDecoded0
        let unprocessedIdentifiersContainer = try containerValues.decodeIfPresent([SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordIdentifier?].self, forKey: .unprocessedIdentifiers)
        var unprocessedIdentifiersDecoded0:[SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordIdentifier]? = nil
        if let unprocessedIdentifiersContainer = unprocessedIdentifiersContainer {
            unprocessedIdentifiersDecoded0 = [SageMakerFeatureStoreRuntimeClientTypes.BatchGetRecordIdentifier]()
            for structure0 in unprocessedIdentifiersContainer {
                if let structure0 = structure0 {
                    unprocessedIdentifiersDecoded0?.append(structure0)
                }
            }
        }
        unprocessedIdentifiers = unprocessedIdentifiersDecoded0
    }
}
