// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLogSubscriptionsOutputResponseBody: Swift.Equatable {
    let logSubscriptions: [DirectoryClientTypes.LogSubscription]?
    let nextToken: Swift.String?
}

extension ListLogSubscriptionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case logSubscriptions = "LogSubscriptions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logSubscriptionsContainer = try containerValues.decodeIfPresent([DirectoryClientTypes.LogSubscription?].self, forKey: .logSubscriptions)
        var logSubscriptionsDecoded0:[DirectoryClientTypes.LogSubscription]? = nil
        if let logSubscriptionsContainer = logSubscriptionsContainer {
            logSubscriptionsDecoded0 = [DirectoryClientTypes.LogSubscription]()
            for structure0 in logSubscriptionsContainer {
                if let structure0 = structure0 {
                    logSubscriptionsDecoded0?.append(structure0)
                }
            }
        }
        logSubscriptions = logSubscriptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
