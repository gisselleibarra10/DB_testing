// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DirectoryClientTypes.DirectoryConnectSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customerDnsIps = "CustomerDnsIps"
        case customerUserName = "CustomerUserName"
        case subnetIds = "SubnetIds"
        case vpcId = "VpcId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customerDnsIps = customerDnsIps {
            var customerDnsIpsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .customerDnsIps)
            for dnsipaddrs0 in customerDnsIps {
                try customerDnsIpsContainer.encode(dnsipaddrs0)
            }
        }
        if let customerUserName = self.customerUserName {
            try encodeContainer.encode(customerUserName, forKey: .customerUserName)
        }
        if let subnetIds = subnetIds {
            var subnetIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .subnetIds)
            for subnetids0 in subnetIds {
                try subnetIdsContainer.encode(subnetids0)
            }
        }
        if let vpcId = self.vpcId {
            try encodeContainer.encode(vpcId, forKey: .vpcId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vpcIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpcId)
        vpcId = vpcIdDecoded
        let subnetIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .subnetIds)
        var subnetIdsDecoded0:[Swift.String]? = nil
        if let subnetIdsContainer = subnetIdsContainer {
            subnetIdsDecoded0 = [Swift.String]()
            for string0 in subnetIdsContainer {
                if let string0 = string0 {
                    subnetIdsDecoded0?.append(string0)
                }
            }
        }
        subnetIds = subnetIdsDecoded0
        let customerDnsIpsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .customerDnsIps)
        var customerDnsIpsDecoded0:[Swift.String]? = nil
        if let customerDnsIpsContainer = customerDnsIpsContainer {
            customerDnsIpsDecoded0 = [Swift.String]()
            for string0 in customerDnsIpsContainer {
                if let string0 = string0 {
                    customerDnsIpsDecoded0?.append(string0)
                }
            }
        }
        customerDnsIps = customerDnsIpsDecoded0
        let customerUserNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customerUserName)
        customerUserName = customerUserNameDecoded
    }
}
