// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSharedDirectoriesOutputResponseBody: Swift.Equatable {
    let sharedDirectories: [DirectoryClientTypes.SharedDirectory]?
    let nextToken: Swift.String?
}

extension DescribeSharedDirectoriesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case sharedDirectories = "SharedDirectories"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sharedDirectoriesContainer = try containerValues.decodeIfPresent([DirectoryClientTypes.SharedDirectory?].self, forKey: .sharedDirectories)
        var sharedDirectoriesDecoded0:[DirectoryClientTypes.SharedDirectory]? = nil
        if let sharedDirectoriesContainer = sharedDirectoriesContainer {
            sharedDirectoriesDecoded0 = [DirectoryClientTypes.SharedDirectory]()
            for structure0 in sharedDirectoriesContainer {
                if let structure0 = structure0 {
                    sharedDirectoriesDecoded0?.append(structure0)
                }
            }
        }
        sharedDirectories = sharedDirectoriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
