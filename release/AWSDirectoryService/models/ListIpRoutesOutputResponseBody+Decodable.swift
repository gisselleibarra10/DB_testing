// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIpRoutesOutputResponseBody: Swift.Equatable {
    let ipRoutesInfo: [DirectoryClientTypes.IpRouteInfo]?
    let nextToken: Swift.String?
}

extension ListIpRoutesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ipRoutesInfo = "IpRoutesInfo"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ipRoutesInfoContainer = try containerValues.decodeIfPresent([DirectoryClientTypes.IpRouteInfo?].self, forKey: .ipRoutesInfo)
        var ipRoutesInfoDecoded0:[DirectoryClientTypes.IpRouteInfo]? = nil
        if let ipRoutesInfoContainer = ipRoutesInfoContainer {
            ipRoutesInfoDecoded0 = [DirectoryClientTypes.IpRouteInfo]()
            for structure0 in ipRoutesInfoContainer {
                if let structure0 = structure0 {
                    ipRoutesInfoDecoded0?.append(structure0)
                }
            }
        }
        ipRoutesInfo = ipRoutesInfoDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
