// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDomainControllersOutputResponseBody: Swift.Equatable {
    let domainControllers: [DirectoryClientTypes.DomainController]?
    let nextToken: Swift.String?
}

extension DescribeDomainControllersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainControllers = "DomainControllers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainControllersContainer = try containerValues.decodeIfPresent([DirectoryClientTypes.DomainController?].self, forKey: .domainControllers)
        var domainControllersDecoded0:[DirectoryClientTypes.DomainController]? = nil
        if let domainControllersContainer = domainControllersContainer {
            domainControllersDecoded0 = [DirectoryClientTypes.DomainController]()
            for structure0 in domainControllersContainer {
                if let structure0 = structure0 {
                    domainControllersDecoded0?.append(structure0)
                }
            }
        }
        domainControllers = domainControllersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
