// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DirectoryClientTypes.SettingEntry: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowedValues = "AllowedValues"
        case appliedValue = "AppliedValue"
        case lastRequestedDateTime = "LastRequestedDateTime"
        case lastUpdatedDateTime = "LastUpdatedDateTime"
        case name = "Name"
        case requestDetailedStatus = "RequestDetailedStatus"
        case requestStatus = "RequestStatus"
        case requestStatusMessage = "RequestStatusMessage"
        case requestedValue = "RequestedValue"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allowedValues = self.allowedValues {
            try encodeContainer.encode(allowedValues, forKey: .allowedValues)
        }
        if let appliedValue = self.appliedValue {
            try encodeContainer.encode(appliedValue, forKey: .appliedValue)
        }
        if let lastRequestedDateTime = self.lastRequestedDateTime {
            try encodeContainer.encode(lastRequestedDateTime.timeIntervalSince1970, forKey: .lastRequestedDateTime)
        }
        if let lastUpdatedDateTime = self.lastUpdatedDateTime {
            try encodeContainer.encode(lastUpdatedDateTime.timeIntervalSince1970, forKey: .lastUpdatedDateTime)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let requestDetailedStatus = requestDetailedStatus {
            var requestDetailedStatusContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .requestDetailedStatus)
            for (dictKey0, directoryconfigurationsettingrequestdetailedstatus0) in requestDetailedStatus {
                try requestDetailedStatusContainer.encode(directoryconfigurationsettingrequestdetailedstatus0.rawValue, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let requestStatus = self.requestStatus {
            try encodeContainer.encode(requestStatus.rawValue, forKey: .requestStatus)
        }
        if let requestStatusMessage = self.requestStatusMessage {
            try encodeContainer.encode(requestStatusMessage, forKey: .requestStatusMessage)
        }
        if let requestedValue = self.requestedValue {
            try encodeContainer.encode(requestedValue, forKey: .requestedValue)
        }
        if let type = self.type {
            try encodeContainer.encode(type, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .type)
        type = typeDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let allowedValuesDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .allowedValues)
        allowedValues = allowedValuesDecoded
        let appliedValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appliedValue)
        appliedValue = appliedValueDecoded
        let requestedValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .requestedValue)
        requestedValue = requestedValueDecoded
        let requestStatusDecoded = try containerValues.decodeIfPresent(DirectoryClientTypes.DirectoryConfigurationStatus.self, forKey: .requestStatus)
        requestStatus = requestStatusDecoded
        let requestDetailedStatusContainer = try containerValues.decodeIfPresent([Swift.String: DirectoryClientTypes.DirectoryConfigurationStatus?].self, forKey: .requestDetailedStatus)
        var requestDetailedStatusDecoded0: [Swift.String:DirectoryClientTypes.DirectoryConfigurationStatus]? = nil
        if let requestDetailedStatusContainer = requestDetailedStatusContainer {
            requestDetailedStatusDecoded0 = [Swift.String:DirectoryClientTypes.DirectoryConfigurationStatus]()
            for (key0, directoryconfigurationstatus0) in requestDetailedStatusContainer {
                if let directoryconfigurationstatus0 = directoryconfigurationstatus0 {
                    requestDetailedStatusDecoded0?[key0] = directoryconfigurationstatus0
                }
            }
        }
        requestDetailedStatus = requestDetailedStatusDecoded0
        let requestStatusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .requestStatusMessage)
        requestStatusMessage = requestStatusMessageDecoded
        let lastUpdatedDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedDateTime)
        lastUpdatedDateTime = lastUpdatedDateTimeDecoded
        let lastRequestedDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastRequestedDateTime)
        lastRequestedDateTime = lastRequestedDateTimeDecoded
    }
}
