// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DirectoryClientTypes {
    /// Contains information about the domain controllers for a specified directory.
    public struct DomainController: Swift.Equatable {
        /// The Availability Zone where the domain controller is located.
        public var availabilityZone: Swift.String?
        /// Identifier of the directory where the domain controller resides.
        public var directoryId: Swift.String?
        /// The IP address of the domain controller.
        public var dnsIpAddr: Swift.String?
        /// Identifies a specific domain controller in the directory.
        public var domainControllerId: Swift.String?
        /// Specifies when the domain controller was created.
        public var launchTime: ClientRuntime.Date?
        /// The status of the domain controller.
        public var status: DirectoryClientTypes.DomainControllerStatus?
        /// The date and time that the status was last updated.
        public var statusLastUpdatedDateTime: ClientRuntime.Date?
        /// A description of the domain controller state.
        public var statusReason: Swift.String?
        /// Identifier of the subnet in the VPC that contains the domain controller.
        public var subnetId: Swift.String?
        /// The identifier of the VPC that contains the domain controller.
        public var vpcId: Swift.String?

        public init (
            availabilityZone: Swift.String? = nil,
            directoryId: Swift.String? = nil,
            dnsIpAddr: Swift.String? = nil,
            domainControllerId: Swift.String? = nil,
            launchTime: ClientRuntime.Date? = nil,
            status: DirectoryClientTypes.DomainControllerStatus? = nil,
            statusLastUpdatedDateTime: ClientRuntime.Date? = nil,
            statusReason: Swift.String? = nil,
            subnetId: Swift.String? = nil,
            vpcId: Swift.String? = nil
        )
        {
            self.availabilityZone = availabilityZone
            self.directoryId = directoryId
            self.dnsIpAddr = dnsIpAddr
            self.domainControllerId = domainControllerId
            self.launchTime = launchTime
            self.status = status
            self.statusLastUpdatedDateTime = statusLastUpdatedDateTime
            self.statusReason = statusReason
            self.subnetId = subnetId
            self.vpcId = vpcId
        }
    }

}
