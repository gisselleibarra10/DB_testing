// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddIpRoutesInputBody: Swift.Equatable {
    let directoryId: Swift.String?
    let ipRoutes: [DirectoryClientTypes.IpRoute]?
    let updateSecurityGroupForDirectoryControllers: Swift.Bool
}

extension AddIpRoutesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case directoryId = "DirectoryId"
        case ipRoutes = "IpRoutes"
        case updateSecurityGroupForDirectoryControllers = "UpdateSecurityGroupForDirectoryControllers"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let directoryIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .directoryId)
        directoryId = directoryIdDecoded
        let ipRoutesContainer = try containerValues.decodeIfPresent([DirectoryClientTypes.IpRoute?].self, forKey: .ipRoutes)
        var ipRoutesDecoded0:[DirectoryClientTypes.IpRoute]? = nil
        if let ipRoutesContainer = ipRoutesContainer {
            ipRoutesDecoded0 = [DirectoryClientTypes.IpRoute]()
            for structure0 in ipRoutesContainer {
                if let structure0 = structure0 {
                    ipRoutesDecoded0?.append(structure0)
                }
            }
        }
        ipRoutes = ipRoutesDecoded0
        let updateSecurityGroupForDirectoryControllersDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .updateSecurityGroupForDirectoryControllers) ?? false
        updateSecurityGroupForDirectoryControllers = updateSecurityGroupForDirectoryControllersDecoded
    }
}
