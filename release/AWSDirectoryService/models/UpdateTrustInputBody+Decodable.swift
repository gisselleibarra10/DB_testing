// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTrustInputBody: Swift.Equatable {
    let trustId: Swift.String?
    let selectiveAuth: DirectoryClientTypes.SelectiveAuth?
}

extension UpdateTrustInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case selectiveAuth = "SelectiveAuth"
        case trustId = "TrustId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trustIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trustId)
        trustId = trustIdDecoded
        let selectiveAuthDecoded = try containerValues.decodeIfPresent(DirectoryClientTypes.SelectiveAuth.self, forKey: .selectiveAuth)
        selectiveAuth = selectiveAuthDecoded
    }
}
