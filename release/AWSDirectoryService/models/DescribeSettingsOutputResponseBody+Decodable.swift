// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSettingsOutputResponseBody: Swift.Equatable {
    let directoryId: Swift.String?
    let settingEntries: [DirectoryClientTypes.SettingEntry]?
    let nextToken: Swift.String?
}

extension DescribeSettingsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case directoryId = "DirectoryId"
        case nextToken = "NextToken"
        case settingEntries = "SettingEntries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let directoryIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .directoryId)
        directoryId = directoryIdDecoded
        let settingEntriesContainer = try containerValues.decodeIfPresent([DirectoryClientTypes.SettingEntry?].self, forKey: .settingEntries)
        var settingEntriesDecoded0:[DirectoryClientTypes.SettingEntry]? = nil
        if let settingEntriesContainer = settingEntriesContainer {
            settingEntriesDecoded0 = [DirectoryClientTypes.SettingEntry]()
            for structure0 in settingEntriesContainer {
                if let structure0 = structure0 {
                    settingEntriesDecoded0?.append(structure0)
                }
            }
        }
        settingEntries = settingEntriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
