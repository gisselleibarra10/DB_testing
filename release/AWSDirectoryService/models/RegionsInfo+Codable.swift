// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DirectoryClientTypes.RegionsInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case additionalRegions = "AdditionalRegions"
        case primaryRegion = "PrimaryRegion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let additionalRegions = additionalRegions {
            var additionalRegionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .additionalRegions)
            for additionalregions0 in additionalRegions {
                try additionalRegionsContainer.encode(additionalregions0)
            }
        }
        if let primaryRegion = self.primaryRegion {
            try encodeContainer.encode(primaryRegion, forKey: .primaryRegion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let primaryRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .primaryRegion)
        primaryRegion = primaryRegionDecoded
        let additionalRegionsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .additionalRegions)
        var additionalRegionsDecoded0:[Swift.String]? = nil
        if let additionalRegionsContainer = additionalRegionsContainer {
            additionalRegionsDecoded0 = [Swift.String]()
            for string0 in additionalRegionsContainer {
                if let string0 = string0 {
                    additionalRegionsDecoded0?.append(string0)
                }
            }
        }
        additionalRegions = additionalRegionsDecoded0
    }
}
