// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCertificatesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let certificatesInfo: [DirectoryClientTypes.CertificateInfo]?
}

extension ListCertificatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificatesInfo = "CertificatesInfo"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let certificatesInfoContainer = try containerValues.decodeIfPresent([DirectoryClientTypes.CertificateInfo?].self, forKey: .certificatesInfo)
        var certificatesInfoDecoded0:[DirectoryClientTypes.CertificateInfo]? = nil
        if let certificatesInfoContainer = certificatesInfoContainer {
            certificatesInfoDecoded0 = [DirectoryClientTypes.CertificateInfo]()
            for structure0 in certificatesInfoContainer {
                if let structure0 = structure0 {
                    certificatesInfoDecoded0?.append(structure0)
                }
            }
        }
        certificatesInfo = certificatesInfoDecoded0
    }
}
