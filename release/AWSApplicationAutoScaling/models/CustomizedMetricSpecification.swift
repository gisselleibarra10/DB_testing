// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ApplicationAutoScalingClientTypes {
    /// Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling. For information about the available metrics for a service, see [Amazon Web Services Services That Publish CloudWatch Metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the Amazon CloudWatch User Guide. To create your customized metric specification:
    ///
    /// * Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see [Publish Custom Metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the Amazon CloudWatch User Guide.
    ///
    /// * Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases.
    ///
    ///
    /// For more information about CloudWatch, see [Amazon CloudWatch Concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html).
    public struct CustomizedMetricSpecification: Swift.Equatable {
        /// The dimensions of the metric. Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
        public var dimensions: [ApplicationAutoScalingClientTypes.MetricDimension]?
        /// The name of the metric.
        /// This member is required.
        public var metricName: Swift.String?
        /// The namespace of the metric.
        /// This member is required.
        public var namespace: Swift.String?
        /// The statistic of the metric.
        /// This member is required.
        public var statistic: ApplicationAutoScalingClientTypes.MetricStatistic?
        /// The unit of the metric.
        public var unit: Swift.String?

        public init (
            dimensions: [ApplicationAutoScalingClientTypes.MetricDimension]? = nil,
            metricName: Swift.String? = nil,
            namespace: Swift.String? = nil,
            statistic: ApplicationAutoScalingClientTypes.MetricStatistic? = nil,
            unit: Swift.String? = nil
        )
        {
            self.dimensions = dimensions
            self.metricName = metricName
            self.namespace = namespace
            self.statistic = statistic
            self.unit = unit
        }
    }

}
