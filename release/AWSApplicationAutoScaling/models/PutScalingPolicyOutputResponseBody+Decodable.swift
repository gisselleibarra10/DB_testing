// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutScalingPolicyOutputResponseBody: Swift.Equatable {
    let policyARN: Swift.String?
    let alarms: [ApplicationAutoScalingClientTypes.Alarm]?
}

extension PutScalingPolicyOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarms = "Alarms"
        case policyARN = "PolicyARN"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyARN)
        policyARN = policyARNDecoded
        let alarmsContainer = try containerValues.decodeIfPresent([ApplicationAutoScalingClientTypes.Alarm?].self, forKey: .alarms)
        var alarmsDecoded0:[ApplicationAutoScalingClientTypes.Alarm]? = nil
        if let alarmsContainer = alarmsContainer {
            alarmsDecoded0 = [ApplicationAutoScalingClientTypes.Alarm]()
            for structure0 in alarmsContainer {
                if let structure0 = structure0 {
                    alarmsDecoded0?.append(structure0)
                }
            }
        }
        alarms = alarmsDecoded0
    }
}
