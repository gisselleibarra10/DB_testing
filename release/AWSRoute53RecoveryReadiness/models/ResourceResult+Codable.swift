// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53RecoveryReadinessClientTypes.ResourceResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case componentId = "componentId"
        case lastCheckedTimestamp = "lastCheckedTimestamp"
        case readiness = "readiness"
        case resourceArn = "resourceArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let componentId = self.componentId {
            try encodeContainer.encode(componentId, forKey: .componentId)
        }
        if let lastCheckedTimestamp = self.lastCheckedTimestamp {
            try encodeContainer.encode(lastCheckedTimestamp.timeIntervalSince1970, forKey: .lastCheckedTimestamp)
        }
        if let readiness = self.readiness {
            try encodeContainer.encode(readiness.rawValue, forKey: .readiness)
        }
        if let resourceArn = self.resourceArn {
            try encodeContainer.encode(resourceArn, forKey: .resourceArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let componentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .componentId)
        componentId = componentIdDecoded
        let lastCheckedTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastCheckedTimestamp)
        lastCheckedTimestamp = lastCheckedTimestampDecoded
        let readinessDecoded = try containerValues.decodeIfPresent(Route53RecoveryReadinessClientTypes.Readiness.self, forKey: .readiness)
        readiness = readinessDecoded
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
    }
}
