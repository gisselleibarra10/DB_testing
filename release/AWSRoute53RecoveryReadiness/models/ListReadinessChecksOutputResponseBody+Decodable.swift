// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListReadinessChecksOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let readinessChecks: [Route53RecoveryReadinessClientTypes.ReadinessCheckOutput]?
}

extension ListReadinessChecksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case readinessChecks = "readinessChecks"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let readinessChecksContainer = try containerValues.decodeIfPresent([Route53RecoveryReadinessClientTypes.ReadinessCheckOutput?].self, forKey: .readinessChecks)
        var readinessChecksDecoded0:[Route53RecoveryReadinessClientTypes.ReadinessCheckOutput]? = nil
        if let readinessChecksContainer = readinessChecksContainer {
            readinessChecksDecoded0 = [Route53RecoveryReadinessClientTypes.ReadinessCheckOutput]()
            for structure0 in readinessChecksContainer {
                if let structure0 = structure0 {
                    readinessChecksDecoded0?.append(structure0)
                }
            }
        }
        readinessChecks = readinessChecksDecoded0
    }
}
