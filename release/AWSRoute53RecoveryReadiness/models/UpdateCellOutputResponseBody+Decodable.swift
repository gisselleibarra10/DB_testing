// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateCellOutputResponseBody: Swift.Equatable {
    let cellArn: Swift.String?
    let cellName: Swift.String?
    let cells: [Swift.String]?
    let parentReadinessScopes: [Swift.String]?
    let tags: [Swift.String:Swift.String]?
}

extension UpdateCellOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cellArn = "cellArn"
        case cellName = "cellName"
        case cells = "cells"
        case parentReadinessScopes = "parentReadinessScopes"
        case tags = "tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cellArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cellArn)
        cellArn = cellArnDecoded
        let cellNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cellName)
        cellName = cellNameDecoded
        let cellsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .cells)
        var cellsDecoded0:[Swift.String]? = nil
        if let cellsContainer = cellsContainer {
            cellsDecoded0 = [Swift.String]()
            for string0 in cellsContainer {
                if let string0 = string0 {
                    cellsDecoded0?.append(string0)
                }
            }
        }
        cells = cellsDecoded0
        let parentReadinessScopesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .parentReadinessScopes)
        var parentReadinessScopesDecoded0:[Swift.String]? = nil
        if let parentReadinessScopesContainer = parentReadinessScopesContainer {
            parentReadinessScopesDecoded0 = [Swift.String]()
            for string0 in parentReadinessScopesContainer {
                if let string0 = string0 {
                    parentReadinessScopesDecoded0?.append(string0)
                }
            }
        }
        parentReadinessScopes = parentReadinessScopesDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, __string0) in tagsContainer {
                if let __string0 = __string0 {
                    tagsDecoded0?[key0] = __string0
                }
            }
        }
        tags = tagsDecoded0
    }
}
