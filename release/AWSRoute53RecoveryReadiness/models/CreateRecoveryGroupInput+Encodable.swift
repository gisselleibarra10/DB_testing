// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateRecoveryGroupInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cells = "cells"
        case recoveryGroupName = "recoveryGroupName"
        case tags = "tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cells = cells {
            var cellsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .cells)
            for __listof__string0 in cells {
                try cellsContainer.encode(__listof__string0)
            }
        }
        if let recoveryGroupName = self.recoveryGroupName {
            try encodeContainer.encode(recoveryGroupName, forKey: .recoveryGroupName)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, tags0) in tags {
                try tagsContainer.encode(tags0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
