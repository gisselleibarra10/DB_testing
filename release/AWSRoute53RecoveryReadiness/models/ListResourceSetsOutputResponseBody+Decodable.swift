// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourceSetsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let resourceSets: [Route53RecoveryReadinessClientTypes.ResourceSetOutput]?
}

extension ListResourceSetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case resourceSets = "resourceSets"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let resourceSetsContainer = try containerValues.decodeIfPresent([Route53RecoveryReadinessClientTypes.ResourceSetOutput?].self, forKey: .resourceSets)
        var resourceSetsDecoded0:[Route53RecoveryReadinessClientTypes.ResourceSetOutput]? = nil
        if let resourceSetsContainer = resourceSetsContainer {
            resourceSetsDecoded0 = [Route53RecoveryReadinessClientTypes.ResourceSetOutput]()
            for structure0 in resourceSetsContainer {
                if let structure0 = structure0 {
                    resourceSetsDecoded0?.append(structure0)
                }
            }
        }
        resourceSets = resourceSetsDecoded0
    }
}
