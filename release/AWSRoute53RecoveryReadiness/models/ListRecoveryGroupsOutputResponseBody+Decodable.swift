// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecoveryGroupsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let recoveryGroups: [Route53RecoveryReadinessClientTypes.RecoveryGroupOutput]?
}

extension ListRecoveryGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case recoveryGroups = "recoveryGroups"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let recoveryGroupsContainer = try containerValues.decodeIfPresent([Route53RecoveryReadinessClientTypes.RecoveryGroupOutput?].self, forKey: .recoveryGroups)
        var recoveryGroupsDecoded0:[Route53RecoveryReadinessClientTypes.RecoveryGroupOutput]? = nil
        if let recoveryGroupsContainer = recoveryGroupsContainer {
            recoveryGroupsDecoded0 = [Route53RecoveryReadinessClientTypes.RecoveryGroupOutput]()
            for structure0 in recoveryGroupsContainer {
                if let structure0 = structure0 {
                    recoveryGroupsDecoded0?.append(structure0)
                }
            }
        }
        recoveryGroups = recoveryGroupsDecoded0
    }
}
