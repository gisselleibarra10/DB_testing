// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53RecoveryReadinessClientTypes.RuleResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastCheckedTimestamp = "lastCheckedTimestamp"
        case messages = "messages"
        case readiness = "readiness"
        case ruleId = "ruleId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lastCheckedTimestamp = self.lastCheckedTimestamp {
            try encodeContainer.encode(lastCheckedTimestamp.timeIntervalSince1970, forKey: .lastCheckedTimestamp)
        }
        if let messages = messages {
            var messagesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .messages)
            for __listofmessage0 in messages {
                try messagesContainer.encode(__listofmessage0)
            }
        }
        if let readiness = self.readiness {
            try encodeContainer.encode(readiness.rawValue, forKey: .readiness)
        }
        if let ruleId = self.ruleId {
            try encodeContainer.encode(ruleId, forKey: .ruleId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lastCheckedTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastCheckedTimestamp)
        lastCheckedTimestamp = lastCheckedTimestampDecoded
        let messagesContainer = try containerValues.decodeIfPresent([Route53RecoveryReadinessClientTypes.Message?].self, forKey: .messages)
        var messagesDecoded0:[Route53RecoveryReadinessClientTypes.Message]? = nil
        if let messagesContainer = messagesContainer {
            messagesDecoded0 = [Route53RecoveryReadinessClientTypes.Message]()
            for structure0 in messagesContainer {
                if let structure0 = structure0 {
                    messagesDecoded0?.append(structure0)
                }
            }
        }
        messages = messagesDecoded0
        let readinessDecoded = try containerValues.decodeIfPresent(Route53RecoveryReadinessClientTypes.Readiness.self, forKey: .readiness)
        readiness = readinessDecoded
        let ruleIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ruleId)
        ruleId = ruleIdDecoded
    }
}
