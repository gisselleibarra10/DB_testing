// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateReadinessCheckOutputResponseBody: Swift.Equatable {
    let readinessCheckArn: Swift.String?
    let readinessCheckName: Swift.String?
    let resourceSet: Swift.String?
    let tags: [Swift.String:Swift.String]?
}

extension UpdateReadinessCheckOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case readinessCheckArn = "readinessCheckArn"
        case readinessCheckName = "readinessCheckName"
        case resourceSet = "resourceSet"
        case tags = "tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let readinessCheckArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .readinessCheckArn)
        readinessCheckArn = readinessCheckArnDecoded
        let readinessCheckNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .readinessCheckName)
        readinessCheckName = readinessCheckNameDecoded
        let resourceSetDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceSet)
        resourceSet = resourceSetDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, __string0) in tagsContainer {
                if let __string0 = __string0 {
                    tagsDecoded0?[key0] = __string0
                }
            }
        }
        tags = tagsDecoded0
    }
}
