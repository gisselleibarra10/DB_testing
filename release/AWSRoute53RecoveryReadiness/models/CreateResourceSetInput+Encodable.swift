// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateResourceSetInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceSetName = "resourceSetName"
        case resourceSetType = "resourceSetType"
        case resources = "resources"
        case tags = "tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourceSetName = self.resourceSetName {
            try encodeContainer.encode(resourceSetName, forKey: .resourceSetName)
        }
        if let resourceSetType = self.resourceSetType {
            try encodeContainer.encode(resourceSetType, forKey: .resourceSetType)
        }
        if let resources = resources {
            var resourcesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .resources)
            for __listofresource0 in resources {
                try resourcesContainer.encode(__listofresource0)
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, tags0) in tags {
                try tagsContainer.encode(tags0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
