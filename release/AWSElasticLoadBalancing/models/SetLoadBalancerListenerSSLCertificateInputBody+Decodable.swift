// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SetLoadBalancerListenerSSLCertificateInputBody: Swift.Equatable {
    let loadBalancerName: Swift.String?
    let loadBalancerPort: Swift.Int
    let sSLCertificateId: Swift.String?
}

extension SetLoadBalancerListenerSSLCertificateInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case loadBalancerName = "LoadBalancerName"
        case loadBalancerPort = "LoadBalancerPort"
        case sSLCertificateId = "SSLCertificateId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let loadBalancerNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .loadBalancerName)
        loadBalancerName = loadBalancerNameDecoded
        let loadBalancerPortDecoded = try containerValues.decode(Swift.Int.self, forKey: .loadBalancerPort)
        loadBalancerPort = loadBalancerPortDecoded
        let sSLCertificateIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sSLCertificateId)
        sSLCertificateId = sSLCertificateIdDecoded
    }
}
