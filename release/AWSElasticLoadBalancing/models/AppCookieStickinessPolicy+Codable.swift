// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticLoadBalancingClientTypes.AppCookieStickinessPolicy: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cookieName = "CookieName"
        case policyName = "PolicyName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let cookieName = cookieName {
            try container.encode(cookieName, forKey: ClientRuntime.Key("CookieName"))
        }
        if let policyName = policyName {
            try container.encode(policyName, forKey: ClientRuntime.Key("PolicyName"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyName)
        policyName = policyNameDecoded
        let cookieNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cookieName)
        cookieName = cookieNameDecoded
    }
}
