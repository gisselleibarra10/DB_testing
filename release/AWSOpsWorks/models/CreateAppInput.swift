// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAppInput: Swift.Equatable {
    /// A Source object that specifies the app repository.
    public var appSource: OpsWorksClientTypes.Source?
    /// One or more user-defined key/value pairs to be added to the stack attributes.
    public var attributes: [Swift.String:Swift.String]?
    /// The app's data source.
    public var dataSources: [OpsWorksClientTypes.DataSource]?
    /// A description of the app.
    public var description: Swift.String?
    /// The app virtual host settings, with multiple domains separated by commas. For example: 'www.example.com, example.com'
    public var domains: [Swift.String]?
    /// Whether to enable SSL for the app.
    public var enableSsl: Swift.Bool?
    /// An array of EnvironmentVariable objects that specify environment variables to be associated with the app. After you deploy the app, these variables are defined on the associated app server instance. For more information, see [ Environment Variables](https://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html#workingapps-creating-environment). There is no specific limit on the number of environment variables. However, the size of the associated data structure - which includes the variables' names, values, and protected flag values - cannot exceed 20 KB. This limit should accommodate most if not all use cases. Exceeding it will cause an exception with the message, "Environment: is too large (maximum is 20KB)." If you have specified one or more environment variables, you cannot modify the stack's Chef version.
    public var environment: [OpsWorksClientTypes.EnvironmentVariable]?
    /// The app name.
    /// This member is required.
    public var name: Swift.String?
    /// The app's short name.
    public var shortname: Swift.String?
    /// An SslConfiguration object with the SSL configuration.
    public var sslConfiguration: OpsWorksClientTypes.SslConfiguration?
    /// The stack ID.
    /// This member is required.
    public var stackId: Swift.String?
    /// The app type. Each supported type is associated with a particular layer. For example, PHP applications are associated with a PHP layer. AWS OpsWorks Stacks deploys an application to those instances that are members of the corresponding layer. If your app isn't one of the standard types, or you prefer to implement your own Deploy recipes, specify other.
    /// This member is required.
    public var type: OpsWorksClientTypes.AppType?

    public init (
        appSource: OpsWorksClientTypes.Source? = nil,
        attributes: [Swift.String:Swift.String]? = nil,
        dataSources: [OpsWorksClientTypes.DataSource]? = nil,
        description: Swift.String? = nil,
        domains: [Swift.String]? = nil,
        enableSsl: Swift.Bool? = nil,
        environment: [OpsWorksClientTypes.EnvironmentVariable]? = nil,
        name: Swift.String? = nil,
        shortname: Swift.String? = nil,
        sslConfiguration: OpsWorksClientTypes.SslConfiguration? = nil,
        stackId: Swift.String? = nil,
        type: OpsWorksClientTypes.AppType? = nil
    )
    {
        self.appSource = appSource
        self.attributes = attributes
        self.dataSources = dataSources
        self.description = description
        self.domains = domains
        self.enableSsl = enableSsl
        self.environment = environment
        self.name = name
        self.shortname = shortname
        self.sslConfiguration = sslConfiguration
        self.stackId = stackId
        self.type = type
    }
}
