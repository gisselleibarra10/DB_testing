// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension OpsWorksClientTypes {
    public enum LayerType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case awsFlowRuby
        case custom
        case dbMaster
        case ecsCluster
        case javaApp
        case lb
        case memcached
        case monitoringMaster
        case nodejsApp
        case phpApp
        case railsApp
        case web
        case sdkUnknown(Swift.String)

        public static var allCases: [LayerType] {
            return [
                .awsFlowRuby,
                .custom,
                .dbMaster,
                .ecsCluster,
                .javaApp,
                .lb,
                .memcached,
                .monitoringMaster,
                .nodejsApp,
                .phpApp,
                .railsApp,
                .web,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .awsFlowRuby: return "aws-flow-ruby"
            case .custom: return "custom"
            case .dbMaster: return "db-master"
            case .ecsCluster: return "ecs-cluster"
            case .javaApp: return "java-app"
            case .lb: return "lb"
            case .memcached: return "memcached"
            case .monitoringMaster: return "monitoring-master"
            case .nodejsApp: return "nodejs-app"
            case .phpApp: return "php-app"
            case .railsApp: return "rails-app"
            case .web: return "web"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = LayerType(rawValue: rawValue) ?? LayerType.sdkUnknown(rawValue)
        }
    }
}
