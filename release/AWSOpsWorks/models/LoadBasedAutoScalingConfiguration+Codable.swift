// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OpsWorksClientTypes.LoadBasedAutoScalingConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case downScaling = "DownScaling"
        case enable = "Enable"
        case layerId = "LayerId"
        case upScaling = "UpScaling"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let downScaling = self.downScaling {
            try encodeContainer.encode(downScaling, forKey: .downScaling)
        }
        if let enable = self.enable {
            try encodeContainer.encode(enable, forKey: .enable)
        }
        if let layerId = self.layerId {
            try encodeContainer.encode(layerId, forKey: .layerId)
        }
        if let upScaling = self.upScaling {
            try encodeContainer.encode(upScaling, forKey: .upScaling)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let layerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .layerId)
        layerId = layerIdDecoded
        let enableDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enable)
        enable = enableDecoded
        let upScalingDecoded = try containerValues.decodeIfPresent(OpsWorksClientTypes.AutoScalingThresholds.self, forKey: .upScaling)
        upScaling = upScalingDecoded
        let downScalingDecoded = try containerValues.decodeIfPresent(OpsWorksClientTypes.AutoScalingThresholds.self, forKey: .downScaling)
        downScaling = downScalingDecoded
    }
}
