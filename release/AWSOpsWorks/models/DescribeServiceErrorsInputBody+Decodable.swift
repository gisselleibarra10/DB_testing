// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeServiceErrorsInputBody: Swift.Equatable {
    let stackId: Swift.String?
    let instanceId: Swift.String?
    let serviceErrorIds: [Swift.String]?
}

extension DescribeServiceErrorsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case instanceId = "InstanceId"
        case serviceErrorIds = "ServiceErrorIds"
        case stackId = "StackId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stackId)
        stackId = stackIdDecoded
        let instanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let serviceErrorIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .serviceErrorIds)
        var serviceErrorIdsDecoded0:[Swift.String]? = nil
        if let serviceErrorIdsContainer = serviceErrorIdsContainer {
            serviceErrorIdsDecoded0 = [Swift.String]()
            for string0 in serviceErrorIdsContainer {
                if let string0 = string0 {
                    serviceErrorIdsDecoded0?.append(string0)
                }
            }
        }
        serviceErrorIds = serviceErrorIdsDecoded0
    }
}
