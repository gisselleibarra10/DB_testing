// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEcsClustersOutputResponseBody: Swift.Equatable {
    let ecsClusters: [OpsWorksClientTypes.EcsCluster]?
    let nextToken: Swift.String?
}

extension DescribeEcsClustersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ecsClusters = "EcsClusters"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ecsClustersContainer = try containerValues.decodeIfPresent([OpsWorksClientTypes.EcsCluster?].self, forKey: .ecsClusters)
        var ecsClustersDecoded0:[OpsWorksClientTypes.EcsCluster]? = nil
        if let ecsClustersContainer = ecsClustersContainer {
            ecsClustersDecoded0 = [OpsWorksClientTypes.EcsCluster]()
            for structure0 in ecsClustersContainer {
                if let structure0 = structure0 {
                    ecsClustersDecoded0?.append(structure0)
                }
            }
        }
        ecsClusters = ecsClustersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
