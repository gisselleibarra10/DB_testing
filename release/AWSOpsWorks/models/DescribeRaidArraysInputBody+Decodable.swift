// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRaidArraysInputBody: Swift.Equatable {
    let instanceId: Swift.String?
    let stackId: Swift.String?
    let raidArrayIds: [Swift.String]?
}

extension DescribeRaidArraysInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case instanceId = "InstanceId"
        case raidArrayIds = "RaidArrayIds"
        case stackId = "StackId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let stackIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stackId)
        stackId = stackIdDecoded
        let raidArrayIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .raidArrayIds)
        var raidArrayIdsDecoded0:[Swift.String]? = nil
        if let raidArrayIdsContainer = raidArrayIdsContainer {
            raidArrayIdsDecoded0 = [Swift.String]()
            for string0 in raidArrayIdsContainer {
                if let string0 = string0 {
                    raidArrayIdsDecoded0?.append(string0)
                }
            }
        }
        raidArrayIds = raidArrayIdsDecoded0
    }
}
