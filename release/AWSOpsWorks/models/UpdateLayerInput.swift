// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateLayerInput: Swift.Equatable {
    /// One or more user-defined key/value pairs to be added to the stack attributes.
    public var attributes: [Swift.String:Swift.String]?
    /// Whether to automatically assign an [Elastic IP address](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) to the layer's instances. For more information, see [How to Edit a Layer](https://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-edit.html).
    public var autoAssignElasticIps: Swift.Bool?
    /// For stacks that are running in a VPC, whether to automatically assign a public IP address to the layer's instances. For more information, see [How to Edit a Layer](https://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-edit.html).
    public var autoAssignPublicIps: Swift.Bool?
    /// Specifies CloudWatch Logs configuration options for the layer. For more information, see [CloudWatchLogsLogStream].
    public var cloudWatchLogsConfiguration: OpsWorksClientTypes.CloudWatchLogsConfiguration?
    /// The ARN of an IAM profile to be used for all of the layer's EC2 instances. For more information about IAM ARNs, see [Using Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
    public var customInstanceProfileArn: Swift.String?
    /// A JSON-formatted string containing custom stack configuration and deployment attributes to be installed on the layer's instances. For more information, see [ Using Custom JSON](https://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook-json-override.html).
    public var customJson: Swift.String?
    /// A LayerCustomRecipes object that specifies the layer's custom recipes.
    public var customRecipes: OpsWorksClientTypes.Recipes?
    /// An array containing the layer's custom security group IDs.
    public var customSecurityGroupIds: [Swift.String]?
    /// Whether to disable auto healing for the layer.
    public var enableAutoHealing: Swift.Bool?
    /// Whether to install operating system and package updates when the instance boots. The default value is true. To control when updates are installed, set this value to false. You must then update your instances manually by using [CreateDeployment] to run the update_dependencies stack command or manually running yum (Amazon Linux) or apt-get (Ubuntu) on the instances. We strongly recommend using the default value of true, to ensure that your instances have the latest security updates.
    public var installUpdatesOnBoot: Swift.Bool?
    /// The layer ID.
    /// This member is required.
    public var layerId: Swift.String?
    ///
    public var lifecycleEventConfiguration: OpsWorksClientTypes.LifecycleEventConfiguration?
    /// The layer name, which is used by the console.
    public var name: Swift.String?
    /// An array of Package objects that describe the layer's packages.
    public var packages: [Swift.String]?
    /// For custom layers only, use this parameter to specify the layer's short name, which is used internally by AWS OpsWorks Stacks and by Chef. The short name is also used as the name for the directory where your app files are installed. It can have a maximum of 200 characters and must be in the following format: /\A[a-z0-9\-\_\.]+\Z/. The built-in layers' short names are defined by AWS OpsWorks Stacks. For more information, see the [Layer Reference](https://docs.aws.amazon.com/opsworks/latest/userguide/layers.html)
    public var shortname: Swift.String?
    /// Whether to use Amazon EBS-optimized instances.
    public var useEbsOptimizedInstances: Swift.Bool?
    /// A VolumeConfigurations object that describes the layer's Amazon EBS volumes.
    public var volumeConfigurations: [OpsWorksClientTypes.VolumeConfiguration]?

    public init (
        attributes: [Swift.String:Swift.String]? = nil,
        autoAssignElasticIps: Swift.Bool? = nil,
        autoAssignPublicIps: Swift.Bool? = nil,
        cloudWatchLogsConfiguration: OpsWorksClientTypes.CloudWatchLogsConfiguration? = nil,
        customInstanceProfileArn: Swift.String? = nil,
        customJson: Swift.String? = nil,
        customRecipes: OpsWorksClientTypes.Recipes? = nil,
        customSecurityGroupIds: [Swift.String]? = nil,
        enableAutoHealing: Swift.Bool? = nil,
        installUpdatesOnBoot: Swift.Bool? = nil,
        layerId: Swift.String? = nil,
        lifecycleEventConfiguration: OpsWorksClientTypes.LifecycleEventConfiguration? = nil,
        name: Swift.String? = nil,
        packages: [Swift.String]? = nil,
        shortname: Swift.String? = nil,
        useEbsOptimizedInstances: Swift.Bool? = nil,
        volumeConfigurations: [OpsWorksClientTypes.VolumeConfiguration]? = nil
    )
    {
        self.attributes = attributes
        self.autoAssignElasticIps = autoAssignElasticIps
        self.autoAssignPublicIps = autoAssignPublicIps
        self.cloudWatchLogsConfiguration = cloudWatchLogsConfiguration
        self.customInstanceProfileArn = customInstanceProfileArn
        self.customJson = customJson
        self.customRecipes = customRecipes
        self.customSecurityGroupIds = customSecurityGroupIds
        self.enableAutoHealing = enableAutoHealing
        self.installUpdatesOnBoot = installUpdatesOnBoot
        self.layerId = layerId
        self.lifecycleEventConfiguration = lifecycleEventConfiguration
        self.name = name
        self.packages = packages
        self.shortname = shortname
        self.useEbsOptimizedInstances = useEbsOptimizedInstances
        self.volumeConfigurations = volumeConfigurations
    }
}
