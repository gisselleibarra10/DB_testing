// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterInstanceInputBody: Swift.Equatable {
    let stackId: Swift.String?
    let hostname: Swift.String?
    let publicIp: Swift.String?
    let privateIp: Swift.String?
    let rsaPublicKey: Swift.String?
    let rsaPublicKeyFingerprint: Swift.String?
    let instanceIdentity: OpsWorksClientTypes.InstanceIdentity?
}

extension RegisterInstanceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hostname = "Hostname"
        case instanceIdentity = "InstanceIdentity"
        case privateIp = "PrivateIp"
        case publicIp = "PublicIp"
        case rsaPublicKey = "RsaPublicKey"
        case rsaPublicKeyFingerprint = "RsaPublicKeyFingerprint"
        case stackId = "StackId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stackId)
        stackId = stackIdDecoded
        let hostnameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hostname)
        hostname = hostnameDecoded
        let publicIpDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publicIp)
        publicIp = publicIpDecoded
        let privateIpDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .privateIp)
        privateIp = privateIpDecoded
        let rsaPublicKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rsaPublicKey)
        rsaPublicKey = rsaPublicKeyDecoded
        let rsaPublicKeyFingerprintDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rsaPublicKeyFingerprint)
        rsaPublicKeyFingerprint = rsaPublicKeyFingerprintDecoded
        let instanceIdentityDecoded = try containerValues.decodeIfPresent(OpsWorksClientTypes.InstanceIdentity.self, forKey: .instanceIdentity)
        instanceIdentity = instanceIdentityDecoded
    }
}
