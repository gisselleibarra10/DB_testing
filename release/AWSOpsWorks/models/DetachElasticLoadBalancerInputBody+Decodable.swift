// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetachElasticLoadBalancerInputBody: Swift.Equatable {
    let elasticLoadBalancerName: Swift.String?
    let layerId: Swift.String?
}

extension DetachElasticLoadBalancerInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case elasticLoadBalancerName = "ElasticLoadBalancerName"
        case layerId = "LayerId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let elasticLoadBalancerNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .elasticLoadBalancerName)
        elasticLoadBalancerName = elasticLoadBalancerNameDecoded
        let layerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .layerId)
        layerId = layerIdDecoded
    }
}
