// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension OpsWorksClientTypes {
    /// A description of the app.
    public struct App: Swift.Equatable {
        /// The app ID.
        public var appId: Swift.String?
        /// A Source object that describes the app repository.
        public var appSource: OpsWorksClientTypes.Source?
        /// The stack attributes.
        public var attributes: [Swift.String:Swift.String]?
        /// When the app was created.
        public var createdAt: Swift.String?
        /// The app's data sources.
        public var dataSources: [OpsWorksClientTypes.DataSource]?
        /// A description of the app.
        public var description: Swift.String?
        /// The app vhost settings with multiple domains separated by commas. For example: 'www.example.com, example.com'
        public var domains: [Swift.String]?
        /// Whether to enable SSL for the app.
        public var enableSsl: Swift.Bool?
        /// An array of EnvironmentVariable objects that specify environment variables to be associated with the app. After you deploy the app, these variables are defined on the associated app server instances. For more information, see [ Environment Variables](https://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html#workingapps-creating-environment). There is no specific limit on the number of environment variables. However, the size of the associated data structure - which includes the variable names, values, and protected flag values - cannot exceed 20 KB. This limit should accommodate most if not all use cases, but if you do exceed it, you will cause an exception (API) with an "Environment: is too large (maximum is 20 KB)" message.
        public var environment: [OpsWorksClientTypes.EnvironmentVariable]?
        /// The app name.
        public var name: Swift.String?
        /// The app's short name.
        public var shortname: Swift.String?
        /// An SslConfiguration object with the SSL configuration.
        public var sslConfiguration: OpsWorksClientTypes.SslConfiguration?
        /// The app stack ID.
        public var stackId: Swift.String?
        /// The app type.
        public var type: OpsWorksClientTypes.AppType?

        public init (
            appId: Swift.String? = nil,
            appSource: OpsWorksClientTypes.Source? = nil,
            attributes: [Swift.String:Swift.String]? = nil,
            createdAt: Swift.String? = nil,
            dataSources: [OpsWorksClientTypes.DataSource]? = nil,
            description: Swift.String? = nil,
            domains: [Swift.String]? = nil,
            enableSsl: Swift.Bool? = nil,
            environment: [OpsWorksClientTypes.EnvironmentVariable]? = nil,
            name: Swift.String? = nil,
            shortname: Swift.String? = nil,
            sslConfiguration: OpsWorksClientTypes.SslConfiguration? = nil,
            stackId: Swift.String? = nil,
            type: OpsWorksClientTypes.AppType? = nil
        )
        {
            self.appId = appId
            self.appSource = appSource
            self.attributes = attributes
            self.createdAt = createdAt
            self.dataSources = dataSources
            self.description = description
            self.domains = domains
            self.enableSsl = enableSsl
            self.environment = environment
            self.name = name
            self.shortname = shortname
            self.sslConfiguration = sslConfiguration
            self.stackId = stackId
            self.type = type
        }
    }

}
