// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateUserProfileInputBody: Swift.Equatable {
    let iamUserArn: Swift.String?
    let sshUsername: Swift.String?
    let sshPublicKey: Swift.String?
    let allowSelfManagement: Swift.Bool?
}

extension CreateUserProfileInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowSelfManagement = "AllowSelfManagement"
        case iamUserArn = "IamUserArn"
        case sshPublicKey = "SshPublicKey"
        case sshUsername = "SshUsername"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iamUserArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .iamUserArn)
        iamUserArn = iamUserArnDecoded
        let sshUsernameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sshUsername)
        sshUsername = sshUsernameDecoded
        let sshPublicKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sshPublicKey)
        sshPublicKey = sshPublicKeyDecoded
        let allowSelfManagementDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .allowSelfManagement)
        allowSelfManagement = allowSelfManagementDecoded
    }
}
