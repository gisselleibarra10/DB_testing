// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OpsWorksClientTypes.EcsCluster: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ecsClusterArn = "EcsClusterArn"
        case ecsClusterName = "EcsClusterName"
        case registeredAt = "RegisteredAt"
        case stackId = "StackId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ecsClusterArn = self.ecsClusterArn {
            try encodeContainer.encode(ecsClusterArn, forKey: .ecsClusterArn)
        }
        if let ecsClusterName = self.ecsClusterName {
            try encodeContainer.encode(ecsClusterName, forKey: .ecsClusterName)
        }
        if let registeredAt = self.registeredAt {
            try encodeContainer.encode(registeredAt, forKey: .registeredAt)
        }
        if let stackId = self.stackId {
            try encodeContainer.encode(stackId, forKey: .stackId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ecsClusterArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ecsClusterArn)
        ecsClusterArn = ecsClusterArnDecoded
        let ecsClusterNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ecsClusterName)
        ecsClusterName = ecsClusterNameDecoded
        let stackIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stackId)
        stackId = stackIdDecoded
        let registeredAtDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .registeredAt)
        registeredAt = registeredAtDecoded
    }
}
