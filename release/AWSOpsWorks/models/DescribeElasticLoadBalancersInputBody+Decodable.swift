// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeElasticLoadBalancersInputBody: Swift.Equatable {
    let stackId: Swift.String?
    let layerIds: [Swift.String]?
}

extension DescribeElasticLoadBalancersInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case layerIds = "LayerIds"
        case stackId = "StackId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stackId)
        stackId = stackIdDecoded
        let layerIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .layerIds)
        var layerIdsDecoded0:[Swift.String]? = nil
        if let layerIdsContainer = layerIdsContainer {
            layerIdsDecoded0 = [Swift.String]()
            for string0 in layerIdsContainer {
                if let string0 = string0 {
                    layerIdsDecoded0?.append(string0)
                }
            }
        }
        layerIds = layerIdsDecoded0
    }
}
