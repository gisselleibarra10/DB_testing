// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension OpsWorksClientTypes {
    /// Contains the information required to retrieve an app or cookbook from a repository. For more information, see [Creating Apps](https://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html) or [Custom Recipes and Cookbooks](https://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html).
    public struct Source: Swift.Equatable {
        /// When included in a request, the parameter depends on the repository type.
        ///
        /// * For Amazon S3 bundles, set Password to the appropriate IAM secret access key.
        ///
        /// * For HTTP bundles and Subversion repositories, set Password to the password.
        ///
        ///
        /// For more information on how to safely handle IAM credentials, see [https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html](https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html). In responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.
        public var password: Swift.String?
        /// The application's version. AWS OpsWorks Stacks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.
        public var revision: Swift.String?
        /// In requests, the repository's SSH key. In responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.
        public var sshKey: Swift.String?
        /// The repository type.
        public var type: OpsWorksClientTypes.SourceType?
        /// The source URL. The following is an example of an Amazon S3 source URL: https://s3.amazonaws.com/opsworks-demo-bucket/opsworks_cookbook_demo.tar.gz.
        public var url: Swift.String?
        /// This parameter depends on the repository type.
        ///
        /// * For Amazon S3 bundles, set Username to the appropriate IAM access key ID.
        ///
        /// * For HTTP bundles, Git repositories, and Subversion repositories, set Username to the user name.
        public var username: Swift.String?

        public init (
            password: Swift.String? = nil,
            revision: Swift.String? = nil,
            sshKey: Swift.String? = nil,
            type: OpsWorksClientTypes.SourceType? = nil,
            url: Swift.String? = nil,
            username: Swift.String? = nil
        )
        {
            self.password = password
            self.revision = revision
            self.sshKey = sshKey
            self.type = type
            self.url = url
            self.username = username
        }
    }

}
