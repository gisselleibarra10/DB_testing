// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension OpsWorksClientTypes {
    /// Describes an instance.
    public struct Instance: Swift.Equatable {
        /// The agent version. This parameter is set to INHERIT if the instance inherits the default stack setting or to a a version number for a fixed agent version.
        public var agentVersion: Swift.String?
        /// A custom AMI ID to be used to create the instance. For more information, see [Instances](https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html)
        public var amiId: Swift.String?
        /// The instance architecture: "i386" or "x86_64".
        public var architecture: OpsWorksClientTypes.Architecture?
        /// The instance's Amazon Resource Number (ARN).
        public var arn: Swift.String?
        /// For load-based or time-based instances, the type.
        public var autoScalingType: OpsWorksClientTypes.AutoScalingType?
        /// The instance Availability Zone. For more information, see [Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html).
        public var availabilityZone: Swift.String?
        /// An array of BlockDeviceMapping objects that specify the instance's block device mappings.
        public var blockDeviceMappings: [OpsWorksClientTypes.BlockDeviceMapping]?
        /// The time that the instance was created.
        public var createdAt: Swift.String?
        /// Whether this is an Amazon EBS-optimized instance.
        public var ebsOptimized: Swift.Bool?
        /// The ID of the associated Amazon EC2 instance.
        public var ec2InstanceId: Swift.String?
        /// For container instances, the Amazon ECS cluster's ARN.
        public var ecsClusterArn: Swift.String?
        /// For container instances, the instance's ARN.
        public var ecsContainerInstanceArn: Swift.String?
        /// The instance [Elastic IP address ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html).
        public var elasticIp: Swift.String?
        /// The instance host name.
        public var hostname: Swift.String?
        /// For registered instances, the infrastructure class: ec2 or on-premises.
        public var infrastructureClass: Swift.String?
        /// Whether to install operating system and package updates when the instance boots. The default value is true. If this value is set to false, you must then update your instances manually by using [CreateDeployment] to run the update_dependencies stack command or by manually running yum (Amazon Linux) or apt-get (Ubuntu) on the instances. We strongly recommend using the default value of true, to ensure that your instances have the latest security updates.
        public var installUpdatesOnBoot: Swift.Bool?
        /// The instance ID.
        public var instanceId: Swift.String?
        /// The ARN of the instance's IAM profile. For more information about IAM ARNs, see [Using Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
        public var instanceProfileArn: Swift.String?
        /// The instance type, such as t2.micro.
        public var instanceType: Swift.String?
        /// The ID of the last service error. For more information, call [DescribeServiceErrors].
        public var lastServiceErrorId: Swift.String?
        /// An array containing the instance layer IDs.
        public var layerIds: [Swift.String]?
        /// The instance's operating system.
        public var os: Swift.String?
        /// The instance's platform.
        public var platform: Swift.String?
        /// The instance's private DNS name.
        public var privateDns: Swift.String?
        /// The instance's private IP address.
        public var privateIp: Swift.String?
        /// The instance public DNS name.
        public var publicDns: Swift.String?
        /// The instance public IP address.
        public var publicIp: Swift.String?
        /// For registered instances, who performed the registration.
        public var registeredBy: Swift.String?
        /// The instance's reported AWS OpsWorks Stacks agent version.
        public var reportedAgentVersion: Swift.String?
        /// For registered instances, the reported operating system.
        public var reportedOs: OpsWorksClientTypes.ReportedOs?
        /// The instance's root device type. For more information, see [Storage for the Root Device](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device).
        public var rootDeviceType: OpsWorksClientTypes.RootDeviceType?
        /// The root device volume ID.
        public var rootDeviceVolumeId: Swift.String?
        /// An array containing the instance security group IDs.
        public var securityGroupIds: [Swift.String]?
        /// The SSH key's Deep Security Agent (DSA) fingerprint.
        public var sshHostDsaKeyFingerprint: Swift.String?
        /// The SSH key's RSA fingerprint.
        public var sshHostRsaKeyFingerprint: Swift.String?
        /// The instance's Amazon EC2 key-pair name.
        public var sshKeyName: Swift.String?
        /// The stack ID.
        public var stackId: Swift.String?
        /// The instance status:
        ///
        /// * booting
        ///
        /// * connection_lost
        ///
        /// * online
        ///
        /// * pending
        ///
        /// * rebooting
        ///
        /// * requested
        ///
        /// * running_setup
        ///
        /// * setup_failed
        ///
        /// * shutting_down
        ///
        /// * start_failed
        ///
        /// * stop_failed
        ///
        /// * stopped
        ///
        /// * stopping
        ///
        /// * terminated
        ///
        /// * terminating
        public var status: Swift.String?
        /// The instance's subnet ID; applicable only if the stack is running in a VPC.
        public var subnetId: Swift.String?
        /// The instance's tenancy option, such as dedicated or host.
        public var tenancy: Swift.String?
        /// The instance's virtualization type: paravirtual or hvm.
        public var virtualizationType: OpsWorksClientTypes.VirtualizationType?

        public init (
            agentVersion: Swift.String? = nil,
            amiId: Swift.String? = nil,
            architecture: OpsWorksClientTypes.Architecture? = nil,
            arn: Swift.String? = nil,
            autoScalingType: OpsWorksClientTypes.AutoScalingType? = nil,
            availabilityZone: Swift.String? = nil,
            blockDeviceMappings: [OpsWorksClientTypes.BlockDeviceMapping]? = nil,
            createdAt: Swift.String? = nil,
            ebsOptimized: Swift.Bool? = nil,
            ec2InstanceId: Swift.String? = nil,
            ecsClusterArn: Swift.String? = nil,
            ecsContainerInstanceArn: Swift.String? = nil,
            elasticIp: Swift.String? = nil,
            hostname: Swift.String? = nil,
            infrastructureClass: Swift.String? = nil,
            installUpdatesOnBoot: Swift.Bool? = nil,
            instanceId: Swift.String? = nil,
            instanceProfileArn: Swift.String? = nil,
            instanceType: Swift.String? = nil,
            lastServiceErrorId: Swift.String? = nil,
            layerIds: [Swift.String]? = nil,
            os: Swift.String? = nil,
            platform: Swift.String? = nil,
            privateDns: Swift.String? = nil,
            privateIp: Swift.String? = nil,
            publicDns: Swift.String? = nil,
            publicIp: Swift.String? = nil,
            registeredBy: Swift.String? = nil,
            reportedAgentVersion: Swift.String? = nil,
            reportedOs: OpsWorksClientTypes.ReportedOs? = nil,
            rootDeviceType: OpsWorksClientTypes.RootDeviceType? = nil,
            rootDeviceVolumeId: Swift.String? = nil,
            securityGroupIds: [Swift.String]? = nil,
            sshHostDsaKeyFingerprint: Swift.String? = nil,
            sshHostRsaKeyFingerprint: Swift.String? = nil,
            sshKeyName: Swift.String? = nil,
            stackId: Swift.String? = nil,
            status: Swift.String? = nil,
            subnetId: Swift.String? = nil,
            tenancy: Swift.String? = nil,
            virtualizationType: OpsWorksClientTypes.VirtualizationType? = nil
        )
        {
            self.agentVersion = agentVersion
            self.amiId = amiId
            self.architecture = architecture
            self.arn = arn
            self.autoScalingType = autoScalingType
            self.availabilityZone = availabilityZone
            self.blockDeviceMappings = blockDeviceMappings
            self.createdAt = createdAt
            self.ebsOptimized = ebsOptimized
            self.ec2InstanceId = ec2InstanceId
            self.ecsClusterArn = ecsClusterArn
            self.ecsContainerInstanceArn = ecsContainerInstanceArn
            self.elasticIp = elasticIp
            self.hostname = hostname
            self.infrastructureClass = infrastructureClass
            self.installUpdatesOnBoot = installUpdatesOnBoot
            self.instanceId = instanceId
            self.instanceProfileArn = instanceProfileArn
            self.instanceType = instanceType
            self.lastServiceErrorId = lastServiceErrorId
            self.layerIds = layerIds
            self.os = os
            self.platform = platform
            self.privateDns = privateDns
            self.privateIp = privateIp
            self.publicDns = publicDns
            self.publicIp = publicIp
            self.registeredBy = registeredBy
            self.reportedAgentVersion = reportedAgentVersion
            self.reportedOs = reportedOs
            self.rootDeviceType = rootDeviceType
            self.rootDeviceVolumeId = rootDeviceVolumeId
            self.securityGroupIds = securityGroupIds
            self.sshHostDsaKeyFingerprint = sshHostDsaKeyFingerprint
            self.sshHostRsaKeyFingerprint = sshHostRsaKeyFingerprint
            self.sshKeyName = sshKeyName
            self.stackId = stackId
            self.status = status
            self.subnetId = subnetId
            self.tenancy = tenancy
            self.virtualizationType = virtualizationType
        }
    }

}
