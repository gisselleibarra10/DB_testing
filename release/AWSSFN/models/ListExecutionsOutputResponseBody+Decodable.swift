// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListExecutionsOutputResponseBody: Swift.Equatable {
    let executions: [SfnClientTypes.ExecutionListItem]?
    let nextToken: Swift.String?
}

extension ListExecutionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case executions
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionsContainer = try containerValues.decodeIfPresent([SfnClientTypes.ExecutionListItem?].self, forKey: .executions)
        var executionsDecoded0:[SfnClientTypes.ExecutionListItem]? = nil
        if let executionsContainer = executionsContainer {
            executionsDecoded0 = [SfnClientTypes.ExecutionListItem]()
            for structure0 in executionsContainer {
                if let structure0 = structure0 {
                    executionsDecoded0?.append(structure0)
                }
            }
        }
        executions = executionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
