// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeExecutionOutputResponseBody: Swift.Equatable {
    let executionArn: Swift.String?
    let stateMachineArn: Swift.String?
    let name: Swift.String?
    let status: SfnClientTypes.ExecutionStatus?
    let startDate: ClientRuntime.Date?
    let stopDate: ClientRuntime.Date?
    let input: Swift.String?
    let inputDetails: SfnClientTypes.CloudWatchEventsExecutionDataDetails?
    let output: Swift.String?
    let outputDetails: SfnClientTypes.CloudWatchEventsExecutionDataDetails?
    let traceHeader: Swift.String?
}

extension DescribeExecutionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case executionArn
        case input
        case inputDetails
        case name
        case output
        case outputDetails
        case startDate
        case stateMachineArn
        case status
        case stopDate
        case traceHeader
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executionArn)
        executionArn = executionArnDecoded
        let stateMachineArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stateMachineArn)
        stateMachineArn = stateMachineArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SfnClientTypes.ExecutionStatus.self, forKey: .status)
        status = statusDecoded
        let startDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startDate)
        startDate = startDateDecoded
        let stopDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .stopDate)
        stopDate = stopDateDecoded
        let inputDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .input)
        input = inputDecoded
        let inputDetailsDecoded = try containerValues.decodeIfPresent(SfnClientTypes.CloudWatchEventsExecutionDataDetails.self, forKey: .inputDetails)
        inputDetails = inputDetailsDecoded
        let outputDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .output)
        output = outputDecoded
        let outputDetailsDecoded = try containerValues.decodeIfPresent(SfnClientTypes.CloudWatchEventsExecutionDataDetails.self, forKey: .outputDetails)
        outputDetails = outputDetailsDecoded
        let traceHeaderDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .traceHeader)
        traceHeader = traceHeaderDecoded
    }
}
