// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeStateMachineOutputResponseBody: Swift.Equatable {
    let stateMachineArn: Swift.String?
    let name: Swift.String?
    let status: SfnClientTypes.StateMachineStatus?
    let definition: Swift.String?
    let roleArn: Swift.String?
    let type: SfnClientTypes.StateMachineType?
    let creationDate: ClientRuntime.Date?
    let loggingConfiguration: SfnClientTypes.LoggingConfiguration?
    let tracingConfiguration: SfnClientTypes.TracingConfiguration?
}

extension DescribeStateMachineOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationDate
        case definition
        case loggingConfiguration
        case name
        case roleArn
        case stateMachineArn
        case status
        case tracingConfiguration
        case type
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateMachineArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stateMachineArn)
        stateMachineArn = stateMachineArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SfnClientTypes.StateMachineStatus.self, forKey: .status)
        status = statusDecoded
        let definitionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .definition)
        definition = definitionDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let typeDecoded = try containerValues.decodeIfPresent(SfnClientTypes.StateMachineType.self, forKey: .type)
        type = typeDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let loggingConfigurationDecoded = try containerValues.decodeIfPresent(SfnClientTypes.LoggingConfiguration.self, forKey: .loggingConfiguration)
        loggingConfiguration = loggingConfigurationDecoded
        let tracingConfigurationDecoded = try containerValues.decodeIfPresent(SfnClientTypes.TracingConfiguration.self, forKey: .tracingConfiguration)
        tracingConfiguration = tracingConfigurationDecoded
    }
}
