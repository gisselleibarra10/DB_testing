// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartSyncExecutionOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: StartSyncExecutionOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.billingDetails = output.billingDetails
            self.cause = output.cause
            self.error = output.error
            self.executionArn = output.executionArn
            self.input = output.input
            self.inputDetails = output.inputDetails
            self.name = output.name
            self.output = output.output
            self.outputDetails = output.outputDetails
            self.startDate = output.startDate
            self.stateMachineArn = output.stateMachineArn
            self.status = output.status
            self.stopDate = output.stopDate
            self.traceHeader = output.traceHeader
        } else {
            self.billingDetails = nil
            self.cause = nil
            self.error = nil
            self.executionArn = nil
            self.input = nil
            self.inputDetails = nil
            self.name = nil
            self.output = nil
            self.outputDetails = nil
            self.startDate = nil
            self.stateMachineArn = nil
            self.status = nil
            self.stopDate = nil
            self.traceHeader = nil
        }
    }
}
