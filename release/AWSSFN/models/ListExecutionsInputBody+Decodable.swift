// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListExecutionsInputBody: Swift.Equatable {
    let stateMachineArn: Swift.String?
    let statusFilter: SfnClientTypes.ExecutionStatus?
    let maxResults: Swift.Int
    let nextToken: Swift.String?
}

extension ListExecutionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults
        case nextToken
        case stateMachineArn
        case statusFilter
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateMachineArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stateMachineArn)
        stateMachineArn = stateMachineArnDecoded
        let statusFilterDecoded = try containerValues.decodeIfPresent(SfnClientTypes.ExecutionStatus.self, forKey: .statusFilter)
        statusFilter = statusFilterDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults) ?? 0
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
