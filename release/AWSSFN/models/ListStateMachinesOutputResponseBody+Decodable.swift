// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStateMachinesOutputResponseBody: Swift.Equatable {
    let stateMachines: [SfnClientTypes.StateMachineListItem]?
    let nextToken: Swift.String?
}

extension ListStateMachinesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case stateMachines
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateMachinesContainer = try containerValues.decodeIfPresent([SfnClientTypes.StateMachineListItem?].self, forKey: .stateMachines)
        var stateMachinesDecoded0:[SfnClientTypes.StateMachineListItem]? = nil
        if let stateMachinesContainer = stateMachinesContainer {
            stateMachinesDecoded0 = [SfnClientTypes.StateMachineListItem]()
            for structure0 in stateMachinesContainer {
                if let structure0 = structure0 {
                    stateMachinesDecoded0?.append(structure0)
                }
            }
        }
        stateMachines = stateMachinesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
