// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateStateMachineInputBody: Swift.Equatable {
    let stateMachineArn: Swift.String?
    let definition: Swift.String?
    let roleArn: Swift.String?
    let loggingConfiguration: SfnClientTypes.LoggingConfiguration?
    let tracingConfiguration: SfnClientTypes.TracingConfiguration?
}

extension UpdateStateMachineInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case definition
        case loggingConfiguration
        case roleArn
        case stateMachineArn
        case tracingConfiguration
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateMachineArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stateMachineArn)
        stateMachineArn = stateMachineArnDecoded
        let definitionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .definition)
        definition = definitionDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let loggingConfigurationDecoded = try containerValues.decodeIfPresent(SfnClientTypes.LoggingConfiguration.self, forKey: .loggingConfiguration)
        loggingConfiguration = loggingConfigurationDecoded
        let tracingConfigurationDecoded = try containerValues.decodeIfPresent(SfnClientTypes.TracingConfiguration.self, forKey: .tracingConfiguration)
        tracingConfiguration = tracingConfigurationDecoded
    }
}
