// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListActivitiesOutputResponseBody: Swift.Equatable {
    let activities: [SfnClientTypes.ActivityListItem]?
    let nextToken: Swift.String?
}

extension ListActivitiesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activities
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activitiesContainer = try containerValues.decodeIfPresent([SfnClientTypes.ActivityListItem?].self, forKey: .activities)
        var activitiesDecoded0:[SfnClientTypes.ActivityListItem]? = nil
        if let activitiesContainer = activitiesContainer {
            activitiesDecoded0 = [SfnClientTypes.ActivityListItem]()
            for structure0 in activitiesContainer {
                if let structure0 = structure0 {
                    activitiesDecoded0?.append(structure0)
                }
            }
        }
        activities = activitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
