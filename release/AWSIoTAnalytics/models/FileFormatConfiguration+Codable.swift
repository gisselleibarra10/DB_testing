// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTAnalyticsClientTypes.FileFormatConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jsonConfiguration
        case parquetConfiguration
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let jsonConfiguration = self.jsonConfiguration {
            try encodeContainer.encode(jsonConfiguration, forKey: .jsonConfiguration)
        }
        if let parquetConfiguration = self.parquetConfiguration {
            try encodeContainer.encode(parquetConfiguration, forKey: .parquetConfiguration)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jsonConfigurationDecoded = try containerValues.decodeIfPresent(IoTAnalyticsClientTypes.JsonConfiguration.self, forKey: .jsonConfiguration)
        jsonConfiguration = jsonConfigurationDecoded
        let parquetConfigurationDecoded = try containerValues.decodeIfPresent(IoTAnalyticsClientTypes.ParquetConfiguration.self, forKey: .parquetConfiguration)
        parquetConfiguration = parquetConfigurationDecoded
    }
}
