// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IoTAnalyticsClientTypes {
    /// Configuration information for delivery of dataset contents to Amazon Simple Storage Service (Amazon S3).
    public struct S3DestinationConfiguration: Swift.Equatable {
        /// The name of the S3 bucket to which dataset contents are delivered.
        /// This member is required.
        public var bucket: Swift.String?
        /// Configuration information for coordination with Glue, a fully managed extract, transform and load (ETL) service.
        public var glueConfiguration: IoTAnalyticsClientTypes.GlueConfiguration?
        /// The key of the dataset contents object in an S3 bucket. Each object has a key that is a unique identifier. Each object has exactly one key. You can create a unique key with the following options:
        ///
        /// * Use !{iotanalytics:scheduleTime} to insert the time of a scheduled SQL query run.
        ///
        /// * Use !{iotanalytics:versionId} to insert a unique hash that identifies a dataset content.
        ///
        /// * Use !{iotanalytics:creationTime} to insert the creation time of a dataset content.
        ///
        ///
        /// The following example creates a unique key for a CSV file: dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv If you don't use !{iotanalytics:versionId} to specify the key, you might get duplicate keys. For example, you might have two dataset contents with the same scheduleTime but different versionIds. This means that one dataset content overwrites the other.
        /// This member is required.
        public var key: Swift.String?
        /// The ARN of the role that grants IoT Analytics permission to interact with your Amazon S3 and Glue resources.
        /// This member is required.
        public var roleArn: Swift.String?

        public init (
            bucket: Swift.String? = nil,
            glueConfiguration: IoTAnalyticsClientTypes.GlueConfiguration? = nil,
            key: Swift.String? = nil,
            roleArn: Swift.String? = nil
        )
        {
            self.bucket = bucket
            self.glueConfiguration = glueConfiguration
            self.key = key
            self.roleArn = roleArn
        }
    }

}
