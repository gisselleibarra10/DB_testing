// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTAnalyticsClientTypes {
    /// A summary of information about a data store.
    public struct DatastoreSummary: Swift.Equatable {
        /// When the data store was created.
        public var creationTime: ClientRuntime.Date?
        /// The name of the data store.
        public var datastoreName: Swift.String?
        /// Contains information about the partition dimensions in a data store.
        public var datastorePartitions: IoTAnalyticsClientTypes.DatastorePartitions?
        /// Where data in a data store is stored.
        public var datastoreStorage: IoTAnalyticsClientTypes.DatastoreStorageSummary?
        /// The file format of the data in the data store.
        public var fileFormatType: IoTAnalyticsClientTypes.FileFormatType?
        /// The last time when a new message arrived in the data store. IoT Analytics updates this value at most once per minute for Amazon Simple Storage Service one data store. Hence, the lastMessageArrivalTime value is an approximation. This feature only applies to messages that arrived in the data store after October 23, 2020.
        public var lastMessageArrivalTime: ClientRuntime.Date?
        /// The last time the data store was updated.
        public var lastUpdateTime: ClientRuntime.Date?
        /// The status of the data store.
        public var status: IoTAnalyticsClientTypes.DatastoreStatus?

        public init (
            creationTime: ClientRuntime.Date? = nil,
            datastoreName: Swift.String? = nil,
            datastorePartitions: IoTAnalyticsClientTypes.DatastorePartitions? = nil,
            datastoreStorage: IoTAnalyticsClientTypes.DatastoreStorageSummary? = nil,
            fileFormatType: IoTAnalyticsClientTypes.FileFormatType? = nil,
            lastMessageArrivalTime: ClientRuntime.Date? = nil,
            lastUpdateTime: ClientRuntime.Date? = nil,
            status: IoTAnalyticsClientTypes.DatastoreStatus? = nil
        )
        {
            self.creationTime = creationTime
            self.datastoreName = datastoreName
            self.datastorePartitions = datastorePartitions
            self.datastoreStorage = datastoreStorage
            self.fileFormatType = fileFormatType
            self.lastMessageArrivalTime = lastMessageArrivalTime
            self.lastUpdateTime = lastUpdateTime
            self.status = status
        }
    }

}
