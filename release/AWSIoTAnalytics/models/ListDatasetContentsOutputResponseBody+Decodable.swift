// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDatasetContentsOutputResponseBody: Swift.Equatable {
    let datasetContentSummaries: [IoTAnalyticsClientTypes.DatasetContentSummary]?
    let nextToken: Swift.String?
}

extension ListDatasetContentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case datasetContentSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetContentSummariesContainer = try containerValues.decodeIfPresent([IoTAnalyticsClientTypes.DatasetContentSummary?].self, forKey: .datasetContentSummaries)
        var datasetContentSummariesDecoded0:[IoTAnalyticsClientTypes.DatasetContentSummary]? = nil
        if let datasetContentSummariesContainer = datasetContentSummariesContainer {
            datasetContentSummariesDecoded0 = [IoTAnalyticsClientTypes.DatasetContentSummary]()
            for structure0 in datasetContentSummariesContainer {
                if let structure0 = structure0 {
                    datasetContentSummariesDecoded0?.append(structure0)
                }
            }
        }
        datasetContentSummaries = datasetContentSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
