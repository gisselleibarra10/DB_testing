// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTAnalyticsClientTypes.DatastorePartitions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case partitions
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let partitions = partitions {
            var partitionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .partitions)
            for partitions0 in partitions {
                try partitionsContainer.encode(partitions0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partitionsContainer = try containerValues.decodeIfPresent([IoTAnalyticsClientTypes.DatastorePartition?].self, forKey: .partitions)
        var partitionsDecoded0:[IoTAnalyticsClientTypes.DatastorePartition]? = nil
        if let partitionsContainer = partitionsContainer {
            partitionsDecoded0 = [IoTAnalyticsClientTypes.DatastorePartition]()
            for structure0 in partitionsContainer {
                if let structure0 = structure0 {
                    partitionsDecoded0?.append(structure0)
                }
            }
        }
        partitions = partitionsDecoded0
    }
}
