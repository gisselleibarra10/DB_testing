// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTAnalyticsClientTypes.DatastoreStorage: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customermanageds3 = "customerManagedS3"
        case iotsitewisemultilayerstorage = "iotSiteWiseMultiLayerStorage"
        case sdkUnknown
        case servicemanageds3 = "serviceManagedS3"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .customermanageds3(customermanageds3):
                try container.encode(customermanageds3, forKey: .customermanageds3)
            case let .iotsitewisemultilayerstorage(iotsitewisemultilayerstorage):
                try container.encode(iotsitewisemultilayerstorage, forKey: .iotsitewisemultilayerstorage)
            case let .servicemanageds3(servicemanageds3):
                try container.encode(servicemanageds3, forKey: .servicemanageds3)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let servicemanageds3Decoded = try values.decodeIfPresent(IoTAnalyticsClientTypes.ServiceManagedDatastoreS3Storage.self, forKey: .servicemanageds3)
        if let servicemanageds3 = servicemanageds3Decoded {
            self = .servicemanageds3(servicemanageds3)
            return
        }
        let customermanageds3Decoded = try values.decodeIfPresent(IoTAnalyticsClientTypes.CustomerManagedDatastoreS3Storage.self, forKey: .customermanageds3)
        if let customermanageds3 = customermanageds3Decoded {
            self = .customermanageds3(customermanageds3)
            return
        }
        let iotsitewisemultilayerstorageDecoded = try values.decodeIfPresent(IoTAnalyticsClientTypes.DatastoreIotSiteWiseMultiLayerStorage.self, forKey: .iotsitewisemultilayerstorage)
        if let iotsitewisemultilayerstorage = iotsitewisemultilayerstorageDecoded {
            self = .iotsitewisemultilayerstorage(iotsitewisemultilayerstorage)
            return
        }
        self = .sdkUnknown("")
    }
}
