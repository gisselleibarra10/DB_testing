// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateDatasetInput: Swift.Equatable {
    /// A list of DatasetAction objects.
    /// This member is required.
    public var actions: [IoTAnalyticsClientTypes.DatasetAction]?
    /// When dataset contents are created, they are delivered to destinations specified here.
    public var contentDeliveryRules: [IoTAnalyticsClientTypes.DatasetContentDeliveryRule]?
    /// The name of the dataset to update.
    /// This member is required.
    public var datasetName: Swift.String?
    /// A list of data rules that send notifications to CloudWatch, when data arrives late. To specify lateDataRules, the dataset must use a [DeltaTimer](https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeltaTime.html) filter.
    public var lateDataRules: [IoTAnalyticsClientTypes.LateDataRule]?
    /// How long, in days, dataset contents are kept for the dataset.
    public var retentionPeriod: IoTAnalyticsClientTypes.RetentionPeriod?
    /// A list of DatasetTrigger objects. The list can be empty or can contain up to five DatasetTrigger objects.
    public var triggers: [IoTAnalyticsClientTypes.DatasetTrigger]?
    /// Optional. How many versions of dataset contents are kept. If not specified or set to null, only the latest version plus the latest succeeded version (if they are different) are kept for the time period specified by the retentionPeriod parameter. For more information, see [Keeping Multiple Versions of IoT Analytics datasets](https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions) in the IoT Analytics User Guide.
    public var versioningConfiguration: IoTAnalyticsClientTypes.VersioningConfiguration?

    public init (
        actions: [IoTAnalyticsClientTypes.DatasetAction]? = nil,
        contentDeliveryRules: [IoTAnalyticsClientTypes.DatasetContentDeliveryRule]? = nil,
        datasetName: Swift.String? = nil,
        lateDataRules: [IoTAnalyticsClientTypes.LateDataRule]? = nil,
        retentionPeriod: IoTAnalyticsClientTypes.RetentionPeriod? = nil,
        triggers: [IoTAnalyticsClientTypes.DatasetTrigger]? = nil,
        versioningConfiguration: IoTAnalyticsClientTypes.VersioningConfiguration? = nil
    )
    {
        self.actions = actions
        self.contentDeliveryRules = contentDeliveryRules
        self.datasetName = datasetName
        self.lateDataRules = lateDataRules
        self.retentionPeriod = retentionPeriod
        self.triggers = triggers
        self.versioningConfiguration = versioningConfiguration
    }
}
