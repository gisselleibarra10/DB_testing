// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTAnalyticsClientTypes {
    /// A collection of data from an MQTT topic. Channels archive the raw, unprocessed messages before publishing the data to a pipeline.
    public struct Channel: Swift.Equatable {
        /// The ARN of the channel.
        public var arn: Swift.String?
        /// When the channel was created.
        public var creationTime: ClientRuntime.Date?
        /// The last time when a new message arrived in the channel. IoT Analytics updates this value at most once per minute for one channel. Hence, the lastMessageArrivalTime value is an approximation. This feature only applies to messages that arrived in the data store after October 23, 2020.
        public var lastMessageArrivalTime: ClientRuntime.Date?
        /// When the channel was last updated.
        public var lastUpdateTime: ClientRuntime.Date?
        /// The name of the channel.
        public var name: Swift.String?
        /// How long, in days, message data is kept for the channel.
        public var retentionPeriod: IoTAnalyticsClientTypes.RetentionPeriod?
        /// The status of the channel.
        public var status: IoTAnalyticsClientTypes.ChannelStatus?
        /// Where channel data is stored. You can choose one of serviceManagedS3 or customerManagedS3 storage. If not specified, the default is serviceManagedS3. You can't change this storage option after the channel is created.
        public var storage: IoTAnalyticsClientTypes.ChannelStorage?

        public init (
            arn: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            lastMessageArrivalTime: ClientRuntime.Date? = nil,
            lastUpdateTime: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            retentionPeriod: IoTAnalyticsClientTypes.RetentionPeriod? = nil,
            status: IoTAnalyticsClientTypes.ChannelStatus? = nil,
            storage: IoTAnalyticsClientTypes.ChannelStorage? = nil
        )
        {
            self.arn = arn
            self.creationTime = creationTime
            self.lastMessageArrivalTime = lastMessageArrivalTime
            self.lastUpdateTime = lastUpdateTime
            self.name = name
            self.retentionPeriod = retentionPeriod
            self.status = status
            self.storage = storage
        }
    }

}
