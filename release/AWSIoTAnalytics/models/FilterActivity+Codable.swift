// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTAnalyticsClientTypes.FilterActivity: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filter
        case name
        case next
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filter = self.filter {
            try encodeContainer.encode(filter, forKey: .filter)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let next = self.next {
            try encodeContainer.encode(next, forKey: .next)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let filterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filter)
        filter = filterDecoded
        let nextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .next)
        next = nextDecoded
    }
}
