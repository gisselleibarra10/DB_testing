// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTAnalyticsClientTypes {
    /// Information about a data store.
    public struct Datastore: Swift.Equatable {
        /// The ARN of the data store.
        public var arn: Swift.String?
        /// When the data store was created.
        public var creationTime: ClientRuntime.Date?
        /// Contains information about the partition dimensions in a data store.
        public var datastorePartitions: IoTAnalyticsClientTypes.DatastorePartitions?
        /// Contains the configuration information of file formats. IoT Analytics data stores support JSON and [Parquet](https://parquet.apache.org/). The default file format is JSON. You can specify only one format. You can't change the file format after you create the data store.
        public var fileFormatConfiguration: IoTAnalyticsClientTypes.FileFormatConfiguration?
        /// The last time when a new message arrived in the data store. IoT Analytics updates this value at most once per minute for Amazon Simple Storage Service one data store. Hence, the lastMessageArrivalTime value is an approximation. This feature only applies to messages that arrived in the data store after October 23, 2020.
        public var lastMessageArrivalTime: ClientRuntime.Date?
        /// The last time the data store was updated.
        public var lastUpdateTime: ClientRuntime.Date?
        /// The name of the data store.
        public var name: Swift.String?
        /// How long, in days, message data is kept for the data store. When customerManagedS3 storage is selected, this parameter is ignored.
        public var retentionPeriod: IoTAnalyticsClientTypes.RetentionPeriod?
        /// The status of a data store: CREATING The data store is being created. ACTIVE The data store has been created and can be used. DELETING The data store is being deleted.
        public var status: IoTAnalyticsClientTypes.DatastoreStatus?
        /// Where data in a data store is stored.. You can choose serviceManagedS3 storage, customerManagedS3 storage, or iotSiteWiseMultiLayerStorage storage. The default is serviceManagedS3. You can't change the choice of Amazon S3 storage after your data store is created.
        public var storage: IoTAnalyticsClientTypes.DatastoreStorage?

        public init (
            arn: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            datastorePartitions: IoTAnalyticsClientTypes.DatastorePartitions? = nil,
            fileFormatConfiguration: IoTAnalyticsClientTypes.FileFormatConfiguration? = nil,
            lastMessageArrivalTime: ClientRuntime.Date? = nil,
            lastUpdateTime: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            retentionPeriod: IoTAnalyticsClientTypes.RetentionPeriod? = nil,
            status: IoTAnalyticsClientTypes.DatastoreStatus? = nil,
            storage: IoTAnalyticsClientTypes.DatastoreStorage? = nil
        )
        {
            self.arn = arn
            self.creationTime = creationTime
            self.datastorePartitions = datastorePartitions
            self.fileFormatConfiguration = fileFormatConfiguration
            self.lastMessageArrivalTime = lastMessageArrivalTime
            self.lastUpdateTime = lastUpdateTime
            self.name = name
            self.retentionPeriod = retentionPeriod
            self.status = status
            self.storage = storage
        }
    }

}
