// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTAnalyticsClientTypes.DeltaTime: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case offsetSeconds
        case timeExpression
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let offsetSeconds = self.offsetSeconds {
            try encodeContainer.encode(offsetSeconds, forKey: .offsetSeconds)
        }
        if let timeExpression = self.timeExpression {
            try encodeContainer.encode(timeExpression, forKey: .timeExpression)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let offsetSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .offsetSeconds)
        offsetSeconds = offsetSecondsDecoded
        let timeExpressionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .timeExpression)
        timeExpression = timeExpressionDecoded
    }
}
