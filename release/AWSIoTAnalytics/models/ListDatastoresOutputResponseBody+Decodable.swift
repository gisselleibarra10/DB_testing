// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDatastoresOutputResponseBody: Swift.Equatable {
    let datastoreSummaries: [IoTAnalyticsClientTypes.DatastoreSummary]?
    let nextToken: Swift.String?
}

extension ListDatastoresOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case datastoreSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datastoreSummariesContainer = try containerValues.decodeIfPresent([IoTAnalyticsClientTypes.DatastoreSummary?].self, forKey: .datastoreSummaries)
        var datastoreSummariesDecoded0:[IoTAnalyticsClientTypes.DatastoreSummary]? = nil
        if let datastoreSummariesContainer = datastoreSummariesContainer {
            datastoreSummariesDecoded0 = [IoTAnalyticsClientTypes.DatastoreSummary]()
            for structure0 in datastoreSummariesContainer {
                if let structure0 = structure0 {
                    datastoreSummariesDecoded0?.append(structure0)
                }
            }
        }
        datastoreSummaries = datastoreSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
