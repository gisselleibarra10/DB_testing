// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ShieldClientTypes.SubscriptionLimits: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case protectionGroupLimits = "ProtectionGroupLimits"
        case protectionLimits = "ProtectionLimits"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let protectionGroupLimits = self.protectionGroupLimits {
            try encodeContainer.encode(protectionGroupLimits, forKey: .protectionGroupLimits)
        }
        if let protectionLimits = self.protectionLimits {
            try encodeContainer.encode(protectionLimits, forKey: .protectionLimits)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let protectionLimitsDecoded = try containerValues.decodeIfPresent(ShieldClientTypes.ProtectionLimits.self, forKey: .protectionLimits)
        protectionLimits = protectionLimitsDecoded
        let protectionGroupLimitsDecoded = try containerValues.decodeIfPresent(ShieldClientTypes.ProtectionGroupLimits.self, forKey: .protectionGroupLimits)
        protectionGroupLimits = protectionGroupLimitsDecoded
    }
}
