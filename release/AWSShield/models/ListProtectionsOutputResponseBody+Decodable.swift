// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProtectionsOutputResponseBody: Swift.Equatable {
    let protections: [ShieldClientTypes.Protection]?
    let nextToken: Swift.String?
}

extension ListProtectionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case protections = "Protections"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let protectionsContainer = try containerValues.decodeIfPresent([ShieldClientTypes.Protection?].self, forKey: .protections)
        var protectionsDecoded0:[ShieldClientTypes.Protection]? = nil
        if let protectionsContainer = protectionsContainer {
            protectionsDecoded0 = [ShieldClientTypes.Protection]()
            for structure0 in protectionsContainer {
                if let structure0 = structure0 {
                    protectionsDecoded0?.append(structure0)
                }
            }
        }
        protections = protectionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
