// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ShieldClientTypes {
    /// Information about the Shield Advanced subscription for an account.
    public struct Subscription: Swift.Equatable {
        /// If ENABLED, the subscription will be automatically renewed at the end of the existing subscription period. When you initally create a subscription, AutoRenew is set to ENABLED. You can change this by submitting an UpdateSubscription request. If the UpdateSubscription request does not included a value for AutoRenew, the existing value for AutoRenew remains unchanged.
        public var autoRenew: ShieldClientTypes.AutoRenew?
        /// The date and time your subscription will end.
        public var endTime: ClientRuntime.Date?
        /// Specifies how many protections of a given type you can create.
        public var limits: [ShieldClientTypes.Limit]?
        /// If ENABLED, the Shield Response Team (SRT) will use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support. If PENDING, you have requested proactive engagement and the request is pending. The status changes to ENABLED when your request is fully processed. If DISABLED, the SRT will not proactively notify contacts about escalations or to initiate proactive customer support.
        public var proactiveEngagementStatus: ShieldClientTypes.ProactiveEngagementStatus?
        /// The start time of the subscription, in Unix time in seconds.
        public var startTime: ClientRuntime.Date?
        /// The ARN (Amazon Resource Name) of the subscription.
        public var subscriptionArn: Swift.String?
        /// Limits settings for your subscription.
        /// This member is required.
        public var subscriptionLimits: ShieldClientTypes.SubscriptionLimits?
        /// The length, in seconds, of the Shield Advanced subscription for the account.
        public var timeCommitmentInSeconds: Swift.Int

        public init (
            autoRenew: ShieldClientTypes.AutoRenew? = nil,
            endTime: ClientRuntime.Date? = nil,
            limits: [ShieldClientTypes.Limit]? = nil,
            proactiveEngagementStatus: ShieldClientTypes.ProactiveEngagementStatus? = nil,
            startTime: ClientRuntime.Date? = nil,
            subscriptionArn: Swift.String? = nil,
            subscriptionLimits: ShieldClientTypes.SubscriptionLimits? = nil,
            timeCommitmentInSeconds: Swift.Int = 0
        )
        {
            self.autoRenew = autoRenew
            self.endTime = endTime
            self.limits = limits
            self.proactiveEngagementStatus = proactiveEngagementStatus
            self.startTime = startTime
            self.subscriptionArn = subscriptionArn
            self.subscriptionLimits = subscriptionLimits
            self.timeCommitmentInSeconds = timeCommitmentInSeconds
        }
    }

}
