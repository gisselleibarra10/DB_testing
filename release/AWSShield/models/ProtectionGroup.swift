// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ShieldClientTypes {
    /// A grouping of protected resources that you and Shield Advanced can monitor as a collective. This resource grouping improves the accuracy of detection and reduces false positives.
    public struct ProtectionGroup: Swift.Equatable {
        /// Defines how Shield combines resource data for the group in order to detect, mitigate, and report events.
        ///
        /// * Sum - Use the total traffic across the group. This is a good choice for most cases. Examples include Elastic IP addresses for EC2 instances that scale manually or automatically.
        ///
        /// * Mean - Use the average of the traffic across the group. This is a good choice for resources that share traffic uniformly. Examples include accelerators and load balancers.
        ///
        /// * Max - Use the highest traffic from each resource. This is useful for resources that don't share traffic and for resources that share that traffic in a non-uniform way. Examples include Amazon CloudFront distributions and origin resources for CloudFront distributions.
        /// This member is required.
        public var aggregation: ShieldClientTypes.ProtectionGroupAggregation?
        /// The ARNs (Amazon Resource Names) of the resources to include in the protection group. You must set this when you set Pattern to ARBITRARY and you must not set it for any other Pattern setting.
        /// This member is required.
        public var members: [Swift.String]?
        /// The criteria to use to choose the protected resources for inclusion in the group. You can include all resources that have protections, provide a list of resource ARNs (Amazon Resource Names), or include all resources of a specified resource type.
        /// This member is required.
        public var pattern: ShieldClientTypes.ProtectionGroupPattern?
        /// The ARN (Amazon Resource Name) of the protection group.
        public var protectionGroupArn: Swift.String?
        /// The name of the protection group. You use this to identify the protection group in lists and to manage the protection group, for example to update, delete, or describe it.
        /// This member is required.
        public var protectionGroupId: Swift.String?
        /// The resource type to include in the protection group. All protected resources of this type are included in the protection group. You must set this when you set Pattern to BY_RESOURCE_TYPE and you must not set it for any other Pattern setting.
        public var resourceType: ShieldClientTypes.ProtectedResourceType?

        public init (
            aggregation: ShieldClientTypes.ProtectionGroupAggregation? = nil,
            members: [Swift.String]? = nil,
            pattern: ShieldClientTypes.ProtectionGroupPattern? = nil,
            protectionGroupArn: Swift.String? = nil,
            protectionGroupId: Swift.String? = nil,
            resourceType: ShieldClientTypes.ProtectedResourceType? = nil
        )
        {
            self.aggregation = aggregation
            self.members = members
            self.pattern = pattern
            self.protectionGroupArn = protectionGroupArn
            self.protectionGroupId = protectionGroupId
            self.resourceType = resourceType
        }
    }

}
