// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAttacksOutputResponseBody: Swift.Equatable {
    let attackSummaries: [ShieldClientTypes.AttackSummary]?
    let nextToken: Swift.String?
}

extension ListAttacksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attackSummaries = "AttackSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attackSummariesContainer = try containerValues.decodeIfPresent([ShieldClientTypes.AttackSummary?].self, forKey: .attackSummaries)
        var attackSummariesDecoded0:[ShieldClientTypes.AttackSummary]? = nil
        if let attackSummariesContainer = attackSummariesContainer {
            attackSummariesDecoded0 = [ShieldClientTypes.AttackSummary]()
            for structure0 in attackSummariesContainer {
                if let structure0 = structure0 {
                    attackSummariesDecoded0?.append(structure0)
                }
            }
        }
        attackSummaries = attackSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
