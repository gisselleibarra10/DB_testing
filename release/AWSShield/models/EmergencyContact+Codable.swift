// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ShieldClientTypes.EmergencyContact: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contactNotes = "ContactNotes"
        case emailAddress = "EmailAddress"
        case phoneNumber = "PhoneNumber"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contactNotes = self.contactNotes {
            try encodeContainer.encode(contactNotes, forKey: .contactNotes)
        }
        if let emailAddress = self.emailAddress {
            try encodeContainer.encode(emailAddress, forKey: .emailAddress)
        }
        if let phoneNumber = self.phoneNumber {
            try encodeContainer.encode(phoneNumber, forKey: .phoneNumber)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let emailAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .emailAddress)
        emailAddress = emailAddressDecoded
        let phoneNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .phoneNumber)
        phoneNumber = phoneNumberDecoded
        let contactNotesDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .contactNotes)
        contactNotes = contactNotesDecoded
    }
}
