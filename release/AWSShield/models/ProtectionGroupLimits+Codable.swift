// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ShieldClientTypes.ProtectionGroupLimits: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxProtectionGroups = "MaxProtectionGroups"
        case patternTypeLimits = "PatternTypeLimits"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if maxProtectionGroups != 0 {
            try encodeContainer.encode(maxProtectionGroups, forKey: .maxProtectionGroups)
        }
        if let patternTypeLimits = self.patternTypeLimits {
            try encodeContainer.encode(patternTypeLimits, forKey: .patternTypeLimits)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maxProtectionGroupsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxProtectionGroups) ?? 0
        maxProtectionGroups = maxProtectionGroupsDecoded
        let patternTypeLimitsDecoded = try containerValues.decodeIfPresent(ShieldClientTypes.ProtectionGroupPatternTypeLimits.self, forKey: .patternTypeLimits)
        patternTypeLimits = patternTypeLimitsDecoded
    }
}
