// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAttackStatisticsOutputResponseBody: Swift.Equatable {
    let timeRange: ShieldClientTypes.TimeRange?
    let dataItems: [ShieldClientTypes.AttackStatisticsDataItem]?
}

extension DescribeAttackStatisticsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataItems = "DataItems"
        case timeRange = "TimeRange"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timeRangeDecoded = try containerValues.decodeIfPresent(ShieldClientTypes.TimeRange.self, forKey: .timeRange)
        timeRange = timeRangeDecoded
        let dataItemsContainer = try containerValues.decodeIfPresent([ShieldClientTypes.AttackStatisticsDataItem?].self, forKey: .dataItems)
        var dataItemsDecoded0:[ShieldClientTypes.AttackStatisticsDataItem]? = nil
        if let dataItemsContainer = dataItemsContainer {
            dataItemsDecoded0 = [ShieldClientTypes.AttackStatisticsDataItem]()
            for structure0 in dataItemsContainer {
                if let structure0 = structure0 {
                    dataItemsDecoded0?.append(structure0)
                }
            }
        }
        dataItems = dataItemsDecoded0
    }
}
