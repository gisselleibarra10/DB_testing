// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ShieldClientTypes.AttackStatisticsDataItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attackCount = "AttackCount"
        case attackVolume = "AttackVolume"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if attackCount != 0 {
            try encodeContainer.encode(attackCount, forKey: .attackCount)
        }
        if let attackVolume = self.attackVolume {
            try encodeContainer.encode(attackVolume, forKey: .attackVolume)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attackVolumeDecoded = try containerValues.decodeIfPresent(ShieldClientTypes.AttackVolume.self, forKey: .attackVolume)
        attackVolume = attackVolumeDecoded
        let attackCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .attackCount) ?? 0
        attackCount = attackCountDecoded
    }
}
