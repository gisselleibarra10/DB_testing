// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchAssociateAssessmentReportEvidenceOutputResponseBody: Swift.Equatable {
    let evidenceIds: [Swift.String]?
    let errors: [AuditManagerClientTypes.AssessmentReportEvidenceError]?
}

extension BatchAssociateAssessmentReportEvidenceOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errors
        case evidenceIds
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let evidenceIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .evidenceIds)
        var evidenceIdsDecoded0:[Swift.String]? = nil
        if let evidenceIdsContainer = evidenceIdsContainer {
            evidenceIdsDecoded0 = [Swift.String]()
            for string0 in evidenceIdsContainer {
                if let string0 = string0 {
                    evidenceIdsDecoded0?.append(string0)
                }
            }
        }
        evidenceIds = evidenceIdsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([AuditManagerClientTypes.AssessmentReportEvidenceError?].self, forKey: .errors)
        var errorsDecoded0:[AuditManagerClientTypes.AssessmentReportEvidenceError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [AuditManagerClientTypes.AssessmentReportEvidenceError]()
            for structure0 in errorsContainer {
                if let structure0 = structure0 {
                    errorsDecoded0?.append(structure0)
                }
            }
        }
        errors = errorsDecoded0
    }
}
