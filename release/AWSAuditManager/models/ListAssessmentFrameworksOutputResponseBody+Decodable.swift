// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssessmentFrameworksOutputResponseBody: Swift.Equatable {
    let frameworkMetadataList: [AuditManagerClientTypes.AssessmentFrameworkMetadata]?
    let nextToken: Swift.String?
}

extension ListAssessmentFrameworksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case frameworkMetadataList
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let frameworkMetadataListContainer = try containerValues.decodeIfPresent([AuditManagerClientTypes.AssessmentFrameworkMetadata?].self, forKey: .frameworkMetadataList)
        var frameworkMetadataListDecoded0:[AuditManagerClientTypes.AssessmentFrameworkMetadata]? = nil
        if let frameworkMetadataListContainer = frameworkMetadataListContainer {
            frameworkMetadataListDecoded0 = [AuditManagerClientTypes.AssessmentFrameworkMetadata]()
            for structure0 in frameworkMetadataListContainer {
                if let structure0 = structure0 {
                    frameworkMetadataListDecoded0?.append(structure0)
                }
            }
        }
        frameworkMetadataList = frameworkMetadataListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
