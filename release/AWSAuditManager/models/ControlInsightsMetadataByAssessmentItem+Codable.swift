// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AuditManagerClientTypes.ControlInsightsMetadataByAssessmentItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case controlSetName
        case evidenceInsights
        case id
        case lastUpdated
        case name
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let controlSetName = self.controlSetName {
            try encodeContainer.encode(controlSetName, forKey: .controlSetName)
        }
        if let evidenceInsights = self.evidenceInsights {
            try encodeContainer.encode(evidenceInsights, forKey: .evidenceInsights)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let lastUpdated = self.lastUpdated {
            try encodeContainer.encode(lastUpdated.timeIntervalSince1970, forKey: .lastUpdated)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let evidenceInsightsDecoded = try containerValues.decodeIfPresent(AuditManagerClientTypes.EvidenceInsights.self, forKey: .evidenceInsights)
        evidenceInsights = evidenceInsightsDecoded
        let controlSetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .controlSetName)
        controlSetName = controlSetNameDecoded
        let lastUpdatedDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdated)
        lastUpdated = lastUpdatedDecoded
    }
}
