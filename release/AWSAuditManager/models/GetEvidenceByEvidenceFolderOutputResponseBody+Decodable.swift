// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetEvidenceByEvidenceFolderOutputResponseBody: Swift.Equatable {
    let evidence: [AuditManagerClientTypes.Evidence]?
    let nextToken: Swift.String?
}

extension GetEvidenceByEvidenceFolderOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case evidence
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let evidenceContainer = try containerValues.decodeIfPresent([AuditManagerClientTypes.Evidence?].self, forKey: .evidence)
        var evidenceDecoded0:[AuditManagerClientTypes.Evidence]? = nil
        if let evidenceContainer = evidenceContainer {
            evidenceDecoded0 = [AuditManagerClientTypes.Evidence]()
            for structure0 in evidenceContainer {
                if let structure0 = structure0 {
                    evidenceDecoded0?.append(structure0)
                }
            }
        }
        evidence = evidenceDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
