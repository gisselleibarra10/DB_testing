// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchImportEvidenceToAssessmentControlInputBody: Swift.Equatable {
    let manualEvidence: [AuditManagerClientTypes.ManualEvidence]?
}

extension BatchImportEvidenceToAssessmentControlInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case manualEvidence
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let manualEvidenceContainer = try containerValues.decodeIfPresent([AuditManagerClientTypes.ManualEvidence?].self, forKey: .manualEvidence)
        var manualEvidenceDecoded0:[AuditManagerClientTypes.ManualEvidence]? = nil
        if let manualEvidenceContainer = manualEvidenceContainer {
            manualEvidenceDecoded0 = [AuditManagerClientTypes.ManualEvidence]()
            for structure0 in manualEvidenceContainer {
                if let structure0 = structure0 {
                    manualEvidenceDecoded0?.append(structure0)
                }
            }
        }
        manualEvidence = manualEvidenceDecoded0
    }
}
