// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListControlsOutputResponseBody: Swift.Equatable {
    let controlMetadataList: [AuditManagerClientTypes.ControlMetadata]?
    let nextToken: Swift.String?
}

extension ListControlsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case controlMetadataList
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let controlMetadataListContainer = try containerValues.decodeIfPresent([AuditManagerClientTypes.ControlMetadata?].self, forKey: .controlMetadataList)
        var controlMetadataListDecoded0:[AuditManagerClientTypes.ControlMetadata]? = nil
        if let controlMetadataListContainer = controlMetadataListContainer {
            controlMetadataListDecoded0 = [AuditManagerClientTypes.ControlMetadata]()
            for structure0 in controlMetadataListContainer {
                if let structure0 = structure0 {
                    controlMetadataListDecoded0?.append(structure0)
                }
            }
        }
        controlMetadataList = controlMetadataListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
