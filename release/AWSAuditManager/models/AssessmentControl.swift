// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AuditManagerClientTypes {
    /// The control entity that represents a standard control or a custom control in an Audit Manager assessment.
    public struct AssessmentControl: Swift.Equatable {
        /// The amount of evidence in the assessment report.
        public var assessmentReportEvidenceCount: Swift.Int
        /// The list of comments that's attached to the control.
        public var comments: [AuditManagerClientTypes.ControlComment]?
        /// The description of the control.
        public var description: Swift.String?
        /// The amount of evidence that's generated for the control.
        public var evidenceCount: Swift.Int
        /// The list of data sources for the evidence.
        public var evidenceSources: [Swift.String]?
        /// The identifier for the control.
        public var id: Swift.String?
        /// The name of the control.
        public var name: Swift.String?
        /// The response of the control.
        public var response: AuditManagerClientTypes.ControlResponse?
        /// The status of the control.
        public var status: AuditManagerClientTypes.ControlStatus?

        public init (
            assessmentReportEvidenceCount: Swift.Int = 0,
            comments: [AuditManagerClientTypes.ControlComment]? = nil,
            description: Swift.String? = nil,
            evidenceCount: Swift.Int = 0,
            evidenceSources: [Swift.String]? = nil,
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            response: AuditManagerClientTypes.ControlResponse? = nil,
            status: AuditManagerClientTypes.ControlStatus? = nil
        )
        {
            self.assessmentReportEvidenceCount = assessmentReportEvidenceCount
            self.comments = comments
            self.description = description
            self.evidenceCount = evidenceCount
            self.evidenceSources = evidenceSources
            self.id = id
            self.name = name
            self.response = response
            self.status = status
        }
    }

}
