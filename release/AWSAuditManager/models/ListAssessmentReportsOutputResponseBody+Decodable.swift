// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssessmentReportsOutputResponseBody: Swift.Equatable {
    let assessmentReports: [AuditManagerClientTypes.AssessmentReportMetadata]?
    let nextToken: Swift.String?
}

extension ListAssessmentReportsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assessmentReports
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assessmentReportsContainer = try containerValues.decodeIfPresent([AuditManagerClientTypes.AssessmentReportMetadata?].self, forKey: .assessmentReports)
        var assessmentReportsDecoded0:[AuditManagerClientTypes.AssessmentReportMetadata]? = nil
        if let assessmentReportsContainer = assessmentReportsContainer {
            assessmentReportsDecoded0 = [AuditManagerClientTypes.AssessmentReportMetadata]()
            for structure0 in assessmentReportsContainer {
                if let structure0 = structure0 {
                    assessmentReportsDecoded0?.append(structure0)
                }
            }
        }
        assessmentReports = assessmentReportsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
