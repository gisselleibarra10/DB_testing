// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AuditManagerClientTypes {
    /// The assignment of a control set to a delegate for review.
    public struct Delegation: Swift.Equatable {
        /// The identifier for the assessment that's associated with the delegation.
        public var assessmentId: Swift.String?
        /// The name of the assessment that's associated with the delegation.
        public var assessmentName: Swift.String?
        /// The comment that's related to the delegation.
        public var comment: Swift.String?
        /// The identifier for the control set that's associated with the delegation.
        public var controlSetId: Swift.String?
        /// The IAM user or role that created the delegation.
        public var createdBy: Swift.String?
        /// Specifies when the delegation was created.
        public var creationTime: ClientRuntime.Date?
        /// The unique identifier for the delegation.
        public var id: Swift.String?
        /// Specifies when the delegation was last updated.
        public var lastUpdated: ClientRuntime.Date?
        /// The Amazon Resource Name (ARN) of the IAM role.
        public var roleArn: Swift.String?
        /// The type of customer persona. In CreateAssessment, roleType can only be PROCESS_OWNER. In UpdateSettings, roleType can only be PROCESS_OWNER. In BatchCreateDelegationByAssessment, roleType can only be RESOURCE_OWNER.
        public var roleType: AuditManagerClientTypes.RoleType?
        /// The status of the delegation.
        public var status: AuditManagerClientTypes.DelegationStatus?

        public init (
            assessmentId: Swift.String? = nil,
            assessmentName: Swift.String? = nil,
            comment: Swift.String? = nil,
            controlSetId: Swift.String? = nil,
            createdBy: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            id: Swift.String? = nil,
            lastUpdated: ClientRuntime.Date? = nil,
            roleArn: Swift.String? = nil,
            roleType: AuditManagerClientTypes.RoleType? = nil,
            status: AuditManagerClientTypes.DelegationStatus? = nil
        )
        {
            self.assessmentId = assessmentId
            self.assessmentName = assessmentName
            self.comment = comment
            self.controlSetId = controlSetId
            self.createdBy = createdBy
            self.creationTime = creationTime
            self.id = id
            self.lastUpdated = lastUpdated
            self.roleArn = roleArn
            self.roleType = roleType
            self.status = status
        }
    }

}
