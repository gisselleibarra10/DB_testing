// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AuditManagerClientTypes.BatchCreateDelegationByAssessmentError: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createDelegationRequest
        case errorCode
        case errorMessage
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createDelegationRequest = self.createDelegationRequest {
            try encodeContainer.encode(createDelegationRequest, forKey: .createDelegationRequest)
        }
        if let errorCode = self.errorCode {
            try encodeContainer.encode(errorCode, forKey: .errorCode)
        }
        if let errorMessage = self.errorMessage {
            try encodeContainer.encode(errorMessage, forKey: .errorMessage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let createDelegationRequestDecoded = try containerValues.decodeIfPresent(AuditManagerClientTypes.CreateDelegationRequest.self, forKey: .createDelegationRequest)
        createDelegationRequest = createDelegationRequestDecoded
        let errorCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorCode)
        errorCode = errorCodeDecoded
        let errorMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorMessage)
        errorMessage = errorMessageDecoded
    }
}
