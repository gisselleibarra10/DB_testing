// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeIndexFieldsOutputResponseBody: Swift.Equatable {
    let indexFields: [CloudSearchClientTypes.IndexFieldStatus]?
}

extension DescribeIndexFieldsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case indexFields = "IndexFields"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DescribeIndexFieldsResult"))
        if containerValues.contains(.indexFields) {
            struct KeyVal0{struct member{}}
            let indexFieldsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .indexFields)
            if let indexFieldsWrappedContainer = indexFieldsWrappedContainer {
                let indexFieldsContainer = try indexFieldsWrappedContainer.decodeIfPresent([CloudSearchClientTypes.IndexFieldStatus].self, forKey: .member)
                var indexFieldsBuffer:[CloudSearchClientTypes.IndexFieldStatus]? = nil
                if let indexFieldsContainer = indexFieldsContainer {
                    indexFieldsBuffer = [CloudSearchClientTypes.IndexFieldStatus]()
                    for structureContainer0 in indexFieldsContainer {
                        indexFieldsBuffer?.append(structureContainer0)
                    }
                }
                indexFields = indexFieldsBuffer
            } else {
                indexFields = []
            }
        } else {
            indexFields = nil
        }
    }
}
