// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAnalysisSchemesOutputResponseBody: Swift.Equatable {
    let analysisSchemes: [CloudSearchClientTypes.AnalysisSchemeStatus]?
}

extension DescribeAnalysisSchemesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case analysisSchemes = "AnalysisSchemes"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DescribeAnalysisSchemesResult"))
        if containerValues.contains(.analysisSchemes) {
            struct KeyVal0{struct member{}}
            let analysisSchemesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .analysisSchemes)
            if let analysisSchemesWrappedContainer = analysisSchemesWrappedContainer {
                let analysisSchemesContainer = try analysisSchemesWrappedContainer.decodeIfPresent([CloudSearchClientTypes.AnalysisSchemeStatus].self, forKey: .member)
                var analysisSchemesBuffer:[CloudSearchClientTypes.AnalysisSchemeStatus]? = nil
                if let analysisSchemesContainer = analysisSchemesContainer {
                    analysisSchemesBuffer = [CloudSearchClientTypes.AnalysisSchemeStatus]()
                    for structureContainer0 in analysisSchemesContainer {
                        analysisSchemesBuffer?.append(structureContainer0)
                    }
                }
                analysisSchemes = analysisSchemesBuffer
            } else {
                analysisSchemes = []
            }
        } else {
            analysisSchemes = nil
        }
    }
}
