// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDomainsOutputResponseBody: Swift.Equatable {
    let domainStatusList: [CloudSearchClientTypes.DomainStatus]?
}

extension DescribeDomainsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainStatusList = "DomainStatusList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DescribeDomainsResult"))
        if containerValues.contains(.domainStatusList) {
            struct KeyVal0{struct member{}}
            let domainStatusListWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .domainStatusList)
            if let domainStatusListWrappedContainer = domainStatusListWrappedContainer {
                let domainStatusListContainer = try domainStatusListWrappedContainer.decodeIfPresent([CloudSearchClientTypes.DomainStatus].self, forKey: .member)
                var domainStatusListBuffer:[CloudSearchClientTypes.DomainStatus]? = nil
                if let domainStatusListContainer = domainStatusListContainer {
                    domainStatusListBuffer = [CloudSearchClientTypes.DomainStatus]()
                    for structureContainer0 in domainStatusListContainer {
                        domainStatusListBuffer?.append(structureContainer0)
                    }
                }
                domainStatusList = domainStatusListBuffer
            } else {
                domainStatusList = []
            }
        } else {
            domainStatusList = nil
        }
    }
}
