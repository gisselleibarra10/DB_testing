// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CloudSearchClientTypes {
    /// The current status of the search domain.
    public struct DomainStatus: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the search domain. See [Identifiers for IAM Entities](http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html) in Using AWS Identity and Access Management for more information.
        public var aRN: Swift.String?
        /// True if the search domain is created. It can take several minutes to initialize a domain when [CreateDomain] is called. Newly created search domains are returned from [DescribeDomains] with a false value for Created until domain creation is complete.
        public var created: Swift.Bool?
        /// True if the search domain has been deleted. The system must clean up resources dedicated to the search domain when [DeleteDomain] is called. Newly deleted search domains are returned from [DescribeDomains] with a true value for IsDeleted for several minutes until resource cleanup is complete.
        public var deleted: Swift.Bool?
        /// The service endpoint for updating documents in a search domain.
        public var docService: CloudSearchClientTypes.ServiceEndpoint?
        /// An internally generated unique identifier for a domain.
        /// This member is required.
        public var domainId: Swift.String?
        /// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
        /// This member is required.
        public var domainName: Swift.String?
        public var limits: CloudSearchClientTypes.Limits?
        /// True if processing is being done to activate the current domain configuration.
        public var processing: Swift.Bool?
        /// True if [IndexDocuments] needs to be called to activate the current domain configuration.
        /// This member is required.
        public var requiresIndexDocuments: Swift.Bool?
        /// The number of search instances that are available to process search requests.
        public var searchInstanceCount: Swift.Int
        /// The instance type that is being used to process search requests.
        public var searchInstanceType: Swift.String?
        /// The number of partitions across which the search index is spread.
        public var searchPartitionCount: Swift.Int
        /// The service endpoint for requesting search results from a search domain.
        public var searchService: CloudSearchClientTypes.ServiceEndpoint?

        public init (
            aRN: Swift.String? = nil,
            created: Swift.Bool? = nil,
            deleted: Swift.Bool? = nil,
            docService: CloudSearchClientTypes.ServiceEndpoint? = nil,
            domainId: Swift.String? = nil,
            domainName: Swift.String? = nil,
            limits: CloudSearchClientTypes.Limits? = nil,
            processing: Swift.Bool? = nil,
            requiresIndexDocuments: Swift.Bool? = nil,
            searchInstanceCount: Swift.Int = 0,
            searchInstanceType: Swift.String? = nil,
            searchPartitionCount: Swift.Int = 0,
            searchService: CloudSearchClientTypes.ServiceEndpoint? = nil
        )
        {
            self.aRN = aRN
            self.created = created
            self.deleted = deleted
            self.docService = docService
            self.domainId = domainId
            self.domainName = domainName
            self.limits = limits
            self.processing = processing
            self.requiresIndexDocuments = requiresIndexDocuments
            self.searchInstanceCount = searchInstanceCount
            self.searchInstanceType = searchInstanceType
            self.searchPartitionCount = searchPartitionCount
            self.searchService = searchService
        }
    }

}
