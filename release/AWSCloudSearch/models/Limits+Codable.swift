// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudSearchClientTypes.Limits: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maximumPartitionCount = "MaximumPartitionCount"
        case maximumReplicationCount = "MaximumReplicationCount"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if maximumPartitionCount != 0 {
            try container.encode(maximumPartitionCount, forKey: ClientRuntime.Key("MaximumPartitionCount"))
        }
        if maximumReplicationCount != 0 {
            try container.encode(maximumReplicationCount, forKey: ClientRuntime.Key("MaximumReplicationCount"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maximumReplicationCountDecoded = try containerValues.decode(Swift.Int.self, forKey: .maximumReplicationCount)
        maximumReplicationCount = maximumReplicationCountDecoded
        let maximumPartitionCountDecoded = try containerValues.decode(Swift.Int.self, forKey: .maximumPartitionCount)
        maximumPartitionCount = maximumPartitionCountDecoded
    }
}
