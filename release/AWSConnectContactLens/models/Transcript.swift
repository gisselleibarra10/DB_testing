// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ConnectContactLensClientTypes {
    /// A list of messages in the session.
    public struct Transcript: Swift.Equatable {
        /// The beginning offset in the contact for this transcript.
        /// This member is required.
        public var beginOffsetMillis: Swift.Int
        /// The content of the transcript.
        /// This member is required.
        public var content: Swift.String?
        /// The end offset in the contact for this transcript.
        /// This member is required.
        public var endOffsetMillis: Swift.Int
        /// The identifier of the transcript.
        /// This member is required.
        public var id: Swift.String?
        /// List of positions where issues were detected on the transcript.
        public var issuesDetected: [ConnectContactLensClientTypes.IssueDetected]?
        /// The identifier of the participant.
        /// This member is required.
        public var participantId: Swift.String?
        /// The role of participant. For example, is it a customer, agent, or system.
        /// This member is required.
        public var participantRole: Swift.String?
        /// The sentiment of the detected for this piece of transcript.
        /// This member is required.
        public var sentiment: ConnectContactLensClientTypes.SentimentValue?

        public init (
            beginOffsetMillis: Swift.Int = 0,
            content: Swift.String? = nil,
            endOffsetMillis: Swift.Int = 0,
            id: Swift.String? = nil,
            issuesDetected: [ConnectContactLensClientTypes.IssueDetected]? = nil,
            participantId: Swift.String? = nil,
            participantRole: Swift.String? = nil,
            sentiment: ConnectContactLensClientTypes.SentimentValue? = nil
        )
        {
            self.beginOffsetMillis = beginOffsetMillis
            self.content = content
            self.endOffsetMillis = endOffsetMillis
            self.id = id
            self.issuesDetected = issuesDetected
            self.participantId = participantId
            self.participantRole = participantRole
            self.sentiment = sentiment
        }
    }

}
