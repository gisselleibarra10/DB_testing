// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateUserInputBody: Swift.Equatable {
    let givenName: Swift.String?
    let surname: Swift.String?
    let type: WorkDocsClientTypes.UserType?
    let storageRule: WorkDocsClientTypes.StorageRuleType?
    let timeZoneId: Swift.String?
    let locale: WorkDocsClientTypes.LocaleType?
    let grantPoweruserPrivileges: WorkDocsClientTypes.BooleanEnumType?
}

extension UpdateUserInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case givenName = "GivenName"
        case grantPoweruserPrivileges = "GrantPoweruserPrivileges"
        case locale = "Locale"
        case storageRule = "StorageRule"
        case surname = "Surname"
        case timeZoneId = "TimeZoneId"
        case type = "Type"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let givenNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .givenName)
        givenName = givenNameDecoded
        let surnameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .surname)
        surname = surnameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(WorkDocsClientTypes.UserType.self, forKey: .type)
        type = typeDecoded
        let storageRuleDecoded = try containerValues.decodeIfPresent(WorkDocsClientTypes.StorageRuleType.self, forKey: .storageRule)
        storageRule = storageRuleDecoded
        let timeZoneIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .timeZoneId)
        timeZoneId = timeZoneIdDecoded
        let localeDecoded = try containerValues.decodeIfPresent(WorkDocsClientTypes.LocaleType.self, forKey: .locale)
        locale = localeDecoded
        let grantPoweruserPrivilegesDecoded = try containerValues.decodeIfPresent(WorkDocsClientTypes.BooleanEnumType.self, forKey: .grantPoweruserPrivileges)
        grantPoweruserPrivileges = grantPoweruserPrivilegesDecoded
    }
}
