// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WorkDocsClientTypes.Participants: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groups = "Groups"
        case users = "Users"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let groups = groups {
            var groupsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .groups)
            for groupmetadatalist0 in groups {
                try groupsContainer.encode(groupmetadatalist0)
            }
        }
        if let users = users {
            var usersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .users)
            for usermetadatalist0 in users {
                try usersContainer.encode(usermetadatalist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let usersContainer = try containerValues.decodeIfPresent([WorkDocsClientTypes.UserMetadata?].self, forKey: .users)
        var usersDecoded0:[WorkDocsClientTypes.UserMetadata]? = nil
        if let usersContainer = usersContainer {
            usersDecoded0 = [WorkDocsClientTypes.UserMetadata]()
            for structure0 in usersContainer {
                if let structure0 = structure0 {
                    usersDecoded0?.append(structure0)
                }
            }
        }
        users = usersDecoded0
        let groupsContainer = try containerValues.decodeIfPresent([WorkDocsClientTypes.GroupMetadata?].self, forKey: .groups)
        var groupsDecoded0:[WorkDocsClientTypes.GroupMetadata]? = nil
        if let groupsContainer = groupsContainer {
            groupsDecoded0 = [WorkDocsClientTypes.GroupMetadata]()
            for structure0 in groupsContainer {
                if let structure0 = structure0 {
                    groupsDecoded0?.append(structure0)
                }
            }
        }
        groups = groupsDecoded0
    }
}
