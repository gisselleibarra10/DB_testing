// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeUsersOutputResponseBody: Swift.Equatable {
    let users: [WorkDocsClientTypes.User]?
    let totalNumberOfUsers: Swift.Int?
    let marker: Swift.String?
}

extension DescribeUsersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case totalNumberOfUsers = "TotalNumberOfUsers"
        case users = "Users"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let usersContainer = try containerValues.decodeIfPresent([WorkDocsClientTypes.User?].self, forKey: .users)
        var usersDecoded0:[WorkDocsClientTypes.User]? = nil
        if let usersContainer = usersContainer {
            usersDecoded0 = [WorkDocsClientTypes.User]()
            for structure0 in usersContainer {
                if let structure0 = structure0 {
                    usersDecoded0?.append(structure0)
                }
            }
        }
        users = usersDecoded0
        let totalNumberOfUsersDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalNumberOfUsers)
        totalNumberOfUsers = totalNumberOfUsersDecoded
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
