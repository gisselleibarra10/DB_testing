// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeActivitiesInput: Swift.Equatable {
    /// Specifies which activity types to include in the response. If this field is left empty, all activity types are returned.
    public var activityTypes: Swift.String?
    /// Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.
    public var authenticationToken: Swift.String?
    /// The timestamp that determines the end time of the activities. The response includes the activities performed before the specified timestamp.
    public var endTime: ClientRuntime.Date?
    /// Includes indirect activities. An indirect activity results from a direct activity performed on a parent resource. For example, sharing a parent folder (the direct activity) shares all of the subfolders and documents within the parent folder (the indirect activity).
    public var includeIndirectActivities: Swift.Bool
    /// The maximum number of items to return.
    public var limit: Swift.Int?
    /// The marker for the next set of results.
    public var marker: Swift.String?
    /// The ID of the organization. This is a mandatory parameter when using administrative API (SigV4) requests.
    public var organizationId: Swift.String?
    /// The document or folder ID for which to describe activity types.
    public var resourceId: Swift.String?
    /// The timestamp that determines the starting time of the activities. The response includes the activities performed after the specified timestamp.
    public var startTime: ClientRuntime.Date?
    /// The ID of the user who performed the action. The response includes activities pertaining to this user. This is an optional parameter and is only applicable for administrative API (SigV4) requests.
    public var userId: Swift.String?

    public init (
        activityTypes: Swift.String? = nil,
        authenticationToken: Swift.String? = nil,
        endTime: ClientRuntime.Date? = nil,
        includeIndirectActivities: Swift.Bool = false,
        limit: Swift.Int? = nil,
        marker: Swift.String? = nil,
        organizationId: Swift.String? = nil,
        resourceId: Swift.String? = nil,
        startTime: ClientRuntime.Date? = nil,
        userId: Swift.String? = nil
    )
    {
        self.activityTypes = activityTypes
        self.authenticationToken = authenticationToken
        self.endTime = endTime
        self.includeIndirectActivities = includeIndirectActivities
        self.limit = limit
        self.marker = marker
        self.organizationId = organizationId
        self.resourceId = resourceId
        self.startTime = startTime
        self.userId = userId
    }
}
