// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension WorkDocsClientTypes {
    public enum LocaleType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case de
        case `default`
        case en
        case es
        case fr
        case ja
        case ko
        case ptBr
        case ru
        case zhCn
        case zhTw
        case sdkUnknown(Swift.String)

        public static var allCases: [LocaleType] {
            return [
                .de,
                .default,
                .en,
                .es,
                .fr,
                .ja,
                .ko,
                .ptBr,
                .ru,
                .zhCn,
                .zhTw,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .de: return "de"
            case .default: return "default"
            case .en: return "en"
            case .es: return "es"
            case .fr: return "fr"
            case .ja: return "ja"
            case .ko: return "ko"
            case .ptBr: return "pt_BR"
            case .ru: return "ru"
            case .zhCn: return "zh_CN"
            case .zhTw: return "zh_TW"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = LocaleType(rawValue: rawValue) ?? LocaleType.sdkUnknown(rawValue)
        }
    }
}
