// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InitiateDocumentVersionUploadInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contentCreatedTimestamp = "ContentCreatedTimestamp"
        case contentModifiedTimestamp = "ContentModifiedTimestamp"
        case contentType = "ContentType"
        case documentSizeInBytes = "DocumentSizeInBytes"
        case id = "Id"
        case name = "Name"
        case parentFolderId = "ParentFolderId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contentCreatedTimestamp = self.contentCreatedTimestamp {
            try encodeContainer.encode(contentCreatedTimestamp.timeIntervalSince1970, forKey: .contentCreatedTimestamp)
        }
        if let contentModifiedTimestamp = self.contentModifiedTimestamp {
            try encodeContainer.encode(contentModifiedTimestamp.timeIntervalSince1970, forKey: .contentModifiedTimestamp)
        }
        if let contentType = self.contentType {
            try encodeContainer.encode(contentType, forKey: .contentType)
        }
        if let documentSizeInBytes = self.documentSizeInBytes {
            try encodeContainer.encode(documentSizeInBytes, forKey: .documentSizeInBytes)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let parentFolderId = self.parentFolderId {
            try encodeContainer.encode(parentFolderId, forKey: .parentFolderId)
        }
    }
}
