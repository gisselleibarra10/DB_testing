// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WorkDocsClientTypes.ShareResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inviteePrincipalId = "InviteePrincipalId"
        case principalId = "PrincipalId"
        case role = "Role"
        case shareId = "ShareId"
        case status = "Status"
        case statusMessage = "StatusMessage"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inviteePrincipalId = self.inviteePrincipalId {
            try encodeContainer.encode(inviteePrincipalId, forKey: .inviteePrincipalId)
        }
        if let principalId = self.principalId {
            try encodeContainer.encode(principalId, forKey: .principalId)
        }
        if let role = self.role {
            try encodeContainer.encode(role.rawValue, forKey: .role)
        }
        if let shareId = self.shareId {
            try encodeContainer.encode(shareId, forKey: .shareId)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let statusMessage = self.statusMessage {
            try encodeContainer.encode(statusMessage, forKey: .statusMessage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let principalIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .principalId)
        principalId = principalIdDecoded
        let inviteePrincipalIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .inviteePrincipalId)
        inviteePrincipalId = inviteePrincipalIdDecoded
        let roleDecoded = try containerValues.decodeIfPresent(WorkDocsClientTypes.RoleType.self, forKey: .role)
        role = roleDecoded
        let statusDecoded = try containerValues.decodeIfPresent(WorkDocsClientTypes.ShareStatusType.self, forKey: .status)
        status = statusDecoded
        let shareIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .shareId)
        shareId = shareIdDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
    }
}
