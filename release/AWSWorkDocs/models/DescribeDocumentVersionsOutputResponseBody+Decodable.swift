// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDocumentVersionsOutputResponseBody: Swift.Equatable {
    let documentVersions: [WorkDocsClientTypes.DocumentVersionMetadata]?
    let marker: Swift.String?
}

extension DescribeDocumentVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case documentVersions = "DocumentVersions"
        case marker = "Marker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentVersionsContainer = try containerValues.decodeIfPresent([WorkDocsClientTypes.DocumentVersionMetadata?].self, forKey: .documentVersions)
        var documentVersionsDecoded0:[WorkDocsClientTypes.DocumentVersionMetadata]? = nil
        if let documentVersionsContainer = documentVersionsContainer {
            documentVersionsDecoded0 = [WorkDocsClientTypes.DocumentVersionMetadata]()
            for structure0 in documentVersionsContainer {
                if let structure0 = structure0 {
                    documentVersionsDecoded0?.append(structure0)
                }
            }
        }
        documentVersions = documentVersionsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
