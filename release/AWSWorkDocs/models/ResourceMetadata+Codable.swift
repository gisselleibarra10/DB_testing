// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WorkDocsClientTypes.ResourceMetadata: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case id = "Id"
        case name = "Name"
        case originalName = "OriginalName"
        case owner = "Owner"
        case parentId = "ParentId"
        case type = "Type"
        case versionId = "VersionId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let originalName = self.originalName {
            try encodeContainer.encode(originalName, forKey: .originalName)
        }
        if let owner = self.owner {
            try encodeContainer.encode(owner, forKey: .owner)
        }
        if let parentId = self.parentId {
            try encodeContainer.encode(parentId, forKey: .parentId)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
        if let versionId = self.versionId {
            try encodeContainer.encode(versionId, forKey: .versionId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(WorkDocsClientTypes.ResourceType.self, forKey: .type)
        type = typeDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let originalNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .originalName)
        originalName = originalNameDecoded
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let versionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .versionId)
        versionId = versionIdDecoded
        let ownerDecoded = try containerValues.decodeIfPresent(WorkDocsClientTypes.UserMetadata.self, forKey: .owner)
        owner = ownerDecoded
        let parentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parentId)
        parentId = parentIdDecoded
    }
}
