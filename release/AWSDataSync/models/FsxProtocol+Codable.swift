// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataSyncClientTypes.FsxProtocol: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nFS = "NFS"
        case sMB = "SMB"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let nFS = self.nFS {
            try encodeContainer.encode(nFS, forKey: .nFS)
        }
        if let sMB = self.sMB {
            try encodeContainer.encode(sMB, forKey: .sMB)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nFSDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.FsxProtocolNfs.self, forKey: .nFS)
        nFS = nFSDecoded
        let sMBDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.FsxProtocolSmb.self, forKey: .sMB)
        sMB = sMBDecoded
    }
}
