// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataSyncClientTypes.TaskExecutionListEntry: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case status = "Status"
        case taskExecutionArn = "TaskExecutionArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let taskExecutionArn = self.taskExecutionArn {
            try encodeContainer.encode(taskExecutionArn, forKey: .taskExecutionArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskExecutionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskExecutionArn)
        taskExecutionArn = taskExecutionArnDecoded
        let statusDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.TaskExecutionStatus.self, forKey: .status)
        status = statusDecoded
    }
}
