// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct UpdateLocationHdfsInput: Swift.Equatable {
    /// The ARNs of the agents that are used to connect to the HDFS cluster.
    public var agentArns: [Swift.String]?
    /// The type of authentication used to determine the identity of the user.
    public var authenticationType: DataSyncClientTypes.HdfsAuthenticationType?
    /// The size of the data blocks to write into the HDFS cluster.
    public var blockSize: Swift.Int?
    /// The Kerberos key table (keytab) that contains mappings between the defined Kerberos principal and the encrypted keys. You can load the keytab from a file by providing the file's address. If you use the CLI, it performs base64 encoding for you. Otherwise, provide the base64-encoded text.
    public var kerberosKeytab: ClientRuntime.Data?
    /// The krb5.conf file that contains the Kerberos configuration information. You can load the krb5.conf file by providing the file's address. If you're using the CLI, it performs the base64 encoding for you. Otherwise, provide the base64-encoded text.
    public var kerberosKrb5Conf: ClientRuntime.Data?
    /// The Kerberos principal with access to the files and folders on the HDFS cluster.
    public var kerberosPrincipal: Swift.String?
    /// The URI of the HDFS cluster's Key Management Server (KMS).
    public var kmsKeyProviderUri: Swift.String?
    /// The Amazon Resource Name (ARN) of the source HDFS cluster location.
    /// This member is required.
    public var locationArn: Swift.String?
    /// The NameNode that manages the HDFS namespace. The NameNode performs operations such as opening, closing, and renaming files and directories. The NameNode contains the information to map blocks of data to the DataNodes. You can use only one NameNode.
    public var nameNodes: [DataSyncClientTypes.HdfsNameNode]?
    /// The Quality of Protection (QOP) configuration specifies the Remote Procedure Call (RPC) and data transfer privacy settings configured on the Hadoop Distributed File System (HDFS) cluster.
    public var qopConfiguration: DataSyncClientTypes.QopConfiguration?
    /// The number of DataNodes to replicate the data to when writing to the HDFS cluster.
    public var replicationFactor: Swift.Int?
    /// The user name used to identify the client on the host operating system.
    public var simpleUser: Swift.String?
    /// A subdirectory in the HDFS cluster. This subdirectory is used to read data from or write data to the HDFS cluster.
    public var subdirectory: Swift.String?

    public init (
        agentArns: [Swift.String]? = nil,
        authenticationType: DataSyncClientTypes.HdfsAuthenticationType? = nil,
        blockSize: Swift.Int? = nil,
        kerberosKeytab: ClientRuntime.Data? = nil,
        kerberosKrb5Conf: ClientRuntime.Data? = nil,
        kerberosPrincipal: Swift.String? = nil,
        kmsKeyProviderUri: Swift.String? = nil,
        locationArn: Swift.String? = nil,
        nameNodes: [DataSyncClientTypes.HdfsNameNode]? = nil,
        qopConfiguration: DataSyncClientTypes.QopConfiguration? = nil,
        replicationFactor: Swift.Int? = nil,
        simpleUser: Swift.String? = nil,
        subdirectory: Swift.String? = nil
    )
    {
        self.agentArns = agentArns
        self.authenticationType = authenticationType
        self.blockSize = blockSize
        self.kerberosKeytab = kerberosKeytab
        self.kerberosKrb5Conf = kerberosKrb5Conf
        self.kerberosPrincipal = kerberosPrincipal
        self.kmsKeyProviderUri = kmsKeyProviderUri
        self.locationArn = locationArn
        self.nameNodes = nameNodes
        self.qopConfiguration = qopConfiguration
        self.replicationFactor = replicationFactor
        self.simpleUser = simpleUser
        self.subdirectory = subdirectory
    }
}
