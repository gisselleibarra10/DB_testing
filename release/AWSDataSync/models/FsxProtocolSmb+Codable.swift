// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataSyncClientTypes.FsxProtocolSmb: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domain = "Domain"
        case mountOptions = "MountOptions"
        case password = "Password"
        case user = "User"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let domain = self.domain {
            try encodeContainer.encode(domain, forKey: .domain)
        }
        if let mountOptions = self.mountOptions {
            try encodeContainer.encode(mountOptions, forKey: .mountOptions)
        }
        if let password = self.password {
            try encodeContainer.encode(password, forKey: .password)
        }
        if let user = self.user {
            try encodeContainer.encode(user, forKey: .user)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domain)
        domain = domainDecoded
        let mountOptionsDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.SmbMountOptions.self, forKey: .mountOptions)
        mountOptions = mountOptionsDecoded
        let passwordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .password)
        password = passwordDecoded
        let userDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .user)
        user = userDecoded
    }
}
