// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLocationEfsInputBody: Swift.Equatable {
    let subdirectory: Swift.String?
    let efsFilesystemArn: Swift.String?
    let ec2Config: DataSyncClientTypes.Ec2Config?
    let tags: [DataSyncClientTypes.TagListEntry]?
    let accessPointArn: Swift.String?
    let fileSystemAccessRoleArn: Swift.String?
    let inTransitEncryption: DataSyncClientTypes.EfsInTransitEncryption?
}

extension CreateLocationEfsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessPointArn = "AccessPointArn"
        case ec2Config = "Ec2Config"
        case efsFilesystemArn = "EfsFilesystemArn"
        case fileSystemAccessRoleArn = "FileSystemAccessRoleArn"
        case inTransitEncryption = "InTransitEncryption"
        case subdirectory = "Subdirectory"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subdirectoryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subdirectory)
        subdirectory = subdirectoryDecoded
        let efsFilesystemArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .efsFilesystemArn)
        efsFilesystemArn = efsFilesystemArnDecoded
        let ec2ConfigDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.Ec2Config.self, forKey: .ec2Config)
        ec2Config = ec2ConfigDecoded
        let tagsContainer = try containerValues.decodeIfPresent([DataSyncClientTypes.TagListEntry?].self, forKey: .tags)
        var tagsDecoded0:[DataSyncClientTypes.TagListEntry]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [DataSyncClientTypes.TagListEntry]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
        let accessPointArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accessPointArn)
        accessPointArn = accessPointArnDecoded
        let fileSystemAccessRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fileSystemAccessRoleArn)
        fileSystemAccessRoleArn = fileSystemAccessRoleArnDecoded
        let inTransitEncryptionDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.EfsInTransitEncryption.self, forKey: .inTransitEncryption)
        inTransitEncryption = inTransitEncryptionDecoded
    }
}
