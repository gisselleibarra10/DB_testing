// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTaskExecutionsOutputResponseBody: Swift.Equatable {
    let taskExecutions: [DataSyncClientTypes.TaskExecutionListEntry]?
    let nextToken: Swift.String?
}

extension ListTaskExecutionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case taskExecutions = "TaskExecutions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskExecutionsContainer = try containerValues.decodeIfPresent([DataSyncClientTypes.TaskExecutionListEntry?].self, forKey: .taskExecutions)
        var taskExecutionsDecoded0:[DataSyncClientTypes.TaskExecutionListEntry]? = nil
        if let taskExecutionsContainer = taskExecutionsContainer {
            taskExecutionsDecoded0 = [DataSyncClientTypes.TaskExecutionListEntry]()
            for structure0 in taskExecutionsContainer {
                if let structure0 = structure0 {
                    taskExecutionsDecoded0?.append(structure0)
                }
            }
        }
        taskExecutions = taskExecutionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
