// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// CreateLocationS3Request
public struct CreateLocationS3Input: Swift.Equatable {
    /// If you're using DataSync on an Amazon Web Services Outpost, specify the Amazon Resource Names (ARNs) of the DataSync agents deployed on your Outpost. For more information about launching a DataSync agent on an Amazon Web Services Outpost, see [Deploy your DataSync agent on Outposts](https://docs.aws.amazon.com/datasync/latest/userguide/deploy-agents.html#outposts-agent).
    public var agentArns: [Swift.String]?
    /// The ARN of the Amazon S3 bucket. If the bucket is on an Amazon Web Services Outpost, this must be an access point ARN.
    /// This member is required.
    public var s3BucketArn: Swift.String?
    /// The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role used to access an Amazon S3 bucket. For detailed information about using such a role, see Creating a Location for Amazon S3 in the DataSync User Guide.
    /// This member is required.
    public var s3Config: DataSyncClientTypes.S3Config?
    /// The Amazon S3 storage class that you want to store your files in when this location is used as a task destination. For buckets in Amazon Web Services Regions, the storage class defaults to Standard. For buckets on Outposts, the storage class defaults to Amazon Web Services S3 Outposts. For more information about S3 storage classes, see [Amazon S3 Storage Classes](http://aws.amazon.com/s3/storage-classes/). Some storage classes have behaviors that can affect your S3 storage cost. For detailed information, see [Considerations when working with S3 storage classes in DataSync](https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes).
    public var s3StorageClass: DataSyncClientTypes.S3StorageClass?
    /// A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location or write data to the S3 destination.
    public var subdirectory: Swift.String?
    /// The key-value pair that represents the tag that you want to add to the location. The value can be an empty string. We recommend using tags to name your resources.
    public var tags: [DataSyncClientTypes.TagListEntry]?

    public init (
        agentArns: [Swift.String]? = nil,
        s3BucketArn: Swift.String? = nil,
        s3Config: DataSyncClientTypes.S3Config? = nil,
        s3StorageClass: DataSyncClientTypes.S3StorageClass? = nil,
        subdirectory: Swift.String? = nil,
        tags: [DataSyncClientTypes.TagListEntry]? = nil
    )
    {
        self.agentArns = agentArns
        self.s3BucketArn = s3BucketArn
        self.s3Config = s3Config
        self.s3StorageClass = s3StorageClass
        self.subdirectory = subdirectory
        self.tags = tags
    }
}
