// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateLocationObjectStorageInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessKey = "AccessKey"
        case agentArns = "AgentArns"
        case locationArn = "LocationArn"
        case secretKey = "SecretKey"
        case serverPort = "ServerPort"
        case serverProtocol = "ServerProtocol"
        case subdirectory = "Subdirectory"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessKey = self.accessKey {
            try encodeContainer.encode(accessKey, forKey: .accessKey)
        }
        if let agentArns = agentArns {
            var agentArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .agentArns)
            for agentarnlist0 in agentArns {
                try agentArnsContainer.encode(agentarnlist0)
            }
        }
        if let locationArn = self.locationArn {
            try encodeContainer.encode(locationArn, forKey: .locationArn)
        }
        if let secretKey = self.secretKey {
            try encodeContainer.encode(secretKey, forKey: .secretKey)
        }
        if let serverPort = self.serverPort {
            try encodeContainer.encode(serverPort, forKey: .serverPort)
        }
        if let serverProtocol = self.serverProtocol {
            try encodeContainer.encode(serverProtocol.rawValue, forKey: .serverProtocol)
        }
        if let subdirectory = self.subdirectory {
            try encodeContainer.encode(subdirectory, forKey: .subdirectory)
        }
    }
}
