// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartTaskExecutionInputBody: Swift.Equatable {
    let taskArn: Swift.String?
    let overrideOptions: DataSyncClientTypes.Options?
    let includes: [DataSyncClientTypes.FilterRule]?
    let excludes: [DataSyncClientTypes.FilterRule]?
}

extension StartTaskExecutionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case excludes = "Excludes"
        case includes = "Includes"
        case overrideOptions = "OverrideOptions"
        case taskArn = "TaskArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskArn)
        taskArn = taskArnDecoded
        let overrideOptionsDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.Options.self, forKey: .overrideOptions)
        overrideOptions = overrideOptionsDecoded
        let includesContainer = try containerValues.decodeIfPresent([DataSyncClientTypes.FilterRule?].self, forKey: .includes)
        var includesDecoded0:[DataSyncClientTypes.FilterRule]? = nil
        if let includesContainer = includesContainer {
            includesDecoded0 = [DataSyncClientTypes.FilterRule]()
            for structure0 in includesContainer {
                if let structure0 = structure0 {
                    includesDecoded0?.append(structure0)
                }
            }
        }
        includes = includesDecoded0
        let excludesContainer = try containerValues.decodeIfPresent([DataSyncClientTypes.FilterRule?].self, forKey: .excludes)
        var excludesDecoded0:[DataSyncClientTypes.FilterRule]? = nil
        if let excludesContainer = excludesContainer {
            excludesDecoded0 = [DataSyncClientTypes.FilterRule]()
            for structure0 in excludesContainer {
                if let structure0 = structure0 {
                    excludesDecoded0?.append(structure0)
                }
            }
        }
        excludes = excludesDecoded0
    }
}
