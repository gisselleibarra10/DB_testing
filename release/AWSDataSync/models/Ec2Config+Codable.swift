// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataSyncClientTypes.Ec2Config: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case securityGroupArns = "SecurityGroupArns"
        case subnetArn = "SubnetArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let securityGroupArns = securityGroupArns {
            var securityGroupArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .securityGroupArns)
            for ec2securitygrouparnlist0 in securityGroupArns {
                try securityGroupArnsContainer.encode(ec2securitygrouparnlist0)
            }
        }
        if let subnetArn = self.subnetArn {
            try encodeContainer.encode(subnetArn, forKey: .subnetArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subnetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subnetArn)
        subnetArn = subnetArnDecoded
        let securityGroupArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .securityGroupArns)
        var securityGroupArnsDecoded0:[Swift.String]? = nil
        if let securityGroupArnsContainer = securityGroupArnsContainer {
            securityGroupArnsDecoded0 = [Swift.String]()
            for string0 in securityGroupArnsContainer {
                if let string0 = string0 {
                    securityGroupArnsDecoded0?.append(string0)
                }
            }
        }
        securityGroupArns = securityGroupArnsDecoded0
    }
}
