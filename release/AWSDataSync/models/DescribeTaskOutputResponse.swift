// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// DescribeTaskResponse
public struct DescribeTaskOutputResponse: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of the Amazon CloudWatch log group that was used to monitor and log events in the task. For more information on these groups, see Working with Log Groups and Log Streams in the Amazon CloudWatch User Guide.
    public var cloudWatchLogGroupArn: Swift.String?
    /// The time that the task was created.
    public var creationTime: ClientRuntime.Date?
    /// The Amazon Resource Name (ARN) of the task execution that is syncing files.
    public var currentTaskExecutionArn: Swift.String?
    /// The Amazon Resource Name (ARN) of the Amazon Web Services storage resource's location.
    public var destinationLocationArn: Swift.String?
    /// The Amazon Resource Names (ARNs) of the destination elastic network interfaces (ENIs) that were created for your subnet.
    public var destinationNetworkInterfaceArns: [Swift.String]?
    /// Errors that DataSync encountered during execution of the task. You can use this error code to help troubleshoot issues.
    public var errorCode: Swift.String?
    /// Detailed description of an error that was encountered during the task execution. You can use this information to help troubleshoot issues.
    public var errorDetail: Swift.String?
    /// A list of filter rules that determines which files to exclude from a task. The list should contain a single filter string that consists of the patterns to exclude. The patterns are delimited by "|" (that is, a pipe), for example, "/folder1|/folder2".
    public var excludes: [DataSyncClientTypes.FilterRule]?
    /// A list of filter rules that determines which files to include when running a task. The pattern contains a single filter string that consists of the patterns to include. The patterns are delimited by "|" (that is, a pipe), for example, "/folder1|/folder2".
    public var includes: [DataSyncClientTypes.FilterRule]?
    /// The name of the task that was described.
    public var name: Swift.String?
    /// The set of configuration options that control the behavior of a single execution of the task that occurs when you call StartTaskExecution. You can configure these options to preserve metadata such as user ID (UID) and group (GID), file permissions, data integrity verification, and so on. For each individual task execution, you can override these options by specifying the overriding OverrideOptions value to [StartTaskExecution](https://docs.aws.amazon.com/datasync/latest/userguide/API_StartTaskExecution.html) operation.
    public var options: DataSyncClientTypes.Options?
    /// The schedule used to periodically transfer files from a source to a destination location.
    public var schedule: DataSyncClientTypes.TaskSchedule?
    /// The Amazon Resource Name (ARN) of the source file system's location.
    public var sourceLocationArn: Swift.String?
    /// The Amazon Resource Names (ARNs) of the source elastic network interfaces (ENIs) that were created for your subnet.
    public var sourceNetworkInterfaceArns: [Swift.String]?
    /// The status of the task that was described. For detailed information about task execution statuses, see Understanding Task Statuses in the DataSync User Guide.
    public var status: DataSyncClientTypes.TaskStatus?
    /// The Amazon Resource Name (ARN) of the task that was described.
    public var taskArn: Swift.String?

    public init (
        cloudWatchLogGroupArn: Swift.String? = nil,
        creationTime: ClientRuntime.Date? = nil,
        currentTaskExecutionArn: Swift.String? = nil,
        destinationLocationArn: Swift.String? = nil,
        destinationNetworkInterfaceArns: [Swift.String]? = nil,
        errorCode: Swift.String? = nil,
        errorDetail: Swift.String? = nil,
        excludes: [DataSyncClientTypes.FilterRule]? = nil,
        includes: [DataSyncClientTypes.FilterRule]? = nil,
        name: Swift.String? = nil,
        options: DataSyncClientTypes.Options? = nil,
        schedule: DataSyncClientTypes.TaskSchedule? = nil,
        sourceLocationArn: Swift.String? = nil,
        sourceNetworkInterfaceArns: [Swift.String]? = nil,
        status: DataSyncClientTypes.TaskStatus? = nil,
        taskArn: Swift.String? = nil
    )
    {
        self.cloudWatchLogGroupArn = cloudWatchLogGroupArn
        self.creationTime = creationTime
        self.currentTaskExecutionArn = currentTaskExecutionArn
        self.destinationLocationArn = destinationLocationArn
        self.destinationNetworkInterfaceArns = destinationNetworkInterfaceArns
        self.errorCode = errorCode
        self.errorDetail = errorDetail
        self.excludes = excludes
        self.includes = includes
        self.name = name
        self.options = options
        self.schedule = schedule
        self.sourceLocationArn = sourceLocationArn
        self.sourceNetworkInterfaceArns = sourceNetworkInterfaceArns
        self.status = status
        self.taskArn = taskArn
    }
}
