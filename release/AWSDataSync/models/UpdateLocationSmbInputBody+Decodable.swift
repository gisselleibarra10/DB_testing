// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateLocationSmbInputBody: Swift.Equatable {
    let locationArn: Swift.String?
    let subdirectory: Swift.String?
    let user: Swift.String?
    let domain: Swift.String?
    let password: Swift.String?
    let agentArns: [Swift.String]?
    let mountOptions: DataSyncClientTypes.SmbMountOptions?
}

extension UpdateLocationSmbInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case agentArns = "AgentArns"
        case domain = "Domain"
        case locationArn = "LocationArn"
        case mountOptions = "MountOptions"
        case password = "Password"
        case subdirectory = "Subdirectory"
        case user = "User"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let locationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .locationArn)
        locationArn = locationArnDecoded
        let subdirectoryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subdirectory)
        subdirectory = subdirectoryDecoded
        let userDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .user)
        user = userDecoded
        let domainDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domain)
        domain = domainDecoded
        let passwordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .password)
        password = passwordDecoded
        let agentArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .agentArns)
        var agentArnsDecoded0:[Swift.String]? = nil
        if let agentArnsContainer = agentArnsContainer {
            agentArnsDecoded0 = [Swift.String]()
            for string0 in agentArnsContainer {
                if let string0 = string0 {
                    agentArnsDecoded0?.append(string0)
                }
            }
        }
        agentArns = agentArnsDecoded0
        let mountOptionsDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.SmbMountOptions.self, forKey: .mountOptions)
        mountOptions = mountOptionsDecoded
    }
}
