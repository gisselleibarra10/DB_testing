// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateLocationFsxWindowsInput: Swift.Equatable {
    /// Specifies the name of the Windows domain that the FSx for Windows File Server belongs to.
    public var domain: Swift.String?
    /// Specifies the Amazon Resource Name (ARN) for the FSx for Windows File Server file system.
    /// This member is required.
    public var fsxFilesystemArn: Swift.String?
    /// Specifies the password of the user who has the permissions to access files and folders in the file system.
    /// This member is required.
    public var password: Swift.String?
    /// Specifies the ARNs of the security groups that provide access to your file system's preferred subnet. If you choose a security group that doesn't allow connections from within itself, do one of the following:
    ///
    /// * Configure the security group to allow it to communicate within itself.
    ///
    /// * Choose a different security group that can communicate with the mount target's security group.
    /// This member is required.
    public var securityGroupArns: [Swift.String]?
    /// Specifies a mount path for your file system using forward slashes. This is where DataSync reads or writes data (depending on if this is a source or destination location).
    public var subdirectory: Swift.String?
    /// Specifies labels that help you categorize, filter, and search for your Amazon Web Services resources. We recommend creating at least a name tag for your location.
    public var tags: [DataSyncClientTypes.TagListEntry]?
    /// Specifies the user who has the permissions to access files and folders in the file system. For information about choosing a user name that ensures sufficient permissions to files, folders, and metadata, see [user].
    /// This member is required.
    public var user: Swift.String?

    public init (
        domain: Swift.String? = nil,
        fsxFilesystemArn: Swift.String? = nil,
        password: Swift.String? = nil,
        securityGroupArns: [Swift.String]? = nil,
        subdirectory: Swift.String? = nil,
        tags: [DataSyncClientTypes.TagListEntry]? = nil,
        user: Swift.String? = nil
    )
    {
        self.domain = domain
        self.fsxFilesystemArn = fsxFilesystemArn
        self.password = password
        self.securityGroupArns = securityGroupArns
        self.subdirectory = subdirectory
        self.tags = tags
        self.user = user
    }
}
