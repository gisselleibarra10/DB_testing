// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DataSyncClientTypes {
    public enum TaskExecutionStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case error
        case launching
        case preparing
        case queued
        case success
        case transferring
        case verifying
        case sdkUnknown(Swift.String)

        public static var allCases: [TaskExecutionStatus] {
            return [
                .error,
                .launching,
                .preparing,
                .queued,
                .success,
                .transferring,
                .verifying,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .error: return "ERROR"
            case .launching: return "LAUNCHING"
            case .preparing: return "PREPARING"
            case .queued: return "QUEUED"
            case .success: return "SUCCESS"
            case .transferring: return "TRANSFERRING"
            case .verifying: return "VERIFYING"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = TaskExecutionStatus(rawValue: rawValue) ?? TaskExecutionStatus.sdkUnknown(rawValue)
        }
    }
}
