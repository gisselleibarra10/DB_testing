// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateLocationSmbInput: Swift.Equatable {
    /// The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
    public var agentArns: [Swift.String]?
    /// The name of the Windows domain that the SMB server belongs to.
    public var domain: Swift.String?
    /// The Amazon Resource Name (ARN) of the SMB location to update.
    /// This member is required.
    public var locationArn: Swift.String?
    /// Specifies how DataSync can access a location using the SMB protocol.
    public var mountOptions: DataSyncClientTypes.SmbMountOptions?
    /// The password of the user who can mount the share has the permissions to access files and folders in the SMB share.
    public var password: Swift.String?
    /// The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination. The SMB path should be a path that's exported by the SMB server, or a subdirectory of that path. The path should be such that it can be mounted by other SMB clients in your network. Subdirectory must be specified with forward slashes. For example, /path/to/folder. To transfer all the data in the folder that you specified, DataSync must have permissions to mount the SMB share and to access all the data in that share. To ensure this, do either of the following:
    ///
    /// * Ensure that the user/password specified belongs to the user who can mount the share and who has the appropriate permissions for all of the files and directories that you want DataSync to access.
    ///
    /// * Use credentials of a member of the Backup Operators group to mount the share.
    ///
    ///
    /// Doing either of these options enables the agent to access the data. For the agent to access directories, you must also enable all execute access.
    public var subdirectory: Swift.String?
    /// The user who can mount the share has the permissions to access files and folders in the SMB share.
    public var user: Swift.String?

    public init (
        agentArns: [Swift.String]? = nil,
        domain: Swift.String? = nil,
        locationArn: Swift.String? = nil,
        mountOptions: DataSyncClientTypes.SmbMountOptions? = nil,
        password: Swift.String? = nil,
        subdirectory: Swift.String? = nil,
        user: Swift.String? = nil
    )
    {
        self.agentArns = agentArns
        self.domain = domain
        self.locationArn = locationArn
        self.mountOptions = mountOptions
        self.password = password
        self.subdirectory = subdirectory
        self.user = user
    }
}
