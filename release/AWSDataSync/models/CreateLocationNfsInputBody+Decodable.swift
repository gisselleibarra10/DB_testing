// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLocationNfsInputBody: Swift.Equatable {
    let subdirectory: Swift.String?
    let serverHostname: Swift.String?
    let onPremConfig: DataSyncClientTypes.OnPremConfig?
    let mountOptions: DataSyncClientTypes.NfsMountOptions?
    let tags: [DataSyncClientTypes.TagListEntry]?
}

extension CreateLocationNfsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case mountOptions = "MountOptions"
        case onPremConfig = "OnPremConfig"
        case serverHostname = "ServerHostname"
        case subdirectory = "Subdirectory"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subdirectoryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subdirectory)
        subdirectory = subdirectoryDecoded
        let serverHostnameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serverHostname)
        serverHostname = serverHostnameDecoded
        let onPremConfigDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.OnPremConfig.self, forKey: .onPremConfig)
        onPremConfig = onPremConfigDecoded
        let mountOptionsDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.NfsMountOptions.self, forKey: .mountOptions)
        mountOptions = mountOptionsDecoded
        let tagsContainer = try containerValues.decodeIfPresent([DataSyncClientTypes.TagListEntry?].self, forKey: .tags)
        var tagsDecoded0:[DataSyncClientTypes.TagListEntry]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [DataSyncClientTypes.TagListEntry]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
