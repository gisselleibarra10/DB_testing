// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateLocationObjectStorageInputBody: Swift.Equatable {
    let locationArn: Swift.String?
    let serverPort: Swift.Int?
    let serverProtocol: DataSyncClientTypes.ObjectStorageServerProtocol?
    let subdirectory: Swift.String?
    let accessKey: Swift.String?
    let secretKey: Swift.String?
    let agentArns: [Swift.String]?
}

extension UpdateLocationObjectStorageInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessKey = "AccessKey"
        case agentArns = "AgentArns"
        case locationArn = "LocationArn"
        case secretKey = "SecretKey"
        case serverPort = "ServerPort"
        case serverProtocol = "ServerProtocol"
        case subdirectory = "Subdirectory"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let locationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .locationArn)
        locationArn = locationArnDecoded
        let serverPortDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .serverPort)
        serverPort = serverPortDecoded
        let serverProtocolDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.ObjectStorageServerProtocol.self, forKey: .serverProtocol)
        serverProtocol = serverProtocolDecoded
        let subdirectoryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subdirectory)
        subdirectory = subdirectoryDecoded
        let accessKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accessKey)
        accessKey = accessKeyDecoded
        let secretKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .secretKey)
        secretKey = secretKeyDecoded
        let agentArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .agentArns)
        var agentArnsDecoded0:[Swift.String]? = nil
        if let agentArnsContainer = agentArnsContainer {
            agentArnsDecoded0 = [Swift.String]()
            for string0 in agentArnsContainer {
                if let string0 = string0 {
                    agentArnsDecoded0?.append(string0)
                }
            }
        }
        agentArns = agentArnsDecoded0
    }
}
