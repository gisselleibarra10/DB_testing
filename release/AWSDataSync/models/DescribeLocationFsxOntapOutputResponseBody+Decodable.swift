// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLocationFsxOntapOutputResponseBody: Swift.Equatable {
    let creationTime: ClientRuntime.Date?
    let locationArn: Swift.String?
    let locationUri: Swift.String?
    let `protocol`: DataSyncClientTypes.FsxProtocol?
    let securityGroupArns: [Swift.String]?
    let storageVirtualMachineArn: Swift.String?
    let fsxFilesystemArn: Swift.String?
}

extension DescribeLocationFsxOntapOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case fsxFilesystemArn = "FsxFilesystemArn"
        case locationArn = "LocationArn"
        case locationUri = "LocationUri"
        case `protocol` = "Protocol"
        case securityGroupArns = "SecurityGroupArns"
        case storageVirtualMachineArn = "StorageVirtualMachineArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let locationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .locationArn)
        locationArn = locationArnDecoded
        let locationUriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .locationUri)
        locationUri = locationUriDecoded
        let protocolDecoded = try containerValues.decodeIfPresent(DataSyncClientTypes.FsxProtocol.self, forKey: .protocol)
        `protocol` = protocolDecoded
        let securityGroupArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .securityGroupArns)
        var securityGroupArnsDecoded0:[Swift.String]? = nil
        if let securityGroupArnsContainer = securityGroupArnsContainer {
            securityGroupArnsDecoded0 = [Swift.String]()
            for string0 in securityGroupArnsContainer {
                if let string0 = string0 {
                    securityGroupArnsDecoded0?.append(string0)
                }
            }
        }
        securityGroupArns = securityGroupArnsDecoded0
        let storageVirtualMachineArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .storageVirtualMachineArn)
        storageVirtualMachineArn = storageVirtualMachineArnDecoded
        let fsxFilesystemArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fsxFilesystemArn)
        fsxFilesystemArn = fsxFilesystemArnDecoded
    }
}
