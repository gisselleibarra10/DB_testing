// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KinesisAnalyticsV2ClientTypes {
    /// Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance. For more information, see [ Checkpoints for Fault Tolerance](https://ci.apache.org/projects/flink/flink-docs-release-1.8/concepts/programming-model.html#checkpoints-for-fault-tolerance) in the [Apache Flink Documentation](https://ci.apache.org/projects/flink/flink-docs-release-1.8/).
    public struct CheckpointConfiguration: Swift.Equatable {
        /// Describes the interval in milliseconds between checkpoint operations. If CheckpointConfiguration.ConfigurationType is DEFAULT, the application will use a CheckpointInterval value of 60000, even if this value is set to another value using this API or in application code.
        public var checkpointInterval: Swift.Int?
        /// Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application. If CheckpointConfiguration.ConfigurationType is DEFAULT, the application will use a CheckpointingEnabled value of true, even if this value is set to another value using this API or in application code.
        public var checkpointingEnabled: Swift.Bool?
        /// Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. You must set this property to CUSTOM in order to set the CheckpointingEnabled, CheckpointInterval, or MinPauseBetweenCheckpoints parameters. If this value is set to DEFAULT, the application will use the following values, even if they are set to other values using APIs or application code:
        ///
        /// * CheckpointingEnabled: true
        ///
        /// * CheckpointInterval: 60000
        ///
        /// * MinPauseBetweenCheckpoints: 5000
        /// This member is required.
        public var configurationType: KinesisAnalyticsV2ClientTypes.ConfigurationType?
        /// Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start. If a checkpoint operation takes longer than the CheckpointInterval, the application otherwise performs continual checkpoint operations. For more information, see [ Tuning Checkpointing](https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/large_state_tuning.html#tuning-checkpointing) in the [Apache Flink Documentation](https://ci.apache.org/projects/flink/flink-docs-release-1.8/). If CheckpointConfiguration.ConfigurationType is DEFAULT, the application will use a MinPauseBetweenCheckpoints value of 5000, even if this value is set using this API or in application code.
        public var minPauseBetweenCheckpoints: Swift.Int?

        public init (
            checkpointInterval: Swift.Int? = nil,
            checkpointingEnabled: Swift.Bool? = nil,
            configurationType: KinesisAnalyticsV2ClientTypes.ConfigurationType? = nil,
            minPauseBetweenCheckpoints: Swift.Int? = nil
        )
        {
            self.checkpointInterval = checkpointInterval
            self.checkpointingEnabled = checkpointingEnabled
            self.configurationType = configurationType
            self.minPauseBetweenCheckpoints = minPauseBetweenCheckpoints
        }
    }

}
