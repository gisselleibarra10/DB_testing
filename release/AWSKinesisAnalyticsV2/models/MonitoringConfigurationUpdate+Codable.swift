// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisAnalyticsV2ClientTypes.MonitoringConfigurationUpdate: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationTypeUpdate = "ConfigurationTypeUpdate"
        case logLevelUpdate = "LogLevelUpdate"
        case metricsLevelUpdate = "MetricsLevelUpdate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configurationTypeUpdate = self.configurationTypeUpdate {
            try encodeContainer.encode(configurationTypeUpdate.rawValue, forKey: .configurationTypeUpdate)
        }
        if let logLevelUpdate = self.logLevelUpdate {
            try encodeContainer.encode(logLevelUpdate.rawValue, forKey: .logLevelUpdate)
        }
        if let metricsLevelUpdate = self.metricsLevelUpdate {
            try encodeContainer.encode(metricsLevelUpdate.rawValue, forKey: .metricsLevelUpdate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationTypeUpdateDecoded = try containerValues.decodeIfPresent(KinesisAnalyticsV2ClientTypes.ConfigurationType.self, forKey: .configurationTypeUpdate)
        configurationTypeUpdate = configurationTypeUpdateDecoded
        let metricsLevelUpdateDecoded = try containerValues.decodeIfPresent(KinesisAnalyticsV2ClientTypes.MetricsLevel.self, forKey: .metricsLevelUpdate)
        metricsLevelUpdate = metricsLevelUpdateDecoded
        let logLevelUpdateDecoded = try containerValues.decodeIfPresent(KinesisAnalyticsV2ClientTypes.LogLevel.self, forKey: .logLevelUpdate)
        logLevelUpdate = logLevelUpdateDecoded
    }
}
