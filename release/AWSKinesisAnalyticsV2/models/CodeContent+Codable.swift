// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisAnalyticsV2ClientTypes.CodeContent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case s3ContentLocation = "S3ContentLocation"
        case textContent = "TextContent"
        case zipFileContent = "ZipFileContent"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let s3ContentLocation = self.s3ContentLocation {
            try encodeContainer.encode(s3ContentLocation, forKey: .s3ContentLocation)
        }
        if let textContent = self.textContent {
            try encodeContainer.encode(textContent, forKey: .textContent)
        }
        if let zipFileContent = self.zipFileContent {
            try encodeContainer.encode(zipFileContent.base64EncodedString(), forKey: .zipFileContent)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let textContentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .textContent)
        textContent = textContentDecoded
        let zipFileContentDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .zipFileContent)
        zipFileContent = zipFileContentDecoded
        let s3ContentLocationDecoded = try containerValues.decodeIfPresent(KinesisAnalyticsV2ClientTypes.S3ContentLocation.self, forKey: .s3ContentLocation)
        s3ContentLocation = s3ContentLocationDecoded
    }
}
