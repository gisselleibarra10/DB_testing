// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KinesisAnalyticsV2ClientTypes {
    public enum RuntimeEnvironment: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case flink111
        case flink113
        case flink16
        case flink18
        case sql10
        case zeppelinFlink10
        case zeppelinFlink20
        case sdkUnknown(Swift.String)

        public static var allCases: [RuntimeEnvironment] {
            return [
                .flink111,
                .flink113,
                .flink16,
                .flink18,
                .sql10,
                .zeppelinFlink10,
                .zeppelinFlink20,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .flink111: return "FLINK-1_11"
            case .flink113: return "FLINK-1_13"
            case .flink16: return "FLINK-1_6"
            case .flink18: return "FLINK-1_8"
            case .sql10: return "SQL-1_0"
            case .zeppelinFlink10: return "ZEPPELIN-FLINK-1_0"
            case .zeppelinFlink20: return "ZEPPELIN-FLINK-2_0"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = RuntimeEnvironment(rawValue: rawValue) ?? RuntimeEnvironment.sdkUnknown(rawValue)
        }
    }
}
