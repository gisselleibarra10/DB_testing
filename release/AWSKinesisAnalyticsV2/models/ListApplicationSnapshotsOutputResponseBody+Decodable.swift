// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationSnapshotsOutputResponseBody: Swift.Equatable {
    let snapshotSummaries: [KinesisAnalyticsV2ClientTypes.SnapshotDetails]?
    let nextToken: Swift.String?
}

extension ListApplicationSnapshotsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case snapshotSummaries = "SnapshotSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let snapshotSummariesContainer = try containerValues.decodeIfPresent([KinesisAnalyticsV2ClientTypes.SnapshotDetails?].self, forKey: .snapshotSummaries)
        var snapshotSummariesDecoded0:[KinesisAnalyticsV2ClientTypes.SnapshotDetails]? = nil
        if let snapshotSummariesContainer = snapshotSummariesContainer {
            snapshotSummariesDecoded0 = [KinesisAnalyticsV2ClientTypes.SnapshotDetails]()
            for structure0 in snapshotSummariesContainer {
                if let structure0 = structure0 {
                    snapshotSummariesDecoded0?.append(structure0)
                }
            }
        }
        snapshotSummaries = snapshotSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
