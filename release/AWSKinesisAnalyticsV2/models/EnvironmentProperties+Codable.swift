// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisAnalyticsV2ClientTypes.EnvironmentProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case propertyGroups = "PropertyGroups"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let propertyGroups = propertyGroups {
            var propertyGroupsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .propertyGroups)
            for propertygroups0 in propertyGroups {
                try propertyGroupsContainer.encode(propertygroups0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let propertyGroupsContainer = try containerValues.decodeIfPresent([KinesisAnalyticsV2ClientTypes.PropertyGroup?].self, forKey: .propertyGroups)
        var propertyGroupsDecoded0:[KinesisAnalyticsV2ClientTypes.PropertyGroup]? = nil
        if let propertyGroupsContainer = propertyGroupsContainer {
            propertyGroupsDecoded0 = [KinesisAnalyticsV2ClientTypes.PropertyGroup]()
            for structure0 in propertyGroupsContainer {
                if let structure0 = structure0 {
                    propertyGroupsDecoded0?.append(structure0)
                }
            }
        }
        propertyGroups = propertyGroupsDecoded0
    }
}
