// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KinesisAnalyticsV2ClientTypes {
    /// For a SQL-based Kinesis Data Analytics application, describes updates to a specific input configuration (identified by the InputId of an application).
    public struct InputUpdate: Swift.Equatable {
        /// The input ID of the application input to be updated.
        /// This member is required.
        public var inputId: Swift.String?
        /// Describes the parallelism updates (the number of in-application streams Kinesis Data Analytics creates for the specific streaming source).
        public var inputParallelismUpdate: KinesisAnalyticsV2ClientTypes.InputParallelismUpdate?
        /// Describes updates to an [InputProcessingConfiguration].
        public var inputProcessingConfigurationUpdate: KinesisAnalyticsV2ClientTypes.InputProcessingConfigurationUpdate?
        /// Describes the data format on the streaming source, and how record elements on the streaming source map to columns of the in-application stream that is created.
        public var inputSchemaUpdate: KinesisAnalyticsV2ClientTypes.InputSchemaUpdate?
        /// If a Kinesis Data Firehose delivery stream is the streaming source to be updated, provides an updated stream ARN.
        public var kinesisFirehoseInputUpdate: KinesisAnalyticsV2ClientTypes.KinesisFirehoseInputUpdate?
        /// If a Kinesis data stream is the streaming source to be updated, provides an updated stream Amazon Resource Name (ARN).
        public var kinesisStreamsInputUpdate: KinesisAnalyticsV2ClientTypes.KinesisStreamsInputUpdate?
        /// The name prefix for in-application streams that Kinesis Data Analytics creates for the specific streaming source.
        public var namePrefixUpdate: Swift.String?

        public init (
            inputId: Swift.String? = nil,
            inputParallelismUpdate: KinesisAnalyticsV2ClientTypes.InputParallelismUpdate? = nil,
            inputProcessingConfigurationUpdate: KinesisAnalyticsV2ClientTypes.InputProcessingConfigurationUpdate? = nil,
            inputSchemaUpdate: KinesisAnalyticsV2ClientTypes.InputSchemaUpdate? = nil,
            kinesisFirehoseInputUpdate: KinesisAnalyticsV2ClientTypes.KinesisFirehoseInputUpdate? = nil,
            kinesisStreamsInputUpdate: KinesisAnalyticsV2ClientTypes.KinesisStreamsInputUpdate? = nil,
            namePrefixUpdate: Swift.String? = nil
        )
        {
            self.inputId = inputId
            self.inputParallelismUpdate = inputParallelismUpdate
            self.inputProcessingConfigurationUpdate = inputProcessingConfigurationUpdate
            self.inputSchemaUpdate = inputSchemaUpdate
            self.kinesisFirehoseInputUpdate = kinesisFirehoseInputUpdate
            self.kinesisStreamsInputUpdate = kinesisStreamsInputUpdate
            self.namePrefixUpdate = namePrefixUpdate
        }
    }

}
