// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisAnalyticsV2ClientTypes.MonitoringConfigurationDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationType = "ConfigurationType"
        case logLevel = "LogLevel"
        case metricsLevel = "MetricsLevel"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configurationType = self.configurationType {
            try encodeContainer.encode(configurationType.rawValue, forKey: .configurationType)
        }
        if let logLevel = self.logLevel {
            try encodeContainer.encode(logLevel.rawValue, forKey: .logLevel)
        }
        if let metricsLevel = self.metricsLevel {
            try encodeContainer.encode(metricsLevel.rawValue, forKey: .metricsLevel)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationTypeDecoded = try containerValues.decodeIfPresent(KinesisAnalyticsV2ClientTypes.ConfigurationType.self, forKey: .configurationType)
        configurationType = configurationTypeDecoded
        let metricsLevelDecoded = try containerValues.decodeIfPresent(KinesisAnalyticsV2ClientTypes.MetricsLevel.self, forKey: .metricsLevel)
        metricsLevel = metricsLevelDecoded
        let logLevelDecoded = try containerValues.decodeIfPresent(KinesisAnalyticsV2ClientTypes.LogLevel.self, forKey: .logLevel)
        logLevel = logLevelDecoded
    }
}
