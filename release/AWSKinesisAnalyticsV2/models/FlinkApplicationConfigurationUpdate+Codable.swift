// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisAnalyticsV2ClientTypes.FlinkApplicationConfigurationUpdate: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case checkpointConfigurationUpdate = "CheckpointConfigurationUpdate"
        case monitoringConfigurationUpdate = "MonitoringConfigurationUpdate"
        case parallelismConfigurationUpdate = "ParallelismConfigurationUpdate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let checkpointConfigurationUpdate = self.checkpointConfigurationUpdate {
            try encodeContainer.encode(checkpointConfigurationUpdate, forKey: .checkpointConfigurationUpdate)
        }
        if let monitoringConfigurationUpdate = self.monitoringConfigurationUpdate {
            try encodeContainer.encode(monitoringConfigurationUpdate, forKey: .monitoringConfigurationUpdate)
        }
        if let parallelismConfigurationUpdate = self.parallelismConfigurationUpdate {
            try encodeContainer.encode(parallelismConfigurationUpdate, forKey: .parallelismConfigurationUpdate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let checkpointConfigurationUpdateDecoded = try containerValues.decodeIfPresent(KinesisAnalyticsV2ClientTypes.CheckpointConfigurationUpdate.self, forKey: .checkpointConfigurationUpdate)
        checkpointConfigurationUpdate = checkpointConfigurationUpdateDecoded
        let monitoringConfigurationUpdateDecoded = try containerValues.decodeIfPresent(KinesisAnalyticsV2ClientTypes.MonitoringConfigurationUpdate.self, forKey: .monitoringConfigurationUpdate)
        monitoringConfigurationUpdate = monitoringConfigurationUpdateDecoded
        let parallelismConfigurationUpdateDecoded = try containerValues.decodeIfPresent(KinesisAnalyticsV2ClientTypes.ParallelismConfigurationUpdate.self, forKey: .parallelismConfigurationUpdate)
        parallelismConfigurationUpdate = parallelismConfigurationUpdateDecoded
    }
}
