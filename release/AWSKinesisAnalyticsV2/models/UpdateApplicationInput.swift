// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateApplicationInput: Swift.Equatable {
    /// Describes application configuration updates.
    public var applicationConfigurationUpdate: KinesisAnalyticsV2ClientTypes.ApplicationConfigurationUpdate?
    /// The name of the application to update.
    /// This member is required.
    public var applicationName: Swift.String?
    /// Describes application Amazon CloudWatch logging option updates. You can only update existing CloudWatch logging options with this action. To add a new CloudWatch logging option, use [AddApplicationCloudWatchLoggingOption].
    public var cloudWatchLoggingOptionUpdates: [KinesisAnalyticsV2ClientTypes.CloudWatchLoggingOptionUpdate]?
    /// A value you use to implement strong concurrency for application updates. You must provide the CurrentApplicationVersionId or the ConditionalToken. You get the application's current ConditionalToken using [DescribeApplication]. For better concurrency support, use the ConditionalToken parameter instead of CurrentApplicationVersionId.
    public var conditionalToken: Swift.String?
    /// The current application version ID. You must provide the CurrentApplicationVersionId or the ConditionalToken.You can retrieve the application version ID using [DescribeApplication]. For better concurrency support, use the ConditionalToken parameter instead of CurrentApplicationVersionId.
    public var currentApplicationVersionId: Swift.Int?
    /// Describes updates to the application's starting parameters.
    public var runConfigurationUpdate: KinesisAnalyticsV2ClientTypes.RunConfigurationUpdate?
    /// Describes updates to the service execution role.
    public var serviceExecutionRoleUpdate: Swift.String?

    public init (
        applicationConfigurationUpdate: KinesisAnalyticsV2ClientTypes.ApplicationConfigurationUpdate? = nil,
        applicationName: Swift.String? = nil,
        cloudWatchLoggingOptionUpdates: [KinesisAnalyticsV2ClientTypes.CloudWatchLoggingOptionUpdate]? = nil,
        conditionalToken: Swift.String? = nil,
        currentApplicationVersionId: Swift.Int? = nil,
        runConfigurationUpdate: KinesisAnalyticsV2ClientTypes.RunConfigurationUpdate? = nil,
        serviceExecutionRoleUpdate: Swift.String? = nil
    )
    {
        self.applicationConfigurationUpdate = applicationConfigurationUpdate
        self.applicationName = applicationName
        self.cloudWatchLoggingOptionUpdates = cloudWatchLoggingOptionUpdates
        self.conditionalToken = conditionalToken
        self.currentApplicationVersionId = currentApplicationVersionId
        self.runConfigurationUpdate = runConfigurationUpdate
        self.serviceExecutionRoleUpdate = serviceExecutionRoleUpdate
    }
}
