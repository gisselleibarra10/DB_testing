// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddApplicationReferenceDataSourceOutputResponseBody: Swift.Equatable {
    let applicationARN: Swift.String?
    let applicationVersionId: Swift.Int?
    let referenceDataSourceDescriptions: [KinesisAnalyticsV2ClientTypes.ReferenceDataSourceDescription]?
}

extension AddApplicationReferenceDataSourceOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationARN = "ApplicationARN"
        case applicationVersionId = "ApplicationVersionId"
        case referenceDataSourceDescriptions = "ReferenceDataSourceDescriptions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationARN)
        applicationARN = applicationARNDecoded
        let applicationVersionIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .applicationVersionId)
        applicationVersionId = applicationVersionIdDecoded
        let referenceDataSourceDescriptionsContainer = try containerValues.decodeIfPresent([KinesisAnalyticsV2ClientTypes.ReferenceDataSourceDescription?].self, forKey: .referenceDataSourceDescriptions)
        var referenceDataSourceDescriptionsDecoded0:[KinesisAnalyticsV2ClientTypes.ReferenceDataSourceDescription]? = nil
        if let referenceDataSourceDescriptionsContainer = referenceDataSourceDescriptionsContainer {
            referenceDataSourceDescriptionsDecoded0 = [KinesisAnalyticsV2ClientTypes.ReferenceDataSourceDescription]()
            for structure0 in referenceDataSourceDescriptionsContainer {
                if let structure0 = structure0 {
                    referenceDataSourceDescriptionsDecoded0?.append(structure0)
                }
            }
        }
        referenceDataSourceDescriptions = referenceDataSourceDescriptionsDecoded0
    }
}
