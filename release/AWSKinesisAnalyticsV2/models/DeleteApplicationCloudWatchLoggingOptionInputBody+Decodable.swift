// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteApplicationCloudWatchLoggingOptionInputBody: Swift.Equatable {
    let applicationName: Swift.String?
    let currentApplicationVersionId: Swift.Int?
    let cloudWatchLoggingOptionId: Swift.String?
    let conditionalToken: Swift.String?
}

extension DeleteApplicationCloudWatchLoggingOptionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationName = "ApplicationName"
        case cloudWatchLoggingOptionId = "CloudWatchLoggingOptionId"
        case conditionalToken = "ConditionalToken"
        case currentApplicationVersionId = "CurrentApplicationVersionId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let currentApplicationVersionIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .currentApplicationVersionId)
        currentApplicationVersionId = currentApplicationVersionIdDecoded
        let cloudWatchLoggingOptionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cloudWatchLoggingOptionId)
        cloudWatchLoggingOptionId = cloudWatchLoggingOptionIdDecoded
        let conditionalTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .conditionalToken)
        conditionalToken = conditionalTokenDecoded
    }
}
