// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationVersionsOutputResponseBody: Swift.Equatable {
    let applicationVersionSummaries: [KinesisAnalyticsV2ClientTypes.ApplicationVersionSummary]?
    let nextToken: Swift.String?
}

extension ListApplicationVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationVersionSummaries = "ApplicationVersionSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationVersionSummariesContainer = try containerValues.decodeIfPresent([KinesisAnalyticsV2ClientTypes.ApplicationVersionSummary?].self, forKey: .applicationVersionSummaries)
        var applicationVersionSummariesDecoded0:[KinesisAnalyticsV2ClientTypes.ApplicationVersionSummary]? = nil
        if let applicationVersionSummariesContainer = applicationVersionSummariesContainer {
            applicationVersionSummariesDecoded0 = [KinesisAnalyticsV2ClientTypes.ApplicationVersionSummary]()
            for structure0 in applicationVersionSummariesContainer {
                if let structure0 = structure0 {
                    applicationVersionSummariesDecoded0?.append(structure0)
                }
            }
        }
        applicationVersionSummaries = applicationVersionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
