// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResiliencehubClientTypes.ComponentRecommendation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appComponentName
        case configRecommendations
        case recommendationStatus
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appComponentName = self.appComponentName {
            try encodeContainer.encode(appComponentName, forKey: .appComponentName)
        }
        if let configRecommendations = configRecommendations {
            var configRecommendationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .configRecommendations)
            for configrecommendationlist0 in configRecommendations {
                try configRecommendationsContainer.encode(configrecommendationlist0)
            }
        }
        if let recommendationStatus = self.recommendationStatus {
            try encodeContainer.encode(recommendationStatus.rawValue, forKey: .recommendationStatus)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appComponentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appComponentName)
        appComponentName = appComponentNameDecoded
        let recommendationStatusDecoded = try containerValues.decodeIfPresent(ResiliencehubClientTypes.RecommendationComplianceStatus.self, forKey: .recommendationStatus)
        recommendationStatus = recommendationStatusDecoded
        let configRecommendationsContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.ConfigRecommendation?].self, forKey: .configRecommendations)
        var configRecommendationsDecoded0:[ResiliencehubClientTypes.ConfigRecommendation]? = nil
        if let configRecommendationsContainer = configRecommendationsContainer {
            configRecommendationsDecoded0 = [ResiliencehubClientTypes.ConfigRecommendation]()
            for structure0 in configRecommendationsContainer {
                if let structure0 = structure0 {
                    configRecommendationsDecoded0?.append(structure0)
                }
            }
        }
        configRecommendations = configRecommendationsDecoded0
    }
}
