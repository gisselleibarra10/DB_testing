// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAppComponentCompliancesOutputResponseBody: Swift.Equatable {
    let componentCompliances: [ResiliencehubClientTypes.AppComponentCompliance]?
    let nextToken: Swift.String?
}

extension ListAppComponentCompliancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case componentCompliances
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let componentCompliancesContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.AppComponentCompliance?].self, forKey: .componentCompliances)
        var componentCompliancesDecoded0:[ResiliencehubClientTypes.AppComponentCompliance]? = nil
        if let componentCompliancesContainer = componentCompliancesContainer {
            componentCompliancesDecoded0 = [ResiliencehubClientTypes.AppComponentCompliance]()
            for structure0 in componentCompliancesContainer {
                if let structure0 = structure0 {
                    componentCompliancesDecoded0?.append(structure0)
                }
            }
        }
        componentCompliances = componentCompliancesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
