// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResiliencehubClientTypes.RecommendationDisruptionCompliance: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case expectedComplianceStatus
        case expectedRpoDescription
        case expectedRpoInSecs
        case expectedRtoDescription
        case expectedRtoInSecs
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let expectedComplianceStatus = self.expectedComplianceStatus {
            try encodeContainer.encode(expectedComplianceStatus.rawValue, forKey: .expectedComplianceStatus)
        }
        if let expectedRpoDescription = self.expectedRpoDescription {
            try encodeContainer.encode(expectedRpoDescription, forKey: .expectedRpoDescription)
        }
        if expectedRpoInSecs != 0 {
            try encodeContainer.encode(expectedRpoInSecs, forKey: .expectedRpoInSecs)
        }
        if let expectedRtoDescription = self.expectedRtoDescription {
            try encodeContainer.encode(expectedRtoDescription, forKey: .expectedRtoDescription)
        }
        if expectedRtoInSecs != 0 {
            try encodeContainer.encode(expectedRtoInSecs, forKey: .expectedRtoInSecs)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let expectedComplianceStatusDecoded = try containerValues.decodeIfPresent(ResiliencehubClientTypes.ComplianceStatus.self, forKey: .expectedComplianceStatus)
        expectedComplianceStatus = expectedComplianceStatusDecoded
        let expectedRtoInSecsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .expectedRtoInSecs) ?? 0
        expectedRtoInSecs = expectedRtoInSecsDecoded
        let expectedRtoDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .expectedRtoDescription)
        expectedRtoDescription = expectedRtoDescriptionDecoded
        let expectedRpoInSecsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .expectedRpoInSecs) ?? 0
        expectedRpoInSecs = expectedRpoInSecsDecoded
        let expectedRpoDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .expectedRpoDescription)
        expectedRpoDescription = expectedRpoDescriptionDecoded
    }
}
