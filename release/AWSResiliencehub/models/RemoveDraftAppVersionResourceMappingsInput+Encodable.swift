// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RemoveDraftAppVersionResourceMappingsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appArn
        case appRegistryAppNames
        case logicalStackNames
        case resourceGroupNames
        case resourceNames
        case terraformSourceNames
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appArn = self.appArn {
            try encodeContainer.encode(appArn, forKey: .appArn)
        }
        if let appRegistryAppNames = appRegistryAppNames {
            var appRegistryAppNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .appRegistryAppNames)
            for entitynamelist0 in appRegistryAppNames {
                try appRegistryAppNamesContainer.encode(entitynamelist0)
            }
        }
        if let logicalStackNames = logicalStackNames {
            var logicalStackNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .logicalStackNames)
            for string255list0 in logicalStackNames {
                try logicalStackNamesContainer.encode(string255list0)
            }
        }
        if let resourceGroupNames = resourceGroupNames {
            var resourceGroupNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .resourceGroupNames)
            for entitynamelist0 in resourceGroupNames {
                try resourceGroupNamesContainer.encode(entitynamelist0)
            }
        }
        if let resourceNames = resourceNames {
            var resourceNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .resourceNames)
            for entitynamelist0 in resourceNames {
                try resourceNamesContainer.encode(entitynamelist0)
            }
        }
        if let terraformSourceNames = terraformSourceNames {
            var terraformSourceNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .terraformSourceNames)
            for string255list0 in terraformSourceNames {
                try terraformSourceNamesContainer.encode(string255list0)
            }
        }
    }
}
