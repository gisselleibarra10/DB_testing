// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUnsupportedAppVersionResourcesOutputResponseBody: Swift.Equatable {
    let unsupportedResources: [ResiliencehubClientTypes.UnsupportedResource]?
    let resolutionId: Swift.String?
    let nextToken: Swift.String?
}

extension ListUnsupportedAppVersionResourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case resolutionId
        case unsupportedResources
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let unsupportedResourcesContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.UnsupportedResource?].self, forKey: .unsupportedResources)
        var unsupportedResourcesDecoded0:[ResiliencehubClientTypes.UnsupportedResource]? = nil
        if let unsupportedResourcesContainer = unsupportedResourcesContainer {
            unsupportedResourcesDecoded0 = [ResiliencehubClientTypes.UnsupportedResource]()
            for structure0 in unsupportedResourcesContainer {
                if let structure0 = structure0 {
                    unsupportedResourcesDecoded0?.append(structure0)
                }
            }
        }
        unsupportedResources = unsupportedResourcesDecoded0
        let resolutionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resolutionId)
        resolutionId = resolutionIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
