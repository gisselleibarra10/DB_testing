// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTestRecommendationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let testRecommendations: [ResiliencehubClientTypes.TestRecommendation]?
}

extension ListTestRecommendationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case testRecommendations
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let testRecommendationsContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.TestRecommendation?].self, forKey: .testRecommendations)
        var testRecommendationsDecoded0:[ResiliencehubClientTypes.TestRecommendation]? = nil
        if let testRecommendationsContainer = testRecommendationsContainer {
            testRecommendationsDecoded0 = [ResiliencehubClientTypes.TestRecommendation]()
            for structure0 in testRecommendationsContainer {
                if let structure0 = structure0 {
                    testRecommendationsDecoded0?.append(structure0)
                }
            }
        }
        testRecommendations = testRecommendationsDecoded0
    }
}
