// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAppVersionResourcesOutputResponseBody: Swift.Equatable {
    let physicalResources: [ResiliencehubClientTypes.PhysicalResource]?
    let resolutionId: Swift.String?
    let nextToken: Swift.String?
}

extension ListAppVersionResourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case physicalResources
        case resolutionId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let physicalResourcesContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.PhysicalResource?].self, forKey: .physicalResources)
        var physicalResourcesDecoded0:[ResiliencehubClientTypes.PhysicalResource]? = nil
        if let physicalResourcesContainer = physicalResourcesContainer {
            physicalResourcesDecoded0 = [ResiliencehubClientTypes.PhysicalResource]()
            for structure0 in physicalResourcesContainer {
                if let structure0 = structure0 {
                    physicalResourcesDecoded0?.append(structure0)
                }
            }
        }
        physicalResources = physicalResourcesDecoded0
        let resolutionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resolutionId)
        resolutionId = resolutionIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
