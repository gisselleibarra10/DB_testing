// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResiliencehubClientTypes.ResourceMapping: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appRegistryAppName
        case logicalStackName
        case mappingType
        case physicalResourceId
        case resourceGroupName
        case resourceName
        case terraformSourceName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appRegistryAppName = self.appRegistryAppName {
            try encodeContainer.encode(appRegistryAppName, forKey: .appRegistryAppName)
        }
        if let logicalStackName = self.logicalStackName {
            try encodeContainer.encode(logicalStackName, forKey: .logicalStackName)
        }
        if let mappingType = self.mappingType {
            try encodeContainer.encode(mappingType.rawValue, forKey: .mappingType)
        }
        if let physicalResourceId = self.physicalResourceId {
            try encodeContainer.encode(physicalResourceId, forKey: .physicalResourceId)
        }
        if let resourceGroupName = self.resourceGroupName {
            try encodeContainer.encode(resourceGroupName, forKey: .resourceGroupName)
        }
        if let resourceName = self.resourceName {
            try encodeContainer.encode(resourceName, forKey: .resourceName)
        }
        if let terraformSourceName = self.terraformSourceName {
            try encodeContainer.encode(terraformSourceName, forKey: .terraformSourceName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceName)
        resourceName = resourceNameDecoded
        let logicalStackNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logicalStackName)
        logicalStackName = logicalStackNameDecoded
        let appRegistryAppNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appRegistryAppName)
        appRegistryAppName = appRegistryAppNameDecoded
        let resourceGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceGroupName)
        resourceGroupName = resourceGroupNameDecoded
        let mappingTypeDecoded = try containerValues.decodeIfPresent(ResiliencehubClientTypes.ResourceMappingType.self, forKey: .mappingType)
        mappingType = mappingTypeDecoded
        let physicalResourceIdDecoded = try containerValues.decodeIfPresent(ResiliencehubClientTypes.PhysicalResourceId.self, forKey: .physicalResourceId)
        physicalResourceId = physicalResourceIdDecoded
        let terraformSourceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .terraformSourceName)
        terraformSourceName = terraformSourceNameDecoded
    }
}
