// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ResiliencehubClientTypes {
    /// Defines the compliance of an application component against the resiliency policy.
    public struct AppComponentCompliance: Swift.Equatable {
        /// The name of the application component.
        public var appComponentName: Swift.String?
        /// The compliance of the application component against the resiliency policy.
        public var compliance: [Swift.String:ResiliencehubClientTypes.DisruptionCompliance]?
        /// The cost for the application.
        public var cost: ResiliencehubClientTypes.Cost?
        /// The compliance message.
        public var message: Swift.String?
        /// The current resiliency score for the application.
        public var resiliencyScore: ResiliencehubClientTypes.ResiliencyScore?
        /// The status of the action.
        public var status: ResiliencehubClientTypes.ComplianceStatus?

        public init (
            appComponentName: Swift.String? = nil,
            compliance: [Swift.String:ResiliencehubClientTypes.DisruptionCompliance]? = nil,
            cost: ResiliencehubClientTypes.Cost? = nil,
            message: Swift.String? = nil,
            resiliencyScore: ResiliencehubClientTypes.ResiliencyScore? = nil,
            status: ResiliencehubClientTypes.ComplianceStatus? = nil
        )
        {
            self.appComponentName = appComponentName
            self.compliance = compliance
            self.cost = cost
            self.message = message
            self.resiliencyScore = resiliencyScore
            self.status = status
        }
    }

}
