// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ResiliencehubClientTypes {
    /// Defines a resource mapping.
    public struct ResourceMapping: Swift.Equatable {
        /// The name of the application this resource is mapped to.
        public var appRegistryAppName: Swift.String?
        /// The name of the CloudFormation stack this resource is mapped to.
        public var logicalStackName: Swift.String?
        /// Specifies the type of resource mapping. AppRegistryApp The resource is mapped to another application. The name of the application is contained in the appRegistryAppName property. CfnStack The resource is mapped to a CloudFormation stack. The name of the CloudFormation stack is contained in the logicalStackName property. Resource The resource is mapped to another resource. The name of the resource is contained in the resourceName property. ResourceGroup The resource is mapped to a resource group. The name of the resource group is contained in the resourceGroupName property.
        /// This member is required.
        public var mappingType: ResiliencehubClientTypes.ResourceMappingType?
        /// The identifier of this resource.
        /// This member is required.
        public var physicalResourceId: ResiliencehubClientTypes.PhysicalResourceId?
        /// The name of the resource group this resource is mapped to.
        public var resourceGroupName: Swift.String?
        /// The name of the resource this resource is mapped to.
        public var resourceName: Swift.String?
        /// The short name of the Terraform source.
        public var terraformSourceName: Swift.String?

        public init (
            appRegistryAppName: Swift.String? = nil,
            logicalStackName: Swift.String? = nil,
            mappingType: ResiliencehubClientTypes.ResourceMappingType? = nil,
            physicalResourceId: ResiliencehubClientTypes.PhysicalResourceId? = nil,
            resourceGroupName: Swift.String? = nil,
            resourceName: Swift.String? = nil,
            terraformSourceName: Swift.String? = nil
        )
        {
            self.appRegistryAppName = appRegistryAppName
            self.logicalStackName = logicalStackName
            self.mappingType = mappingType
            self.physicalResourceId = physicalResourceId
            self.resourceGroupName = resourceGroupName
            self.resourceName = resourceName
            self.terraformSourceName = terraformSourceName
        }
    }

}
