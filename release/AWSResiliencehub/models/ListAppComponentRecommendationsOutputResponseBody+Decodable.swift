// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAppComponentRecommendationsOutputResponseBody: Swift.Equatable {
    let componentRecommendations: [ResiliencehubClientTypes.ComponentRecommendation]?
    let nextToken: Swift.String?
}

extension ListAppComponentRecommendationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case componentRecommendations
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let componentRecommendationsContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.ComponentRecommendation?].self, forKey: .componentRecommendations)
        var componentRecommendationsDecoded0:[ResiliencehubClientTypes.ComponentRecommendation]? = nil
        if let componentRecommendationsContainer = componentRecommendationsContainer {
            componentRecommendationsDecoded0 = [ResiliencehubClientTypes.ComponentRecommendation]()
            for structure0 in componentRecommendationsContainer {
                if let structure0 = structure0 {
                    componentRecommendationsDecoded0?.append(structure0)
                }
            }
        }
        componentRecommendations = componentRecommendationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
