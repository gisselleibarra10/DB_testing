// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAppVersionsOutputResponseBody: Swift.Equatable {
    let appVersions: [ResiliencehubClientTypes.AppVersionSummary]?
    let nextToken: Swift.String?
}

extension ListAppVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appVersions
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appVersionsContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.AppVersionSummary?].self, forKey: .appVersions)
        var appVersionsDecoded0:[ResiliencehubClientTypes.AppVersionSummary]? = nil
        if let appVersionsContainer = appVersionsContainer {
            appVersionsDecoded0 = [ResiliencehubClientTypes.AppVersionSummary]()
            for structure0 in appVersionsContainer {
                if let structure0 = structure0 {
                    appVersionsDecoded0?.append(structure0)
                }
            }
        }
        appVersions = appVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
