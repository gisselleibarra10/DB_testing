// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResiliencehubClientTypes.DisruptionCompliance: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case achievableRpoInSecs
        case achievableRtoInSecs
        case complianceStatus
        case currentRpoInSecs
        case currentRtoInSecs
        case message
        case rpoDescription
        case rpoReferenceId
        case rtoDescription
        case rtoReferenceId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if achievableRpoInSecs != 0 {
            try encodeContainer.encode(achievableRpoInSecs, forKey: .achievableRpoInSecs)
        }
        if achievableRtoInSecs != 0 {
            try encodeContainer.encode(achievableRtoInSecs, forKey: .achievableRtoInSecs)
        }
        if let complianceStatus = self.complianceStatus {
            try encodeContainer.encode(complianceStatus.rawValue, forKey: .complianceStatus)
        }
        if currentRpoInSecs != 0 {
            try encodeContainer.encode(currentRpoInSecs, forKey: .currentRpoInSecs)
        }
        if currentRtoInSecs != 0 {
            try encodeContainer.encode(currentRtoInSecs, forKey: .currentRtoInSecs)
        }
        if let message = self.message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let rpoDescription = self.rpoDescription {
            try encodeContainer.encode(rpoDescription, forKey: .rpoDescription)
        }
        if let rpoReferenceId = self.rpoReferenceId {
            try encodeContainer.encode(rpoReferenceId, forKey: .rpoReferenceId)
        }
        if let rtoDescription = self.rtoDescription {
            try encodeContainer.encode(rtoDescription, forKey: .rtoDescription)
        }
        if let rtoReferenceId = self.rtoReferenceId {
            try encodeContainer.encode(rtoReferenceId, forKey: .rtoReferenceId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let achievableRtoInSecsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .achievableRtoInSecs) ?? 0
        achievableRtoInSecs = achievableRtoInSecsDecoded
        let currentRtoInSecsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .currentRtoInSecs) ?? 0
        currentRtoInSecs = currentRtoInSecsDecoded
        let rtoReferenceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rtoReferenceId)
        rtoReferenceId = rtoReferenceIdDecoded
        let rtoDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rtoDescription)
        rtoDescription = rtoDescriptionDecoded
        let currentRpoInSecsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .currentRpoInSecs) ?? 0
        currentRpoInSecs = currentRpoInSecsDecoded
        let rpoReferenceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rpoReferenceId)
        rpoReferenceId = rpoReferenceIdDecoded
        let rpoDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rpoDescription)
        rpoDescription = rpoDescriptionDecoded
        let complianceStatusDecoded = try containerValues.decodeIfPresent(ResiliencehubClientTypes.ComplianceStatus.self, forKey: .complianceStatus)
        complianceStatus = complianceStatusDecoded
        let achievableRpoInSecsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .achievableRpoInSecs) ?? 0
        achievableRpoInSecs = achievableRpoInSecsDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
    }
}
