// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSopRecommendationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let sopRecommendations: [ResiliencehubClientTypes.SopRecommendation]?
}

extension ListSopRecommendationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case sopRecommendations
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let sopRecommendationsContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.SopRecommendation?].self, forKey: .sopRecommendations)
        var sopRecommendationsDecoded0:[ResiliencehubClientTypes.SopRecommendation]? = nil
        if let sopRecommendationsContainer = sopRecommendationsContainer {
            sopRecommendationsDecoded0 = [ResiliencehubClientTypes.SopRecommendation]()
            for structure0 in sopRecommendationsContainer {
                if let structure0 = structure0 {
                    sopRecommendationsDecoded0?.append(structure0)
                }
            }
        }
        sopRecommendations = sopRecommendationsDecoded0
    }
}
