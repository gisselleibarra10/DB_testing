// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSuggestedResiliencyPoliciesOutputResponseBody: Swift.Equatable {
    let resiliencyPolicies: [ResiliencehubClientTypes.ResiliencyPolicy]?
    let nextToken: Swift.String?
}

extension ListSuggestedResiliencyPoliciesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case resiliencyPolicies
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resiliencyPoliciesContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.ResiliencyPolicy?].self, forKey: .resiliencyPolicies)
        var resiliencyPoliciesDecoded0:[ResiliencehubClientTypes.ResiliencyPolicy]? = nil
        if let resiliencyPoliciesContainer = resiliencyPoliciesContainer {
            resiliencyPoliciesDecoded0 = [ResiliencehubClientTypes.ResiliencyPolicy]()
            for structure0 in resiliencyPoliciesContainer {
                if let structure0 = structure0 {
                    resiliencyPoliciesDecoded0?.append(structure0)
                }
            }
        }
        resiliencyPolicies = resiliencyPoliciesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
