// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResiliencehubClientTypes.PhysicalResource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appComponents
        case logicalResourceId
        case physicalResourceId
        case resourceName
        case resourceType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appComponents = appComponents {
            var appComponentsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .appComponents)
            for appcomponentlist0 in appComponents {
                try appComponentsContainer.encode(appcomponentlist0)
            }
        }
        if let logicalResourceId = self.logicalResourceId {
            try encodeContainer.encode(logicalResourceId, forKey: .logicalResourceId)
        }
        if let physicalResourceId = self.physicalResourceId {
            try encodeContainer.encode(physicalResourceId, forKey: .physicalResourceId)
        }
        if let resourceName = self.resourceName {
            try encodeContainer.encode(resourceName, forKey: .resourceName)
        }
        if let resourceType = self.resourceType {
            try encodeContainer.encode(resourceType, forKey: .resourceType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceName)
        resourceName = resourceNameDecoded
        let logicalResourceIdDecoded = try containerValues.decodeIfPresent(ResiliencehubClientTypes.LogicalResourceId.self, forKey: .logicalResourceId)
        logicalResourceId = logicalResourceIdDecoded
        let physicalResourceIdDecoded = try containerValues.decodeIfPresent(ResiliencehubClientTypes.PhysicalResourceId.self, forKey: .physicalResourceId)
        physicalResourceId = physicalResourceIdDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let appComponentsContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.AppComponent?].self, forKey: .appComponents)
        var appComponentsDecoded0:[ResiliencehubClientTypes.AppComponent]? = nil
        if let appComponentsContainer = appComponentsContainer {
            appComponentsDecoded0 = [ResiliencehubClientTypes.AppComponent]()
            for structure0 in appComponentsContainer {
                if let structure0 = structure0 {
                    appComponentsDecoded0?.append(structure0)
                }
            }
        }
        appComponents = appComponentsDecoded0
    }
}
