// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAppAssessmentsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let assessmentSummaries: [ResiliencehubClientTypes.AppAssessmentSummary]?
}

extension ListAppAssessmentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assessmentSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let assessmentSummariesContainer = try containerValues.decodeIfPresent([ResiliencehubClientTypes.AppAssessmentSummary?].self, forKey: .assessmentSummaries)
        var assessmentSummariesDecoded0:[ResiliencehubClientTypes.AppAssessmentSummary]? = nil
        if let assessmentSummariesContainer = assessmentSummariesContainer {
            assessmentSummariesDecoded0 = [ResiliencehubClientTypes.AppAssessmentSummary]()
            for structure0 in assessmentSummariesContainer {
                if let structure0 = structure0 {
                    assessmentSummariesDecoded0?.append(structure0)
                }
            }
        }
        assessmentSummaries = assessmentSummariesDecoded0
    }
}
