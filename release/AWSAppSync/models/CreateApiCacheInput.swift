// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input of a CreateApiCache operation.
public struct CreateApiCacheInput: Swift.Equatable {
    /// Caching behavior.
    ///
    /// * FULL_REQUEST_CACHING: All requests are fully cached.
    ///
    /// * PER_RESOLVER_CACHING: Individual resolvers that you specify are cached.
    /// This member is required.
    public var apiCachingBehavior: AppSyncClientTypes.ApiCachingBehavior?
    /// The GraphQL API ID.
    /// This member is required.
    public var apiId: Swift.String?
    /// At-rest encryption flag for cache. You cannot update this setting after creation.
    public var atRestEncryptionEnabled: Swift.Bool
    /// Transit encryption flag when connecting to cache. You cannot update this setting after creation.
    public var transitEncryptionEnabled: Swift.Bool
    /// TTL in seconds for cache entries. Valid values are 1â€“3,600 seconds.
    /// This member is required.
    public var ttl: Swift.Int
    /// The cache instance type. Valid values are
    ///
    /// * SMALL
    ///
    /// * MEDIUM
    ///
    /// * LARGE
    ///
    /// * XLARGE
    ///
    /// * LARGE_2X
    ///
    /// * LARGE_4X
    ///
    /// * LARGE_8X (not available in all regions)
    ///
    /// * LARGE_12X
    ///
    ///
    /// Historically, instance types were identified by an EC2-style value. As of July 2020, this is deprecated, and the generic identifiers above should be used. The following legacy instance types are available, but their use is discouraged:
    ///
    /// * T2_SMALL: A t2.small instance type.
    ///
    /// * T2_MEDIUM: A t2.medium instance type.
    ///
    /// * R4_LARGE: A r4.large instance type.
    ///
    /// * R4_XLARGE: A r4.xlarge instance type.
    ///
    /// * R4_2XLARGE: A r4.2xlarge instance type.
    ///
    /// * R4_4XLARGE: A r4.4xlarge instance type.
    ///
    /// * R4_8XLARGE: A r4.8xlarge instance type.
    /// This member is required.
    public var type: AppSyncClientTypes.ApiCacheType?

    public init (
        apiCachingBehavior: AppSyncClientTypes.ApiCachingBehavior? = nil,
        apiId: Swift.String? = nil,
        atRestEncryptionEnabled: Swift.Bool = false,
        transitEncryptionEnabled: Swift.Bool = false,
        ttl: Swift.Int = 0,
        type: AppSyncClientTypes.ApiCacheType? = nil
    )
    {
        self.apiCachingBehavior = apiCachingBehavior
        self.apiId = apiId
        self.atRestEncryptionEnabled = atRestEncryptionEnabled
        self.transitEncryptionEnabled = transitEncryptionEnabled
        self.ttl = ttl
        self.type = type
    }
}
