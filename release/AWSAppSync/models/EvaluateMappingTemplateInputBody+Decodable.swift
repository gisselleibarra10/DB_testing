// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EvaluateMappingTemplateInputBody: Swift.Equatable {
    let template: Swift.String?
    let context: Swift.String?
}

extension EvaluateMappingTemplateInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case context
        case template
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let templateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .template)
        template = templateDecoded
        let contextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .context)
        context = contextDecoded
    }
}
