// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainNamesOutputResponseBody: Swift.Equatable {
    let domainNameConfigs: [AppSyncClientTypes.DomainNameConfig]?
    let nextToken: Swift.String?
}

extension ListDomainNamesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainNameConfigs
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameConfigsContainer = try containerValues.decodeIfPresent([AppSyncClientTypes.DomainNameConfig?].self, forKey: .domainNameConfigs)
        var domainNameConfigsDecoded0:[AppSyncClientTypes.DomainNameConfig]? = nil
        if let domainNameConfigsContainer = domainNameConfigsContainer {
            domainNameConfigsDecoded0 = [AppSyncClientTypes.DomainNameConfig]()
            for structure0 in domainNameConfigsContainer {
                if let structure0 = structure0 {
                    domainNameConfigsDecoded0?.append(structure0)
                }
            }
        }
        domainNameConfigs = domainNameConfigsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
