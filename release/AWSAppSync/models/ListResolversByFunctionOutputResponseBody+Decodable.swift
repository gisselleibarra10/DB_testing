// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResolversByFunctionOutputResponseBody: Swift.Equatable {
    let resolvers: [AppSyncClientTypes.Resolver]?
    let nextToken: Swift.String?
}

extension ListResolversByFunctionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case resolvers
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resolversContainer = try containerValues.decodeIfPresent([AppSyncClientTypes.Resolver?].self, forKey: .resolvers)
        var resolversDecoded0:[AppSyncClientTypes.Resolver]? = nil
        if let resolversContainer = resolversContainer {
            resolversDecoded0 = [AppSyncClientTypes.Resolver]()
            for structure0 in resolversContainer {
                if let structure0 = structure0 {
                    resolversDecoded0?.append(structure0)
                }
            }
        }
        resolvers = resolversDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
