// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateFunctionInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSourceName
        case description
        case functionVersion
        case maxBatchSize
        case name
        case requestMappingTemplate
        case responseMappingTemplate
        case syncConfig
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataSourceName = self.dataSourceName {
            try encodeContainer.encode(dataSourceName, forKey: .dataSourceName)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let functionVersion = self.functionVersion {
            try encodeContainer.encode(functionVersion, forKey: .functionVersion)
        }
        if maxBatchSize != 0 {
            try encodeContainer.encode(maxBatchSize, forKey: .maxBatchSize)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let requestMappingTemplate = self.requestMappingTemplate {
            try encodeContainer.encode(requestMappingTemplate, forKey: .requestMappingTemplate)
        }
        if let responseMappingTemplate = self.responseMappingTemplate {
            try encodeContainer.encode(responseMappingTemplate, forKey: .responseMappingTemplate)
        }
        if let syncConfig = self.syncConfig {
            try encodeContainer.encode(syncConfig, forKey: .syncConfig)
        }
    }
}
