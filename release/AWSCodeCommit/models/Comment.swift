// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeCommitClientTypes {
    /// Returns information about a specific comment.
    public struct Comment: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the person who posted the comment.
        public var authorArn: Swift.String?
        /// The emoji reactions to a comment, if any, submitted by the user whose credentials are associated with the call to the API.
        public var callerReactions: [Swift.String]?
        /// A unique, client-generated idempotency token that, when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request returns information about the initial request that used that token.
        public var clientRequestToken: Swift.String?
        /// The system-generated comment ID.
        public var commentId: Swift.String?
        /// The content of the comment.
        public var content: Swift.String?
        /// The date and time the comment was created, in timestamp format.
        public var creationDate: ClientRuntime.Date?
        /// A Boolean value indicating whether the comment has been deleted.
        public var deleted: Swift.Bool
        /// The ID of the comment for which this comment is a reply, if any.
        public var inReplyTo: Swift.String?
        /// The date and time the comment was most recently modified, in timestamp format.
        public var lastModifiedDate: ClientRuntime.Date?
        /// A string to integer map that represents the number of individual users who have responded to a comment with the specified reactions.
        public var reactionCounts: [Swift.String:Swift.Int]?

        public init (
            authorArn: Swift.String? = nil,
            callerReactions: [Swift.String]? = nil,
            clientRequestToken: Swift.String? = nil,
            commentId: Swift.String? = nil,
            content: Swift.String? = nil,
            creationDate: ClientRuntime.Date? = nil,
            deleted: Swift.Bool = false,
            inReplyTo: Swift.String? = nil,
            lastModifiedDate: ClientRuntime.Date? = nil,
            reactionCounts: [Swift.String:Swift.Int]? = nil
        )
        {
            self.authorArn = authorArn
            self.callerReactions = callerReactions
            self.clientRequestToken = clientRequestToken
            self.commentId = commentId
            self.content = content
            self.creationDate = creationDate
            self.deleted = deleted
            self.inReplyTo = inReplyTo
            self.lastModifiedDate = lastModifiedDate
            self.reactionCounts = reactionCounts
        }
    }

}
