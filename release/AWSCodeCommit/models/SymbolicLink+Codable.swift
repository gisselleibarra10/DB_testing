// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeCommitClientTypes.SymbolicLink: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case absolutePath
        case blobId
        case fileMode
        case relativePath
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let absolutePath = self.absolutePath {
            try encodeContainer.encode(absolutePath, forKey: .absolutePath)
        }
        if let blobId = self.blobId {
            try encodeContainer.encode(blobId, forKey: .blobId)
        }
        if let fileMode = self.fileMode {
            try encodeContainer.encode(fileMode.rawValue, forKey: .fileMode)
        }
        if let relativePath = self.relativePath {
            try encodeContainer.encode(relativePath, forKey: .relativePath)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blobIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .blobId)
        blobId = blobIdDecoded
        let absolutePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .absolutePath)
        absolutePath = absolutePathDecoded
        let relativePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .relativePath)
        relativePath = relativePathDecoded
        let fileModeDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.FileModeTypeEnum.self, forKey: .fileMode)
        fileMode = fileModeDecoded
    }
}
