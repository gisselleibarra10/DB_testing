// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeCommitClientTypes.ApprovalRuleEventMetadata: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case approvalRuleContent
        case approvalRuleId
        case approvalRuleName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let approvalRuleContent = self.approvalRuleContent {
            try encodeContainer.encode(approvalRuleContent, forKey: .approvalRuleContent)
        }
        if let approvalRuleId = self.approvalRuleId {
            try encodeContainer.encode(approvalRuleId, forKey: .approvalRuleId)
        }
        if let approvalRuleName = self.approvalRuleName {
            try encodeContainer.encode(approvalRuleName, forKey: .approvalRuleName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let approvalRuleNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .approvalRuleName)
        approvalRuleName = approvalRuleNameDecoded
        let approvalRuleIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .approvalRuleId)
        approvalRuleId = approvalRuleIdDecoded
        let approvalRuleContentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .approvalRuleContent)
        approvalRuleContent = approvalRuleContentDecoded
    }
}
