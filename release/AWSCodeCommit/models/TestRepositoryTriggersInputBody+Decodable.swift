// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestRepositoryTriggersInputBody: Swift.Equatable {
    let repositoryName: Swift.String?
    let triggers: [CodeCommitClientTypes.RepositoryTrigger]?
}

extension TestRepositoryTriggersInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case repositoryName
        case triggers
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let triggersContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.RepositoryTrigger?].self, forKey: .triggers)
        var triggersDecoded0:[CodeCommitClientTypes.RepositoryTrigger]? = nil
        if let triggersContainer = triggersContainer {
            triggersDecoded0 = [CodeCommitClientTypes.RepositoryTrigger]()
            for structure0 in triggersContainer {
                if let structure0 = structure0 {
                    triggersDecoded0?.append(structure0)
                }
            }
        }
        triggers = triggersDecoded0
    }
}
