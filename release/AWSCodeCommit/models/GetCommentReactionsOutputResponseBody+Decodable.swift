// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCommentReactionsOutputResponseBody: Swift.Equatable {
    let reactionsForComment: [CodeCommitClientTypes.ReactionForComment]?
    let nextToken: Swift.String?
}

extension GetCommentReactionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case reactionsForComment
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reactionsForCommentContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.ReactionForComment?].self, forKey: .reactionsForComment)
        var reactionsForCommentDecoded0:[CodeCommitClientTypes.ReactionForComment]? = nil
        if let reactionsForCommentContainer = reactionsForCommentContainer {
            reactionsForCommentDecoded0 = [CodeCommitClientTypes.ReactionForComment]()
            for structure0 in reactionsForCommentContainer {
                if let structure0 = structure0 {
                    reactionsForCommentDecoded0?.append(structure0)
                }
            }
        }
        reactionsForComment = reactionsForCommentDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
