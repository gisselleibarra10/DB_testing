// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodeCommitClientTypes {
    /// Returns information about comments on the comparison between two commits.
    public struct CommentsForComparedCommit: Swift.Equatable {
        /// The full blob ID of the commit used to establish the after of the comparison.
        public var afterBlobId: Swift.String?
        /// The full commit ID of the commit used to establish the after of the comparison.
        public var afterCommitId: Swift.String?
        /// The full blob ID of the commit used to establish the before of the comparison.
        public var beforeBlobId: Swift.String?
        /// The full commit ID of the commit used to establish the before of the comparison.
        public var beforeCommitId: Swift.String?
        /// An array of comment objects. Each comment object contains information about a comment on the comparison between commits.
        public var comments: [CodeCommitClientTypes.Comment]?
        /// Location information about the comment on the comparison, including the file name, line number, and whether the version of the file where the comment was made is BEFORE or AFTER.
        public var location: CodeCommitClientTypes.Location?
        /// The name of the repository that contains the compared commits.
        public var repositoryName: Swift.String?

        public init (
            afterBlobId: Swift.String? = nil,
            afterCommitId: Swift.String? = nil,
            beforeBlobId: Swift.String? = nil,
            beforeCommitId: Swift.String? = nil,
            comments: [CodeCommitClientTypes.Comment]? = nil,
            location: CodeCommitClientTypes.Location? = nil,
            repositoryName: Swift.String? = nil
        )
        {
            self.afterBlobId = afterBlobId
            self.afterCommitId = afterCommitId
            self.beforeBlobId = beforeBlobId
            self.beforeCommitId = beforeCommitId
            self.comments = comments
            self.location = location
            self.repositoryName = repositoryName
        }
    }

}
