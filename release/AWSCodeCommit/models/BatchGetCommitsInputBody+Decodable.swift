// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetCommitsInputBody: Swift.Equatable {
    let commitIds: [Swift.String]?
    let repositoryName: Swift.String?
}

extension BatchGetCommitsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case commitIds
        case repositoryName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commitIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .commitIds)
        var commitIdsDecoded0:[Swift.String]? = nil
        if let commitIdsContainer = commitIdsContainer {
            commitIdsDecoded0 = [Swift.String]()
            for string0 in commitIdsContainer {
                if let string0 = string0 {
                    commitIdsDecoded0?.append(string0)
                }
            }
        }
        commitIds = commitIdsDecoded0
        let repositoryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
    }
}
