// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCommentsForPullRequestOutputResponseBody: Swift.Equatable {
    let commentsForPullRequestData: [CodeCommitClientTypes.CommentsForPullRequest]?
    let nextToken: Swift.String?
}

extension GetCommentsForPullRequestOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case commentsForPullRequestData
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commentsForPullRequestDataContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.CommentsForPullRequest?].self, forKey: .commentsForPullRequestData)
        var commentsForPullRequestDataDecoded0:[CodeCommitClientTypes.CommentsForPullRequest]? = nil
        if let commentsForPullRequestDataContainer = commentsForPullRequestDataContainer {
            commentsForPullRequestDataDecoded0 = [CodeCommitClientTypes.CommentsForPullRequest]()
            for structure0 in commentsForPullRequestDataContainer {
                if let structure0 = structure0 {
                    commentsForPullRequestDataDecoded0?.append(structure0)
                }
            }
        }
        commentsForPullRequestData = commentsForPullRequestDataDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
