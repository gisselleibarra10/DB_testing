// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePullRequestEventsOutputResponseBody: Swift.Equatable {
    let pullRequestEvents: [CodeCommitClientTypes.PullRequestEvent]?
    let nextToken: Swift.String?
}

extension DescribePullRequestEventsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case pullRequestEvents
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pullRequestEventsContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.PullRequestEvent?].self, forKey: .pullRequestEvents)
        var pullRequestEventsDecoded0:[CodeCommitClientTypes.PullRequestEvent]? = nil
        if let pullRequestEventsContainer = pullRequestEventsContainer {
            pullRequestEventsDecoded0 = [CodeCommitClientTypes.PullRequestEvent]()
            for structure0 in pullRequestEventsContainer {
                if let structure0 = structure0 {
                    pullRequestEventsDecoded0?.append(structure0)
                }
            }
        }
        pullRequestEvents = pullRequestEventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
