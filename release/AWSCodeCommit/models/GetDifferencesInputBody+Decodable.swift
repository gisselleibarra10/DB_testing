// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDifferencesInputBody: Swift.Equatable {
    let repositoryName: Swift.String?
    let beforeCommitSpecifier: Swift.String?
    let afterCommitSpecifier: Swift.String?
    let beforePath: Swift.String?
    let afterPath: Swift.String?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension GetDifferencesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case afterCommitSpecifier
        case afterPath
        case beforeCommitSpecifier
        case beforePath
        case repositoryName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let beforeCommitSpecifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .beforeCommitSpecifier)
        beforeCommitSpecifier = beforeCommitSpecifierDecoded
        let afterCommitSpecifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .afterCommitSpecifier)
        afterCommitSpecifier = afterCommitSpecifierDecoded
        let beforePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .beforePath)
        beforePath = beforePathDecoded
        let afterPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .afterPath)
        afterPath = afterPathDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
