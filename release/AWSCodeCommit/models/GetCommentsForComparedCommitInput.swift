// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetCommentsForComparedCommitInput: Swift.Equatable {
    /// To establish the directionality of the comparison, the full commit ID of the after commit.
    /// This member is required.
    public var afterCommitId: Swift.String?
    /// To establish the directionality of the comparison, the full commit ID of the before commit.
    public var beforeCommitId: Swift.String?
    /// A non-zero, non-negative integer used to limit the number of returned results. The default is 100 comments, but you can configure up to 500.
    public var maxResults: Swift.Int?
    /// An enumeration token that when provided in a request, returns the next batch of the results.
    public var nextToken: Swift.String?
    /// The name of the repository where you want to compare commits.
    /// This member is required.
    public var repositoryName: Swift.String?

    public init (
        afterCommitId: Swift.String? = nil,
        beforeCommitId: Swift.String? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        repositoryName: Swift.String? = nil
    )
    {
        self.afterCommitId = afterCommitId
        self.beforeCommitId = beforeCommitId
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.repositoryName = repositoryName
    }
}
