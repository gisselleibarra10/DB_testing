// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFileOutputResponseBody: Swift.Equatable {
    let commitId: Swift.String?
    let blobId: Swift.String?
    let filePath: Swift.String?
    let fileMode: CodeCommitClientTypes.FileModeTypeEnum?
    let fileSize: Swift.Int
    let fileContent: ClientRuntime.Data?
}

extension GetFileOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blobId
        case commitId
        case fileContent
        case fileMode
        case filePath
        case fileSize
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commitIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .commitId)
        commitId = commitIdDecoded
        let blobIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .blobId)
        blobId = blobIdDecoded
        let filePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filePath)
        filePath = filePathDecoded
        let fileModeDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.FileModeTypeEnum.self, forKey: .fileMode)
        fileMode = fileModeDecoded
        let fileSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .fileSize) ?? 0
        fileSize = fileSizeDecoded
        let fileContentDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .fileContent)
        fileContent = fileContentDecoded
    }
}
