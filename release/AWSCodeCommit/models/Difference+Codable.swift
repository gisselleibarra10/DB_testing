// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeCommitClientTypes.Difference: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case afterBlob
        case beforeBlob
        case changeType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let afterBlob = self.afterBlob {
            try encodeContainer.encode(afterBlob, forKey: .afterBlob)
        }
        if let beforeBlob = self.beforeBlob {
            try encodeContainer.encode(beforeBlob, forKey: .beforeBlob)
        }
        if let changeType = self.changeType {
            try encodeContainer.encode(changeType.rawValue, forKey: .changeType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let beforeBlobDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.BlobMetadata.self, forKey: .beforeBlob)
        beforeBlob = beforeBlobDecoded
        let afterBlobDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.BlobMetadata.self, forKey: .afterBlob)
        afterBlob = afterBlobDecoded
        let changeTypeDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.ChangeTypeEnum.self, forKey: .changeType)
        changeType = changeTypeDecoded
    }
}
