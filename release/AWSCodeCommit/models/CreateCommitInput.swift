// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateCommitInput: Swift.Equatable {
    /// The name of the author who created the commit. This information is used as both the author and committer for the commit.
    public var authorName: Swift.String?
    /// The name of the branch where you create the commit.
    /// This member is required.
    public var branchName: Swift.String?
    /// The commit message you want to include in the commit. Commit messages are limited to 256 KB. If no message is specified, a default message is used.
    public var commitMessage: Swift.String?
    /// The files to delete in this commit. These files still exist in earlier commits.
    public var deleteFiles: [CodeCommitClientTypes.DeleteFileEntry]?
    /// The email address of the person who created the commit.
    public var email: Swift.String?
    /// If the commit contains deletions, whether to keep a folder or folder structure if the changes leave the folders empty. If true, a ..gitkeep file is created for empty folders. The default is false.
    public var keepEmptyFolders: Swift.Bool
    /// The ID of the commit that is the parent of the commit you create. Not required if this is an empty repository.
    public var parentCommitId: Swift.String?
    /// The files to add or update in this commit.
    public var putFiles: [CodeCommitClientTypes.PutFileEntry]?
    /// The name of the repository where you create the commit.
    /// This member is required.
    public var repositoryName: Swift.String?
    /// The file modes to update for files in this commit.
    public var setFileModes: [CodeCommitClientTypes.SetFileModeEntry]?

    public init (
        authorName: Swift.String? = nil,
        branchName: Swift.String? = nil,
        commitMessage: Swift.String? = nil,
        deleteFiles: [CodeCommitClientTypes.DeleteFileEntry]? = nil,
        email: Swift.String? = nil,
        keepEmptyFolders: Swift.Bool = false,
        parentCommitId: Swift.String? = nil,
        putFiles: [CodeCommitClientTypes.PutFileEntry]? = nil,
        repositoryName: Swift.String? = nil,
        setFileModes: [CodeCommitClientTypes.SetFileModeEntry]? = nil
    )
    {
        self.authorName = authorName
        self.branchName = branchName
        self.commitMessage = commitMessage
        self.deleteFiles = deleteFiles
        self.email = email
        self.keepEmptyFolders = keepEmptyFolders
        self.parentCommitId = parentCommitId
        self.putFiles = putFiles
        self.repositoryName = repositoryName
        self.setFileModes = setFileModes
    }
}
