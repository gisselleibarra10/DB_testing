// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeCommitClientTypes.FileSizes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case base
        case destination
        case source
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if base != 0 {
            try encodeContainer.encode(base, forKey: .base)
        }
        if destination != 0 {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if source != 0 {
            try encodeContainer.encode(source, forKey: .source)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .source) ?? 0
        source = sourceDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .destination) ?? 0
        destination = destinationDecoded
        let baseDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .base) ?? 0
        base = baseDecoded
    }
}
