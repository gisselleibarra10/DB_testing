// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateCommitOutputResponseBody: Swift.Equatable {
    let commitId: Swift.String?
    let treeId: Swift.String?
    let filesAdded: [CodeCommitClientTypes.FileMetadata]?
    let filesUpdated: [CodeCommitClientTypes.FileMetadata]?
    let filesDeleted: [CodeCommitClientTypes.FileMetadata]?
}

extension CreateCommitOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case commitId
        case filesAdded
        case filesDeleted
        case filesUpdated
        case treeId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commitIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .commitId)
        commitId = commitIdDecoded
        let treeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .treeId)
        treeId = treeIdDecoded
        let filesAddedContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.FileMetadata?].self, forKey: .filesAdded)
        var filesAddedDecoded0:[CodeCommitClientTypes.FileMetadata]? = nil
        if let filesAddedContainer = filesAddedContainer {
            filesAddedDecoded0 = [CodeCommitClientTypes.FileMetadata]()
            for structure0 in filesAddedContainer {
                if let structure0 = structure0 {
                    filesAddedDecoded0?.append(structure0)
                }
            }
        }
        filesAdded = filesAddedDecoded0
        let filesUpdatedContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.FileMetadata?].self, forKey: .filesUpdated)
        var filesUpdatedDecoded0:[CodeCommitClientTypes.FileMetadata]? = nil
        if let filesUpdatedContainer = filesUpdatedContainer {
            filesUpdatedDecoded0 = [CodeCommitClientTypes.FileMetadata]()
            for structure0 in filesUpdatedContainer {
                if let structure0 = structure0 {
                    filesUpdatedDecoded0?.append(structure0)
                }
            }
        }
        filesUpdated = filesUpdatedDecoded0
        let filesDeletedContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.FileMetadata?].self, forKey: .filesDeleted)
        var filesDeletedDecoded0:[CodeCommitClientTypes.FileMetadata]? = nil
        if let filesDeletedContainer = filesDeletedContainer {
            filesDeletedDecoded0 = [CodeCommitClientTypes.FileMetadata]()
            for structure0 in filesDeletedContainer {
                if let structure0 = structure0 {
                    filesDeletedDecoded0?.append(structure0)
                }
            }
        }
        filesDeleted = filesDeletedDecoded0
    }
}
