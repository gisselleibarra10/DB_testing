// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetCommitsOutputResponseBody: Swift.Equatable {
    let commits: [CodeCommitClientTypes.Commit]?
    let errors: [CodeCommitClientTypes.BatchGetCommitsError]?
}

extension BatchGetCommitsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case commits
        case errors
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commitsContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.Commit?].self, forKey: .commits)
        var commitsDecoded0:[CodeCommitClientTypes.Commit]? = nil
        if let commitsContainer = commitsContainer {
            commitsDecoded0 = [CodeCommitClientTypes.Commit]()
            for structure0 in commitsContainer {
                if let structure0 = structure0 {
                    commitsDecoded0?.append(structure0)
                }
            }
        }
        commits = commitsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.BatchGetCommitsError?].self, forKey: .errors)
        var errorsDecoded0:[CodeCommitClientTypes.BatchGetCommitsError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [CodeCommitClientTypes.BatchGetCommitsError]()
            for structure0 in errorsContainer {
                if let structure0 = structure0 {
                    errorsDecoded0?.append(structure0)
                }
            }
        }
        errors = errorsDecoded0
    }
}
