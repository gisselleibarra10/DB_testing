// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutFileInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case branchName
        case commitMessage
        case email
        case fileContent
        case fileMode
        case filePath
        case name
        case parentCommitId
        case repositoryName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let branchName = self.branchName {
            try encodeContainer.encode(branchName, forKey: .branchName)
        }
        if let commitMessage = self.commitMessage {
            try encodeContainer.encode(commitMessage, forKey: .commitMessage)
        }
        if let email = self.email {
            try encodeContainer.encode(email, forKey: .email)
        }
        if let fileContent = self.fileContent {
            try encodeContainer.encode(fileContent.base64EncodedString(), forKey: .fileContent)
        }
        if let fileMode = self.fileMode {
            try encodeContainer.encode(fileMode.rawValue, forKey: .fileMode)
        }
        if let filePath = self.filePath {
            try encodeContainer.encode(filePath, forKey: .filePath)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let parentCommitId = self.parentCommitId {
            try encodeContainer.encode(parentCommitId, forKey: .parentCommitId)
        }
        if let repositoryName = self.repositoryName {
            try encodeContainer.encode(repositoryName, forKey: .repositoryName)
        }
    }
}
