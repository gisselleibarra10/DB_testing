// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeCommitClientTypes {
    /// Returns information about a pull request.
    public struct PullRequest: Swift.Equatable {
        /// The approval rules applied to the pull request.
        public var approvalRules: [CodeCommitClientTypes.ApprovalRule]?
        /// The Amazon Resource Name (ARN) of the user who created the pull request.
        public var authorArn: Swift.String?
        /// A unique, client-generated idempotency token that, when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request returns information about the initial request that used that token.
        public var clientRequestToken: Swift.String?
        /// The date and time the pull request was originally created, in timestamp format.
        public var creationDate: ClientRuntime.Date?
        /// The user-defined description of the pull request. This description can be used to clarify what should be reviewed and other details of the request.
        public var description: Swift.String?
        /// The day and time of the last user or system activity on the pull request, in timestamp format.
        public var lastActivityDate: ClientRuntime.Date?
        /// The system-generated ID of the pull request.
        public var pullRequestId: Swift.String?
        /// The status of the pull request. Pull request status can only change from OPEN to CLOSED.
        public var pullRequestStatus: CodeCommitClientTypes.PullRequestStatusEnum?
        /// The targets of the pull request, including the source branch and destination branch for the pull request.
        public var pullRequestTargets: [CodeCommitClientTypes.PullRequestTarget]?
        /// The system-generated revision ID for the pull request.
        public var revisionId: Swift.String?
        /// The user-defined title of the pull request. This title is displayed in the list of pull requests to other repository users.
        public var title: Swift.String?

        public init (
            approvalRules: [CodeCommitClientTypes.ApprovalRule]? = nil,
            authorArn: Swift.String? = nil,
            clientRequestToken: Swift.String? = nil,
            creationDate: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            lastActivityDate: ClientRuntime.Date? = nil,
            pullRequestId: Swift.String? = nil,
            pullRequestStatus: CodeCommitClientTypes.PullRequestStatusEnum? = nil,
            pullRequestTargets: [CodeCommitClientTypes.PullRequestTarget]? = nil,
            revisionId: Swift.String? = nil,
            title: Swift.String? = nil
        )
        {
            self.approvalRules = approvalRules
            self.authorArn = authorArn
            self.clientRequestToken = clientRequestToken
            self.creationDate = creationDate
            self.description = description
            self.lastActivityDate = lastActivityDate
            self.pullRequestId = pullRequestId
            self.pullRequestStatus = pullRequestStatus
            self.pullRequestTargets = pullRequestTargets
            self.revisionId = revisionId
            self.title = title
        }
    }

}
