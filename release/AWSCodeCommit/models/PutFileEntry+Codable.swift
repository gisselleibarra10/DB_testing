// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeCommitClientTypes.PutFileEntry: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fileContent
        case fileMode
        case filePath
        case sourceFile
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fileContent = self.fileContent {
            try encodeContainer.encode(fileContent.base64EncodedString(), forKey: .fileContent)
        }
        if let fileMode = self.fileMode {
            try encodeContainer.encode(fileMode.rawValue, forKey: .fileMode)
        }
        if let filePath = self.filePath {
            try encodeContainer.encode(filePath, forKey: .filePath)
        }
        if let sourceFile = self.sourceFile {
            try encodeContainer.encode(sourceFile, forKey: .sourceFile)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .filePath)
        filePath = filePathDecoded
        let fileModeDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.FileModeTypeEnum.self, forKey: .fileMode)
        fileMode = fileModeDecoded
        let fileContentDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .fileContent)
        fileContent = fileContentDecoded
        let sourceFileDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.SourceFileSpecifier.self, forKey: .sourceFile)
        sourceFile = sourceFileDecoded
    }
}
