// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PostCommentForPullRequestInputBody: Swift.Equatable {
    let pullRequestId: Swift.String?
    let repositoryName: Swift.String?
    let beforeCommitId: Swift.String?
    let afterCommitId: Swift.String?
    let location: CodeCommitClientTypes.Location?
    let content: Swift.String?
    let clientRequestToken: Swift.String?
}

extension PostCommentForPullRequestInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case afterCommitId
        case beforeCommitId
        case clientRequestToken
        case content
        case location
        case pullRequestId
        case repositoryName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pullRequestIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pullRequestId)
        pullRequestId = pullRequestIdDecoded
        let repositoryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let beforeCommitIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .beforeCommitId)
        beforeCommitId = beforeCommitIdDecoded
        let afterCommitIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .afterCommitId)
        afterCommitId = afterCommitIdDecoded
        let locationDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.Location.self, forKey: .location)
        location = locationDecoded
        let contentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .content)
        content = contentDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
