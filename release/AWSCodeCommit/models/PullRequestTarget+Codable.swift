// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeCommitClientTypes.PullRequestTarget: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationCommit
        case destinationReference
        case mergeBase
        case mergeMetadata
        case repositoryName
        case sourceCommit
        case sourceReference
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destinationCommit = self.destinationCommit {
            try encodeContainer.encode(destinationCommit, forKey: .destinationCommit)
        }
        if let destinationReference = self.destinationReference {
            try encodeContainer.encode(destinationReference, forKey: .destinationReference)
        }
        if let mergeBase = self.mergeBase {
            try encodeContainer.encode(mergeBase, forKey: .mergeBase)
        }
        if let mergeMetadata = self.mergeMetadata {
            try encodeContainer.encode(mergeMetadata, forKey: .mergeMetadata)
        }
        if let repositoryName = self.repositoryName {
            try encodeContainer.encode(repositoryName, forKey: .repositoryName)
        }
        if let sourceCommit = self.sourceCommit {
            try encodeContainer.encode(sourceCommit, forKey: .sourceCommit)
        }
        if let sourceReference = self.sourceReference {
            try encodeContainer.encode(sourceReference, forKey: .sourceReference)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let sourceReferenceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceReference)
        sourceReference = sourceReferenceDecoded
        let destinationReferenceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationReference)
        destinationReference = destinationReferenceDecoded
        let destinationCommitDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationCommit)
        destinationCommit = destinationCommitDecoded
        let sourceCommitDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceCommit)
        sourceCommit = sourceCommitDecoded
        let mergeBaseDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mergeBase)
        mergeBase = mergeBaseDecoded
        let mergeMetadataDecoded = try containerValues.decodeIfPresent(CodeCommitClientTypes.MergeMetadata.self, forKey: .mergeMetadata)
        mergeMetadata = mergeMetadataDecoded
    }
}
