// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMergeCommitOutputResponseBody: Swift.Equatable {
    let sourceCommitId: Swift.String?
    let destinationCommitId: Swift.String?
    let baseCommitId: Swift.String?
    let mergedCommitId: Swift.String?
}

extension GetMergeCommitOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case baseCommitId
        case destinationCommitId
        case mergedCommitId
        case sourceCommitId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceCommitIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceCommitId)
        sourceCommitId = sourceCommitIdDecoded
        let destinationCommitIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationCommitId)
        destinationCommitId = destinationCommitIdDecoded
        let baseCommitIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .baseCommitId)
        baseCommitId = baseCommitIdDecoded
        let mergedCommitIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mergedCommitId)
        mergedCommitId = mergedCommitIdDecoded
    }
}
