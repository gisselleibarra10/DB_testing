// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestRepositoryTriggersOutputResponseBody: Swift.Equatable {
    let successfulExecutions: [Swift.String]?
    let failedExecutions: [CodeCommitClientTypes.RepositoryTriggerExecutionFailure]?
}

extension TestRepositoryTriggersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failedExecutions
        case successfulExecutions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successfulExecutionsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .successfulExecutions)
        var successfulExecutionsDecoded0:[Swift.String]? = nil
        if let successfulExecutionsContainer = successfulExecutionsContainer {
            successfulExecutionsDecoded0 = [Swift.String]()
            for string0 in successfulExecutionsContainer {
                if let string0 = string0 {
                    successfulExecutionsDecoded0?.append(string0)
                }
            }
        }
        successfulExecutions = successfulExecutionsDecoded0
        let failedExecutionsContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.RepositoryTriggerExecutionFailure?].self, forKey: .failedExecutions)
        var failedExecutionsDecoded0:[CodeCommitClientTypes.RepositoryTriggerExecutionFailure]? = nil
        if let failedExecutionsContainer = failedExecutionsContainer {
            failedExecutionsDecoded0 = [CodeCommitClientTypes.RepositoryTriggerExecutionFailure]()
            for structure0 in failedExecutionsContainer {
                if let structure0 = structure0 {
                    failedExecutionsDecoded0?.append(structure0)
                }
            }
        }
        failedExecutions = failedExecutionsDecoded0
    }
}
