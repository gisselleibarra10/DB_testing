// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCommentsForComparedCommitOutputResponseBody: Swift.Equatable {
    let commentsForComparedCommitData: [CodeCommitClientTypes.CommentsForComparedCommit]?
    let nextToken: Swift.String?
}

extension GetCommentsForComparedCommitOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case commentsForComparedCommitData
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commentsForComparedCommitDataContainer = try containerValues.decodeIfPresent([CodeCommitClientTypes.CommentsForComparedCommit?].self, forKey: .commentsForComparedCommitData)
        var commentsForComparedCommitDataDecoded0:[CodeCommitClientTypes.CommentsForComparedCommit]? = nil
        if let commentsForComparedCommitDataContainer = commentsForComparedCommitDataContainer {
            commentsForComparedCommitDataDecoded0 = [CodeCommitClientTypes.CommentsForComparedCommit]()
            for structure0 in commentsForComparedCommitDataContainer {
                if let structure0 = structure0 {
                    commentsForComparedCommitDataDecoded0?.append(structure0)
                }
            }
        }
        commentsForComparedCommitData = commentsForComparedCommitDataDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
