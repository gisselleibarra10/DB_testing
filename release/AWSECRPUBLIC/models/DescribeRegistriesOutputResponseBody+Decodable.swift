// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRegistriesOutputResponseBody: Swift.Equatable {
    let registries: [EcrPublicClientTypes.Registry]?
    let nextToken: Swift.String?
}

extension DescribeRegistriesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case registries
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registriesContainer = try containerValues.decodeIfPresent([EcrPublicClientTypes.Registry?].self, forKey: .registries)
        var registriesDecoded0:[EcrPublicClientTypes.Registry]? = nil
        if let registriesContainer = registriesContainer {
            registriesDecoded0 = [EcrPublicClientTypes.Registry]()
            for structure0 in registriesContainer {
                if let structure0 = structure0 {
                    registriesDecoded0?.append(structure0)
                }
            }
        }
        registries = registriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
