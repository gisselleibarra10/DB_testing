// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GuardDutyClientTypes.EbsVolumeDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case scannedVolumeDetails = "scannedVolumeDetails"
        case skippedVolumeDetails = "skippedVolumeDetails"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let scannedVolumeDetails = scannedVolumeDetails {
            var scannedVolumeDetailsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .scannedVolumeDetails)
            for volumedetails0 in scannedVolumeDetails {
                try scannedVolumeDetailsContainer.encode(volumedetails0)
            }
        }
        if let skippedVolumeDetails = skippedVolumeDetails {
            var skippedVolumeDetailsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .skippedVolumeDetails)
            for volumedetails0 in skippedVolumeDetails {
                try skippedVolumeDetailsContainer.encode(volumedetails0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scannedVolumeDetailsContainer = try containerValues.decodeIfPresent([GuardDutyClientTypes.VolumeDetail?].self, forKey: .scannedVolumeDetails)
        var scannedVolumeDetailsDecoded0:[GuardDutyClientTypes.VolumeDetail]? = nil
        if let scannedVolumeDetailsContainer = scannedVolumeDetailsContainer {
            scannedVolumeDetailsDecoded0 = [GuardDutyClientTypes.VolumeDetail]()
            for structure0 in scannedVolumeDetailsContainer {
                if let structure0 = structure0 {
                    scannedVolumeDetailsDecoded0?.append(structure0)
                }
            }
        }
        scannedVolumeDetails = scannedVolumeDetailsDecoded0
        let skippedVolumeDetailsContainer = try containerValues.decodeIfPresent([GuardDutyClientTypes.VolumeDetail?].self, forKey: .skippedVolumeDetails)
        var skippedVolumeDetailsDecoded0:[GuardDutyClientTypes.VolumeDetail]? = nil
        if let skippedVolumeDetailsContainer = skippedVolumeDetailsContainer {
            skippedVolumeDetailsDecoded0 = [GuardDutyClientTypes.VolumeDetail]()
            for structure0 in skippedVolumeDetailsContainer {
                if let structure0 = structure0 {
                    skippedVolumeDetailsDecoded0?.append(structure0)
                }
            }
        }
        skippedVolumeDetails = skippedVolumeDetailsDecoded0
    }
}
