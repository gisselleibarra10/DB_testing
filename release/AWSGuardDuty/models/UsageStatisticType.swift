// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GuardDutyClientTypes {
    public enum UsageStatisticType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case sumByAccount
        case sumByDataSource
        case sumByResource
        case topResources
        case sdkUnknown(Swift.String)

        public static var allCases: [UsageStatisticType] {
            return [
                .sumByAccount,
                .sumByDataSource,
                .sumByResource,
                .topResources,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .sumByAccount: return "SUM_BY_ACCOUNT"
            case .sumByDataSource: return "SUM_BY_DATA_SOURCE"
            case .sumByResource: return "SUM_BY_RESOURCE"
            case .topResources: return "TOP_RESOURCES"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = UsageStatisticType(rawValue: rawValue) ?? UsageStatisticType.sdkUnknown(rawValue)
        }
    }
}
