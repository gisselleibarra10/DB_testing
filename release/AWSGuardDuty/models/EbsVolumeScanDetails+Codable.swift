// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GuardDutyClientTypes.EbsVolumeScanDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case scanCompletedAt = "scanCompletedAt"
        case scanDetections = "scanDetections"
        case scanId = "scanId"
        case scanStartedAt = "scanStartedAt"
        case sources = "sources"
        case triggerFindingId = "triggerFindingId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let scanCompletedAt = self.scanCompletedAt {
            try encodeContainer.encode(scanCompletedAt.timeIntervalSince1970, forKey: .scanCompletedAt)
        }
        if let scanDetections = self.scanDetections {
            try encodeContainer.encode(scanDetections, forKey: .scanDetections)
        }
        if let scanId = self.scanId {
            try encodeContainer.encode(scanId, forKey: .scanId)
        }
        if let scanStartedAt = self.scanStartedAt {
            try encodeContainer.encode(scanStartedAt.timeIntervalSince1970, forKey: .scanStartedAt)
        }
        if let sources = sources {
            var sourcesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .sources)
            for sources0 in sources {
                try sourcesContainer.encode(sources0)
            }
        }
        if let triggerFindingId = self.triggerFindingId {
            try encodeContainer.encode(triggerFindingId, forKey: .triggerFindingId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scanIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .scanId)
        scanId = scanIdDecoded
        let scanStartedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .scanStartedAt)
        scanStartedAt = scanStartedAtDecoded
        let scanCompletedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .scanCompletedAt)
        scanCompletedAt = scanCompletedAtDecoded
        let triggerFindingIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .triggerFindingId)
        triggerFindingId = triggerFindingIdDecoded
        let sourcesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .sources)
        var sourcesDecoded0:[Swift.String]? = nil
        if let sourcesContainer = sourcesContainer {
            sourcesDecoded0 = [Swift.String]()
            for string0 in sourcesContainer {
                if let string0 = string0 {
                    sourcesDecoded0?.append(string0)
                }
            }
        }
        sources = sourcesDecoded0
        let scanDetectionsDecoded = try containerValues.decodeIfPresent(GuardDutyClientTypes.ScanDetections.self, forKey: .scanDetections)
        scanDetections = scanDetectionsDecoded
    }
}
