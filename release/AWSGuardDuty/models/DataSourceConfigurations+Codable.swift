// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GuardDutyClientTypes.DataSourceConfigurations: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case kubernetes = "kubernetes"
        case malwareProtection = "malwareProtection"
        case s3Logs = "s3Logs"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kubernetes = self.kubernetes {
            try encodeContainer.encode(kubernetes, forKey: .kubernetes)
        }
        if let malwareProtection = self.malwareProtection {
            try encodeContainer.encode(malwareProtection, forKey: .malwareProtection)
        }
        if let s3Logs = self.s3Logs {
            try encodeContainer.encode(s3Logs, forKey: .s3Logs)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3LogsDecoded = try containerValues.decodeIfPresent(GuardDutyClientTypes.S3LogsConfiguration.self, forKey: .s3Logs)
        s3Logs = s3LogsDecoded
        let kubernetesDecoded = try containerValues.decodeIfPresent(GuardDutyClientTypes.KubernetesConfiguration.self, forKey: .kubernetes)
        kubernetes = kubernetesDecoded
        let malwareProtectionDecoded = try containerValues.decodeIfPresent(GuardDutyClientTypes.MalwareProtectionConfiguration.self, forKey: .malwareProtection)
        malwareProtection = malwareProtectionDecoded
    }
}
