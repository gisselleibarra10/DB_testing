// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GuardDutyClientTypes.KubernetesApiCallAction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case parameters = "parameters"
        case remoteIpDetails = "remoteIpDetails"
        case requestUri = "requestUri"
        case sourceIps = "sourceIps"
        case statusCode = "statusCode"
        case userAgent = "userAgent"
        case verb = "verb"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let parameters = self.parameters {
            try encodeContainer.encode(parameters, forKey: .parameters)
        }
        if let remoteIpDetails = self.remoteIpDetails {
            try encodeContainer.encode(remoteIpDetails, forKey: .remoteIpDetails)
        }
        if let requestUri = self.requestUri {
            try encodeContainer.encode(requestUri, forKey: .requestUri)
        }
        if let sourceIps = sourceIps {
            var sourceIpsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .sourceIps)
            for sourceips0 in sourceIps {
                try sourceIpsContainer.encode(sourceips0)
            }
        }
        if statusCode != 0 {
            try encodeContainer.encode(statusCode, forKey: .statusCode)
        }
        if let userAgent = self.userAgent {
            try encodeContainer.encode(userAgent, forKey: .userAgent)
        }
        if let verb = self.verb {
            try encodeContainer.encode(verb, forKey: .verb)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let requestUriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .requestUri)
        requestUri = requestUriDecoded
        let verbDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .verb)
        verb = verbDecoded
        let sourceIpsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .sourceIps)
        var sourceIpsDecoded0:[Swift.String]? = nil
        if let sourceIpsContainer = sourceIpsContainer {
            sourceIpsDecoded0 = [Swift.String]()
            for string0 in sourceIpsContainer {
                if let string0 = string0 {
                    sourceIpsDecoded0?.append(string0)
                }
            }
        }
        sourceIps = sourceIpsDecoded0
        let userAgentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userAgent)
        userAgent = userAgentDecoded
        let remoteIpDetailsDecoded = try containerValues.decodeIfPresent(GuardDutyClientTypes.RemoteIpDetails.self, forKey: .remoteIpDetails)
        remoteIpDetails = remoteIpDetailsDecoded
        let statusCodeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .statusCode) ?? 0
        statusCode = statusCodeDecoded
        let parametersDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parameters)
        parameters = parametersDecoded
    }
}
