// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GuardDutyClientTypes {
    public enum IpSetFormat: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case alienVault
        case fireEye
        case otxCsv
        case proofPoint
        case stix
        case txt
        case sdkUnknown(Swift.String)

        public static var allCases: [IpSetFormat] {
            return [
                .alienVault,
                .fireEye,
                .otxCsv,
                .proofPoint,
                .stix,
                .txt,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .alienVault: return "ALIEN_VAULT"
            case .fireEye: return "FIRE_EYE"
            case .otxCsv: return "OTX_CSV"
            case .proofPoint: return "PROOF_POINT"
            case .stix: return "STIX"
            case .txt: return "TXT"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = IpSetFormat(rawValue: rawValue) ?? IpSetFormat.sdkUnknown(rawValue)
        }
    }
}
