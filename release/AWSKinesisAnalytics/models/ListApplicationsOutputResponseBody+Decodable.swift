// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationsOutputResponseBody: Swift.Equatable {
    let applicationSummaries: [KinesisAnalyticsClientTypes.ApplicationSummary]?
    let hasMoreApplications: Swift.Bool?
}

extension ListApplicationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationSummaries = "ApplicationSummaries"
        case hasMoreApplications = "HasMoreApplications"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationSummariesContainer = try containerValues.decodeIfPresent([KinesisAnalyticsClientTypes.ApplicationSummary?].self, forKey: .applicationSummaries)
        var applicationSummariesDecoded0:[KinesisAnalyticsClientTypes.ApplicationSummary]? = nil
        if let applicationSummariesContainer = applicationSummariesContainer {
            applicationSummariesDecoded0 = [KinesisAnalyticsClientTypes.ApplicationSummary]()
            for structure0 in applicationSummariesContainer {
                if let structure0 = structure0 {
                    applicationSummariesDecoded0?.append(structure0)
                }
            }
        }
        applicationSummaries = applicationSummariesDecoded0
        let hasMoreApplicationsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .hasMoreApplications)
        hasMoreApplications = hasMoreApplicationsDecoded
    }
}
