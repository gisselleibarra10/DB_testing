// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisAnalyticsClientTypes.KinesisFirehoseInputUpdate: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceARNUpdate = "ResourceARNUpdate"
        case roleARNUpdate = "RoleARNUpdate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourceARNUpdate = self.resourceARNUpdate {
            try encodeContainer.encode(resourceARNUpdate, forKey: .resourceARNUpdate)
        }
        if let roleARNUpdate = self.roleARNUpdate {
            try encodeContainer.encode(roleARNUpdate, forKey: .roleARNUpdate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceARNUpdateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceARNUpdate)
        resourceARNUpdate = resourceARNUpdateDecoded
        let roleARNUpdateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleARNUpdate)
        roleARNUpdate = roleARNUpdateDecoded
    }
}
