// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationsInputBody: Swift.Equatable {
    let limit: Swift.Int?
    let exclusiveStartApplicationName: Swift.String?
}

extension ListApplicationsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exclusiveStartApplicationName = "ExclusiveStartApplicationName"
        case limit = "Limit"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let exclusiveStartApplicationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exclusiveStartApplicationName)
        exclusiveStartApplicationName = exclusiveStartApplicationNameDecoded
    }
}
