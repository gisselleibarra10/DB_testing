// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectParticipantClientTypes.UploadMetadata: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case headersToInclude = "HeadersToInclude"
        case url = "Url"
        case urlExpiry = "UrlExpiry"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let headersToInclude = headersToInclude {
            var headersToIncludeContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .headersToInclude)
            for (dictKey0, uploadmetadatasignedheaders0) in headersToInclude {
                try headersToIncludeContainer.encode(uploadmetadatasignedheaders0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let url = self.url {
            try encodeContainer.encode(url, forKey: .url)
        }
        if let urlExpiry = self.urlExpiry {
            try encodeContainer.encode(urlExpiry, forKey: .urlExpiry)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let urlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .url)
        url = urlDecoded
        let urlExpiryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .urlExpiry)
        urlExpiry = urlExpiryDecoded
        let headersToIncludeContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .headersToInclude)
        var headersToIncludeDecoded0: [Swift.String:Swift.String]? = nil
        if let headersToIncludeContainer = headersToIncludeContainer {
            headersToIncludeDecoded0 = [Swift.String:Swift.String]()
            for (key0, uploadmetadatasignedheadersvalue0) in headersToIncludeContainer {
                if let uploadmetadatasignedheadersvalue0 = uploadmetadatasignedheadersvalue0 {
                    headersToIncludeDecoded0?[key0] = uploadmetadatasignedheadersvalue0
                }
            }
        }
        headersToInclude = headersToIncludeDecoded0
    }
}
