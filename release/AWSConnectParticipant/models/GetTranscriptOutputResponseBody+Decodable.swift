// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTranscriptOutputResponseBody: Swift.Equatable {
    let initialContactId: Swift.String?
    let transcript: [ConnectParticipantClientTypes.Item]?
    let nextToken: Swift.String?
}

extension GetTranscriptOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case initialContactId = "InitialContactId"
        case nextToken = "NextToken"
        case transcript = "Transcript"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let initialContactIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .initialContactId)
        initialContactId = initialContactIdDecoded
        let transcriptContainer = try containerValues.decodeIfPresent([ConnectParticipantClientTypes.Item?].self, forKey: .transcript)
        var transcriptDecoded0:[ConnectParticipantClientTypes.Item]? = nil
        if let transcriptContainer = transcriptContainer {
            transcriptDecoded0 = [ConnectParticipantClientTypes.Item]()
            for structure0 in transcriptContainer {
                if let structure0 = structure0 {
                    transcriptDecoded0?.append(structure0)
                }
            }
        }
        transcript = transcriptDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
