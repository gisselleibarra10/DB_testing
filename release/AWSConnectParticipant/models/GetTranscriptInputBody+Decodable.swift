// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTranscriptInputBody: Swift.Equatable {
    let contactId: Swift.String?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
    let scanDirection: ConnectParticipantClientTypes.ScanDirection?
    let sortOrder: ConnectParticipantClientTypes.SortKey?
    let startPosition: ConnectParticipantClientTypes.StartPosition?
}

extension GetTranscriptInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contactId = "ContactId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case scanDirection = "ScanDirection"
        case sortOrder = "SortOrder"
        case startPosition = "StartPosition"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .contactId)
        contactId = contactIdDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let scanDirectionDecoded = try containerValues.decodeIfPresent(ConnectParticipantClientTypes.ScanDirection.self, forKey: .scanDirection)
        scanDirection = scanDirectionDecoded
        let sortOrderDecoded = try containerValues.decodeIfPresent(ConnectParticipantClientTypes.SortKey.self, forKey: .sortOrder)
        sortOrder = sortOrderDecoded
        let startPositionDecoded = try containerValues.decodeIfPresent(ConnectParticipantClientTypes.StartPosition.self, forKey: .startPosition)
        startPosition = startPositionDecoded
    }
}
