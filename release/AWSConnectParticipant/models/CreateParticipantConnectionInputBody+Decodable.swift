// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateParticipantConnectionInputBody: Swift.Equatable {
    let type: [ConnectParticipantClientTypes.ConnectionType]?
    let connectParticipant: Swift.Bool?
}

extension CreateParticipantConnectionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectParticipant = "ConnectParticipant"
        case type = "Type"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeContainer = try containerValues.decodeIfPresent([ConnectParticipantClientTypes.ConnectionType?].self, forKey: .type)
        var typeDecoded0:[ConnectParticipantClientTypes.ConnectionType]? = nil
        if let typeContainer = typeContainer {
            typeDecoded0 = [ConnectParticipantClientTypes.ConnectionType]()
            for string0 in typeContainer {
                if let string0 = string0 {
                    typeDecoded0?.append(string0)
                }
            }
        }
        type = typeDecoded0
        let connectParticipantDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .connectParticipant)
        connectParticipant = connectParticipantDecoded
    }
}
