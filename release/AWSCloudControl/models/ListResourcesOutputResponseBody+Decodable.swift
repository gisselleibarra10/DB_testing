// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourcesOutputResponseBody: Swift.Equatable {
    let typeName: Swift.String?
    let resourceDescriptions: [CloudControlClientTypes.ResourceDescription]?
    let nextToken: Swift.String?
}

extension ListResourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case resourceDescriptions = "ResourceDescriptions"
        case typeName = "TypeName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeName)
        typeName = typeNameDecoded
        let resourceDescriptionsContainer = try containerValues.decodeIfPresent([CloudControlClientTypes.ResourceDescription?].self, forKey: .resourceDescriptions)
        var resourceDescriptionsDecoded0:[CloudControlClientTypes.ResourceDescription]? = nil
        if let resourceDescriptionsContainer = resourceDescriptionsContainer {
            resourceDescriptionsDecoded0 = [CloudControlClientTypes.ResourceDescription]()
            for structure0 in resourceDescriptionsContainer {
                if let structure0 = structure0 {
                    resourceDescriptionsDecoded0?.append(structure0)
                }
            }
        }
        resourceDescriptions = resourceDescriptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
