// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListResourcesInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case resourceModel = "ResourceModel"
        case roleArn = "RoleArn"
        case typeName = "TypeName"
        case typeVersionId = "TypeVersionId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let resourceModel = self.resourceModel {
            try encodeContainer.encode(resourceModel, forKey: .resourceModel)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let typeName = self.typeName {
            try encodeContainer.encode(typeName, forKey: .typeName)
        }
        if let typeVersionId = self.typeVersionId {
            try encodeContainer.encode(typeVersionId, forKey: .typeVersionId)
        }
    }
}
