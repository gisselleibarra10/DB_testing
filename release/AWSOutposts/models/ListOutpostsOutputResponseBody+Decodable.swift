// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOutpostsOutputResponseBody: Swift.Equatable {
    let outposts: [OutpostsClientTypes.Outpost]?
    let nextToken: Swift.String?
}

extension ListOutpostsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case outposts = "Outposts"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outpostsContainer = try containerValues.decodeIfPresent([OutpostsClientTypes.Outpost?].self, forKey: .outposts)
        var outpostsDecoded0:[OutpostsClientTypes.Outpost]? = nil
        if let outpostsContainer = outpostsContainer {
            outpostsDecoded0 = [OutpostsClientTypes.Outpost]()
            for structure0 in outpostsContainer {
                if let structure0 = structure0 {
                    outpostsDecoded0?.append(structure0)
                }
            }
        }
        outposts = outpostsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
