// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartConnectionInputBody: Swift.Equatable {
    let deviceSerialNumber: Swift.String?
    let assetId: Swift.String?
    let clientPublicKey: Swift.String?
    let networkInterfaceDeviceIndex: Swift.Int
}

extension StartConnectionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assetId = "AssetId"
        case clientPublicKey = "ClientPublicKey"
        case deviceSerialNumber = "DeviceSerialNumber"
        case networkInterfaceDeviceIndex = "NetworkInterfaceDeviceIndex"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceSerialNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceSerialNumber)
        deviceSerialNumber = deviceSerialNumberDecoded
        let assetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assetId)
        assetId = assetIdDecoded
        let clientPublicKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientPublicKey)
        clientPublicKey = clientPublicKeyDecoded
        let networkInterfaceDeviceIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .networkInterfaceDeviceIndex) ?? 0
        networkInterfaceDeviceIndex = networkInterfaceDeviceIndexDecoded
    }
}
