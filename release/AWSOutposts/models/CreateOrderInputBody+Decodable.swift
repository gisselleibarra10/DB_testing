// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateOrderInputBody: Swift.Equatable {
    let outpostIdentifier: Swift.String?
    let lineItems: [OutpostsClientTypes.LineItemRequest]?
    let paymentOption: OutpostsClientTypes.PaymentOption?
    let paymentTerm: OutpostsClientTypes.PaymentTerm?
}

extension CreateOrderInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lineItems = "LineItems"
        case outpostIdentifier = "OutpostIdentifier"
        case paymentOption = "PaymentOption"
        case paymentTerm = "PaymentTerm"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outpostIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .outpostIdentifier)
        outpostIdentifier = outpostIdentifierDecoded
        let lineItemsContainer = try containerValues.decodeIfPresent([OutpostsClientTypes.LineItemRequest?].self, forKey: .lineItems)
        var lineItemsDecoded0:[OutpostsClientTypes.LineItemRequest]? = nil
        if let lineItemsContainer = lineItemsContainer {
            lineItemsDecoded0 = [OutpostsClientTypes.LineItemRequest]()
            for structure0 in lineItemsContainer {
                if let structure0 = structure0 {
                    lineItemsDecoded0?.append(structure0)
                }
            }
        }
        lineItems = lineItemsDecoded0
        let paymentOptionDecoded = try containerValues.decodeIfPresent(OutpostsClientTypes.PaymentOption.self, forKey: .paymentOption)
        paymentOption = paymentOptionDecoded
        let paymentTermDecoded = try containerValues.decodeIfPresent(OutpostsClientTypes.PaymentTerm.self, forKey: .paymentTerm)
        paymentTerm = paymentTermDecoded
    }
}
