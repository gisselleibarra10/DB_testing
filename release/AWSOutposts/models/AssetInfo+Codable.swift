// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OutpostsClientTypes.AssetInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assetId = "AssetId"
        case assetLocation = "AssetLocation"
        case assetType = "AssetType"
        case computeAttributes = "ComputeAttributes"
        case rackId = "RackId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let assetId = self.assetId {
            try encodeContainer.encode(assetId, forKey: .assetId)
        }
        if let assetLocation = self.assetLocation {
            try encodeContainer.encode(assetLocation, forKey: .assetLocation)
        }
        if let assetType = self.assetType {
            try encodeContainer.encode(assetType.rawValue, forKey: .assetType)
        }
        if let computeAttributes = self.computeAttributes {
            try encodeContainer.encode(computeAttributes, forKey: .computeAttributes)
        }
        if let rackId = self.rackId {
            try encodeContainer.encode(rackId, forKey: .rackId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assetId)
        assetId = assetIdDecoded
        let rackIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rackId)
        rackId = rackIdDecoded
        let assetTypeDecoded = try containerValues.decodeIfPresent(OutpostsClientTypes.AssetType.self, forKey: .assetType)
        assetType = assetTypeDecoded
        let computeAttributesDecoded = try containerValues.decodeIfPresent(OutpostsClientTypes.ComputeAttributes.self, forKey: .computeAttributes)
        computeAttributes = computeAttributesDecoded
        let assetLocationDecoded = try containerValues.decodeIfPresent(OutpostsClientTypes.AssetLocation.self, forKey: .assetLocation)
        assetLocation = assetLocationDecoded
    }
}
