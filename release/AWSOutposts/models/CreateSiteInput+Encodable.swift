// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateSiteInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case name = "Name"
        case notes = "Notes"
        case operatingAddress = "OperatingAddress"
        case rackPhysicalProperties = "RackPhysicalProperties"
        case shippingAddress = "ShippingAddress"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let notes = self.notes {
            try encodeContainer.encode(notes, forKey: .notes)
        }
        if let operatingAddress = self.operatingAddress {
            try encodeContainer.encode(operatingAddress, forKey: .operatingAddress)
        }
        if let rackPhysicalProperties = self.rackPhysicalProperties {
            try encodeContainer.encode(rackPhysicalProperties, forKey: .rackPhysicalProperties)
        }
        if let shippingAddress = self.shippingAddress {
            try encodeContainer.encode(shippingAddress, forKey: .shippingAddress)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, tagmap0) in tags {
                try tagsContainer.encode(tagmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
