// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCatalogItemsOutputResponseBody: Swift.Equatable {
    let catalogItems: [OutpostsClientTypes.CatalogItem]?
    let nextToken: Swift.String?
}

extension ListCatalogItemsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case catalogItems = "CatalogItems"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogItemsContainer = try containerValues.decodeIfPresent([OutpostsClientTypes.CatalogItem?].self, forKey: .catalogItems)
        var catalogItemsDecoded0:[OutpostsClientTypes.CatalogItem]? = nil
        if let catalogItemsContainer = catalogItemsContainer {
            catalogItemsDecoded0 = [OutpostsClientTypes.CatalogItem]()
            for structure0 in catalogItemsContainer {
                if let structure0 = structure0 {
                    catalogItemsDecoded0?.append(structure0)
                }
            }
        }
        catalogItems = catalogItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
