// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OutpostsClientTypes.LineItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assetInformationList = "AssetInformationList"
        case catalogItemId = "CatalogItemId"
        case lineItemId = "LineItemId"
        case quantity = "Quantity"
        case shipmentInformation = "ShipmentInformation"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let assetInformationList = assetInformationList {
            var assetInformationListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .assetInformationList)
            for lineitemassetinformationlist0 in assetInformationList {
                try assetInformationListContainer.encode(lineitemassetinformationlist0)
            }
        }
        if let catalogItemId = self.catalogItemId {
            try encodeContainer.encode(catalogItemId, forKey: .catalogItemId)
        }
        if let lineItemId = self.lineItemId {
            try encodeContainer.encode(lineItemId, forKey: .lineItemId)
        }
        if quantity != 0 {
            try encodeContainer.encode(quantity, forKey: .quantity)
        }
        if let shipmentInformation = self.shipmentInformation {
            try encodeContainer.encode(shipmentInformation, forKey: .shipmentInformation)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogItemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .catalogItemId)
        catalogItemId = catalogItemIdDecoded
        let lineItemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lineItemId)
        lineItemId = lineItemIdDecoded
        let quantityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .quantity) ?? 0
        quantity = quantityDecoded
        let statusDecoded = try containerValues.decodeIfPresent(OutpostsClientTypes.LineItemStatus.self, forKey: .status)
        status = statusDecoded
        let shipmentInformationDecoded = try containerValues.decodeIfPresent(OutpostsClientTypes.ShipmentInformation.self, forKey: .shipmentInformation)
        shipmentInformation = shipmentInformationDecoded
        let assetInformationListContainer = try containerValues.decodeIfPresent([OutpostsClientTypes.LineItemAssetInformation?].self, forKey: .assetInformationList)
        var assetInformationListDecoded0:[OutpostsClientTypes.LineItemAssetInformation]? = nil
        if let assetInformationListContainer = assetInformationListContainer {
            assetInformationListDecoded0 = [OutpostsClientTypes.LineItemAssetInformation]()
            for structure0 in assetInformationListContainer {
                if let structure0 = structure0 {
                    assetInformationListDecoded0?.append(structure0)
                }
            }
        }
        assetInformationList = assetInformationListDecoded0
    }
}
