// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IvsClientTypes {
    /// Object that captures the Amazon IVS configuration that the customer provisioned, the ingest configurations that the broadcaster used, and the most recent Amazon IVS stream events it encountered.
    public struct StreamSession: Swift.Equatable {
        /// The properties of the channel at the time of going live.
        public var channel: IvsClientTypes.Channel?
        /// Time when the channel went offline. This is an ISO 8601 timestamp; note that this is returned as a string. For live streams, this is NULL.
        public var endTime: ClientRuntime.Date?
        /// The properties of the incoming RTMP stream for the stream.
        public var ingestConfiguration: IvsClientTypes.IngestConfiguration?
        /// The properties of recording the live stream.
        public var recordingConfiguration: IvsClientTypes.RecordingConfiguration?
        /// Time when the channel went live. This is an ISO 8601 timestamp; note that this is returned as a string.
        public var startTime: ClientRuntime.Date?
        /// Unique identifier for a live or previously live stream in the specified channel.
        public var streamId: Swift.String?
        /// List of Amazon IVS events that the stream encountered. The list is sorted by most recent events and contains up to 500 events. For Amazon IVS events, see [Using Amazon EventBridge with Amazon IVS](https://docs.aws.amazon.com/ivs/latest/userguide/eventbridge.html).
        public var truncatedEvents: [IvsClientTypes.StreamEvent]?

        public init (
            channel: IvsClientTypes.Channel? = nil,
            endTime: ClientRuntime.Date? = nil,
            ingestConfiguration: IvsClientTypes.IngestConfiguration? = nil,
            recordingConfiguration: IvsClientTypes.RecordingConfiguration? = nil,
            startTime: ClientRuntime.Date? = nil,
            streamId: Swift.String? = nil,
            truncatedEvents: [IvsClientTypes.StreamEvent]? = nil
        )
        {
            self.channel = channel
            self.endTime = endTime
            self.ingestConfiguration = ingestConfiguration
            self.recordingConfiguration = recordingConfiguration
            self.startTime = startTime
            self.streamId = streamId
            self.truncatedEvents = truncatedEvents
        }
    }

}
