// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamSessionsOutputResponseBody: Swift.Equatable {
    let streamSessions: [IvsClientTypes.StreamSessionSummary]?
    let nextToken: Swift.String?
}

extension ListStreamSessionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case streamSessions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamSessionsContainer = try containerValues.decodeIfPresent([IvsClientTypes.StreamSessionSummary?].self, forKey: .streamSessions)
        var streamSessionsDecoded0:[IvsClientTypes.StreamSessionSummary]? = nil
        if let streamSessionsContainer = streamSessionsContainer {
            streamSessionsDecoded0 = [IvsClientTypes.StreamSessionSummary]()
            for structure0 in streamSessionsContainer {
                if let structure0 = structure0 {
                    streamSessionsDecoded0?.append(structure0)
                }
            }
        }
        streamSessions = streamSessionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
