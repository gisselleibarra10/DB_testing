// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IvsClientTypes.ThumbnailConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case recordingMode
        case targetIntervalSeconds
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let recordingMode = self.recordingMode {
            try encodeContainer.encode(recordingMode.rawValue, forKey: .recordingMode)
        }
        if targetIntervalSeconds != 0 {
            try encodeContainer.encode(targetIntervalSeconds, forKey: .targetIntervalSeconds)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recordingModeDecoded = try containerValues.decodeIfPresent(IvsClientTypes.RecordingMode.self, forKey: .recordingMode)
        recordingMode = recordingModeDecoded
        let targetIntervalSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .targetIntervalSeconds) ?? 0
        targetIntervalSeconds = targetIntervalSecondsDecoded
    }
}
