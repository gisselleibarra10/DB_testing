// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamKeysOutputResponseBody: Swift.Equatable {
    let streamKeys: [IvsClientTypes.StreamKeySummary]?
    let nextToken: Swift.String?
}

extension ListStreamKeysOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case streamKeys
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamKeysContainer = try containerValues.decodeIfPresent([IvsClientTypes.StreamKeySummary?].self, forKey: .streamKeys)
        var streamKeysDecoded0:[IvsClientTypes.StreamKeySummary]? = nil
        if let streamKeysContainer = streamKeysContainer {
            streamKeysDecoded0 = [IvsClientTypes.StreamKeySummary]()
            for structure0 in streamKeysContainer {
                if let structure0 = structure0 {
                    streamKeysDecoded0?.append(structure0)
                }
            }
        }
        streamKeys = streamKeysDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
