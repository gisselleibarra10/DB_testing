// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IvsClientTypes {
    /// An object representing a configuration to record a channel stream.
    public struct RecordingConfiguration: Swift.Equatable {
        /// Recording-configuration ARN.
        /// This member is required.
        public var arn: Swift.String?
        /// A complex type that contains information about where recorded video will be stored.
        /// This member is required.
        public var destinationConfiguration: IvsClientTypes.DestinationConfiguration?
        /// Recording-configuration name. The value does not need to be unique.
        public var name: Swift.String?
        /// If a broadcast disconnects and then reconnects within the specified interval, the multiple streams will be considered a single broadcast and merged together. Default: 0.
        public var recordingReconnectWindowSeconds: Swift.Int
        /// Indicates the current state of the recording configuration. When the state is ACTIVE, the configuration is ready for recording a channel stream.
        /// This member is required.
        public var state: IvsClientTypes.RecordingConfigurationState?
        /// Array of 1-50 maps, each of the form string:string (key:value). See [Tagging Amazon Web Services Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) for more information, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS has no service-specific constraints beyond what is documented there.
        public var tags: [Swift.String:Swift.String]?
        /// A complex type that allows you to enable/disable the recording of thumbnails for a live session and modify the interval at which thumbnails are generated for the live session.
        public var thumbnailConfiguration: IvsClientTypes.ThumbnailConfiguration?

        public init (
            arn: Swift.String? = nil,
            destinationConfiguration: IvsClientTypes.DestinationConfiguration? = nil,
            name: Swift.String? = nil,
            recordingReconnectWindowSeconds: Swift.Int = 0,
            state: IvsClientTypes.RecordingConfigurationState? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            thumbnailConfiguration: IvsClientTypes.ThumbnailConfiguration? = nil
        )
        {
            self.arn = arn
            self.destinationConfiguration = destinationConfiguration
            self.name = name
            self.recordingReconnectWindowSeconds = recordingReconnectWindowSeconds
            self.state = state
            self.tags = tags
            self.thumbnailConfiguration = thumbnailConfiguration
        }
    }

}
