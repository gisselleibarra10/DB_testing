// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IvsClientTypes.StreamEvent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventTime
        case name
        case type
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let eventTime = self.eventTime {
            try encodeContainer.encode(eventTime.timeIntervalSince1970, forKey: .eventTime)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let type = self.type {
            try encodeContainer.encode(type, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .type)
        type = typeDecoded
        let eventTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .eventTime)
        eventTime = eventTimeDecoded
    }
}
