// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateRecordingConfigurationInputBody: Swift.Equatable {
    let name: Swift.String?
    let destinationConfiguration: IvsClientTypes.DestinationConfiguration?
    let tags: [Swift.String:Swift.String]?
    let thumbnailConfiguration: IvsClientTypes.ThumbnailConfiguration?
    let recordingReconnectWindowSeconds: Swift.Int
}

extension CreateRecordingConfigurationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationConfiguration
        case name
        case recordingReconnectWindowSeconds
        case tags
        case thumbnailConfiguration
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let destinationConfigurationDecoded = try containerValues.decodeIfPresent(IvsClientTypes.DestinationConfiguration.self, forKey: .destinationConfiguration)
        destinationConfiguration = destinationConfigurationDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
        let thumbnailConfigurationDecoded = try containerValues.decodeIfPresent(IvsClientTypes.ThumbnailConfiguration.self, forKey: .thumbnailConfiguration)
        thumbnailConfiguration = thumbnailConfigurationDecoded
        let recordingReconnectWindowSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .recordingReconnectWindowSeconds) ?? 0
        recordingReconnectWindowSeconds = recordingReconnectWindowSecondsDecoded
    }
}
