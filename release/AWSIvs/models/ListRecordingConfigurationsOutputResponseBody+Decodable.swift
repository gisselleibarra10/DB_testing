// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecordingConfigurationsOutputResponseBody: Swift.Equatable {
    let recordingConfigurations: [IvsClientTypes.RecordingConfigurationSummary]?
    let nextToken: Swift.String?
}

extension ListRecordingConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case recordingConfigurations
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recordingConfigurationsContainer = try containerValues.decodeIfPresent([IvsClientTypes.RecordingConfigurationSummary?].self, forKey: .recordingConfigurations)
        var recordingConfigurationsDecoded0:[IvsClientTypes.RecordingConfigurationSummary]? = nil
        if let recordingConfigurationsContainer = recordingConfigurationsContainer {
            recordingConfigurationsDecoded0 = [IvsClientTypes.RecordingConfigurationSummary]()
            for structure0 in recordingConfigurationsContainer {
                if let structure0 = structure0 {
                    recordingConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        recordingConfigurations = recordingConfigurationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
