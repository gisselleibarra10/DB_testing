// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LocationClientTypes {
    /// A place index resource listed in your AWS account.
    public struct ListPlaceIndexesResponseEntry: Swift.Equatable {
        /// The timestamp for when the place index resource was created in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format: YYYY-MM-DDThh:mm:ss.sssZ.
        /// This member is required.
        public var createTime: ClientRuntime.Date?
        /// The data provider of geospatial data. Values can be one of the following:
        ///
        /// * Esri
        ///
        /// * Here
        ///
        ///
        /// For more information about data providers, see [Amazon Location Service data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html).
        /// This member is required.
        public var dataSource: Swift.String?
        /// The optional description for the place index resource.
        /// This member is required.
        public var description: Swift.String?
        /// The name of the place index resource.
        /// This member is required.
        public var indexName: Swift.String?
        /// No longer used. Always returns RequestBasedUsage.
        @available(*, deprecated, message: "Deprecated. Always returns RequestBasedUsage. API deprecated since 2022-02-01")
        public var pricingPlan: LocationClientTypes.PricingPlan?
        /// The timestamp for when the place index resource was last updated in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format: YYYY-MM-DDThh:mm:ss.sssZ.
        /// This member is required.
        public var updateTime: ClientRuntime.Date?

        public init (
            createTime: ClientRuntime.Date? = nil,
            dataSource: Swift.String? = nil,
            description: Swift.String? = nil,
            indexName: Swift.String? = nil,
            pricingPlan: LocationClientTypes.PricingPlan? = nil,
            updateTime: ClientRuntime.Date? = nil
        )
        {
            self.createTime = createTime
            self.dataSource = dataSource
            self.description = description
            self.indexName = indexName
            self.pricingPlan = pricingPlan
            self.updateTime = updateTime
        }
    }

}
