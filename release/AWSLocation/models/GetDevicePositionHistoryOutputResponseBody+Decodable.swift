// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDevicePositionHistoryOutputResponseBody: Swift.Equatable {
    let devicePositions: [LocationClientTypes.DevicePosition]?
    let nextToken: Swift.String?
}

extension GetDevicePositionHistoryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case devicePositions = "DevicePositions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let devicePositionsContainer = try containerValues.decodeIfPresent([LocationClientTypes.DevicePosition?].self, forKey: .devicePositions)
        var devicePositionsDecoded0:[LocationClientTypes.DevicePosition]? = nil
        if let devicePositionsContainer = devicePositionsContainer {
            devicePositionsDecoded0 = [LocationClientTypes.DevicePosition]()
            for structure0 in devicePositionsContainer {
                if let structure0 = structure0 {
                    devicePositionsDecoded0?.append(structure0)
                }
            }
        }
        devicePositions = devicePositionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
