// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LocationClientTypes {
    /// A summary of the request sent by using SearchPlaceIndexForSuggestions.
    public struct SearchPlaceIndexForSuggestionsSummary: Swift.Equatable {
        /// Contains the coordinates for the optional bias position specified in the request. This parameter contains a pair of numbers. The first number represents the X coordinate, or longitude; the second number represents the Y coordinate, or latitude. For example, [-123.1174, 49.2847] represents the position with longitude -123.1174 and latitude 49.2847.
        public var biasPosition: [Swift.Double]?
        /// The geospatial data provider attached to the place index resource specified in the request. Values can be one of the following:
        ///
        /// * Esri
        ///
        /// * Here
        ///
        ///
        /// For more information about data providers, see [Amazon Location Service data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html).
        /// This member is required.
        public var dataSource: Swift.String?
        /// Contains the coordinates for the optional bounding box specified in the request.
        public var filterBBox: [Swift.Double]?
        /// Contains the optional country filter specified in the request.
        public var filterCountries: [Swift.String]?
        /// The preferred language used to return results. Matches the language in the request. The value is a valid [BCP 47](https://tools.ietf.org/search/bcp47) language tag, for example, en for English.
        public var language: Swift.String?
        /// Contains the optional result count limit specified in the request.
        public var maxResults: Swift.Int?
        /// The free-form partial text input specified in the request.
        /// This member is required.
        public var text: Swift.String?

        public init (
            biasPosition: [Swift.Double]? = nil,
            dataSource: Swift.String? = nil,
            filterBBox: [Swift.Double]? = nil,
            filterCountries: [Swift.String]? = nil,
            language: Swift.String? = nil,
            maxResults: Swift.Int? = nil,
            text: Swift.String? = nil
        )
        {
            self.biasPosition = biasPosition
            self.dataSource = dataSource
            self.filterBBox = filterBBox
            self.filterCountries = filterCountries
            self.language = language
            self.maxResults = maxResults
            self.text = text
        }
    }

}
