// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CalculateRouteOutputResponseBody: Swift.Equatable {
    let legs: [LocationClientTypes.Leg]?
    let summary: LocationClientTypes.CalculateRouteSummary?
}

extension CalculateRouteOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case legs = "Legs"
        case summary = "Summary"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let legsContainer = try containerValues.decodeIfPresent([LocationClientTypes.Leg?].self, forKey: .legs)
        var legsDecoded0:[LocationClientTypes.Leg]? = nil
        if let legsContainer = legsContainer {
            legsDecoded0 = [LocationClientTypes.Leg]()
            for structure0 in legsContainer {
                if let structure0 = structure0 {
                    legsDecoded0?.append(structure0)
                }
            }
        }
        legs = legsDecoded0
        let summaryDecoded = try containerValues.decodeIfPresent(LocationClientTypes.CalculateRouteSummary.self, forKey: .summary)
        summary = summaryDecoded
    }
}
