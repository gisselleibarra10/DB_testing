// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetMapGlyphsInput: Swift.Equatable {
    /// A comma-separated list of fonts to load glyphs from in order of preference. For example, Noto Sans Regular, Arial Unicode. Valid fonts stacks for [Esri](https://docs.aws.amazon.com/location/latest/developerguide/esri.html) styles:
    ///
    /// * VectorEsriDarkGrayCanvas – Ubuntu Medium Italic | Ubuntu Medium | Ubuntu Italic | Ubuntu Regular | Ubuntu Bold
    ///
    /// * VectorEsriLightGrayCanvas – Ubuntu Italic | Ubuntu Regular | Ubuntu Light | Ubuntu Bold
    ///
    /// * VectorEsriTopographic – Noto Sans Italic | Noto Sans Regular | Noto Sans Bold | Noto Serif Regular | Roboto Condensed Light Italic
    ///
    /// * VectorEsriStreets – Arial Regular | Arial Italic | Arial Bold
    ///
    /// * VectorEsriNavigation – Arial Regular | Arial Italic | Arial Bold
    ///
    ///
    /// Valid font stacks for [HERE Technologies](https://docs.aws.amazon.com/location/latest/developerguide/HERE.html) styles:
    ///
    /// * VectorHereContrast – Fira GO Regular | Fira GO Bold
    ///
    /// * VectorHereExplore, VectorHereExploreTruck – Firo GO Italic | Fira GO Map | Fira GO Map Bold | Noto Sans CJK JP Bold | Noto Sans CJK JP Light | Noto Sans CJK JP Regular
    /// This member is required.
    public var fontStack: Swift.String?
    /// A Unicode range of characters to download glyphs for. Each response will contain 256 characters. For example, 0–255 includes all characters from range U+0000 to 00FF. Must be aligned to multiples of 256.
    /// This member is required.
    public var fontUnicodeRange: Swift.String?
    /// The map resource associated with the glyph ﬁle.
    /// This member is required.
    public var mapName: Swift.String?

    public init (
        fontStack: Swift.String? = nil,
        fontUnicodeRange: Swift.String? = nil,
        mapName: Swift.String? = nil
    )
    {
        self.fontStack = fontStack
        self.fontUnicodeRange = fontUnicodeRange
        self.mapName = mapName
    }
}
