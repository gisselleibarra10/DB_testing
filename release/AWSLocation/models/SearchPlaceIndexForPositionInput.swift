// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SearchPlaceIndexForPositionInput: Swift.Equatable {
    /// The name of the place index resource you want to use for the search.
    /// This member is required.
    public var indexName: Swift.String?
    /// The preferred language used to return results. The value must be a valid [BCP 47](https://tools.ietf.org/search/bcp47) language tag, for example, en for English. This setting affects the languages used in the results, but not the results themselves. If no language is specified, or not supported for a particular result, the partner automatically chooses a language for the result. For an example, we'll use the Greek language. You search for a location around Athens, Greece, with the language parameter set to en. The city in the results will most likely be returned as Athens. If you set the language parameter to el, for Greek, then the city in the results will more likely be returned as Αθήνα. If the data provider does not have a value for Greek, the result will be in a language that the provider does support.
    public var language: Swift.String?
    /// An optional parameter. The maximum number of results returned per request. Default value: 50
    public var maxResults: Swift.Int
    /// Specifies the longitude and latitude of the position to query. This parameter must contain a pair of numbers. The first number represents the X coordinate, or longitude; the second number represents the Y coordinate, or latitude. For example, [-123.1174, 49.2847] represents a position with longitude -123.1174 and latitude 49.2847.
    /// This member is required.
    public var position: [Swift.Double]?

    public init (
        indexName: Swift.String? = nil,
        language: Swift.String? = nil,
        maxResults: Swift.Int = 0,
        position: [Swift.Double]? = nil
    )
    {
        self.indexName = indexName
        self.language = language
        self.maxResults = maxResults
        self.position = position
    }
}
