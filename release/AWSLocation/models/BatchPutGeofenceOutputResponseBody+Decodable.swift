// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchPutGeofenceOutputResponseBody: Swift.Equatable {
    let successes: [LocationClientTypes.BatchPutGeofenceSuccess]?
    let errors: [LocationClientTypes.BatchPutGeofenceError]?
}

extension BatchPutGeofenceOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errors = "Errors"
        case successes = "Successes"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successesContainer = try containerValues.decodeIfPresent([LocationClientTypes.BatchPutGeofenceSuccess?].self, forKey: .successes)
        var successesDecoded0:[LocationClientTypes.BatchPutGeofenceSuccess]? = nil
        if let successesContainer = successesContainer {
            successesDecoded0 = [LocationClientTypes.BatchPutGeofenceSuccess]()
            for structure0 in successesContainer {
                if let structure0 = structure0 {
                    successesDecoded0?.append(structure0)
                }
            }
        }
        successes = successesDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([LocationClientTypes.BatchPutGeofenceError?].self, forKey: .errors)
        var errorsDecoded0:[LocationClientTypes.BatchPutGeofenceError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [LocationClientTypes.BatchPutGeofenceError]()
            for structure0 in errorsContainer {
                if let structure0 = structure0 {
                    errorsDecoded0?.append(structure0)
                }
            }
        }
        errors = errorsDecoded0
    }
}
