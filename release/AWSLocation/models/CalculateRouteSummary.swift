// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LocationClientTypes {
    /// A summary of the calculated route.
    public struct CalculateRouteSummary: Swift.Equatable {
        /// The data provider of traffic and road network data used to calculate the route. Indicates one of the available providers:
        ///
        /// * Esri
        ///
        /// * Here
        ///
        ///
        /// For more information about data providers, see [Amazon Location Service data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html).
        /// This member is required.
        public var dataSource: Swift.String?
        /// The total distance covered by the route. The sum of the distance travelled between every stop on the route. If Esri is the data source for the route calculator, the route distance canâ€™t be greater than 400 km. If the route exceeds 400 km, the response is a 400 RoutesValidationException error.
        /// This member is required.
        public var distance: Swift.Double?
        /// The unit of measurement for route distances.
        /// This member is required.
        public var distanceUnit: LocationClientTypes.DistanceUnit?
        /// The total travel time for the route measured in seconds. The sum of the travel time between every stop on the route.
        /// This member is required.
        public var durationSeconds: Swift.Double?
        /// Specifies a geographical box surrounding a route. Used to zoom into a route when displaying it in a map. For example, [min x, min y, max x, max y]. The first 2 bbox parameters describe the lower southwest corner:
        ///
        /// * The first bbox position is the X coordinate or longitude of the lower southwest corner.
        ///
        /// * The second bbox position is the Y coordinate or latitude of the lower southwest corner.
        ///
        ///
        /// The next 2 bbox parameters describe the upper northeast corner:
        ///
        /// * The third bbox position is the X coordinate, or longitude of the upper northeast corner.
        ///
        /// * The fourth bbox position is the Y coordinate, or latitude of the upper northeast corner.
        /// This member is required.
        public var routeBBox: [Swift.Double]?

        public init (
            dataSource: Swift.String? = nil,
            distance: Swift.Double? = nil,
            distanceUnit: LocationClientTypes.DistanceUnit? = nil,
            durationSeconds: Swift.Double? = nil,
            routeBBox: [Swift.Double]? = nil
        )
        {
            self.dataSource = dataSource
            self.distance = distance
            self.distanceUnit = distanceUnit
            self.durationSeconds = durationSeconds
            self.routeBBox = routeBBox
        }
    }

}
