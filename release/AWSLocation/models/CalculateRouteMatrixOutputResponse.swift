// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Returns the result of the route matrix calculation.
public struct CalculateRouteMatrixOutputResponse: Swift.Equatable {
    /// The calculated route matrix containing the results for all pairs of DeparturePositions to DestinationPositions. Each row corresponds to one entry in DeparturePositions. Each entry in the row corresponds to the route from that entry in DeparturePositions to an entry in DestinationPositions.
    /// This member is required.
    public var routeMatrix: [[LocationClientTypes.RouteMatrixEntry]]?
    /// For routes calculated using an Esri route calculator resource, departure positions are snapped to the closest road. For Esri route calculator resources, this returns the list of departure/origin positions used for calculation of the RouteMatrix.
    public var snappedDeparturePositions: [[Swift.Double]]?
    /// The list of destination positions for the route matrix used for calculation of the RouteMatrix.
    public var snappedDestinationPositions: [[Swift.Double]]?
    /// Contains information about the route matrix, DataSource, DistanceUnit, RouteCount and ErrorCount.
    /// This member is required.
    public var summary: LocationClientTypes.CalculateRouteMatrixSummary?

    public init (
        routeMatrix: [[LocationClientTypes.RouteMatrixEntry]]? = nil,
        snappedDeparturePositions: [[Swift.Double]]? = nil,
        snappedDestinationPositions: [[Swift.Double]]? = nil,
        summary: LocationClientTypes.CalculateRouteMatrixSummary? = nil
    )
    {
        self.routeMatrix = routeMatrix
        self.snappedDeparturePositions = snappedDeparturePositions
        self.snappedDestinationPositions = snappedDestinationPositions
        self.summary = summary
    }
}
