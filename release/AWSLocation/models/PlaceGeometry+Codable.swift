// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LocationClientTypes.PlaceGeometry: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case point = "Point"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let point = point {
            var pointContainer = encodeContainer.nestedUnkeyedContainer(forKey: .point)
            for position0 in point {
                try pointContainer.encode(position0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pointContainer = try containerValues.decodeIfPresent([Swift.Double?].self, forKey: .point)
        var pointDecoded0:[Swift.Double]? = nil
        if let pointContainer = pointContainer {
            pointDecoded0 = [Swift.Double]()
            for double0 in pointContainer {
                if let double0 = double0 {
                    pointDecoded0?.append(double0)
                }
            }
        }
        point = pointDecoded0
    }
}
