// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeMapOutputResponse: Swift.Equatable {
    /// Specifies the map tile style selected from a partner data provider.
    /// This member is required.
    public var configuration: LocationClientTypes.MapConfiguration?
    /// The timestamp for when the map resource was created in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format: YYYY-MM-DDThh:mm:ss.sssZ.
    /// This member is required.
    public var createTime: ClientRuntime.Date?
    /// Specifies the data provider for the associated map tiles.
    /// This member is required.
    public var dataSource: Swift.String?
    /// The optional description for the map resource.
    /// This member is required.
    public var description: Swift.String?
    /// The Amazon Resource Name (ARN) for the map resource. Used to specify a resource across all AWS.
    ///
    /// * Format example: arn:aws:geo:region:account-id:maps/ExampleMap
    /// This member is required.
    public var mapArn: Swift.String?
    /// The map style selected from an available provider.
    /// This member is required.
    public var mapName: Swift.String?
    /// No longer used. Always returns RequestBasedUsage.
    @available(*, deprecated, message: "Deprecated. Always returns RequestBasedUsage. API deprecated since 2022-02-01")
    public var pricingPlan: LocationClientTypes.PricingPlan?
    /// Tags associated with the map resource.
    public var tags: [Swift.String:Swift.String]?
    /// The timestamp for when the map resource was last update in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format: YYYY-MM-DDThh:mm:ss.sssZ.
    /// This member is required.
    public var updateTime: ClientRuntime.Date?

    public init (
        configuration: LocationClientTypes.MapConfiguration? = nil,
        createTime: ClientRuntime.Date? = nil,
        dataSource: Swift.String? = nil,
        description: Swift.String? = nil,
        mapArn: Swift.String? = nil,
        mapName: Swift.String? = nil,
        pricingPlan: LocationClientTypes.PricingPlan? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        updateTime: ClientRuntime.Date? = nil
    )
    {
        self.configuration = configuration
        self.createTime = createTime
        self.dataSource = dataSource
        self.description = description
        self.mapArn = mapArn
        self.mapName = mapName
        self.pricingPlan = pricingPlan
        self.tags = tags
        self.updateTime = updateTime
    }
}
