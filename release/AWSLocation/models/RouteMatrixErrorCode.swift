// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LocationClientTypes {
    public enum RouteMatrixErrorCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case departurepositionnotfound
        case destinationpositionnotfound
        case othervalidationerror
        case positionsnotfound
        case routenotfound
        case routetoolong
        case sdkUnknown(Swift.String)

        public static var allCases: [RouteMatrixErrorCode] {
            return [
                .departurepositionnotfound,
                .destinationpositionnotfound,
                .othervalidationerror,
                .positionsnotfound,
                .routenotfound,
                .routetoolong,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .departurepositionnotfound: return "DeparturePositionNotFound"
            case .destinationpositionnotfound: return "DestinationPositionNotFound"
            case .othervalidationerror: return "OtherValidationError"
            case .positionsnotfound: return "PositionsNotFound"
            case .routenotfound: return "RouteNotFound"
            case .routetoolong: return "RouteTooLong"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = RouteMatrixErrorCode(rawValue: rawValue) ?? RouteMatrixErrorCode.sdkUnknown(rawValue)
        }
    }
}
