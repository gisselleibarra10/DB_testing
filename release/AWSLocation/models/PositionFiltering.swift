// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LocationClientTypes {
    public enum PositionFiltering: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        /// Filters device position updates according to their accuracy
        case accuracybased
        /// Filters device position updates according to the distance between them
        case distancebased
        /// Filters device position updates according to their sample time
        case timebased
        case sdkUnknown(Swift.String)

        public static var allCases: [PositionFiltering] {
            return [
                .accuracybased,
                .distancebased,
                .timebased,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .accuracybased: return "AccuracyBased"
            case .distancebased: return "DistanceBased"
            case .timebased: return "TimeBased"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = PositionFiltering(rawValue: rawValue) ?? PositionFiltering.sdkUnknown(rawValue)
        }
    }
}
