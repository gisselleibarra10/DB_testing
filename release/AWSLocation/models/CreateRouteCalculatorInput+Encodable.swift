// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateRouteCalculatorInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case calculatorName = "CalculatorName"
        case dataSource = "DataSource"
        case description = "Description"
        case pricingPlan = "PricingPlan"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let calculatorName = self.calculatorName {
            try encodeContainer.encode(calculatorName, forKey: .calculatorName)
        }
        if let dataSource = self.dataSource {
            try encodeContainer.encode(dataSource, forKey: .dataSource)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let pricingPlan = self.pricingPlan {
            try encodeContainer.encode(pricingPlan.rawValue, forKey: .pricingPlan)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, tagmap0) in tags {
                try tagsContainer.encode(tagmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
