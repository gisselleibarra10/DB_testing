// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateGeofenceCollectionInput: Swift.Equatable {
    /// A custom name for the geofence collection. Requirements:
    ///
    /// * Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
    ///
    /// * Must be a unique geofence collection name.
    ///
    /// * No spaces allowed. For example, ExampleGeofenceCollection.
    /// This member is required.
    public var collectionName: Swift.String?
    /// An optional description for the geofence collection.
    public var description: Swift.String?
    /// A key identifier for an [AWS KMS customer managed key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html). Enter a key ID, key ARN, alias name, or alias ARN.
    public var kmsKeyId: Swift.String?
    /// No longer used. If included, the only allowed value is RequestBasedUsage.
    @available(*, deprecated, message: "Deprecated. If included, the only allowed value is RequestBasedUsage. API deprecated since 2022-02-01")
    public var pricingPlan: LocationClientTypes.PricingPlan?
    /// This parameter is no longer used.
    @available(*, deprecated, message: "Deprecated. No longer allowed. API deprecated since 2022-02-01")
    public var pricingPlanDataSource: Swift.String?
    /// Applies one or more tags to the geofence collection. A tag is a key-value pair helps manage, identify, search, and filter your resources by labelling them. Format: "key" : "value" Restrictions:
    ///
    /// * Maximum 50 tags per resource
    ///
    /// * Each resource tag must be unique with a maximum of one value.
    ///
    /// * Maximum key length: 128 Unicode characters in UTF-8
    ///
    /// * Maximum value length: 256 Unicode characters in UTF-8
    ///
    /// * Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + - = . _ : / @.
    ///
    /// * Cannot use "aws:" as a prefix for a key.
    public var tags: [Swift.String:Swift.String]?

    public init (
        collectionName: Swift.String? = nil,
        description: Swift.String? = nil,
        kmsKeyId: Swift.String? = nil,
        pricingPlan: LocationClientTypes.PricingPlan? = nil,
        pricingPlanDataSource: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.collectionName = collectionName
        self.description = description
        self.kmsKeyId = kmsKeyId
        self.pricingPlan = pricingPlan
        self.pricingPlanDataSource = pricingPlanDataSource
        self.tags = tags
    }
}
