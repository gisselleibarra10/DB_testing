// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SearchPlaceIndexForSuggestionsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case biasPosition = "BiasPosition"
        case filterBBox = "FilterBBox"
        case filterCountries = "FilterCountries"
        case language = "Language"
        case maxResults = "MaxResults"
        case text = "Text"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let biasPosition = biasPosition {
            var biasPositionContainer = encodeContainer.nestedUnkeyedContainer(forKey: .biasPosition)
            for position0 in biasPosition {
                try biasPositionContainer.encode(position0)
            }
        }
        if let filterBBox = filterBBox {
            var filterBBoxContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filterBBox)
            for boundingbox0 in filterBBox {
                try filterBBoxContainer.encode(boundingbox0)
            }
        }
        if let filterCountries = filterCountries {
            var filterCountriesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filterCountries)
            for countrycodelist0 in filterCountries {
                try filterCountriesContainer.encode(countrycodelist0)
            }
        }
        if let language = self.language {
            try encodeContainer.encode(language, forKey: .language)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let text = self.text {
            try encodeContainer.encode(text, forKey: .text)
        }
    }
}
