// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LocationClientTypes {
    /// Contains the geofence collection details.
    public struct ListGeofenceCollectionsResponseEntry: Swift.Equatable {
        /// The name of the geofence collection.
        /// This member is required.
        public var collectionName: Swift.String?
        /// The timestamp for when the geofence collection was created in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format: YYYY-MM-DDThh:mm:ss.sssZ
        /// This member is required.
        public var createTime: ClientRuntime.Date?
        /// The description for the geofence collection
        /// This member is required.
        public var description: Swift.String?
        /// No longer used. Always returns RequestBasedUsage.
        @available(*, deprecated, message: "Deprecated. Always returns RequestBasedUsage. API deprecated since 2022-02-01")
        public var pricingPlan: LocationClientTypes.PricingPlan?
        /// No longer used. Always returns an empty string.
        @available(*, deprecated, message: "Deprecated. Unused. API deprecated since 2022-02-01")
        public var pricingPlanDataSource: Swift.String?
        /// Specifies a timestamp for when the resource was last updated in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format: YYYY-MM-DDThh:mm:ss.sssZ
        /// This member is required.
        public var updateTime: ClientRuntime.Date?

        public init (
            collectionName: Swift.String? = nil,
            createTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            pricingPlan: LocationClientTypes.PricingPlan? = nil,
            pricingPlanDataSource: Swift.String? = nil,
            updateTime: ClientRuntime.Date? = nil
        )
        {
            self.collectionName = collectionName
            self.createTime = createTime
            self.description = description
            self.pricingPlan = pricingPlan
            self.pricingPlanDataSource = pricingPlanDataSource
            self.updateTime = updateTime
        }
    }

}
