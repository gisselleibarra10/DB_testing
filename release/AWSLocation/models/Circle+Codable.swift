// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LocationClientTypes.Circle: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case center = "Center"
        case radius = "Radius"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let center = center {
            var centerContainer = encodeContainer.nestedUnkeyedContainer(forKey: .center)
            for position0 in center {
                try centerContainer.encode(position0)
            }
        }
        if let radius = self.radius {
            try encodeContainer.encode(radius, forKey: .radius)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let centerContainer = try containerValues.decodeIfPresent([Swift.Double?].self, forKey: .center)
        var centerDecoded0:[Swift.Double]? = nil
        if let centerContainer = centerContainer {
            centerDecoded0 = [Swift.Double]()
            for double0 in centerContainer {
                if let double0 = double0 {
                    centerDecoded0?.append(double0)
                }
            }
        }
        center = centerDecoded0
        let radiusDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .radius)
        radius = radiusDecoded
    }
}
