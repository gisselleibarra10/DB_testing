// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEventsOutputResponseBody: Swift.Equatable {
    let serverEvents: [OpsWorksCmClientTypes.ServerEvent]?
    let nextToken: Swift.String?
}

extension DescribeEventsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case serverEvents = "ServerEvents"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serverEventsContainer = try containerValues.decodeIfPresent([OpsWorksCmClientTypes.ServerEvent?].self, forKey: .serverEvents)
        var serverEventsDecoded0:[OpsWorksCmClientTypes.ServerEvent]? = nil
        if let serverEventsContainer = serverEventsContainer {
            serverEventsDecoded0 = [OpsWorksCmClientTypes.ServerEvent]()
            for structure0 in serverEventsContainer {
                if let structure0 = structure0 {
                    serverEventsDecoded0?.append(structure0)
                }
            }
        }
        serverEvents = serverEventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
