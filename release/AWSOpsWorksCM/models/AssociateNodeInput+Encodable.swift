// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AssociateNodeInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case engineAttributes = "EngineAttributes"
        case nodeName = "NodeName"
        case serverName = "ServerName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let engineAttributes = engineAttributes {
            var engineAttributesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .engineAttributes)
            for engineattributes0 in engineAttributes {
                try engineAttributesContainer.encode(engineattributes0)
            }
        }
        if let nodeName = self.nodeName {
            try encodeContainer.encode(nodeName, forKey: .nodeName)
        }
        if let serverName = self.serverName {
            try encodeContainer.encode(serverName, forKey: .serverName)
        }
    }
}
