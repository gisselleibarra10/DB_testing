// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExportServerEngineAttributeInputBody: Swift.Equatable {
    let exportAttributeName: Swift.String?
    let serverName: Swift.String?
    let inputAttributes: [OpsWorksCmClientTypes.EngineAttribute]?
}

extension ExportServerEngineAttributeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exportAttributeName = "ExportAttributeName"
        case inputAttributes = "InputAttributes"
        case serverName = "ServerName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exportAttributeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exportAttributeName)
        exportAttributeName = exportAttributeNameDecoded
        let serverNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serverName)
        serverName = serverNameDecoded
        let inputAttributesContainer = try containerValues.decodeIfPresent([OpsWorksCmClientTypes.EngineAttribute?].self, forKey: .inputAttributes)
        var inputAttributesDecoded0:[OpsWorksCmClientTypes.EngineAttribute]? = nil
        if let inputAttributesContainer = inputAttributesContainer {
            inputAttributesDecoded0 = [OpsWorksCmClientTypes.EngineAttribute]()
            for structure0 in inputAttributesContainer {
                if let structure0 = structure0 {
                    inputAttributesDecoded0?.append(structure0)
                }
            }
        }
        inputAttributes = inputAttributesDecoded0
    }
}
