// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamProcessorsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let streamProcessors: [RekognitionClientTypes.StreamProcessor]?
}

extension ListStreamProcessorsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case streamProcessors = "StreamProcessors"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let streamProcessorsContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.StreamProcessor?].self, forKey: .streamProcessors)
        var streamProcessorsDecoded0:[RekognitionClientTypes.StreamProcessor]? = nil
        if let streamProcessorsContainer = streamProcessorsContainer {
            streamProcessorsDecoded0 = [RekognitionClientTypes.StreamProcessor]()
            for structure0 in streamProcessorsContainer {
                if let structure0 = structure0 {
                    streamProcessorsDecoded0?.append(structure0)
                }
            }
        }
        streamProcessors = streamProcessorsDecoded0
    }
}
