// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCollectionsOutputResponseBody: Swift.Equatable {
    let collectionIds: [Swift.String]?
    let nextToken: Swift.String?
    let faceModelVersions: [Swift.String]?
}

extension ListCollectionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case collectionIds = "CollectionIds"
        case faceModelVersions = "FaceModelVersions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let collectionIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .collectionIds)
        var collectionIdsDecoded0:[Swift.String]? = nil
        if let collectionIdsContainer = collectionIdsContainer {
            collectionIdsDecoded0 = [Swift.String]()
            for string0 in collectionIdsContainer {
                if let string0 = string0 {
                    collectionIdsDecoded0?.append(string0)
                }
            }
        }
        collectionIds = collectionIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let faceModelVersionsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .faceModelVersions)
        var faceModelVersionsDecoded0:[Swift.String]? = nil
        if let faceModelVersionsContainer = faceModelVersionsContainer {
            faceModelVersionsDecoded0 = [Swift.String]()
            for string0 in faceModelVersionsContainer {
                if let string0 = string0 {
                    faceModelVersionsDecoded0?.append(string0)
                }
            }
        }
        faceModelVersions = faceModelVersionsDecoded0
    }
}
