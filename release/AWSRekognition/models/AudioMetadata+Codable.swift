// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RekognitionClientTypes.AudioMetadata: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case codec = "Codec"
        case durationMillis = "DurationMillis"
        case numberOfChannels = "NumberOfChannels"
        case sampleRate = "SampleRate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let codec = self.codec {
            try encodeContainer.encode(codec, forKey: .codec)
        }
        if let durationMillis = self.durationMillis {
            try encodeContainer.encode(durationMillis, forKey: .durationMillis)
        }
        if let numberOfChannels = self.numberOfChannels {
            try encodeContainer.encode(numberOfChannels, forKey: .numberOfChannels)
        }
        if let sampleRate = self.sampleRate {
            try encodeContainer.encode(sampleRate, forKey: .sampleRate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codecDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .codec)
        codec = codecDecoded
        let durationMillisDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .durationMillis)
        durationMillis = durationMillisDecoded
        let sampleRateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sampleRate)
        sampleRate = sampleRateDecoded
        let numberOfChannelsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfChannels)
        numberOfChannels = numberOfChannelsDecoded
    }
}
