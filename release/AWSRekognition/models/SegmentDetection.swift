// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RekognitionClientTypes {
    /// A technical cue or shot detection segment detected in a video. An array of SegmentDetection objects containing all segments detected in a stored video is returned by [GetSegmentDetection].
    public struct SegmentDetection: Swift.Equatable {
        /// The duration of a video segment, expressed in frames.
        public var durationFrames: Swift.Int?
        /// The duration of the detected segment in milliseconds.
        public var durationMillis: Swift.Int?
        /// The duration of the timecode for the detected segment in SMPTE format.
        public var durationSMPTE: Swift.String?
        /// The frame number at the end of a video segment, using a frame index that starts with 0.
        public var endFrameNumber: Swift.Int?
        /// The frame-accurate SMPTE timecode, from the start of a video, for the end of a detected segment. EndTimecode is in HH:MM:SS:fr format (and ;fr for drop frame-rates).
        public var endTimecodeSMPTE: Swift.String?
        /// The end time of the detected segment, in milliseconds, from the start of the video. This value is rounded down.
        public var endTimestampMillis: Swift.Int
        /// If the segment is a shot detection, contains information about the shot detection.
        public var shotSegment: RekognitionClientTypes.ShotSegment?
        /// The frame number of the start of a video segment, using a frame index that starts with 0.
        public var startFrameNumber: Swift.Int?
        /// The frame-accurate SMPTE timecode, from the start of a video, for the start of a detected segment. StartTimecode is in HH:MM:SS:fr format (and ;fr for drop frame-rates).
        public var startTimecodeSMPTE: Swift.String?
        /// The start time of the detected segment in milliseconds from the start of the video. This value is rounded down. For example, if the actual timestamp is 100.6667 milliseconds, Amazon Rekognition Video returns a value of 100 millis.
        public var startTimestampMillis: Swift.Int
        /// If the segment is a technical cue, contains information about the technical cue.
        public var technicalCueSegment: RekognitionClientTypes.TechnicalCueSegment?
        /// The type of the segment. Valid values are TECHNICAL_CUE and SHOT.
        public var type: RekognitionClientTypes.SegmentType?

        public init (
            durationFrames: Swift.Int? = nil,
            durationMillis: Swift.Int? = nil,
            durationSMPTE: Swift.String? = nil,
            endFrameNumber: Swift.Int? = nil,
            endTimecodeSMPTE: Swift.String? = nil,
            endTimestampMillis: Swift.Int = 0,
            shotSegment: RekognitionClientTypes.ShotSegment? = nil,
            startFrameNumber: Swift.Int? = nil,
            startTimecodeSMPTE: Swift.String? = nil,
            startTimestampMillis: Swift.Int = 0,
            technicalCueSegment: RekognitionClientTypes.TechnicalCueSegment? = nil,
            type: RekognitionClientTypes.SegmentType? = nil
        )
        {
            self.durationFrames = durationFrames
            self.durationMillis = durationMillis
            self.durationSMPTE = durationSMPTE
            self.endFrameNumber = endFrameNumber
            self.endTimecodeSMPTE = endTimecodeSMPTE
            self.endTimestampMillis = endTimestampMillis
            self.shotSegment = shotSegment
            self.startFrameNumber = startFrameNumber
            self.startTimecodeSMPTE = startTimecodeSMPTE
            self.startTimestampMillis = startTimestampMillis
            self.technicalCueSegment = technicalCueSegment
            self.type = type
        }
    }

}
