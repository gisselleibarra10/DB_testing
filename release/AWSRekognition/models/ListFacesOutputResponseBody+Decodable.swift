// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFacesOutputResponseBody: Swift.Equatable {
    let faces: [RekognitionClientTypes.Face]?
    let nextToken: Swift.String?
    let faceModelVersion: Swift.String?
}

extension ListFacesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case faceModelVersion = "FaceModelVersion"
        case faces = "Faces"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let facesContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.Face?].self, forKey: .faces)
        var facesDecoded0:[RekognitionClientTypes.Face]? = nil
        if let facesContainer = facesContainer {
            facesDecoded0 = [RekognitionClientTypes.Face]()
            for structure0 in facesContainer {
                if let structure0 = structure0 {
                    facesDecoded0?.append(structure0)
                }
            }
        }
        faces = facesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let faceModelVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .faceModelVersion)
        faceModelVersion = faceModelVersionDecoded
    }
}
