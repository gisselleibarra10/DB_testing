// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectFacesOutputResponseBody: Swift.Equatable {
    let faceDetails: [RekognitionClientTypes.FaceDetail]?
    let orientationCorrection: RekognitionClientTypes.OrientationCorrection?
}

extension DetectFacesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case faceDetails = "FaceDetails"
        case orientationCorrection = "OrientationCorrection"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let faceDetailsContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.FaceDetail?].self, forKey: .faceDetails)
        var faceDetailsDecoded0:[RekognitionClientTypes.FaceDetail]? = nil
        if let faceDetailsContainer = faceDetailsContainer {
            faceDetailsDecoded0 = [RekognitionClientTypes.FaceDetail]()
            for structure0 in faceDetailsContainer {
                if let structure0 = structure0 {
                    faceDetailsDecoded0?.append(structure0)
                }
            }
        }
        faceDetails = faceDetailsDecoded0
        let orientationCorrectionDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.OrientationCorrection.self, forKey: .orientationCorrection)
        orientationCorrection = orientationCorrectionDecoded
    }
}
