// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProjectsInputBody: Swift.Equatable {
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let projectNames: [Swift.String]?
}

extension DescribeProjectsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case projectNames = "ProjectNames"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let projectNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .projectNames)
        var projectNamesDecoded0:[Swift.String]? = nil
        if let projectNamesContainer = projectNamesContainer {
            projectNamesDecoded0 = [Swift.String]()
            for string0 in projectNamesContainer {
                if let string0 = string0 {
                    projectNamesDecoded0?.append(string0)
                }
            }
        }
        projectNames = projectNamesDecoded0
    }
}
