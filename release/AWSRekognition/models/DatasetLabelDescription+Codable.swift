// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RekognitionClientTypes.DatasetLabelDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case labelName = "LabelName"
        case labelStats = "LabelStats"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let labelName = self.labelName {
            try encodeContainer.encode(labelName, forKey: .labelName)
        }
        if let labelStats = self.labelStats {
            try encodeContainer.encode(labelStats, forKey: .labelStats)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .labelName)
        labelName = labelNameDecoded
        let labelStatsDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.DatasetLabelStats.self, forKey: .labelStats)
        labelStats = labelStatsDecoded
    }
}
