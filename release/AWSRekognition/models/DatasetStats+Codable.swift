// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RekognitionClientTypes.DatasetStats: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errorEntries = "ErrorEntries"
        case labeledEntries = "LabeledEntries"
        case totalEntries = "TotalEntries"
        case totalLabels = "TotalLabels"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errorEntries = self.errorEntries {
            try encodeContainer.encode(errorEntries, forKey: .errorEntries)
        }
        if let labeledEntries = self.labeledEntries {
            try encodeContainer.encode(labeledEntries, forKey: .labeledEntries)
        }
        if let totalEntries = self.totalEntries {
            try encodeContainer.encode(totalEntries, forKey: .totalEntries)
        }
        if let totalLabels = self.totalLabels {
            try encodeContainer.encode(totalLabels, forKey: .totalLabels)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labeledEntriesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .labeledEntries)
        labeledEntries = labeledEntriesDecoded
        let totalEntriesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalEntries)
        totalEntries = totalEntriesDecoded
        let totalLabelsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalLabels)
        totalLabels = totalLabelsDecoded
        let errorEntriesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .errorEntries)
        errorEntries = errorEntriesDecoded
    }
}
