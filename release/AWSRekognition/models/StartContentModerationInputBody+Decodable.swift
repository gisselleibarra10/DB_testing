// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartContentModerationInputBody: Swift.Equatable {
    let video: RekognitionClientTypes.Video?
    let minConfidence: Swift.Float?
    let clientRequestToken: Swift.String?
    let notificationChannel: RekognitionClientTypes.NotificationChannel?
    let jobTag: Swift.String?
}

extension StartContentModerationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case jobTag = "JobTag"
        case minConfidence = "MinConfidence"
        case notificationChannel = "NotificationChannel"
        case video = "Video"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let videoDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.Video.self, forKey: .video)
        video = videoDecoded
        let minConfidenceDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .minConfidence)
        minConfidence = minConfidenceDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let notificationChannelDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.NotificationChannel.self, forKey: .notificationChannel)
        notificationChannel = notificationChannelDecoded
        let jobTagDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobTag)
        jobTag = jobTagDecoded
    }
}
