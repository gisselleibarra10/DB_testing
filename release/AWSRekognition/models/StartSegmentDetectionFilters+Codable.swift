// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RekognitionClientTypes.StartSegmentDetectionFilters: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case shotFilter = "ShotFilter"
        case technicalCueFilter = "TechnicalCueFilter"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let shotFilter = self.shotFilter {
            try encodeContainer.encode(shotFilter, forKey: .shotFilter)
        }
        if let technicalCueFilter = self.technicalCueFilter {
            try encodeContainer.encode(technicalCueFilter, forKey: .technicalCueFilter)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let technicalCueFilterDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.StartTechnicalCueDetectionFilter.self, forKey: .technicalCueFilter)
        technicalCueFilter = technicalCueFilterDecoded
        let shotFilterDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.StartShotDetectionFilter.self, forKey: .shotFilter)
        shotFilter = shotFilterDecoded
    }
}
