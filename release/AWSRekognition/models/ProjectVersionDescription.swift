// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RekognitionClientTypes {
    /// A description of a version of an Amazon Rekognition Custom Labels model.
    public struct ProjectVersionDescription: Swift.Equatable {
        /// The duration, in seconds, that you were billed for a successful training of the model version. This value is only returned if the model version has been successfully trained.
        public var billableTrainingTimeInSeconds: Swift.Int?
        /// The Unix datetime for the date and time that training started.
        public var creationTimestamp: ClientRuntime.Date?
        /// The training results. EvaluationResult is only returned if training is successful.
        public var evaluationResult: RekognitionClientTypes.EvaluationResult?
        /// The identifer for the AWS Key Management Service key (AWS KMS key) that was used to encrypt the model during training.
        public var kmsKeyId: Swift.String?
        /// The location of the summary manifest. The summary manifest provides aggregate data validation results for the training and test datasets.
        public var manifestSummary: RekognitionClientTypes.GroundTruthManifest?
        /// The maximum number of inference units Amazon Rekognition Custom Labels uses to auto-scale the model. For more information, see [StartProjectVersion].
        public var maxInferenceUnits: Swift.Int?
        /// The minimum number of inference units used by the model. For more information, see [StartProjectVersion].
        public var minInferenceUnits: Swift.Int?
        /// The location where training results are saved.
        public var outputConfig: RekognitionClientTypes.OutputConfig?
        /// The Amazon Resource Name (ARN) of the model version.
        public var projectVersionArn: Swift.String?
        /// If the model version was copied from a different project, SourceProjectVersionArn contains the ARN of the source model version.
        public var sourceProjectVersionArn: Swift.String?
        /// The current status of the model version.
        public var status: RekognitionClientTypes.ProjectVersionStatus?
        /// A descriptive message for an error or warning that occurred.
        public var statusMessage: Swift.String?
        /// Contains information about the testing results.
        public var testingDataResult: RekognitionClientTypes.TestingDataResult?
        /// Contains information about the training results.
        public var trainingDataResult: RekognitionClientTypes.TrainingDataResult?
        /// The Unix date and time that training of the model ended.
        public var trainingEndTimestamp: ClientRuntime.Date?

        public init (
            billableTrainingTimeInSeconds: Swift.Int? = nil,
            creationTimestamp: ClientRuntime.Date? = nil,
            evaluationResult: RekognitionClientTypes.EvaluationResult? = nil,
            kmsKeyId: Swift.String? = nil,
            manifestSummary: RekognitionClientTypes.GroundTruthManifest? = nil,
            maxInferenceUnits: Swift.Int? = nil,
            minInferenceUnits: Swift.Int? = nil,
            outputConfig: RekognitionClientTypes.OutputConfig? = nil,
            projectVersionArn: Swift.String? = nil,
            sourceProjectVersionArn: Swift.String? = nil,
            status: RekognitionClientTypes.ProjectVersionStatus? = nil,
            statusMessage: Swift.String? = nil,
            testingDataResult: RekognitionClientTypes.TestingDataResult? = nil,
            trainingDataResult: RekognitionClientTypes.TrainingDataResult? = nil,
            trainingEndTimestamp: ClientRuntime.Date? = nil
        )
        {
            self.billableTrainingTimeInSeconds = billableTrainingTimeInSeconds
            self.creationTimestamp = creationTimestamp
            self.evaluationResult = evaluationResult
            self.kmsKeyId = kmsKeyId
            self.manifestSummary = manifestSummary
            self.maxInferenceUnits = maxInferenceUnits
            self.minInferenceUnits = minInferenceUnits
            self.outputConfig = outputConfig
            self.projectVersionArn = projectVersionArn
            self.sourceProjectVersionArn = sourceProjectVersionArn
            self.status = status
            self.statusMessage = statusMessage
            self.testingDataResult = testingDataResult
            self.trainingDataResult = trainingDataResult
            self.trainingEndTimestamp = trainingEndTimestamp
        }
    }

}
