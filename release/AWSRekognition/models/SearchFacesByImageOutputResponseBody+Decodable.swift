// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchFacesByImageOutputResponseBody: Swift.Equatable {
    let searchedFaceBoundingBox: RekognitionClientTypes.BoundingBox?
    let searchedFaceConfidence: Swift.Float?
    let faceMatches: [RekognitionClientTypes.FaceMatch]?
    let faceModelVersion: Swift.String?
}

extension SearchFacesByImageOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case faceMatches = "FaceMatches"
        case faceModelVersion = "FaceModelVersion"
        case searchedFaceBoundingBox = "SearchedFaceBoundingBox"
        case searchedFaceConfidence = "SearchedFaceConfidence"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let searchedFaceBoundingBoxDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.BoundingBox.self, forKey: .searchedFaceBoundingBox)
        searchedFaceBoundingBox = searchedFaceBoundingBoxDecoded
        let searchedFaceConfidenceDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .searchedFaceConfidence)
        searchedFaceConfidence = searchedFaceConfidenceDecoded
        let faceMatchesContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.FaceMatch?].self, forKey: .faceMatches)
        var faceMatchesDecoded0:[RekognitionClientTypes.FaceMatch]? = nil
        if let faceMatchesContainer = faceMatchesContainer {
            faceMatchesDecoded0 = [RekognitionClientTypes.FaceMatch]()
            for structure0 in faceMatchesContainer {
                if let structure0 = structure0 {
                    faceMatchesDecoded0?.append(structure0)
                }
            }
        }
        faceMatches = faceMatchesDecoded0
        let faceModelVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .faceModelVersion)
        faceModelVersion = faceModelVersionDecoded
    }
}
