// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RekognitionClientTypes.ConnectedHomeSettingsForUpdate: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case labels = "Labels"
        case minConfidence = "MinConfidence"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let labels = labels {
            var labelsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .labels)
            for connectedhomelabels0 in labels {
                try labelsContainer.encode(connectedhomelabels0)
            }
        }
        if let minConfidence = self.minConfidence {
            try encodeContainer.encode(minConfidence, forKey: .minConfidence)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .labels)
        var labelsDecoded0:[Swift.String]? = nil
        if let labelsContainer = labelsContainer {
            labelsDecoded0 = [Swift.String]()
            for string0 in labelsContainer {
                if let string0 = string0 {
                    labelsDecoded0?.append(string0)
                }
            }
        }
        labels = labelsDecoded0
        let minConfidenceDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .minConfidence)
        minConfidence = minConfidenceDecoded
    }
}
