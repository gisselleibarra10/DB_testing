// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDatasetLabelsOutputResponseBody: Swift.Equatable {
    let datasetLabelDescriptions: [RekognitionClientTypes.DatasetLabelDescription]?
    let nextToken: Swift.String?
}

extension ListDatasetLabelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case datasetLabelDescriptions = "DatasetLabelDescriptions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetLabelDescriptionsContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.DatasetLabelDescription?].self, forKey: .datasetLabelDescriptions)
        var datasetLabelDescriptionsDecoded0:[RekognitionClientTypes.DatasetLabelDescription]? = nil
        if let datasetLabelDescriptionsContainer = datasetLabelDescriptionsContainer {
            datasetLabelDescriptionsDecoded0 = [RekognitionClientTypes.DatasetLabelDescription]()
            for structure0 in datasetLabelDescriptionsContainer {
                if let structure0 = structure0 {
                    datasetLabelDescriptionsDecoded0?.append(structure0)
                }
            }
        }
        datasetLabelDescriptions = datasetLabelDescriptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
