// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RecognizeCelebritiesOutputResponseBody: Swift.Equatable {
    let celebrityFaces: [RekognitionClientTypes.Celebrity]?
    let unrecognizedFaces: [RekognitionClientTypes.ComparedFace]?
    let orientationCorrection: RekognitionClientTypes.OrientationCorrection?
}

extension RecognizeCelebritiesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case celebrityFaces = "CelebrityFaces"
        case orientationCorrection = "OrientationCorrection"
        case unrecognizedFaces = "UnrecognizedFaces"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let celebrityFacesContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.Celebrity?].self, forKey: .celebrityFaces)
        var celebrityFacesDecoded0:[RekognitionClientTypes.Celebrity]? = nil
        if let celebrityFacesContainer = celebrityFacesContainer {
            celebrityFacesDecoded0 = [RekognitionClientTypes.Celebrity]()
            for structure0 in celebrityFacesContainer {
                if let structure0 = structure0 {
                    celebrityFacesDecoded0?.append(structure0)
                }
            }
        }
        celebrityFaces = celebrityFacesDecoded0
        let unrecognizedFacesContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.ComparedFace?].self, forKey: .unrecognizedFaces)
        var unrecognizedFacesDecoded0:[RekognitionClientTypes.ComparedFace]? = nil
        if let unrecognizedFacesContainer = unrecognizedFacesContainer {
            unrecognizedFacesDecoded0 = [RekognitionClientTypes.ComparedFace]()
            for structure0 in unrecognizedFacesContainer {
                if let structure0 = structure0 {
                    unrecognizedFacesDecoded0?.append(structure0)
                }
            }
        }
        unrecognizedFaces = unrecognizedFacesDecoded0
        let orientationCorrectionDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.OrientationCorrection.self, forKey: .orientationCorrection)
        orientationCorrection = orientationCorrectionDecoded
    }
}
