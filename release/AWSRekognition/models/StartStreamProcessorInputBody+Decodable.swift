// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartStreamProcessorInputBody: Swift.Equatable {
    let name: Swift.String?
    let startSelector: RekognitionClientTypes.StreamProcessingStartSelector?
    let stopSelector: RekognitionClientTypes.StreamProcessingStopSelector?
}

extension StartStreamProcessorInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name = "Name"
        case startSelector = "StartSelector"
        case stopSelector = "StopSelector"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let startSelectorDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.StreamProcessingStartSelector.self, forKey: .startSelector)
        startSelector = startSelectorDecoded
        let stopSelectorDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.StreamProcessingStopSelector.self, forKey: .stopSelector)
        stopSelector = stopSelectorDecoded
    }
}
