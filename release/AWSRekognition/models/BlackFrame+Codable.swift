// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RekognitionClientTypes.BlackFrame: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxPixelThreshold = "MaxPixelThreshold"
        case minCoveragePercentage = "MinCoveragePercentage"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxPixelThreshold = self.maxPixelThreshold {
            try encodeContainer.encode(maxPixelThreshold, forKey: .maxPixelThreshold)
        }
        if let minCoveragePercentage = self.minCoveragePercentage {
            try encodeContainer.encode(minCoveragePercentage, forKey: .minCoveragePercentage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maxPixelThresholdDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .maxPixelThreshold)
        maxPixelThreshold = maxPixelThresholdDecoded
        let minCoveragePercentageDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .minCoveragePercentage)
        minCoveragePercentage = minCoveragePercentageDecoded
    }
}
