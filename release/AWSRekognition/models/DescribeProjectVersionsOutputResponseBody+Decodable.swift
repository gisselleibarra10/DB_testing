// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProjectVersionsOutputResponseBody: Swift.Equatable {
    let projectVersionDescriptions: [RekognitionClientTypes.ProjectVersionDescription]?
    let nextToken: Swift.String?
}

extension DescribeProjectVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case projectVersionDescriptions = "ProjectVersionDescriptions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectVersionDescriptionsContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.ProjectVersionDescription?].self, forKey: .projectVersionDescriptions)
        var projectVersionDescriptionsDecoded0:[RekognitionClientTypes.ProjectVersionDescription]? = nil
        if let projectVersionDescriptionsContainer = projectVersionDescriptionsContainer {
            projectVersionDescriptionsDecoded0 = [RekognitionClientTypes.ProjectVersionDescription]()
            for structure0 in projectVersionDescriptionsContainer {
                if let structure0 = structure0 {
                    projectVersionDescriptionsDecoded0?.append(structure0)
                }
            }
        }
        projectVersionDescriptions = projectVersionDescriptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
