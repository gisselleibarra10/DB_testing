// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartProjectVersionInputBody: Swift.Equatable {
    let projectVersionArn: Swift.String?
    let minInferenceUnits: Swift.Int?
    let maxInferenceUnits: Swift.Int?
}

extension StartProjectVersionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxInferenceUnits = "MaxInferenceUnits"
        case minInferenceUnits = "MinInferenceUnits"
        case projectVersionArn = "ProjectVersionArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectVersionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectVersionArn)
        projectVersionArn = projectVersionArnDecoded
        let minInferenceUnitsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .minInferenceUnits)
        minInferenceUnits = minInferenceUnitsDecoded
        let maxInferenceUnitsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxInferenceUnits)
        maxInferenceUnits = maxInferenceUnitsDecoded
    }
}
