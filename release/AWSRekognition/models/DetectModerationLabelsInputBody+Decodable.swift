// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectModerationLabelsInputBody: Swift.Equatable {
    let image: RekognitionClientTypes.Image?
    let minConfidence: Swift.Float?
    let humanLoopConfig: RekognitionClientTypes.HumanLoopConfig?
}

extension DetectModerationLabelsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case humanLoopConfig = "HumanLoopConfig"
        case image = "Image"
        case minConfidence = "MinConfidence"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.Image.self, forKey: .image)
        image = imageDecoded
        let minConfidenceDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .minConfidence)
        minConfidence = minConfidenceDecoded
        let humanLoopConfigDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.HumanLoopConfig.self, forKey: .humanLoopConfig)
        humanLoopConfig = humanLoopConfigDecoded
    }
}
