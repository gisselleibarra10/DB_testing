// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RekognitionClientTypes.KinesisVideoStreamStartSelector: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fragmentNumber = "FragmentNumber"
        case producerTimestamp = "ProducerTimestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fragmentNumber = self.fragmentNumber {
            try encodeContainer.encode(fragmentNumber, forKey: .fragmentNumber)
        }
        if let producerTimestamp = self.producerTimestamp {
            try encodeContainer.encode(producerTimestamp, forKey: .producerTimestamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let producerTimestampDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .producerTimestamp)
        producerTimestamp = producerTimestampDecoded
        let fragmentNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fragmentNumber)
        fragmentNumber = fragmentNumberDecoded
    }
}
