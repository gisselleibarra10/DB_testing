// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchFacesInputBody: Swift.Equatable {
    let collectionId: Swift.String?
    let faceId: Swift.String?
    let maxFaces: Swift.Int?
    let faceMatchThreshold: Swift.Float?
}

extension SearchFacesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case collectionId = "CollectionId"
        case faceId = "FaceId"
        case faceMatchThreshold = "FaceMatchThreshold"
        case maxFaces = "MaxFaces"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let collectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .collectionId)
        collectionId = collectionIdDecoded
        let faceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .faceId)
        faceId = faceIdDecoded
        let maxFacesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxFaces)
        maxFaces = maxFacesDecoded
        let faceMatchThresholdDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .faceMatchThreshold)
        faceMatchThreshold = faceMatchThresholdDecoded
    }
}
