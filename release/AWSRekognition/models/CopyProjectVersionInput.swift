// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CopyProjectVersionInput: Swift.Equatable {
    /// The ARN of the project in the trusted AWS account that you want to copy the model version to.
    /// This member is required.
    public var destinationProjectArn: Swift.String?
    /// The identifier for your AWS Key Management Service key (AWS KMS key). You can supply the Amazon Resource Name (ARN) of your KMS key, the ID of your KMS key, an alias for your KMS key, or an alias ARN. The key is used to encrypt training results and manifest files written to the output Amazon S3 bucket (OutputConfig). If you choose to use your own KMS key, you need the following permissions on the KMS key.
    ///
    /// * kms:CreateGrant
    ///
    /// * kms:DescribeKey
    ///
    /// * kms:GenerateDataKey
    ///
    /// * kms:Decrypt
    ///
    ///
    /// If you don't specify a value for KmsKeyId, images copied into the service are encrypted using a key that AWS owns and manages.
    public var kmsKeyId: Swift.String?
    /// The S3 bucket and folder location where the training output for the source model version is placed.
    /// This member is required.
    public var outputConfig: RekognitionClientTypes.OutputConfig?
    /// The ARN of the source project in the trusting AWS account.
    /// This member is required.
    public var sourceProjectArn: Swift.String?
    /// The ARN of the model version in the source project that you want to copy to a destination project.
    /// This member is required.
    public var sourceProjectVersionArn: Swift.String?
    /// The key-value tags to assign to the model version.
    public var tags: [Swift.String:Swift.String]?
    /// A name for the version of the model that's copied to the destination project.
    /// This member is required.
    public var versionName: Swift.String?

    public init (
        destinationProjectArn: Swift.String? = nil,
        kmsKeyId: Swift.String? = nil,
        outputConfig: RekognitionClientTypes.OutputConfig? = nil,
        sourceProjectArn: Swift.String? = nil,
        sourceProjectVersionArn: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        versionName: Swift.String? = nil
    )
    {
        self.destinationProjectArn = destinationProjectArn
        self.kmsKeyId = kmsKeyId
        self.outputConfig = outputConfig
        self.sourceProjectArn = sourceProjectArn
        self.sourceProjectVersionArn = sourceProjectVersionArn
        self.tags = tags
        self.versionName = versionName
    }
}
