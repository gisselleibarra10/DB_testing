// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RekognitionClientTypes {
    public enum TechnicalCueType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case blackFrames
        case colorBars
        case content
        case endCredits
        case openingCredits
        case slate
        case studioLogo
        case sdkUnknown(Swift.String)

        public static var allCases: [TechnicalCueType] {
            return [
                .blackFrames,
                .colorBars,
                .content,
                .endCredits,
                .openingCredits,
                .slate,
                .studioLogo,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .blackFrames: return "BlackFrames"
            case .colorBars: return "ColorBars"
            case .content: return "Content"
            case .endCredits: return "EndCredits"
            case .openingCredits: return "OpeningCredits"
            case .slate: return "Slate"
            case .studioLogo: return "StudioLogo"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = TechnicalCueType(rawValue: rawValue) ?? TechnicalCueType.sdkUnknown(rawValue)
        }
    }
}
