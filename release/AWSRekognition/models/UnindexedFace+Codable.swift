// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RekognitionClientTypes.UnindexedFace: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case faceDetail = "FaceDetail"
        case reasons = "Reasons"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let faceDetail = self.faceDetail {
            try encodeContainer.encode(faceDetail, forKey: .faceDetail)
        }
        if let reasons = reasons {
            var reasonsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .reasons)
            for reasons0 in reasons {
                try reasonsContainer.encode(reasons0.rawValue)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reasonsContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.Reason?].self, forKey: .reasons)
        var reasonsDecoded0:[RekognitionClientTypes.Reason]? = nil
        if let reasonsContainer = reasonsContainer {
            reasonsDecoded0 = [RekognitionClientTypes.Reason]()
            for string0 in reasonsContainer {
                if let string0 = string0 {
                    reasonsDecoded0?.append(string0)
                }
            }
        }
        reasons = reasonsDecoded0
        let faceDetailDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.FaceDetail.self, forKey: .faceDetail)
        faceDetail = faceDetailDecoded
    }
}
