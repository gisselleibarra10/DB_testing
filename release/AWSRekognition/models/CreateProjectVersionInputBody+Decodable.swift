// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateProjectVersionInputBody: Swift.Equatable {
    let projectArn: Swift.String?
    let versionName: Swift.String?
    let outputConfig: RekognitionClientTypes.OutputConfig?
    let trainingData: RekognitionClientTypes.TrainingData?
    let testingData: RekognitionClientTypes.TestingData?
    let tags: [Swift.String:Swift.String]?
    let kmsKeyId: Swift.String?
}

extension CreateProjectVersionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case kmsKeyId = "KmsKeyId"
        case outputConfig = "OutputConfig"
        case projectArn = "ProjectArn"
        case tags = "Tags"
        case testingData = "TestingData"
        case trainingData = "TrainingData"
        case versionName = "VersionName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectArn)
        projectArn = projectArnDecoded
        let versionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .versionName)
        versionName = versionNameDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.OutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let trainingDataDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.TrainingData.self, forKey: .trainingData)
        trainingData = trainingDataDecoded
        let testingDataDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.TestingData.self, forKey: .testingData)
        testingData = testingDataDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
        let kmsKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyId)
        kmsKeyId = kmsKeyIdDecoded
    }
}
