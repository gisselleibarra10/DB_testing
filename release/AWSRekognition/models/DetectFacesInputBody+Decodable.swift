// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectFacesInputBody: Swift.Equatable {
    let image: RekognitionClientTypes.Image?
    let attributes: [RekognitionClientTypes.Attribute]?
}

extension DetectFacesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributes = "Attributes"
        case image = "Image"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.Image.self, forKey: .image)
        image = imageDecoded
        let attributesContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.Attribute?].self, forKey: .attributes)
        var attributesDecoded0:[RekognitionClientTypes.Attribute]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [RekognitionClientTypes.Attribute]()
            for string0 in attributesContainer {
                if let string0 = string0 {
                    attributesDecoded0?.append(string0)
                }
            }
        }
        attributes = attributesDecoded0
    }
}
