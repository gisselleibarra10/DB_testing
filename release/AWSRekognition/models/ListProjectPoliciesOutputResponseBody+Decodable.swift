// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProjectPoliciesOutputResponseBody: Swift.Equatable {
    let projectPolicies: [RekognitionClientTypes.ProjectPolicy]?
    let nextToken: Swift.String?
}

extension ListProjectPoliciesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case projectPolicies = "ProjectPolicies"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectPoliciesContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.ProjectPolicy?].self, forKey: .projectPolicies)
        var projectPoliciesDecoded0:[RekognitionClientTypes.ProjectPolicy]? = nil
        if let projectPoliciesContainer = projectPoliciesContainer {
            projectPoliciesDecoded0 = [RekognitionClientTypes.ProjectPolicy]()
            for structure0 in projectPoliciesContainer {
                if let structure0 = structure0 {
                    projectPoliciesDecoded0?.append(structure0)
                }
            }
        }
        projectPolicies = projectPoliciesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
