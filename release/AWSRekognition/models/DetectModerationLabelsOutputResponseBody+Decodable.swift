// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectModerationLabelsOutputResponseBody: Swift.Equatable {
    let moderationLabels: [RekognitionClientTypes.ModerationLabel]?
    let moderationModelVersion: Swift.String?
    let humanLoopActivationOutput: RekognitionClientTypes.HumanLoopActivationOutput?
}

extension DetectModerationLabelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case humanLoopActivationOutput = "HumanLoopActivationOutput"
        case moderationLabels = "ModerationLabels"
        case moderationModelVersion = "ModerationModelVersion"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let moderationLabelsContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.ModerationLabel?].self, forKey: .moderationLabels)
        var moderationLabelsDecoded0:[RekognitionClientTypes.ModerationLabel]? = nil
        if let moderationLabelsContainer = moderationLabelsContainer {
            moderationLabelsDecoded0 = [RekognitionClientTypes.ModerationLabel]()
            for structure0 in moderationLabelsContainer {
                if let structure0 = structure0 {
                    moderationLabelsDecoded0?.append(structure0)
                }
            }
        }
        moderationLabels = moderationLabelsDecoded0
        let moderationModelVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .moderationModelVersion)
        moderationModelVersion = moderationModelVersionDecoded
        let humanLoopActivationOutputDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.HumanLoopActivationOutput.self, forKey: .humanLoopActivationOutput)
        humanLoopActivationOutput = humanLoopActivationOutputDecoded
    }
}
