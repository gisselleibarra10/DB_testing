// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteFacesInputBody: Swift.Equatable {
    let collectionId: Swift.String?
    let faceIds: [Swift.String]?
}

extension DeleteFacesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case collectionId = "CollectionId"
        case faceIds = "FaceIds"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let collectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .collectionId)
        collectionId = collectionIdDecoded
        let faceIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .faceIds)
        var faceIdsDecoded0:[Swift.String]? = nil
        if let faceIdsContainer = faceIdsContainer {
            faceIdsDecoded0 = [Swift.String]()
            for string0 in faceIdsContainer {
                if let string0 = string0 {
                    faceIdsDecoded0?.append(string0)
                }
            }
        }
        faceIds = faceIdsDecoded0
    }
}
