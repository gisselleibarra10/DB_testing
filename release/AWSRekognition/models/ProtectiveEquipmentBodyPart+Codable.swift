// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RekognitionClientTypes.ProtectiveEquipmentBodyPart: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case confidence = "Confidence"
        case equipmentDetections = "EquipmentDetections"
        case name = "Name"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let confidence = self.confidence {
            try encodeContainer.encode(confidence, forKey: .confidence)
        }
        if let equipmentDetections = equipmentDetections {
            var equipmentDetectionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .equipmentDetections)
            for equipmentdetections0 in equipmentDetections {
                try equipmentDetectionsContainer.encode(equipmentdetections0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name.rawValue, forKey: .name)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(RekognitionClientTypes.BodyPart.self, forKey: .name)
        name = nameDecoded
        let confidenceDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .confidence)
        confidence = confidenceDecoded
        let equipmentDetectionsContainer = try containerValues.decodeIfPresent([RekognitionClientTypes.EquipmentDetection?].self, forKey: .equipmentDetections)
        var equipmentDetectionsDecoded0:[RekognitionClientTypes.EquipmentDetection]? = nil
        if let equipmentDetectionsContainer = equipmentDetectionsContainer {
            equipmentDetectionsDecoded0 = [RekognitionClientTypes.EquipmentDetection]()
            for structure0 in equipmentDetectionsContainer {
                if let structure0 = structure0 {
                    equipmentDetectionsDecoded0?.append(structure0)
                }
            }
        }
        equipmentDetections = equipmentDetectionsDecoded0
    }
}
