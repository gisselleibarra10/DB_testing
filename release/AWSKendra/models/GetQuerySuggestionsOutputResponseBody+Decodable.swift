// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetQuerySuggestionsOutputResponseBody: Swift.Equatable {
    let querySuggestionsId: Swift.String?
    let suggestions: [KendraClientTypes.Suggestion]?
}

extension GetQuerySuggestionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case querySuggestionsId = "QuerySuggestionsId"
        case suggestions = "Suggestions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let querySuggestionsIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .querySuggestionsId)
        querySuggestionsId = querySuggestionsIdDecoded
        let suggestionsContainer = try containerValues.decodeIfPresent([KendraClientTypes.Suggestion?].self, forKey: .suggestions)
        var suggestionsDecoded0:[KendraClientTypes.Suggestion]? = nil
        if let suggestionsContainer = suggestionsContainer {
            suggestionsDecoded0 = [KendraClientTypes.Suggestion]()
            for structure0 in suggestionsContainer {
                if let structure0 = structure0 {
                    suggestionsDecoded0?.append(structure0)
                }
            }
        }
        suggestions = suggestionsDecoded0
    }
}
