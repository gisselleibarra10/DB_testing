// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DisassociatePersonasFromEntitiesInputBody: Swift.Equatable {
    let id: Swift.String?
    let indexId: Swift.String?
    let entityIds: [Swift.String]?
}

extension DisassociatePersonasFromEntitiesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entityIds = "EntityIds"
        case id = "Id"
        case indexId = "IndexId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let indexIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let entityIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .entityIds)
        var entityIdsDecoded0:[Swift.String]? = nil
        if let entityIdsContainer = entityIdsContainer {
            entityIdsDecoded0 = [Swift.String]()
            for string0 in entityIdsContainer {
                if let string0 = string0 {
                    entityIdsDecoded0?.append(string0)
                }
            }
        }
        entityIds = entityIdsDecoded0
    }
}
