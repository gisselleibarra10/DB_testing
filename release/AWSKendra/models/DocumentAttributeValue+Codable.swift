// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.DocumentAttributeValue: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dateValue = "DateValue"
        case longValue = "LongValue"
        case stringListValue = "StringListValue"
        case stringValue = "StringValue"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dateValue = self.dateValue {
            try encodeContainer.encode(dateValue.timeIntervalSince1970, forKey: .dateValue)
        }
        if let longValue = self.longValue {
            try encodeContainer.encode(longValue, forKey: .longValue)
        }
        if let stringListValue = stringListValue {
            var stringListValueContainer = encodeContainer.nestedUnkeyedContainer(forKey: .stringListValue)
            for documentattributestringlistvalue0 in stringListValue {
                try stringListValueContainer.encode(documentattributestringlistvalue0)
            }
        }
        if let stringValue = self.stringValue {
            try encodeContainer.encode(stringValue, forKey: .stringValue)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stringValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stringValue)
        stringValue = stringValueDecoded
        let stringListValueContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .stringListValue)
        var stringListValueDecoded0:[Swift.String]? = nil
        if let stringListValueContainer = stringListValueContainer {
            stringListValueDecoded0 = [Swift.String]()
            for string0 in stringListValueContainer {
                if let string0 = string0 {
                    stringListValueDecoded0?.append(string0)
                }
            }
        }
        stringListValue = stringListValueDecoded0
        let longValueDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .longValue)
        longValue = longValueDecoded
        let dateValueDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .dateValue)
        dateValue = dateValueDecoded
    }
}
