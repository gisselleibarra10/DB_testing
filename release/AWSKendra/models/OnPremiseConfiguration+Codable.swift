// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.OnPremiseConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hostUrl = "HostUrl"
        case organizationName = "OrganizationName"
        case sslCertificateS3Path = "SslCertificateS3Path"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hostUrl = self.hostUrl {
            try encodeContainer.encode(hostUrl, forKey: .hostUrl)
        }
        if let organizationName = self.organizationName {
            try encodeContainer.encode(organizationName, forKey: .organizationName)
        }
        if let sslCertificateS3Path = self.sslCertificateS3Path {
            try encodeContainer.encode(sslCertificateS3Path, forKey: .sslCertificateS3Path)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hostUrl)
        hostUrl = hostUrlDecoded
        let organizationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .organizationName)
        organizationName = organizationNameDecoded
        let sslCertificateS3PathDecoded = try containerValues.decodeIfPresent(KendraClientTypes.S3Path.self, forKey: .sslCertificateS3Path)
        sslCertificateS3Path = sslCertificateS3PathDecoded
    }
}
