// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.ServiceNowConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authenticationType = "AuthenticationType"
        case hostUrl = "HostUrl"
        case knowledgeArticleConfiguration = "KnowledgeArticleConfiguration"
        case secretArn = "SecretArn"
        case serviceCatalogConfiguration = "ServiceCatalogConfiguration"
        case serviceNowBuildVersion = "ServiceNowBuildVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let authenticationType = self.authenticationType {
            try encodeContainer.encode(authenticationType.rawValue, forKey: .authenticationType)
        }
        if let hostUrl = self.hostUrl {
            try encodeContainer.encode(hostUrl, forKey: .hostUrl)
        }
        if let knowledgeArticleConfiguration = self.knowledgeArticleConfiguration {
            try encodeContainer.encode(knowledgeArticleConfiguration, forKey: .knowledgeArticleConfiguration)
        }
        if let secretArn = self.secretArn {
            try encodeContainer.encode(secretArn, forKey: .secretArn)
        }
        if let serviceCatalogConfiguration = self.serviceCatalogConfiguration {
            try encodeContainer.encode(serviceCatalogConfiguration, forKey: .serviceCatalogConfiguration)
        }
        if let serviceNowBuildVersion = self.serviceNowBuildVersion {
            try encodeContainer.encode(serviceNowBuildVersion.rawValue, forKey: .serviceNowBuildVersion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hostUrl)
        hostUrl = hostUrlDecoded
        let secretArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .secretArn)
        secretArn = secretArnDecoded
        let serviceNowBuildVersionDecoded = try containerValues.decodeIfPresent(KendraClientTypes.ServiceNowBuildVersionType.self, forKey: .serviceNowBuildVersion)
        serviceNowBuildVersion = serviceNowBuildVersionDecoded
        let knowledgeArticleConfigurationDecoded = try containerValues.decodeIfPresent(KendraClientTypes.ServiceNowKnowledgeArticleConfiguration.self, forKey: .knowledgeArticleConfiguration)
        knowledgeArticleConfiguration = knowledgeArticleConfigurationDecoded
        let serviceCatalogConfigurationDecoded = try containerValues.decodeIfPresent(KendraClientTypes.ServiceNowServiceCatalogConfiguration.self, forKey: .serviceCatalogConfiguration)
        serviceCatalogConfiguration = serviceCatalogConfigurationDecoded
        let authenticationTypeDecoded = try containerValues.decodeIfPresent(KendraClientTypes.ServiceNowAuthenticationType.self, forKey: .authenticationType)
        authenticationType = authenticationTypeDecoded
    }
}
