// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.Status: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case documentId = "DocumentId"
        case documentStatus = "DocumentStatus"
        case failureCode = "FailureCode"
        case failureReason = "FailureReason"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let documentId = self.documentId {
            try encodeContainer.encode(documentId, forKey: .documentId)
        }
        if let documentStatus = self.documentStatus {
            try encodeContainer.encode(documentStatus.rawValue, forKey: .documentStatus)
        }
        if let failureCode = self.failureCode {
            try encodeContainer.encode(failureCode, forKey: .failureCode)
        }
        if let failureReason = self.failureReason {
            try encodeContainer.encode(failureReason, forKey: .failureReason)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .documentId)
        documentId = documentIdDecoded
        let documentStatusDecoded = try containerValues.decodeIfPresent(KendraClientTypes.DocumentStatus.self, forKey: .documentStatus)
        documentStatus = documentStatusDecoded
        let failureCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureCode)
        failureCode = failureCodeDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
    }
}
