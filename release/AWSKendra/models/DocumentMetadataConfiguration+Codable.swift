// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.DocumentMetadataConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name = "Name"
        case relevance = "Relevance"
        case search = "Search"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let relevance = self.relevance {
            try encodeContainer.encode(relevance, forKey: .relevance)
        }
        if let search = self.search {
            try encodeContainer.encode(search, forKey: .search)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(KendraClientTypes.DocumentAttributeValueType.self, forKey: .type)
        type = typeDecoded
        let relevanceDecoded = try containerValues.decodeIfPresent(KendraClientTypes.Relevance.self, forKey: .relevance)
        relevance = relevanceDecoded
        let searchDecoded = try containerValues.decodeIfPresent(KendraClientTypes.Search.self, forKey: .search)
        search = searchDecoded
    }
}
