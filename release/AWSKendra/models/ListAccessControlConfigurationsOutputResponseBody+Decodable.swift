// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAccessControlConfigurationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let accessControlConfigurations: [KendraClientTypes.AccessControlConfigurationSummary]?
}

extension ListAccessControlConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessControlConfigurations = "AccessControlConfigurations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let accessControlConfigurationsContainer = try containerValues.decodeIfPresent([KendraClientTypes.AccessControlConfigurationSummary?].self, forKey: .accessControlConfigurations)
        var accessControlConfigurationsDecoded0:[KendraClientTypes.AccessControlConfigurationSummary]? = nil
        if let accessControlConfigurationsContainer = accessControlConfigurationsContainer {
            accessControlConfigurationsDecoded0 = [KendraClientTypes.AccessControlConfigurationSummary]()
            for structure0 in accessControlConfigurationsContainer {
                if let structure0 = structure0 {
                    accessControlConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        accessControlConfigurations = accessControlConfigurationsDecoded0
    }
}
