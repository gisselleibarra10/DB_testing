// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListExperiencesOutputResponseBody: Swift.Equatable {
    let summaryItems: [KendraClientTypes.ExperiencesSummary]?
    let nextToken: Swift.String?
}

extension ListExperiencesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case summaryItems = "SummaryItems"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let summaryItemsContainer = try containerValues.decodeIfPresent([KendraClientTypes.ExperiencesSummary?].self, forKey: .summaryItems)
        var summaryItemsDecoded0:[KendraClientTypes.ExperiencesSummary]? = nil
        if let summaryItemsContainer = summaryItemsContainer {
            summaryItemsDecoded0 = [KendraClientTypes.ExperiencesSummary]()
            for structure0 in summaryItemsContainer {
                if let structure0 = structure0 {
                    summaryItemsDecoded0?.append(structure0)
                }
            }
        }
        summaryItems = summaryItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
