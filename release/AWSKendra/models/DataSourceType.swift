// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KendraClientTypes {
    public enum DataSourceType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case alfresco
        case box
        case confluence
        case custom
        case database
        case fsx
        case github
        case googledrive
        case jira
        case onedrive
        case quip
        case s3
        case salesforce
        case servicenow
        case sharepoint
        case slack
        case template
        case webcrawler
        case workdocs
        case sdkUnknown(Swift.String)

        public static var allCases: [DataSourceType] {
            return [
                .alfresco,
                .box,
                .confluence,
                .custom,
                .database,
                .fsx,
                .github,
                .googledrive,
                .jira,
                .onedrive,
                .quip,
                .s3,
                .salesforce,
                .servicenow,
                .sharepoint,
                .slack,
                .template,
                .webcrawler,
                .workdocs,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .alfresco: return "ALFRESCO"
            case .box: return "BOX"
            case .confluence: return "CONFLUENCE"
            case .custom: return "CUSTOM"
            case .database: return "DATABASE"
            case .fsx: return "FSX"
            case .github: return "GITHUB"
            case .googledrive: return "GOOGLEDRIVE"
            case .jira: return "JIRA"
            case .onedrive: return "ONEDRIVE"
            case .quip: return "QUIP"
            case .s3: return "S3"
            case .salesforce: return "SALESFORCE"
            case .servicenow: return "SERVICENOW"
            case .sharepoint: return "SHAREPOINT"
            case .slack: return "SLACK"
            case .template: return "TEMPLATE"
            case .webcrawler: return "WEBCRAWLER"
            case .workdocs: return "WORKDOCS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = DataSourceType(rawValue: rawValue) ?? DataSourceType.sdkUnknown(rawValue)
        }
    }
}
