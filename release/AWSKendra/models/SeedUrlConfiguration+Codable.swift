// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.SeedUrlConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case seedUrls = "SeedUrls"
        case webCrawlerMode = "WebCrawlerMode"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let seedUrls = seedUrls {
            var seedUrlsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .seedUrls)
            for seedurllist0 in seedUrls {
                try seedUrlsContainer.encode(seedurllist0)
            }
        }
        if let webCrawlerMode = self.webCrawlerMode {
            try encodeContainer.encode(webCrawlerMode.rawValue, forKey: .webCrawlerMode)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let seedUrlsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .seedUrls)
        var seedUrlsDecoded0:[Swift.String]? = nil
        if let seedUrlsContainer = seedUrlsContainer {
            seedUrlsDecoded0 = [Swift.String]()
            for string0 in seedUrlsContainer {
                if let string0 = string0 {
                    seedUrlsDecoded0?.append(string0)
                }
            }
        }
        seedUrls = seedUrlsDecoded0
        let webCrawlerModeDecoded = try containerValues.decodeIfPresent(KendraClientTypes.WebCrawlerMode.self, forKey: .webCrawlerMode)
        webCrawlerMode = webCrawlerModeDecoded
    }
}
