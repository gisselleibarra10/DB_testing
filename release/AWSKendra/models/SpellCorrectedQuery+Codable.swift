// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.SpellCorrectedQuery: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case corrections = "Corrections"
        case suggestedQueryText = "SuggestedQueryText"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let corrections = corrections {
            var correctionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .corrections)
            for correctionlist0 in corrections {
                try correctionsContainer.encode(correctionlist0)
            }
        }
        if let suggestedQueryText = self.suggestedQueryText {
            try encodeContainer.encode(suggestedQueryText, forKey: .suggestedQueryText)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let suggestedQueryTextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .suggestedQueryText)
        suggestedQueryText = suggestedQueryTextDecoded
        let correctionsContainer = try containerValues.decodeIfPresent([KendraClientTypes.Correction?].self, forKey: .corrections)
        var correctionsDecoded0:[KendraClientTypes.Correction]? = nil
        if let correctionsContainer = correctionsContainer {
            correctionsDecoded0 = [KendraClientTypes.Correction]()
            for structure0 in correctionsContainer {
                if let structure0 = structure0 {
                    correctionsDecoded0?.append(structure0)
                }
            }
        }
        corrections = correctionsDecoded0
    }
}
