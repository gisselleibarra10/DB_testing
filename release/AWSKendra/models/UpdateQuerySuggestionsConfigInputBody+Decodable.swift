// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateQuerySuggestionsConfigInputBody: Swift.Equatable {
    let indexId: Swift.String?
    let mode: KendraClientTypes.Mode?
    let queryLogLookBackWindowInDays: Swift.Int?
    let includeQueriesWithoutUserInformation: Swift.Bool?
    let minimumNumberOfQueryingUsers: Swift.Int?
    let minimumQueryCount: Swift.Int?
}

extension UpdateQuerySuggestionsConfigInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case includeQueriesWithoutUserInformation = "IncludeQueriesWithoutUserInformation"
        case indexId = "IndexId"
        case minimumNumberOfQueryingUsers = "MinimumNumberOfQueryingUsers"
        case minimumQueryCount = "MinimumQueryCount"
        case mode = "Mode"
        case queryLogLookBackWindowInDays = "QueryLogLookBackWindowInDays"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let modeDecoded = try containerValues.decodeIfPresent(KendraClientTypes.Mode.self, forKey: .mode)
        mode = modeDecoded
        let queryLogLookBackWindowInDaysDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .queryLogLookBackWindowInDays)
        queryLogLookBackWindowInDays = queryLogLookBackWindowInDaysDecoded
        let includeQueriesWithoutUserInformationDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .includeQueriesWithoutUserInformation)
        includeQueriesWithoutUserInformation = includeQueriesWithoutUserInformationDecoded
        let minimumNumberOfQueryingUsersDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .minimumNumberOfQueryingUsers)
        minimumNumberOfQueryingUsers = minimumNumberOfQueryingUsersDecoded
        let minimumQueryCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .minimumQueryCount)
        minimumQueryCount = minimumQueryCountDecoded
    }
}
