// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutPrincipalMappingInputBody: Swift.Equatable {
    let indexId: Swift.String?
    let dataSourceId: Swift.String?
    let groupId: Swift.String?
    let groupMembers: KendraClientTypes.GroupMembers?
    let orderingId: Swift.Int?
    let roleArn: Swift.String?
}

extension PutPrincipalMappingInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSourceId = "DataSourceId"
        case groupId = "GroupId"
        case groupMembers = "GroupMembers"
        case indexId = "IndexId"
        case orderingId = "OrderingId"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let dataSourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataSourceId)
        dataSourceId = dataSourceIdDecoded
        let groupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groupId)
        groupId = groupIdDecoded
        let groupMembersDecoded = try containerValues.decodeIfPresent(KendraClientTypes.GroupMembers.self, forKey: .groupMembers)
        groupMembers = groupMembersDecoded
        let orderingIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .orderingId)
        orderingId = orderingIdDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
