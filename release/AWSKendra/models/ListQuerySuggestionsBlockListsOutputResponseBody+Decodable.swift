// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListQuerySuggestionsBlockListsOutputResponseBody: Swift.Equatable {
    let blockListSummaryItems: [KendraClientTypes.QuerySuggestionsBlockListSummary]?
    let nextToken: Swift.String?
}

extension ListQuerySuggestionsBlockListsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blockListSummaryItems = "BlockListSummaryItems"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blockListSummaryItemsContainer = try containerValues.decodeIfPresent([KendraClientTypes.QuerySuggestionsBlockListSummary?].self, forKey: .blockListSummaryItems)
        var blockListSummaryItemsDecoded0:[KendraClientTypes.QuerySuggestionsBlockListSummary]? = nil
        if let blockListSummaryItemsContainer = blockListSummaryItemsContainer {
            blockListSummaryItemsDecoded0 = [KendraClientTypes.QuerySuggestionsBlockListSummary]()
            for structure0 in blockListSummaryItemsContainer {
                if let structure0 = structure0 {
                    blockListSummaryItemsDecoded0?.append(structure0)
                }
            }
        }
        blockListSummaryItems = blockListSummaryItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
