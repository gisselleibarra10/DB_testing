// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDataSourceSyncJobsOutputResponseBody: Swift.Equatable {
    let history: [KendraClientTypes.DataSourceSyncJob]?
    let nextToken: Swift.String?
}

extension ListDataSourceSyncJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case history = "History"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let historyContainer = try containerValues.decodeIfPresent([KendraClientTypes.DataSourceSyncJob?].self, forKey: .history)
        var historyDecoded0:[KendraClientTypes.DataSourceSyncJob]? = nil
        if let historyContainer = historyContainer {
            historyDecoded0 = [KendraClientTypes.DataSourceSyncJob]()
            for structure0 in historyContainer {
                if let structure0 = structure0 {
                    historyDecoded0?.append(structure0)
                }
            }
        }
        history = historyDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
