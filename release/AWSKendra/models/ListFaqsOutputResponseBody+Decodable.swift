// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFaqsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let faqSummaryItems: [KendraClientTypes.FaqSummary]?
}

extension ListFaqsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case faqSummaryItems = "FaqSummaryItems"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let faqSummaryItemsContainer = try containerValues.decodeIfPresent([KendraClientTypes.FaqSummary?].self, forKey: .faqSummaryItems)
        var faqSummaryItemsDecoded0:[KendraClientTypes.FaqSummary]? = nil
        if let faqSummaryItemsContainer = faqSummaryItemsContainer {
            faqSummaryItemsDecoded0 = [KendraClientTypes.FaqSummary]()
            for structure0 in faqSummaryItemsContainer {
                if let structure0 = structure0 {
                    faqSummaryItemsDecoded0?.append(structure0)
                }
            }
        }
        faqSummaryItems = faqSummaryItemsDecoded0
    }
}
