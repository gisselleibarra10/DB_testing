// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.ConfluencePageToIndexFieldMapping: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSourceFieldName = "DataSourceFieldName"
        case dateFieldFormat = "DateFieldFormat"
        case indexFieldName = "IndexFieldName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataSourceFieldName = self.dataSourceFieldName {
            try encodeContainer.encode(dataSourceFieldName.rawValue, forKey: .dataSourceFieldName)
        }
        if let dateFieldFormat = self.dateFieldFormat {
            try encodeContainer.encode(dateFieldFormat, forKey: .dateFieldFormat)
        }
        if let indexFieldName = self.indexFieldName {
            try encodeContainer.encode(indexFieldName, forKey: .indexFieldName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSourceFieldNameDecoded = try containerValues.decodeIfPresent(KendraClientTypes.ConfluencePageFieldName.self, forKey: .dataSourceFieldName)
        dataSourceFieldName = dataSourceFieldNameDecoded
        let dateFieldFormatDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dateFieldFormat)
        dateFieldFormat = dateFieldFormatDecoded
        let indexFieldNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexFieldName)
        indexFieldName = indexFieldNameDecoded
    }
}
