// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDataSourceInputBody: Swift.Equatable {
    let id: Swift.String?
    let name: Swift.String?
    let indexId: Swift.String?
    let configuration: KendraClientTypes.DataSourceConfiguration?
    let vpcConfiguration: KendraClientTypes.DataSourceVpcConfiguration?
    let description: Swift.String?
    let schedule: Swift.String?
    let roleArn: Swift.String?
    let languageCode: Swift.String?
    let customDocumentEnrichmentConfiguration: KendraClientTypes.CustomDocumentEnrichmentConfiguration?
}

extension UpdateDataSourceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configuration = "Configuration"
        case customDocumentEnrichmentConfiguration = "CustomDocumentEnrichmentConfiguration"
        case description = "Description"
        case id = "Id"
        case indexId = "IndexId"
        case languageCode = "LanguageCode"
        case name = "Name"
        case roleArn = "RoleArn"
        case schedule = "Schedule"
        case vpcConfiguration = "VpcConfiguration"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let indexIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let configurationDecoded = try containerValues.decodeIfPresent(KendraClientTypes.DataSourceConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
        let vpcConfigurationDecoded = try containerValues.decodeIfPresent(KendraClientTypes.DataSourceVpcConfiguration.self, forKey: .vpcConfiguration)
        vpcConfiguration = vpcConfigurationDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let scheduleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schedule)
        schedule = scheduleDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let languageCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .languageCode)
        languageCode = languageCodeDecoded
        let customDocumentEnrichmentConfigurationDecoded = try containerValues.decodeIfPresent(KendraClientTypes.CustomDocumentEnrichmentConfiguration.self, forKey: .customDocumentEnrichmentConfiguration)
        customDocumentEnrichmentConfiguration = customDocumentEnrichmentConfigurationDecoded
    }
}
