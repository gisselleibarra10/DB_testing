// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KendraClientTypes {
    public enum MetricType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case aggQueryDocMetrics
        case docsByClickCount
        case queriesByCount
        case queriesByZeroClickRate
        case queriesByZeroResultRate
        case trendQueryDocMetrics
        case sdkUnknown(Swift.String)

        public static var allCases: [MetricType] {
            return [
                .aggQueryDocMetrics,
                .docsByClickCount,
                .queriesByCount,
                .queriesByZeroClickRate,
                .queriesByZeroResultRate,
                .trendQueryDocMetrics,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .aggQueryDocMetrics: return "AGG_QUERY_DOC_METRICS"
            case .docsByClickCount: return "DOCS_BY_CLICK_COUNT"
            case .queriesByCount: return "QUERIES_BY_COUNT"
            case .queriesByZeroClickRate: return "QUERIES_BY_ZERO_CLICK_RATE"
            case .queriesByZeroResultRate: return "QUERIES_BY_ZERO_RESULT_RATE"
            case .trendQueryDocMetrics: return "TREND_QUERY_DOC_METRICS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = MetricType(rawValue: rawValue) ?? MetricType.sdkUnknown(rawValue)
        }
    }
}
