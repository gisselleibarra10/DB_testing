// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGroupsOlderThanOrderingIdInputBody: Swift.Equatable {
    let indexId: Swift.String?
    let dataSourceId: Swift.String?
    let orderingId: Swift.Int?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension ListGroupsOlderThanOrderingIdInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSourceId = "DataSourceId"
        case indexId = "IndexId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case orderingId = "OrderingId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let dataSourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataSourceId)
        dataSourceId = dataSourceIdDecoded
        let orderingIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .orderingId)
        orderingId = orderingIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
