// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes {
    /// A document in an index.
    public struct Document: Swift.Equatable {
        /// The identifier of the access control configuration that you want to apply to the document.
        public var accessControlConfigurationId: Swift.String?
        /// Information on principals (users and/or groups) and which documents they should have access to. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
        public var accessControlList: [KendraClientTypes.Principal]?
        /// Custom attributes to apply to the document. Use the custom attributes to provide additional information for searching, to provide facets for refining searches, and to provide additional information in the query response. For example, 'DataSourceId' and 'DataSourceSyncJobId' are custom attributes that provide information on the synchronization of documents running on a data source. Note, 'DataSourceSyncJobId' could be an optional custom attribute as Amazon Kendra will use the ID of a running sync job.
        public var attributes: [KendraClientTypes.DocumentAttribute]?
        /// The contents of the document. Documents passed to the Blob parameter must be base64 encoded. Your code might not need to encode the document file bytes if you're using an Amazon Web Services SDK to call Amazon Kendra APIs. If you are calling the Amazon Kendra endpoint directly using REST, you must base64 encode the contents before sending.
        public var blob: ClientRuntime.Data?
        /// The file type of the document in the Blob field.
        public var contentType: KendraClientTypes.ContentType?
        /// The list of [principal](https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html) lists that define the hierarchy for which documents users should have access to.
        public var hierarchicalAccessControlList: [KendraClientTypes.HierarchicalPrincipal]?
        /// A unique identifier of the document in the index. Note, each document ID must be unique per index. You cannot create a data source to index your documents with their unique IDs and then use the BatchPutDocument API to index the same documents, or vice versa. You can delete a data source and then use the BatchPutDocument API to index the same documents, or vice versa.
        /// This member is required.
        public var id: Swift.String?
        /// Information required to find a specific file in an Amazon S3 bucket.
        public var s3Path: KendraClientTypes.S3Path?
        /// The title of the document.
        public var title: Swift.String?

        public init (
            accessControlConfigurationId: Swift.String? = nil,
            accessControlList: [KendraClientTypes.Principal]? = nil,
            attributes: [KendraClientTypes.DocumentAttribute]? = nil,
            blob: ClientRuntime.Data? = nil,
            contentType: KendraClientTypes.ContentType? = nil,
            hierarchicalAccessControlList: [KendraClientTypes.HierarchicalPrincipal]? = nil,
            id: Swift.String? = nil,
            s3Path: KendraClientTypes.S3Path? = nil,
            title: Swift.String? = nil
        )
        {
            self.accessControlConfigurationId = accessControlConfigurationId
            self.accessControlList = accessControlList
            self.attributes = attributes
            self.blob = blob
            self.contentType = contentType
            self.hierarchicalAccessControlList = hierarchicalAccessControlList
            self.id = id
            self.s3Path = s3Path
            self.title = title
        }
    }

}
