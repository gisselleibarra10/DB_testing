// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateEntitiesToExperienceInputBody: Swift.Equatable {
    let id: Swift.String?
    let indexId: Swift.String?
    let entityList: [KendraClientTypes.EntityConfiguration]?
}

extension AssociateEntitiesToExperienceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entityList = "EntityList"
        case id = "Id"
        case indexId = "IndexId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let indexIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let entityListContainer = try containerValues.decodeIfPresent([KendraClientTypes.EntityConfiguration?].self, forKey: .entityList)
        var entityListDecoded0:[KendraClientTypes.EntityConfiguration]? = nil
        if let entityListContainer = entityListContainer {
            entityListDecoded0 = [KendraClientTypes.EntityConfiguration]()
            for structure0 in entityListContainer {
                if let structure0 = structure0 {
                    entityListDecoded0?.append(structure0)
                }
            }
        }
        entityList = entityListDecoded0
    }
}
