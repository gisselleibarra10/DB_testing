// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.DocumentAttributeTarget: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case targetDocumentAttributeKey = "TargetDocumentAttributeKey"
        case targetDocumentAttributeValue = "TargetDocumentAttributeValue"
        case targetDocumentAttributeValueDeletion = "TargetDocumentAttributeValueDeletion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let targetDocumentAttributeKey = self.targetDocumentAttributeKey {
            try encodeContainer.encode(targetDocumentAttributeKey, forKey: .targetDocumentAttributeKey)
        }
        if let targetDocumentAttributeValue = self.targetDocumentAttributeValue {
            try encodeContainer.encode(targetDocumentAttributeValue, forKey: .targetDocumentAttributeValue)
        }
        if targetDocumentAttributeValueDeletion != false {
            try encodeContainer.encode(targetDocumentAttributeValueDeletion, forKey: .targetDocumentAttributeValueDeletion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetDocumentAttributeKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetDocumentAttributeKey)
        targetDocumentAttributeKey = targetDocumentAttributeKeyDecoded
        let targetDocumentAttributeValueDeletionDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .targetDocumentAttributeValueDeletion) ?? false
        targetDocumentAttributeValueDeletion = targetDocumentAttributeValueDeletionDecoded
        let targetDocumentAttributeValueDecoded = try containerValues.decodeIfPresent(KendraClientTypes.DocumentAttributeValue.self, forKey: .targetDocumentAttributeValue)
        targetDocumentAttributeValue = targetDocumentAttributeValueDecoded
    }
}
