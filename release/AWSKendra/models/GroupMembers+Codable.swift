// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.GroupMembers: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case memberGroups = "MemberGroups"
        case memberUsers = "MemberUsers"
        case s3PathforGroupMembers = "S3PathforGroupMembers"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let memberGroups = memberGroups {
            var memberGroupsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .memberGroups)
            for membergroups0 in memberGroups {
                try memberGroupsContainer.encode(membergroups0)
            }
        }
        if let memberUsers = memberUsers {
            var memberUsersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .memberUsers)
            for memberusers0 in memberUsers {
                try memberUsersContainer.encode(memberusers0)
            }
        }
        if let s3PathforGroupMembers = self.s3PathforGroupMembers {
            try encodeContainer.encode(s3PathforGroupMembers, forKey: .s3PathforGroupMembers)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let memberGroupsContainer = try containerValues.decodeIfPresent([KendraClientTypes.MemberGroup?].self, forKey: .memberGroups)
        var memberGroupsDecoded0:[KendraClientTypes.MemberGroup]? = nil
        if let memberGroupsContainer = memberGroupsContainer {
            memberGroupsDecoded0 = [KendraClientTypes.MemberGroup]()
            for structure0 in memberGroupsContainer {
                if let structure0 = structure0 {
                    memberGroupsDecoded0?.append(structure0)
                }
            }
        }
        memberGroups = memberGroupsDecoded0
        let memberUsersContainer = try containerValues.decodeIfPresent([KendraClientTypes.MemberUser?].self, forKey: .memberUsers)
        var memberUsersDecoded0:[KendraClientTypes.MemberUser]? = nil
        if let memberUsersContainer = memberUsersContainer {
            memberUsersDecoded0 = [KendraClientTypes.MemberUser]()
            for structure0 in memberUsersContainer {
                if let structure0 = structure0 {
                    memberUsersDecoded0?.append(structure0)
                }
            }
        }
        memberUsers = memberUsersDecoded0
        let s3PathforGroupMembersDecoded = try containerValues.decodeIfPresent(KendraClientTypes.S3Path.self, forKey: .s3PathforGroupMembers)
        s3PathforGroupMembers = s3PathforGroupMembersDecoded
    }
}
