// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.AuthenticationConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case basicAuthentication = "BasicAuthentication"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let basicAuthentication = basicAuthentication {
            var basicAuthenticationContainer = encodeContainer.nestedUnkeyedContainer(forKey: .basicAuthentication)
            for basicauthenticationconfigurationlist0 in basicAuthentication {
                try basicAuthenticationContainer.encode(basicauthenticationconfigurationlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let basicAuthenticationContainer = try containerValues.decodeIfPresent([KendraClientTypes.BasicAuthenticationConfiguration?].self, forKey: .basicAuthentication)
        var basicAuthenticationDecoded0:[KendraClientTypes.BasicAuthenticationConfiguration]? = nil
        if let basicAuthenticationContainer = basicAuthenticationContainer {
            basicAuthenticationDecoded0 = [KendraClientTypes.BasicAuthenticationConfiguration]()
            for structure0 in basicAuthenticationContainer {
                if let structure0 = structure0 {
                    basicAuthenticationDecoded0?.append(structure0)
                }
            }
        }
        basicAuthentication = basicAuthenticationDecoded0
    }
}
