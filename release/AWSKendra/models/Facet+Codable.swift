// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.Facet: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case documentAttributeKey = "DocumentAttributeKey"
        case facets = "Facets"
        case maxResults = "MaxResults"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let documentAttributeKey = self.documentAttributeKey {
            try encodeContainer.encode(documentAttributeKey, forKey: .documentAttributeKey)
        }
        if let facets = facets {
            var facetsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .facets)
            for facetlist0 in facets {
                try facetsContainer.encode(facetlist0)
            }
        }
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentAttributeKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .documentAttributeKey)
        documentAttributeKey = documentAttributeKeyDecoded
        let facetsContainer = try containerValues.decodeIfPresent([KendraClientTypes.Facet?].self, forKey: .facets)
        var facetsDecoded0:[KendraClientTypes.Facet]? = nil
        if let facetsContainer = facetsContainer {
            facetsDecoded0 = [KendraClientTypes.Facet]()
            for structure0 in facetsContainer {
                if let structure0 = structure0 {
                    facetsDecoded0?.append(structure0)
                }
            }
        }
        facets = facetsDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults) ?? 0
        maxResults = maxResultsDecoded
    }
}
