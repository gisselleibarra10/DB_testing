// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchPutDocumentInputBody: Swift.Equatable {
    let indexId: Swift.String?
    let roleArn: Swift.String?
    let documents: [KendraClientTypes.Document]?
    let customDocumentEnrichmentConfiguration: KendraClientTypes.CustomDocumentEnrichmentConfiguration?
}

extension BatchPutDocumentInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customDocumentEnrichmentConfiguration = "CustomDocumentEnrichmentConfiguration"
        case documents = "Documents"
        case indexId = "IndexId"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let documentsContainer = try containerValues.decodeIfPresent([KendraClientTypes.Document?].self, forKey: .documents)
        var documentsDecoded0:[KendraClientTypes.Document]? = nil
        if let documentsContainer = documentsContainer {
            documentsDecoded0 = [KendraClientTypes.Document]()
            for structure0 in documentsContainer {
                if let structure0 = structure0 {
                    documentsDecoded0?.append(structure0)
                }
            }
        }
        documents = documentsDecoded0
        let customDocumentEnrichmentConfigurationDecoded = try containerValues.decodeIfPresent(KendraClientTypes.CustomDocumentEnrichmentConfiguration.self, forKey: .customDocumentEnrichmentConfiguration)
        customDocumentEnrichmentConfiguration = customDocumentEnrichmentConfigurationDecoded
    }
}
