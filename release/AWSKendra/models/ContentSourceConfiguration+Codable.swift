// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.ContentSourceConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSourceIds = "DataSourceIds"
        case directPutContent = "DirectPutContent"
        case faqIds = "FaqIds"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataSourceIds = dataSourceIds {
            var dataSourceIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dataSourceIds)
            for datasourceidlist0 in dataSourceIds {
                try dataSourceIdsContainer.encode(datasourceidlist0)
            }
        }
        if directPutContent != false {
            try encodeContainer.encode(directPutContent, forKey: .directPutContent)
        }
        if let faqIds = faqIds {
            var faqIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .faqIds)
            for faqidslist0 in faqIds {
                try faqIdsContainer.encode(faqidslist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSourceIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .dataSourceIds)
        var dataSourceIdsDecoded0:[Swift.String]? = nil
        if let dataSourceIdsContainer = dataSourceIdsContainer {
            dataSourceIdsDecoded0 = [Swift.String]()
            for string0 in dataSourceIdsContainer {
                if let string0 = string0 {
                    dataSourceIdsDecoded0?.append(string0)
                }
            }
        }
        dataSourceIds = dataSourceIdsDecoded0
        let faqIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .faqIds)
        var faqIdsDecoded0:[Swift.String]? = nil
        if let faqIdsContainer = faqIdsContainer {
            faqIdsDecoded0 = [Swift.String]()
            for string0 in faqIdsContainer {
                if let string0 = string0 {
                    faqIdsDecoded0?.append(string0)
                }
            }
        }
        faqIds = faqIdsDecoded0
        let directPutContentDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .directPutContent) ?? false
        directPutContent = directPutContentDecoded
    }
}
