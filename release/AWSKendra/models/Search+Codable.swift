// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.Search: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case displayable = "Displayable"
        case facetable = "Facetable"
        case searchable = "Searchable"
        case sortable = "Sortable"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if displayable != false {
            try encodeContainer.encode(displayable, forKey: .displayable)
        }
        if facetable != false {
            try encodeContainer.encode(facetable, forKey: .facetable)
        }
        if searchable != false {
            try encodeContainer.encode(searchable, forKey: .searchable)
        }
        if sortable != false {
            try encodeContainer.encode(sortable, forKey: .sortable)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let facetableDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .facetable) ?? false
        facetable = facetableDecoded
        let searchableDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .searchable) ?? false
        searchable = searchableDecoded
        let displayableDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .displayable) ?? false
        displayable = displayableDecoded
        let sortableDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .sortable) ?? false
        sortable = sortableDecoded
    }
}
