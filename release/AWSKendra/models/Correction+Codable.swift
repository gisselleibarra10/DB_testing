// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.Correction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case beginOffset = "BeginOffset"
        case correctedTerm = "CorrectedTerm"
        case endOffset = "EndOffset"
        case term = "Term"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let beginOffset = self.beginOffset {
            try encodeContainer.encode(beginOffset, forKey: .beginOffset)
        }
        if let correctedTerm = self.correctedTerm {
            try encodeContainer.encode(correctedTerm, forKey: .correctedTerm)
        }
        if let endOffset = self.endOffset {
            try encodeContainer.encode(endOffset, forKey: .endOffset)
        }
        if let term = self.term {
            try encodeContainer.encode(term, forKey: .term)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let beginOffsetDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .beginOffset)
        beginOffset = beginOffsetDecoded
        let endOffsetDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .endOffset)
        endOffset = endOffsetDecoded
        let termDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .term)
        term = termDecoded
        let correctedTermDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .correctedTerm)
        correctedTerm = correctedTermDecoded
    }
}
