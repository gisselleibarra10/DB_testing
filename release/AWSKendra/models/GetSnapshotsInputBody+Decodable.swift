// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSnapshotsInputBody: Swift.Equatable {
    let indexId: Swift.String?
    let interval: KendraClientTypes.Interval?
    let metricType: KendraClientTypes.MetricType?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension GetSnapshotsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case indexId = "IndexId"
        case interval = "Interval"
        case maxResults = "MaxResults"
        case metricType = "MetricType"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let intervalDecoded = try containerValues.decodeIfPresent(KendraClientTypes.Interval.self, forKey: .interval)
        interval = intervalDecoded
        let metricTypeDecoded = try containerValues.decodeIfPresent(KendraClientTypes.MetricType.self, forKey: .metricType)
        metricType = metricTypeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
