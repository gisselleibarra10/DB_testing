// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KendraClientTypes {
    public enum SalesforceStandardObjectName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case account
        case campaign
        case `case`
        case contact
        case contract
        case document
        case group
        case idea
        case lead
        case opportunity
        case partner
        case pricebook
        case product
        case profile
        case solution
        case task
        case user
        case sdkUnknown(Swift.String)

        public static var allCases: [SalesforceStandardObjectName] {
            return [
                .account,
                .campaign,
                .case,
                .contact,
                .contract,
                .document,
                .group,
                .idea,
                .lead,
                .opportunity,
                .partner,
                .pricebook,
                .product,
                .profile,
                .solution,
                .task,
                .user,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .account: return "ACCOUNT"
            case .campaign: return "CAMPAIGN"
            case .case: return "CASE"
            case .contact: return "CONTACT"
            case .contract: return "CONTRACT"
            case .document: return "DOCUMENT"
            case .group: return "GROUP"
            case .idea: return "IDEA"
            case .lead: return "LEAD"
            case .opportunity: return "OPPORTUNITY"
            case .partner: return "PARTNER"
            case .pricebook: return "PRICEBOOK"
            case .product: return "PRODUCT"
            case .profile: return "PROFILE"
            case .solution: return "SOLUTION"
            case .task: return "TASK"
            case .user: return "USER"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SalesforceStandardObjectName(rawValue: rawValue) ?? SalesforceStandardObjectName.sdkUnknown(rawValue)
        }
    }
}
