// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KendraClientTypes {
    /// Provides the configuration information to connect to Quip as your data source.
    public struct QuipConfiguration: Swift.Equatable {
        /// A list of DataSourceToIndexFieldMapping objects that map attributes or field names of Quip attachments to Amazon Kendra index field names. To create custom fields, use the UpdateIndex API before you map to Quip fields. For more information, see [Mapping data source fields](https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html). The Quip field names must exist in your Quip custom metadata.
        public var attachmentFieldMappings: [KendraClientTypes.DataSourceToIndexFieldMapping]?
        /// TRUE to index attachments.
        public var crawlAttachments: Swift.Bool
        /// TRUE to index the contents of chat rooms.
        public var crawlChatRooms: Swift.Bool
        /// TRUE to index file comments.
        public var crawlFileComments: Swift.Bool
        /// The Quip site domain. For example, https://quip-company.quipdomain.com/browse. The domain in this example is "quipdomain".
        /// This member is required.
        public var domain: Swift.String?
        /// A list of regular expression patterns to exclude certain files in your Quip file system. Files that match the patterns are excluded from the index. Files that don’t match the patterns are included in the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence, and the file isn't included in the index.
        public var exclusionPatterns: [Swift.String]?
        /// The identifiers of the Quip folders you want to index. You can find the folder ID in your browser URL when you access your folder in Quip. For example, https://quip-company.quipdomain.com/zlLuOVNSarTL/folder-name. The folder ID in this example is "zlLuOVNSarTL".
        public var folderIds: [Swift.String]?
        /// A list of regular expression patterns to include certain files in your Quip file system. Files that match the patterns are included in the index. Files that don't match the patterns are excluded from the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence, and the file isn't included in the index.
        public var inclusionPatterns: [Swift.String]?
        /// A list of DataSourceToIndexFieldMapping objects that map attributes or field names of Quip messages to Amazon Kendra index field names. To create custom fields, use the UpdateIndex API before you map to Quip fields. For more information, see [Mapping data source fields](https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html). The Quip field names must exist in your Quip custom metadata.
        public var messageFieldMappings: [KendraClientTypes.DataSourceToIndexFieldMapping]?
        /// The Amazon Resource Name (ARN) of an Secrets Manager secret that contains the key-value pairs that are required to connect to your Quip. The secret must contain a JSON structure with the following keys:
        ///
        /// * accessToken—The token created in Quip. For more information, see [Authentication for a Quip data source](https://docs.aws.amazon.com/kendra/latest/dg/data-source-slack.html#quip-authentication).
        /// This member is required.
        public var secretArn: Swift.String?
        /// A list of DataSourceToIndexFieldMapping objects that map attributes or field names of Quip threads to Amazon Kendra index field names. To create custom fields, use the UpdateIndex API before you map to Quip fields. For more information, see [Mapping data source fields](https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html). The Quip field names must exist in your Quip custom metadata.
        public var threadFieldMappings: [KendraClientTypes.DataSourceToIndexFieldMapping]?
        /// Configuration information for an Amazon Virtual Private Cloud (VPC) to connect to your Quip. For more information, see [Configuring a VPC](https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html).
        public var vpcConfiguration: KendraClientTypes.DataSourceVpcConfiguration?

        public init (
            attachmentFieldMappings: [KendraClientTypes.DataSourceToIndexFieldMapping]? = nil,
            crawlAttachments: Swift.Bool = false,
            crawlChatRooms: Swift.Bool = false,
            crawlFileComments: Swift.Bool = false,
            domain: Swift.String? = nil,
            exclusionPatterns: [Swift.String]? = nil,
            folderIds: [Swift.String]? = nil,
            inclusionPatterns: [Swift.String]? = nil,
            messageFieldMappings: [KendraClientTypes.DataSourceToIndexFieldMapping]? = nil,
            secretArn: Swift.String? = nil,
            threadFieldMappings: [KendraClientTypes.DataSourceToIndexFieldMapping]? = nil,
            vpcConfiguration: KendraClientTypes.DataSourceVpcConfiguration? = nil
        )
        {
            self.attachmentFieldMappings = attachmentFieldMappings
            self.crawlAttachments = crawlAttachments
            self.crawlChatRooms = crawlChatRooms
            self.crawlFileComments = crawlFileComments
            self.domain = domain
            self.exclusionPatterns = exclusionPatterns
            self.folderIds = folderIds
            self.inclusionPatterns = inclusionPatterns
            self.messageFieldMappings = messageFieldMappings
            self.secretArn = secretArn
            self.threadFieldMappings = threadFieldMappings
            self.vpcConfiguration = vpcConfiguration
        }
    }

}
