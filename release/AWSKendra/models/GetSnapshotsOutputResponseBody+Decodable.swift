// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSnapshotsOutputResponseBody: Swift.Equatable {
    let snapShotTimeFilter: KendraClientTypes.TimeRange?
    let snapshotsDataHeader: [Swift.String]?
    let snapshotsData: [[Swift.String]]?
    let nextToken: Swift.String?
}

extension GetSnapshotsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case snapShotTimeFilter = "SnapShotTimeFilter"
        case snapshotsData = "SnapshotsData"
        case snapshotsDataHeader = "SnapshotsDataHeader"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let snapShotTimeFilterDecoded = try containerValues.decodeIfPresent(KendraClientTypes.TimeRange.self, forKey: .snapShotTimeFilter)
        snapShotTimeFilter = snapShotTimeFilterDecoded
        let snapshotsDataHeaderContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .snapshotsDataHeader)
        var snapshotsDataHeaderDecoded0:[Swift.String]? = nil
        if let snapshotsDataHeaderContainer = snapshotsDataHeaderContainer {
            snapshotsDataHeaderDecoded0 = [Swift.String]()
            for string0 in snapshotsDataHeaderContainer {
                if let string0 = string0 {
                    snapshotsDataHeaderDecoded0?.append(string0)
                }
            }
        }
        snapshotsDataHeader = snapshotsDataHeaderDecoded0
        let snapshotsDataContainer = try containerValues.decodeIfPresent([[Swift.String?]?].self, forKey: .snapshotsData)
        var snapshotsDataDecoded0:[[Swift.String]]? = nil
        if let snapshotsDataContainer = snapshotsDataContainer {
            snapshotsDataDecoded0 = [[Swift.String]]()
            for list0 in snapshotsDataContainer {
                var list0Decoded0: [Swift.String]? = nil
                if let list0 = list0 {
                    list0Decoded0 = [Swift.String]()
                    for string1 in list0 {
                        if let string1 = string1 {
                            list0Decoded0?.append(string1)
                        }
                    }
                }
                if let list0Decoded0 = list0Decoded0 {
                    snapshotsDataDecoded0?.append(list0Decoded0)
                }
            }
        }
        snapshotsData = snapshotsDataDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
