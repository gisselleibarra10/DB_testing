// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateIndexInput: Swift.Equatable {
    /// A token that you provide to identify the request to create an index. Multiple calls to the CreateIndex API with the same client token will create only one index.
    public var clientToken: Swift.String?
    /// A description for the index.
    public var description: Swift.String?
    /// The Amazon Kendra edition to use for the index. Choose DEVELOPER_EDITION for indexes intended for development, testing, or proof of concept. Use ENTERPRISE_EDITION for your production databases. Once you set the edition for an index, it can't be changed. The Edition parameter is optional. If you don't supply a value, the default is ENTERPRISE_EDITION. For more information on quota limits for enterprise and developer editions, see [Quotas](https://docs.aws.amazon.com/kendra/latest/dg/quotas.html).
    public var edition: KendraClientTypes.IndexEdition?
    /// A name for the index.
    /// This member is required.
    public var name: Swift.String?
    /// An Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the BatchPutDocument API to index documents from an Amazon S3 bucket.
    /// This member is required.
    public var roleArn: Swift.String?
    /// The identifier of the KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs.
    public var serverSideEncryptionConfiguration: KendraClientTypes.ServerSideEncryptionConfiguration?
    /// A list of key-value pairs that identify the index. You can use the tags to identify and organize your resources and to control access to resources.
    public var tags: [KendraClientTypes.Tag]?
    /// The user context policy. ATTRIBUTE_FILTER All indexed content is searchable and displayable for all users. If you want to filter search results on user context, you can use the attribute filters of _user_id and _group_ids or you can provide user and group information in UserContext. USER_TOKEN Enables token-based user access control to filter search results on user context. All documents with no access control and all documents accessible to the user will be searchable and displayable.
    public var userContextPolicy: KendraClientTypes.UserContextPolicy?
    /// Enables fetching access levels of groups and users from an IAM Identity Center (successor to Single Sign-On) identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html).
    public var userGroupResolutionConfiguration: KendraClientTypes.UserGroupResolutionConfiguration?
    /// The user token configuration.
    public var userTokenConfigurations: [KendraClientTypes.UserTokenConfiguration]?

    public init (
        clientToken: Swift.String? = nil,
        description: Swift.String? = nil,
        edition: KendraClientTypes.IndexEdition? = nil,
        name: Swift.String? = nil,
        roleArn: Swift.String? = nil,
        serverSideEncryptionConfiguration: KendraClientTypes.ServerSideEncryptionConfiguration? = nil,
        tags: [KendraClientTypes.Tag]? = nil,
        userContextPolicy: KendraClientTypes.UserContextPolicy? = nil,
        userGroupResolutionConfiguration: KendraClientTypes.UserGroupResolutionConfiguration? = nil,
        userTokenConfigurations: [KendraClientTypes.UserTokenConfiguration]? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.edition = edition
        self.name = name
        self.roleArn = roleArn
        self.serverSideEncryptionConfiguration = serverSideEncryptionConfiguration
        self.tags = tags
        self.userContextPolicy = userContextPolicy
        self.userGroupResolutionConfiguration = userGroupResolutionConfiguration
        self.userTokenConfigurations = userTokenConfigurations
    }
}
