// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KendraClientTypes.GitHubDocumentCrawlProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case crawlIssue = "CrawlIssue"
        case crawlIssueComment = "CrawlIssueComment"
        case crawlIssueCommentAttachment = "CrawlIssueCommentAttachment"
        case crawlPullRequest = "CrawlPullRequest"
        case crawlPullRequestComment = "CrawlPullRequestComment"
        case crawlPullRequestCommentAttachment = "CrawlPullRequestCommentAttachment"
        case crawlRepositoryDocuments = "CrawlRepositoryDocuments"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if crawlIssue != false {
            try encodeContainer.encode(crawlIssue, forKey: .crawlIssue)
        }
        if crawlIssueComment != false {
            try encodeContainer.encode(crawlIssueComment, forKey: .crawlIssueComment)
        }
        if crawlIssueCommentAttachment != false {
            try encodeContainer.encode(crawlIssueCommentAttachment, forKey: .crawlIssueCommentAttachment)
        }
        if crawlPullRequest != false {
            try encodeContainer.encode(crawlPullRequest, forKey: .crawlPullRequest)
        }
        if crawlPullRequestComment != false {
            try encodeContainer.encode(crawlPullRequestComment, forKey: .crawlPullRequestComment)
        }
        if crawlPullRequestCommentAttachment != false {
            try encodeContainer.encode(crawlPullRequestCommentAttachment, forKey: .crawlPullRequestCommentAttachment)
        }
        if crawlRepositoryDocuments != false {
            try encodeContainer.encode(crawlRepositoryDocuments, forKey: .crawlRepositoryDocuments)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let crawlRepositoryDocumentsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .crawlRepositoryDocuments) ?? false
        crawlRepositoryDocuments = crawlRepositoryDocumentsDecoded
        let crawlIssueDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .crawlIssue) ?? false
        crawlIssue = crawlIssueDecoded
        let crawlIssueCommentDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .crawlIssueComment) ?? false
        crawlIssueComment = crawlIssueCommentDecoded
        let crawlIssueCommentAttachmentDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .crawlIssueCommentAttachment) ?? false
        crawlIssueCommentAttachment = crawlIssueCommentAttachmentDecoded
        let crawlPullRequestDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .crawlPullRequest) ?? false
        crawlPullRequest = crawlPullRequestDecoded
        let crawlPullRequestCommentDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .crawlPullRequestComment) ?? false
        crawlPullRequestComment = crawlPullRequestCommentDecoded
        let crawlPullRequestCommentAttachmentDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .crawlPullRequestCommentAttachment) ?? false
        crawlPullRequestCommentAttachment = crawlPullRequestCommentAttachmentDecoded
    }
}
