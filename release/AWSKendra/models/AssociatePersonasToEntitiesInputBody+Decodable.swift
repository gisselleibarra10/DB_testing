// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociatePersonasToEntitiesInputBody: Swift.Equatable {
    let id: Swift.String?
    let indexId: Swift.String?
    let personas: [KendraClientTypes.EntityPersonaConfiguration]?
}

extension AssociatePersonasToEntitiesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case id = "Id"
        case indexId = "IndexId"
        case personas = "Personas"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let indexIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let personasContainer = try containerValues.decodeIfPresent([KendraClientTypes.EntityPersonaConfiguration?].self, forKey: .personas)
        var personasDecoded0:[KendraClientTypes.EntityPersonaConfiguration]? = nil
        if let personasContainer = personasContainer {
            personasDecoded0 = [KendraClientTypes.EntityPersonaConfiguration]()
            for structure0 in personasContainer {
                if let structure0 = structure0 {
                    personasDecoded0?.append(structure0)
                }
            }
        }
        personas = personasDecoded0
    }
}
