// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MachineLearningClientTypes.RedshiftMetadata: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case databaseUserName = "DatabaseUserName"
        case redshiftDatabase = "RedshiftDatabase"
        case selectSqlQuery = "SelectSqlQuery"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let databaseUserName = self.databaseUserName {
            try encodeContainer.encode(databaseUserName, forKey: .databaseUserName)
        }
        if let redshiftDatabase = self.redshiftDatabase {
            try encodeContainer.encode(redshiftDatabase, forKey: .redshiftDatabase)
        }
        if let selectSqlQuery = self.selectSqlQuery {
            try encodeContainer.encode(selectSqlQuery, forKey: .selectSqlQuery)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let redshiftDatabaseDecoded = try containerValues.decodeIfPresent(MachineLearningClientTypes.RedshiftDatabase.self, forKey: .redshiftDatabase)
        redshiftDatabase = redshiftDatabaseDecoded
        let databaseUserNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .databaseUserName)
        databaseUserName = databaseUserNameDecoded
        let selectSqlQueryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .selectSqlQuery)
        selectSqlQuery = selectSqlQueryDecoded
    }
}
