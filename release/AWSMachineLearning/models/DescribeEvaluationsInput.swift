// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeEvaluationsInput: Swift.Equatable {
    /// The equal to operator. The Evaluation results will have FilterVariable values that exactly match the value specified with EQ.
    public var eQ: Swift.String?
    /// Use one of the following variable to filter a list of Evaluation objects:
    ///
    /// * CreatedAt - Sets the search criteria to the Evaluation creation date.
    ///
    /// * Status - Sets the search criteria to the Evaluation status.
    ///
    /// * Name - Sets the search criteria to the contents of EvaluationName.
    ///
    /// * IAMUser - Sets the search criteria to the user account that invoked an Evaluation.
    ///
    /// * MLModelId - Sets the search criteria to the MLModel that was evaluated.
    ///
    /// * DataSourceId - Sets the search criteria to the DataSource used in Evaluation.
    ///
    /// * DataUri - Sets the search criteria to the data file(s) used in Evaluation. The URL can identify either a file or an Amazon Simple Storage Solution (Amazon S3) bucket or directory.
    public var filterVariable: MachineLearningClientTypes.EvaluationFilterVariable?
    /// The greater than or equal to operator. The Evaluation results will have FilterVariable values that are greater than or equal to the value specified with GE.
    public var gE: Swift.String?
    /// The greater than operator. The Evaluation results will have FilterVariable values that are greater than the value specified with GT.
    public var gT: Swift.String?
    /// The less than or equal to operator. The Evaluation results will have FilterVariable values that are less than or equal to the value specified with LE.
    public var lE: Swift.String?
    /// The less than operator. The Evaluation results will have FilterVariable values that are less than the value specified with LT.
    public var lT: Swift.String?
    /// The maximum number of Evaluation to include in the result.
    public var limit: Swift.Int?
    /// The not equal to operator. The Evaluation results will have FilterVariable values not equal to the value specified with NE.
    public var nE: Swift.String?
    /// The ID of the page in the paginated results.
    public var nextToken: Swift.String?
    /// A string that is found at the beginning of a variable, such as Name or Id. For example, an Evaluation could have the Name2014-09-09-HolidayGiftMailer. To search for this Evaluation, select Name for the FilterVariable and any of the following strings for the Prefix:
    ///
    /// * 2014-09
    ///
    /// * 2014-09-09
    ///
    /// * 2014-09-09-Holiday
    public var `prefix`: Swift.String?
    /// A two-value parameter that determines the sequence of the resulting list of Evaluation.
    ///
    /// * asc - Arranges the list in ascending order (A-Z, 0-9).
    ///
    /// * dsc - Arranges the list in descending order (Z-A, 9-0).
    ///
    ///
    /// Results are sorted by FilterVariable.
    public var sortOrder: MachineLearningClientTypes.SortOrder?

    public init (
        eQ: Swift.String? = nil,
        filterVariable: MachineLearningClientTypes.EvaluationFilterVariable? = nil,
        gE: Swift.String? = nil,
        gT: Swift.String? = nil,
        lE: Swift.String? = nil,
        lT: Swift.String? = nil,
        limit: Swift.Int? = nil,
        nE: Swift.String? = nil,
        nextToken: Swift.String? = nil,
        `prefix`: Swift.String? = nil,
        sortOrder: MachineLearningClientTypes.SortOrder? = nil
    )
    {
        self.eQ = eQ
        self.filterVariable = filterVariable
        self.gE = gE
        self.gT = gT
        self.lE = lE
        self.lT = lT
        self.limit = limit
        self.nE = nE
        self.nextToken = nextToken
        self.`prefix` = `prefix`
        self.sortOrder = sortOrder
    }
}
