// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Represents the output of a GetBatchPrediction operation and describes a BatchPrediction.
public struct GetBatchPredictionOutputResponse: Swift.Equatable {
    /// The ID of the DataSource that was used to create the BatchPrediction.
    public var batchPredictionDataSourceId: Swift.String?
    /// An ID assigned to the BatchPrediction at creation. This value should be identical to the value of the BatchPredictionID in the request.
    public var batchPredictionId: Swift.String?
    /// The approximate CPU time in milliseconds that Amazon Machine Learning spent processing the BatchPrediction, normalized and scaled on computation resources. ComputeTime is only available if the BatchPrediction is in the COMPLETED state.
    public var computeTime: Swift.Int?
    /// The time when the BatchPrediction was created. The time is expressed in epoch time.
    public var createdAt: ClientRuntime.Date?
    /// The AWS user account that invoked the BatchPrediction. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.
    public var createdByIamUser: Swift.String?
    /// The epoch time when Amazon Machine Learning marked the BatchPrediction as COMPLETED or FAILED. FinishedAt is only available when the BatchPrediction is in the COMPLETED or FAILED state.
    public var finishedAt: ClientRuntime.Date?
    /// The location of the data file or directory in Amazon Simple Storage Service (Amazon S3).
    public var inputDataLocationS3: Swift.String?
    /// The number of invalid records that Amazon Machine Learning saw while processing the BatchPrediction.
    public var invalidRecordCount: Swift.Int?
    /// The time of the most recent edit to BatchPrediction. The time is expressed in epoch time.
    public var lastUpdatedAt: ClientRuntime.Date?
    /// A link to the file that contains logs of the CreateBatchPrediction operation.
    public var logUri: Swift.String?
    /// The ID of the MLModel that generated predictions for the BatchPrediction request.
    public var mLModelId: Swift.String?
    /// A description of the most recent details about processing the batch prediction request.
    public var message: Swift.String?
    /// A user-supplied name or description of the BatchPrediction.
    public var name: Swift.String?
    /// The location of an Amazon S3 bucket or directory to receive the operation results.
    public var outputUri: Swift.String?
    /// The epoch time when Amazon Machine Learning marked the BatchPrediction as INPROGRESS. StartedAt isn't available if the BatchPrediction is in the PENDING state.
    public var startedAt: ClientRuntime.Date?
    /// The status of the BatchPrediction, which can be one of the following values:
    ///
    /// * PENDING - Amazon Machine Learning (Amazon ML) submitted a request to generate batch predictions.
    ///
    /// * INPROGRESS - The batch predictions are in progress.
    ///
    /// * FAILED - The request to perform a batch prediction did not run to completion. It is not usable.
    ///
    /// * COMPLETED - The batch prediction process completed successfully.
    ///
    /// * DELETED - The BatchPrediction is marked as deleted. It is not usable.
    public var status: MachineLearningClientTypes.EntityStatus?
    /// The number of total records that Amazon Machine Learning saw while processing the BatchPrediction.
    public var totalRecordCount: Swift.Int?

    public init (
        batchPredictionDataSourceId: Swift.String? = nil,
        batchPredictionId: Swift.String? = nil,
        computeTime: Swift.Int? = nil,
        createdAt: ClientRuntime.Date? = nil,
        createdByIamUser: Swift.String? = nil,
        finishedAt: ClientRuntime.Date? = nil,
        inputDataLocationS3: Swift.String? = nil,
        invalidRecordCount: Swift.Int? = nil,
        lastUpdatedAt: ClientRuntime.Date? = nil,
        logUri: Swift.String? = nil,
        mLModelId: Swift.String? = nil,
        message: Swift.String? = nil,
        name: Swift.String? = nil,
        outputUri: Swift.String? = nil,
        startedAt: ClientRuntime.Date? = nil,
        status: MachineLearningClientTypes.EntityStatus? = nil,
        totalRecordCount: Swift.Int? = nil
    )
    {
        self.batchPredictionDataSourceId = batchPredictionDataSourceId
        self.batchPredictionId = batchPredictionId
        self.computeTime = computeTime
        self.createdAt = createdAt
        self.createdByIamUser = createdByIamUser
        self.finishedAt = finishedAt
        self.inputDataLocationS3 = inputDataLocationS3
        self.invalidRecordCount = invalidRecordCount
        self.lastUpdatedAt = lastUpdatedAt
        self.logUri = logUri
        self.mLModelId = mLModelId
        self.message = message
        self.name = name
        self.outputUri = outputUri
        self.startedAt = startedAt
        self.status = status
        self.totalRecordCount = totalRecordCount
    }
}
