// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PredictInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case mLModelId = "MLModelId"
        case predictEndpoint = "PredictEndpoint"
        case record = "Record"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let mLModelId = self.mLModelId {
            try encodeContainer.encode(mLModelId, forKey: .mLModelId)
        }
        if let predictEndpoint = self.predictEndpoint {
            try encodeContainer.encode(predictEndpoint, forKey: .predictEndpoint)
        }
        if let record = record {
            var recordContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .record)
            for (dictKey0, record0) in record {
                try recordContainer.encode(record0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
