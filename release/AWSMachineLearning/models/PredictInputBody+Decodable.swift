// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PredictInputBody: Swift.Equatable {
    let mLModelId: Swift.String?
    let record: [Swift.String:Swift.String]?
    let predictEndpoint: Swift.String?
}

extension PredictInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case mLModelId = "MLModelId"
        case predictEndpoint = "PredictEndpoint"
        case record = "Record"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mLModelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mLModelId)
        mLModelId = mLModelIdDecoded
        let recordContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .record)
        var recordDecoded0: [Swift.String:Swift.String]? = nil
        if let recordContainer = recordContainer {
            recordDecoded0 = [Swift.String:Swift.String]()
            for (key0, variablevalue0) in recordContainer {
                if let variablevalue0 = variablevalue0 {
                    recordDecoded0?[key0] = variablevalue0
                }
            }
        }
        record = recordDecoded0
        let predictEndpointDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .predictEndpoint)
        predictEndpoint = predictEndpointDecoded
    }
}
