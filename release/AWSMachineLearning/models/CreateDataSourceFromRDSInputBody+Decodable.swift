// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDataSourceFromRDSInputBody: Swift.Equatable {
    let dataSourceId: Swift.String?
    let dataSourceName: Swift.String?
    let rDSData: MachineLearningClientTypes.RDSDataSpec?
    let roleARN: Swift.String?
    let computeStatistics: Swift.Bool
}

extension CreateDataSourceFromRDSInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case computeStatistics = "ComputeStatistics"
        case dataSourceId = "DataSourceId"
        case dataSourceName = "DataSourceName"
        case rDSData = "RDSData"
        case roleARN = "RoleARN"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataSourceId)
        dataSourceId = dataSourceIdDecoded
        let dataSourceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataSourceName)
        dataSourceName = dataSourceNameDecoded
        let rDSDataDecoded = try containerValues.decodeIfPresent(MachineLearningClientTypes.RDSDataSpec.self, forKey: .rDSData)
        rDSData = rDSDataDecoded
        let roleARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleARN)
        roleARN = roleARNDecoded
        let computeStatisticsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .computeStatistics) ?? false
        computeStatistics = computeStatisticsDecoded
    }
}
