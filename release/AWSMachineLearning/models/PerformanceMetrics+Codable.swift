// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MachineLearningClientTypes.PerformanceMetrics: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case properties = "Properties"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let properties = properties {
            var propertiesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .properties)
            for (dictKey0, performancemetricsproperties0) in properties {
                try propertiesContainer.encode(performancemetricsproperties0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let propertiesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .properties)
        var propertiesDecoded0: [Swift.String:Swift.String]? = nil
        if let propertiesContainer = propertiesContainer {
            propertiesDecoded0 = [Swift.String:Swift.String]()
            for (key0, performancemetricspropertyvalue0) in propertiesContainer {
                if let performancemetricspropertyvalue0 = performancemetricspropertyvalue0 {
                    propertiesDecoded0?[key0] = performancemetricspropertyvalue0
                }
            }
        }
        properties = propertiesDecoded0
    }
}
