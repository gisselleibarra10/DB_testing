// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MachineLearningClientTypes.RealtimeEndpointInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdAt = "CreatedAt"
        case endpointStatus = "EndpointStatus"
        case endpointUrl = "EndpointUrl"
        case peakRequestsPerSecond = "PeakRequestsPerSecond"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdAt = self.createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let endpointStatus = self.endpointStatus {
            try encodeContainer.encode(endpointStatus.rawValue, forKey: .endpointStatus)
        }
        if let endpointUrl = self.endpointUrl {
            try encodeContainer.encode(endpointUrl, forKey: .endpointUrl)
        }
        if peakRequestsPerSecond != 0 {
            try encodeContainer.encode(peakRequestsPerSecond, forKey: .peakRequestsPerSecond)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let peakRequestsPerSecondDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .peakRequestsPerSecond) ?? 0
        peakRequestsPerSecond = peakRequestsPerSecondDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let endpointUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endpointUrl)
        endpointUrl = endpointUrlDecoded
        let endpointStatusDecoded = try containerValues.decodeIfPresent(MachineLearningClientTypes.RealtimeEndpointStatus.self, forKey: .endpointStatus)
        endpointStatus = endpointStatusDecoded
    }
}
