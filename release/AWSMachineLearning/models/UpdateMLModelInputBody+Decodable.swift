// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateMLModelInputBody: Swift.Equatable {
    let mLModelId: Swift.String?
    let mLModelName: Swift.String?
    let scoreThreshold: Swift.Float?
}

extension UpdateMLModelInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case mLModelId = "MLModelId"
        case mLModelName = "MLModelName"
        case scoreThreshold = "ScoreThreshold"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mLModelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mLModelId)
        mLModelId = mLModelIdDecoded
        let mLModelNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mLModelName)
        mLModelName = mLModelNameDecoded
        let scoreThresholdDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .scoreThreshold)
        scoreThreshold = scoreThresholdDecoded
    }
}
