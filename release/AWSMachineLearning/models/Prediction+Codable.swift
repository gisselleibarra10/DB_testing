// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MachineLearningClientTypes.Prediction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case details
        case predictedLabel
        case predictedScores
        case predictedValue
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let details = details {
            var detailsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .details)
            for (dictKey0, detailsmap0) in details {
                try detailsContainer.encode(detailsmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let predictedLabel = self.predictedLabel {
            try encodeContainer.encode(predictedLabel, forKey: .predictedLabel)
        }
        if let predictedScores = predictedScores {
            var predictedScoresContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .predictedScores)
            for (dictKey0, scorevalueperlabelmap0) in predictedScores {
                try predictedScoresContainer.encode(scorevalueperlabelmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let predictedValue = self.predictedValue {
            try encodeContainer.encode(predictedValue, forKey: .predictedValue)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let predictedLabelDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .predictedLabel)
        predictedLabel = predictedLabelDecoded
        let predictedValueDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .predictedValue)
        predictedValue = predictedValueDecoded
        let predictedScoresContainer = try containerValues.decodeIfPresent([Swift.String: Swift.Float?].self, forKey: .predictedScores)
        var predictedScoresDecoded0: [Swift.String:Swift.Float]? = nil
        if let predictedScoresContainer = predictedScoresContainer {
            predictedScoresDecoded0 = [Swift.String:Swift.Float]()
            for (key0, scorevalue0) in predictedScoresContainer {
                if let scorevalue0 = scorevalue0 {
                    predictedScoresDecoded0?[key0] = scorevalue0
                }
            }
        }
        predictedScores = predictedScoresDecoded0
        let detailsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .details)
        var detailsDecoded0: [Swift.String:Swift.String]? = nil
        if let detailsContainer = detailsContainer {
            detailsDecoded0 = [Swift.String:Swift.String]()
            for (key0, detailsvalue0) in detailsContainer {
                if let detailsvalue0 = detailsvalue0 {
                    detailsDecoded0?[key0] = detailsvalue0
                }
            }
        }
        details = detailsDecoded0
    }
}
