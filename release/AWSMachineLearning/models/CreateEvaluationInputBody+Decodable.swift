// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateEvaluationInputBody: Swift.Equatable {
    let evaluationId: Swift.String?
    let evaluationName: Swift.String?
    let mLModelId: Swift.String?
    let evaluationDataSourceId: Swift.String?
}

extension CreateEvaluationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case evaluationDataSourceId = "EvaluationDataSourceId"
        case evaluationId = "EvaluationId"
        case evaluationName = "EvaluationName"
        case mLModelId = "MLModelId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let evaluationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .evaluationId)
        evaluationId = evaluationIdDecoded
        let evaluationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .evaluationName)
        evaluationName = evaluationNameDecoded
        let mLModelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mLModelId)
        mLModelId = mLModelIdDecoded
        let evaluationDataSourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .evaluationDataSourceId)
        evaluationDataSourceId = evaluationDataSourceIdDecoded
    }
}
