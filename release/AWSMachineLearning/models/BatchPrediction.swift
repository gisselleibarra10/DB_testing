// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MachineLearningClientTypes {
    /// Represents the output of a GetBatchPrediction operation. The content consists of the detailed metadata, the status, and the data file information of a Batch Prediction.
    public struct BatchPrediction: Swift.Equatable {
        /// The ID of the DataSource that points to the group of observations to predict.
        public var batchPredictionDataSourceId: Swift.String?
        /// The ID assigned to the BatchPrediction at creation. This value should be identical to the value of the BatchPredictionID in the request.
        public var batchPredictionId: Swift.String?
        /// Long integer type that is a 64-bit signed number.
        public var computeTime: Swift.Int?
        /// The time that the BatchPrediction was created. The time is expressed in epoch time.
        public var createdAt: ClientRuntime.Date?
        /// The AWS user account that invoked the BatchPrediction. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.
        public var createdByIamUser: Swift.String?
        /// A timestamp represented in epoch time.
        public var finishedAt: ClientRuntime.Date?
        /// The location of the data file or directory in Amazon Simple Storage Service (Amazon S3).
        public var inputDataLocationS3: Swift.String?
        /// Long integer type that is a 64-bit signed number.
        public var invalidRecordCount: Swift.Int?
        /// The time of the most recent edit to the BatchPrediction. The time is expressed in epoch time.
        public var lastUpdatedAt: ClientRuntime.Date?
        /// The ID of the MLModel that generated predictions for the BatchPrediction request.
        public var mLModelId: Swift.String?
        /// A description of the most recent details about processing the batch prediction request.
        public var message: Swift.String?
        /// A user-supplied name or description of the BatchPrediction.
        public var name: Swift.String?
        /// The location of an Amazon S3 bucket or directory to receive the operation results. The following substrings are not allowed in the s3 key portion of the outputURI field: ':', '//', '/./', '/../'.
        public var outputUri: Swift.String?
        /// A timestamp represented in epoch time.
        public var startedAt: ClientRuntime.Date?
        /// The status of the BatchPrediction. This element can have one of the following values:
        ///
        /// * PENDING - Amazon Machine Learning (Amazon ML) submitted a request to generate predictions for a batch of observations.
        ///
        /// * INPROGRESS - The process is underway.
        ///
        /// * FAILED - The request to perform a batch prediction did not run to completion. It is not usable.
        ///
        /// * COMPLETED - The batch prediction process completed successfully.
        ///
        /// * DELETED - The BatchPrediction is marked as deleted. It is not usable.
        public var status: MachineLearningClientTypes.EntityStatus?
        /// Long integer type that is a 64-bit signed number.
        public var totalRecordCount: Swift.Int?

        public init (
            batchPredictionDataSourceId: Swift.String? = nil,
            batchPredictionId: Swift.String? = nil,
            computeTime: Swift.Int? = nil,
            createdAt: ClientRuntime.Date? = nil,
            createdByIamUser: Swift.String? = nil,
            finishedAt: ClientRuntime.Date? = nil,
            inputDataLocationS3: Swift.String? = nil,
            invalidRecordCount: Swift.Int? = nil,
            lastUpdatedAt: ClientRuntime.Date? = nil,
            mLModelId: Swift.String? = nil,
            message: Swift.String? = nil,
            name: Swift.String? = nil,
            outputUri: Swift.String? = nil,
            startedAt: ClientRuntime.Date? = nil,
            status: MachineLearningClientTypes.EntityStatus? = nil,
            totalRecordCount: Swift.Int? = nil
        )
        {
            self.batchPredictionDataSourceId = batchPredictionDataSourceId
            self.batchPredictionId = batchPredictionId
            self.computeTime = computeTime
            self.createdAt = createdAt
            self.createdByIamUser = createdByIamUser
            self.finishedAt = finishedAt
            self.inputDataLocationS3 = inputDataLocationS3
            self.invalidRecordCount = invalidRecordCount
            self.lastUpdatedAt = lastUpdatedAt
            self.mLModelId = mLModelId
            self.message = message
            self.name = name
            self.outputUri = outputUri
            self.startedAt = startedAt
            self.status = status
            self.totalRecordCount = totalRecordCount
        }
    }

}
