// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMLModelInputBody: Swift.Equatable {
    let mLModelId: Swift.String?
    let verbose: Swift.Bool
}

extension GetMLModelInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case mLModelId = "MLModelId"
        case verbose = "Verbose"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mLModelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mLModelId)
        mLModelId = mLModelIdDecoded
        let verboseDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .verbose) ?? false
        verbose = verboseDecoded
    }
}
