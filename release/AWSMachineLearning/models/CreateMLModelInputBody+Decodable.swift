// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateMLModelInputBody: Swift.Equatable {
    let mLModelId: Swift.String?
    let mLModelName: Swift.String?
    let mLModelType: MachineLearningClientTypes.MLModelType?
    let parameters: [Swift.String:Swift.String]?
    let trainingDataSourceId: Swift.String?
    let recipe: Swift.String?
    let recipeUri: Swift.String?
}

extension CreateMLModelInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case mLModelId = "MLModelId"
        case mLModelName = "MLModelName"
        case mLModelType = "MLModelType"
        case parameters = "Parameters"
        case recipe = "Recipe"
        case recipeUri = "RecipeUri"
        case trainingDataSourceId = "TrainingDataSourceId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mLModelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mLModelId)
        mLModelId = mLModelIdDecoded
        let mLModelNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mLModelName)
        mLModelName = mLModelNameDecoded
        let mLModelTypeDecoded = try containerValues.decodeIfPresent(MachineLearningClientTypes.MLModelType.self, forKey: .mLModelType)
        mLModelType = mLModelTypeDecoded
        let parametersContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .parameters)
        var parametersDecoded0: [Swift.String:Swift.String]? = nil
        if let parametersContainer = parametersContainer {
            parametersDecoded0 = [Swift.String:Swift.String]()
            for (key0, stringtype0) in parametersContainer {
                if let stringtype0 = stringtype0 {
                    parametersDecoded0?[key0] = stringtype0
                }
            }
        }
        parameters = parametersDecoded0
        let trainingDataSourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trainingDataSourceId)
        trainingDataSourceId = trainingDataSourceIdDecoded
        let recipeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recipe)
        recipe = recipeDecoded
        let recipeUriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recipeUri)
        recipeUri = recipeUriDecoded
    }
}
