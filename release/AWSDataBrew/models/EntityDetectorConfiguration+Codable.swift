// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataBrewClientTypes.EntityDetectorConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowedStatistics = "AllowedStatistics"
        case entityTypes = "EntityTypes"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allowedStatistics = allowedStatistics {
            var allowedStatisticsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .allowedStatistics)
            for allowedstatisticlist0 in allowedStatistics {
                try allowedStatisticsContainer.encode(allowedstatisticlist0)
            }
        }
        if let entityTypes = entityTypes {
            var entityTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .entityTypes)
            for entitytypelist0 in entityTypes {
                try entityTypesContainer.encode(entitytypelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entityTypesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .entityTypes)
        var entityTypesDecoded0:[Swift.String]? = nil
        if let entityTypesContainer = entityTypesContainer {
            entityTypesDecoded0 = [Swift.String]()
            for string0 in entityTypesContainer {
                if let string0 = string0 {
                    entityTypesDecoded0?.append(string0)
                }
            }
        }
        entityTypes = entityTypesDecoded0
        let allowedStatisticsContainer = try containerValues.decodeIfPresent([DataBrewClientTypes.AllowedStatistics?].self, forKey: .allowedStatistics)
        var allowedStatisticsDecoded0:[DataBrewClientTypes.AllowedStatistics]? = nil
        if let allowedStatisticsContainer = allowedStatisticsContainer {
            allowedStatisticsDecoded0 = [DataBrewClientTypes.AllowedStatistics]()
            for structure0 in allowedStatisticsContainer {
                if let structure0 = structure0 {
                    allowedStatisticsDecoded0?.append(structure0)
                }
            }
        }
        allowedStatistics = allowedStatisticsDecoded0
    }
}
