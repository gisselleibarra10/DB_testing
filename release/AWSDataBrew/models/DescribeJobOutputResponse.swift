// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeJobOutputResponse: Swift.Equatable {
    /// The date and time that the job was created.
    public var createDate: ClientRuntime.Date?
    /// The identifier (user name) of the user associated with the creation of the job.
    public var createdBy: Swift.String?
    /// One or more artifacts that represent the Glue Data Catalog output from running the job.
    public var dataCatalogOutputs: [DataBrewClientTypes.DataCatalogOutput]?
    /// Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
    public var databaseOutputs: [DataBrewClientTypes.DatabaseOutput]?
    /// The dataset that the job acts upon.
    public var datasetName: Swift.String?
    /// The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.
    public var encryptionKeyArn: Swift.String?
    /// The encryption mode for the job, which can be one of the following:
    ///
    /// * SSE-KMS - Server-side encryption with keys managed by KMS.
    ///
    /// * SSE-S3 - Server-side encryption with keys managed by Amazon S3.
    public var encryptionMode: DataBrewClientTypes.EncryptionMode?
    /// Sample configuration for profile jobs only. Determines the number of rows on which the profile job will be executed.
    public var jobSample: DataBrewClientTypes.JobSample?
    /// The identifier (user name) of the user who last modified the job.
    public var lastModifiedBy: Swift.String?
    /// The date and time that the job was last modified.
    public var lastModifiedDate: ClientRuntime.Date?
    /// Indicates whether Amazon CloudWatch logging is enabled for this job.
    public var logSubscription: DataBrewClientTypes.LogSubscription?
    /// The maximum number of compute nodes that DataBrew can consume when the job processes data.
    public var maxCapacity: Swift.Int
    /// The maximum number of times to retry the job after a job run fails.
    public var maxRetries: Swift.Int
    /// The name of the job.
    /// This member is required.
    public var name: Swift.String?
    /// One or more artifacts that represent the output from running the job.
    public var outputs: [DataBrewClientTypes.Output]?
    /// Configuration for profile jobs. Used to select columns, do evaluations, and override default parameters of evaluations. When configuration is null, the profile job will run with default settings.
    public var profileConfiguration: DataBrewClientTypes.ProfileConfiguration?
    /// The DataBrew project associated with this job.
    public var projectName: Swift.String?
    /// Represents the name and version of a DataBrew recipe.
    public var recipeReference: DataBrewClientTypes.RecipeReference?
    /// The Amazon Resource Name (ARN) of the job.
    public var resourceArn: Swift.String?
    /// The ARN of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
    public var roleArn: Swift.String?
    /// Metadata tags associated with this job.
    public var tags: [Swift.String:Swift.String]?
    /// The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of TIMEOUT.
    public var timeout: Swift.Int
    /// The job type, which must be one of the following:
    ///
    /// * PROFILE - The job analyzes the dataset to determine its size, data types, data distribution, and more.
    ///
    /// * RECIPE - The job applies one or more transformations to a dataset.
    public var type: DataBrewClientTypes.JobType?
    /// List of validation configurations that are applied to the profile job.
    public var validationConfigurations: [DataBrewClientTypes.ValidationConfiguration]?

    public init (
        createDate: ClientRuntime.Date? = nil,
        createdBy: Swift.String? = nil,
        dataCatalogOutputs: [DataBrewClientTypes.DataCatalogOutput]? = nil,
        databaseOutputs: [DataBrewClientTypes.DatabaseOutput]? = nil,
        datasetName: Swift.String? = nil,
        encryptionKeyArn: Swift.String? = nil,
        encryptionMode: DataBrewClientTypes.EncryptionMode? = nil,
        jobSample: DataBrewClientTypes.JobSample? = nil,
        lastModifiedBy: Swift.String? = nil,
        lastModifiedDate: ClientRuntime.Date? = nil,
        logSubscription: DataBrewClientTypes.LogSubscription? = nil,
        maxCapacity: Swift.Int = 0,
        maxRetries: Swift.Int = 0,
        name: Swift.String? = nil,
        outputs: [DataBrewClientTypes.Output]? = nil,
        profileConfiguration: DataBrewClientTypes.ProfileConfiguration? = nil,
        projectName: Swift.String? = nil,
        recipeReference: DataBrewClientTypes.RecipeReference? = nil,
        resourceArn: Swift.String? = nil,
        roleArn: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        timeout: Swift.Int = 0,
        type: DataBrewClientTypes.JobType? = nil,
        validationConfigurations: [DataBrewClientTypes.ValidationConfiguration]? = nil
    )
    {
        self.createDate = createDate
        self.createdBy = createdBy
        self.dataCatalogOutputs = dataCatalogOutputs
        self.databaseOutputs = databaseOutputs
        self.datasetName = datasetName
        self.encryptionKeyArn = encryptionKeyArn
        self.encryptionMode = encryptionMode
        self.jobSample = jobSample
        self.lastModifiedBy = lastModifiedBy
        self.lastModifiedDate = lastModifiedDate
        self.logSubscription = logSubscription
        self.maxCapacity = maxCapacity
        self.maxRetries = maxRetries
        self.name = name
        self.outputs = outputs
        self.profileConfiguration = profileConfiguration
        self.projectName = projectName
        self.recipeReference = recipeReference
        self.resourceArn = resourceArn
        self.roleArn = roleArn
        self.tags = tags
        self.timeout = timeout
        self.type = type
        self.validationConfigurations = validationConfigurations
    }
}
