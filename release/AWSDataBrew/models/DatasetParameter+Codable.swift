// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataBrewClientTypes.DatasetParameter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createColumn = "CreateColumn"
        case datetimeOptions = "DatetimeOptions"
        case filter = "Filter"
        case name = "Name"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if createColumn != false {
            try encodeContainer.encode(createColumn, forKey: .createColumn)
        }
        if let datetimeOptions = self.datetimeOptions {
            try encodeContainer.encode(datetimeOptions, forKey: .datetimeOptions)
        }
        if let filter = self.filter {
            try encodeContainer.encode(filter, forKey: .filter)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.ParameterType.self, forKey: .type)
        type = typeDecoded
        let datetimeOptionsDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.DatetimeOptions.self, forKey: .datetimeOptions)
        datetimeOptions = datetimeOptionsDecoded
        let createColumnDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .createColumn) ?? false
        createColumn = createColumnDecoded
        let filterDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.FilterExpression.self, forKey: .filter)
        filter = filterDecoded
    }
}
