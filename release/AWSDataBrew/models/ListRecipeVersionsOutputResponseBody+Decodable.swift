// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecipeVersionsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let recipes: [DataBrewClientTypes.Recipe]?
}

extension ListRecipeVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case recipes = "Recipes"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let recipesContainer = try containerValues.decodeIfPresent([DataBrewClientTypes.Recipe?].self, forKey: .recipes)
        var recipesDecoded0:[DataBrewClientTypes.Recipe]? = nil
        if let recipesContainer = recipesContainer {
            recipesDecoded0 = [DataBrewClientTypes.Recipe]()
            for structure0 in recipesContainer {
                if let structure0 = structure0 {
                    recipesDecoded0?.append(structure0)
                }
            }
        }
        recipes = recipesDecoded0
    }
}
