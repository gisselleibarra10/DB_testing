// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataBrewClientTypes.ViewFrame: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case analytics = "Analytics"
        case columnRange = "ColumnRange"
        case hiddenColumns = "HiddenColumns"
        case rowRange = "RowRange"
        case startColumnIndex = "StartColumnIndex"
        case startRowIndex = "StartRowIndex"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let analytics = self.analytics {
            try encodeContainer.encode(analytics.rawValue, forKey: .analytics)
        }
        if let columnRange = self.columnRange {
            try encodeContainer.encode(columnRange, forKey: .columnRange)
        }
        if let hiddenColumns = hiddenColumns {
            var hiddenColumnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .hiddenColumns)
            for hiddencolumnlist0 in hiddenColumns {
                try hiddenColumnsContainer.encode(hiddencolumnlist0)
            }
        }
        if let rowRange = self.rowRange {
            try encodeContainer.encode(rowRange, forKey: .rowRange)
        }
        if let startColumnIndex = self.startColumnIndex {
            try encodeContainer.encode(startColumnIndex, forKey: .startColumnIndex)
        }
        if let startRowIndex = self.startRowIndex {
            try encodeContainer.encode(startRowIndex, forKey: .startRowIndex)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startColumnIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .startColumnIndex)
        startColumnIndex = startColumnIndexDecoded
        let columnRangeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .columnRange)
        columnRange = columnRangeDecoded
        let hiddenColumnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .hiddenColumns)
        var hiddenColumnsDecoded0:[Swift.String]? = nil
        if let hiddenColumnsContainer = hiddenColumnsContainer {
            hiddenColumnsDecoded0 = [Swift.String]()
            for string0 in hiddenColumnsContainer {
                if let string0 = string0 {
                    hiddenColumnsDecoded0?.append(string0)
                }
            }
        }
        hiddenColumns = hiddenColumnsDecoded0
        let startRowIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .startRowIndex)
        startRowIndex = startRowIndexDecoded
        let rowRangeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .rowRange)
        rowRange = rowRangeDecoded
        let analyticsDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.AnalyticsMode.self, forKey: .analytics)
        analytics = analyticsDecoded
    }
}
