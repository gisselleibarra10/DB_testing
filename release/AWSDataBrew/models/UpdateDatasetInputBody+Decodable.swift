// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDatasetInputBody: Swift.Equatable {
    let format: DataBrewClientTypes.InputFormat?
    let formatOptions: DataBrewClientTypes.FormatOptions?
    let input: DataBrewClientTypes.Input?
    let pathOptions: DataBrewClientTypes.PathOptions?
}

extension UpdateDatasetInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case format = "Format"
        case formatOptions = "FormatOptions"
        case input = "Input"
        case pathOptions = "PathOptions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let formatDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.InputFormat.self, forKey: .format)
        format = formatDecoded
        let formatOptionsDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.FormatOptions.self, forKey: .formatOptions)
        formatOptions = formatOptionsDecoded
        let inputDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.Input.self, forKey: .input)
        input = inputDecoded
        let pathOptionsDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.PathOptions.self, forKey: .pathOptions)
        pathOptions = pathOptionsDecoded
    }
}
