// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataBrewClientTypes.PathOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filesLimit = "FilesLimit"
        case lastModifiedDateCondition = "LastModifiedDateCondition"
        case parameters = "Parameters"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filesLimit = self.filesLimit {
            try encodeContainer.encode(filesLimit, forKey: .filesLimit)
        }
        if let lastModifiedDateCondition = self.lastModifiedDateCondition {
            try encodeContainer.encode(lastModifiedDateCondition, forKey: .lastModifiedDateCondition)
        }
        if let parameters = parameters {
            var parametersContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .parameters)
            for (dictKey0, pathparametersmap0) in parameters {
                try parametersContainer.encode(pathparametersmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lastModifiedDateConditionDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.FilterExpression.self, forKey: .lastModifiedDateCondition)
        lastModifiedDateCondition = lastModifiedDateConditionDecoded
        let filesLimitDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.FilesLimit.self, forKey: .filesLimit)
        filesLimit = filesLimitDecoded
        let parametersContainer = try containerValues.decodeIfPresent([Swift.String: DataBrewClientTypes.DatasetParameter?].self, forKey: .parameters)
        var parametersDecoded0: [Swift.String:DataBrewClientTypes.DatasetParameter]? = nil
        if let parametersContainer = parametersContainer {
            parametersDecoded0 = [Swift.String:DataBrewClientTypes.DatasetParameter]()
            for (key0, datasetparameter0) in parametersContainer {
                if let datasetparameter0 = datasetparameter0 {
                    parametersDecoded0?[key0] = datasetparameter0
                }
            }
        }
        parameters = parametersDecoded0
    }
}
