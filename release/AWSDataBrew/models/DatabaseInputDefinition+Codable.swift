// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataBrewClientTypes.DatabaseInputDefinition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case databaseTableName = "DatabaseTableName"
        case glueConnectionName = "GlueConnectionName"
        case queryString = "QueryString"
        case tempDirectory = "TempDirectory"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let databaseTableName = self.databaseTableName {
            try encodeContainer.encode(databaseTableName, forKey: .databaseTableName)
        }
        if let glueConnectionName = self.glueConnectionName {
            try encodeContainer.encode(glueConnectionName, forKey: .glueConnectionName)
        }
        if let queryString = self.queryString {
            try encodeContainer.encode(queryString, forKey: .queryString)
        }
        if let tempDirectory = self.tempDirectory {
            try encodeContainer.encode(tempDirectory, forKey: .tempDirectory)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let glueConnectionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .glueConnectionName)
        glueConnectionName = glueConnectionNameDecoded
        let databaseTableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .databaseTableName)
        databaseTableName = databaseTableNameDecoded
        let tempDirectoryDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.S3Location.self, forKey: .tempDirectory)
        tempDirectory = tempDirectoryDecoded
        let queryStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryString)
        queryString = queryStringDecoded
    }
}
