// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DataBrewClientTypes {
    public enum OutputFormat: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case avro
        case csv
        case glueparquet
        case json
        case orc
        case parquet
        case tableauhyper
        case xml
        case sdkUnknown(Swift.String)

        public static var allCases: [OutputFormat] {
            return [
                .avro,
                .csv,
                .glueparquet,
                .json,
                .orc,
                .parquet,
                .tableauhyper,
                .xml,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .avro: return "AVRO"
            case .csv: return "CSV"
            case .glueparquet: return "GLUEPARQUET"
            case .json: return "JSON"
            case .orc: return "ORC"
            case .parquet: return "PARQUET"
            case .tableauhyper: return "TABLEAUHYPER"
            case .xml: return "XML"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = OutputFormat(rawValue: rawValue) ?? OutputFormat.sdkUnknown(rawValue)
        }
    }
}
