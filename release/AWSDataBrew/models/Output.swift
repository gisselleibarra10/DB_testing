// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DataBrewClientTypes {
    /// Represents options that specify how and where in Amazon S3 DataBrew writes the output generated by recipe jobs or profile jobs.
    public struct Output: Swift.Equatable {
        /// The compression algorithm used to compress the output text of the job.
        public var compressionFormat: DataBrewClientTypes.CompressionFormat?
        /// The data format of the output of the job.
        public var format: DataBrewClientTypes.OutputFormat?
        /// Represents options that define how DataBrew formats job output files.
        public var formatOptions: DataBrewClientTypes.OutputFormatOptions?
        /// The location in Amazon S3 where the job writes its output.
        /// This member is required.
        public var location: DataBrewClientTypes.S3Location?
        /// Maximum number of files to be generated by the job and written to the output folder. For output partitioned by column(s), the MaxOutputFiles value is the maximum number of files per partition.
        public var maxOutputFiles: Swift.Int?
        /// A value that, if true, means that any data in the location specified for output is overwritten with new output.
        public var overwrite: Swift.Bool
        /// The names of one or more partition columns for the output of the job.
        public var partitionColumns: [Swift.String]?

        public init (
            compressionFormat: DataBrewClientTypes.CompressionFormat? = nil,
            format: DataBrewClientTypes.OutputFormat? = nil,
            formatOptions: DataBrewClientTypes.OutputFormatOptions? = nil,
            location: DataBrewClientTypes.S3Location? = nil,
            maxOutputFiles: Swift.Int? = nil,
            overwrite: Swift.Bool = false,
            partitionColumns: [Swift.String]? = nil
        )
        {
            self.compressionFormat = compressionFormat
            self.format = format
            self.formatOptions = formatOptions
            self.location = location
            self.maxOutputFiles = maxOutputFiles
            self.overwrite = overwrite
            self.partitionColumns = partitionColumns
        }
    }

}
