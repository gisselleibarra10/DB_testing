// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataBrewClientTypes.ValidationConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case rulesetArn = "RulesetArn"
        case validationMode = "ValidationMode"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let rulesetArn = self.rulesetArn {
            try encodeContainer.encode(rulesetArn, forKey: .rulesetArn)
        }
        if let validationMode = self.validationMode {
            try encodeContainer.encode(validationMode.rawValue, forKey: .validationMode)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rulesetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rulesetArn)
        rulesetArn = rulesetArnDecoded
        let validationModeDecoded = try containerValues.decodeIfPresent(DataBrewClientTypes.ValidationMode.self, forKey: .validationMode)
        validationMode = validationModeDecoded
    }
}
