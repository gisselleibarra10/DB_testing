// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDatasetOutputResponse: Swift.Equatable {
    /// The date and time that the dataset was created.
    public var createDate: ClientRuntime.Date?
    /// The identifier (user name) of the user who created the dataset.
    public var createdBy: Swift.String?
    /// The file format of a dataset that is created from an Amazon S3 file or folder.
    public var format: DataBrewClientTypes.InputFormat?
    /// Represents a set of options that define the structure of either comma-separated value (CSV), Excel, or JSON input.
    public var formatOptions: DataBrewClientTypes.FormatOptions?
    /// Represents information on how DataBrew can find data, in either the Glue Data Catalog or Amazon S3.
    /// This member is required.
    public var input: DataBrewClientTypes.Input?
    /// The identifier (user name) of the user who last modified the dataset.
    public var lastModifiedBy: Swift.String?
    /// The date and time that the dataset was last modified.
    public var lastModifiedDate: ClientRuntime.Date?
    /// The name of the dataset.
    /// This member is required.
    public var name: Swift.String?
    /// A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.
    public var pathOptions: DataBrewClientTypes.PathOptions?
    /// The Amazon Resource Name (ARN) of the dataset.
    public var resourceArn: Swift.String?
    /// The location of the data for this dataset, Amazon S3 or the Glue Data Catalog.
    public var source: DataBrewClientTypes.Source?
    /// Metadata tags associated with this dataset.
    public var tags: [Swift.String:Swift.String]?

    public init (
        createDate: ClientRuntime.Date? = nil,
        createdBy: Swift.String? = nil,
        format: DataBrewClientTypes.InputFormat? = nil,
        formatOptions: DataBrewClientTypes.FormatOptions? = nil,
        input: DataBrewClientTypes.Input? = nil,
        lastModifiedBy: Swift.String? = nil,
        lastModifiedDate: ClientRuntime.Date? = nil,
        name: Swift.String? = nil,
        pathOptions: DataBrewClientTypes.PathOptions? = nil,
        resourceArn: Swift.String? = nil,
        source: DataBrewClientTypes.Source? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.createDate = createDate
        self.createdBy = createdBy
        self.format = format
        self.formatOptions = formatOptions
        self.input = input
        self.lastModifiedBy = lastModifiedBy
        self.lastModifiedDate = lastModifiedDate
        self.name = name
        self.pathOptions = pathOptions
        self.resourceArn = resourceArn
        self.source = source
        self.tags = tags
    }
}
