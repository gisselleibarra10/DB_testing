// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRulesetsOutputResponseBody: Swift.Equatable {
    let rulesets: [DataBrewClientTypes.RulesetItem]?
    let nextToken: Swift.String?
}

extension ListRulesetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case rulesets = "Rulesets"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rulesetsContainer = try containerValues.decodeIfPresent([DataBrewClientTypes.RulesetItem?].self, forKey: .rulesets)
        var rulesetsDecoded0:[DataBrewClientTypes.RulesetItem]? = nil
        if let rulesetsContainer = rulesetsContainer {
            rulesetsDecoded0 = [DataBrewClientTypes.RulesetItem]()
            for structure0 in rulesetsContainer {
                if let structure0 = structure0 {
                    rulesetsDecoded0?.append(structure0)
                }
            }
        }
        rulesets = rulesetsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
