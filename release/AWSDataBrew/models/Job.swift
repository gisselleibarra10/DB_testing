// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataBrewClientTypes {
    /// Represents all of the attributes of a DataBrew job.
    public struct Job: Swift.Equatable {
        /// The ID of the Amazon Web Services account that owns the job.
        public var accountId: Swift.String?
        /// The date and time that the job was created.
        public var createDate: ClientRuntime.Date?
        /// The Amazon Resource Name (ARN) of the user who created the job.
        public var createdBy: Swift.String?
        /// One or more artifacts that represent the Glue Data Catalog output from running the job.
        public var dataCatalogOutputs: [DataBrewClientTypes.DataCatalogOutput]?
        /// Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
        public var databaseOutputs: [DataBrewClientTypes.DatabaseOutput]?
        /// A dataset that the job is to process.
        public var datasetName: Swift.String?
        /// The Amazon Resource Name (ARN) of an encryption key that is used to protect the job output. For more information, see [Encrypting data written by DataBrew jobs](https://docs.aws.amazon.com/databrew/latest/dg/encryption-security-configuration.html)
        public var encryptionKeyArn: Swift.String?
        /// The encryption mode for the job, which can be one of the following:
        ///
        /// * SSE-KMS - Server-side encryption with keys managed by KMS.
        ///
        /// * SSE-S3 - Server-side encryption with keys managed by Amazon S3.
        public var encryptionMode: DataBrewClientTypes.EncryptionMode?
        /// A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a JobSample value isn't provided, the default value is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.
        public var jobSample: DataBrewClientTypes.JobSample?
        /// The Amazon Resource Name (ARN) of the user who last modified the job.
        public var lastModifiedBy: Swift.String?
        /// The modification date and time of the job.
        public var lastModifiedDate: ClientRuntime.Date?
        /// The current status of Amazon CloudWatch logging for the job.
        public var logSubscription: DataBrewClientTypes.LogSubscription?
        /// The maximum number of nodes that can be consumed when the job processes data.
        public var maxCapacity: Swift.Int
        /// The maximum number of times to retry the job after a job run fails.
        public var maxRetries: Swift.Int
        /// The unique name of the job.
        /// This member is required.
        public var name: Swift.String?
        /// One or more artifacts that represent output from running the job.
        public var outputs: [DataBrewClientTypes.Output]?
        /// The name of the project that the job is associated with.
        public var projectName: Swift.String?
        /// A set of steps that the job runs.
        public var recipeReference: DataBrewClientTypes.RecipeReference?
        /// The unique Amazon Resource Name (ARN) for the job.
        public var resourceArn: Swift.String?
        /// The Amazon Resource Name (ARN) of the role to be assumed for this job.
        public var roleArn: Swift.String?
        /// Metadata tags that have been applied to the job.
        public var tags: [Swift.String:Swift.String]?
        /// The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of TIMEOUT.
        public var timeout: Swift.Int
        /// The job type of the job, which must be one of the following:
        ///
        /// * PROFILE - A job to analyze a dataset, to determine its size, data types, data distribution, and more.
        ///
        /// * RECIPE - A job to apply one or more transformations to a dataset.
        public var type: DataBrewClientTypes.JobType?
        /// List of validation configurations that are applied to the profile job.
        public var validationConfigurations: [DataBrewClientTypes.ValidationConfiguration]?

        public init (
            accountId: Swift.String? = nil,
            createDate: ClientRuntime.Date? = nil,
            createdBy: Swift.String? = nil,
            dataCatalogOutputs: [DataBrewClientTypes.DataCatalogOutput]? = nil,
            databaseOutputs: [DataBrewClientTypes.DatabaseOutput]? = nil,
            datasetName: Swift.String? = nil,
            encryptionKeyArn: Swift.String? = nil,
            encryptionMode: DataBrewClientTypes.EncryptionMode? = nil,
            jobSample: DataBrewClientTypes.JobSample? = nil,
            lastModifiedBy: Swift.String? = nil,
            lastModifiedDate: ClientRuntime.Date? = nil,
            logSubscription: DataBrewClientTypes.LogSubscription? = nil,
            maxCapacity: Swift.Int = 0,
            maxRetries: Swift.Int = 0,
            name: Swift.String? = nil,
            outputs: [DataBrewClientTypes.Output]? = nil,
            projectName: Swift.String? = nil,
            recipeReference: DataBrewClientTypes.RecipeReference? = nil,
            resourceArn: Swift.String? = nil,
            roleArn: Swift.String? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            timeout: Swift.Int = 0,
            type: DataBrewClientTypes.JobType? = nil,
            validationConfigurations: [DataBrewClientTypes.ValidationConfiguration]? = nil
        )
        {
            self.accountId = accountId
            self.createDate = createDate
            self.createdBy = createdBy
            self.dataCatalogOutputs = dataCatalogOutputs
            self.databaseOutputs = databaseOutputs
            self.datasetName = datasetName
            self.encryptionKeyArn = encryptionKeyArn
            self.encryptionMode = encryptionMode
            self.jobSample = jobSample
            self.lastModifiedBy = lastModifiedBy
            self.lastModifiedDate = lastModifiedDate
            self.logSubscription = logSubscription
            self.maxCapacity = maxCapacity
            self.maxRetries = maxRetries
            self.name = name
            self.outputs = outputs
            self.projectName = projectName
            self.recipeReference = recipeReference
            self.resourceArn = resourceArn
            self.roleArn = roleArn
            self.tags = tags
            self.timeout = timeout
            self.type = type
            self.validationConfigurations = validationConfigurations
        }
    }

}
