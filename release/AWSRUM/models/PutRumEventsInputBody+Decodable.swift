// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutRumEventsInputBody: Swift.Equatable {
    let batchId: Swift.String?
    let appMonitorDetails: RumClientTypes.AppMonitorDetails?
    let userDetails: RumClientTypes.UserDetails?
    let rumEvents: [RumClientTypes.RumEvent]?
}

extension PutRumEventsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appMonitorDetails = "AppMonitorDetails"
        case batchId = "BatchId"
        case rumEvents = "RumEvents"
        case userDetails = "UserDetails"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let batchIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .batchId)
        batchId = batchIdDecoded
        let appMonitorDetailsDecoded = try containerValues.decodeIfPresent(RumClientTypes.AppMonitorDetails.self, forKey: .appMonitorDetails)
        appMonitorDetails = appMonitorDetailsDecoded
        let userDetailsDecoded = try containerValues.decodeIfPresent(RumClientTypes.UserDetails.self, forKey: .userDetails)
        userDetails = userDetailsDecoded
        let rumEventsContainer = try containerValues.decodeIfPresent([RumClientTypes.RumEvent?].self, forKey: .rumEvents)
        var rumEventsDecoded0:[RumClientTypes.RumEvent]? = nil
        if let rumEventsContainer = rumEventsContainer {
            rumEventsDecoded0 = [RumClientTypes.RumEvent]()
            for structure0 in rumEventsContainer {
                if let structure0 = structure0 {
                    rumEventsDecoded0?.append(structure0)
                }
            }
        }
        rumEvents = rumEventsDecoded0
    }
}
