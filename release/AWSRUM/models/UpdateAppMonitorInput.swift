// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateAppMonitorInput: Swift.Equatable {
    /// A structure that contains much of the configuration data for the app monitor. If you are using Amazon Cognito for authorization, you must include this structure in your request, and it must include the ID of the Amazon Cognito identity pool to use for authorization. If you don't include AppMonitorConfiguration, you must set up your own authorization method. For more information, see [Authorize your application to send data to Amazon Web Services](https://docs.aws.amazon.com/monitoring/CloudWatch-RUM-get-started-authorization.html).
    public var appMonitorConfiguration: RumClientTypes.AppMonitorConfiguration?
    /// Data collected by RUM is kept by RUM for 30 days and then deleted. This parameter specifies whether RUM sends a copy of this telemetry data to Amazon CloudWatch Logs in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur Amazon CloudWatch Logs charges.
    public var cwLogEnabled: Swift.Bool?
    /// The top-level internet domain name for which your application has administrative authority.
    public var domain: Swift.String?
    /// The name of the app monitor to update.
    /// This member is required.
    public var name: Swift.String?

    public init (
        appMonitorConfiguration: RumClientTypes.AppMonitorConfiguration? = nil,
        cwLogEnabled: Swift.Bool? = nil,
        domain: Swift.String? = nil,
        name: Swift.String? = nil
    )
    {
        self.appMonitorConfiguration = appMonitorConfiguration
        self.cwLogEnabled = cwLogEnabled
        self.domain = domain
        self.name = name
    }
}
