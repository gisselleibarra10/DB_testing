// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RumClientTypes {
    /// A RUM app monitor collects telemetry data from your application and sends that data to RUM. The data includes performance and reliability information such as page load time, client-side errors, and user behavior.
    public struct AppMonitor: Swift.Equatable {
        /// A structure that contains much of the configuration data for the app monitor.
        public var appMonitorConfiguration: RumClientTypes.AppMonitorConfiguration?
        /// The date and time that this app monitor was created.
        public var created: Swift.String?
        /// A structure that contains information about whether this app monitor stores a copy of the telemetry data that RUM collects using CloudWatch Logs.
        public var dataStorage: RumClientTypes.DataStorage?
        /// The top-level internet domain name for which your application has administrative authority.
        public var domain: Swift.String?
        /// The unique ID of this app monitor.
        public var id: Swift.String?
        /// The date and time of the most recent changes to this app monitor's configuration.
        public var lastModified: Swift.String?
        /// The name of the app monitor.
        public var name: Swift.String?
        /// The current state of the app monitor.
        public var state: RumClientTypes.StateEnum?
        /// The list of tag keys and values associated with this app monitor.
        public var tags: [Swift.String:Swift.String]?

        public init (
            appMonitorConfiguration: RumClientTypes.AppMonitorConfiguration? = nil,
            created: Swift.String? = nil,
            dataStorage: RumClientTypes.DataStorage? = nil,
            domain: Swift.String? = nil,
            id: Swift.String? = nil,
            lastModified: Swift.String? = nil,
            name: Swift.String? = nil,
            state: RumClientTypes.StateEnum? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.appMonitorConfiguration = appMonitorConfiguration
            self.created = created
            self.dataStorage = dataStorage
            self.domain = domain
            self.id = id
            self.lastModified = lastModified
            self.name = name
            self.state = state
            self.tags = tags
        }
    }

}
