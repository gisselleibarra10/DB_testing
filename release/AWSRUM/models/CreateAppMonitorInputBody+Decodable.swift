// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateAppMonitorInputBody: Swift.Equatable {
    let name: Swift.String?
    let domain: Swift.String?
    let tags: [Swift.String:Swift.String]?
    let appMonitorConfiguration: RumClientTypes.AppMonitorConfiguration?
    let cwLogEnabled: Swift.Bool?
}

extension CreateAppMonitorInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appMonitorConfiguration = "AppMonitorConfiguration"
        case cwLogEnabled = "CwLogEnabled"
        case domain = "Domain"
        case name = "Name"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let domainDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domain)
        domain = domainDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
        let appMonitorConfigurationDecoded = try containerValues.decodeIfPresent(RumClientTypes.AppMonitorConfiguration.self, forKey: .appMonitorConfiguration)
        appMonitorConfiguration = appMonitorConfigurationDecoded
        let cwLogEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .cwLogEnabled)
        cwLogEnabled = cwLogEnabledDecoded
    }
}
