// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAppMonitorsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let appMonitorSummaries: [RumClientTypes.AppMonitorSummary]?
}

extension ListAppMonitorsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appMonitorSummaries = "AppMonitorSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let appMonitorSummariesContainer = try containerValues.decodeIfPresent([RumClientTypes.AppMonitorSummary?].self, forKey: .appMonitorSummaries)
        var appMonitorSummariesDecoded0:[RumClientTypes.AppMonitorSummary]? = nil
        if let appMonitorSummariesContainer = appMonitorSummariesContainer {
            appMonitorSummariesDecoded0 = [RumClientTypes.AppMonitorSummary]()
            for structure0 in appMonitorSummariesContainer {
                if let structure0 = structure0 {
                    appMonitorSummariesDecoded0?.append(structure0)
                }
            }
        }
        appMonitorSummaries = appMonitorSummariesDecoded0
    }
}
