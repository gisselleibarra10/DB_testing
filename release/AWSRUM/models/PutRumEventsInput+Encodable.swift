// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutRumEventsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appMonitorDetails = "AppMonitorDetails"
        case batchId = "BatchId"
        case rumEvents = "RumEvents"
        case userDetails = "UserDetails"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appMonitorDetails = self.appMonitorDetails {
            try encodeContainer.encode(appMonitorDetails, forKey: .appMonitorDetails)
        }
        if let batchId = self.batchId {
            try encodeContainer.encode(batchId, forKey: .batchId)
        }
        if let rumEvents = rumEvents {
            var rumEventsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .rumEvents)
            for rumeventlist0 in rumEvents {
                try rumEventsContainer.encode(rumeventlist0)
            }
        }
        if let userDetails = self.userDetails {
            try encodeContainer.encode(userDetails, forKey: .userDetails)
        }
    }
}
