// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAcceleratorTypesOutputResponseBody: Swift.Equatable {
    let acceleratorTypes: [ElasticInferenceClientTypes.AcceleratorType]?
}

extension DescribeAcceleratorTypesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceleratorTypes
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceleratorTypesContainer = try containerValues.decodeIfPresent([ElasticInferenceClientTypes.AcceleratorType?].self, forKey: .acceleratorTypes)
        var acceleratorTypesDecoded0:[ElasticInferenceClientTypes.AcceleratorType]? = nil
        if let acceleratorTypesContainer = acceleratorTypesContainer {
            acceleratorTypesDecoded0 = [ElasticInferenceClientTypes.AcceleratorType]()
            for structure0 in acceleratorTypesContainer {
                if let structure0 = structure0 {
                    acceleratorTypesDecoded0?.append(structure0)
                }
            }
        }
        acceleratorTypes = acceleratorTypesDecoded0
    }
}
