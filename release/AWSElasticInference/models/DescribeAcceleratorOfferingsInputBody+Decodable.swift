// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAcceleratorOfferingsInputBody: Swift.Equatable {
    let locationType: ElasticInferenceClientTypes.LocationType?
    let acceleratorTypes: [Swift.String]?
}

extension DescribeAcceleratorOfferingsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceleratorTypes
        case locationType
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let locationTypeDecoded = try containerValues.decodeIfPresent(ElasticInferenceClientTypes.LocationType.self, forKey: .locationType)
        locationType = locationTypeDecoded
        let acceleratorTypesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .acceleratorTypes)
        var acceleratorTypesDecoded0:[Swift.String]? = nil
        if let acceleratorTypesContainer = acceleratorTypesContainer {
            acceleratorTypesDecoded0 = [Swift.String]()
            for string0 in acceleratorTypesContainer {
                if let string0 = string0 {
                    acceleratorTypesDecoded0?.append(string0)
                }
            }
        }
        acceleratorTypes = acceleratorTypesDecoded0
    }
}
