// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElasticInferenceClientTypes.ElasticInferenceAccelerator: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceleratorHealth
        case acceleratorId
        case acceleratorType
        case attachedResource
        case availabilityZone
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let acceleratorHealth = self.acceleratorHealth {
            try encodeContainer.encode(acceleratorHealth, forKey: .acceleratorHealth)
        }
        if let acceleratorId = self.acceleratorId {
            try encodeContainer.encode(acceleratorId, forKey: .acceleratorId)
        }
        if let acceleratorType = self.acceleratorType {
            try encodeContainer.encode(acceleratorType, forKey: .acceleratorType)
        }
        if let attachedResource = self.attachedResource {
            try encodeContainer.encode(attachedResource, forKey: .attachedResource)
        }
        if let availabilityZone = self.availabilityZone {
            try encodeContainer.encode(availabilityZone, forKey: .availabilityZone)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceleratorHealthDecoded = try containerValues.decodeIfPresent(ElasticInferenceClientTypes.ElasticInferenceAcceleratorHealth.self, forKey: .acceleratorHealth)
        acceleratorHealth = acceleratorHealthDecoded
        let acceleratorTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .acceleratorType)
        acceleratorType = acceleratorTypeDecoded
        let acceleratorIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .acceleratorId)
        acceleratorId = acceleratorIdDecoded
        let availabilityZoneDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .availabilityZone)
        availabilityZone = availabilityZoneDecoded
        let attachedResourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attachedResource)
        attachedResource = attachedResourceDecoded
    }
}
