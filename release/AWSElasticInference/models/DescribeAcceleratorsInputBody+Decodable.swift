// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAcceleratorsInputBody: Swift.Equatable {
    let acceleratorIds: [Swift.String]?
    let filters: [ElasticInferenceClientTypes.Filter]?
    let maxResults: Swift.Int
    let nextToken: Swift.String?
}

extension DescribeAcceleratorsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceleratorIds
        case filters
        case maxResults
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceleratorIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .acceleratorIds)
        var acceleratorIdsDecoded0:[Swift.String]? = nil
        if let acceleratorIdsContainer = acceleratorIdsContainer {
            acceleratorIdsDecoded0 = [Swift.String]()
            for string0 in acceleratorIdsContainer {
                if let string0 = string0 {
                    acceleratorIdsDecoded0?.append(string0)
                }
            }
        }
        acceleratorIds = acceleratorIdsDecoded0
        let filtersContainer = try containerValues.decodeIfPresent([ElasticInferenceClientTypes.Filter?].self, forKey: .filters)
        var filtersDecoded0:[ElasticInferenceClientTypes.Filter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [ElasticInferenceClientTypes.Filter]()
            for structure0 in filtersContainer {
                if let structure0 = structure0 {
                    filtersDecoded0?.append(structure0)
                }
            }
        }
        filters = filtersDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults) ?? 0
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
