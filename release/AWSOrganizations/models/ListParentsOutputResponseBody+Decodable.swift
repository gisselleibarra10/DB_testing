// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListParentsOutputResponseBody: Swift.Equatable {
    let parents: [OrganizationsClientTypes.Parent]?
    let nextToken: Swift.String?
}

extension ListParentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case parents = "Parents"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let parentsContainer = try containerValues.decodeIfPresent([OrganizationsClientTypes.Parent?].self, forKey: .parents)
        var parentsDecoded0:[OrganizationsClientTypes.Parent]? = nil
        if let parentsContainer = parentsContainer {
            parentsDecoded0 = [OrganizationsClientTypes.Parent]()
            for structure0 in parentsContainer {
                if let structure0 = structure0 {
                    parentsDecoded0?.append(structure0)
                }
            }
        }
        parents = parentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
