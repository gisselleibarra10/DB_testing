// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension OrganizationsClientTypes {
    public enum HandshakeState: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case accepted
        case canceled
        case declined
        case expired
        case `open`
        case requested
        case sdkUnknown(Swift.String)

        public static var allCases: [HandshakeState] {
            return [
                .accepted,
                .canceled,
                .declined,
                .expired,
                .open,
                .requested,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .accepted: return "ACCEPTED"
            case .canceled: return "CANCELED"
            case .declined: return "DECLINED"
            case .expired: return "EXPIRED"
            case .open: return "OPEN"
            case .requested: return "REQUESTED"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = HandshakeState(rawValue: rawValue) ?? HandshakeState.sdkUnknown(rawValue)
        }
    }
}
