// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCreateAccountStatusInputBody: Swift.Equatable {
    let states: [OrganizationsClientTypes.CreateAccountState]?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension ListCreateAccountStatusInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case states = "States"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statesContainer = try containerValues.decodeIfPresent([OrganizationsClientTypes.CreateAccountState?].self, forKey: .states)
        var statesDecoded0:[OrganizationsClientTypes.CreateAccountState]? = nil
        if let statesContainer = statesContainer {
            statesDecoded0 = [OrganizationsClientTypes.CreateAccountState]()
            for string0 in statesContainer {
                if let string0 = string0 {
                    statesDecoded0?.append(string0)
                }
            }
        }
        states = statesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
