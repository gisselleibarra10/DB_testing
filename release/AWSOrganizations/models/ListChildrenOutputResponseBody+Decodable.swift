// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListChildrenOutputResponseBody: Swift.Equatable {
    let children: [OrganizationsClientTypes.Child]?
    let nextToken: Swift.String?
}

extension ListChildrenOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case children = "Children"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let childrenContainer = try containerValues.decodeIfPresent([OrganizationsClientTypes.Child?].self, forKey: .children)
        var childrenDecoded0:[OrganizationsClientTypes.Child]? = nil
        if let childrenContainer = childrenContainer {
            childrenDecoded0 = [OrganizationsClientTypes.Child]()
            for structure0 in childrenContainer {
                if let structure0 = structure0 {
                    childrenDecoded0?.append(structure0)
                }
            }
        }
        children = childrenDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
