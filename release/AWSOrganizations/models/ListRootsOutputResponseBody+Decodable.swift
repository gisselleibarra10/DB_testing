// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRootsOutputResponseBody: Swift.Equatable {
    let roots: [OrganizationsClientTypes.Root]?
    let nextToken: Swift.String?
}

extension ListRootsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case roots = "Roots"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rootsContainer = try containerValues.decodeIfPresent([OrganizationsClientTypes.Root?].self, forKey: .roots)
        var rootsDecoded0:[OrganizationsClientTypes.Root]? = nil
        if let rootsContainer = rootsContainer {
            rootsDecoded0 = [OrganizationsClientTypes.Root]()
            for structure0 in rootsContainer {
                if let structure0 = structure0 {
                    rootsDecoded0?.append(structure0)
                }
            }
        }
        roots = rootsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
