// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDelegatedAdministratorsOutputResponseBody: Swift.Equatable {
    let delegatedAdministrators: [OrganizationsClientTypes.DelegatedAdministrator]?
    let nextToken: Swift.String?
}

extension ListDelegatedAdministratorsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case delegatedAdministrators = "DelegatedAdministrators"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let delegatedAdministratorsContainer = try containerValues.decodeIfPresent([OrganizationsClientTypes.DelegatedAdministrator?].self, forKey: .delegatedAdministrators)
        var delegatedAdministratorsDecoded0:[OrganizationsClientTypes.DelegatedAdministrator]? = nil
        if let delegatedAdministratorsContainer = delegatedAdministratorsContainer {
            delegatedAdministratorsDecoded0 = [OrganizationsClientTypes.DelegatedAdministrator]()
            for structure0 in delegatedAdministratorsContainer {
                if let structure0 = structure0 {
                    delegatedAdministratorsDecoded0?.append(structure0)
                }
            }
        }
        delegatedAdministrators = delegatedAdministratorsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
