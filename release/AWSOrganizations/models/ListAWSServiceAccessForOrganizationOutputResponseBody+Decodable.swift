// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAWSServiceAccessForOrganizationOutputResponseBody: Swift.Equatable {
    let enabledServicePrincipals: [OrganizationsClientTypes.EnabledServicePrincipal]?
    let nextToken: Swift.String?
}

extension ListAWSServiceAccessForOrganizationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enabledServicePrincipals = "EnabledServicePrincipals"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enabledServicePrincipalsContainer = try containerValues.decodeIfPresent([OrganizationsClientTypes.EnabledServicePrincipal?].self, forKey: .enabledServicePrincipals)
        var enabledServicePrincipalsDecoded0:[OrganizationsClientTypes.EnabledServicePrincipal]? = nil
        if let enabledServicePrincipalsContainer = enabledServicePrincipalsContainer {
            enabledServicePrincipalsDecoded0 = [OrganizationsClientTypes.EnabledServicePrincipal]()
            for structure0 in enabledServicePrincipalsContainer {
                if let structure0 = structure0 {
                    enabledServicePrincipalsDecoded0?.append(structure0)
                }
            }
        }
        enabledServicePrincipals = enabledServicePrincipalsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
