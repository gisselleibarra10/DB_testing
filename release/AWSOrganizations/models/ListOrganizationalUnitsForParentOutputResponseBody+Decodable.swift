// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOrganizationalUnitsForParentOutputResponseBody: Swift.Equatable {
    let organizationalUnits: [OrganizationsClientTypes.OrganizationalUnit]?
    let nextToken: Swift.String?
}

extension ListOrganizationalUnitsForParentOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case organizationalUnits = "OrganizationalUnits"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationalUnitsContainer = try containerValues.decodeIfPresent([OrganizationsClientTypes.OrganizationalUnit?].self, forKey: .organizationalUnits)
        var organizationalUnitsDecoded0:[OrganizationsClientTypes.OrganizationalUnit]? = nil
        if let organizationalUnitsContainer = organizationalUnitsContainer {
            organizationalUnitsDecoded0 = [OrganizationsClientTypes.OrganizationalUnit]()
            for structure0 in organizationalUnitsContainer {
                if let structure0 = structure0 {
                    organizationalUnitsDecoded0?.append(structure0)
                }
            }
        }
        organizationalUnits = organizationalUnitsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
