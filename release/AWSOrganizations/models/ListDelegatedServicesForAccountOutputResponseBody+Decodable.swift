// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDelegatedServicesForAccountOutputResponseBody: Swift.Equatable {
    let delegatedServices: [OrganizationsClientTypes.DelegatedService]?
    let nextToken: Swift.String?
}

extension ListDelegatedServicesForAccountOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case delegatedServices = "DelegatedServices"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let delegatedServicesContainer = try containerValues.decodeIfPresent([OrganizationsClientTypes.DelegatedService?].self, forKey: .delegatedServices)
        var delegatedServicesDecoded0:[OrganizationsClientTypes.DelegatedService]? = nil
        if let delegatedServicesContainer = delegatedServicesContainer {
            delegatedServicesDecoded0 = [OrganizationsClientTypes.DelegatedService]()
            for structure0 in delegatedServicesContainer {
                if let structure0 = structure0 {
                    delegatedServicesDecoded0?.append(structure0)
                }
            }
        }
        delegatedServices = delegatedServicesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
