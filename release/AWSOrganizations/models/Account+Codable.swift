// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OrganizationsClientTypes.Account: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case email = "Email"
        case id = "Id"
        case joinedMethod = "JoinedMethod"
        case joinedTimestamp = "JoinedTimestamp"
        case name = "Name"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let email = self.email {
            try encodeContainer.encode(email, forKey: .email)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let joinedMethod = self.joinedMethod {
            try encodeContainer.encode(joinedMethod.rawValue, forKey: .joinedMethod)
        }
        if let joinedTimestamp = self.joinedTimestamp {
            try encodeContainer.encode(joinedTimestamp.timeIntervalSince1970, forKey: .joinedTimestamp)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let emailDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .email)
        email = emailDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(OrganizationsClientTypes.AccountStatus.self, forKey: .status)
        status = statusDecoded
        let joinedMethodDecoded = try containerValues.decodeIfPresent(OrganizationsClientTypes.AccountJoinedMethod.self, forKey: .joinedMethod)
        joinedMethod = joinedMethodDecoded
        let joinedTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .joinedTimestamp)
        joinedTimestamp = joinedTimestampDecoded
    }
}
