// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OrganizationsClientTypes.EnabledServicePrincipal: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dateEnabled = "DateEnabled"
        case servicePrincipal = "ServicePrincipal"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dateEnabled = self.dateEnabled {
            try encodeContainer.encode(dateEnabled.timeIntervalSince1970, forKey: .dateEnabled)
        }
        if let servicePrincipal = self.servicePrincipal {
            try encodeContainer.encode(servicePrincipal, forKey: .servicePrincipal)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let servicePrincipalDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .servicePrincipal)
        servicePrincipal = servicePrincipalDecoded
        let dateEnabledDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .dateEnabled)
        dateEnabled = dateEnabledDecoded
    }
}
