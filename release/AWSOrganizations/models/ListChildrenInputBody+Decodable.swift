// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListChildrenInputBody: Swift.Equatable {
    let parentId: Swift.String?
    let childType: OrganizationsClientTypes.ChildType?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension ListChildrenInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case childType = "ChildType"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case parentId = "ParentId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let parentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parentId)
        parentId = parentIdDecoded
        let childTypeDecoded = try containerValues.decodeIfPresent(OrganizationsClientTypes.ChildType.self, forKey: .childType)
        childType = childTypeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
