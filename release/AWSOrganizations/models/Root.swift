// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension OrganizationsClientTypes {
    /// Contains details about a root. A root is a top-level parent node in the hierarchy of an organization that can contain organizational units (OUs) and accounts. The root contains every Amazon Web Services account in the organization.
    public struct Root: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the root. For more information about ARNs in Organizations, see [ARN Formats Supported by Organizations](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies) in the Amazon Web Services Service Authorization Reference.
        public var arn: Swift.String?
        /// The unique identifier (ID) for the root. The [regex pattern](http://wikipedia.org/wiki/regex) for a root ID string requires "r-" followed by from 4 to 32 lowercase letters or digits.
        public var id: Swift.String?
        /// The friendly name of the root. The [regex pattern](http://wikipedia.org/wiki/regex) that is used to validate this parameter is a string of any of the characters in the ASCII character range.
        public var name: Swift.String?
        /// The types of policies that are currently enabled for the root and therefore can be attached to the root or to its OUs or accounts. Even if a policy type is shown as available in the organization, you can separately enable and disable them at the root level by using [EnablePolicyType] and [DisablePolicyType]. Use [DescribeOrganization] to see the availability of the policy types in that organization.
        public var policyTypes: [OrganizationsClientTypes.PolicyTypeSummary]?

        public init (
            arn: Swift.String? = nil,
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            policyTypes: [OrganizationsClientTypes.PolicyTypeSummary]? = nil
        )
        {
            self.arn = arn
            self.id = id
            self.name = name
            self.policyTypes = policyTypes
        }
    }

}
