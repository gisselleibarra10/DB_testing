// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OrganizationsClientTypes.DelegatedService: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case delegationEnabledDate = "DelegationEnabledDate"
        case servicePrincipal = "ServicePrincipal"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let delegationEnabledDate = self.delegationEnabledDate {
            try encodeContainer.encode(delegationEnabledDate.timeIntervalSince1970, forKey: .delegationEnabledDate)
        }
        if let servicePrincipal = self.servicePrincipal {
            try encodeContainer.encode(servicePrincipal, forKey: .servicePrincipal)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let servicePrincipalDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .servicePrincipal)
        servicePrincipal = servicePrincipalDecoded
        let delegationEnabledDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .delegationEnabledDate)
        delegationEnabledDate = delegationEnabledDateDecoded
    }
}
