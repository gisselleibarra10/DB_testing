// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateFacetInputBody: Swift.Equatable {
    let name: Swift.String?
    let attributes: [CloudDirectoryClientTypes.FacetAttribute]?
    let objectType: CloudDirectoryClientTypes.ObjectType?
    let facetStyle: CloudDirectoryClientTypes.FacetStyle?
}

extension CreateFacetInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributes = "Attributes"
        case facetStyle = "FacetStyle"
        case name = "Name"
        case objectType = "ObjectType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let attributesContainer = try containerValues.decodeIfPresent([CloudDirectoryClientTypes.FacetAttribute?].self, forKey: .attributes)
        var attributesDecoded0:[CloudDirectoryClientTypes.FacetAttribute]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [CloudDirectoryClientTypes.FacetAttribute]()
            for structure0 in attributesContainer {
                if let structure0 = structure0 {
                    attributesDecoded0?.append(structure0)
                }
            }
        }
        attributes = attributesDecoded0
        let objectTypeDecoded = try containerValues.decodeIfPresent(CloudDirectoryClientTypes.ObjectType.self, forKey: .objectType)
        objectType = objectTypeDecoded
        let facetStyleDecoded = try containerValues.decodeIfPresent(CloudDirectoryClientTypes.FacetStyle.self, forKey: .facetStyle)
        facetStyle = facetStyleDecoded
    }
}
