// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListObjectChildrenOutputResponseBody: Swift.Equatable {
    let children: [Swift.String:Swift.String]?
    let nextToken: Swift.String?
}

extension ListObjectChildrenOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case children = "Children"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let childrenContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .children)
        var childrenDecoded0: [Swift.String:Swift.String]? = nil
        if let childrenContainer = childrenContainer {
            childrenDecoded0 = [Swift.String:Swift.String]()
            for (key0, objectidentifier0) in childrenContainer {
                if let objectidentifier0 = objectidentifier0 {
                    childrenDecoded0?[key0] = objectidentifier0
                }
            }
        }
        children = childrenDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
