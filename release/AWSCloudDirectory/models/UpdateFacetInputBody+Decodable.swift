// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateFacetInputBody: Swift.Equatable {
    let name: Swift.String?
    let attributeUpdates: [CloudDirectoryClientTypes.FacetAttributeUpdate]?
    let objectType: CloudDirectoryClientTypes.ObjectType?
}

extension UpdateFacetInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributeUpdates = "AttributeUpdates"
        case name = "Name"
        case objectType = "ObjectType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let attributeUpdatesContainer = try containerValues.decodeIfPresent([CloudDirectoryClientTypes.FacetAttributeUpdate?].self, forKey: .attributeUpdates)
        var attributeUpdatesDecoded0:[CloudDirectoryClientTypes.FacetAttributeUpdate]? = nil
        if let attributeUpdatesContainer = attributeUpdatesContainer {
            attributeUpdatesDecoded0 = [CloudDirectoryClientTypes.FacetAttributeUpdate]()
            for structure0 in attributeUpdatesContainer {
                if let structure0 = structure0 {
                    attributeUpdatesDecoded0?.append(structure0)
                }
            }
        }
        attributeUpdates = attributeUpdatesDecoded0
        let objectTypeDecoded = try containerValues.decodeIfPresent(CloudDirectoryClientTypes.ObjectType.self, forKey: .objectType)
        objectType = objectTypeDecoded
    }
}
