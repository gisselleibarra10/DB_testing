// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PublishSchemaInputBody: Swift.Equatable {
    let version: Swift.String?
    let minorVersion: Swift.String?
    let name: Swift.String?
}

extension PublishSchemaInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case minorVersion = "MinorVersion"
        case name = "Name"
        case version = "Version"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
        let minorVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .minorVersion)
        minorVersion = minorVersionDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
    }
}
