// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPublishedSchemaArnsOutputResponseBody: Swift.Equatable {
    let schemaArns: [Swift.String]?
    let nextToken: Swift.String?
}

extension ListPublishedSchemaArnsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case schemaArns = "SchemaArns"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .schemaArns)
        var schemaArnsDecoded0:[Swift.String]? = nil
        if let schemaArnsContainer = schemaArnsContainer {
            schemaArnsDecoded0 = [Swift.String]()
            for string0 in schemaArnsContainer {
                if let string0 = string0 {
                    schemaArnsDecoded0?.append(string0)
                }
            }
        }
        schemaArns = schemaArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
