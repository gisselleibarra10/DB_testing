// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIndexInputBody: Swift.Equatable {
    let rangesOnIndexedValues: [CloudDirectoryClientTypes.ObjectAttributeRange]?
    let indexReference: CloudDirectoryClientTypes.ObjectReference?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension ListIndexInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case indexReference = "IndexReference"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case rangesOnIndexedValues = "RangesOnIndexedValues"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rangesOnIndexedValuesContainer = try containerValues.decodeIfPresent([CloudDirectoryClientTypes.ObjectAttributeRange?].self, forKey: .rangesOnIndexedValues)
        var rangesOnIndexedValuesDecoded0:[CloudDirectoryClientTypes.ObjectAttributeRange]? = nil
        if let rangesOnIndexedValuesContainer = rangesOnIndexedValuesContainer {
            rangesOnIndexedValuesDecoded0 = [CloudDirectoryClientTypes.ObjectAttributeRange]()
            for structure0 in rangesOnIndexedValuesContainer {
                if let structure0 = structure0 {
                    rangesOnIndexedValuesDecoded0?.append(structure0)
                }
            }
        }
        rangesOnIndexedValues = rangesOnIndexedValuesDecoded0
        let indexReferenceDecoded = try containerValues.decodeIfPresent(CloudDirectoryClientTypes.ObjectReference.self, forKey: .indexReference)
        indexReference = indexReferenceDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
