// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudDirectoryClientTypes.IndexAttachment: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case indexedAttributes = "IndexedAttributes"
        case objectIdentifier = "ObjectIdentifier"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let indexedAttributes = indexedAttributes {
            var indexedAttributesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .indexedAttributes)
            for attributekeyandvaluelist0 in indexedAttributes {
                try indexedAttributesContainer.encode(attributekeyandvaluelist0)
            }
        }
        if let objectIdentifier = self.objectIdentifier {
            try encodeContainer.encode(objectIdentifier, forKey: .objectIdentifier)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexedAttributesContainer = try containerValues.decodeIfPresent([CloudDirectoryClientTypes.AttributeKeyAndValue?].self, forKey: .indexedAttributes)
        var indexedAttributesDecoded0:[CloudDirectoryClientTypes.AttributeKeyAndValue]? = nil
        if let indexedAttributesContainer = indexedAttributesContainer {
            indexedAttributesDecoded0 = [CloudDirectoryClientTypes.AttributeKeyAndValue]()
            for structure0 in indexedAttributesContainer {
                if let structure0 = structure0 {
                    indexedAttributesDecoded0?.append(structure0)
                }
            }
        }
        indexedAttributes = indexedAttributesDecoded0
        let objectIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .objectIdentifier)
        objectIdentifier = objectIdentifierDecoded
    }
}
