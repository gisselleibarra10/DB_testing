// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddFacetToObjectInputBody: Swift.Equatable {
    let schemaFacet: CloudDirectoryClientTypes.SchemaFacet?
    let objectAttributeList: [CloudDirectoryClientTypes.AttributeKeyAndValue]?
    let objectReference: CloudDirectoryClientTypes.ObjectReference?
}

extension AddFacetToObjectInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case objectAttributeList = "ObjectAttributeList"
        case objectReference = "ObjectReference"
        case schemaFacet = "SchemaFacet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaFacetDecoded = try containerValues.decodeIfPresent(CloudDirectoryClientTypes.SchemaFacet.self, forKey: .schemaFacet)
        schemaFacet = schemaFacetDecoded
        let objectAttributeListContainer = try containerValues.decodeIfPresent([CloudDirectoryClientTypes.AttributeKeyAndValue?].self, forKey: .objectAttributeList)
        var objectAttributeListDecoded0:[CloudDirectoryClientTypes.AttributeKeyAndValue]? = nil
        if let objectAttributeListContainer = objectAttributeListContainer {
            objectAttributeListDecoded0 = [CloudDirectoryClientTypes.AttributeKeyAndValue]()
            for structure0 in objectAttributeListContainer {
                if let structure0 = structure0 {
                    objectAttributeListDecoded0?.append(structure0)
                }
            }
        }
        objectAttributeList = objectAttributeListDecoded0
        let objectReferenceDecoded = try containerValues.decodeIfPresent(CloudDirectoryClientTypes.ObjectReference.self, forKey: .objectReference)
        objectReference = objectReferenceDecoded
    }
}
