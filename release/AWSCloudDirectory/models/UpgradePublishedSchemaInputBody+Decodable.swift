// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpgradePublishedSchemaInputBody: Swift.Equatable {
    let developmentSchemaArn: Swift.String?
    let publishedSchemaArn: Swift.String?
    let minorVersion: Swift.String?
    let dryRun: Swift.Bool
}

extension UpgradePublishedSchemaInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case developmentSchemaArn = "DevelopmentSchemaArn"
        case dryRun = "DryRun"
        case minorVersion = "MinorVersion"
        case publishedSchemaArn = "PublishedSchemaArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let developmentSchemaArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .developmentSchemaArn)
        developmentSchemaArn = developmentSchemaArnDecoded
        let publishedSchemaArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publishedSchemaArn)
        publishedSchemaArn = publishedSchemaArnDecoded
        let minorVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .minorVersion)
        minorVersion = minorVersionDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun) ?? false
        dryRun = dryRunDecoded
    }
}
