// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudDirectoryClientTypes.BatchListOutgoingTypedLinks: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterAttributeRanges = "FilterAttributeRanges"
        case filterTypedLink = "FilterTypedLink"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case objectReference = "ObjectReference"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filterAttributeRanges = filterAttributeRanges {
            var filterAttributeRangesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filterAttributeRanges)
            for typedlinkattributerangelist0 in filterAttributeRanges {
                try filterAttributeRangesContainer.encode(typedlinkattributerangelist0)
            }
        }
        if let filterTypedLink = self.filterTypedLink {
            try encodeContainer.encode(filterTypedLink, forKey: .filterTypedLink)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let objectReference = self.objectReference {
            try encodeContainer.encode(objectReference, forKey: .objectReference)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let objectReferenceDecoded = try containerValues.decodeIfPresent(CloudDirectoryClientTypes.ObjectReference.self, forKey: .objectReference)
        objectReference = objectReferenceDecoded
        let filterAttributeRangesContainer = try containerValues.decodeIfPresent([CloudDirectoryClientTypes.TypedLinkAttributeRange?].self, forKey: .filterAttributeRanges)
        var filterAttributeRangesDecoded0:[CloudDirectoryClientTypes.TypedLinkAttributeRange]? = nil
        if let filterAttributeRangesContainer = filterAttributeRangesContainer {
            filterAttributeRangesDecoded0 = [CloudDirectoryClientTypes.TypedLinkAttributeRange]()
            for structure0 in filterAttributeRangesContainer {
                if let structure0 = structure0 {
                    filterAttributeRangesDecoded0?.append(structure0)
                }
            }
        }
        filterAttributeRanges = filterAttributeRangesDecoded0
        let filterTypedLinkDecoded = try containerValues.decodeIfPresent(CloudDirectoryClientTypes.TypedLinkSchemaAndFacetName.self, forKey: .filterTypedLink)
        filterTypedLink = filterTypedLinkDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
