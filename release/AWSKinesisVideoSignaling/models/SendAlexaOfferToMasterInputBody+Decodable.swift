// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendAlexaOfferToMasterInputBody: Swift.Equatable {
    let channelARN: Swift.String?
    let senderClientId: Swift.String?
    let messagePayload: Swift.String?
}

extension SendAlexaOfferToMasterInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case channelARN = "ChannelARN"
        case messagePayload = "MessagePayload"
        case senderClientId = "SenderClientId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .channelARN)
        channelARN = channelARNDecoded
        let senderClientIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .senderClientId)
        senderClientId = senderClientIdDecoded
        let messagePayloadDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .messagePayload)
        messagePayload = messagePayloadDecoded
    }
}
