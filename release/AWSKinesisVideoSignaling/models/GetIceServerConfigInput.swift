// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetIceServerConfigInput: Swift.Equatable {
    /// The ARN of the signaling channel to be used for the peer-to-peer connection between configured peers.
    /// This member is required.
    public var channelARN: Swift.String?
    /// Unique identifier for the viewer. Must be unique within the signaling channel.
    public var clientId: Swift.String?
    /// Specifies the desired service. Currently, TURN is the only valid value.
    public var service: KinesisVideoSignalingClientTypes.Service?
    /// An optional user ID to be associated with the credentials.
    public var username: Swift.String?

    public init (
        channelARN: Swift.String? = nil,
        clientId: Swift.String? = nil,
        service: KinesisVideoSignalingClientTypes.Service? = nil,
        username: Swift.String? = nil
    )
    {
        self.channelARN = channelARN
        self.clientId = clientId
        self.service = service
        self.username = username
    }
}
