// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateStreamInputBody: Swift.Equatable {
    let streamName: Swift.String?
    let shardCount: Swift.Int?
    let streamModeDetails: KinesisClientTypes.StreamModeDetails?
}

extension CreateStreamInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case shardCount = "ShardCount"
        case streamModeDetails = "StreamModeDetails"
        case streamName = "StreamName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let shardCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .shardCount)
        shardCount = shardCountDecoded
        let streamModeDetailsDecoded = try containerValues.decodeIfPresent(KinesisClientTypes.StreamModeDetails.self, forKey: .streamModeDetails)
        streamModeDetails = streamModeDetailsDecoded
    }
}
