// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutRecordInputBody: Swift.Equatable {
    let streamName: Swift.String?
    let data: ClientRuntime.Data?
    let partitionKey: Swift.String?
    let explicitHashKey: Swift.String?
    let sequenceNumberForOrdering: Swift.String?
}

extension PutRecordInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case data = "Data"
        case explicitHashKey = "ExplicitHashKey"
        case partitionKey = "PartitionKey"
        case sequenceNumberForOrdering = "SequenceNumberForOrdering"
        case streamName = "StreamName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let dataDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .data)
        data = dataDecoded
        let partitionKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .partitionKey)
        partitionKey = partitionKeyDecoded
        let explicitHashKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .explicitHashKey)
        explicitHashKey = explicitHashKeyDecoded
        let sequenceNumberForOrderingDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sequenceNumberForOrdering)
        sequenceNumberForOrdering = sequenceNumberForOrderingDecoded
    }
}
