// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DeregisterStreamConsumerInput: Swift.Equatable {
    /// The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.
    public var consumerARN: Swift.String?
    /// The name that you gave to the consumer.
    public var consumerName: Swift.String?
    /// The ARN of the Kinesis data stream that the consumer is registered with. For more information, see [Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams).
    public var streamARN: Swift.String?

    public init (
        consumerARN: Swift.String? = nil,
        consumerName: Swift.String? = nil,
        streamARN: Swift.String? = nil
    )
    {
        self.consumerARN = consumerARN
        self.consumerName = consumerName
        self.streamARN = streamARN
    }
}
