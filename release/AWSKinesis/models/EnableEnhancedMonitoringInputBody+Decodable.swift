// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EnableEnhancedMonitoringInputBody: Swift.Equatable {
    let streamName: Swift.String?
    let shardLevelMetrics: [KinesisClientTypes.MetricsName]?
}

extension EnableEnhancedMonitoringInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case shardLevelMetrics = "ShardLevelMetrics"
        case streamName = "StreamName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let shardLevelMetricsContainer = try containerValues.decodeIfPresent([KinesisClientTypes.MetricsName?].self, forKey: .shardLevelMetrics)
        var shardLevelMetricsDecoded0:[KinesisClientTypes.MetricsName]? = nil
        if let shardLevelMetricsContainer = shardLevelMetricsContainer {
            shardLevelMetricsDecoded0 = [KinesisClientTypes.MetricsName]()
            for string0 in shardLevelMetricsContainer {
                if let string0 = string0 {
                    shardLevelMetricsDecoded0?.append(string0)
                }
            }
        }
        shardLevelMetrics = shardLevelMetricsDecoded0
    }
}
