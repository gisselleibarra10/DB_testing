// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetShardIteratorInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case shardId = "ShardId"
        case shardIteratorType = "ShardIteratorType"
        case startingSequenceNumber = "StartingSequenceNumber"
        case streamName = "StreamName"
        case timestamp = "Timestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let shardId = self.shardId {
            try encodeContainer.encode(shardId, forKey: .shardId)
        }
        if let shardIteratorType = self.shardIteratorType {
            try encodeContainer.encode(shardIteratorType.rawValue, forKey: .shardIteratorType)
        }
        if let startingSequenceNumber = self.startingSequenceNumber {
            try encodeContainer.encode(startingSequenceNumber, forKey: .startingSequenceNumber)
        }
        if let streamName = self.streamName {
            try encodeContainer.encode(streamName, forKey: .streamName)
        }
        if let timestamp = self.timestamp {
            try encodeContainer.encode(timestamp.timeIntervalSince1970, forKey: .timestamp)
        }
    }
}
