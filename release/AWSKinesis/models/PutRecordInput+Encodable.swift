// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutRecordInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case data = "Data"
        case explicitHashKey = "ExplicitHashKey"
        case partitionKey = "PartitionKey"
        case sequenceNumberForOrdering = "SequenceNumberForOrdering"
        case streamName = "StreamName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let data = self.data {
            try encodeContainer.encode(data.base64EncodedString(), forKey: .data)
        }
        if let explicitHashKey = self.explicitHashKey {
            try encodeContainer.encode(explicitHashKey, forKey: .explicitHashKey)
        }
        if let partitionKey = self.partitionKey {
            try encodeContainer.encode(partitionKey, forKey: .partitionKey)
        }
        if let sequenceNumberForOrdering = self.sequenceNumberForOrdering {
            try encodeContainer.encode(sequenceNumberForOrdering, forKey: .sequenceNumberForOrdering)
        }
        if let streamName = self.streamName {
            try encodeContainer.encode(streamName, forKey: .streamName)
        }
    }
}
