// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLimitsOutputResponseBody: Swift.Equatable {
    let shardLimit: Swift.Int?
    let openShardCount: Swift.Int?
    let onDemandStreamCount: Swift.Int?
    let onDemandStreamCountLimit: Swift.Int?
}

extension DescribeLimitsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case onDemandStreamCount = "OnDemandStreamCount"
        case onDemandStreamCountLimit = "OnDemandStreamCountLimit"
        case openShardCount = "OpenShardCount"
        case shardLimit = "ShardLimit"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let shardLimitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .shardLimit)
        shardLimit = shardLimitDecoded
        let openShardCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .openShardCount)
        openShardCount = openShardCountDecoded
        let onDemandStreamCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .onDemandStreamCount)
        onDemandStreamCount = onDemandStreamCountDecoded
        let onDemandStreamCountLimitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .onDemandStreamCountLimit)
        onDemandStreamCountLimit = onDemandStreamCountLimitDecoded
    }
}
