// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamConsumersOutputResponseBody: Swift.Equatable {
    let consumers: [KinesisClientTypes.Consumer]?
    let nextToken: Swift.String?
}

extension ListStreamConsumersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case consumers = "Consumers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let consumersContainer = try containerValues.decodeIfPresent([KinesisClientTypes.Consumer?].self, forKey: .consumers)
        var consumersDecoded0:[KinesisClientTypes.Consumer]? = nil
        if let consumersContainer = consumersContainer {
            consumersDecoded0 = [KinesisClientTypes.Consumer]()
            for structure0 in consumersContainer {
                if let structure0 = structure0 {
                    consumersDecoded0?.append(structure0)
                }
            }
        }
        consumers = consumersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
