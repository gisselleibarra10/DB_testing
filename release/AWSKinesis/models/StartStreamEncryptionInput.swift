// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartStreamEncryptionInput: Swift.Equatable {
    /// The encryption type to use. The only valid value is KMS.
    /// This member is required.
    public var encryptionType: KinesisClientTypes.EncryptionType?
    /// The GUID for the customer-managed Amazon Web Services KMS key to use for encryption. This value can be a globally unique identifier, a fully specified Amazon Resource Name (ARN) to either an alias or a key, or an alias name prefixed by "alias/".You can also use a master key owned by Kinesis Data Streams by specifying the alias aws/kinesis.
    ///
    /// * Key ARN example: arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
    ///
    /// * Alias ARN example: arn:aws:kms:us-east-1:123456789012:alias/MyAliasName
    ///
    /// * Globally unique key ID example: 12345678-1234-1234-1234-123456789012
    ///
    /// * Alias name example: alias/MyAliasName
    ///
    /// * Master key owned by Kinesis Data Streams: alias/aws/kinesis
    /// This member is required.
    public var keyId: Swift.String?
    /// The name of the stream for which to start encrypting records.
    /// This member is required.
    public var streamName: Swift.String?

    public init (
        encryptionType: KinesisClientTypes.EncryptionType? = nil,
        keyId: Swift.String? = nil,
        streamName: Swift.String? = nil
    )
    {
        self.encryptionType = encryptionType
        self.keyId = keyId
        self.streamName = streamName
    }
}
