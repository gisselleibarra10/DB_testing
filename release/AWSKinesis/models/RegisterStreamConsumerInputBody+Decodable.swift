// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterStreamConsumerInputBody: Swift.Equatable {
    let streamARN: Swift.String?
    let consumerName: Swift.String?
}

extension RegisterStreamConsumerInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case consumerName = "ConsumerName"
        case streamARN = "StreamARN"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamARN)
        streamARN = streamARNDecoded
        let consumerNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .consumerName)
        consumerName = consumerNameDecoded
    }
}
