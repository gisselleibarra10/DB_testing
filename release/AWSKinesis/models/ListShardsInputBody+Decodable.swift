// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListShardsInputBody: Swift.Equatable {
    let streamName: Swift.String?
    let nextToken: Swift.String?
    let exclusiveStartShardId: Swift.String?
    let maxResults: Swift.Int?
    let streamCreationTimestamp: ClientRuntime.Date?
    let shardFilter: KinesisClientTypes.ShardFilter?
}

extension ListShardsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exclusiveStartShardId = "ExclusiveStartShardId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case shardFilter = "ShardFilter"
        case streamCreationTimestamp = "StreamCreationTimestamp"
        case streamName = "StreamName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let exclusiveStartShardIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exclusiveStartShardId)
        exclusiveStartShardId = exclusiveStartShardIdDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let streamCreationTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .streamCreationTimestamp)
        streamCreationTimestamp = streamCreationTimestampDecoded
        let shardFilterDecoded = try containerValues.decodeIfPresent(KinesisClientTypes.ShardFilter.self, forKey: .shardFilter)
        shardFilter = shardFilterDecoded
    }
}
