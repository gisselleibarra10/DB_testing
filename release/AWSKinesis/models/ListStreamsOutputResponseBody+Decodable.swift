// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamsOutputResponseBody: Swift.Equatable {
    let streamNames: [Swift.String]?
    let hasMoreStreams: Swift.Bool?
}

extension ListStreamsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hasMoreStreams = "HasMoreStreams"
        case streamNames = "StreamNames"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .streamNames)
        var streamNamesDecoded0:[Swift.String]? = nil
        if let streamNamesContainer = streamNamesContainer {
            streamNamesDecoded0 = [Swift.String]()
            for string0 in streamNamesContainer {
                if let string0 = string0 {
                    streamNamesDecoded0?.append(string0)
                }
            }
        }
        streamNames = streamNamesDecoded0
        let hasMoreStreamsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .hasMoreStreams)
        hasMoreStreams = hasMoreStreamsDecoded
    }
}
