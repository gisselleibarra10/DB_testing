// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisClientTypes.StreamModeDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case streamMode = "StreamMode"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let streamMode = self.streamMode {
            try encodeContainer.encode(streamMode.rawValue, forKey: .streamMode)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamModeDecoded = try containerValues.decodeIfPresent(KinesisClientTypes.StreamMode.self, forKey: .streamMode)
        streamMode = streamModeDecoded
    }
}
