// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateStreamModeInputBody: Swift.Equatable {
    let streamARN: Swift.String?
    let streamModeDetails: KinesisClientTypes.StreamModeDetails?
}

extension UpdateStreamModeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case streamARN = "StreamARN"
        case streamModeDetails = "StreamModeDetails"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamARN)
        streamARN = streamARNDecoded
        let streamModeDetailsDecoded = try containerValues.decodeIfPresent(KinesisClientTypes.StreamModeDetails.self, forKey: .streamModeDetails)
        streamModeDetails = streamModeDetailsDecoded
    }
}
