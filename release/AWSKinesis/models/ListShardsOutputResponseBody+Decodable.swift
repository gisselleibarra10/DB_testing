// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListShardsOutputResponseBody: Swift.Equatable {
    let shards: [KinesisClientTypes.Shard]?
    let nextToken: Swift.String?
}

extension ListShardsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case shards = "Shards"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let shardsContainer = try containerValues.decodeIfPresent([KinesisClientTypes.Shard?].self, forKey: .shards)
        var shardsDecoded0:[KinesisClientTypes.Shard]? = nil
        if let shardsContainer = shardsContainer {
            shardsDecoded0 = [KinesisClientTypes.Shard]()
            for structure0 in shardsContainer {
                if let structure0 = structure0 {
                    shardsDecoded0?.append(structure0)
                }
            }
        }
        shards = shardsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
