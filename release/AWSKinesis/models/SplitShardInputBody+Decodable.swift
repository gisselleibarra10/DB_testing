// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SplitShardInputBody: Swift.Equatable {
    let streamName: Swift.String?
    let shardToSplit: Swift.String?
    let newStartingHashKey: Swift.String?
}

extension SplitShardInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case newStartingHashKey = "NewStartingHashKey"
        case shardToSplit = "ShardToSplit"
        case streamName = "StreamName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let shardToSplitDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .shardToSplit)
        shardToSplit = shardToSplitDecoded
        let newStartingHashKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .newStartingHashKey)
        newStartingHashKey = newStartingHashKeyDecoded
    }
}
