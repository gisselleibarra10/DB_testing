// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamsInputBody: Swift.Equatable {
    let limit: Swift.Int?
    let exclusiveStartStreamName: Swift.String?
}

extension ListStreamsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exclusiveStartStreamName = "ExclusiveStartStreamName"
        case limit = "Limit"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let exclusiveStartStreamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exclusiveStartStreamName)
        exclusiveStartStreamName = exclusiveStartStreamNameDecoded
    }
}
