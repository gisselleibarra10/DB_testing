// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisClientTypes {
    /// An object that represents the details of the consumer you registered. This type of object is returned by [RegisterStreamConsumer].
    public struct Consumer: Swift.Equatable {
        /// When you register a consumer, Kinesis Data Streams generates an ARN for it. You need this ARN to be able to call [SubscribeToShard]. If you delete a consumer and then create a new one with the same name, it won't have the same ARN. That's because consumer ARNs contain the creation timestamp. This is important to keep in mind if you have IAM policies that reference consumer ARNs.
        /// This member is required.
        public var consumerARN: Swift.String?
        ///
        /// This member is required.
        public var consumerCreationTimestamp: ClientRuntime.Date?
        /// The name of the consumer is something you choose when you register the consumer.
        /// This member is required.
        public var consumerName: Swift.String?
        /// A consumer can't read data while in the CREATING or DELETING states.
        /// This member is required.
        public var consumerStatus: KinesisClientTypes.ConsumerStatus?

        public init (
            consumerARN: Swift.String? = nil,
            consumerCreationTimestamp: ClientRuntime.Date? = nil,
            consumerName: Swift.String? = nil,
            consumerStatus: KinesisClientTypes.ConsumerStatus? = nil
        )
        {
            self.consumerARN = consumerARN
            self.consumerCreationTimestamp = consumerCreationTimestamp
            self.consumerName = consumerName
            self.consumerStatus = consumerStatus
        }
    }

}
