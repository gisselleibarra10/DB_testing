// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTagsForStreamInputBody: Swift.Equatable {
    let streamName: Swift.String?
    let exclusiveStartTagKey: Swift.String?
    let limit: Swift.Int?
}

extension ListTagsForStreamInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exclusiveStartTagKey = "ExclusiveStartTagKey"
        case limit = "Limit"
        case streamName = "StreamName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let exclusiveStartTagKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exclusiveStartTagKey)
        exclusiveStartTagKey = exclusiveStartTagKeyDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
    }
}
