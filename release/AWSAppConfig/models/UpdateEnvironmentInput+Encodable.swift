// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateEnvironmentInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case monitors = "Monitors"
        case name = "Name"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let monitors = monitors {
            var monitorsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .monitors)
            for monitorlist0 in monitors {
                try monitorsContainer.encode(monitorlist0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }
}
