// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateExtensionInput: Swift.Equatable {
    /// The actions defined in the extension.
    /// This member is required.
    public var actions: [Swift.String:[AppConfigClientTypes.Action]]?
    /// Information about the extension.
    public var description: Swift.String?
    /// You can omit this field when you create an extension. When you create a new version, specify the most recent current version number. For example, you create version 3, enter 2 for this field.
    public var latestVersionNumber: Swift.Int?
    /// A name for the extension. Each extension name in your account must be unique. Extension versions use the same name.
    /// This member is required.
    public var name: Swift.String?
    /// The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the CreateExtensionAssociation API action. For Lambda extension actions, these parameters are included in the Lambda request object.
    public var parameters: [Swift.String:AppConfigClientTypes.Parameter]?
    /// Adds one or more tags for the specified extension. Tags are metadata that help you categorize resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define.
    public var tags: [Swift.String:Swift.String]?

    public init (
        actions: [Swift.String:[AppConfigClientTypes.Action]]? = nil,
        description: Swift.String? = nil,
        latestVersionNumber: Swift.Int? = nil,
        name: Swift.String? = nil,
        parameters: [Swift.String:AppConfigClientTypes.Parameter]? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.actions = actions
        self.description = description
        self.latestVersionNumber = latestVersionNumber
        self.name = name
        self.parameters = parameters
        self.tags = tags
    }
}
