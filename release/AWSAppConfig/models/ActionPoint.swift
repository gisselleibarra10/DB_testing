// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AppConfigClientTypes {
    public enum ActionPoint: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case onDeploymentBaking
        case onDeploymentComplete
        case onDeploymentRolledBack
        case onDeploymentStart
        case onDeploymentStep
        case preCreateHostedConfigurationVersion
        case preStartDeployment
        case sdkUnknown(Swift.String)

        public static var allCases: [ActionPoint] {
            return [
                .onDeploymentBaking,
                .onDeploymentComplete,
                .onDeploymentRolledBack,
                .onDeploymentStart,
                .onDeploymentStep,
                .preCreateHostedConfigurationVersion,
                .preStartDeployment,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .onDeploymentBaking: return "ON_DEPLOYMENT_BAKING"
            case .onDeploymentComplete: return "ON_DEPLOYMENT_COMPLETE"
            case .onDeploymentRolledBack: return "ON_DEPLOYMENT_ROLLED_BACK"
            case .onDeploymentStart: return "ON_DEPLOYMENT_START"
            case .onDeploymentStep: return "ON_DEPLOYMENT_STEP"
            case .preCreateHostedConfigurationVersion: return "PRE_CREATE_HOSTED_CONFIGURATION_VERSION"
            case .preStartDeployment: return "PRE_START_DEPLOYMENT"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ActionPoint(rawValue: rawValue) ?? ActionPoint.sdkUnknown(rawValue)
        }
    }
}
