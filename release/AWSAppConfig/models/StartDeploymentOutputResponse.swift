// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct StartDeploymentOutputResponse: Swift.Equatable {
    /// The ID of the application that was deployed.
    public var applicationId: Swift.String?
    /// A list of extensions that were processed as part of the deployment. The extensions that were previously associated to the configuration profile, environment, or the application when StartDeployment was called.
    public var appliedExtensions: [AppConfigClientTypes.AppliedExtension]?
    /// The time the deployment completed.
    public var completedAt: ClientRuntime.Date?
    /// Information about the source location of the configuration.
    public var configurationLocationUri: Swift.String?
    /// The name of the configuration.
    public var configurationName: Swift.String?
    /// The ID of the configuration profile that was deployed.
    public var configurationProfileId: Swift.String?
    /// The configuration version that was deployed.
    public var configurationVersion: Swift.String?
    /// Total amount of time the deployment lasted.
    public var deploymentDurationInMinutes: Swift.Int
    /// The sequence number of the deployment.
    public var deploymentNumber: Swift.Int
    /// The ID of the deployment strategy that was deployed.
    public var deploymentStrategyId: Swift.String?
    /// The description of the deployment.
    public var description: Swift.String?
    /// The ID of the environment that was deployed.
    public var environmentId: Swift.String?
    /// A list containing all events related to a deployment. The most recent events are displayed first.
    public var eventLog: [AppConfigClientTypes.DeploymentEvent]?
    /// The amount of time that AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic rollback.
    public var finalBakeTimeInMinutes: Swift.Int
    /// The percentage of targets to receive a deployed configuration during each interval.
    public var growthFactor: Swift.Float
    /// The algorithm used to define how percentage grew over time.
    public var growthType: AppConfigClientTypes.GrowthType?
    /// The percentage of targets for which the deployment is available.
    public var percentageComplete: Swift.Float
    /// The time the deployment started.
    public var startedAt: ClientRuntime.Date?
    /// The state of the deployment.
    public var state: AppConfigClientTypes.DeploymentState?

    public init (
        applicationId: Swift.String? = nil,
        appliedExtensions: [AppConfigClientTypes.AppliedExtension]? = nil,
        completedAt: ClientRuntime.Date? = nil,
        configurationLocationUri: Swift.String? = nil,
        configurationName: Swift.String? = nil,
        configurationProfileId: Swift.String? = nil,
        configurationVersion: Swift.String? = nil,
        deploymentDurationInMinutes: Swift.Int = 0,
        deploymentNumber: Swift.Int = 0,
        deploymentStrategyId: Swift.String? = nil,
        description: Swift.String? = nil,
        environmentId: Swift.String? = nil,
        eventLog: [AppConfigClientTypes.DeploymentEvent]? = nil,
        finalBakeTimeInMinutes: Swift.Int = 0,
        growthFactor: Swift.Float = 0.0,
        growthType: AppConfigClientTypes.GrowthType? = nil,
        percentageComplete: Swift.Float = 0.0,
        startedAt: ClientRuntime.Date? = nil,
        state: AppConfigClientTypes.DeploymentState? = nil
    )
    {
        self.applicationId = applicationId
        self.appliedExtensions = appliedExtensions
        self.completedAt = completedAt
        self.configurationLocationUri = configurationLocationUri
        self.configurationName = configurationName
        self.configurationProfileId = configurationProfileId
        self.configurationVersion = configurationVersion
        self.deploymentDurationInMinutes = deploymentDurationInMinutes
        self.deploymentNumber = deploymentNumber
        self.deploymentStrategyId = deploymentStrategyId
        self.description = description
        self.environmentId = environmentId
        self.eventLog = eventLog
        self.finalBakeTimeInMinutes = finalBakeTimeInMinutes
        self.growthFactor = growthFactor
        self.growthType = growthType
        self.percentageComplete = percentageComplete
        self.startedAt = startedAt
        self.state = state
    }
}
