// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppConfigClientTypes.BadRequestDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case invalidconfiguration = "InvalidConfiguration"
        case sdkUnknown
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .invalidconfiguration(invalidconfiguration):
                var invalidconfigurationContainer = container.nestedUnkeyedContainer(forKey: .invalidconfiguration)
                for invalidconfigurationdetaillist0 in invalidconfiguration {
                    try invalidconfigurationContainer.encode(invalidconfigurationdetaillist0)
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let invalidconfigurationContainer = try values.decodeIfPresent([AppConfigClientTypes.InvalidConfigurationDetail?].self, forKey: .invalidconfiguration)
        var invalidconfigurationDecoded0:[AppConfigClientTypes.InvalidConfigurationDetail]? = nil
        if let invalidconfigurationContainer = invalidconfigurationContainer {
            invalidconfigurationDecoded0 = [AppConfigClientTypes.InvalidConfigurationDetail]()
            for structure0 in invalidconfigurationContainer {
                if let structure0 = structure0 {
                    invalidconfigurationDecoded0?.append(structure0)
                }
            }
        }
        if let invalidconfiguration = invalidconfigurationDecoded0 {
            self = .invalidconfiguration(invalidconfiguration)
            return
        }
        self = .sdkUnknown("")
    }
}
