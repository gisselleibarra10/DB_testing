// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FraudDetectorClientTypes.ModelScores: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case modelVersion
        case scores
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let modelVersion = self.modelVersion {
            try encodeContainer.encode(modelVersion, forKey: .modelVersion)
        }
        if let scores = scores {
            var scoresContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .scores)
            for (dictKey0, modelpredictionmap0) in scores {
                try scoresContainer.encode(modelpredictionmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelVersionDecoded = try containerValues.decodeIfPresent(FraudDetectorClientTypes.ModelVersion.self, forKey: .modelVersion)
        modelVersion = modelVersionDecoded
        let scoresContainer = try containerValues.decodeIfPresent([Swift.String: Swift.Float?].self, forKey: .scores)
        var scoresDecoded0: [Swift.String:Swift.Float]? = nil
        if let scoresContainer = scoresContainer {
            scoresDecoded0 = [Swift.String:Swift.Float]()
            for (key0, float0) in scoresContainer {
                if let float0 = float0 {
                    scoresDecoded0?[key0] = float0
                }
            }
        }
        scores = scoresDecoded0
    }
}
