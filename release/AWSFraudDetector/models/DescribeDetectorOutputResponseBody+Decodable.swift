// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDetectorOutputResponseBody: Swift.Equatable {
    let detectorId: Swift.String?
    let detectorVersionSummaries: [FraudDetectorClientTypes.DetectorVersionSummary]?
    let nextToken: Swift.String?
    let arn: Swift.String?
}

extension DescribeDetectorOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case detectorId
        case detectorVersionSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detectorIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .detectorId)
        detectorId = detectorIdDecoded
        let detectorVersionSummariesContainer = try containerValues.decodeIfPresent([FraudDetectorClientTypes.DetectorVersionSummary?].self, forKey: .detectorVersionSummaries)
        var detectorVersionSummariesDecoded0:[FraudDetectorClientTypes.DetectorVersionSummary]? = nil
        if let detectorVersionSummariesContainer = detectorVersionSummariesContainer {
            detectorVersionSummariesDecoded0 = [FraudDetectorClientTypes.DetectorVersionSummary]()
            for structure0 in detectorVersionSummariesContainer {
                if let structure0 = structure0 {
                    detectorVersionSummariesDecoded0?.append(structure0)
                }
            }
        }
        detectorVersionSummaries = detectorVersionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
    }
}
