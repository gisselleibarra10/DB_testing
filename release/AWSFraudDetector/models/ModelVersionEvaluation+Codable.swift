// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FraudDetectorClientTypes.ModelVersionEvaluation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case evaluationScore
        case outputVariableName
        case predictionExplanations
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let evaluationScore = self.evaluationScore {
            try encodeContainer.encode(evaluationScore, forKey: .evaluationScore)
        }
        if let outputVariableName = self.outputVariableName {
            try encodeContainer.encode(outputVariableName, forKey: .outputVariableName)
        }
        if let predictionExplanations = self.predictionExplanations {
            try encodeContainer.encode(predictionExplanations, forKey: .predictionExplanations)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outputVariableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .outputVariableName)
        outputVariableName = outputVariableNameDecoded
        let evaluationScoreDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .evaluationScore)
        evaluationScore = evaluationScoreDecoded
        let predictionExplanationsDecoded = try containerValues.decodeIfPresent(FraudDetectorClientTypes.PredictionExplanations.self, forKey: .predictionExplanations)
        predictionExplanations = predictionExplanationsDecoded
    }
}
