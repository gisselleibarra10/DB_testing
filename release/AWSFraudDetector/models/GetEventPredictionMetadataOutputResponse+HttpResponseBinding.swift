// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetEventPredictionMetadataOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: GetEventPredictionMetadataOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.detectorId = output.detectorId
            self.detectorVersionId = output.detectorVersionId
            self.detectorVersionStatus = output.detectorVersionStatus
            self.entityId = output.entityId
            self.entityType = output.entityType
            self.evaluatedExternalModels = output.evaluatedExternalModels
            self.evaluatedModelVersions = output.evaluatedModelVersions
            self.eventId = output.eventId
            self.eventTimestamp = output.eventTimestamp
            self.eventTypeName = output.eventTypeName
            self.eventVariables = output.eventVariables
            self.outcomes = output.outcomes
            self.predictionTimestamp = output.predictionTimestamp
            self.ruleExecutionMode = output.ruleExecutionMode
            self.rules = output.rules
        } else {
            self.detectorId = nil
            self.detectorVersionId = nil
            self.detectorVersionStatus = nil
            self.entityId = nil
            self.entityType = nil
            self.evaluatedExternalModels = nil
            self.evaluatedModelVersions = nil
            self.eventId = nil
            self.eventTimestamp = nil
            self.eventTypeName = nil
            self.eventVariables = nil
            self.outcomes = nil
            self.predictionTimestamp = nil
            self.ruleExecutionMode = nil
            self.rules = nil
        }
    }
}
