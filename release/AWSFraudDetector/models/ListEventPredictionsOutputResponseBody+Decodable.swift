// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEventPredictionsOutputResponseBody: Swift.Equatable {
    let eventPredictionSummaries: [FraudDetectorClientTypes.EventPredictionSummary]?
    let nextToken: Swift.String?
}

extension ListEventPredictionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventPredictionSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventPredictionSummariesContainer = try containerValues.decodeIfPresent([FraudDetectorClientTypes.EventPredictionSummary?].self, forKey: .eventPredictionSummaries)
        var eventPredictionSummariesDecoded0:[FraudDetectorClientTypes.EventPredictionSummary]? = nil
        if let eventPredictionSummariesContainer = eventPredictionSummariesContainer {
            eventPredictionSummariesDecoded0 = [FraudDetectorClientTypes.EventPredictionSummary]()
            for structure0 in eventPredictionSummariesContainer {
                if let structure0 = structure0 {
                    eventPredictionSummariesDecoded0?.append(structure0)
                }
            }
        }
        eventPredictionSummaries = eventPredictionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
