// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateDetectorVersionInput: Swift.Equatable {
    /// The detector version description.
    public var description: Swift.String?
    /// The parent detector ID for the detector version you want to update.
    /// This member is required.
    public var detectorId: Swift.String?
    /// The detector version ID.
    /// This member is required.
    public var detectorVersionId: Swift.String?
    /// The Amazon SageMaker model endpoints to include in the detector version.
    /// This member is required.
    public var externalModelEndpoints: [Swift.String]?
    /// The model versions to include in the detector version.
    public var modelVersions: [FraudDetectorClientTypes.ModelVersion]?
    /// The rule execution mode to add to the detector. If you specify FIRST_MATCHED, Amazon Fraud Detector evaluates rules sequentially, first to last, stopping at the first matched rule. Amazon Fraud dectector then provides the outcomes for that single rule. If you specifiy ALL_MATCHED, Amazon Fraud Detector evaluates all rules and returns the outcomes for all matched rules. You can define and edit the rule mode at the detector version level, when it is in draft status. The default behavior is FIRST_MATCHED.
    public var ruleExecutionMode: FraudDetectorClientTypes.RuleExecutionMode?
    /// The rules to include in the detector version.
    /// This member is required.
    public var rules: [FraudDetectorClientTypes.Rule]?

    public init (
        description: Swift.String? = nil,
        detectorId: Swift.String? = nil,
        detectorVersionId: Swift.String? = nil,
        externalModelEndpoints: [Swift.String]? = nil,
        modelVersions: [FraudDetectorClientTypes.ModelVersion]? = nil,
        ruleExecutionMode: FraudDetectorClientTypes.RuleExecutionMode? = nil,
        rules: [FraudDetectorClientTypes.Rule]? = nil
    )
    {
        self.description = description
        self.detectorId = detectorId
        self.detectorVersionId = detectorVersionId
        self.externalModelEndpoints = externalModelEndpoints
        self.modelVersions = modelVersions
        self.ruleExecutionMode = ruleExecutionMode
        self.rules = rules
    }
}
