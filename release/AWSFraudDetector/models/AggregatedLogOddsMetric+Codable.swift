// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FraudDetectorClientTypes.AggregatedLogOddsMetric: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregatedVariablesImportance
        case variableNames
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aggregatedVariablesImportance = self.aggregatedVariablesImportance {
            try encodeContainer.encode(aggregatedVariablesImportance, forKey: .aggregatedVariablesImportance)
        }
        if let variableNames = variableNames {
            var variableNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .variableNames)
            for listofstrings0 in variableNames {
                try variableNamesContainer.encode(listofstrings0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let variableNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .variableNames)
        var variableNamesDecoded0:[Swift.String]? = nil
        if let variableNamesContainer = variableNamesContainer {
            variableNamesDecoded0 = [Swift.String]()
            for string0 in variableNamesContainer {
                if let string0 = string0 {
                    variableNamesDecoded0?.append(string0)
                }
            }
        }
        variableNames = variableNamesDecoded0
        let aggregatedVariablesImportanceDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .aggregatedVariablesImportance)
        aggregatedVariablesImportance = aggregatedVariablesImportanceDecoded
    }
}
