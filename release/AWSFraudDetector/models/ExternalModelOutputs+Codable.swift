// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FraudDetectorClientTypes.ExternalModelOutputs: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case externalModel
        case outputs
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let externalModel = self.externalModel {
            try encodeContainer.encode(externalModel, forKey: .externalModel)
        }
        if let outputs = outputs {
            var outputsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .outputs)
            for (dictKey0, externalmodelpredictionmap0) in outputs {
                try outputsContainer.encode(externalmodelpredictionmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let externalModelDecoded = try containerValues.decodeIfPresent(FraudDetectorClientTypes.ExternalModelSummary.self, forKey: .externalModel)
        externalModel = externalModelDecoded
        let outputsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .outputs)
        var outputsDecoded0: [Swift.String:Swift.String]? = nil
        if let outputsContainer = outputsContainer {
            outputsDecoded0 = [Swift.String:Swift.String]()
            for (key0, string0) in outputsContainer {
                if let string0 = string0 {
                    outputsDecoded0?[key0] = string0
                }
            }
        }
        outputs = outputsDecoded0
    }
}
