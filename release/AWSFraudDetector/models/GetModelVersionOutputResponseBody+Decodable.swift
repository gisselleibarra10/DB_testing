// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetModelVersionOutputResponseBody: Swift.Equatable {
    let modelId: Swift.String?
    let modelType: FraudDetectorClientTypes.ModelTypeEnum?
    let modelVersionNumber: Swift.String?
    let trainingDataSource: FraudDetectorClientTypes.TrainingDataSourceEnum?
    let trainingDataSchema: FraudDetectorClientTypes.TrainingDataSchema?
    let externalEventsDetail: FraudDetectorClientTypes.ExternalEventsDetail?
    let ingestedEventsDetail: FraudDetectorClientTypes.IngestedEventsDetail?
    let status: Swift.String?
    let arn: Swift.String?
}

extension GetModelVersionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case externalEventsDetail
        case ingestedEventsDetail
        case modelId
        case modelType
        case modelVersionNumber
        case status
        case trainingDataSchema
        case trainingDataSource
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelId)
        modelId = modelIdDecoded
        let modelTypeDecoded = try containerValues.decodeIfPresent(FraudDetectorClientTypes.ModelTypeEnum.self, forKey: .modelType)
        modelType = modelTypeDecoded
        let modelVersionNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelVersionNumber)
        modelVersionNumber = modelVersionNumberDecoded
        let trainingDataSourceDecoded = try containerValues.decodeIfPresent(FraudDetectorClientTypes.TrainingDataSourceEnum.self, forKey: .trainingDataSource)
        trainingDataSource = trainingDataSourceDecoded
        let trainingDataSchemaDecoded = try containerValues.decodeIfPresent(FraudDetectorClientTypes.TrainingDataSchema.self, forKey: .trainingDataSchema)
        trainingDataSchema = trainingDataSchemaDecoded
        let externalEventsDetailDecoded = try containerValues.decodeIfPresent(FraudDetectorClientTypes.ExternalEventsDetail.self, forKey: .externalEventsDetail)
        externalEventsDetail = externalEventsDetailDecoded
        let ingestedEventsDetailDecoded = try containerValues.decodeIfPresent(FraudDetectorClientTypes.IngestedEventsDetail.self, forKey: .ingestedEventsDetail)
        ingestedEventsDetail = ingestedEventsDetailDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
    }
}
