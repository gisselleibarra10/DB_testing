// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FraudDetectorClientTypes.TrainingDataSchema: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case labelSchema
        case modelVariables
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let labelSchema = self.labelSchema {
            try encodeContainer.encode(labelSchema, forKey: .labelSchema)
        }
        if let modelVariables = modelVariables {
            var modelVariablesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .modelVariables)
            for listofstrings0 in modelVariables {
                try modelVariablesContainer.encode(listofstrings0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelVariablesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .modelVariables)
        var modelVariablesDecoded0:[Swift.String]? = nil
        if let modelVariablesContainer = modelVariablesContainer {
            modelVariablesDecoded0 = [Swift.String]()
            for string0 in modelVariablesContainer {
                if let string0 = string0 {
                    modelVariablesDecoded0?.append(string0)
                }
            }
        }
        modelVariables = modelVariablesDecoded0
        let labelSchemaDecoded = try containerValues.decodeIfPresent(FraudDetectorClientTypes.LabelSchema.self, forKey: .labelSchema)
        labelSchema = labelSchemaDecoded
    }
}
