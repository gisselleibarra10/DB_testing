// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteEventInputBody: Swift.Equatable {
    let eventId: Swift.String?
    let eventTypeName: Swift.String?
    let deleteAuditHistory: Swift.Bool?
}

extension DeleteEventInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deleteAuditHistory
        case eventId
        case eventTypeName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventId)
        eventId = eventIdDecoded
        let eventTypeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventTypeName)
        eventTypeName = eventTypeNameDecoded
        let deleteAuditHistoryDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .deleteAuditHistory)
        deleteAuditHistory = deleteAuditHistoryDecoded
    }
}
