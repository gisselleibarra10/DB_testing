// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FraudDetectorClientTypes.PredictionExplanations: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregatedVariablesImpactExplanations
        case variableImpactExplanations
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aggregatedVariablesImpactExplanations = aggregatedVariablesImpactExplanations {
            var aggregatedVariablesImpactExplanationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .aggregatedVariablesImpactExplanations)
            for listofaggregatedvariablesimpactexplanations0 in aggregatedVariablesImpactExplanations {
                try aggregatedVariablesImpactExplanationsContainer.encode(listofaggregatedvariablesimpactexplanations0)
            }
        }
        if let variableImpactExplanations = variableImpactExplanations {
            var variableImpactExplanationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .variableImpactExplanations)
            for listofvariableimpactexplanations0 in variableImpactExplanations {
                try variableImpactExplanationsContainer.encode(listofvariableimpactexplanations0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let variableImpactExplanationsContainer = try containerValues.decodeIfPresent([FraudDetectorClientTypes.VariableImpactExplanation?].self, forKey: .variableImpactExplanations)
        var variableImpactExplanationsDecoded0:[FraudDetectorClientTypes.VariableImpactExplanation]? = nil
        if let variableImpactExplanationsContainer = variableImpactExplanationsContainer {
            variableImpactExplanationsDecoded0 = [FraudDetectorClientTypes.VariableImpactExplanation]()
            for structure0 in variableImpactExplanationsContainer {
                if let structure0 = structure0 {
                    variableImpactExplanationsDecoded0?.append(structure0)
                }
            }
        }
        variableImpactExplanations = variableImpactExplanationsDecoded0
        let aggregatedVariablesImpactExplanationsContainer = try containerValues.decodeIfPresent([FraudDetectorClientTypes.AggregatedVariablesImpactExplanation?].self, forKey: .aggregatedVariablesImpactExplanations)
        var aggregatedVariablesImpactExplanationsDecoded0:[FraudDetectorClientTypes.AggregatedVariablesImpactExplanation]? = nil
        if let aggregatedVariablesImpactExplanationsContainer = aggregatedVariablesImpactExplanationsContainer {
            aggregatedVariablesImpactExplanationsDecoded0 = [FraudDetectorClientTypes.AggregatedVariablesImpactExplanation]()
            for structure0 in aggregatedVariablesImpactExplanationsContainer {
                if let structure0 = structure0 {
                    aggregatedVariablesImpactExplanationsDecoded0?.append(structure0)
                }
            }
        }
        aggregatedVariablesImpactExplanations = aggregatedVariablesImpactExplanationsDecoded0
    }
}
