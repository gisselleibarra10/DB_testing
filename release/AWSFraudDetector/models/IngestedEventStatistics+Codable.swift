// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FraudDetectorClientTypes.IngestedEventStatistics: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventDataSizeInBytes
        case lastUpdatedTime
        case leastRecentEvent
        case mostRecentEvent
        case numberOfEvents
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let eventDataSizeInBytes = self.eventDataSizeInBytes {
            try encodeContainer.encode(eventDataSizeInBytes, forKey: .eventDataSizeInBytes)
        }
        if let lastUpdatedTime = self.lastUpdatedTime {
            try encodeContainer.encode(lastUpdatedTime, forKey: .lastUpdatedTime)
        }
        if let leastRecentEvent = self.leastRecentEvent {
            try encodeContainer.encode(leastRecentEvent, forKey: .leastRecentEvent)
        }
        if let mostRecentEvent = self.mostRecentEvent {
            try encodeContainer.encode(mostRecentEvent, forKey: .mostRecentEvent)
        }
        if let numberOfEvents = self.numberOfEvents {
            try encodeContainer.encode(numberOfEvents, forKey: .numberOfEvents)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let numberOfEventsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfEvents)
        numberOfEvents = numberOfEventsDecoded
        let eventDataSizeInBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .eventDataSizeInBytes)
        eventDataSizeInBytes = eventDataSizeInBytesDecoded
        let leastRecentEventDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .leastRecentEvent)
        leastRecentEvent = leastRecentEventDecoded
        let mostRecentEventDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mostRecentEvent)
        mostRecentEvent = mostRecentEventDecoded
        let lastUpdatedTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastUpdatedTime)
        lastUpdatedTime = lastUpdatedTimeDecoded
    }
}
