// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FraudDetectorClientTypes.ATIMetricDataPoint: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case adr
        case atodr
        case cr
        case threshold
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let adr = self.adr {
            try encodeContainer.encode(adr, forKey: .adr)
        }
        if let atodr = self.atodr {
            try encodeContainer.encode(atodr, forKey: .atodr)
        }
        if let cr = self.cr {
            try encodeContainer.encode(cr, forKey: .cr)
        }
        if let threshold = self.threshold {
            try encodeContainer.encode(threshold, forKey: .threshold)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let crDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .cr)
        cr = crDecoded
        let adrDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .adr)
        adr = adrDecoded
        let thresholdDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .threshold)
        threshold = thresholdDecoded
        let atodrDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .atodr)
        atodr = atodrDecoded
    }
}
