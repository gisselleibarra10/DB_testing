// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaTailorClientTypes.Alert: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alertCode = "AlertCode"
        case alertMessage = "AlertMessage"
        case lastModifiedTime = "LastModifiedTime"
        case relatedResourceArns = "RelatedResourceArns"
        case resourceArn = "ResourceArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let alertCode = self.alertCode {
            try encodeContainer.encode(alertCode, forKey: .alertCode)
        }
        if let alertMessage = self.alertMessage {
            try encodeContainer.encode(alertMessage, forKey: .alertMessage)
        }
        if let lastModifiedTime = self.lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
        if let relatedResourceArns = relatedResourceArns {
            var relatedResourceArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .relatedResourceArns)
            for __listof__string0 in relatedResourceArns {
                try relatedResourceArnsContainer.encode(__listof__string0)
            }
        }
        if let resourceArn = self.resourceArn {
            try encodeContainer.encode(resourceArn, forKey: .resourceArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alertCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alertCode)
        alertCode = alertCodeDecoded
        let alertMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alertMessage)
        alertMessage = alertMessageDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let relatedResourceArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .relatedResourceArns)
        var relatedResourceArnsDecoded0:[Swift.String]? = nil
        if let relatedResourceArnsContainer = relatedResourceArnsContainer {
            relatedResourceArnsDecoded0 = [Swift.String]()
            for string0 in relatedResourceArnsContainer {
                if let string0 = string0 {
                    relatedResourceArnsDecoded0?.append(string0)
                }
            }
        }
        relatedResourceArns = relatedResourceArnsDecoded0
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
    }
}
