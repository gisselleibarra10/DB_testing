// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaTailorClientTypes.AccessConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessType = "AccessType"
        case secretsManagerAccessTokenConfiguration = "SecretsManagerAccessTokenConfiguration"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessType = self.accessType {
            try encodeContainer.encode(accessType.rawValue, forKey: .accessType)
        }
        if let secretsManagerAccessTokenConfiguration = self.secretsManagerAccessTokenConfiguration {
            try encodeContainer.encode(secretsManagerAccessTokenConfiguration, forKey: .secretsManagerAccessTokenConfiguration)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessTypeDecoded = try containerValues.decodeIfPresent(MediaTailorClientTypes.AccessType.self, forKey: .accessType)
        accessType = accessTypeDecoded
        let secretsManagerAccessTokenConfigurationDecoded = try containerValues.decodeIfPresent(MediaTailorClientTypes.SecretsManagerAccessTokenConfiguration.self, forKey: .secretsManagerAccessTokenConfiguration)
        secretsManagerAccessTokenConfiguration = secretsManagerAccessTokenConfigurationDecoded
    }
}
