// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreatePrefetchScheduleOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let consumption: MediaTailorClientTypes.PrefetchConsumption?
    let name: Swift.String?
    let playbackConfigurationName: Swift.String?
    let retrieval: MediaTailorClientTypes.PrefetchRetrieval?
    let streamId: Swift.String?
}

extension CreatePrefetchScheduleOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case consumption = "Consumption"
        case name = "Name"
        case playbackConfigurationName = "PlaybackConfigurationName"
        case retrieval = "Retrieval"
        case streamId = "StreamId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let consumptionDecoded = try containerValues.decodeIfPresent(MediaTailorClientTypes.PrefetchConsumption.self, forKey: .consumption)
        consumption = consumptionDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let playbackConfigurationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .playbackConfigurationName)
        playbackConfigurationName = playbackConfigurationNameDecoded
        let retrievalDecoded = try containerValues.decodeIfPresent(MediaTailorClientTypes.PrefetchRetrieval.self, forKey: .retrieval)
        retrieval = retrievalDecoded
        let streamIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .streamId)
        streamId = streamIdDecoded
    }
}
