// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaTailorClientTypes.SecretsManagerAccessTokenConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case headerName = "HeaderName"
        case secretArn = "SecretArn"
        case secretStringKey = "SecretStringKey"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let headerName = self.headerName {
            try encodeContainer.encode(headerName, forKey: .headerName)
        }
        if let secretArn = self.secretArn {
            try encodeContainer.encode(secretArn, forKey: .secretArn)
        }
        if let secretStringKey = self.secretStringKey {
            try encodeContainer.encode(secretStringKey, forKey: .secretStringKey)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let headerNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .headerName)
        headerName = headerNameDecoded
        let secretArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .secretArn)
        secretArn = secretArnDecoded
        let secretStringKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .secretStringKey)
        secretStringKey = secretStringKeyDecoded
    }
}
