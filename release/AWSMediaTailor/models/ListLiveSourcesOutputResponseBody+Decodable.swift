// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLiveSourcesOutputResponseBody: Swift.Equatable {
    let items: [MediaTailorClientTypes.LiveSource]?
    let nextToken: Swift.String?
}

extension ListLiveSourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case items = "Items"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemsContainer = try containerValues.decodeIfPresent([MediaTailorClientTypes.LiveSource?].self, forKey: .items)
        var itemsDecoded0:[MediaTailorClientTypes.LiveSource]? = nil
        if let itemsContainer = itemsContainer {
            itemsDecoded0 = [MediaTailorClientTypes.LiveSource]()
            for structure0 in itemsContainer {
                if let structure0 = structure0 {
                    itemsDecoded0?.append(structure0)
                }
            }
        }
        items = itemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
