// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaTailorClientTypes.AdBreak: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case messageType = "MessageType"
        case offsetMillis = "OffsetMillis"
        case slate = "Slate"
        case spliceInsertMessage = "SpliceInsertMessage"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let messageType = self.messageType {
            try encodeContainer.encode(messageType.rawValue, forKey: .messageType)
        }
        if let offsetMillis = self.offsetMillis {
            try encodeContainer.encode(offsetMillis, forKey: .offsetMillis)
        }
        if let slate = self.slate {
            try encodeContainer.encode(slate, forKey: .slate)
        }
        if let spliceInsertMessage = self.spliceInsertMessage {
            try encodeContainer.encode(spliceInsertMessage, forKey: .spliceInsertMessage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageTypeDecoded = try containerValues.decodeIfPresent(MediaTailorClientTypes.MessageType.self, forKey: .messageType)
        messageType = messageTypeDecoded
        let offsetMillisDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .offsetMillis)
        offsetMillis = offsetMillisDecoded
        let slateDecoded = try containerValues.decodeIfPresent(MediaTailorClientTypes.SlateSource.self, forKey: .slate)
        slate = slateDecoded
        let spliceInsertMessageDecoded = try containerValues.decodeIfPresent(MediaTailorClientTypes.SpliceInsertMessage.self, forKey: .spliceInsertMessage)
        spliceInsertMessage = spliceInsertMessageDecoded
    }
}
