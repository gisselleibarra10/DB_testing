// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaTailorClientTypes {
    /// The configuration parameters for a channel.
    public struct Channel: Swift.Equatable {
        /// The ARN of the channel.
        /// This member is required.
        public var arn: Swift.String?
        /// The name of the channel.
        /// This member is required.
        public var channelName: Swift.String?
        /// Returns the state whether the channel is running or not.
        /// This member is required.
        public var channelState: Swift.String?
        /// The timestamp of when the channel was created.
        public var creationTime: ClientRuntime.Date?
        /// The slate used to fill gaps between programs in the schedule. You must configure filler slate if your channel uses the LINEAR PlaybackMode. MediaTailor doesn't support filler slate for channels using the LOOP PlaybackMode.
        public var fillerSlate: MediaTailorClientTypes.SlateSource?
        /// The timestamp of when the channel was last modified.
        public var lastModifiedTime: ClientRuntime.Date?
        /// The channel's output properties.
        /// This member is required.
        public var outputs: [MediaTailorClientTypes.ResponseOutputItem]?
        /// The type of playback mode for this channel. LINEAR - Programs play back-to-back only once. LOOP - Programs play back-to-back in an endless loop. When the last program in the schedule plays, playback loops back to the first program in the schedule.
        /// This member is required.
        public var playbackMode: Swift.String?
        /// The tags to assign to the channel.
        public var tags: [Swift.String:Swift.String]?
        /// The tier for this channel. STANDARD tier channels can contain live programs.
        /// This member is required.
        public var tier: Swift.String?

        public init (
            arn: Swift.String? = nil,
            channelName: Swift.String? = nil,
            channelState: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            fillerSlate: MediaTailorClientTypes.SlateSource? = nil,
            lastModifiedTime: ClientRuntime.Date? = nil,
            outputs: [MediaTailorClientTypes.ResponseOutputItem]? = nil,
            playbackMode: Swift.String? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            tier: Swift.String? = nil
        )
        {
            self.arn = arn
            self.channelName = channelName
            self.channelState = channelState
            self.creationTime = creationTime
            self.fillerSlate = fillerSlate
            self.lastModifiedTime = lastModifiedTime
            self.outputs = outputs
            self.playbackMode = playbackMode
            self.tags = tags
            self.tier = tier
        }
    }

}
