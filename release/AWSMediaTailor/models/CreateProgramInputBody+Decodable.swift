// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateProgramInputBody: Swift.Equatable {
    let adBreaks: [MediaTailorClientTypes.AdBreak]?
    let liveSourceName: Swift.String?
    let scheduleConfiguration: MediaTailorClientTypes.ScheduleConfiguration?
    let sourceLocationName: Swift.String?
    let vodSourceName: Swift.String?
}

extension CreateProgramInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case adBreaks = "AdBreaks"
        case liveSourceName = "LiveSourceName"
        case scheduleConfiguration = "ScheduleConfiguration"
        case sourceLocationName = "SourceLocationName"
        case vodSourceName = "VodSourceName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let adBreaksContainer = try containerValues.decodeIfPresent([MediaTailorClientTypes.AdBreak?].self, forKey: .adBreaks)
        var adBreaksDecoded0:[MediaTailorClientTypes.AdBreak]? = nil
        if let adBreaksContainer = adBreaksContainer {
            adBreaksDecoded0 = [MediaTailorClientTypes.AdBreak]()
            for structure0 in adBreaksContainer {
                if let structure0 = structure0 {
                    adBreaksDecoded0?.append(structure0)
                }
            }
        }
        adBreaks = adBreaksDecoded0
        let liveSourceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .liveSourceName)
        liveSourceName = liveSourceNameDecoded
        let scheduleConfigurationDecoded = try containerValues.decodeIfPresent(MediaTailorClientTypes.ScheduleConfiguration.self, forKey: .scheduleConfiguration)
        scheduleConfiguration = scheduleConfigurationDecoded
        let sourceLocationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceLocationName)
        sourceLocationName = sourceLocationNameDecoded
        let vodSourceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vodSourceName)
        vodSourceName = vodSourceNameDecoded
    }
}
