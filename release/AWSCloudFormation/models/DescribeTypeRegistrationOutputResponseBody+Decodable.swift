// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTypeRegistrationOutputResponseBody: Swift.Equatable {
    let progressStatus: CloudFormationClientTypes.RegistrationStatus?
    let description: Swift.String?
    let typeArn: Swift.String?
    let typeVersionArn: Swift.String?
}

extension DescribeTypeRegistrationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case progressStatus = "ProgressStatus"
        case typeArn = "TypeArn"
        case typeVersionArn = "TypeVersionArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DescribeTypeRegistrationResult"))
        let progressStatusDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.RegistrationStatus.self, forKey: .progressStatus)
        progressStatus = progressStatusDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let typeArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeArn)
        typeArn = typeArnDecoded
        let typeVersionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeVersionArn)
        typeVersionArn = typeVersionArnDecoded
    }
}
