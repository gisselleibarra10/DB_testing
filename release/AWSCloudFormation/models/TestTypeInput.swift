// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct TestTypeInput: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of the extension. Conditional: You must specify Arn, or TypeName and Type.
    public var arn: Swift.String?
    /// The S3 bucket to which CloudFormation delivers the contract test execution logs. CloudFormation delivers the logs by the time contract testing has completed and the extension has been assigned a test type status of PASSED or FAILED. The user calling TestType must be able to access items in the specified S3 bucket. Specifically, the user needs the following permissions:
    ///
    /// * GetObject
    ///
    /// * PutObject
    ///
    ///
    /// For more information, see [Actions, Resources, and Condition Keys for Amazon S3](https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html) in the Amazon Web Services Identity and Access Management User Guide.
    public var logDeliveryBucket: Swift.String?
    /// The type of the extension to test. Conditional: You must specify Arn, or TypeName and Type.
    public var type: CloudFormationClientTypes.ThirdPartyType?
    /// The name of the extension to test. Conditional: You must specify Arn, or TypeName and Type.
    public var typeName: Swift.String?
    /// The version of the extension to test. You can specify the version id with either Arn, or with TypeName and Type. If you don't specify a version, CloudFormation uses the default version of the extension in this account and region for testing.
    public var versionId: Swift.String?

    public init (
        arn: Swift.String? = nil,
        logDeliveryBucket: Swift.String? = nil,
        type: CloudFormationClientTypes.ThirdPartyType? = nil,
        typeName: Swift.String? = nil,
        versionId: Swift.String? = nil
    )
    {
        self.arn = arn
        self.logDeliveryBucket = logDeliveryBucket
        self.type = type
        self.typeName = typeName
        self.versionId = versionId
    }
}
