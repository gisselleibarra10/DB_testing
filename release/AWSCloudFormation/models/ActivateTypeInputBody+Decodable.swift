// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ActivateTypeInputBody: Swift.Equatable {
    let type: CloudFormationClientTypes.ThirdPartyType?
    let publicTypeArn: Swift.String?
    let publisherId: Swift.String?
    let typeName: Swift.String?
    let typeNameAlias: Swift.String?
    let autoUpdate: Swift.Bool?
    let loggingConfig: CloudFormationClientTypes.LoggingConfig?
    let executionRoleArn: Swift.String?
    let versionBump: CloudFormationClientTypes.VersionBump?
    let majorVersion: Swift.Int?
}

extension ActivateTypeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case autoUpdate = "AutoUpdate"
        case executionRoleArn = "ExecutionRoleArn"
        case loggingConfig = "LoggingConfig"
        case majorVersion = "MajorVersion"
        case publicTypeArn = "PublicTypeArn"
        case publisherId = "PublisherId"
        case type = "Type"
        case typeName = "TypeName"
        case typeNameAlias = "TypeNameAlias"
        case versionBump = "VersionBump"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.ThirdPartyType.self, forKey: .type)
        type = typeDecoded
        let publicTypeArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publicTypeArn)
        publicTypeArn = publicTypeArnDecoded
        let publisherIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publisherId)
        publisherId = publisherIdDecoded
        let typeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeName)
        typeName = typeNameDecoded
        let typeNameAliasDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeNameAlias)
        typeNameAlias = typeNameAliasDecoded
        let autoUpdateDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .autoUpdate)
        autoUpdate = autoUpdateDecoded
        let loggingConfigDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.LoggingConfig.self, forKey: .loggingConfig)
        loggingConfig = loggingConfigDecoded
        let executionRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executionRoleArn)
        executionRoleArn = executionRoleArnDecoded
        let versionBumpDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.VersionBump.self, forKey: .versionBump)
        versionBump = versionBumpDecoded
        let majorVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .majorVersion)
        majorVersion = majorVersionDecoded
    }
}
