// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterTypeInputBody: Swift.Equatable {
    let type: CloudFormationClientTypes.RegistryType?
    let typeName: Swift.String?
    let schemaHandlerPackage: Swift.String?
    let loggingConfig: CloudFormationClientTypes.LoggingConfig?
    let executionRoleArn: Swift.String?
    let clientRequestToken: Swift.String?
}

extension RegisterTypeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case executionRoleArn = "ExecutionRoleArn"
        case loggingConfig = "LoggingConfig"
        case schemaHandlerPackage = "SchemaHandlerPackage"
        case type = "Type"
        case typeName = "TypeName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.RegistryType.self, forKey: .type)
        type = typeDecoded
        let typeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeName)
        typeName = typeNameDecoded
        let schemaHandlerPackageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .schemaHandlerPackage)
        schemaHandlerPackage = schemaHandlerPackageDecoded
        let loggingConfigDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.LoggingConfig.self, forKey: .loggingConfig)
        loggingConfig = loggingConfigDecoded
        let executionRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executionRoleArn)
        executionRoleArn = executionRoleArnDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
