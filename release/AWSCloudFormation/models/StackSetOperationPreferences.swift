// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CloudFormationClientTypes {
    /// The user-specified preferences for how CloudFormation performs a stack set operation. For more information about maximum concurrent accounts and failure tolerance, see [Stack set operation options](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options).
    public struct StackSetOperationPreferences: Swift.Equatable {
        /// The number of accounts, per Region, for which this operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions. Conditional: You must specify either FailureToleranceCount or FailureTolerancePercentage (but not both). By default, 0 is specified.
        public var failureToleranceCount: Swift.Int?
        /// The percentage of accounts, per Region, for which this stack operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions. When calculating the number of accounts based on the specified percentage, CloudFormation rounds down to the next whole number. Conditional: You must specify either FailureToleranceCount or FailureTolerancePercentage, but not both. By default, 0 is specified.
        public var failureTolerancePercentage: Swift.Int?
        /// The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of FailureToleranceCount.MaxConcurrentCount is at most one more than the FailureToleranceCount. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. Conditional: You must specify either MaxConcurrentCount or MaxConcurrentPercentage, but not both. By default, 1 is specified.
        public var maxConcurrentCount: Swift.Int?
        /// The maximum percentage of accounts in which to perform this operation at one time. When calculating the number of accounts based on the specified percentage, CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. Conditional: You must specify either MaxConcurrentCount or MaxConcurrentPercentage, but not both. By default, 1 is specified.
        public var maxConcurrentPercentage: Swift.Int?
        /// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.
        public var regionConcurrencyType: CloudFormationClientTypes.RegionConcurrencyType?
        /// The order of the Regions in where you want to perform the stack operation.
        public var regionOrder: [Swift.String]?

        public init (
            failureToleranceCount: Swift.Int? = nil,
            failureTolerancePercentage: Swift.Int? = nil,
            maxConcurrentCount: Swift.Int? = nil,
            maxConcurrentPercentage: Swift.Int? = nil,
            regionConcurrencyType: CloudFormationClientTypes.RegionConcurrencyType? = nil,
            regionOrder: [Swift.String]? = nil
        )
        {
            self.failureToleranceCount = failureToleranceCount
            self.failureTolerancePercentage = failureTolerancePercentage
            self.maxConcurrentCount = maxConcurrentCount
            self.maxConcurrentPercentage = maxConcurrentPercentage
            self.regionConcurrencyType = regionConcurrencyType
            self.regionOrder = regionOrder
        }
    }

}
