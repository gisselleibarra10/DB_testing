// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudFormationClientTypes.Change: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hookInvocationCount = "HookInvocationCount"
        case resourceChange = "ResourceChange"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let hookInvocationCount = hookInvocationCount {
            try container.encode(hookInvocationCount, forKey: ClientRuntime.Key("HookInvocationCount"))
        }
        if let resourceChange = resourceChange {
            try container.encode(resourceChange, forKey: ClientRuntime.Key("ResourceChange"))
        }
        if let type = type {
            try container.encode(type, forKey: ClientRuntime.Key("Type"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.ChangeType.self, forKey: .type)
        type = typeDecoded
        let hookInvocationCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .hookInvocationCount)
        hookInvocationCount = hookInvocationCountDecoded
        let resourceChangeDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.ResourceChange.self, forKey: .resourceChange)
        resourceChange = resourceChangeDecoded
    }
}
