// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDescribeTypeConfigurationsInputBody: Swift.Equatable {
    let typeConfigurationIdentifiers: [CloudFormationClientTypes.TypeConfigurationIdentifier]?
}

extension BatchDescribeTypeConfigurationsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case typeConfigurationIdentifiers = "TypeConfigurationIdentifiers"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.typeConfigurationIdentifiers) {
            struct KeyVal0{struct member{}}
            let typeConfigurationIdentifiersWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .typeConfigurationIdentifiers)
            if let typeConfigurationIdentifiersWrappedContainer = typeConfigurationIdentifiersWrappedContainer {
                let typeConfigurationIdentifiersContainer = try typeConfigurationIdentifiersWrappedContainer.decodeIfPresent([CloudFormationClientTypes.TypeConfigurationIdentifier].self, forKey: .member)
                var typeConfigurationIdentifiersBuffer:[CloudFormationClientTypes.TypeConfigurationIdentifier]? = nil
                if let typeConfigurationIdentifiersContainer = typeConfigurationIdentifiersContainer {
                    typeConfigurationIdentifiersBuffer = [CloudFormationClientTypes.TypeConfigurationIdentifier]()
                    for structureContainer0 in typeConfigurationIdentifiersContainer {
                        typeConfigurationIdentifiersBuffer?.append(structureContainer0)
                    }
                }
                typeConfigurationIdentifiers = typeConfigurationIdentifiersBuffer
            } else {
                typeConfigurationIdentifiers = []
            }
        } else {
            typeConfigurationIdentifiers = nil
        }
    }
}
