// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudFormationClientTypes.Parameter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case parameterKey = "ParameterKey"
        case parameterValue = "ParameterValue"
        case resolvedValue = "ResolvedValue"
        case usePreviousValue = "UsePreviousValue"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let parameterKey = parameterKey {
            try container.encode(parameterKey, forKey: ClientRuntime.Key("ParameterKey"))
        }
        if let parameterValue = parameterValue {
            try container.encode(parameterValue, forKey: ClientRuntime.Key("ParameterValue"))
        }
        if let resolvedValue = resolvedValue {
            try container.encode(resolvedValue, forKey: ClientRuntime.Key("ResolvedValue"))
        }
        if let usePreviousValue = usePreviousValue {
            try container.encode(usePreviousValue, forKey: ClientRuntime.Key("UsePreviousValue"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let parameterKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parameterKey)
        parameterKey = parameterKeyDecoded
        let parameterValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parameterValue)
        parameterValue = parameterValueDecoded
        let usePreviousValueDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .usePreviousValue)
        usePreviousValue = usePreviousValueDecoded
        let resolvedValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resolvedValue)
        resolvedValue = resolvedValueDecoded
    }
}
