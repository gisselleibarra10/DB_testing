// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SetTypeConfigurationInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let configuration = configuration {
            try container.encode(configuration, forKey: ClientRuntime.Key("Configuration"))
        }
        if let configurationAlias = configurationAlias {
            try container.encode(configurationAlias, forKey: ClientRuntime.Key("ConfigurationAlias"))
        }
        if let type = type {
            try container.encode(type, forKey: ClientRuntime.Key("Type"))
        }
        if let typeArn = typeArn {
            try container.encode(typeArn, forKey: ClientRuntime.Key("TypeArn"))
        }
        if let typeName = typeName {
            try container.encode(typeName, forKey: ClientRuntime.Key("TypeName"))
        }
        try container.encode("SetTypeConfiguration", forKey:ClientRuntime.Key("Action"))
        try container.encode("2010-05-15", forKey:ClientRuntime.Key("Version"))
    }
}
