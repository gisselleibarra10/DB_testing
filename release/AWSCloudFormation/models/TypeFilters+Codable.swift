// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudFormationClientTypes.TypeFilters: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case category = "Category"
        case publisherId = "PublisherId"
        case typeNamePrefix = "TypeNamePrefix"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let category = category {
            try container.encode(category, forKey: ClientRuntime.Key("Category"))
        }
        if let publisherId = publisherId {
            try container.encode(publisherId, forKey: ClientRuntime.Key("PublisherId"))
        }
        if let typeNamePrefix = typeNamePrefix {
            try container.encode(typeNamePrefix, forKey: ClientRuntime.Key("TypeNamePrefix"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let categoryDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.Category.self, forKey: .category)
        category = categoryDecoded
        let publisherIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publisherId)
        publisherId = publisherIdDecoded
        let typeNamePrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeNamePrefix)
        typeNamePrefix = typeNamePrefixDecoded
    }
}
