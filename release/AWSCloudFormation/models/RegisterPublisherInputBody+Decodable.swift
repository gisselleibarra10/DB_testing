// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterPublisherInputBody: Swift.Equatable {
    let acceptTermsAndConditions: Swift.Bool?
    let connectionArn: Swift.String?
}

extension RegisterPublisherInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceptTermsAndConditions = "AcceptTermsAndConditions"
        case connectionArn = "ConnectionArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceptTermsAndConditionsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .acceptTermsAndConditions)
        acceptTermsAndConditions = acceptTermsAndConditionsDecoded
        let connectionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectionArn)
        connectionArn = connectionArnDecoded
    }
}
