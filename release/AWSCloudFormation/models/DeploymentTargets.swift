// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CloudFormationClientTypes {
    /// [Service-managed permissions] The Organizations accounts to which StackSets deploys. StackSets doesn't deploy stack instances to the organization management account, even if the organization management account is in your organization or in an OU in your organization. For update operations, you can specify either Accounts or OrganizationalUnitIds. For create and delete operations, specify OrganizationalUnitIds.
    public struct DeploymentTargets: Swift.Equatable {
        /// Limit deployment targets to individual accounts or include additional accounts with provided OUs. The following is a list of possible values for the AccountFilterType operation.
        ///
        /// * INTERSECTION: StackSets deploys to the accounts specified in Accounts parameter.
        ///
        /// * DIFFERENCE: StackSets excludes the accounts specified in Accounts parameter. This enables user to avoid certain accounts within an OU such as suspended accounts.
        ///
        /// * UNION: (default value) StackSets includes additional accounts deployment targets. This is the default value if AccountFilterType is not provided. This enables user to update an entire OU and individual accounts from a different OU in one request, which used to be two separate requests.
        ///
        /// * NONE: Deploys to all the accounts in specified organizational units (OU).
        public var accountFilterType: CloudFormationClientTypes.AccountFilterType?
        /// The names of one or more Amazon Web Services accounts for which you want to deploy stack set updates.
        public var accounts: [Swift.String]?
        /// Returns the value of the AccountsUrl property.
        public var accountsUrl: Swift.String?
        /// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
        public var organizationalUnitIds: [Swift.String]?

        public init (
            accountFilterType: CloudFormationClientTypes.AccountFilterType? = nil,
            accounts: [Swift.String]? = nil,
            accountsUrl: Swift.String? = nil,
            organizationalUnitIds: [Swift.String]? = nil
        )
        {
            self.accountFilterType = accountFilterType
            self.accounts = accounts
            self.accountsUrl = accountsUrl
            self.organizationalUnitIds = organizationalUnitIds
        }
    }

}
