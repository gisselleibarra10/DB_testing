// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudFormationClientTypes {
    /// The structures that contain summary information about the specified stack set.
    public struct StackSetSummary: Swift.Equatable {
        /// [Service-managed permissions] Describes whether StackSets automatically deploys to Organizations accounts that are added to a target organizational unit (OU).
        public var autoDeployment: CloudFormationClientTypes.AutoDeployment?
        /// A description of the stack set that you specify when the stack set is created or updated.
        public var description: Swift.String?
        /// Status of the stack set's actual configuration compared to its expected template and parameter configuration. A stack set is considered to have drifted if one or more of its stack instances have drifted from their expected template and parameter configuration.
        ///
        /// * DRIFTED: One or more of the stack instances belonging to the stack set stack differs from the expected template and parameter configuration. A stack instance is considered to have drifted if one or more of the resources in the associated stack have drifted.
        ///
        /// * NOT_CHECKED: CloudFormation hasn't checked the stack set for drift.
        ///
        /// * IN_SYNC: All the stack instances belonging to the stack set stack match from the expected template and parameter configuration.
        ///
        /// * UNKNOWN: This value is reserved for future use.
        public var driftStatus: CloudFormationClientTypes.StackDriftStatus?
        /// Most recent time when CloudFormation performed a drift detection operation on the stack set. This value will be NULL for any stack set on which drift detection hasn't yet been performed.
        public var lastDriftCheckTimestamp: ClientRuntime.Date?
        /// Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.
        public var managedExecution: CloudFormationClientTypes.ManagedExecution?
        /// Describes how the IAM roles required for stack set operations are created.
        ///
        /// * With self-managed permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see [Grant Self-Managed Stack Set Permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html).
        ///
        /// * With service-managed permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see [Grant Service-Managed Stack Set Permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html).
        public var permissionModel: CloudFormationClientTypes.PermissionModels?
        /// The ID of the stack set.
        public var stackSetId: Swift.String?
        /// The name of the stack set.
        public var stackSetName: Swift.String?
        /// The status of the stack set.
        public var status: CloudFormationClientTypes.StackSetStatus?

        public init (
            autoDeployment: CloudFormationClientTypes.AutoDeployment? = nil,
            description: Swift.String? = nil,
            driftStatus: CloudFormationClientTypes.StackDriftStatus? = nil,
            lastDriftCheckTimestamp: ClientRuntime.Date? = nil,
            managedExecution: CloudFormationClientTypes.ManagedExecution? = nil,
            permissionModel: CloudFormationClientTypes.PermissionModels? = nil,
            stackSetId: Swift.String? = nil,
            stackSetName: Swift.String? = nil,
            status: CloudFormationClientTypes.StackSetStatus? = nil
        )
        {
            self.autoDeployment = autoDeployment
            self.description = description
            self.driftStatus = driftStatus
            self.lastDriftCheckTimestamp = lastDriftCheckTimestamp
            self.managedExecution = managedExecution
            self.permissionModel = permissionModel
            self.stackSetId = stackSetId
            self.stackSetName = stackSetName
            self.status = status
        }
    }

}
