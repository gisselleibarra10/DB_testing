// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListChangeSetsOutputResponseBody: Swift.Equatable {
    let summaries: [CloudFormationClientTypes.ChangeSetSummary]?
    let nextToken: Swift.String?
}

extension ListChangeSetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case summaries = "Summaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("ListChangeSetsResult"))
        if containerValues.contains(.summaries) {
            struct KeyVal0{struct member{}}
            let summariesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .summaries)
            if let summariesWrappedContainer = summariesWrappedContainer {
                let summariesContainer = try summariesWrappedContainer.decodeIfPresent([CloudFormationClientTypes.ChangeSetSummary].self, forKey: .member)
                var summariesBuffer:[CloudFormationClientTypes.ChangeSetSummary]? = nil
                if let summariesContainer = summariesContainer {
                    summariesBuffer = [CloudFormationClientTypes.ChangeSetSummary]()
                    for structureContainer0 in summariesContainer {
                        summariesBuffer?.append(structureContainer0)
                    }
                }
                summaries = summariesBuffer
            } else {
                summaries = []
            }
        } else {
            summaries = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
