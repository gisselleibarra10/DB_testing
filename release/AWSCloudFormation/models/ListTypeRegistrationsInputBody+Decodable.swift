// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTypeRegistrationsInputBody: Swift.Equatable {
    let type: CloudFormationClientTypes.RegistryType?
    let typeName: Swift.String?
    let typeArn: Swift.String?
    let registrationStatusFilter: CloudFormationClientTypes.RegistrationStatus?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension ListTypeRegistrationsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case registrationStatusFilter = "RegistrationStatusFilter"
        case type = "Type"
        case typeArn = "TypeArn"
        case typeName = "TypeName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.RegistryType.self, forKey: .type)
        type = typeDecoded
        let typeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeName)
        typeName = typeNameDecoded
        let typeArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeArn)
        typeArn = typeArnDecoded
        let registrationStatusFilterDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.RegistrationStatus.self, forKey: .registrationStatusFilter)
        registrationStatusFilter = registrationStatusFilterDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
