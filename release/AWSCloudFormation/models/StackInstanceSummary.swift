// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudFormationClientTypes {
    /// The structure that contains summary information about a stack instance.
    public struct StackInstanceSummary: Swift.Equatable {
        /// [Self-managed permissions] The name of the Amazon Web Services account that the stack instance is associated with.
        public var account: Swift.String?
        /// Status of the stack instance's actual configuration compared to the expected template and parameter configuration of the stack set to which it belongs.
        ///
        /// * DRIFTED: The stack differs from the expected template and parameter configuration of the stack set to which it belongs. A stack instance is considered to have drifted if one or more of the resources in the associated stack have drifted.
        ///
        /// * NOT_CHECKED: CloudFormation hasn't checked if the stack instance differs from its expected stack set configuration.
        ///
        /// * IN_SYNC: The stack instance's actual configuration matches its expected stack set configuration.
        ///
        /// * UNKNOWN: This value is reserved for future use.
        public var driftStatus: CloudFormationClientTypes.StackDriftStatus?
        /// Most recent time when CloudFormation performed a drift detection operation on the stack instance. This value will be NULL for any stack instance on which drift detection hasn't yet been performed.
        public var lastDriftCheckTimestamp: ClientRuntime.Date?
        /// [Service-managed permissions] The organization root ID or organizational unit (OU) IDs that you specified for [DeploymentTargets](https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeploymentTargets.html).
        public var organizationalUnitId: Swift.String?
        /// The name of the Amazon Web Services Region that the stack instance is associated with.
        public var region: Swift.String?
        /// The ID of the stack instance.
        public var stackId: Swift.String?
        /// The detailed status of the stack instance.
        public var stackInstanceStatus: CloudFormationClientTypes.StackInstanceComprehensiveStatus?
        /// The name or unique ID of the stack set that the stack instance is associated with.
        public var stackSetId: Swift.String?
        /// The status of the stack instance, in terms of its synchronization with its associated stack set.
        ///
        /// * INOPERABLE: A DeleteStackInstances operation has failed and left the stack in an unstable state. Stacks in this state are excluded from further UpdateStackSet operations. You might need to perform a DeleteStackInstances operation, with RetainStacks set to true, to delete the stack instance, and then delete the stack manually.
        ///
        /// * OUTDATED: The stack isn't currently up to date with the stack set because:
        ///
        /// * The associated stack failed during a CreateStackSet or UpdateStackSet operation.
        ///
        /// * The stack was part of a CreateStackSet or UpdateStackSet operation that failed or was stopped before the stack was created or updated.
        ///
        ///
        ///
        ///
        /// * CURRENT: The stack is currently up to date with the stack set.
        public var status: CloudFormationClientTypes.StackInstanceStatus?
        /// The explanation for the specific status code assigned to this stack instance.
        public var statusReason: Swift.String?

        public init (
            account: Swift.String? = nil,
            driftStatus: CloudFormationClientTypes.StackDriftStatus? = nil,
            lastDriftCheckTimestamp: ClientRuntime.Date? = nil,
            organizationalUnitId: Swift.String? = nil,
            region: Swift.String? = nil,
            stackId: Swift.String? = nil,
            stackInstanceStatus: CloudFormationClientTypes.StackInstanceComprehensiveStatus? = nil,
            stackSetId: Swift.String? = nil,
            status: CloudFormationClientTypes.StackInstanceStatus? = nil,
            statusReason: Swift.String? = nil
        )
        {
            self.account = account
            self.driftStatus = driftStatus
            self.lastDriftCheckTimestamp = lastDriftCheckTimestamp
            self.organizationalUnitId = organizationalUnitId
            self.region = region
            self.stackId = stackId
            self.stackInstanceStatus = stackInstanceStatus
            self.stackSetId = stackSetId
            self.status = status
            self.statusReason = statusReason
        }
    }

}
