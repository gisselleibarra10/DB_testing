// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DeleteStackInstancesInput: Swift.Equatable {
    /// [Self-managed permissions] The names of the Amazon Web Services accounts that you want to delete stack instances for. You can specify Accounts or DeploymentTargets, but not both.
    public var accounts: [Swift.String]?
    /// [Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account. By default, SELF is specified. Use SELF for stack sets with self-managed permissions.
    ///
    /// * If you are signed in to the management account, specify SELF.
    ///
    /// * If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN. Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see [Register a delegated administrator](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html) in the CloudFormation User Guide.
    public var callAs: CloudFormationClientTypes.CallAs?
    /// [Service-managed permissions] The Organizations accounts from which to delete stack instances. You can specify Accounts or DeploymentTargets, but not both.
    public var deploymentTargets: CloudFormationClientTypes.DeploymentTargets?
    /// The unique identifier for this stack set operation. If you don't specify an operation ID, the SDK generates one automatically. The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that CloudFormation successfully received them. Repeating this stack set operation with a new operation ID retries all stack instances whose status is OUTDATED.
    public var operationId: Swift.String?
    /// Preferences for how CloudFormation performs this stack set operation.
    public var operationPreferences: CloudFormationClientTypes.StackSetOperationPreferences?
    /// The Amazon Web Services Regions where you want to delete stack set instances.
    /// This member is required.
    public var regions: [Swift.String]?
    /// Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set. For more information, see [Stack set operation options](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options).
    /// This member is required.
    public var retainStacks: Swift.Bool
    /// The name or unique ID of the stack set that you want to delete stack instances for.
    /// This member is required.
    public var stackSetName: Swift.String?

    public init (
        accounts: [Swift.String]? = nil,
        callAs: CloudFormationClientTypes.CallAs? = nil,
        deploymentTargets: CloudFormationClientTypes.DeploymentTargets? = nil,
        operationId: Swift.String? = nil,
        operationPreferences: CloudFormationClientTypes.StackSetOperationPreferences? = nil,
        regions: [Swift.String]? = nil,
        retainStacks: Swift.Bool = false,
        stackSetName: Swift.String? = nil
    )
    {
        self.accounts = accounts
        self.callAs = callAs
        self.deploymentTargets = deploymentTargets
        self.operationId = operationId
        self.operationPreferences = operationPreferences
        self.regions = regions
        self.retainStacks = retainStacks
        self.stackSetName = stackSetName
    }
}
