// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImportStacksToStackSetInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let callAs = callAs {
            try container.encode(callAs, forKey: ClientRuntime.Key("CallAs"))
        }
        if let operationId = operationId {
            try container.encode(operationId, forKey: ClientRuntime.Key("OperationId"))
        }
        if let operationPreferences = operationPreferences {
            try container.encode(operationPreferences, forKey: ClientRuntime.Key("OperationPreferences"))
        }
        if let organizationalUnitIds = organizationalUnitIds {
            var organizationalUnitIdsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("OrganizationalUnitIds"))
            for (index0, organizationalunitid0) in organizationalUnitIds.enumerated() {
                try organizationalUnitIdsContainer.encode(organizationalunitid0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let stackIds = stackIds {
            var stackIdsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("StackIds"))
            for (index0, stackid0) in stackIds.enumerated() {
                try stackIdsContainer.encode(stackid0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let stackIdsUrl = stackIdsUrl {
            try container.encode(stackIdsUrl, forKey: ClientRuntime.Key("StackIdsUrl"))
        }
        if let stackSetName = stackSetName {
            try container.encode(stackSetName, forKey: ClientRuntime.Key("StackSetName"))
        }
        try container.encode("ImportStacksToStackSet", forKey:ClientRuntime.Key("Action"))
        try container.encode("2010-05-15", forKey:ClientRuntime.Key("Version"))
    }
}
