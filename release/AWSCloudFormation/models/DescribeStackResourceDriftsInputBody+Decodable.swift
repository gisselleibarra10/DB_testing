// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeStackResourceDriftsInputBody: Swift.Equatable {
    let stackName: Swift.String?
    let stackResourceDriftStatusFilters: [CloudFormationClientTypes.StackResourceDriftStatus]?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension DescribeStackResourceDriftsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case stackName = "StackName"
        case stackResourceDriftStatusFilters = "StackResourceDriftStatusFilters"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stackName)
        stackName = stackNameDecoded
        if containerValues.contains(.stackResourceDriftStatusFilters) {
            struct KeyVal0{struct member{}}
            let stackResourceDriftStatusFiltersWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .stackResourceDriftStatusFilters)
            if let stackResourceDriftStatusFiltersWrappedContainer = stackResourceDriftStatusFiltersWrappedContainer {
                let stackResourceDriftStatusFiltersContainer = try stackResourceDriftStatusFiltersWrappedContainer.decodeIfPresent([CloudFormationClientTypes.StackResourceDriftStatus].self, forKey: .member)
                var stackResourceDriftStatusFiltersBuffer:[CloudFormationClientTypes.StackResourceDriftStatus]? = nil
                if let stackResourceDriftStatusFiltersContainer = stackResourceDriftStatusFiltersContainer {
                    stackResourceDriftStatusFiltersBuffer = [CloudFormationClientTypes.StackResourceDriftStatus]()
                    for stringContainer0 in stackResourceDriftStatusFiltersContainer {
                        stackResourceDriftStatusFiltersBuffer?.append(stringContainer0)
                    }
                }
                stackResourceDriftStatusFilters = stackResourceDriftStatusFiltersBuffer
            } else {
                stackResourceDriftStatusFilters = []
            }
        } else {
            stackResourceDriftStatusFilters = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
