// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStackResourcesOutputResponseBody: Swift.Equatable {
    let stackResourceSummaries: [CloudFormationClientTypes.StackResourceSummary]?
    let nextToken: Swift.String?
}

extension ListStackResourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case stackResourceSummaries = "StackResourceSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("ListStackResourcesResult"))
        if containerValues.contains(.stackResourceSummaries) {
            struct KeyVal0{struct member{}}
            let stackResourceSummariesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .stackResourceSummaries)
            if let stackResourceSummariesWrappedContainer = stackResourceSummariesWrappedContainer {
                let stackResourceSummariesContainer = try stackResourceSummariesWrappedContainer.decodeIfPresent([CloudFormationClientTypes.StackResourceSummary].self, forKey: .member)
                var stackResourceSummariesBuffer:[CloudFormationClientTypes.StackResourceSummary]? = nil
                if let stackResourceSummariesContainer = stackResourceSummariesContainer {
                    stackResourceSummariesBuffer = [CloudFormationClientTypes.StackResourceSummary]()
                    for structureContainer0 in stackResourceSummariesContainer {
                        stackResourceSummariesBuffer?.append(structureContainer0)
                    }
                }
                stackResourceSummaries = stackResourceSummariesBuffer
            } else {
                stackResourceSummaries = []
            }
        } else {
            stackResourceSummaries = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
