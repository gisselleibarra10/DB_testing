// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateStackInstancesInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let accounts = accounts {
            var accountsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Accounts"))
            for (index0, account0) in accounts.enumerated() {
                try accountsContainer.encode(account0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let callAs = callAs {
            try container.encode(callAs, forKey: ClientRuntime.Key("CallAs"))
        }
        if let deploymentTargets = deploymentTargets {
            try container.encode(deploymentTargets, forKey: ClientRuntime.Key("DeploymentTargets"))
        }
        if let operationId = operationId {
            try container.encode(operationId, forKey: ClientRuntime.Key("OperationId"))
        }
        if let operationPreferences = operationPreferences {
            try container.encode(operationPreferences, forKey: ClientRuntime.Key("OperationPreferences"))
        }
        if let parameterOverrides = parameterOverrides {
            var parameterOverridesContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("ParameterOverrides"))
            for (index0, parameter0) in parameterOverrides.enumerated() {
                try parameterOverridesContainer.encode(parameter0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let regions = regions {
            var regionsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Regions"))
            for (index0, region0) in regions.enumerated() {
                try regionsContainer.encode(region0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let stackSetName = stackSetName {
            try container.encode(stackSetName, forKey: ClientRuntime.Key("StackSetName"))
        }
        try container.encode("UpdateStackInstances", forKey:ClientRuntime.Key("Action"))
        try container.encode("2010-05-15", forKey:ClientRuntime.Key("Version"))
    }
}
