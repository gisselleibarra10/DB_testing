// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestTypeInputBody: Swift.Equatable {
    let arn: Swift.String?
    let type: CloudFormationClientTypes.ThirdPartyType?
    let typeName: Swift.String?
    let versionId: Swift.String?
    let logDeliveryBucket: Swift.String?
}

extension TestTypeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case logDeliveryBucket = "LogDeliveryBucket"
        case type = "Type"
        case typeName = "TypeName"
        case versionId = "VersionId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let typeDecoded = try containerValues.decodeIfPresent(CloudFormationClientTypes.ThirdPartyType.self, forKey: .type)
        type = typeDecoded
        let typeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeName)
        typeName = typeNameDecoded
        let versionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .versionId)
        versionId = versionIdDecoded
        let logDeliveryBucketDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logDeliveryBucket)
        logDeliveryBucket = logDeliveryBucketDecoded
    }
}
