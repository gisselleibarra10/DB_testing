// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGroundStationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let groundStationList: [GroundStationClientTypes.GroundStationData]?
}

extension ListGroundStationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groundStationList
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let groundStationListContainer = try containerValues.decodeIfPresent([GroundStationClientTypes.GroundStationData?].self, forKey: .groundStationList)
        var groundStationListDecoded0:[GroundStationClientTypes.GroundStationData]? = nil
        if let groundStationListContainer = groundStationListContainer {
            groundStationListDecoded0 = [GroundStationClientTypes.GroundStationData]()
            for structure0 in groundStationListContainer {
                if let structure0 = structure0 {
                    groundStationListDecoded0?.append(structure0)
                }
            }
        }
        groundStationList = groundStationListDecoded0
    }
}
