// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSatellitesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let satellites: [GroundStationClientTypes.SatelliteListItem]?
}

extension ListSatellitesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case satellites
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let satellitesContainer = try containerValues.decodeIfPresent([GroundStationClientTypes.SatelliteListItem?].self, forKey: .satellites)
        var satellitesDecoded0:[GroundStationClientTypes.SatelliteListItem]? = nil
        if let satellitesContainer = satellitesContainer {
            satellitesDecoded0 = [GroundStationClientTypes.SatelliteListItem]()
            for structure0 in satellitesContainer {
                if let structure0 = structure0 {
                    satellitesDecoded0?.append(structure0)
                }
            }
        }
        satellites = satellitesDecoded0
    }
}
