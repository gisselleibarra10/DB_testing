// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GroundStationClientTypes {
    /// Data describing a contact.
    public struct ContactData: Swift.Equatable {
        /// UUID of a contact.
        public var contactId: Swift.String?
        /// Status of a contact.
        public var contactStatus: GroundStationClientTypes.ContactStatus?
        /// End time of a contact.
        public var endTime: ClientRuntime.Date?
        /// Error message of a contact.
        public var errorMessage: Swift.String?
        /// Name of a ground station.
        public var groundStation: Swift.String?
        /// Maximum elevation angle of a contact.
        public var maximumElevation: GroundStationClientTypes.Elevation?
        /// ARN of a mission profile.
        public var missionProfileArn: Swift.String?
        /// Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.
        public var postPassEndTime: ClientRuntime.Date?
        /// Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.
        public var prePassStartTime: ClientRuntime.Date?
        /// Region of a contact.
        public var region: Swift.String?
        /// ARN of a satellite.
        public var satelliteArn: Swift.String?
        /// Start time of a contact.
        public var startTime: ClientRuntime.Date?
        /// Tags assigned to a contact.
        public var tags: [Swift.String:Swift.String]?

        public init (
            contactId: Swift.String? = nil,
            contactStatus: GroundStationClientTypes.ContactStatus? = nil,
            endTime: ClientRuntime.Date? = nil,
            errorMessage: Swift.String? = nil,
            groundStation: Swift.String? = nil,
            maximumElevation: GroundStationClientTypes.Elevation? = nil,
            missionProfileArn: Swift.String? = nil,
            postPassEndTime: ClientRuntime.Date? = nil,
            prePassStartTime: ClientRuntime.Date? = nil,
            region: Swift.String? = nil,
            satelliteArn: Swift.String? = nil,
            startTime: ClientRuntime.Date? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.contactId = contactId
            self.contactStatus = contactStatus
            self.endTime = endTime
            self.errorMessage = errorMessage
            self.groundStation = groundStation
            self.maximumElevation = maximumElevation
            self.missionProfileArn = missionProfileArn
            self.postPassEndTime = postPassEndTime
            self.prePassStartTime = prePassStartTime
            self.region = region
            self.satelliteArn = satelliteArn
            self.startTime = startTime
            self.tags = tags
        }
    }

}
