// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConfigsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let configList: [GroundStationClientTypes.ConfigListItem]?
}

extension ListConfigsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configList
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let configListContainer = try containerValues.decodeIfPresent([GroundStationClientTypes.ConfigListItem?].self, forKey: .configList)
        var configListDecoded0:[GroundStationClientTypes.ConfigListItem]? = nil
        if let configListContainer = configListContainer {
            configListDecoded0 = [GroundStationClientTypes.ConfigListItem]()
            for structure0 in configListContainer {
                if let structure0 = structure0 {
                    configListDecoded0?.append(structure0)
                }
            }
        }
        configList = configListDecoded0
    }
}
