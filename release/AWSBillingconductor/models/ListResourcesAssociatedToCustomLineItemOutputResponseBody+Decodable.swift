// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourcesAssociatedToCustomLineItemOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let associatedResources: [BillingconductorClientTypes.ListResourcesAssociatedToCustomLineItemResponseElement]?
    let nextToken: Swift.String?
}

extension ListResourcesAssociatedToCustomLineItemOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case associatedResources = "AssociatedResources"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let associatedResourcesContainer = try containerValues.decodeIfPresent([BillingconductorClientTypes.ListResourcesAssociatedToCustomLineItemResponseElement?].self, forKey: .associatedResources)
        var associatedResourcesDecoded0:[BillingconductorClientTypes.ListResourcesAssociatedToCustomLineItemResponseElement]? = nil
        if let associatedResourcesContainer = associatedResourcesContainer {
            associatedResourcesDecoded0 = [BillingconductorClientTypes.ListResourcesAssociatedToCustomLineItemResponseElement]()
            for structure0 in associatedResourcesContainer {
                if let structure0 = structure0 {
                    associatedResourcesDecoded0?.append(structure0)
                }
            }
        }
        associatedResources = associatedResourcesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
