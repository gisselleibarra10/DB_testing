// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateBillingGroupInputBody: Swift.Equatable {
    let arn: Swift.String?
    let name: Swift.String?
    let status: BillingconductorClientTypes.BillingGroupStatus?
    let computationPreference: BillingconductorClientTypes.ComputationPreference?
    let description: Swift.String?
}

extension UpdateBillingGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case computationPreference = "ComputationPreference"
        case description = "Description"
        case name = "Name"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(BillingconductorClientTypes.BillingGroupStatus.self, forKey: .status)
        status = statusDecoded
        let computationPreferenceDecoded = try containerValues.decodeIfPresent(BillingconductorClientTypes.ComputationPreference.self, forKey: .computationPreference)
        computationPreference = computationPreferenceDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
    }
}
