// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BillingconductorClientTypes.BillingGroupCostReportElement: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aWSCost = "AWSCost"
        case arn = "Arn"
        case currency = "Currency"
        case margin = "Margin"
        case marginPercentage = "MarginPercentage"
        case proformaCost = "ProformaCost"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aWSCost = self.aWSCost {
            try encodeContainer.encode(aWSCost, forKey: .aWSCost)
        }
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let currency = self.currency {
            try encodeContainer.encode(currency, forKey: .currency)
        }
        if let margin = self.margin {
            try encodeContainer.encode(margin, forKey: .margin)
        }
        if let marginPercentage = self.marginPercentage {
            try encodeContainer.encode(marginPercentage, forKey: .marginPercentage)
        }
        if let proformaCost = self.proformaCost {
            try encodeContainer.encode(proformaCost, forKey: .proformaCost)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let aWSCostDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .aWSCost)
        aWSCost = aWSCostDecoded
        let proformaCostDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .proformaCost)
        proformaCost = proformaCostDecoded
        let marginDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .margin)
        margin = marginDecoded
        let marginPercentageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marginPercentage)
        marginPercentage = marginPercentageDecoded
        let currencyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .currency)
        currency = currencyDecoded
    }
}
