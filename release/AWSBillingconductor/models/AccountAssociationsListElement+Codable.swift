// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BillingconductorClientTypes.AccountAssociationsListElement: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountEmail = "AccountEmail"
        case accountId = "AccountId"
        case accountName = "AccountName"
        case billingGroupArn = "BillingGroupArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountEmail = self.accountEmail {
            try encodeContainer.encode(accountEmail, forKey: .accountEmail)
        }
        if let accountId = self.accountId {
            try encodeContainer.encode(accountId, forKey: .accountId)
        }
        if let accountName = self.accountName {
            try encodeContainer.encode(accountName, forKey: .accountName)
        }
        if let billingGroupArn = self.billingGroupArn {
            try encodeContainer.encode(billingGroupArn, forKey: .billingGroupArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let billingGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .billingGroupArn)
        billingGroupArn = billingGroupArnDecoded
        let accountNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountName)
        accountName = accountNameDecoded
        let accountEmailDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountEmail)
        accountEmail = accountEmailDecoded
    }
}
