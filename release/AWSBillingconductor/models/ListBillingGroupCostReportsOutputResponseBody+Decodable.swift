// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBillingGroupCostReportsOutputResponseBody: Swift.Equatable {
    let billingGroupCostReports: [BillingconductorClientTypes.BillingGroupCostReportElement]?
    let nextToken: Swift.String?
}

extension ListBillingGroupCostReportsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case billingGroupCostReports = "BillingGroupCostReports"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let billingGroupCostReportsContainer = try containerValues.decodeIfPresent([BillingconductorClientTypes.BillingGroupCostReportElement?].self, forKey: .billingGroupCostReports)
        var billingGroupCostReportsDecoded0:[BillingconductorClientTypes.BillingGroupCostReportElement]? = nil
        if let billingGroupCostReportsContainer = billingGroupCostReportsContainer {
            billingGroupCostReportsDecoded0 = [BillingconductorClientTypes.BillingGroupCostReportElement]()
            for structure0 in billingGroupCostReportsContainer {
                if let structure0 = structure0 {
                    billingGroupCostReportsDecoded0?.append(structure0)
                }
            }
        }
        billingGroupCostReports = billingGroupCostReportsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
