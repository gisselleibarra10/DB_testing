// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdatePricingRuleInputBody: Swift.Equatable {
    let arn: Swift.String?
    let name: Swift.String?
    let description: Swift.String?
    let type: BillingconductorClientTypes.PricingRuleType?
    let modifierPercentage: Swift.Double?
}

extension UpdatePricingRuleInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case description = "Description"
        case modifierPercentage = "ModifierPercentage"
        case name = "Name"
        case type = "Type"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let typeDecoded = try containerValues.decodeIfPresent(BillingconductorClientTypes.PricingRuleType.self, forKey: .type)
        type = typeDecoded
        let modifierPercentageDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .modifierPercentage)
        modifierPercentage = modifierPercentageDecoded
    }
}
