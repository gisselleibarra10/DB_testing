// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCustomLineItemsOutputResponseBody: Swift.Equatable {
    let customLineItems: [BillingconductorClientTypes.CustomLineItemListElement]?
    let nextToken: Swift.String?
}

extension ListCustomLineItemsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customLineItems = "CustomLineItems"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customLineItemsContainer = try containerValues.decodeIfPresent([BillingconductorClientTypes.CustomLineItemListElement?].self, forKey: .customLineItems)
        var customLineItemsDecoded0:[BillingconductorClientTypes.CustomLineItemListElement]? = nil
        if let customLineItemsContainer = customLineItemsContainer {
            customLineItemsDecoded0 = [BillingconductorClientTypes.CustomLineItemListElement]()
            for structure0 in customLineItemsContainer {
                if let structure0 = structure0 {
                    customLineItemsDecoded0?.append(structure0)
                }
            }
        }
        customLineItems = customLineItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
