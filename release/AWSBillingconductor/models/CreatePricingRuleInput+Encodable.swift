// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreatePricingRuleInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case modifierPercentage = "ModifierPercentage"
        case name = "Name"
        case scope = "Scope"
        case service = "Service"
        case tags = "Tags"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let modifierPercentage = self.modifierPercentage {
            try encodeContainer.encode(modifierPercentage, forKey: .modifierPercentage)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let scope = self.scope {
            try encodeContainer.encode(scope.rawValue, forKey: .scope)
        }
        if let service = self.service {
            try encodeContainer.encode(service, forKey: .service)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, tagmap0) in tags {
                try tagsContainer.encode(tagmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }
}
