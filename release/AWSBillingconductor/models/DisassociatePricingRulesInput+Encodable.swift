// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DisassociatePricingRulesInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case pricingRuleArns = "PricingRuleArns"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let pricingRuleArns = pricingRuleArns {
            var pricingRuleArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .pricingRuleArns)
            for pricingrulearnsnonemptyinput0 in pricingRuleArns {
                try pricingRuleArnsContainer.encode(pricingrulearnsnonemptyinput0)
            }
        }
    }
}
