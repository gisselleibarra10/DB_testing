// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDisassociateResourcesFromCustomLineItemOutputResponseBody: Swift.Equatable {
    let successfullyDisassociatedResources: [BillingconductorClientTypes.DisassociateResourceResponseElement]?
    let failedDisassociatedResources: [BillingconductorClientTypes.DisassociateResourceResponseElement]?
}

extension BatchDisassociateResourcesFromCustomLineItemOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failedDisassociatedResources = "FailedDisassociatedResources"
        case successfullyDisassociatedResources = "SuccessfullyDisassociatedResources"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successfullyDisassociatedResourcesContainer = try containerValues.decodeIfPresent([BillingconductorClientTypes.DisassociateResourceResponseElement?].self, forKey: .successfullyDisassociatedResources)
        var successfullyDisassociatedResourcesDecoded0:[BillingconductorClientTypes.DisassociateResourceResponseElement]? = nil
        if let successfullyDisassociatedResourcesContainer = successfullyDisassociatedResourcesContainer {
            successfullyDisassociatedResourcesDecoded0 = [BillingconductorClientTypes.DisassociateResourceResponseElement]()
            for structure0 in successfullyDisassociatedResourcesContainer {
                if let structure0 = structure0 {
                    successfullyDisassociatedResourcesDecoded0?.append(structure0)
                }
            }
        }
        successfullyDisassociatedResources = successfullyDisassociatedResourcesDecoded0
        let failedDisassociatedResourcesContainer = try containerValues.decodeIfPresent([BillingconductorClientTypes.DisassociateResourceResponseElement?].self, forKey: .failedDisassociatedResources)
        var failedDisassociatedResourcesDecoded0:[BillingconductorClientTypes.DisassociateResourceResponseElement]? = nil
        if let failedDisassociatedResourcesContainer = failedDisassociatedResourcesContainer {
            failedDisassociatedResourcesDecoded0 = [BillingconductorClientTypes.DisassociateResourceResponseElement]()
            for structure0 in failedDisassociatedResourcesContainer {
                if let structure0 = structure0 {
                    failedDisassociatedResourcesDecoded0?.append(structure0)
                }
            }
        }
        failedDisassociatedResources = failedDisassociatedResourcesDecoded0
    }
}
