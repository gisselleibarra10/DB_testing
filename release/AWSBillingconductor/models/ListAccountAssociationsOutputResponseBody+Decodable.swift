// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAccountAssociationsOutputResponseBody: Swift.Equatable {
    let linkedAccounts: [BillingconductorClientTypes.AccountAssociationsListElement]?
    let nextToken: Swift.String?
}

extension ListAccountAssociationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case linkedAccounts = "LinkedAccounts"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let linkedAccountsContainer = try containerValues.decodeIfPresent([BillingconductorClientTypes.AccountAssociationsListElement?].self, forKey: .linkedAccounts)
        var linkedAccountsDecoded0:[BillingconductorClientTypes.AccountAssociationsListElement]? = nil
        if let linkedAccountsContainer = linkedAccountsContainer {
            linkedAccountsDecoded0 = [BillingconductorClientTypes.AccountAssociationsListElement]()
            for structure0 in linkedAccountsContainer {
                if let structure0 = structure0 {
                    linkedAccountsDecoded0?.append(structure0)
                }
            }
        }
        linkedAccounts = linkedAccountsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
