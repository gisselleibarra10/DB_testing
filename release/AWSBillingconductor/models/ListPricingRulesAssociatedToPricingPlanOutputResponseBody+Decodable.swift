// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPricingRulesAssociatedToPricingPlanOutputResponseBody: Swift.Equatable {
    let billingPeriod: Swift.String?
    let pricingPlanArn: Swift.String?
    let pricingRuleArns: [Swift.String]?
    let nextToken: Swift.String?
}

extension ListPricingRulesAssociatedToPricingPlanOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case billingPeriod = "BillingPeriod"
        case nextToken = "NextToken"
        case pricingPlanArn = "PricingPlanArn"
        case pricingRuleArns = "PricingRuleArns"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let billingPeriodDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .billingPeriod)
        billingPeriod = billingPeriodDecoded
        let pricingPlanArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pricingPlanArn)
        pricingPlanArn = pricingPlanArnDecoded
        let pricingRuleArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .pricingRuleArns)
        var pricingRuleArnsDecoded0:[Swift.String]? = nil
        if let pricingRuleArnsContainer = pricingRuleArnsContainer {
            pricingRuleArnsDecoded0 = [Swift.String]()
            for string0 in pricingRuleArnsContainer {
                if let string0 = string0 {
                    pricingRuleArnsDecoded0?.append(string0)
                }
            }
        }
        pricingRuleArns = pricingRuleArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
