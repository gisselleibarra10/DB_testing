// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateCustomLineItemOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let billingGroupArn: Swift.String?
    let name: Swift.String?
    let description: Swift.String?
    let chargeDetails: BillingconductorClientTypes.ListCustomLineItemChargeDetails?
    let lastModifiedTime: Swift.Int
    let associationSize: Swift.Int
}

extension UpdateCustomLineItemOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case associationSize = "AssociationSize"
        case billingGroupArn = "BillingGroupArn"
        case chargeDetails = "ChargeDetails"
        case description = "Description"
        case lastModifiedTime = "LastModifiedTime"
        case name = "Name"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let billingGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .billingGroupArn)
        billingGroupArn = billingGroupArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let chargeDetailsDecoded = try containerValues.decodeIfPresent(BillingconductorClientTypes.ListCustomLineItemChargeDetails.self, forKey: .chargeDetails)
        chargeDetails = chargeDetailsDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .lastModifiedTime) ?? 0
        lastModifiedTime = lastModifiedTimeDecoded
        let associationSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .associationSize) ?? 0
        associationSize = associationSizeDecoded
    }
}
