// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPricingPlansAssociatedWithPricingRuleOutputResponseBody: Swift.Equatable {
    let billingPeriod: Swift.String?
    let pricingRuleArn: Swift.String?
    let pricingPlanArns: [Swift.String]?
    let nextToken: Swift.String?
}

extension ListPricingPlansAssociatedWithPricingRuleOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case billingPeriod = "BillingPeriod"
        case nextToken = "NextToken"
        case pricingPlanArns = "PricingPlanArns"
        case pricingRuleArn = "PricingRuleArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let billingPeriodDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .billingPeriod)
        billingPeriod = billingPeriodDecoded
        let pricingRuleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pricingRuleArn)
        pricingRuleArn = pricingRuleArnDecoded
        let pricingPlanArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .pricingPlanArns)
        var pricingPlanArnsDecoded0:[Swift.String]? = nil
        if let pricingPlanArnsContainer = pricingPlanArnsContainer {
            pricingPlanArnsDecoded0 = [Swift.String]()
            for string0 in pricingPlanArnsContainer {
                if let string0 = string0 {
                    pricingPlanArnsDecoded0?.append(string0)
                }
            }
        }
        pricingPlanArns = pricingPlanArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
