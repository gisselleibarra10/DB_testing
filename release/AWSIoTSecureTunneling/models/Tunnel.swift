// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTSecureTunnelingClientTypes {
    /// A connection between a source computer and a destination device.
    public struct Tunnel: Swift.Equatable {
        /// The time when the tunnel was created.
        public var createdAt: ClientRuntime.Date?
        /// A description of the tunnel.
        public var description: Swift.String?
        /// The destination configuration that specifies the thing name of the destination device and a service name that the local proxy uses to connect to the destination application.
        public var destinationConfig: IoTSecureTunnelingClientTypes.DestinationConfig?
        /// The connection state of the destination application.
        public var destinationConnectionState: IoTSecureTunnelingClientTypes.ConnectionState?
        /// The last time the tunnel was updated.
        public var lastUpdatedAt: ClientRuntime.Date?
        /// The connection state of the source application.
        public var sourceConnectionState: IoTSecureTunnelingClientTypes.ConnectionState?
        /// The status of a tunnel. Valid values are: Open and Closed.
        public var status: IoTSecureTunnelingClientTypes.TunnelStatus?
        /// A list of tag metadata associated with the secure tunnel.
        public var tags: [IoTSecureTunnelingClientTypes.Tag]?
        /// Timeout configuration for the tunnel.
        public var timeoutConfig: IoTSecureTunnelingClientTypes.TimeoutConfig?
        /// The Amazon Resource Name (ARN) of a tunnel.
        public var tunnelArn: Swift.String?
        /// A unique alpha-numeric ID that identifies a tunnel.
        public var tunnelId: Swift.String?

        public init (
            createdAt: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            destinationConfig: IoTSecureTunnelingClientTypes.DestinationConfig? = nil,
            destinationConnectionState: IoTSecureTunnelingClientTypes.ConnectionState? = nil,
            lastUpdatedAt: ClientRuntime.Date? = nil,
            sourceConnectionState: IoTSecureTunnelingClientTypes.ConnectionState? = nil,
            status: IoTSecureTunnelingClientTypes.TunnelStatus? = nil,
            tags: [IoTSecureTunnelingClientTypes.Tag]? = nil,
            timeoutConfig: IoTSecureTunnelingClientTypes.TimeoutConfig? = nil,
            tunnelArn: Swift.String? = nil,
            tunnelId: Swift.String? = nil
        )
        {
            self.createdAt = createdAt
            self.description = description
            self.destinationConfig = destinationConfig
            self.destinationConnectionState = destinationConnectionState
            self.lastUpdatedAt = lastUpdatedAt
            self.sourceConnectionState = sourceConnectionState
            self.status = status
            self.tags = tags
            self.timeoutConfig = timeoutConfig
            self.tunnelArn = tunnelArn
            self.tunnelId = tunnelId
        }
    }

}
