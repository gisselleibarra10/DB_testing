// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTunnelsOutputResponseBody: Swift.Equatable {
    let tunnelSummaries: [IoTSecureTunnelingClientTypes.TunnelSummary]?
    let nextToken: Swift.String?
}

extension ListTunnelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case tunnelSummaries
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tunnelSummariesContainer = try containerValues.decodeIfPresent([IoTSecureTunnelingClientTypes.TunnelSummary?].self, forKey: .tunnelSummaries)
        var tunnelSummariesDecoded0:[IoTSecureTunnelingClientTypes.TunnelSummary]? = nil
        if let tunnelSummariesContainer = tunnelSummariesContainer {
            tunnelSummariesDecoded0 = [IoTSecureTunnelingClientTypes.TunnelSummary]()
            for structure0 in tunnelSummariesContainer {
                if let structure0 = structure0 {
                    tunnelSummariesDecoded0?.append(structure0)
                }
            }
        }
        tunnelSummaries = tunnelSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
