// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct OpenTunnelInputBody: Swift.Equatable {
    let description: Swift.String?
    let tags: [IoTSecureTunnelingClientTypes.Tag]?
    let destinationConfig: IoTSecureTunnelingClientTypes.DestinationConfig?
    let timeoutConfig: IoTSecureTunnelingClientTypes.TimeoutConfig?
}

extension OpenTunnelInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description
        case destinationConfig
        case tags
        case timeoutConfig
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let tagsContainer = try containerValues.decodeIfPresent([IoTSecureTunnelingClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[IoTSecureTunnelingClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [IoTSecureTunnelingClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
        let destinationConfigDecoded = try containerValues.decodeIfPresent(IoTSecureTunnelingClientTypes.DestinationConfig.self, forKey: .destinationConfig)
        destinationConfig = destinationConfigDecoded
        let timeoutConfigDecoded = try containerValues.decodeIfPresent(IoTSecureTunnelingClientTypes.TimeoutConfig.self, forKey: .timeoutConfig)
        timeoutConfig = timeoutConfigDecoded
    }
}
