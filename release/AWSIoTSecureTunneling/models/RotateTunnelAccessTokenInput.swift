// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct RotateTunnelAccessTokenInput: Swift.Equatable {
    /// The mode of the client that will use the client token, which can be either the source or destination, or both source and destination.
    /// This member is required.
    public var clientMode: IoTSecureTunnelingClientTypes.ClientMode?
    /// The destination configuration.
    public var destinationConfig: IoTSecureTunnelingClientTypes.DestinationConfig?
    /// The tunnel for which you want to rotate the access tokens.
    /// This member is required.
    public var tunnelId: Swift.String?

    public init (
        clientMode: IoTSecureTunnelingClientTypes.ClientMode? = nil,
        destinationConfig: IoTSecureTunnelingClientTypes.DestinationConfig? = nil,
        tunnelId: Swift.String? = nil
    )
    {
        self.clientMode = clientMode
        self.destinationConfig = destinationConfig
        self.tunnelId = tunnelId
    }
}
