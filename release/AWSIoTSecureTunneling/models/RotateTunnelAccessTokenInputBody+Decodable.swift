// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RotateTunnelAccessTokenInputBody: Swift.Equatable {
    let clientMode: IoTSecureTunnelingClientTypes.ClientMode?
    let destinationConfig: IoTSecureTunnelingClientTypes.DestinationConfig?
}

extension RotateTunnelAccessTokenInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientMode
        case destinationConfig
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientModeDecoded = try containerValues.decodeIfPresent(IoTSecureTunnelingClientTypes.ClientMode.self, forKey: .clientMode)
        clientMode = clientModeDecoded
        let destinationConfigDecoded = try containerValues.decodeIfPresent(IoTSecureTunnelingClientTypes.DestinationConfig.self, forKey: .destinationConfig)
        destinationConfig = destinationConfigDecoded
    }
}
