// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDeviceOutputResponse: Swift.Equatable {
    /// The ID of the job used when ordering the device.
    public var associatedWithJob: Swift.String?
    /// The hardware specifications of the device.
    public var deviceCapacities: [SnowDeviceManagementClientTypes.Capacity]?
    /// The current state of the device.
    public var deviceState: SnowDeviceManagementClientTypes.UnlockState?
    /// The type of Amazon Web Services Snow Family device.
    public var deviceType: Swift.String?
    /// When the device last contacted the Amazon Web Services Cloud. Indicates that the device is online.
    public var lastReachedOutAt: ClientRuntime.Date?
    /// When the device last pushed an update to the Amazon Web Services Cloud. Indicates when the device cache was refreshed.
    public var lastUpdatedAt: ClientRuntime.Date?
    /// The Amazon Resource Name (ARN) of the device.
    public var managedDeviceArn: Swift.String?
    /// The ID of the device that you checked the information for.
    public var managedDeviceId: Swift.String?
    /// The network interfaces available on the device.
    public var physicalNetworkInterfaces: [SnowDeviceManagementClientTypes.PhysicalNetworkInterface]?
    /// The software installed on the device.
    public var software: SnowDeviceManagementClientTypes.SoftwareInformation?
    /// Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment.
    public var tags: [Swift.String:Swift.String]?

    public init (
        associatedWithJob: Swift.String? = nil,
        deviceCapacities: [SnowDeviceManagementClientTypes.Capacity]? = nil,
        deviceState: SnowDeviceManagementClientTypes.UnlockState? = nil,
        deviceType: Swift.String? = nil,
        lastReachedOutAt: ClientRuntime.Date? = nil,
        lastUpdatedAt: ClientRuntime.Date? = nil,
        managedDeviceArn: Swift.String? = nil,
        managedDeviceId: Swift.String? = nil,
        physicalNetworkInterfaces: [SnowDeviceManagementClientTypes.PhysicalNetworkInterface]? = nil,
        software: SnowDeviceManagementClientTypes.SoftwareInformation? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.associatedWithJob = associatedWithJob
        self.deviceCapacities = deviceCapacities
        self.deviceState = deviceState
        self.deviceType = deviceType
        self.lastReachedOutAt = lastReachedOutAt
        self.lastUpdatedAt = lastUpdatedAt
        self.managedDeviceArn = managedDeviceArn
        self.managedDeviceId = managedDeviceId
        self.physicalNetworkInterfaces = physicalNetworkInterfaces
        self.software = software
        self.tags = tags
    }
}
