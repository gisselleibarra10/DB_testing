// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SnowDeviceManagementClientTypes.EbsInstanceBlockDevice: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attachTime
        case deleteOnTermination
        case status
        case volumeId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attachTime = self.attachTime {
            try encodeContainer.encode(attachTime.timeIntervalSince1970, forKey: .attachTime)
        }
        if let deleteOnTermination = self.deleteOnTermination {
            try encodeContainer.encode(deleteOnTermination, forKey: .deleteOnTermination)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let volumeId = self.volumeId {
            try encodeContainer.encode(volumeId, forKey: .volumeId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .attachTime)
        attachTime = attachTimeDecoded
        let deleteOnTerminationDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .deleteOnTermination)
        deleteOnTermination = deleteOnTerminationDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SnowDeviceManagementClientTypes.AttachmentStatus.self, forKey: .status)
        status = statusDecoded
        let volumeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeId)
        volumeId = volumeIdDecoded
    }
}
