// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SnowDeviceManagementClientTypes {
    public enum PhysicalConnectorType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case qsfp
        case rj45
        case rj452
        case sfpPlus
        case wifi
        case sdkUnknown(Swift.String)

        public static var allCases: [PhysicalConnectorType] {
            return [
                .qsfp,
                .rj45,
                .rj452,
                .sfpPlus,
                .wifi,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .qsfp: return "QSFP"
            case .rj45: return "RJ45"
            case .rj452: return "RJ45_2"
            case .sfpPlus: return "SFP_PLUS"
            case .wifi: return "WIFI"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = PhysicalConnectorType(rawValue: rawValue) ?? PhysicalConnectorType.sdkUnknown(rawValue)
        }
    }
}
