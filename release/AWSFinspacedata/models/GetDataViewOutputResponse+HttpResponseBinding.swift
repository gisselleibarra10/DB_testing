// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetDataViewOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: GetDataViewOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.asOfTimestamp = output.asOfTimestamp
            self.autoUpdate = output.autoUpdate
            self.createTime = output.createTime
            self.dataViewArn = output.dataViewArn
            self.dataViewId = output.dataViewId
            self.datasetId = output.datasetId
            self.destinationTypeParams = output.destinationTypeParams
            self.errorInfo = output.errorInfo
            self.lastModifiedTime = output.lastModifiedTime
            self.partitionColumns = output.partitionColumns
            self.sortColumns = output.sortColumns
            self.status = output.status
        } else {
            self.asOfTimestamp = nil
            self.autoUpdate = false
            self.createTime = 0
            self.dataViewArn = nil
            self.dataViewId = nil
            self.datasetId = nil
            self.destinationTypeParams = nil
            self.errorInfo = nil
            self.lastModifiedTime = 0
            self.partitionColumns = nil
            self.sortColumns = nil
            self.status = nil
        }
    }
}
