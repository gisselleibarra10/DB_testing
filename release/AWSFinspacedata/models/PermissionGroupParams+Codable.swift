// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FinspaceDataClientTypes.PermissionGroupParams: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case datasetPermissions
        case permissionGroupId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let datasetPermissions = datasetPermissions {
            var datasetPermissionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .datasetPermissions)
            for resourcepermissionslist0 in datasetPermissions {
                try datasetPermissionsContainer.encode(resourcepermissionslist0)
            }
        }
        if let permissionGroupId = self.permissionGroupId {
            try encodeContainer.encode(permissionGroupId, forKey: .permissionGroupId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let permissionGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .permissionGroupId)
        permissionGroupId = permissionGroupIdDecoded
        let datasetPermissionsContainer = try containerValues.decodeIfPresent([FinspaceDataClientTypes.ResourcePermission?].self, forKey: .datasetPermissions)
        var datasetPermissionsDecoded0:[FinspaceDataClientTypes.ResourcePermission]? = nil
        if let datasetPermissionsContainer = datasetPermissionsContainer {
            datasetPermissionsDecoded0 = [FinspaceDataClientTypes.ResourcePermission]()
            for structure0 in datasetPermissionsContainer {
                if let structure0 = structure0 {
                    datasetPermissionsDecoded0?.append(structure0)
                }
            }
        }
        datasetPermissions = datasetPermissionsDecoded0
    }
}
