// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FinspaceDataClientTypes.UserByPermissionGroup: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case apiAccess
        case apiAccessPrincipalArn
        case emailAddress
        case firstName
        case lastName
        case membershipStatus
        case status
        case type
        case userId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let apiAccess = self.apiAccess {
            try encodeContainer.encode(apiAccess.rawValue, forKey: .apiAccess)
        }
        if let apiAccessPrincipalArn = self.apiAccessPrincipalArn {
            try encodeContainer.encode(apiAccessPrincipalArn, forKey: .apiAccessPrincipalArn)
        }
        if let emailAddress = self.emailAddress {
            try encodeContainer.encode(emailAddress, forKey: .emailAddress)
        }
        if let firstName = self.firstName {
            try encodeContainer.encode(firstName, forKey: .firstName)
        }
        if let lastName = self.lastName {
            try encodeContainer.encode(lastName, forKey: .lastName)
        }
        if let membershipStatus = self.membershipStatus {
            try encodeContainer.encode(membershipStatus.rawValue, forKey: .membershipStatus)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
        if let userId = self.userId {
            try encodeContainer.encode(userId, forKey: .userId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userId)
        userId = userIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(FinspaceDataClientTypes.UserStatus.self, forKey: .status)
        status = statusDecoded
        let firstNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .firstName)
        firstName = firstNameDecoded
        let lastNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastName)
        lastName = lastNameDecoded
        let emailAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .emailAddress)
        emailAddress = emailAddressDecoded
        let typeDecoded = try containerValues.decodeIfPresent(FinspaceDataClientTypes.UserType.self, forKey: .type)
        type = typeDecoded
        let apiAccessDecoded = try containerValues.decodeIfPresent(FinspaceDataClientTypes.ApiAccess.self, forKey: .apiAccess)
        apiAccess = apiAccessDecoded
        let apiAccessPrincipalArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .apiAccessPrincipalArn)
        apiAccessPrincipalArn = apiAccessPrincipalArnDecoded
        let membershipStatusDecoded = try containerValues.decodeIfPresent(FinspaceDataClientTypes.PermissionGroupMembershipStatus.self, forKey: .membershipStatus)
        membershipStatus = membershipStatusDecoded
    }
}
