// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FinspaceDataClientTypes {
    /// The details of the user account.
    public struct User: Swift.Equatable {
        /// Indicates whether the user can use the GetProgrammaticAccessCredentials API to obtain credentials that can then be used to access other FinSpace Data API operations.
        ///
        /// * ENABLED – The user has permissions to use the APIs.
        ///
        /// * DISABLED – The user does not have permissions to use any APIs.
        public var apiAccess: FinspaceDataClientTypes.ApiAccess?
        /// The ARN identifier of an AWS user or role that is allowed to call the GetProgrammaticAccessCredentials API to obtain a credentials token for a specific FinSpace user. This must be an IAM role within your FinSpace account.
        public var apiAccessPrincipalArn: Swift.String?
        /// The timestamp at which the user account was created in FinSpace. The value is determined as epoch time in milliseconds.
        public var createTime: Swift.Int
        /// The email address of the user. The email address serves as a uniquer identifier for each user and cannot be changed after it's created.
        public var emailAddress: Swift.String?
        /// The first name of the user.
        public var firstName: Swift.String?
        /// Describes the last time the user account was disabled. The value is determined as epoch time in milliseconds.
        public var lastDisabledTime: Swift.Int
        /// Describes the last time the user account was enabled. The value is determined as epoch time in milliseconds.
        public var lastEnabledTime: Swift.Int
        /// Describes the last time that the user logged into their account. The value is determined as epoch time in milliseconds.
        public var lastLoginTime: Swift.Int
        /// Describes the last time the user account was updated. The value is determined as epoch time in milliseconds.
        public var lastModifiedTime: Swift.Int
        /// The last name of the user.
        public var lastName: Swift.String?
        /// The current status of the user account.
        ///
        /// * CREATING – The user account creation is in progress.
        ///
        /// * ENABLED – The user account is created and is currently active.
        ///
        /// * DISABLED – The user account is currently inactive.
        public var status: FinspaceDataClientTypes.UserStatus?
        /// Indicates the type of user.
        ///
        /// * SUPER_USER – A user with permission to all the functionality and data in FinSpace.
        ///
        /// * APP_USER – A user with specific permissions in FinSpace. The users are assigned permissions by adding them to a permission group.
        public var type: FinspaceDataClientTypes.UserType?
        /// The unique identifier for the user.
        public var userId: Swift.String?

        public init (
            apiAccess: FinspaceDataClientTypes.ApiAccess? = nil,
            apiAccessPrincipalArn: Swift.String? = nil,
            createTime: Swift.Int = 0,
            emailAddress: Swift.String? = nil,
            firstName: Swift.String? = nil,
            lastDisabledTime: Swift.Int = 0,
            lastEnabledTime: Swift.Int = 0,
            lastLoginTime: Swift.Int = 0,
            lastModifiedTime: Swift.Int = 0,
            lastName: Swift.String? = nil,
            status: FinspaceDataClientTypes.UserStatus? = nil,
            type: FinspaceDataClientTypes.UserType? = nil,
            userId: Swift.String? = nil
        )
        {
            self.apiAccess = apiAccess
            self.apiAccessPrincipalArn = apiAccessPrincipalArn
            self.createTime = createTime
            self.emailAddress = emailAddress
            self.firstName = firstName
            self.lastDisabledTime = lastDisabledTime
            self.lastEnabledTime = lastEnabledTime
            self.lastLoginTime = lastLoginTime
            self.lastModifiedTime = lastModifiedTime
            self.lastName = lastName
            self.status = status
            self.type = type
            self.userId = userId
        }
    }

}
