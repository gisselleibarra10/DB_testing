// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDataViewInputBody: Swift.Equatable {
    let clientToken: Swift.String?
    let autoUpdate: Swift.Bool
    let sortColumns: [Swift.String]?
    let partitionColumns: [Swift.String]?
    let asOfTimestamp: Swift.Int?
    let destinationTypeParams: FinspaceDataClientTypes.DataViewDestinationTypeParams?
}

extension CreateDataViewInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case asOfTimestamp
        case autoUpdate
        case clientToken
        case destinationTypeParams
        case partitionColumns
        case sortColumns
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let autoUpdateDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .autoUpdate) ?? false
        autoUpdate = autoUpdateDecoded
        let sortColumnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .sortColumns)
        var sortColumnsDecoded0:[Swift.String]? = nil
        if let sortColumnsContainer = sortColumnsContainer {
            sortColumnsDecoded0 = [Swift.String]()
            for string0 in sortColumnsContainer {
                if let string0 = string0 {
                    sortColumnsDecoded0?.append(string0)
                }
            }
        }
        sortColumns = sortColumnsDecoded0
        let partitionColumnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .partitionColumns)
        var partitionColumnsDecoded0:[Swift.String]? = nil
        if let partitionColumnsContainer = partitionColumnsContainer {
            partitionColumnsDecoded0 = [Swift.String]()
            for string0 in partitionColumnsContainer {
                if let string0 = string0 {
                    partitionColumnsDecoded0?.append(string0)
                }
            }
        }
        partitionColumns = partitionColumnsDecoded0
        let asOfTimestampDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .asOfTimestamp)
        asOfTimestamp = asOfTimestampDecoded
        let destinationTypeParamsDecoded = try containerValues.decodeIfPresent(FinspaceDataClientTypes.DataViewDestinationTypeParams.self, forKey: .destinationTypeParams)
        destinationTypeParams = destinationTypeParamsDecoded
    }
}
