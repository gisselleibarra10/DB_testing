// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateUserInputBody: Swift.Equatable {
    let type: FinspaceDataClientTypes.UserType?
    let firstName: Swift.String?
    let lastName: Swift.String?
    let apiAccess: FinspaceDataClientTypes.ApiAccess?
    let apiAccessPrincipalArn: Swift.String?
    let clientToken: Swift.String?
}

extension UpdateUserInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case apiAccess
        case apiAccessPrincipalArn
        case clientToken
        case firstName
        case lastName
        case type
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(FinspaceDataClientTypes.UserType.self, forKey: .type)
        type = typeDecoded
        let firstNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .firstName)
        firstName = firstNameDecoded
        let lastNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastName)
        lastName = lastNameDecoded
        let apiAccessDecoded = try containerValues.decodeIfPresent(FinspaceDataClientTypes.ApiAccess.self, forKey: .apiAccess)
        apiAccess = apiAccessDecoded
        let apiAccessPrincipalArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .apiAccessPrincipalArn)
        apiAccessPrincipalArn = apiAccessPrincipalArnDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
