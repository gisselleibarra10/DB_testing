// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FinspaceDataClientTypes.PermissionGroup: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationPermissions
        case createTime
        case description
        case lastModifiedTime
        case membershipStatus
        case name
        case permissionGroupId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applicationPermissions = applicationPermissions {
            var applicationPermissionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .applicationPermissions)
            for applicationpermissionlist0 in applicationPermissions {
                try applicationPermissionsContainer.encode(applicationpermissionlist0.rawValue)
            }
        }
        if createTime != 0 {
            try encodeContainer.encode(createTime, forKey: .createTime)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if lastModifiedTime != 0 {
            try encodeContainer.encode(lastModifiedTime, forKey: .lastModifiedTime)
        }
        if let membershipStatus = self.membershipStatus {
            try encodeContainer.encode(membershipStatus.rawValue, forKey: .membershipStatus)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let permissionGroupId = self.permissionGroupId {
            try encodeContainer.encode(permissionGroupId, forKey: .permissionGroupId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let permissionGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .permissionGroupId)
        permissionGroupId = permissionGroupIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let applicationPermissionsContainer = try containerValues.decodeIfPresent([FinspaceDataClientTypes.ApplicationPermission?].self, forKey: .applicationPermissions)
        var applicationPermissionsDecoded0:[FinspaceDataClientTypes.ApplicationPermission]? = nil
        if let applicationPermissionsContainer = applicationPermissionsContainer {
            applicationPermissionsDecoded0 = [FinspaceDataClientTypes.ApplicationPermission]()
            for string0 in applicationPermissionsContainer {
                if let string0 = string0 {
                    applicationPermissionsDecoded0?.append(string0)
                }
            }
        }
        applicationPermissions = applicationPermissionsDecoded0
        let createTimeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .createTime) ?? 0
        createTime = createTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .lastModifiedTime) ?? 0
        lastModifiedTime = lastModifiedTimeDecoded
        let membershipStatusDecoded = try containerValues.decodeIfPresent(FinspaceDataClientTypes.PermissionGroupMembershipStatus.self, forKey: .membershipStatus)
        membershipStatus = membershipStatusDecoded
    }
}
