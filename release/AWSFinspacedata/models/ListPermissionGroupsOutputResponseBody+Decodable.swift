// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPermissionGroupsOutputResponseBody: Swift.Equatable {
    let permissionGroups: [FinspaceDataClientTypes.PermissionGroup]?
    let nextToken: Swift.String?
}

extension ListPermissionGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case permissionGroups
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let permissionGroupsContainer = try containerValues.decodeIfPresent([FinspaceDataClientTypes.PermissionGroup?].self, forKey: .permissionGroups)
        var permissionGroupsDecoded0:[FinspaceDataClientTypes.PermissionGroup]? = nil
        if let permissionGroupsContainer = permissionGroupsContainer {
            permissionGroupsDecoded0 = [FinspaceDataClientTypes.PermissionGroup]()
            for structure0 in permissionGroupsContainer {
                if let structure0 = structure0 {
                    permissionGroupsDecoded0?.append(structure0)
                }
            }
        }
        permissionGroups = permissionGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
