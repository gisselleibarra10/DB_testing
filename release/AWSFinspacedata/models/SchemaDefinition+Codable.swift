// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FinspaceDataClientTypes.SchemaDefinition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case columns
        case primaryKeyColumns
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let columns = columns {
            var columnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .columns)
            for columnlist0 in columns {
                try columnsContainer.encode(columnlist0)
            }
        }
        if let primaryKeyColumns = primaryKeyColumns {
            var primaryKeyColumnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .primaryKeyColumns)
            for columnnamelist0 in primaryKeyColumns {
                try primaryKeyColumnsContainer.encode(columnnamelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let columnsContainer = try containerValues.decodeIfPresent([FinspaceDataClientTypes.ColumnDefinition?].self, forKey: .columns)
        var columnsDecoded0:[FinspaceDataClientTypes.ColumnDefinition]? = nil
        if let columnsContainer = columnsContainer {
            columnsDecoded0 = [FinspaceDataClientTypes.ColumnDefinition]()
            for structure0 in columnsContainer {
                if let structure0 = structure0 {
                    columnsDecoded0?.append(structure0)
                }
            }
        }
        columns = columnsDecoded0
        let primaryKeyColumnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .primaryKeyColumns)
        var primaryKeyColumnsDecoded0:[Swift.String]? = nil
        if let primaryKeyColumnsContainer = primaryKeyColumnsContainer {
            primaryKeyColumnsDecoded0 = [Swift.String]()
            for string0 in primaryKeyColumnsContainer {
                if let string0 = string0 {
                    primaryKeyColumnsDecoded0?.append(string0)
                }
            }
        }
        primaryKeyColumns = primaryKeyColumnsDecoded0
    }
}
