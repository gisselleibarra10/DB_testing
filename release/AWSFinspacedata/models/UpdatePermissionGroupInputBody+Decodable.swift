// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdatePermissionGroupInputBody: Swift.Equatable {
    let name: Swift.String?
    let description: Swift.String?
    let applicationPermissions: [FinspaceDataClientTypes.ApplicationPermission]?
    let clientToken: Swift.String?
}

extension UpdatePermissionGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationPermissions
        case clientToken
        case description
        case name
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let applicationPermissionsContainer = try containerValues.decodeIfPresent([FinspaceDataClientTypes.ApplicationPermission?].self, forKey: .applicationPermissions)
        var applicationPermissionsDecoded0:[FinspaceDataClientTypes.ApplicationPermission]? = nil
        if let applicationPermissionsContainer = applicationPermissionsContainer {
            applicationPermissionsDecoded0 = [FinspaceDataClientTypes.ApplicationPermission]()
            for string0 in applicationPermissionsContainer {
                if let string0 = string0 {
                    applicationPermissionsDecoded0?.append(string0)
                }
            }
        }
        applicationPermissions = applicationPermissionsDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
