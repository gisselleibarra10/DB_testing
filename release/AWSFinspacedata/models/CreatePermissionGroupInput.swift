// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreatePermissionGroupInput: Swift.Equatable {
    /// The option to indicate FinSpace application permissions that are granted to a specific group. When assigning application permissions, be aware that the permission ManageUsersAndGroups allows users to grant themselves or others access to any functionality in their FinSpace environment's application. It should only be granted to trusted users.
    ///
    /// * CreateDataset – Group members can create new datasets.
    ///
    /// * ManageClusters – Group members can manage Apache Spark clusters from FinSpace notebooks.
    ///
    /// * ManageUsersAndGroups – Group members can manage users and permission groups. This is a privileged permission that allows users to grant themselves or others access to any functionality in the application. It should only be granted to trusted users.
    ///
    /// * ManageAttributeSets – Group members can manage attribute sets.
    ///
    /// * ViewAuditData – Group members can view audit data.
    ///
    /// * AccessNotebooks – Group members will have access to FinSpace notebooks.
    ///
    /// * GetTemporaryCredentials – Group members can get temporary API credentials.
    /// This member is required.
    public var applicationPermissions: [FinspaceDataClientTypes.ApplicationPermission]?
    /// A token that ensures idempotency. This token expires in 10 minutes.
    public var clientToken: Swift.String?
    /// A brief description for the permission group.
    public var description: Swift.String?
    /// The name of the permission group.
    /// This member is required.
    public var name: Swift.String?

    public init (
        applicationPermissions: [FinspaceDataClientTypes.ApplicationPermission]? = nil,
        clientToken: Swift.String? = nil,
        description: Swift.String? = nil,
        name: Swift.String? = nil
    )
    {
        self.applicationPermissions = applicationPermissions
        self.clientToken = clientToken
        self.description = description
        self.name = name
    }
}
