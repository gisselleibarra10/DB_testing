// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FinspaceDataClientTypes {
    /// A Changeset is unit of data in a Dataset.
    public struct ChangesetSummary: Swift.Equatable {
        /// Beginning time from which the Changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.
        public var activeFromTimestamp: Swift.Int?
        /// Time until which the Changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.
        public var activeUntilTimestamp: Swift.Int?
        /// Type that indicates how a Changeset is applied to a Dataset.
        ///
        /// * REPLACE – Changeset is considered as a replacement to all prior loaded Changesets.
        ///
        /// * APPEND – Changeset is considered as an addition to the end of all prior loaded Changesets.
        ///
        /// * MODIFY – Changeset is considered as a replacement to a specific prior ingested Changeset.
        public var changeType: FinspaceDataClientTypes.ChangeType?
        /// The ARN identifier of the Changeset.
        public var changesetArn: Swift.String?
        /// The unique identifier for a Changeset.
        public var changesetId: Swift.String?
        /// The timestamp at which the Changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.
        public var createTime: Swift.Int
        /// The unique identifier for the FinSpace Dataset in which the Changeset is created.
        public var datasetId: Swift.String?
        /// The structure with error messages.
        public var errorInfo: FinspaceDataClientTypes.ChangesetErrorInfo?
        /// Options that define the structure of the source file(s).
        public var formatParams: [Swift.String:Swift.String]?
        /// Options that define the location of the data being ingested.
        public var sourceParams: [Swift.String:Swift.String]?
        /// Status of the Changeset ingestion.
        ///
        /// * PENDING – Changeset is pending creation.
        ///
        /// * FAILED – Changeset creation has failed.
        ///
        /// * SUCCESS – Changeset creation has succeeded.
        ///
        /// * RUNNING – Changeset creation is running.
        ///
        /// * STOP_REQUESTED – User requested Changeset creation to stop.
        public var status: FinspaceDataClientTypes.IngestionStatus?
        /// The unique identifier of the updated Changeset.
        public var updatedByChangesetId: Swift.String?
        /// The unique identifier of the Changeset that is updated.
        public var updatesChangesetId: Swift.String?

        public init (
            activeFromTimestamp: Swift.Int? = nil,
            activeUntilTimestamp: Swift.Int? = nil,
            changeType: FinspaceDataClientTypes.ChangeType? = nil,
            changesetArn: Swift.String? = nil,
            changesetId: Swift.String? = nil,
            createTime: Swift.Int = 0,
            datasetId: Swift.String? = nil,
            errorInfo: FinspaceDataClientTypes.ChangesetErrorInfo? = nil,
            formatParams: [Swift.String:Swift.String]? = nil,
            sourceParams: [Swift.String:Swift.String]? = nil,
            status: FinspaceDataClientTypes.IngestionStatus? = nil,
            updatedByChangesetId: Swift.String? = nil,
            updatesChangesetId: Swift.String? = nil
        )
        {
            self.activeFromTimestamp = activeFromTimestamp
            self.activeUntilTimestamp = activeUntilTimestamp
            self.changeType = changeType
            self.changesetArn = changesetArn
            self.changesetId = changesetId
            self.createTime = createTime
            self.datasetId = datasetId
            self.errorInfo = errorInfo
            self.formatParams = formatParams
            self.sourceParams = sourceParams
            self.status = status
            self.updatedByChangesetId = updatedByChangesetId
            self.updatesChangesetId = updatesChangesetId
        }
    }

}
