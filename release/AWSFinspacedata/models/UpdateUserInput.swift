// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateUserInput: Swift.Equatable {
    /// The option to indicate whether the user can use the GetProgrammaticAccessCredentials API to obtain credentials that can then be used to access other FinSpace Data API operations.
    ///
    /// * ENABLED – The user has permissions to use the APIs.
    ///
    /// * DISABLED – The user does not have permissions to use any APIs.
    public var apiAccess: FinspaceDataClientTypes.ApiAccess?
    /// The ARN identifier of an AWS user or role that is allowed to call the GetProgrammaticAccessCredentials API to obtain a credentials token for a specific FinSpace user. This must be an IAM role within your FinSpace account.
    public var apiAccessPrincipalArn: Swift.String?
    /// A token that ensures idempotency. This token expires in 10 minutes.
    public var clientToken: Swift.String?
    /// The first name of the user.
    public var firstName: Swift.String?
    /// The last name of the user.
    public var lastName: Swift.String?
    /// The option to indicate the type of user.
    ///
    /// * SUPER_USER– A user with permission to all the functionality and data in FinSpace.
    ///
    /// * APP_USER – A user with specific permissions in FinSpace. The users are assigned permissions by adding them to a permission group.
    public var type: FinspaceDataClientTypes.UserType?
    /// The unique identifier for the user account to update.
    /// This member is required.
    public var userId: Swift.String?

    public init (
        apiAccess: FinspaceDataClientTypes.ApiAccess? = nil,
        apiAccessPrincipalArn: Swift.String? = nil,
        clientToken: Swift.String? = nil,
        firstName: Swift.String? = nil,
        lastName: Swift.String? = nil,
        type: FinspaceDataClientTypes.UserType? = nil,
        userId: Swift.String? = nil
    )
    {
        self.apiAccess = apiAccess
        self.apiAccessPrincipalArn = apiAccessPrincipalArn
        self.clientToken = clientToken
        self.firstName = firstName
        self.lastName = lastName
        self.type = type
        self.userId = userId
    }
}
