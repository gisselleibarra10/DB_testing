// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The request for a CreateDataset operation
public struct CreateDatasetInput: Swift.Equatable {
    /// The unique resource identifier for a Dataset.
    public var alias: Swift.String?
    /// A token that ensures idempotency. This token expires in 10 minutes.
    public var clientToken: Swift.String?
    /// Description of a Dataset.
    public var datasetDescription: Swift.String?
    /// Display title for a FinSpace Dataset.
    /// This member is required.
    public var datasetTitle: Swift.String?
    /// The format in which Dataset data is structured.
    ///
    /// * TABULAR – Data is structured in a tabular format.
    ///
    /// * NON_TABULAR – Data is structured in a non-tabular format.
    /// This member is required.
    public var kind: FinspaceDataClientTypes.DatasetKind?
    /// Contact information for a Dataset owner.
    public var ownerInfo: FinspaceDataClientTypes.DatasetOwnerInfo?
    /// Permission group parameters for Dataset permissions.
    /// This member is required.
    public var permissionGroupParams: FinspaceDataClientTypes.PermissionGroupParams?
    /// Definition for a schema on a tabular Dataset.
    public var schemaDefinition: FinspaceDataClientTypes.SchemaUnion?

    public init (
        alias: Swift.String? = nil,
        clientToken: Swift.String? = nil,
        datasetDescription: Swift.String? = nil,
        datasetTitle: Swift.String? = nil,
        kind: FinspaceDataClientTypes.DatasetKind? = nil,
        ownerInfo: FinspaceDataClientTypes.DatasetOwnerInfo? = nil,
        permissionGroupParams: FinspaceDataClientTypes.PermissionGroupParams? = nil,
        schemaDefinition: FinspaceDataClientTypes.SchemaUnion? = nil
    )
    {
        self.alias = alias
        self.clientToken = clientToken
        self.datasetDescription = datasetDescription
        self.datasetTitle = datasetTitle
        self.kind = kind
        self.ownerInfo = ownerInfo
        self.permissionGroupParams = permissionGroupParams
        self.schemaDefinition = schemaDefinition
    }
}
