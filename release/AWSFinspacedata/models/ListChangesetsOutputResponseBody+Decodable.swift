// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListChangesetsOutputResponseBody: Swift.Equatable {
    let changesets: [FinspaceDataClientTypes.ChangesetSummary]?
    let nextToken: Swift.String?
}

extension ListChangesetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case changesets
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let changesetsContainer = try containerValues.decodeIfPresent([FinspaceDataClientTypes.ChangesetSummary?].self, forKey: .changesets)
        var changesetsDecoded0:[FinspaceDataClientTypes.ChangesetSummary]? = nil
        if let changesetsContainer = changesetsContainer {
            changesetsDecoded0 = [FinspaceDataClientTypes.ChangesetSummary]()
            for structure0 in changesetsContainer {
                if let structure0 = structure0 {
                    changesetsDecoded0?.append(structure0)
                }
            }
        }
        changesets = changesetsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
