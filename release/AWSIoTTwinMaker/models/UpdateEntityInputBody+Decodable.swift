// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateEntityInputBody: Swift.Equatable {
    let entityName: Swift.String?
    let description: Swift.String?
    let componentUpdates: [Swift.String:IoTTwinMakerClientTypes.ComponentUpdateRequest]?
    let parentEntityUpdate: IoTTwinMakerClientTypes.ParentEntityUpdateRequest?
}

extension UpdateEntityInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case componentUpdates
        case description
        case entityName
        case parentEntityUpdate
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entityNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .entityName)
        entityName = entityNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let componentUpdatesContainer = try containerValues.decodeIfPresent([Swift.String: IoTTwinMakerClientTypes.ComponentUpdateRequest?].self, forKey: .componentUpdates)
        var componentUpdatesDecoded0: [Swift.String:IoTTwinMakerClientTypes.ComponentUpdateRequest]? = nil
        if let componentUpdatesContainer = componentUpdatesContainer {
            componentUpdatesDecoded0 = [Swift.String:IoTTwinMakerClientTypes.ComponentUpdateRequest]()
            for (key0, componentupdaterequest0) in componentUpdatesContainer {
                if let componentupdaterequest0 = componentupdaterequest0 {
                    componentUpdatesDecoded0?[key0] = componentupdaterequest0
                }
            }
        }
        componentUpdates = componentUpdatesDecoded0
        let parentEntityUpdateDecoded = try containerValues.decodeIfPresent(IoTTwinMakerClientTypes.ParentEntityUpdateRequest.self, forKey: .parentEntityUpdate)
        parentEntityUpdate = parentEntityUpdateDecoded
    }
}
