// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateSceneInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case capabilities
        case contentLocation
        case description
        case sceneId
        case tags
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let capabilities = capabilities {
            var capabilitiesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .capabilities)
            for scenecapabilities0 in capabilities {
                try capabilitiesContainer.encode(scenecapabilities0)
            }
        }
        if let contentLocation = self.contentLocation {
            try encodeContainer.encode(contentLocation, forKey: .contentLocation)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let sceneId = self.sceneId {
            try encodeContainer.encode(sceneId, forKey: .sceneId)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, tagmap0) in tags {
                try tagsContainer.encode(tagmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
