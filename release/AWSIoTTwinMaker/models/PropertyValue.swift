// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTTwinMakerClientTypes {
    /// An object that contains information about a value for a time series property.
    public struct PropertyValue: Swift.Equatable {
        /// ISO8601 DateTime of a value for a time series property. The time for when the property value was recorded in ISO 8601 format: YYYY-MM-DDThh:mm:ss[.SSSSSSSSS][Z/±HH:mm].
        ///
        /// * [YYYY]: year
        ///
        /// * [MM]: month
        ///
        /// * [DD]: day
        ///
        /// * [hh]: hour
        ///
        /// * [mm]: minute
        ///
        /// * [ss]: seconds
        ///
        /// * [.SSSSSSSSS]: additional precision, where precedence is maintained. For example: [.573123] is equal to 573123000 nanoseconds.
        ///
        /// * Z: default timezone UTC
        ///
        /// * ± HH:mm: time zone offset in Hours and Minutes.
        ///
        ///
        /// Required sub-fields: YYYY-MM-DDThh:mm:ss and [Z/±HH:mm]
        public var time: Swift.String?
        /// The timestamp of a value for a time series property.
        @available(*, deprecated, message: "This field is deprecated and will throw an error in the future. Use time instead.")
        public var timestamp: ClientRuntime.Date?
        /// An object that specifies a value for a time series property.
        /// This member is required.
        public var value: IoTTwinMakerClientTypes.DataValue?

        public init (
            time: Swift.String? = nil,
            timestamp: ClientRuntime.Date? = nil,
            value: IoTTwinMakerClientTypes.DataValue? = nil
        )
        {
            self.time = time
            self.timestamp = timestamp
            self.value = value
        }
    }

}
