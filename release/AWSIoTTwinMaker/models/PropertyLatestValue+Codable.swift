// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTTwinMakerClientTypes.PropertyLatestValue: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case propertyReference
        case propertyValue
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let propertyReference = self.propertyReference {
            try encodeContainer.encode(propertyReference, forKey: .propertyReference)
        }
        if let propertyValue = self.propertyValue {
            try encodeContainer.encode(propertyValue, forKey: .propertyValue)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let propertyReferenceDecoded = try containerValues.decodeIfPresent(IoTTwinMakerClientTypes.EntityPropertyReference.self, forKey: .propertyReference)
        propertyReference = propertyReferenceDecoded
        let propertyValueDecoded = try containerValues.decodeIfPresent(IoTTwinMakerClientTypes.DataValue.self, forKey: .propertyValue)
        propertyValue = propertyValueDecoded
    }
}
