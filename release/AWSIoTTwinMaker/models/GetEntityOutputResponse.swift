// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetEntityOutputResponse: Swift.Equatable {
    /// The ARN of the entity.
    /// This member is required.
    public var arn: Swift.String?
    /// An object that maps strings to the components in the entity. Each string in the mapping must be unique to this object.
    public var components: [Swift.String:IoTTwinMakerClientTypes.ComponentResponse]?
    /// The date and time when the entity was created.
    /// This member is required.
    public var creationDateTime: ClientRuntime.Date?
    /// The description of the entity.
    public var description: Swift.String?
    /// The ID of the entity.
    /// This member is required.
    public var entityId: Swift.String?
    /// The name of the entity.
    /// This member is required.
    public var entityName: Swift.String?
    /// A Boolean value that specifies whether the entity has associated child entities.
    /// This member is required.
    public var hasChildEntities: Swift.Bool?
    /// The ID of the parent entity for this entity.
    /// This member is required.
    public var parentEntityId: Swift.String?
    /// The current status of the entity.
    /// This member is required.
    public var status: IoTTwinMakerClientTypes.Status?
    /// The date and time when the entity was last updated.
    /// This member is required.
    public var updateDateTime: ClientRuntime.Date?
    /// The ID of the workspace.
    /// This member is required.
    public var workspaceId: Swift.String?

    public init (
        arn: Swift.String? = nil,
        components: [Swift.String:IoTTwinMakerClientTypes.ComponentResponse]? = nil,
        creationDateTime: ClientRuntime.Date? = nil,
        description: Swift.String? = nil,
        entityId: Swift.String? = nil,
        entityName: Swift.String? = nil,
        hasChildEntities: Swift.Bool? = nil,
        parentEntityId: Swift.String? = nil,
        status: IoTTwinMakerClientTypes.Status? = nil,
        updateDateTime: ClientRuntime.Date? = nil,
        workspaceId: Swift.String? = nil
    )
    {
        self.arn = arn
        self.components = components
        self.creationDateTime = creationDateTime
        self.description = description
        self.entityId = entityId
        self.entityName = entityName
        self.hasChildEntities = hasChildEntities
        self.parentEntityId = parentEntityId
        self.status = status
        self.updateDateTime = updateDateTime
        self.workspaceId = workspaceId
    }
}
