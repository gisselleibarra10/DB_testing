// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEntitiesOutputResponseBody: Swift.Equatable {
    let entitySummaries: [IoTTwinMakerClientTypes.EntitySummary]?
    let nextToken: Swift.String?
}

extension ListEntitiesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entitySummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entitySummariesContainer = try containerValues.decodeIfPresent([IoTTwinMakerClientTypes.EntitySummary?].self, forKey: .entitySummaries)
        var entitySummariesDecoded0:[IoTTwinMakerClientTypes.EntitySummary]? = nil
        if let entitySummariesContainer = entitySummariesContainer {
            entitySummariesDecoded0 = [IoTTwinMakerClientTypes.EntitySummary]()
            for structure0 in entitySummariesContainer {
                if let structure0 = structure0 {
                    entitySummariesDecoded0?.append(structure0)
                }
            }
        }
        entitySummaries = entitySummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
