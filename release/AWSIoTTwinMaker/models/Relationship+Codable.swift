// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTTwinMakerClientTypes.Relationship: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case relationshipType
        case targetComponentTypeId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let relationshipType = self.relationshipType {
            try encodeContainer.encode(relationshipType, forKey: .relationshipType)
        }
        if let targetComponentTypeId = self.targetComponentTypeId {
            try encodeContainer.encode(targetComponentTypeId, forKey: .targetComponentTypeId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetComponentTypeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetComponentTypeId)
        targetComponentTypeId = targetComponentTypeIdDecoded
        let relationshipTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .relationshipType)
        relationshipType = relationshipTypeDecoded
    }
}
