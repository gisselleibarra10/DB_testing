// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// A description of the file system.
public struct UpdateFileSystemOutputResponse: Swift.Equatable {
    /// The unique and consistent identifier of the Availability Zone in which the file system's One Zone storage classes exist. For example, use1-az1 is an Availability Zone ID for the us-east-1 Amazon Web Services Region, and it has the same location in every Amazon Web Services account.
    public var availabilityZoneId: Swift.String?
    /// Describes the Amazon Web Services Availability Zone in which the file system is located, and is valid only for file systems using One Zone storage classes. For more information, see [Using EFS storage classes](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) in the Amazon EFS User Guide.
    public var availabilityZoneName: Swift.String?
    /// The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).
    /// This member is required.
    public var creationTime: ClientRuntime.Date?
    /// The opaque string specified in the request.
    /// This member is required.
    public var creationToken: Swift.String?
    /// A Boolean value that, if true, indicates that the file system is encrypted.
    public var encrypted: Swift.Bool?
    /// The Amazon Resource Name (ARN) for the EFS file system, in the format arn:aws:elasticfilesystem:region:account-id:file-system/file-system-id . Example with sample data: arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567
    public var fileSystemArn: Swift.String?
    /// The ID of the file system, assigned by Amazon EFS.
    /// This member is required.
    public var fileSystemId: Swift.String?
    /// The ID of an KMS key used to protect the encrypted file system.
    public var kmsKeyId: Swift.String?
    /// The lifecycle phase of the file system.
    /// This member is required.
    public var lifeCycleState: EfsClientTypes.LifeCycleState?
    /// You can add tags to a file system, including a Name tag. For more information, see [CreateFileSystem]. If the file system has a Name tag, Amazon EFS returns the value in this field.
    public var name: Swift.String?
    /// The current number of mount targets that the file system has. For more information, see [CreateMountTarget].
    /// This member is required.
    public var numberOfMountTargets: Swift.Int
    /// The Amazon Web Services account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.
    /// This member is required.
    public var ownerId: Swift.String?
    /// The performance mode of the file system.
    /// This member is required.
    public var performanceMode: EfsClientTypes.PerformanceMode?
    /// The amount of provisioned throughput, measured in MiB/s, for the file system. Valid for file systems using ThroughputMode set to provisioned.
    public var provisionedThroughputInMibps: Swift.Double?
    /// The latest known metered size (in bytes) of data stored in the file system, in its Value field, and the time at which that size was determined in its Timestamp field. The Timestamp value is the integer number of seconds since 1970-01-01T00:00:00Z. The SizeInBytes value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, SizeInBytes represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time.
    /// This member is required.
    public var sizeInBytes: EfsClientTypes.FileSystemSize?
    /// The tags associated with the file system, presented as an array of Tag objects.
    /// This member is required.
    public var tags: [EfsClientTypes.Tag]?
    /// Displays the file system's throughput mode. For more information, see [Throughput modes](https://docs.aws.amazon.com/efs/latest/ug/performance.html#throughput-modes) in the Amazon EFS User Guide.
    public var throughputMode: EfsClientTypes.ThroughputMode?

    public init (
        availabilityZoneId: Swift.String? = nil,
        availabilityZoneName: Swift.String? = nil,
        creationTime: ClientRuntime.Date? = nil,
        creationToken: Swift.String? = nil,
        encrypted: Swift.Bool? = nil,
        fileSystemArn: Swift.String? = nil,
        fileSystemId: Swift.String? = nil,
        kmsKeyId: Swift.String? = nil,
        lifeCycleState: EfsClientTypes.LifeCycleState? = nil,
        name: Swift.String? = nil,
        numberOfMountTargets: Swift.Int = 0,
        ownerId: Swift.String? = nil,
        performanceMode: EfsClientTypes.PerformanceMode? = nil,
        provisionedThroughputInMibps: Swift.Double? = nil,
        sizeInBytes: EfsClientTypes.FileSystemSize? = nil,
        tags: [EfsClientTypes.Tag]? = nil,
        throughputMode: EfsClientTypes.ThroughputMode? = nil
    )
    {
        self.availabilityZoneId = availabilityZoneId
        self.availabilityZoneName = availabilityZoneName
        self.creationTime = creationTime
        self.creationToken = creationToken
        self.encrypted = encrypted
        self.fileSystemArn = fileSystemArn
        self.fileSystemId = fileSystemId
        self.kmsKeyId = kmsKeyId
        self.lifeCycleState = lifeCycleState
        self.name = name
        self.numberOfMountTargets = numberOfMountTargets
        self.ownerId = ownerId
        self.performanceMode = performanceMode
        self.provisionedThroughputInMibps = provisionedThroughputInMibps
        self.sizeInBytes = sizeInBytes
        self.tags = tags
        self.throughputMode = throughputMode
    }
}
