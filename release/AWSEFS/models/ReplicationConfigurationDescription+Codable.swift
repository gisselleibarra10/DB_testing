// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EfsClientTypes.ReplicationConfigurationDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case destinations = "Destinations"
        case originalSourceFileSystemArn = "OriginalSourceFileSystemArn"
        case sourceFileSystemArn = "SourceFileSystemArn"
        case sourceFileSystemId = "SourceFileSystemId"
        case sourceFileSystemRegion = "SourceFileSystemRegion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let destinations = destinations {
            var destinationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .destinations)
            for destinations0 in destinations {
                try destinationsContainer.encode(destinations0)
            }
        }
        if let originalSourceFileSystemArn = self.originalSourceFileSystemArn {
            try encodeContainer.encode(originalSourceFileSystemArn, forKey: .originalSourceFileSystemArn)
        }
        if let sourceFileSystemArn = self.sourceFileSystemArn {
            try encodeContainer.encode(sourceFileSystemArn, forKey: .sourceFileSystemArn)
        }
        if let sourceFileSystemId = self.sourceFileSystemId {
            try encodeContainer.encode(sourceFileSystemId, forKey: .sourceFileSystemId)
        }
        if let sourceFileSystemRegion = self.sourceFileSystemRegion {
            try encodeContainer.encode(sourceFileSystemRegion, forKey: .sourceFileSystemRegion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceFileSystemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceFileSystemId)
        sourceFileSystemId = sourceFileSystemIdDecoded
        let sourceFileSystemRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceFileSystemRegion)
        sourceFileSystemRegion = sourceFileSystemRegionDecoded
        let sourceFileSystemArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceFileSystemArn)
        sourceFileSystemArn = sourceFileSystemArnDecoded
        let originalSourceFileSystemArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .originalSourceFileSystemArn)
        originalSourceFileSystemArn = originalSourceFileSystemArnDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let destinationsContainer = try containerValues.decodeIfPresent([EfsClientTypes.Destination?].self, forKey: .destinations)
        var destinationsDecoded0:[EfsClientTypes.Destination]? = nil
        if let destinationsContainer = destinationsContainer {
            destinationsDecoded0 = [EfsClientTypes.Destination]()
            for structure0 in destinationsContainer {
                if let structure0 = structure0 {
                    destinationsDecoded0?.append(structure0)
                }
            }
        }
        destinations = destinationsDecoded0
    }
}
