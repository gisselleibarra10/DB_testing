// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAccessPointInput: Swift.Equatable {
    /// A string of up to 64 ASCII characters that Amazon EFS uses to ensure idempotent creation.
    /// This member is required.
    public var clientToken: Swift.String?
    /// The ID of the EFS file system that the access point provides access to.
    /// This member is required.
    public var fileSystemId: Swift.String?
    /// The operating system user and group applied to all file system requests made using the access point.
    public var posixUser: EfsClientTypes.PosixUser?
    /// Specifies the directory on the Amazon EFS file system that the access point exposes as the root directory of your file system to NFS clients using the access point. The clients using the access point can only access the root directory and below. If the RootDirectory > Path specified does not exist, EFS creates it and applies the CreationInfo settings when a client connects to an access point. When specifying a RootDirectory, you must provide the Path, and the CreationInfo. Amazon EFS creates a root directory only if you have provided the CreationInfo: OwnUid, OwnGID, and permissions for the directory. If you do not provide this information, Amazon EFS does not create the root directory. If the root directory does not exist, attempts to mount using the access point will fail.
    public var rootDirectory: EfsClientTypes.RootDirectory?
    /// Creates tags associated with the access point. Each tag is a key-value pair, each key must be unique. For more information, see [Tagging Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the Amazon Web Services General Reference Guide.
    public var tags: [EfsClientTypes.Tag]?

    public init (
        clientToken: Swift.String? = nil,
        fileSystemId: Swift.String? = nil,
        posixUser: EfsClientTypes.PosixUser? = nil,
        rootDirectory: EfsClientTypes.RootDirectory? = nil,
        tags: [EfsClientTypes.Tag]? = nil
    )
    {
        self.clientToken = clientToken
        self.fileSystemId = fileSystemId
        self.posixUser = posixUser
        self.rootDirectory = rootDirectory
        self.tags = tags
    }
}
