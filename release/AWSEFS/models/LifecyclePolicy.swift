// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EfsClientTypes {
    /// Describes a policy used by EFS lifecycle management and EFS Intelligent-Tiering that specifies when to transition files into and out of the file system's Infrequent Access (IA) storage class. For more information, see [EFS Intelligent‚ÄêTiering and EFS Lifecycle Management](https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html). When using the put-lifecycle-configuration CLI command or the PutLifecycleConfiguration API action, Amazon EFS requires that each LifecyclePolicy object have only a single transition. This means that in a request body, LifecyclePolicies must be structured as an array of LifecyclePolicy objects, one object for each transition, TransitionToIA, TransitionToPrimaryStorageClass. For more information, see the request examples in [PutLifecycleConfiguration].
    public struct LifecyclePolicy: Swift.Equatable {
        /// Describes the period of time that a file is not accessed, after which it transitions to IA storage. Metadata operations such as listing the contents of a directory don't count as file access events.
        public var transitionToIA: EfsClientTypes.TransitionToIARules?
        /// Describes when to transition a file from IA storage to primary storage. Metadata operations such as listing the contents of a directory don't count as file access events.
        public var transitionToPrimaryStorageClass: EfsClientTypes.TransitionToPrimaryStorageClassRules?

        public init (
            transitionToIA: EfsClientTypes.TransitionToIARules? = nil,
            transitionToPrimaryStorageClass: EfsClientTypes.TransitionToPrimaryStorageClassRules? = nil
        )
        {
            self.transitionToIA = transitionToIA
            self.transitionToPrimaryStorageClass = transitionToPrimaryStorageClass
        }
    }

}
