// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EfsClientTypes.Destination: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fileSystemId = "FileSystemId"
        case lastReplicatedTimestamp = "LastReplicatedTimestamp"
        case region = "Region"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fileSystemId = self.fileSystemId {
            try encodeContainer.encode(fileSystemId, forKey: .fileSystemId)
        }
        if let lastReplicatedTimestamp = self.lastReplicatedTimestamp {
            try encodeContainer.encode(lastReplicatedTimestamp.timeIntervalSince1970, forKey: .lastReplicatedTimestamp)
        }
        if let region = self.region {
            try encodeContainer.encode(region, forKey: .region)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(EfsClientTypes.ReplicationStatus.self, forKey: .status)
        status = statusDecoded
        let fileSystemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fileSystemId)
        fileSystemId = fileSystemIdDecoded
        let regionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .region)
        region = regionDecoded
        let lastReplicatedTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastReplicatedTimestamp)
        lastReplicatedTimestamp = lastReplicatedTimestampDecoded
    }
}
