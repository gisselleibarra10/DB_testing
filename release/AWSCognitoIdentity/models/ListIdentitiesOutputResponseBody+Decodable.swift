// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIdentitiesOutputResponseBody: Swift.Equatable {
    let identityPoolId: Swift.String?
    let identities: [CognitoIdentityClientTypes.IdentityDescription]?
    let nextToken: Swift.String?
}

extension ListIdentitiesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identities = "Identities"
        case identityPoolId = "IdentityPoolId"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityPoolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityPoolId)
        identityPoolId = identityPoolIdDecoded
        let identitiesContainer = try containerValues.decodeIfPresent([CognitoIdentityClientTypes.IdentityDescription?].self, forKey: .identities)
        var identitiesDecoded0:[CognitoIdentityClientTypes.IdentityDescription]? = nil
        if let identitiesContainer = identitiesContainer {
            identitiesDecoded0 = [CognitoIdentityClientTypes.IdentityDescription]()
            for structure0 in identitiesContainer {
                if let structure0 = structure0 {
                    identitiesDecoded0?.append(structure0)
                }
            }
        }
        identities = identitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
