// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeIdentityOutputResponseBody: Swift.Equatable {
    let identityId: Swift.String?
    let logins: [Swift.String]?
    let creationDate: ClientRuntime.Date?
    let lastModifiedDate: ClientRuntime.Date?
}

extension DescribeIdentityOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationDate = "CreationDate"
        case identityId = "IdentityId"
        case lastModifiedDate = "LastModifiedDate"
        case logins = "Logins"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityId)
        identityId = identityIdDecoded
        let loginsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .logins)
        var loginsDecoded0:[Swift.String]? = nil
        if let loginsContainer = loginsContainer {
            loginsDecoded0 = [Swift.String]()
            for string0 in loginsContainer {
                if let string0 = string0 {
                    loginsDecoded0?.append(string0)
                }
            }
        }
        logins = loginsDecoded0
        let creationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
    }
}
