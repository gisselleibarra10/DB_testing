// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetIdentityPoolRolesOutputResponseBody: Swift.Equatable {
    let identityPoolId: Swift.String?
    let roles: [Swift.String:Swift.String]?
    let roleMappings: [Swift.String:CognitoIdentityClientTypes.RoleMapping]?
}

extension GetIdentityPoolRolesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identityPoolId = "IdentityPoolId"
        case roleMappings = "RoleMappings"
        case roles = "Roles"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityPoolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityPoolId)
        identityPoolId = identityPoolIdDecoded
        let rolesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .roles)
        var rolesDecoded0: [Swift.String:Swift.String]? = nil
        if let rolesContainer = rolesContainer {
            rolesDecoded0 = [Swift.String:Swift.String]()
            for (key0, arnstring0) in rolesContainer {
                if let arnstring0 = arnstring0 {
                    rolesDecoded0?[key0] = arnstring0
                }
            }
        }
        roles = rolesDecoded0
        let roleMappingsContainer = try containerValues.decodeIfPresent([Swift.String: CognitoIdentityClientTypes.RoleMapping?].self, forKey: .roleMappings)
        var roleMappingsDecoded0: [Swift.String:CognitoIdentityClientTypes.RoleMapping]? = nil
        if let roleMappingsContainer = roleMappingsContainer {
            roleMappingsDecoded0 = [Swift.String:CognitoIdentityClientTypes.RoleMapping]()
            for (key0, rolemapping0) in roleMappingsContainer {
                if let rolemapping0 = rolemapping0 {
                    roleMappingsDecoded0?[key0] = rolemapping0
                }
            }
        }
        roleMappings = roleMappingsDecoded0
    }
}
