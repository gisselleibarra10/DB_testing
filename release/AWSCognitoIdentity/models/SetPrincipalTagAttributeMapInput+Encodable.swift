// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SetPrincipalTagAttributeMapInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identityPoolId = "IdentityPoolId"
        case identityProviderName = "IdentityProviderName"
        case principalTags = "PrincipalTags"
        case useDefaults = "UseDefaults"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let identityPoolId = self.identityPoolId {
            try encodeContainer.encode(identityPoolId, forKey: .identityPoolId)
        }
        if let identityProviderName = self.identityProviderName {
            try encodeContainer.encode(identityProviderName, forKey: .identityProviderName)
        }
        if let principalTags = principalTags {
            var principalTagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .principalTags)
            for (dictKey0, principaltags0) in principalTags {
                try principalTagsContainer.encode(principaltags0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let useDefaults = self.useDefaults {
            try encodeContainer.encode(useDefaults, forKey: .useDefaults)
        }
    }
}
