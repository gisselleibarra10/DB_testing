// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCredentialsForIdentityInputBody: Swift.Equatable {
    let identityId: Swift.String?
    let logins: [Swift.String:Swift.String]?
    let customRoleArn: Swift.String?
}

extension GetCredentialsForIdentityInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customRoleArn = "CustomRoleArn"
        case identityId = "IdentityId"
        case logins = "Logins"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityId)
        identityId = identityIdDecoded
        let loginsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .logins)
        var loginsDecoded0: [Swift.String:Swift.String]? = nil
        if let loginsContainer = loginsContainer {
            loginsDecoded0 = [Swift.String:Swift.String]()
            for (key0, identityprovidertoken0) in loginsContainer {
                if let identityprovidertoken0 = identityprovidertoken0 {
                    loginsDecoded0?[key0] = identityprovidertoken0
                }
            }
        }
        logins = loginsDecoded0
        let customRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customRoleArn)
        customRoleArn = customRoleArnDecoded
    }
}
