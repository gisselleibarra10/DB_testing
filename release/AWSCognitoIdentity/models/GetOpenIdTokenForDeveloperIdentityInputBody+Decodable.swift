// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetOpenIdTokenForDeveloperIdentityInputBody: Swift.Equatable {
    let identityPoolId: Swift.String?
    let identityId: Swift.String?
    let logins: [Swift.String:Swift.String]?
    let principalTags: [Swift.String:Swift.String]?
    let tokenDuration: Swift.Int?
}

extension GetOpenIdTokenForDeveloperIdentityInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identityId = "IdentityId"
        case identityPoolId = "IdentityPoolId"
        case logins = "Logins"
        case principalTags = "PrincipalTags"
        case tokenDuration = "TokenDuration"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityPoolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityPoolId)
        identityPoolId = identityPoolIdDecoded
        let identityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityId)
        identityId = identityIdDecoded
        let loginsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .logins)
        var loginsDecoded0: [Swift.String:Swift.String]? = nil
        if let loginsContainer = loginsContainer {
            loginsDecoded0 = [Swift.String:Swift.String]()
            for (key0, identityprovidertoken0) in loginsContainer {
                if let identityprovidertoken0 = identityprovidertoken0 {
                    loginsDecoded0?[key0] = identityprovidertoken0
                }
            }
        }
        logins = loginsDecoded0
        let principalTagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .principalTags)
        var principalTagsDecoded0: [Swift.String:Swift.String]? = nil
        if let principalTagsContainer = principalTagsContainer {
            principalTagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, principaltagvalue0) in principalTagsContainer {
                if let principaltagvalue0 = principaltagvalue0 {
                    principalTagsDecoded0?[key0] = principaltagvalue0
                }
            }
        }
        principalTags = principalTagsDecoded0
        let tokenDurationDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .tokenDuration)
        tokenDuration = tokenDurationDecoded
    }
}
