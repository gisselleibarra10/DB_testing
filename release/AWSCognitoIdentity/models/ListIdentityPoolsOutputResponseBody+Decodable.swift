// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIdentityPoolsOutputResponseBody: Swift.Equatable {
    let identityPools: [CognitoIdentityClientTypes.IdentityPoolShortDescription]?
    let nextToken: Swift.String?
}

extension ListIdentityPoolsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identityPools = "IdentityPools"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityPoolsContainer = try containerValues.decodeIfPresent([CognitoIdentityClientTypes.IdentityPoolShortDescription?].self, forKey: .identityPools)
        var identityPoolsDecoded0:[CognitoIdentityClientTypes.IdentityPoolShortDescription]? = nil
        if let identityPoolsContainer = identityPoolsContainer {
            identityPoolsDecoded0 = [CognitoIdentityClientTypes.IdentityPoolShortDescription]()
            for structure0 in identityPoolsContainer {
                if let structure0 = structure0 {
                    identityPoolsDecoded0?.append(structure0)
                }
            }
        }
        identityPools = identityPoolsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
