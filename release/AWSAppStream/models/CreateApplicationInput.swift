// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateApplicationInput: Swift.Equatable {
    /// The app block ARN to which the application should be associated
    /// This member is required.
    public var appBlockArn: Swift.String?
    /// The description of the application.
    public var description: Swift.String?
    /// The display name of the application. This name is visible to users in the application catalog.
    public var displayName: Swift.String?
    /// The location in S3 of the application icon.
    /// This member is required.
    public var iconS3Location: AppStreamClientTypes.S3Location?
    /// The instance families the application supports. Valid values are GENERAL_PURPOSE and GRAPHICS_G4.
    /// This member is required.
    public var instanceFamilies: [Swift.String]?
    /// The launch parameters of the application.
    public var launchParameters: Swift.String?
    /// The launch path of the application.
    /// This member is required.
    public var launchPath: Swift.String?
    /// The name of the application. This name is visible to users when display name is not specified.
    /// This member is required.
    public var name: Swift.String?
    /// The platforms the application supports. WINDOWS_SERVER_2019 and AMAZON_LINUX2 are supported for Elastic fleets.
    /// This member is required.
    public var platforms: [AppStreamClientTypes.PlatformType]?
    /// The tags assigned to the application.
    public var tags: [Swift.String:Swift.String]?
    /// The working directory of the application.
    public var workingDirectory: Swift.String?

    public init (
        appBlockArn: Swift.String? = nil,
        description: Swift.String? = nil,
        displayName: Swift.String? = nil,
        iconS3Location: AppStreamClientTypes.S3Location? = nil,
        instanceFamilies: [Swift.String]? = nil,
        launchParameters: Swift.String? = nil,
        launchPath: Swift.String? = nil,
        name: Swift.String? = nil,
        platforms: [AppStreamClientTypes.PlatformType]? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        workingDirectory: Swift.String? = nil
    )
    {
        self.appBlockArn = appBlockArn
        self.description = description
        self.displayName = displayName
        self.iconS3Location = iconS3Location
        self.instanceFamilies = instanceFamilies
        self.launchParameters = launchParameters
        self.launchPath = launchPath
        self.name = name
        self.platforms = platforms
        self.tags = tags
        self.workingDirectory = workingDirectory
    }
}
