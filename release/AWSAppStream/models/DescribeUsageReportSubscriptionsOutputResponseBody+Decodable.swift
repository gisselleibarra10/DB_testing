// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeUsageReportSubscriptionsOutputResponseBody: Swift.Equatable {
    let usageReportSubscriptions: [AppStreamClientTypes.UsageReportSubscription]?
    let nextToken: Swift.String?
}

extension DescribeUsageReportSubscriptionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case usageReportSubscriptions = "UsageReportSubscriptions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let usageReportSubscriptionsContainer = try containerValues.decodeIfPresent([AppStreamClientTypes.UsageReportSubscription?].self, forKey: .usageReportSubscriptions)
        var usageReportSubscriptionsDecoded0:[AppStreamClientTypes.UsageReportSubscription]? = nil
        if let usageReportSubscriptionsContainer = usageReportSubscriptionsContainer {
            usageReportSubscriptionsDecoded0 = [AppStreamClientTypes.UsageReportSubscription]()
            for structure0 in usageReportSubscriptionsContainer {
                if let structure0 = structure0 {
                    usageReportSubscriptionsDecoded0?.append(structure0)
                }
            }
        }
        usageReportSubscriptions = usageReportSubscriptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
