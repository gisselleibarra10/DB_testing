// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppStreamClientTypes.ScriptDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case executableParameters = "ExecutableParameters"
        case executablePath = "ExecutablePath"
        case scriptS3Location = "ScriptS3Location"
        case timeoutInSeconds = "TimeoutInSeconds"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let executableParameters = self.executableParameters {
            try encodeContainer.encode(executableParameters, forKey: .executableParameters)
        }
        if let executablePath = self.executablePath {
            try encodeContainer.encode(executablePath, forKey: .executablePath)
        }
        if let scriptS3Location = self.scriptS3Location {
            try encodeContainer.encode(scriptS3Location, forKey: .scriptS3Location)
        }
        if let timeoutInSeconds = self.timeoutInSeconds {
            try encodeContainer.encode(timeoutInSeconds, forKey: .timeoutInSeconds)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scriptS3LocationDecoded = try containerValues.decodeIfPresent(AppStreamClientTypes.S3Location.self, forKey: .scriptS3Location)
        scriptS3Location = scriptS3LocationDecoded
        let executablePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executablePath)
        executablePath = executablePathDecoded
        let executableParametersDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executableParameters)
        executableParameters = executableParametersDecoded
        let timeoutInSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .timeoutInSeconds)
        timeoutInSeconds = timeoutInSecondsDecoded
    }
}
