// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateAppBlockInputBody: Swift.Equatable {
    let name: Swift.String?
    let description: Swift.String?
    let displayName: Swift.String?
    let sourceS3Location: AppStreamClientTypes.S3Location?
    let setupScriptDetails: AppStreamClientTypes.ScriptDetails?
    let tags: [Swift.String:Swift.String]?
}

extension CreateAppBlockInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case displayName = "DisplayName"
        case name = "Name"
        case setupScriptDetails = "SetupScriptDetails"
        case sourceS3Location = "SourceS3Location"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let sourceS3LocationDecoded = try containerValues.decodeIfPresent(AppStreamClientTypes.S3Location.self, forKey: .sourceS3Location)
        sourceS3Location = sourceS3LocationDecoded
        let setupScriptDetailsDecoded = try containerValues.decodeIfPresent(AppStreamClientTypes.ScriptDetails.self, forKey: .setupScriptDetails)
        setupScriptDetails = setupScriptDetailsDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
