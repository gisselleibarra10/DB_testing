// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppStreamClientTypes {
    /// Describes a streaming session.
    public struct Session: Swift.Equatable {
        /// The authentication method. The user is authenticated using a streaming URL (API) or SAML 2.0 federation (SAML).
        public var authenticationType: AppStreamClientTypes.AuthenticationType?
        /// Specifies whether a user is connected to the streaming session.
        public var connectionState: AppStreamClientTypes.SessionConnectionState?
        /// The name of the fleet for the streaming session.
        /// This member is required.
        public var fleetName: Swift.String?
        /// The identifier of the streaming session.
        /// This member is required.
        public var id: Swift.String?
        /// The time when the streaming session is set to expire. This time is based on the MaxUserDurationinSeconds value, which determines the maximum length of time that a streaming session can run. A streaming session might end earlier than the time specified in SessionMaxExpirationTime, when the DisconnectTimeOutInSeconds elapses or the user chooses to end his or her session. If the DisconnectTimeOutInSeconds elapses, or the user chooses to end his or her session, the streaming instance is terminated and the streaming session ends.
        public var maxExpirationTime: ClientRuntime.Date?
        /// The network details for the streaming session.
        public var networkAccessConfiguration: AppStreamClientTypes.NetworkAccessConfiguration?
        /// The name of the stack for the streaming session.
        /// This member is required.
        public var stackName: Swift.String?
        /// The time when a streaming instance is dedicated for the user.
        public var startTime: ClientRuntime.Date?
        /// The current state of the streaming session.
        /// This member is required.
        public var state: AppStreamClientTypes.SessionState?
        /// The identifier of the user for whom the session was created.
        /// This member is required.
        public var userId: Swift.String?

        public init (
            authenticationType: AppStreamClientTypes.AuthenticationType? = nil,
            connectionState: AppStreamClientTypes.SessionConnectionState? = nil,
            fleetName: Swift.String? = nil,
            id: Swift.String? = nil,
            maxExpirationTime: ClientRuntime.Date? = nil,
            networkAccessConfiguration: AppStreamClientTypes.NetworkAccessConfiguration? = nil,
            stackName: Swift.String? = nil,
            startTime: ClientRuntime.Date? = nil,
            state: AppStreamClientTypes.SessionState? = nil,
            userId: Swift.String? = nil
        )
        {
            self.authenticationType = authenticationType
            self.connectionState = connectionState
            self.fleetName = fleetName
            self.id = id
            self.maxExpirationTime = maxExpirationTime
            self.networkAccessConfiguration = networkAccessConfiguration
            self.stackName = stackName
            self.startTime = startTime
            self.state = state
            self.userId = userId
        }
    }

}
