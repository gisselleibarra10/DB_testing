// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEntitledApplicationsOutputResponseBody: Swift.Equatable {
    let entitledApplications: [AppStreamClientTypes.EntitledApplication]?
    let nextToken: Swift.String?
}

extension ListEntitledApplicationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entitledApplications = "EntitledApplications"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entitledApplicationsContainer = try containerValues.decodeIfPresent([AppStreamClientTypes.EntitledApplication?].self, forKey: .entitledApplications)
        var entitledApplicationsDecoded0:[AppStreamClientTypes.EntitledApplication]? = nil
        if let entitledApplicationsContainer = entitledApplicationsContainer {
            entitledApplicationsDecoded0 = [AppStreamClientTypes.EntitledApplication]()
            for structure0 in entitledApplicationsContainer {
                if let structure0 = structure0 {
                    entitledApplicationsDecoded0?.append(structure0)
                }
            }
        }
        entitledApplications = entitledApplicationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
