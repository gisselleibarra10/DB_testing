// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateEntitlementInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appVisibility = "AppVisibility"
        case attributes = "Attributes"
        case description = "Description"
        case name = "Name"
        case stackName = "StackName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appVisibility = self.appVisibility {
            try encodeContainer.encode(appVisibility.rawValue, forKey: .appVisibility)
        }
        if let attributes = attributes {
            var attributesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .attributes)
            for entitlementattributelist0 in attributes {
                try attributesContainer.encode(entitlementattributelist0)
            }
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let stackName = self.stackName {
            try encodeContainer.encode(stackName, forKey: .stackName)
        }
    }
}
