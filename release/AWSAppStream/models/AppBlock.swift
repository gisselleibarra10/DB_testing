// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppStreamClientTypes {
    /// Describes an app block. App blocks are an Amazon AppStream 2.0 resource that stores the details about the virtual hard disk in an S3 bucket. It also stores the setup script with details about how to mount the virtual hard disk. The virtual hard disk includes the application binaries and other files necessary to launch your applications. Multiple applications can be assigned to a single app block. This is only supported for Elastic fleets.
    public struct AppBlock: Swift.Equatable {
        /// The ARN of the app block.
        /// This member is required.
        public var arn: Swift.String?
        /// The created time of the app block.
        public var createdTime: ClientRuntime.Date?
        /// The description of the app block.
        public var description: Swift.String?
        /// The display name of the app block.
        public var displayName: Swift.String?
        /// The name of the app block.
        /// This member is required.
        public var name: Swift.String?
        /// The setup script details of the app block.
        /// This member is required.
        public var setupScriptDetails: AppStreamClientTypes.ScriptDetails?
        /// The source S3 location of the app block.
        public var sourceS3Location: AppStreamClientTypes.S3Location?

        public init (
            arn: Swift.String? = nil,
            createdTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            displayName: Swift.String? = nil,
            name: Swift.String? = nil,
            setupScriptDetails: AppStreamClientTypes.ScriptDetails? = nil,
            sourceS3Location: AppStreamClientTypes.S3Location? = nil
        )
        {
            self.arn = arn
            self.createdTime = createdTime
            self.description = description
            self.displayName = displayName
            self.name = name
            self.setupScriptDetails = setupScriptDetails
            self.sourceS3Location = sourceS3Location
        }
    }

}
