// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStageDeploymentsOutputResponseBody: Swift.Equatable {
    let stageDeployments: [GameSparksClientTypes.StageDeploymentSummary]?
    let nextToken: Swift.String?
}

extension ListStageDeploymentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case stageDeployments = "StageDeployments"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stageDeploymentsContainer = try containerValues.decodeIfPresent([GameSparksClientTypes.StageDeploymentSummary?].self, forKey: .stageDeployments)
        var stageDeploymentsDecoded0:[GameSparksClientTypes.StageDeploymentSummary]? = nil
        if let stageDeploymentsContainer = stageDeploymentsContainer {
            stageDeploymentsDecoded0 = [GameSparksClientTypes.StageDeploymentSummary]()
            for structure0 in stageDeploymentsContainer {
                if let structure0 = structure0 {
                    stageDeploymentsDecoded0?.append(structure0)
                }
            }
        }
        stageDeployments = stageDeploymentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
