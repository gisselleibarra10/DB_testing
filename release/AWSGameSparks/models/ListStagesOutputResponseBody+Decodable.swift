// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStagesOutputResponseBody: Swift.Equatable {
    let stages: [GameSparksClientTypes.StageSummary]?
    let nextToken: Swift.String?
}

extension ListStagesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case stages = "Stages"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stagesContainer = try containerValues.decodeIfPresent([GameSparksClientTypes.StageSummary?].self, forKey: .stages)
        var stagesDecoded0:[GameSparksClientTypes.StageSummary]? = nil
        if let stagesContainer = stagesContainer {
            stagesDecoded0 = [GameSparksClientTypes.StageSummary]()
            for structure0 in stagesContainer {
                if let structure0 = structure0 {
                    stagesDecoded0?.append(structure0)
                }
            }
        }
        stages = stagesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
