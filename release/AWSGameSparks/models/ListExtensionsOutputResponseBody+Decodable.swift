// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListExtensionsOutputResponseBody: Swift.Equatable {
    let extensions: [GameSparksClientTypes.ExtensionDetails]?
    let nextToken: Swift.String?
}

extension ListExtensionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case extensions = "Extensions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let extensionsContainer = try containerValues.decodeIfPresent([GameSparksClientTypes.ExtensionDetails?].self, forKey: .extensions)
        var extensionsDecoded0:[GameSparksClientTypes.ExtensionDetails]? = nil
        if let extensionsContainer = extensionsContainer {
            extensionsDecoded0 = [GameSparksClientTypes.ExtensionDetails]()
            for structure0 in extensionsContainer {
                if let structure0 = structure0 {
                    extensionsDecoded0?.append(structure0)
                }
            }
        }
        extensions = extensionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
