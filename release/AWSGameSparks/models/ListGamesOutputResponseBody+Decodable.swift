// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGamesOutputResponseBody: Swift.Equatable {
    let games: [GameSparksClientTypes.GameSummary]?
    let nextToken: Swift.String?
}

extension ListGamesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case games = "Games"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gamesContainer = try containerValues.decodeIfPresent([GameSparksClientTypes.GameSummary?].self, forKey: .games)
        var gamesDecoded0:[GameSparksClientTypes.GameSummary]? = nil
        if let gamesContainer = gamesContainer {
            gamesDecoded0 = [GameSparksClientTypes.GameSummary]()
            for structure0 in gamesContainer {
                if let structure0 = structure0 {
                    gamesDecoded0?.append(structure0)
                }
            }
        }
        games = gamesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
