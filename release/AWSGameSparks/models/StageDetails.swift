// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameSparksClientTypes {
    /// Properties that provide details of a stage.
    public struct StageDetails: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the stage.
        public var arn: Swift.String?
        /// The timestamp of when the stage was created.
        public var created: ClientRuntime.Date?
        /// The description of the stage.
        public var description: Swift.String?
        /// The game key associated with the stage. The game key is a unique identifier that the game client uses to connect to the GameSparks backend.
        public var gameKey: Swift.String?
        /// The timestamp of when the stage was last updated.
        public var lastUpdated: ClientRuntime.Date?
        /// The Amazon CloudWatch log group for game runtimes deployed to the stage.
        public var logGroup: Swift.String?
        /// The name of the stage.
        public var name: Swift.String?
        /// The Amazon Resource Name (ARN) of the role used to run the game runtimes deployed to the stage.
        public var role: Swift.String?
        /// The state of the stage.
        public var state: GameSparksClientTypes.StageState?
        /// The tags associated with the stage.
        public var tags: [Swift.String:Swift.String]?

        public init (
            arn: Swift.String? = nil,
            created: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            gameKey: Swift.String? = nil,
            lastUpdated: ClientRuntime.Date? = nil,
            logGroup: Swift.String? = nil,
            name: Swift.String? = nil,
            role: Swift.String? = nil,
            state: GameSparksClientTypes.StageState? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.arn = arn
            self.created = created
            self.description = description
            self.gameKey = gameKey
            self.lastUpdated = lastUpdated
            self.logGroup = logGroup
            self.name = name
            self.role = role
            self.state = state
            self.tags = tags
        }
    }

}
