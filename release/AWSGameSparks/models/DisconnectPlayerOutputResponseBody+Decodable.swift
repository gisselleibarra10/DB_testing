// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DisconnectPlayerOutputResponseBody: Swift.Equatable {
    let disconnectSuccesses: [Swift.String]?
    let disconnectFailures: [Swift.String]?
}

extension DisconnectPlayerOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case disconnectFailures = "DisconnectFailures"
        case disconnectSuccesses = "DisconnectSuccesses"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let disconnectSuccessesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .disconnectSuccesses)
        var disconnectSuccessesDecoded0:[Swift.String]? = nil
        if let disconnectSuccessesContainer = disconnectSuccessesContainer {
            disconnectSuccessesDecoded0 = [Swift.String]()
            for string0 in disconnectSuccessesContainer {
                if let string0 = string0 {
                    disconnectSuccessesDecoded0?.append(string0)
                }
            }
        }
        disconnectSuccesses = disconnectSuccessesDecoded0
        let disconnectFailuresContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .disconnectFailures)
        var disconnectFailuresDecoded0:[Swift.String]? = nil
        if let disconnectFailuresContainer = disconnectFailuresContainer {
            disconnectFailuresDecoded0 = [Swift.String]()
            for string0 in disconnectFailuresContainer {
                if let string0 = string0 {
                    disconnectFailuresDecoded0?.append(string0)
                }
            }
        }
        disconnectFailures = disconnectFailuresDecoded0
    }
}
