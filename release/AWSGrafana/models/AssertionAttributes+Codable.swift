// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GrafanaClientTypes.AssertionAttributes: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case email
        case groups
        case login
        case name
        case org
        case role
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let email = self.email {
            try encodeContainer.encode(email, forKey: .email)
        }
        if let groups = self.groups {
            try encodeContainer.encode(groups, forKey: .groups)
        }
        if let login = self.login {
            try encodeContainer.encode(login, forKey: .login)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let org = self.org {
            try encodeContainer.encode(org, forKey: .org)
        }
        if let role = self.role {
            try encodeContainer.encode(role, forKey: .role)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let loginDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .login)
        login = loginDecoded
        let emailDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .email)
        email = emailDecoded
        let groupsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groups)
        groups = groupsDecoded
        let roleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .role)
        role = roleDecoded
        let orgDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .org)
        org = orgDecoded
    }
}
