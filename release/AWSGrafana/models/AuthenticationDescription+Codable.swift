// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GrafanaClientTypes.AuthenticationDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case awsSso
        case providers
        case saml
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let awsSso = self.awsSso {
            try encodeContainer.encode(awsSso, forKey: .awsSso)
        }
        if let providers = providers {
            var providersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .providers)
            for authenticationproviders0 in providers {
                try providersContainer.encode(authenticationproviders0.rawValue)
            }
        }
        if let saml = self.saml {
            try encodeContainer.encode(saml, forKey: .saml)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let providersContainer = try containerValues.decodeIfPresent([GrafanaClientTypes.AuthenticationProviderTypes?].self, forKey: .providers)
        var providersDecoded0:[GrafanaClientTypes.AuthenticationProviderTypes]? = nil
        if let providersContainer = providersContainer {
            providersDecoded0 = [GrafanaClientTypes.AuthenticationProviderTypes]()
            for string0 in providersContainer {
                if let string0 = string0 {
                    providersDecoded0?.append(string0)
                }
            }
        }
        providers = providersDecoded0
        let samlDecoded = try containerValues.decodeIfPresent(GrafanaClientTypes.SamlAuthentication.self, forKey: .saml)
        saml = samlDecoded
        let awsSsoDecoded = try containerValues.decodeIfPresent(GrafanaClientTypes.AwsSsoAuthentication.self, forKey: .awsSso)
        awsSso = awsSsoDecoded
    }
}
