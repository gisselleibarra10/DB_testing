// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GrafanaClientTypes.UpdateInstruction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case action
        case role
        case users
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let action = self.action {
            try encodeContainer.encode(action.rawValue, forKey: .action)
        }
        if let role = self.role {
            try encodeContainer.encode(role.rawValue, forKey: .role)
        }
        if let users = users {
            var usersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .users)
            for userlist0 in users {
                try usersContainer.encode(userlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionDecoded = try containerValues.decodeIfPresent(GrafanaClientTypes.UpdateAction.self, forKey: .action)
        action = actionDecoded
        let roleDecoded = try containerValues.decodeIfPresent(GrafanaClientTypes.Role.self, forKey: .role)
        role = roleDecoded
        let usersContainer = try containerValues.decodeIfPresent([GrafanaClientTypes.User?].self, forKey: .users)
        var usersDecoded0:[GrafanaClientTypes.User]? = nil
        if let usersContainer = usersContainer {
            usersDecoded0 = [GrafanaClientTypes.User]()
            for structure0 in usersContainer {
                if let structure0 = structure0 {
                    usersDecoded0?.append(structure0)
                }
            }
        }
        users = usersDecoded0
    }
}
