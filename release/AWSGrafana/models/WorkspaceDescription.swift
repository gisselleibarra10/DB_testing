// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GrafanaClientTypes {
    /// A structure containing information about an Amazon Managed Grafana workspace in your account.
    public struct WorkspaceDescription: Swift.Equatable {
        /// Specifies whether the workspace can access Amazon Web Services resources in this Amazon Web Services account only, or whether it can also access Amazon Web Services resources in other accounts in the same organization. If this is ORGANIZATION, the workspaceOrganizationalUnits parameter specifies which organizational units the workspace can access.
        public var accountAccessType: GrafanaClientTypes.AccountAccessType?
        /// A structure that describes whether the workspace uses SAML, Amazon Web Services SSO, or both methods for user authentication.
        /// This member is required.
        public var authentication: GrafanaClientTypes.AuthenticationSummary?
        /// The date that the workspace was created.
        /// This member is required.
        public var created: ClientRuntime.Date?
        /// Specifies the Amazon Web Services data sources that have been configured to have IAM roles and permissions created to allow Amazon Managed Grafana to read data from these sources.
        /// This member is required.
        public var dataSources: [GrafanaClientTypes.DataSourceType]?
        /// The user-defined description of the workspace.
        public var description: Swift.String?
        /// The URL that users can use to access the Grafana console in the workspace.
        /// This member is required.
        public var endpoint: Swift.String?
        /// Specifies whether this workspace has already fully used its free trial for Grafana Enterprise.
        public var freeTrialConsumed: Swift.Bool?
        /// If this workspace is currently in the free trial period for Grafana Enterprise, this value specifies when that free trial ends.
        public var freeTrialExpiration: ClientRuntime.Date?
        /// The version of Grafana supported in this workspace.
        /// This member is required.
        public var grafanaVersion: Swift.String?
        /// The unique ID of this workspace.
        /// This member is required.
        public var id: Swift.String?
        /// If this workspace has a full Grafana Enterprise license, this specifies when the license ends and will need to be renewed.
        public var licenseExpiration: ClientRuntime.Date?
        /// Specifies whether this workspace has a full Grafana Enterprise license or a free trial license.
        public var licenseType: GrafanaClientTypes.LicenseType?
        /// The most recent date that the workspace was modified.
        /// This member is required.
        public var modified: ClientRuntime.Date?
        /// The name of the workspace.
        public var name: Swift.String?
        /// The Amazon Web Services notification channels that Amazon Managed Grafana can automatically create IAM roles and permissions for, to allow Amazon Managed Grafana to use these channels.
        public var notificationDestinations: [GrafanaClientTypes.NotificationDestinationType]?
        /// The name of the IAM role that is used to access resources through Organizations.
        public var organizationRoleName: Swift.String?
        /// Specifies the organizational units that this workspace is allowed to use data sources from, if this workspace is in an account that is part of an organization.
        public var organizationalUnits: [Swift.String]?
        /// If this is Service Managed, Amazon Managed Grafana automatically creates the IAM roles and provisions the permissions that the workspace needs to use Amazon Web Services data sources and notification channels. If this is CUSTOMER_MANAGED, you manage those roles and permissions yourself. If you are creating this workspace in a member account of an organization and that account is not a delegated administrator account, and you want the workspace to access data sources in other Amazon Web Services accounts in the organization, you must choose CUSTOMER_MANAGED. For more information, see [Amazon Managed Grafana permissions and policies for Amazon Web Services data sources and notification channels](https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html)
        public var permissionType: GrafanaClientTypes.PermissionType?
        /// The name of the CloudFormation stack set that is used to generate IAM roles to be used for this workspace.
        public var stackSetName: Swift.String?
        /// The current status of the workspace.
        /// This member is required.
        public var status: GrafanaClientTypes.WorkspaceStatus?
        /// The list of tags associated with the workspace.
        public var tags: [Swift.String:Swift.String]?
        /// The IAM role that grants permissions to the Amazon Web Services resources that the workspace will view data from. This role must already exist.
        public var workspaceRoleArn: Swift.String?

        public init (
            accountAccessType: GrafanaClientTypes.AccountAccessType? = nil,
            authentication: GrafanaClientTypes.AuthenticationSummary? = nil,
            created: ClientRuntime.Date? = nil,
            dataSources: [GrafanaClientTypes.DataSourceType]? = nil,
            description: Swift.String? = nil,
            endpoint: Swift.String? = nil,
            freeTrialConsumed: Swift.Bool? = nil,
            freeTrialExpiration: ClientRuntime.Date? = nil,
            grafanaVersion: Swift.String? = nil,
            id: Swift.String? = nil,
            licenseExpiration: ClientRuntime.Date? = nil,
            licenseType: GrafanaClientTypes.LicenseType? = nil,
            modified: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            notificationDestinations: [GrafanaClientTypes.NotificationDestinationType]? = nil,
            organizationRoleName: Swift.String? = nil,
            organizationalUnits: [Swift.String]? = nil,
            permissionType: GrafanaClientTypes.PermissionType? = nil,
            stackSetName: Swift.String? = nil,
            status: GrafanaClientTypes.WorkspaceStatus? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            workspaceRoleArn: Swift.String? = nil
        )
        {
            self.accountAccessType = accountAccessType
            self.authentication = authentication
            self.created = created
            self.dataSources = dataSources
            self.description = description
            self.endpoint = endpoint
            self.freeTrialConsumed = freeTrialConsumed
            self.freeTrialExpiration = freeTrialExpiration
            self.grafanaVersion = grafanaVersion
            self.id = id
            self.licenseExpiration = licenseExpiration
            self.licenseType = licenseType
            self.modified = modified
            self.name = name
            self.notificationDestinations = notificationDestinations
            self.organizationRoleName = organizationRoleName
            self.organizationalUnits = organizationalUnits
            self.permissionType = permissionType
            self.stackSetName = stackSetName
            self.status = status
            self.tags = tags
            self.workspaceRoleArn = workspaceRoleArn
        }
    }

}
