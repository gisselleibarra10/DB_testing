// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ControlClientTypes.S3ManifestOutputLocation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bucket = "Bucket"
        case expectedManifestBucketOwner = "ExpectedManifestBucketOwner"
        case manifestEncryption = "ManifestEncryption"
        case manifestFormat = "ManifestFormat"
        case manifestPrefix = "ManifestPrefix"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let bucket = bucket {
            try container.encode(bucket, forKey: ClientRuntime.Key("Bucket"))
        }
        if let expectedManifestBucketOwner = expectedManifestBucketOwner {
            try container.encode(expectedManifestBucketOwner, forKey: ClientRuntime.Key("ExpectedManifestBucketOwner"))
        }
        if let manifestEncryption = manifestEncryption {
            try container.encode(manifestEncryption, forKey: ClientRuntime.Key("ManifestEncryption"))
        }
        if let manifestFormat = manifestFormat {
            try container.encode(manifestFormat, forKey: ClientRuntime.Key("ManifestFormat"))
        }
        if let manifestPrefix = manifestPrefix {
            try container.encode(manifestPrefix, forKey: ClientRuntime.Key("ManifestPrefix"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let expectedManifestBucketOwnerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .expectedManifestBucketOwner)
        expectedManifestBucketOwner = expectedManifestBucketOwnerDecoded
        let bucketDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bucket)
        bucket = bucketDecoded
        let manifestPrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .manifestPrefix)
        manifestPrefix = manifestPrefixDecoded
        let manifestEncryptionDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.GeneratedManifestEncryption.self, forKey: .manifestEncryption)
        manifestEncryption = manifestEncryptionDecoded
        let manifestFormatDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.GeneratedManifestFormat.self, forKey: .manifestFormat)
        manifestFormat = manifestFormatDecoded
    }
}
