// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ControlClientTypes.AsyncResponseDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errorDetails = "ErrorDetails"
        case multiRegionAccessPointDetails = "MultiRegionAccessPointDetails"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let errorDetails = errorDetails {
            try container.encode(errorDetails, forKey: ClientRuntime.Key("ErrorDetails"))
        }
        if let multiRegionAccessPointDetails = multiRegionAccessPointDetails {
            try container.encode(multiRegionAccessPointDetails, forKey: ClientRuntime.Key("MultiRegionAccessPointDetails"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let multiRegionAccessPointDetailsDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.MultiRegionAccessPointsAsyncResponse.self, forKey: .multiRegionAccessPointDetails)
        multiRegionAccessPointDetails = multiRegionAccessPointDetailsDecoded
        let errorDetailsDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.AsyncErrorDetails.self, forKey: .errorDetails)
        errorDetails = errorDetailsDecoded
    }
}
