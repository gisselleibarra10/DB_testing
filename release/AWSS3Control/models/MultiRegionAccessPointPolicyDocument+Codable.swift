// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ControlClientTypes.MultiRegionAccessPointPolicyDocument: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case established = "Established"
        case proposed = "Proposed"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let established = established {
            try container.encode(established, forKey: ClientRuntime.Key("Established"))
        }
        if let proposed = proposed {
            try container.encode(proposed, forKey: ClientRuntime.Key("Proposed"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let establishedDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.EstablishedMultiRegionAccessPointPolicy.self, forKey: .established)
        established = establishedDecoded
        let proposedDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.ProposedMultiRegionAccessPointPolicy.self, forKey: .proposed)
        proposed = proposedDecoded
    }
}
