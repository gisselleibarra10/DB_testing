// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRegionalBucketsOutputResponseBody: Swift.Equatable {
    let regionalBucketList: [S3ControlClientTypes.RegionalBucket]?
    let nextToken: Swift.String?
}

extension ListRegionalBucketsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case regionalBucketList = "RegionalBucketList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.regionalBucketList) {
            struct KeyVal0{struct RegionalBucket{}}
            let regionalBucketListWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.RegionalBucket>.CodingKeys.self, forKey: .regionalBucketList)
            if let regionalBucketListWrappedContainer = regionalBucketListWrappedContainer {
                let regionalBucketListContainer = try regionalBucketListWrappedContainer.decodeIfPresent([S3ControlClientTypes.RegionalBucket].self, forKey: .member)
                var regionalBucketListBuffer:[S3ControlClientTypes.RegionalBucket]? = nil
                if let regionalBucketListContainer = regionalBucketListContainer {
                    regionalBucketListBuffer = [S3ControlClientTypes.RegionalBucket]()
                    for structureContainer0 in regionalBucketListContainer {
                        regionalBucketListBuffer?.append(structureContainer0)
                    }
                }
                regionalBucketList = regionalBucketListBuffer
            } else {
                regionalBucketList = []
            }
        } else {
            regionalBucketList = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
