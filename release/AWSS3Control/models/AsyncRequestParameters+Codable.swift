// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ControlClientTypes.AsyncRequestParameters: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createMultiRegionAccessPointRequest = "CreateMultiRegionAccessPointRequest"
        case deleteMultiRegionAccessPointRequest = "DeleteMultiRegionAccessPointRequest"
        case putMultiRegionAccessPointPolicyRequest = "PutMultiRegionAccessPointPolicyRequest"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let createMultiRegionAccessPointRequest = createMultiRegionAccessPointRequest {
            try container.encode(createMultiRegionAccessPointRequest, forKey: ClientRuntime.Key("CreateMultiRegionAccessPointRequest"))
        }
        if let deleteMultiRegionAccessPointRequest = deleteMultiRegionAccessPointRequest {
            try container.encode(deleteMultiRegionAccessPointRequest, forKey: ClientRuntime.Key("DeleteMultiRegionAccessPointRequest"))
        }
        if let putMultiRegionAccessPointPolicyRequest = putMultiRegionAccessPointPolicyRequest {
            try container.encode(putMultiRegionAccessPointPolicyRequest, forKey: ClientRuntime.Key("PutMultiRegionAccessPointPolicyRequest"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let createMultiRegionAccessPointRequestDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.CreateMultiRegionAccessPointInput.self, forKey: .createMultiRegionAccessPointRequest)
        createMultiRegionAccessPointRequest = createMultiRegionAccessPointRequestDecoded
        let deleteMultiRegionAccessPointRequestDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.DeleteMultiRegionAccessPointInput.self, forKey: .deleteMultiRegionAccessPointRequest)
        deleteMultiRegionAccessPointRequest = deleteMultiRegionAccessPointRequestDecoded
        let putMultiRegionAccessPointPolicyRequestDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.PutMultiRegionAccessPointPolicyInput.self, forKey: .putMultiRegionAccessPointPolicyRequest)
        putMultiRegionAccessPointPolicyRequest = putMultiRegionAccessPointPolicyRequestDecoded
    }
}
