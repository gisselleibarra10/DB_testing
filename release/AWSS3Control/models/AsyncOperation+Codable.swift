// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ControlClientTypes.AsyncOperation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case operation = "Operation"
        case requestParameters = "RequestParameters"
        case requestStatus = "RequestStatus"
        case requestTokenARN = "RequestTokenARN"
        case responseDetails = "ResponseDetails"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let creationTime = creationTime {
            try container.encode(ClientRuntime.TimestampWrapper(creationTime, format: .dateTime), forKey: ClientRuntime.Key("CreationTime"))
        }
        if let operation = operation {
            try container.encode(operation, forKey: ClientRuntime.Key("Operation"))
        }
        if let requestParameters = requestParameters {
            try container.encode(requestParameters, forKey: ClientRuntime.Key("RequestParameters"))
        }
        if let requestStatus = requestStatus {
            try container.encode(requestStatus, forKey: ClientRuntime.Key("RequestStatus"))
        }
        if let requestTokenARN = requestTokenARN {
            try container.encode(requestTokenARN, forKey: ClientRuntime.Key("RequestTokenARN"))
        }
        if let responseDetails = responseDetails {
            try container.encode(responseDetails, forKey: ClientRuntime.Key("ResponseDetails"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let creationTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .creationTime)
        var creationTimeBuffer:ClientRuntime.Date? = nil
        if let creationTimeDecoded = creationTimeDecoded {
            creationTimeBuffer = try ClientRuntime.TimestampWrapperDecoder.parseDateStringValue(creationTimeDecoded, format: .dateTime)
        }
        creationTime = creationTimeBuffer
        let operationDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.AsyncOperationName.self, forKey: .operation)
        operation = operationDecoded
        let requestTokenARNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .requestTokenARN)
        requestTokenARN = requestTokenARNDecoded
        let requestParametersDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.AsyncRequestParameters.self, forKey: .requestParameters)
        requestParameters = requestParametersDecoded
        let requestStatusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .requestStatus)
        requestStatus = requestStatusDecoded
        let responseDetailsDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.AsyncResponseDetails.self, forKey: .responseDetails)
        responseDetails = responseDetailsDecoded
    }
}
