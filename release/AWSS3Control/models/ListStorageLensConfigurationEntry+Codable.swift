// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ControlClientTypes.ListStorageLensConfigurationEntry: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case homeRegion = "HomeRegion"
        case id = "Id"
        case isEnabled = "IsEnabled"
        case storageLensArn = "StorageLensArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let homeRegion = homeRegion {
            try container.encode(homeRegion, forKey: ClientRuntime.Key("HomeRegion"))
        }
        if let id = id {
            try container.encode(id, forKey: ClientRuntime.Key("Id"))
        }
        if isEnabled != false {
            try container.encode(isEnabled, forKey: ClientRuntime.Key("IsEnabled"))
        }
        if let storageLensArn = storageLensArn {
            try container.encode(storageLensArn, forKey: ClientRuntime.Key("StorageLensArn"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let storageLensArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .storageLensArn)
        storageLensArn = storageLensArnDecoded
        let homeRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .homeRegion)
        homeRegion = homeRegionDecoded
        let isEnabledDecoded = try containerValues.decode(Swift.Bool.self, forKey: .isEnabled)
        isEnabled = isEnabledDecoded
    }
}
