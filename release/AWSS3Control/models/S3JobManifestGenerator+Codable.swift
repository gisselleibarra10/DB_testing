// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ControlClientTypes.S3JobManifestGenerator: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enableManifestOutput = "EnableManifestOutput"
        case expectedBucketOwner = "ExpectedBucketOwner"
        case filter = "Filter"
        case manifestOutputLocation = "ManifestOutputLocation"
        case sourceBucket = "SourceBucket"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: ClientRuntime.Key("xmlns"))
        }
        if enableManifestOutput != false {
            try container.encode(enableManifestOutput, forKey: ClientRuntime.Key("EnableManifestOutput"))
        }
        if let expectedBucketOwner = expectedBucketOwner {
            try container.encode(expectedBucketOwner, forKey: ClientRuntime.Key("ExpectedBucketOwner"))
        }
        if let filter = filter {
            try container.encode(filter, forKey: ClientRuntime.Key("Filter"))
        }
        if let manifestOutputLocation = manifestOutputLocation {
            try container.encode(manifestOutputLocation, forKey: ClientRuntime.Key("ManifestOutputLocation"))
        }
        if let sourceBucket = sourceBucket {
            try container.encode(sourceBucket, forKey: ClientRuntime.Key("SourceBucket"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let expectedBucketOwnerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .expectedBucketOwner)
        expectedBucketOwner = expectedBucketOwnerDecoded
        let sourceBucketDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceBucket)
        sourceBucket = sourceBucketDecoded
        let manifestOutputLocationDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.S3ManifestOutputLocation.self, forKey: .manifestOutputLocation)
        manifestOutputLocation = manifestOutputLocationDecoded
        let filterDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.JobManifestGeneratorFilter.self, forKey: .filter)
        filter = filterDecoded
        let enableManifestOutputDecoded = try containerValues.decode(Swift.Bool.self, forKey: .enableManifestOutput)
        enableManifestOutput = enableManifestOutputDecoded
    }
}
