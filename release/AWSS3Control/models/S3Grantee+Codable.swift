// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ControlClientTypes.S3Grantee: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case displayName = "DisplayName"
        case identifier = "Identifier"
        case typeIdentifier = "TypeIdentifier"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: ClientRuntime.Key("xmlns"))
        }
        if let displayName = displayName {
            try container.encode(displayName, forKey: ClientRuntime.Key("DisplayName"))
        }
        if let identifier = identifier {
            try container.encode(identifier, forKey: ClientRuntime.Key("Identifier"))
        }
        if let typeIdentifier = typeIdentifier {
            try container.encode(typeIdentifier, forKey: ClientRuntime.Key("TypeIdentifier"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeIdentifierDecoded = try containerValues.decodeIfPresent(S3ControlClientTypes.S3GranteeTypeIdentifier.self, forKey: .typeIdentifier)
        typeIdentifier = typeIdentifierDecoded
        let identifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identifier)
        identifier = identifierDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .displayName)
        displayName = displayNameDecoded
    }
}
