// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBucketOutputResponseBody: Swift.Equatable {
    let bucket: Swift.String?
    let publicAccessBlockEnabled: Swift.Bool
    let creationDate: ClientRuntime.Date?
}

extension GetBucketOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bucket = "Bucket"
        case creationDate = "CreationDate"
        case publicAccessBlockEnabled = "PublicAccessBlockEnabled"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bucketDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bucket)
        bucket = bucketDecoded
        let publicAccessBlockEnabledDecoded = try containerValues.decode(Swift.Bool.self, forKey: .publicAccessBlockEnabled)
        publicAccessBlockEnabled = publicAccessBlockEnabledDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .creationDate)
        var creationDateBuffer:ClientRuntime.Date? = nil
        if let creationDateDecoded = creationDateDecoded {
            creationDateBuffer = try ClientRuntime.TimestampWrapperDecoder.parseDateStringValue(creationDateDecoded, format: .dateTime)
        }
        creationDate = creationDateBuffer
    }
}
