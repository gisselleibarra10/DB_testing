// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListInferenceEventsInput: Swift.Equatable {
    /// The name of the inference scheduler for the inference events listed.
    /// This member is required.
    public var inferenceSchedulerName: Swift.String?
    /// Returns all the inference events with an end start time equal to or greater than less than the end time given
    /// This member is required.
    public var intervalEndTime: ClientRuntime.Date?
    /// Lookout for Equipment will return all the inference events with an end time equal to or greater than the start time given.
    /// This member is required.
    public var intervalStartTime: ClientRuntime.Date?
    /// Specifies the maximum number of inference events to list.
    public var maxResults: Swift.Int?
    /// An opaque pagination token indicating where to continue the listing of inference events.
    public var nextToken: Swift.String?

    public init (
        inferenceSchedulerName: Swift.String? = nil,
        intervalEndTime: ClientRuntime.Date? = nil,
        intervalStartTime: ClientRuntime.Date? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil
    )
    {
        self.inferenceSchedulerName = inferenceSchedulerName
        self.intervalEndTime = intervalEndTime
        self.intervalStartTime = intervalStartTime
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
