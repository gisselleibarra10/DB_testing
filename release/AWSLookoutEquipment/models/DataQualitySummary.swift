// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LookoutEquipmentClientTypes {
    /// DataQualitySummary gives aggregated statistics over all the sensors about a completed ingestion job. It primarily gives more information about statistics over different incorrect data like MissingCompleteSensorData, MissingSensorData, UnsupportedDateFormats, InsufficientSensorData, DuplicateTimeStamps.
    public struct DataQualitySummary: Swift.Equatable {
        /// Parameter that gives information about duplicate timestamps in the input data.
        /// This member is required.
        public var duplicateTimestamps: LookoutEquipmentClientTypes.DuplicateTimestamps?
        /// Parameter that gives information about insufficient data for sensors in the dataset. This includes information about those sensors that have complete data missing and those with a short date range.
        /// This member is required.
        public var insufficientSensorData: LookoutEquipmentClientTypes.InsufficientSensorData?
        /// Parameter that gives information about data that is invalid over all the sensors in the input data.
        /// This member is required.
        public var invalidSensorData: LookoutEquipmentClientTypes.InvalidSensorData?
        /// Parameter that gives information about data that is missing over all the sensors in the input data.
        /// This member is required.
        public var missingSensorData: LookoutEquipmentClientTypes.MissingSensorData?
        /// Parameter that gives information about unsupported timestamps in the input data.
        /// This member is required.
        public var unsupportedTimestamps: LookoutEquipmentClientTypes.UnsupportedTimestamps?

        public init (
            duplicateTimestamps: LookoutEquipmentClientTypes.DuplicateTimestamps? = nil,
            insufficientSensorData: LookoutEquipmentClientTypes.InsufficientSensorData? = nil,
            invalidSensorData: LookoutEquipmentClientTypes.InvalidSensorData? = nil,
            missingSensorData: LookoutEquipmentClientTypes.MissingSensorData? = nil,
            unsupportedTimestamps: LookoutEquipmentClientTypes.UnsupportedTimestamps? = nil
        )
        {
            self.duplicateTimestamps = duplicateTimestamps
            self.insufficientSensorData = insufficientSensorData
            self.invalidSensorData = invalidSensorData
            self.missingSensorData = missingSensorData
            self.unsupportedTimestamps = unsupportedTimestamps
        }
    }

}
