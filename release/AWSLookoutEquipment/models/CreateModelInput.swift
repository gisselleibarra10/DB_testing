// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateModelInput: Swift.Equatable {
    /// A unique identifier for the request. If you do not set the client request token, Amazon Lookout for Equipment generates one.
    /// This member is required.
    public var clientToken: Swift.String?
    /// The configuration is the TargetSamplingRate, which is the sampling rate of the data after post processing by Amazon Lookout for Equipment. For example, if you provide data that has been collected at a 1 second level and you want the system to resample the data at a 1 minute rate before training, the TargetSamplingRate is 1 minute. When providing a value for the TargetSamplingRate, you must attach the prefix "PT" to the rate you want. The value for a 1 second rate is therefore PT1S, the value for a 15 minute rate is PT15M, and the value for a 1 hour rate is PT1H
    public var dataPreProcessingConfiguration: LookoutEquipmentClientTypes.DataPreProcessingConfiguration?
    /// The name of the dataset for the ML model being created.
    /// This member is required.
    public var datasetName: Swift.String?
    /// The data schema for the ML model being created.
    public var datasetSchema: LookoutEquipmentClientTypes.DatasetSchema?
    /// Indicates the time reference in the dataset that should be used to end the subset of evaluation data for the ML model.
    public var evaluationDataEndTime: ClientRuntime.Date?
    /// Indicates the time reference in the dataset that should be used to begin the subset of evaluation data for the ML model.
    public var evaluationDataStartTime: ClientRuntime.Date?
    /// The input configuration for the labels being used for the ML model that's being created.
    public var labelsInputConfiguration: LookoutEquipmentClientTypes.LabelsInputConfiguration?
    /// The name for the ML model to be created.
    /// This member is required.
    public var modelName: Swift.String?
    /// Indicates that the asset associated with this sensor has been shut off. As long as this condition is met, Lookout for Equipment will not use data from this asset for training, evaluation, or inference.
    public var offCondition: Swift.String?
    /// The Amazon Resource Name (ARN) of a role with permission to access the data source being used to create the ML model.
    public var roleArn: Swift.String?
    /// Provides the identifier of the KMS key used to encrypt model data by Amazon Lookout for Equipment.
    public var serverSideKmsKeyId: Swift.String?
    /// Any tags associated with the ML model being created.
    public var tags: [LookoutEquipmentClientTypes.Tag]?
    /// Indicates the time reference in the dataset that should be used to end the subset of training data for the ML model.
    public var trainingDataEndTime: ClientRuntime.Date?
    /// Indicates the time reference in the dataset that should be used to begin the subset of training data for the ML model.
    public var trainingDataStartTime: ClientRuntime.Date?

    public init (
        clientToken: Swift.String? = nil,
        dataPreProcessingConfiguration: LookoutEquipmentClientTypes.DataPreProcessingConfiguration? = nil,
        datasetName: Swift.String? = nil,
        datasetSchema: LookoutEquipmentClientTypes.DatasetSchema? = nil,
        evaluationDataEndTime: ClientRuntime.Date? = nil,
        evaluationDataStartTime: ClientRuntime.Date? = nil,
        labelsInputConfiguration: LookoutEquipmentClientTypes.LabelsInputConfiguration? = nil,
        modelName: Swift.String? = nil,
        offCondition: Swift.String? = nil,
        roleArn: Swift.String? = nil,
        serverSideKmsKeyId: Swift.String? = nil,
        tags: [LookoutEquipmentClientTypes.Tag]? = nil,
        trainingDataEndTime: ClientRuntime.Date? = nil,
        trainingDataStartTime: ClientRuntime.Date? = nil
    )
    {
        self.clientToken = clientToken
        self.dataPreProcessingConfiguration = dataPreProcessingConfiguration
        self.datasetName = datasetName
        self.datasetSchema = datasetSchema
        self.evaluationDataEndTime = evaluationDataEndTime
        self.evaluationDataStartTime = evaluationDataStartTime
        self.labelsInputConfiguration = labelsInputConfiguration
        self.modelName = modelName
        self.offCondition = offCondition
        self.roleArn = roleArn
        self.serverSideKmsKeyId = serverSideKmsKeyId
        self.tags = tags
        self.trainingDataEndTime = trainingDataEndTime
        self.trainingDataStartTime = trainingDataStartTime
    }
}
