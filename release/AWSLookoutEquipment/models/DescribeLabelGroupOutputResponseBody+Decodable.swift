// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLabelGroupOutputResponseBody: Swift.Equatable {
    let labelGroupName: Swift.String?
    let labelGroupArn: Swift.String?
    let faultCodes: [Swift.String]?
    let createdAt: ClientRuntime.Date?
    let updatedAt: ClientRuntime.Date?
}

extension DescribeLabelGroupOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdAt = "CreatedAt"
        case faultCodes = "FaultCodes"
        case labelGroupArn = "LabelGroupArn"
        case labelGroupName = "LabelGroupName"
        case updatedAt = "UpdatedAt"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .labelGroupName)
        labelGroupName = labelGroupNameDecoded
        let labelGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .labelGroupArn)
        labelGroupArn = labelGroupArnDecoded
        let faultCodesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .faultCodes)
        var faultCodesDecoded0:[Swift.String]? = nil
        if let faultCodesContainer = faultCodesContainer {
            faultCodesDecoded0 = [Swift.String]()
            for string0 in faultCodesContainer {
                if let string0 = string0 {
                    faultCodesDecoded0?.append(string0)
                }
            }
        }
        faultCodes = faultCodesDecoded0
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let updatedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .updatedAt)
        updatedAt = updatedAtDecoded
    }
}
