// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListInferenceExecutionsInput: Swift.Equatable {
    /// The time reference in the inferenced dataset before which Amazon Lookout for Equipment stopped the inference execution.
    public var dataEndTimeBefore: ClientRuntime.Date?
    /// The time reference in the inferenced dataset after which Amazon Lookout for Equipment started the inference execution.
    public var dataStartTimeAfter: ClientRuntime.Date?
    /// The name of the inference scheduler for the inference execution listed.
    /// This member is required.
    public var inferenceSchedulerName: Swift.String?
    /// Specifies the maximum number of inference executions to list.
    public var maxResults: Swift.Int?
    /// An opaque pagination token indicating where to continue the listing of inference executions.
    public var nextToken: Swift.String?
    /// The status of the inference execution.
    public var status: LookoutEquipmentClientTypes.InferenceExecutionStatus?

    public init (
        dataEndTimeBefore: ClientRuntime.Date? = nil,
        dataStartTimeAfter: ClientRuntime.Date? = nil,
        inferenceSchedulerName: Swift.String? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        status: LookoutEquipmentClientTypes.InferenceExecutionStatus? = nil
    )
    {
        self.dataEndTimeBefore = dataEndTimeBefore
        self.dataStartTimeAfter = dataStartTimeAfter
        self.inferenceSchedulerName = inferenceSchedulerName
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.status = status
    }
}
