// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutEquipmentClientTypes.MissingSensorData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case affectedSensorCount = "AffectedSensorCount"
        case totalNumberOfMissingValues = "TotalNumberOfMissingValues"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let affectedSensorCount = self.affectedSensorCount {
            try encodeContainer.encode(affectedSensorCount, forKey: .affectedSensorCount)
        }
        if let totalNumberOfMissingValues = self.totalNumberOfMissingValues {
            try encodeContainer.encode(totalNumberOfMissingValues, forKey: .totalNumberOfMissingValues)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let affectedSensorCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .affectedSensorCount)
        affectedSensorCount = affectedSensorCountDecoded
        let totalNumberOfMissingValuesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalNumberOfMissingValues)
        totalNumberOfMissingValues = totalNumberOfMissingValuesDecoded
    }
}
