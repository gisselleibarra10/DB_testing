// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutEquipmentClientTypes.LabelGroupSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdAt = "CreatedAt"
        case labelGroupArn = "LabelGroupArn"
        case labelGroupName = "LabelGroupName"
        case updatedAt = "UpdatedAt"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdAt = self.createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let labelGroupArn = self.labelGroupArn {
            try encodeContainer.encode(labelGroupArn, forKey: .labelGroupArn)
        }
        if let labelGroupName = self.labelGroupName {
            try encodeContainer.encode(labelGroupName, forKey: .labelGroupName)
        }
        if let updatedAt = self.updatedAt {
            try encodeContainer.encode(updatedAt.timeIntervalSince1970, forKey: .updatedAt)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .labelGroupName)
        labelGroupName = labelGroupNameDecoded
        let labelGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .labelGroupArn)
        labelGroupArn = labelGroupArnDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let updatedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .updatedAt)
        updatedAt = updatedAtDecoded
    }
}
