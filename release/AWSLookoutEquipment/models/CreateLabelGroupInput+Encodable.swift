// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateLabelGroupInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case faultCodes = "FaultCodes"
        case labelGroupName = "LabelGroupName"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let faultCodes = faultCodes {
            var faultCodesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .faultCodes)
            for faultcodes0 in faultCodes {
                try faultCodesContainer.encode(faultcodes0)
            }
        }
        if let labelGroupName = self.labelGroupName {
            try encodeContainer.encode(labelGroupName, forKey: .labelGroupName)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
