// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLabelsInputBody: Swift.Equatable {
    let labelGroupName: Swift.String?
    let intervalStartTime: ClientRuntime.Date?
    let intervalEndTime: ClientRuntime.Date?
    let faultCode: Swift.String?
    let equipment: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension ListLabelsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case equipment = "Equipment"
        case faultCode = "FaultCode"
        case intervalEndTime = "IntervalEndTime"
        case intervalStartTime = "IntervalStartTime"
        case labelGroupName = "LabelGroupName"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .labelGroupName)
        labelGroupName = labelGroupNameDecoded
        let intervalStartTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .intervalStartTime)
        intervalStartTime = intervalStartTimeDecoded
        let intervalEndTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .intervalEndTime)
        intervalEndTime = intervalEndTimeDecoded
        let faultCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .faultCode)
        faultCode = faultCodeDecoded
        let equipmentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .equipment)
        equipment = equipmentDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
