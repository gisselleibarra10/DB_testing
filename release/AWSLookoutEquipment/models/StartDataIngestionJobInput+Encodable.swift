// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartDataIngestionJobInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case datasetName = "DatasetName"
        case ingestionInputConfiguration = "IngestionInputConfiguration"
        case roleArn = "RoleArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let datasetName = self.datasetName {
            try encodeContainer.encode(datasetName, forKey: .datasetName)
        }
        if let ingestionInputConfiguration = self.ingestionInputConfiguration {
            try encodeContainer.encode(ingestionInputConfiguration, forKey: .ingestionInputConfiguration)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }
}
