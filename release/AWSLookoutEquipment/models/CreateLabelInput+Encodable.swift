// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateLabelInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case endTime = "EndTime"
        case equipment = "Equipment"
        case faultCode = "FaultCode"
        case labelGroupName = "LabelGroupName"
        case notes = "Notes"
        case rating = "Rating"
        case startTime = "StartTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let endTime = self.endTime {
            try encodeContainer.encode(endTime.timeIntervalSince1970, forKey: .endTime)
        }
        if let equipment = self.equipment {
            try encodeContainer.encode(equipment, forKey: .equipment)
        }
        if let faultCode = self.faultCode {
            try encodeContainer.encode(faultCode, forKey: .faultCode)
        }
        if let labelGroupName = self.labelGroupName {
            try encodeContainer.encode(labelGroupName, forKey: .labelGroupName)
        }
        if let notes = self.notes {
            try encodeContainer.encode(notes, forKey: .notes)
        }
        if let rating = self.rating {
            try encodeContainer.encode(rating.rawValue, forKey: .rating)
        }
        if let startTime = self.startTime {
            try encodeContainer.encode(startTime.timeIntervalSince1970, forKey: .startTime)
        }
    }
}
