// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSensorStatisticsOutputResponseBody: Swift.Equatable {
    let sensorStatisticsSummaries: [LookoutEquipmentClientTypes.SensorStatisticsSummary]?
    let nextToken: Swift.String?
}

extension ListSensorStatisticsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case sensorStatisticsSummaries = "SensorStatisticsSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sensorStatisticsSummariesContainer = try containerValues.decodeIfPresent([LookoutEquipmentClientTypes.SensorStatisticsSummary?].self, forKey: .sensorStatisticsSummaries)
        var sensorStatisticsSummariesDecoded0:[LookoutEquipmentClientTypes.SensorStatisticsSummary]? = nil
        if let sensorStatisticsSummariesContainer = sensorStatisticsSummariesContainer {
            sensorStatisticsSummariesDecoded0 = [LookoutEquipmentClientTypes.SensorStatisticsSummary]()
            for structure0 in sensorStatisticsSummariesContainer {
                if let structure0 = structure0 {
                    sensorStatisticsSummariesDecoded0?.append(structure0)
                }
            }
        }
        sensorStatisticsSummaries = sensorStatisticsSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
