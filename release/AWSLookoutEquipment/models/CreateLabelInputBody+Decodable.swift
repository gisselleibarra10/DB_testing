// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLabelInputBody: Swift.Equatable {
    let labelGroupName: Swift.String?
    let startTime: ClientRuntime.Date?
    let endTime: ClientRuntime.Date?
    let rating: LookoutEquipmentClientTypes.LabelRating?
    let faultCode: Swift.String?
    let notes: Swift.String?
    let equipment: Swift.String?
    let clientToken: Swift.String?
}

extension CreateLabelInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case endTime = "EndTime"
        case equipment = "Equipment"
        case faultCode = "FaultCode"
        case labelGroupName = "LabelGroupName"
        case notes = "Notes"
        case rating = "Rating"
        case startTime = "StartTime"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .labelGroupName)
        labelGroupName = labelGroupNameDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let ratingDecoded = try containerValues.decodeIfPresent(LookoutEquipmentClientTypes.LabelRating.self, forKey: .rating)
        rating = ratingDecoded
        let faultCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .faultCode)
        faultCode = faultCodeDecoded
        let notesDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .notes)
        notes = notesDecoded
        let equipmentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .equipment)
        equipment = equipmentDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
