// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LookoutEquipmentClientTypes {
    public enum DataUploadFrequency: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case pt10m
        case pt15m
        case pt1h
        case pt30m
        case pt5m
        case sdkUnknown(Swift.String)

        public static var allCases: [DataUploadFrequency] {
            return [
                .pt10m,
                .pt15m,
                .pt1h,
                .pt30m,
                .pt5m,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .pt10m: return "PT10M"
            case .pt15m: return "PT15M"
            case .pt1h: return "PT1H"
            case .pt30m: return "PT30M"
            case .pt5m: return "PT5M"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = DataUploadFrequency(rawValue: rawValue) ?? DataUploadFrequency.sdkUnknown(rawValue)
        }
    }
}
