// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLabelGroupsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let labelGroupSummaries: [LookoutEquipmentClientTypes.LabelGroupSummary]?
}

extension ListLabelGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case labelGroupSummaries = "LabelGroupSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let labelGroupSummariesContainer = try containerValues.decodeIfPresent([LookoutEquipmentClientTypes.LabelGroupSummary?].self, forKey: .labelGroupSummaries)
        var labelGroupSummariesDecoded0:[LookoutEquipmentClientTypes.LabelGroupSummary]? = nil
        if let labelGroupSummariesContainer = labelGroupSummariesContainer {
            labelGroupSummariesDecoded0 = [LookoutEquipmentClientTypes.LabelGroupSummary]()
            for structure0 in labelGroupSummariesContainer {
                if let structure0 = structure0 {
                    labelGroupSummariesDecoded0?.append(structure0)
                }
            }
        }
        labelGroupSummaries = labelGroupSummariesDecoded0
    }
}
