// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutEquipmentClientTypes {
    /// Contains information about the specific inference execution, including input and output data configuration, inference scheduling information, status, and so on.
    public struct InferenceExecutionSummary: Swift.Equatable {
        ///
        public var customerResultObject: LookoutEquipmentClientTypes.S3Object?
        /// Indicates the time reference in the dataset at which the inference execution stopped.
        public var dataEndTime: ClientRuntime.Date?
        /// Specifies configuration information for the input data for the inference scheduler, including delimiter, format, and dataset location.
        public var dataInputConfiguration: LookoutEquipmentClientTypes.InferenceInputConfiguration?
        /// Specifies configuration information for the output results from for the inference execution, including the output Amazon S3 location.
        public var dataOutputConfiguration: LookoutEquipmentClientTypes.InferenceOutputConfiguration?
        /// Indicates the time reference in the dataset at which the inference execution began.
        public var dataStartTime: ClientRuntime.Date?
        /// Specifies the reason for failure when an inference execution has failed.
        public var failedReason: Swift.String?
        /// The Amazon Resource Name (ARN) of the inference scheduler being used for the inference execution.
        public var inferenceSchedulerArn: Swift.String?
        /// The name of the inference scheduler being used for the inference execution.
        public var inferenceSchedulerName: Swift.String?
        /// The Amazon Resource Name (ARN) of the ML model used for the inference execution.
        public var modelArn: Swift.String?
        /// The name of the ML model being used for the inference execution.
        public var modelName: Swift.String?
        /// Indicates the start time at which the inference scheduler began the specific inference execution.
        public var scheduledStartTime: ClientRuntime.Date?
        /// Indicates the status of the inference execution.
        public var status: LookoutEquipmentClientTypes.InferenceExecutionStatus?

        public init (
            customerResultObject: LookoutEquipmentClientTypes.S3Object? = nil,
            dataEndTime: ClientRuntime.Date? = nil,
            dataInputConfiguration: LookoutEquipmentClientTypes.InferenceInputConfiguration? = nil,
            dataOutputConfiguration: LookoutEquipmentClientTypes.InferenceOutputConfiguration? = nil,
            dataStartTime: ClientRuntime.Date? = nil,
            failedReason: Swift.String? = nil,
            inferenceSchedulerArn: Swift.String? = nil,
            inferenceSchedulerName: Swift.String? = nil,
            modelArn: Swift.String? = nil,
            modelName: Swift.String? = nil,
            scheduledStartTime: ClientRuntime.Date? = nil,
            status: LookoutEquipmentClientTypes.InferenceExecutionStatus? = nil
        )
        {
            self.customerResultObject = customerResultObject
            self.dataEndTime = dataEndTime
            self.dataInputConfiguration = dataInputConfiguration
            self.dataOutputConfiguration = dataOutputConfiguration
            self.dataStartTime = dataStartTime
            self.failedReason = failedReason
            self.inferenceSchedulerArn = inferenceSchedulerArn
            self.inferenceSchedulerName = inferenceSchedulerName
            self.modelArn = modelArn
            self.modelName = modelName
            self.scheduledStartTime = scheduledStartTime
            self.status = status
        }
    }

}
