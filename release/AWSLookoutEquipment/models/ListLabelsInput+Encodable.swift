// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListLabelsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case equipment = "Equipment"
        case faultCode = "FaultCode"
        case intervalEndTime = "IntervalEndTime"
        case intervalStartTime = "IntervalStartTime"
        case labelGroupName = "LabelGroupName"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let equipment = self.equipment {
            try encodeContainer.encode(equipment, forKey: .equipment)
        }
        if let faultCode = self.faultCode {
            try encodeContainer.encode(faultCode, forKey: .faultCode)
        }
        if let intervalEndTime = self.intervalEndTime {
            try encodeContainer.encode(intervalEndTime.timeIntervalSince1970, forKey: .intervalEndTime)
        }
        if let intervalStartTime = self.intervalStartTime {
            try encodeContainer.encode(intervalStartTime.timeIntervalSince1970, forKey: .intervalStartTime)
        }
        if let labelGroupName = self.labelGroupName {
            try encodeContainer.encode(labelGroupName, forKey: .labelGroupName)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }
}
