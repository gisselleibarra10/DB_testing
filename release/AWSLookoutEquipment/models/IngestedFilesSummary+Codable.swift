// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LookoutEquipmentClientTypes.IngestedFilesSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case discardedFiles = "DiscardedFiles"
        case ingestedNumberOfFiles = "IngestedNumberOfFiles"
        case totalNumberOfFiles = "TotalNumberOfFiles"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let discardedFiles = discardedFiles {
            var discardedFilesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .discardedFiles)
            for listofdiscardedfiles0 in discardedFiles {
                try discardedFilesContainer.encode(listofdiscardedfiles0)
            }
        }
        if let ingestedNumberOfFiles = self.ingestedNumberOfFiles {
            try encodeContainer.encode(ingestedNumberOfFiles, forKey: .ingestedNumberOfFiles)
        }
        if let totalNumberOfFiles = self.totalNumberOfFiles {
            try encodeContainer.encode(totalNumberOfFiles, forKey: .totalNumberOfFiles)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalNumberOfFilesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalNumberOfFiles)
        totalNumberOfFiles = totalNumberOfFilesDecoded
        let ingestedNumberOfFilesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .ingestedNumberOfFiles)
        ingestedNumberOfFiles = ingestedNumberOfFilesDecoded
        let discardedFilesContainer = try containerValues.decodeIfPresent([LookoutEquipmentClientTypes.S3Object?].self, forKey: .discardedFiles)
        var discardedFilesDecoded0:[LookoutEquipmentClientTypes.S3Object]? = nil
        if let discardedFilesContainer = discardedFilesContainer {
            discardedFilesDecoded0 = [LookoutEquipmentClientTypes.S3Object]()
            for structure0 in discardedFilesContainer {
                if let structure0 = structure0 {
                    discardedFilesDecoded0?.append(structure0)
                }
            }
        }
        discardedFiles = discardedFilesDecoded0
    }
}
