// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartDataIngestionJobInputBody: Swift.Equatable {
    let datasetName: Swift.String?
    let ingestionInputConfiguration: LookoutEquipmentClientTypes.IngestionInputConfiguration?
    let roleArn: Swift.String?
    let clientToken: Swift.String?
}

extension StartDataIngestionJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case datasetName = "DatasetName"
        case ingestionInputConfiguration = "IngestionInputConfiguration"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .datasetName)
        datasetName = datasetNameDecoded
        let ingestionInputConfigurationDecoded = try containerValues.decodeIfPresent(LookoutEquipmentClientTypes.IngestionInputConfiguration.self, forKey: .ingestionInputConfiguration)
        ingestionInputConfiguration = ingestionInputConfigurationDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
