// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WisdomClientTypes.AssistantAssociationSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assistantArn
        case assistantAssociationArn
        case assistantAssociationId
        case assistantId
        case associationData
        case associationType
        case tags
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let assistantArn = self.assistantArn {
            try encodeContainer.encode(assistantArn, forKey: .assistantArn)
        }
        if let assistantAssociationArn = self.assistantAssociationArn {
            try encodeContainer.encode(assistantAssociationArn, forKey: .assistantAssociationArn)
        }
        if let assistantAssociationId = self.assistantAssociationId {
            try encodeContainer.encode(assistantAssociationId, forKey: .assistantAssociationId)
        }
        if let assistantId = self.assistantId {
            try encodeContainer.encode(assistantId, forKey: .assistantId)
        }
        if let associationData = self.associationData {
            try encodeContainer.encode(associationData, forKey: .associationData)
        }
        if let associationType = self.associationType {
            try encodeContainer.encode(associationType.rawValue, forKey: .associationType)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, tags0) in tags {
                try tagsContainer.encode(tags0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assistantAssociationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assistantAssociationId)
        assistantAssociationId = assistantAssociationIdDecoded
        let assistantAssociationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assistantAssociationArn)
        assistantAssociationArn = assistantAssociationArnDecoded
        let assistantIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assistantId)
        assistantId = assistantIdDecoded
        let assistantArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assistantArn)
        assistantArn = assistantArnDecoded
        let associationTypeDecoded = try containerValues.decodeIfPresent(WisdomClientTypes.AssociationType.self, forKey: .associationType)
        associationType = associationTypeDecoded
        let associationDataDecoded = try containerValues.decodeIfPresent(WisdomClientTypes.AssistantAssociationOutputData.self, forKey: .associationData)
        associationData = associationDataDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
