// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssistantsOutputResponseBody: Swift.Equatable {
    let assistantSummaries: [WisdomClientTypes.AssistantSummary]?
    let nextToken: Swift.String?
}

extension ListAssistantsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assistantSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assistantSummariesContainer = try containerValues.decodeIfPresent([WisdomClientTypes.AssistantSummary?].self, forKey: .assistantSummaries)
        var assistantSummariesDecoded0:[WisdomClientTypes.AssistantSummary]? = nil
        if let assistantSummariesContainer = assistantSummariesContainer {
            assistantSummariesDecoded0 = [WisdomClientTypes.AssistantSummary]()
            for structure0 in assistantSummariesContainer {
                if let structure0 = structure0 {
                    assistantSummariesDecoded0?.append(structure0)
                }
            }
        }
        assistantSummaries = assistantSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
