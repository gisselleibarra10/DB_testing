// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutFeedbackOutputResponseBody: Swift.Equatable {
    let assistantId: Swift.String?
    let assistantArn: Swift.String?
    let targetId: Swift.String?
    let targetType: WisdomClientTypes.TargetType?
    let feedback: WisdomClientTypes.FeedbackData?
}

extension PutFeedbackOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assistantArn
        case assistantId
        case feedback
        case targetId
        case targetType
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assistantIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assistantId)
        assistantId = assistantIdDecoded
        let assistantArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .assistantArn)
        assistantArn = assistantArnDecoded
        let targetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetId)
        targetId = targetIdDecoded
        let targetTypeDecoded = try containerValues.decodeIfPresent(WisdomClientTypes.TargetType.self, forKey: .targetType)
        targetType = targetTypeDecoded
        let feedbackDecoded = try containerValues.decodeIfPresent(WisdomClientTypes.FeedbackData.self, forKey: .feedback)
        feedback = feedbackDecoded
    }
}
