// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateContentInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metadata
        case overrideLinkOutUri
        case removeOverrideLinkOutUri
        case revisionId
        case title
        case uploadId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let metadata = metadata {
            var metadataContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .metadata)
            for (dictKey0, contentmetadata0) in metadata {
                try metadataContainer.encode(contentmetadata0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let overrideLinkOutUri = self.overrideLinkOutUri {
            try encodeContainer.encode(overrideLinkOutUri, forKey: .overrideLinkOutUri)
        }
        if let removeOverrideLinkOutUri = self.removeOverrideLinkOutUri {
            try encodeContainer.encode(removeOverrideLinkOutUri, forKey: .removeOverrideLinkOutUri)
        }
        if let revisionId = self.revisionId {
            try encodeContainer.encode(revisionId, forKey: .revisionId)
        }
        if let title = self.title {
            try encodeContainer.encode(title, forKey: .title)
        }
        if let uploadId = self.uploadId {
            try encodeContainer.encode(uploadId, forKey: .uploadId)
        }
    }
}
