// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssistantAssociationsOutputResponseBody: Swift.Equatable {
    let assistantAssociationSummaries: [WisdomClientTypes.AssistantAssociationSummary]?
    let nextToken: Swift.String?
}

extension ListAssistantAssociationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assistantAssociationSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assistantAssociationSummariesContainer = try containerValues.decodeIfPresent([WisdomClientTypes.AssistantAssociationSummary?].self, forKey: .assistantAssociationSummaries)
        var assistantAssociationSummariesDecoded0:[WisdomClientTypes.AssistantAssociationSummary]? = nil
        if let assistantAssociationSummariesContainer = assistantAssociationSummariesContainer {
            assistantAssociationSummariesDecoded0 = [WisdomClientTypes.AssistantAssociationSummary]()
            for structure0 in assistantAssociationSummariesContainer {
                if let structure0 = structure0 {
                    assistantAssociationSummariesDecoded0?.append(structure0)
                }
            }
        }
        assistantAssociationSummaries = assistantAssociationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
