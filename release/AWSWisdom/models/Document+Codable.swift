// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WisdomClientTypes.Document: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contentReference
        case excerpt
        case title
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contentReference = self.contentReference {
            try encodeContainer.encode(contentReference, forKey: .contentReference)
        }
        if let excerpt = self.excerpt {
            try encodeContainer.encode(excerpt, forKey: .excerpt)
        }
        if let title = self.title {
            try encodeContainer.encode(title, forKey: .title)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contentReferenceDecoded = try containerValues.decodeIfPresent(WisdomClientTypes.ContentReference.self, forKey: .contentReference)
        contentReference = contentReferenceDecoded
        let titleDecoded = try containerValues.decodeIfPresent(WisdomClientTypes.DocumentText.self, forKey: .title)
        title = titleDecoded
        let excerptDecoded = try containerValues.decodeIfPresent(WisdomClientTypes.DocumentText.self, forKey: .excerpt)
        excerpt = excerptDecoded
    }
}
