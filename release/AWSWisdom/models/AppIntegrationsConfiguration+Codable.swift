// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WisdomClientTypes.AppIntegrationsConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appIntegrationArn
        case objectFields
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appIntegrationArn = self.appIntegrationArn {
            try encodeContainer.encode(appIntegrationArn, forKey: .appIntegrationArn)
        }
        if let objectFields = objectFields {
            var objectFieldsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .objectFields)
            for objectfieldslist0 in objectFields {
                try objectFieldsContainer.encode(objectfieldslist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appIntegrationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appIntegrationArn)
        appIntegrationArn = appIntegrationArnDecoded
        let objectFieldsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .objectFields)
        var objectFieldsDecoded0:[Swift.String]? = nil
        if let objectFieldsContainer = objectFieldsContainer {
            objectFieldsDecoded0 = [Swift.String]()
            for string0 in objectFieldsContainer {
                if let string0 = string0 {
                    objectFieldsDecoded0?.append(string0)
                }
            }
        }
        objectFields = objectFieldsDecoded0
    }
}
