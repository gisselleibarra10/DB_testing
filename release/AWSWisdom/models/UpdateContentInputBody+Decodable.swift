// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateContentInputBody: Swift.Equatable {
    let revisionId: Swift.String?
    let title: Swift.String?
    let overrideLinkOutUri: Swift.String?
    let removeOverrideLinkOutUri: Swift.Bool?
    let metadata: [Swift.String:Swift.String]?
    let uploadId: Swift.String?
}

extension UpdateContentInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metadata
        case overrideLinkOutUri
        case removeOverrideLinkOutUri
        case revisionId
        case title
        case uploadId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let revisionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .revisionId)
        revisionId = revisionIdDecoded
        let titleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .title)
        title = titleDecoded
        let overrideLinkOutUriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .overrideLinkOutUri)
        overrideLinkOutUri = overrideLinkOutUriDecoded
        let removeOverrideLinkOutUriDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .removeOverrideLinkOutUri)
        removeOverrideLinkOutUri = removeOverrideLinkOutUriDecoded
        let metadataContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .metadata)
        var metadataDecoded0: [Swift.String:Swift.String]? = nil
        if let metadataContainer = metadataContainer {
            metadataDecoded0 = [Swift.String:Swift.String]()
            for (key0, nonemptystring0) in metadataContainer {
                if let nonemptystring0 = nonemptystring0 {
                    metadataDecoded0?[key0] = nonemptystring0
                }
            }
        }
        metadata = metadataDecoded0
        let uploadIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .uploadId)
        uploadId = uploadIdDecoded
    }
}
