// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRecommendationsOutputResponseBody: Swift.Equatable {
    let recommendations: [WisdomClientTypes.RecommendationData]?
    let triggers: [WisdomClientTypes.RecommendationTrigger]?
}

extension GetRecommendationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case recommendations
        case triggers
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recommendationsContainer = try containerValues.decodeIfPresent([WisdomClientTypes.RecommendationData?].self, forKey: .recommendations)
        var recommendationsDecoded0:[WisdomClientTypes.RecommendationData]? = nil
        if let recommendationsContainer = recommendationsContainer {
            recommendationsDecoded0 = [WisdomClientTypes.RecommendationData]()
            for structure0 in recommendationsContainer {
                if let structure0 = structure0 {
                    recommendationsDecoded0?.append(structure0)
                }
            }
        }
        recommendations = recommendationsDecoded0
        let triggersContainer = try containerValues.decodeIfPresent([WisdomClientTypes.RecommendationTrigger?].self, forKey: .triggers)
        var triggersDecoded0:[WisdomClientTypes.RecommendationTrigger]? = nil
        if let triggersContainer = triggersContainer {
            triggersDecoded0 = [WisdomClientTypes.RecommendationTrigger]()
            for structure0 in triggersContainer {
                if let structure0 = structure0 {
                    triggersDecoded0?.append(structure0)
                }
            }
        }
        triggers = triggersDecoded0
    }
}
