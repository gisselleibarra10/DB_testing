// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutGroupConfigurationInputBody: Swift.Equatable {
    let group: Swift.String?
    let configuration: [ResourceGroupsClientTypes.GroupConfigurationItem]?
}

extension PutGroupConfigurationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configuration = "Configuration"
        case group = "Group"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .group)
        group = groupDecoded
        let configurationContainer = try containerValues.decodeIfPresent([ResourceGroupsClientTypes.GroupConfigurationItem?].self, forKey: .configuration)
        var configurationDecoded0:[ResourceGroupsClientTypes.GroupConfigurationItem]? = nil
        if let configurationContainer = configurationContainer {
            configurationDecoded0 = [ResourceGroupsClientTypes.GroupConfigurationItem]()
            for structure0 in configurationContainer {
                if let structure0 = structure0 {
                    configurationDecoded0?.append(structure0)
                }
            }
        }
        configuration = configurationDecoded0
    }
}
