// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateGroupInput: Swift.Equatable {
    /// A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. A configuration is an array of [GroupConfigurationItem] elements. For details about the syntax of service configurations, see [Service configurations for resource groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html). A resource group can contain either a Configuration or a ResourceQuery, but not both.
    public var configuration: [ResourceGroupsClientTypes.GroupConfigurationItem]?
    /// The description of the resource group. Descriptions can consist of letters, numbers, hyphens, underscores, periods, and spaces.
    public var description: Swift.String?
    /// The name of the group, which is the identifier of the group in other operations. You can't change the name of a resource group after you create it. A resource group name can consist of letters, numbers, hyphens, periods, and underscores. The name cannot start with AWS or aws; these are reserved. A resource group name must be unique within each AWS Region in your AWS account.
    /// This member is required.
    public var name: Swift.String?
    /// The resource query that determines which AWS resources are members of this group. For more information about resource queries, see [Create a tag-based group in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag). A resource group can contain either a ResourceQuery or a Configuration, but not both.
    public var resourceQuery: ResourceGroupsClientTypes.ResourceQuery?
    /// The tags to add to the group. A tag is key-value pair string.
    public var tags: [Swift.String:Swift.String]?

    public init (
        configuration: [ResourceGroupsClientTypes.GroupConfigurationItem]? = nil,
        description: Swift.String? = nil,
        name: Swift.String? = nil,
        resourceQuery: ResourceGroupsClientTypes.ResourceQuery? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.configuration = configuration
        self.description = description
        self.name = name
        self.resourceQuery = resourceQuery
        self.tags = tags
    }
}
