// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGroupResourcesOutputResponseBody: Swift.Equatable {
    let resources: [ResourceGroupsClientTypes.ListGroupResourcesItem]?
    let resourceIdentifiers: [ResourceGroupsClientTypes.ResourceIdentifier]?
    let nextToken: Swift.String?
    let queryErrors: [ResourceGroupsClientTypes.QueryError]?
}

extension ListGroupResourcesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case queryErrors = "QueryErrors"
        case resourceIdentifiers = "ResourceIdentifiers"
        case resources = "Resources"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourcesContainer = try containerValues.decodeIfPresent([ResourceGroupsClientTypes.ListGroupResourcesItem?].self, forKey: .resources)
        var resourcesDecoded0:[ResourceGroupsClientTypes.ListGroupResourcesItem]? = nil
        if let resourcesContainer = resourcesContainer {
            resourcesDecoded0 = [ResourceGroupsClientTypes.ListGroupResourcesItem]()
            for structure0 in resourcesContainer {
                if let structure0 = structure0 {
                    resourcesDecoded0?.append(structure0)
                }
            }
        }
        resources = resourcesDecoded0
        let resourceIdentifiersContainer = try containerValues.decodeIfPresent([ResourceGroupsClientTypes.ResourceIdentifier?].self, forKey: .resourceIdentifiers)
        var resourceIdentifiersDecoded0:[ResourceGroupsClientTypes.ResourceIdentifier]? = nil
        if let resourceIdentifiersContainer = resourceIdentifiersContainer {
            resourceIdentifiersDecoded0 = [ResourceGroupsClientTypes.ResourceIdentifier]()
            for structure0 in resourceIdentifiersContainer {
                if let structure0 = structure0 {
                    resourceIdentifiersDecoded0?.append(structure0)
                }
            }
        }
        resourceIdentifiers = resourceIdentifiersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let queryErrorsContainer = try containerValues.decodeIfPresent([ResourceGroupsClientTypes.QueryError?].self, forKey: .queryErrors)
        var queryErrorsDecoded0:[ResourceGroupsClientTypes.QueryError]? = nil
        if let queryErrorsContainer = queryErrorsContainer {
            queryErrorsDecoded0 = [ResourceGroupsClientTypes.QueryError]()
            for structure0 in queryErrorsContainer {
                if let structure0 = structure0 {
                    queryErrorsDecoded0?.append(structure0)
                }
            }
        }
        queryErrors = queryErrorsDecoded0
    }
}
