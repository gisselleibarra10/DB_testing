// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RamClientTypes {
    public enum ResourceStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case available
        case limitExceeded
        case pending
        case unavailable
        case zonalResourceInaccessible
        case sdkUnknown(Swift.String)

        public static var allCases: [ResourceStatus] {
            return [
                .available,
                .limitExceeded,
                .pending,
                .unavailable,
                .zonalResourceInaccessible,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .available: return "AVAILABLE"
            case .limitExceeded: return "LIMIT_EXCEEDED"
            case .pending: return "PENDING"
            case .unavailable: return "UNAVAILABLE"
            case .zonalResourceInaccessible: return "ZONAL_RESOURCE_INACCESSIBLE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ResourceStatus(rawValue: rawValue) ?? ResourceStatus.sdkUnknown(rawValue)
        }
    }
}
