// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPrincipalsOutputResponseBody: Swift.Equatable {
    let principals: [RamClientTypes.Principal]?
    let nextToken: Swift.String?
}

extension ListPrincipalsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case principals
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let principalsContainer = try containerValues.decodeIfPresent([RamClientTypes.Principal?].self, forKey: .principals)
        var principalsDecoded0:[RamClientTypes.Principal]? = nil
        if let principalsContainer = principalsContainer {
            principalsDecoded0 = [RamClientTypes.Principal]()
            for structure0 in principalsContainer {
                if let structure0 = structure0 {
                    principalsDecoded0?.append(structure0)
                }
            }
        }
        principals = principalsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
