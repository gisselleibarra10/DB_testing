// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RamClientTypes.ServiceNameAndResourceType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceRegionScope
        case resourceType
        case serviceName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourceRegionScope = self.resourceRegionScope {
            try encodeContainer.encode(resourceRegionScope.rawValue, forKey: .resourceRegionScope)
        }
        if let resourceType = self.resourceType {
            try encodeContainer.encode(resourceType, forKey: .resourceType)
        }
        if let serviceName = self.serviceName {
            try encodeContainer.encode(serviceName, forKey: .serviceName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let serviceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serviceName)
        serviceName = serviceNameDecoded
        let resourceRegionScopeDecoded = try containerValues.decodeIfPresent(RamClientTypes.ResourceRegionScope.self, forKey: .resourceRegionScope)
        resourceRegionScope = resourceRegionScopeDecoded
    }
}
