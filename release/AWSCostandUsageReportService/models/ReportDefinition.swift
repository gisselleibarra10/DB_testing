// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CostAndUsageReportClientTypes {
    /// The definition of AWS Cost and Usage Report. You can specify the report name, time unit, report format, compression format, S3 bucket, additional artifacts, and schema elements in the definition.
    public struct ReportDefinition: Swift.Equatable {
        /// A list of manifests that you want Amazon Web Services to create for this report.
        public var additionalArtifacts: [CostAndUsageReportClientTypes.AdditionalArtifact]?
        /// A list of strings that indicate additional content that Amazon Web Services includes in the report, such as individual resource IDs.
        /// This member is required.
        public var additionalSchemaElements: [CostAndUsageReportClientTypes.SchemaElement]?
        /// The Amazon resource name of the billing view. You can get this value by using the billing view service public APIs.
        public var billingViewArn: Swift.String?
        /// The compression format that AWS uses for the report.
        /// This member is required.
        public var compression: CostAndUsageReportClientTypes.CompressionFormat?
        /// The format that AWS saves the report in.
        /// This member is required.
        public var format: CostAndUsageReportClientTypes.ReportFormat?
        /// Whether you want Amazon Web Services to update your reports after they have been finalized if Amazon Web Services detects charges related to previous months. These charges can include refunds, credits, or support fees.
        public var refreshClosedReports: Swift.Bool?
        /// The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces.
        /// This member is required.
        public var reportName: Swift.String?
        /// Whether you want Amazon Web Services to overwrite the previous version of each report or to deliver the report in addition to the previous versions.
        public var reportVersioning: CostAndUsageReportClientTypes.ReportVersioning?
        /// The S3 bucket where AWS delivers the report.
        /// This member is required.
        public var s3Bucket: Swift.String?
        /// The prefix that AWS adds to the report name when AWS delivers the report. Your prefix can't include spaces.
        /// This member is required.
        public var s3Prefix: Swift.String?
        /// The region of the S3 bucket that AWS delivers the report into.
        /// This member is required.
        public var s3Region: CostAndUsageReportClientTypes.AWSRegion?
        /// The length of time covered by the report.
        /// This member is required.
        public var timeUnit: CostAndUsageReportClientTypes.TimeUnit?

        public init (
            additionalArtifacts: [CostAndUsageReportClientTypes.AdditionalArtifact]? = nil,
            additionalSchemaElements: [CostAndUsageReportClientTypes.SchemaElement]? = nil,
            billingViewArn: Swift.String? = nil,
            compression: CostAndUsageReportClientTypes.CompressionFormat? = nil,
            format: CostAndUsageReportClientTypes.ReportFormat? = nil,
            refreshClosedReports: Swift.Bool? = nil,
            reportName: Swift.String? = nil,
            reportVersioning: CostAndUsageReportClientTypes.ReportVersioning? = nil,
            s3Bucket: Swift.String? = nil,
            s3Prefix: Swift.String? = nil,
            s3Region: CostAndUsageReportClientTypes.AWSRegion? = nil,
            timeUnit: CostAndUsageReportClientTypes.TimeUnit? = nil
        )
        {
            self.additionalArtifacts = additionalArtifacts
            self.additionalSchemaElements = additionalSchemaElements
            self.billingViewArn = billingViewArn
            self.compression = compression
            self.format = format
            self.refreshClosedReports = refreshClosedReports
            self.reportName = reportName
            self.reportVersioning = reportVersioning
            self.s3Bucket = s3Bucket
            self.s3Prefix = s3Prefix
            self.s3Region = s3Region
            self.timeUnit = timeUnit
        }
    }

}
