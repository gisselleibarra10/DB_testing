// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AnalyzeDocumentInputBody: Swift.Equatable {
    let document: TextractClientTypes.Document?
    let featureTypes: [TextractClientTypes.FeatureType]?
    let humanLoopConfig: TextractClientTypes.HumanLoopConfig?
    let queriesConfig: TextractClientTypes.QueriesConfig?
}

extension AnalyzeDocumentInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case document = "Document"
        case featureTypes = "FeatureTypes"
        case humanLoopConfig = "HumanLoopConfig"
        case queriesConfig = "QueriesConfig"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentDecoded = try containerValues.decodeIfPresent(TextractClientTypes.Document.self, forKey: .document)
        document = documentDecoded
        let featureTypesContainer = try containerValues.decodeIfPresent([TextractClientTypes.FeatureType?].self, forKey: .featureTypes)
        var featureTypesDecoded0:[TextractClientTypes.FeatureType]? = nil
        if let featureTypesContainer = featureTypesContainer {
            featureTypesDecoded0 = [TextractClientTypes.FeatureType]()
            for string0 in featureTypesContainer {
                if let string0 = string0 {
                    featureTypesDecoded0?.append(string0)
                }
            }
        }
        featureTypes = featureTypesDecoded0
        let humanLoopConfigDecoded = try containerValues.decodeIfPresent(TextractClientTypes.HumanLoopConfig.self, forKey: .humanLoopConfig)
        humanLoopConfig = humanLoopConfigDecoded
        let queriesConfigDecoded = try containerValues.decodeIfPresent(TextractClientTypes.QueriesConfig.self, forKey: .queriesConfig)
        queriesConfig = queriesConfigDecoded
    }
}
