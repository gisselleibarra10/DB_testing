// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TextractClientTypes.QueriesConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case queries = "Queries"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let queries = queries {
            var queriesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .queries)
            for queries0 in queries {
                try queriesContainer.encode(queries0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queriesContainer = try containerValues.decodeIfPresent([TextractClientTypes.Query?].self, forKey: .queries)
        var queriesDecoded0:[TextractClientTypes.Query]? = nil
        if let queriesContainer = queriesContainer {
            queriesDecoded0 = [TextractClientTypes.Query]()
            for structure0 in queriesContainer {
                if let structure0 = structure0 {
                    queriesDecoded0?.append(structure0)
                }
            }
        }
        queries = queriesDecoded0
    }
}
