// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TextractClientTypes.Warning: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errorCode = "ErrorCode"
        case pages = "Pages"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errorCode = self.errorCode {
            try encodeContainer.encode(errorCode, forKey: .errorCode)
        }
        if let pages = pages {
            var pagesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .pages)
            for pages0 in pages {
                try pagesContainer.encode(pages0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let errorCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorCode)
        errorCode = errorCodeDecoded
        let pagesContainer = try containerValues.decodeIfPresent([Swift.Int?].self, forKey: .pages)
        var pagesDecoded0:[Swift.Int]? = nil
        if let pagesContainer = pagesContainer {
            pagesDecoded0 = [Swift.Int]()
            for integer0 in pagesContainer {
                if let integer0 = integer0 {
                    pagesDecoded0?.append(integer0)
                }
            }
        }
        pages = pagesDecoded0
    }
}
