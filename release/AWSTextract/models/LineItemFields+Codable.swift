// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TextractClientTypes.LineItemFields: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lineItemExpenseFields = "LineItemExpenseFields"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lineItemExpenseFields = lineItemExpenseFields {
            var lineItemExpenseFieldsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .lineItemExpenseFields)
            for expensefieldlist0 in lineItemExpenseFields {
                try lineItemExpenseFieldsContainer.encode(expensefieldlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lineItemExpenseFieldsContainer = try containerValues.decodeIfPresent([TextractClientTypes.ExpenseField?].self, forKey: .lineItemExpenseFields)
        var lineItemExpenseFieldsDecoded0:[TextractClientTypes.ExpenseField]? = nil
        if let lineItemExpenseFieldsContainer = lineItemExpenseFieldsContainer {
            lineItemExpenseFieldsDecoded0 = [TextractClientTypes.ExpenseField]()
            for structure0 in lineItemExpenseFieldsContainer {
                if let structure0 = structure0 {
                    lineItemExpenseFieldsDecoded0?.append(structure0)
                }
            }
        }
        lineItemExpenseFields = lineItemExpenseFieldsDecoded0
    }
}
