// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartExpenseAnalysisInput: Swift.Equatable {
    /// The idempotent token that's used to identify the start request. If you use the same token with multiple StartDocumentTextDetection requests, the same JobId is returned. Use ClientRequestToken to prevent the same job from being accidentally started more than once. For more information, see [Calling Amazon Textract Asynchronous Operations](https://docs.aws.amazon.com/textract/latest/dg/api-async.html)
    public var clientRequestToken: Swift.String?
    /// The location of the document to be processed.
    /// This member is required.
    public var documentLocation: TextractClientTypes.DocumentLocation?
    /// An identifier you specify that's included in the completion notification published to the Amazon SNS topic. For example, you can use JobTag to identify the type of document that the completion notification corresponds to (such as a tax form or a receipt).
    public var jobTag: Swift.String?
    /// The KMS key used to encrypt the inference results. This can be in either Key ID or Key Alias format. When a KMS key is provided, the KMS key will be used for server-side encryption of the objects in the customer bucket. When this parameter is not enabled, the result will be encrypted server side,using SSE-S3.
    public var kMSKeyId: Swift.String?
    /// The Amazon SNS topic ARN that you want Amazon Textract to publish the completion status of the operation to.
    public var notificationChannel: TextractClientTypes.NotificationChannel?
    /// Sets if the output will go to a customer defined bucket. By default, Amazon Textract will save the results internally to be accessed by the GetExpenseAnalysis operation.
    public var outputConfig: TextractClientTypes.OutputConfig?

    public init (
        clientRequestToken: Swift.String? = nil,
        documentLocation: TextractClientTypes.DocumentLocation? = nil,
        jobTag: Swift.String? = nil,
        kMSKeyId: Swift.String? = nil,
        notificationChannel: TextractClientTypes.NotificationChannel? = nil,
        outputConfig: TextractClientTypes.OutputConfig? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.documentLocation = documentLocation
        self.jobTag = jobTag
        self.kMSKeyId = kMSKeyId
        self.notificationChannel = notificationChannel
        self.outputConfig = outputConfig
    }
}
