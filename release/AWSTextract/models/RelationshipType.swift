// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension TextractClientTypes {
    public enum RelationshipType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case answer
        case child
        case complexFeatures
        case mergedCell
        case title
        case value
        case sdkUnknown(Swift.String)

        public static var allCases: [RelationshipType] {
            return [
                .answer,
                .child,
                .complexFeatures,
                .mergedCell,
                .title,
                .value,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .answer: return "ANSWER"
            case .child: return "CHILD"
            case .complexFeatures: return "COMPLEX_FEATURES"
            case .mergedCell: return "MERGED_CELL"
            case .title: return "TITLE"
            case .value: return "VALUE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = RelationshipType(rawValue: rawValue) ?? RelationshipType.sdkUnknown(rawValue)
        }
    }
}
