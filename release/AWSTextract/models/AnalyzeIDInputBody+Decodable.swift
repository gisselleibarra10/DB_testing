// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AnalyzeIDInputBody: Swift.Equatable {
    let documentPages: [TextractClientTypes.Document]?
}

extension AnalyzeIDInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case documentPages = "DocumentPages"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentPagesContainer = try containerValues.decodeIfPresent([TextractClientTypes.Document?].self, forKey: .documentPages)
        var documentPagesDecoded0:[TextractClientTypes.Document]? = nil
        if let documentPagesContainer = documentPagesContainer {
            documentPagesDecoded0 = [TextractClientTypes.Document]()
            for structure0 in documentPagesContainer {
                if let structure0 = structure0 {
                    documentPagesDecoded0?.append(structure0)
                }
            }
        }
        documentPages = documentPagesDecoded0
    }
}
