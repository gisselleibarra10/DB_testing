// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetExpenseAnalysisOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: GetExpenseAnalysisOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.analyzeExpenseModelVersion = output.analyzeExpenseModelVersion
            self.documentMetadata = output.documentMetadata
            self.expenseDocuments = output.expenseDocuments
            self.jobStatus = output.jobStatus
            self.nextToken = output.nextToken
            self.statusMessage = output.statusMessage
            self.warnings = output.warnings
        } else {
            self.analyzeExpenseModelVersion = nil
            self.documentMetadata = nil
            self.expenseDocuments = nil
            self.jobStatus = nil
            self.nextToken = nil
            self.statusMessage = nil
            self.warnings = nil
        }
    }
}
