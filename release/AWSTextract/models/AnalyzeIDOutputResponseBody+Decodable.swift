// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AnalyzeIDOutputResponseBody: Swift.Equatable {
    let identityDocuments: [TextractClientTypes.IdentityDocument]?
    let documentMetadata: TextractClientTypes.DocumentMetadata?
    let analyzeIDModelVersion: Swift.String?
}

extension AnalyzeIDOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case analyzeIDModelVersion = "AnalyzeIDModelVersion"
        case documentMetadata = "DocumentMetadata"
        case identityDocuments = "IdentityDocuments"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityDocumentsContainer = try containerValues.decodeIfPresent([TextractClientTypes.IdentityDocument?].self, forKey: .identityDocuments)
        var identityDocumentsDecoded0:[TextractClientTypes.IdentityDocument]? = nil
        if let identityDocumentsContainer = identityDocumentsContainer {
            identityDocumentsDecoded0 = [TextractClientTypes.IdentityDocument]()
            for structure0 in identityDocumentsContainer {
                if let structure0 = structure0 {
                    identityDocumentsDecoded0?.append(structure0)
                }
            }
        }
        identityDocuments = identityDocumentsDecoded0
        let documentMetadataDecoded = try containerValues.decodeIfPresent(TextractClientTypes.DocumentMetadata.self, forKey: .documentMetadata)
        documentMetadata = documentMetadataDecoded
        let analyzeIDModelVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .analyzeIDModelVersion)
        analyzeIDModelVersion = analyzeIDModelVersionDecoded
    }
}
