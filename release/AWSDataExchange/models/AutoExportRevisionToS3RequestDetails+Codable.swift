// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataExchangeClientTypes.AutoExportRevisionToS3RequestDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case encryption = "Encryption"
        case revisionDestination = "RevisionDestination"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let encryption = self.encryption {
            try encodeContainer.encode(encryption, forKey: .encryption)
        }
        if let revisionDestination = self.revisionDestination {
            try encodeContainer.encode(revisionDestination, forKey: .revisionDestination)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let encryptionDecoded = try containerValues.decodeIfPresent(DataExchangeClientTypes.ExportServerSideEncryption.self, forKey: .encryption)
        encryption = encryptionDecoded
        let revisionDestinationDecoded = try containerValues.decodeIfPresent(DataExchangeClientTypes.AutoExportRevisionDestinationEntry.self, forKey: .revisionDestination)
        revisionDestination = revisionDestinationDecoded
    }
}
