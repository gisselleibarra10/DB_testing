// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DataExchangeClientTypes {
    public enum LimitName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case amazonApiGatewayApiAssetsPerRevision
        case amazonRedshiftDatashareAssetsPerImportJobFromRedshift
        case amazonRedshiftDatashareAssetsPerRevision
        case assetPerExportJobFromAmazonS3
        case assetSizeInGb
        case assetsPerImportJobFromAmazonS3
        case assetsPerRevision
        case autoExportEventActionsPerDataSet
        case concurrentInProgressJobsToExportAssetsToAmazonS3
        case concurrentInProgressJobsToExportAssetsToASignedUrl
        case concurrentInProgressJobsToExportRevisionsToAmazonS3
        case concurrentInProgressJobsToImportAssetsFromAmazonRedshiftDatashares
        case concurrentInProgressJobsToImportAssetsFromAmazonS3
        case concurrentInProgressJobsToImportAssetsFromASignedUrl
        case concurrentInProgressJobsToImportAssetsFromAnApiGatewayApi
        case dataSetsPerAccount
        case dataSetsPerProduct
        case eventActionsPerAccount
        case productsPerAccount
        case revisionsPerAmazonApiGatewayApiDataSet
        case revisionsPerAmazonRedshiftDatashareDataSet
        case revisionsPerDataSet
        case sdkUnknown(Swift.String)

        public static var allCases: [LimitName] {
            return [
                .amazonApiGatewayApiAssetsPerRevision,
                .amazonRedshiftDatashareAssetsPerImportJobFromRedshift,
                .amazonRedshiftDatashareAssetsPerRevision,
                .assetPerExportJobFromAmazonS3,
                .assetSizeInGb,
                .assetsPerImportJobFromAmazonS3,
                .assetsPerRevision,
                .autoExportEventActionsPerDataSet,
                .concurrentInProgressJobsToExportAssetsToAmazonS3,
                .concurrentInProgressJobsToExportAssetsToASignedUrl,
                .concurrentInProgressJobsToExportRevisionsToAmazonS3,
                .concurrentInProgressJobsToImportAssetsFromAmazonRedshiftDatashares,
                .concurrentInProgressJobsToImportAssetsFromAmazonS3,
                .concurrentInProgressJobsToImportAssetsFromASignedUrl,
                .concurrentInProgressJobsToImportAssetsFromAnApiGatewayApi,
                .dataSetsPerAccount,
                .dataSetsPerProduct,
                .eventActionsPerAccount,
                .productsPerAccount,
                .revisionsPerAmazonApiGatewayApiDataSet,
                .revisionsPerAmazonRedshiftDatashareDataSet,
                .revisionsPerDataSet,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .amazonApiGatewayApiAssetsPerRevision: return "Amazon API Gateway API assets per revision"
            case .amazonRedshiftDatashareAssetsPerImportJobFromRedshift: return "Amazon Redshift datashare assets per import job from Redshift"
            case .amazonRedshiftDatashareAssetsPerRevision: return "Amazon Redshift datashare assets per revision"
            case .assetPerExportJobFromAmazonS3: return "Asset per export job from Amazon S3"
            case .assetSizeInGb: return "Asset size in GB"
            case .assetsPerImportJobFromAmazonS3: return "Assets per import job from Amazon S3"
            case .assetsPerRevision: return "Assets per revision"
            case .autoExportEventActionsPerDataSet: return "Auto export event actions per data set"
            case .concurrentInProgressJobsToExportAssetsToAmazonS3: return "Concurrent in progress jobs to export assets to Amazon S3"
            case .concurrentInProgressJobsToExportAssetsToASignedUrl: return "Concurrent in progress jobs to export assets to a signed URL"
            case .concurrentInProgressJobsToExportRevisionsToAmazonS3: return "Concurrent in progress jobs to export revisions to Amazon S3"
            case .concurrentInProgressJobsToImportAssetsFromAmazonRedshiftDatashares: return "Concurrent in progress jobs to import assets from Amazon Redshift datashares"
            case .concurrentInProgressJobsToImportAssetsFromAmazonS3: return "Concurrent in progress jobs to import assets from Amazon S3"
            case .concurrentInProgressJobsToImportAssetsFromASignedUrl: return "Concurrent in progress jobs to import assets from a signed URL"
            case .concurrentInProgressJobsToImportAssetsFromAnApiGatewayApi: return "Concurrent in progress jobs to import assets from an API Gateway API"
            case .dataSetsPerAccount: return "Data sets per account"
            case .dataSetsPerProduct: return "Data sets per product"
            case .eventActionsPerAccount: return "Event actions per account"
            case .productsPerAccount: return "Products per account"
            case .revisionsPerAmazonApiGatewayApiDataSet: return "Revisions per Amazon API Gateway API data set"
            case .revisionsPerAmazonRedshiftDatashareDataSet: return "Revisions per Amazon Redshift datashare data set"
            case .revisionsPerDataSet: return "Revisions per data set"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = LimitName(rawValue: rawValue) ?? LimitName.sdkUnknown(rawValue)
        }
    }
}
