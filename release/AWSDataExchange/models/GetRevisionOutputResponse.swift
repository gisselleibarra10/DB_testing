// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetRevisionOutputResponse: Swift.Equatable {
    /// The ARN for the revision.
    public var arn: Swift.String?
    /// An optional comment about the revision.
    public var comment: Swift.String?
    /// The date and time that the revision was created, in ISO 8601 format.
    public var createdAt: ClientRuntime.Date?
    /// The unique identifier for the data set associated with this revision.
    public var dataSetId: Swift.String?
    /// To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products. Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.
    public var finalized: Swift.Bool?
    /// The unique identifier for the revision.
    public var id: Swift.String?
    /// A required comment to inform subscribers of the reason their access to the revision was revoked.
    public var revocationComment: Swift.String?
    /// A status indicating that subscribers' access to the revision was revoked.
    public var revoked: Swift.Bool?
    /// The date and time that the revision was revoked, in ISO 8601 format.
    public var revokedAt: ClientRuntime.Date?
    /// The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.
    public var sourceId: Swift.String?
    /// The tags for the revision.
    public var tags: [Swift.String:Swift.String]?
    /// The date and time that the revision was last updated, in ISO 8601 format.
    public var updatedAt: ClientRuntime.Date?

    public init (
        arn: Swift.String? = nil,
        comment: Swift.String? = nil,
        createdAt: ClientRuntime.Date? = nil,
        dataSetId: Swift.String? = nil,
        finalized: Swift.Bool? = nil,
        id: Swift.String? = nil,
        revocationComment: Swift.String? = nil,
        revoked: Swift.Bool? = nil,
        revokedAt: ClientRuntime.Date? = nil,
        sourceId: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        updatedAt: ClientRuntime.Date? = nil
    )
    {
        self.arn = arn
        self.comment = comment
        self.createdAt = createdAt
        self.dataSetId = dataSetId
        self.finalized = finalized
        self.id = id
        self.revocationComment = revocationComment
        self.revoked = revoked
        self.revokedAt = revokedAt
        self.sourceId = sourceId
        self.tags = tags
        self.updatedAt = updatedAt
    }
}
