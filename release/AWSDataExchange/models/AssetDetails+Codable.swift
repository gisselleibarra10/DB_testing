// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataExchangeClientTypes.AssetDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case apiGatewayApiAsset = "ApiGatewayApiAsset"
        case redshiftDataShareAsset = "RedshiftDataShareAsset"
        case s3SnapshotAsset = "S3SnapshotAsset"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let apiGatewayApiAsset = self.apiGatewayApiAsset {
            try encodeContainer.encode(apiGatewayApiAsset, forKey: .apiGatewayApiAsset)
        }
        if let redshiftDataShareAsset = self.redshiftDataShareAsset {
            try encodeContainer.encode(redshiftDataShareAsset, forKey: .redshiftDataShareAsset)
        }
        if let s3SnapshotAsset = self.s3SnapshotAsset {
            try encodeContainer.encode(s3SnapshotAsset, forKey: .s3SnapshotAsset)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3SnapshotAssetDecoded = try containerValues.decodeIfPresent(DataExchangeClientTypes.S3SnapshotAsset.self, forKey: .s3SnapshotAsset)
        s3SnapshotAsset = s3SnapshotAssetDecoded
        let redshiftDataShareAssetDecoded = try containerValues.decodeIfPresent(DataExchangeClientTypes.RedshiftDataShareAsset.self, forKey: .redshiftDataShareAsset)
        redshiftDataShareAsset = redshiftDataShareAssetDecoded
        let apiGatewayApiAssetDecoded = try containerValues.decodeIfPresent(DataExchangeClientTypes.ApiGatewayApiAsset.self, forKey: .apiGatewayApiAsset)
        apiGatewayApiAsset = apiGatewayApiAssetDecoded
    }
}
