// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProtocolsListsOutputResponseBody: Swift.Equatable {
    let protocolsLists: [FmsClientTypes.ProtocolsListDataSummary]?
    let nextToken: Swift.String?
}

extension ListProtocolsListsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case protocolsLists = "ProtocolsLists"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let protocolsListsContainer = try containerValues.decodeIfPresent([FmsClientTypes.ProtocolsListDataSummary?].self, forKey: .protocolsLists)
        var protocolsListsDecoded0:[FmsClientTypes.ProtocolsListDataSummary]? = nil
        if let protocolsListsContainer = protocolsListsContainer {
            protocolsListsDecoded0 = [FmsClientTypes.ProtocolsListDataSummary]()
            for structure0 in protocolsListsContainer {
                if let structure0 = structure0 {
                    protocolsListsDecoded0?.append(structure0)
                }
            }
        }
        protocolsLists = protocolsListsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
