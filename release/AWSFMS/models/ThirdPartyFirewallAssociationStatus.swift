// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FmsClientTypes {
    public enum ThirdPartyFirewallAssociationStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case notExist
        case offboarding
        case offboardComplete
        case onboarding
        case onboardComplete
        case sdkUnknown(Swift.String)

        public static var allCases: [ThirdPartyFirewallAssociationStatus] {
            return [
                .notExist,
                .offboarding,
                .offboardComplete,
                .onboarding,
                .onboardComplete,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .notExist: return "NOT_EXIST"
            case .offboarding: return "OFFBOARDING"
            case .offboardComplete: return "OFFBOARD_COMPLETE"
            case .onboarding: return "ONBOARDING"
            case .onboardComplete: return "ONBOARD_COMPLETE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ThirdPartyFirewallAssociationStatus(rawValue: rawValue) ?? ThirdPartyFirewallAssociationStatus.sdkUnknown(rawValue)
        }
    }
}
