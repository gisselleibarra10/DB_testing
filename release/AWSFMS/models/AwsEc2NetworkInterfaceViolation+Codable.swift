// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FmsClientTypes.AwsEc2NetworkInterfaceViolation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case violatingSecurityGroups = "ViolatingSecurityGroups"
        case violationTarget = "ViolationTarget"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let violatingSecurityGroups = violatingSecurityGroups {
            var violatingSecurityGroupsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .violatingSecurityGroups)
            for resourceidlist0 in violatingSecurityGroups {
                try violatingSecurityGroupsContainer.encode(resourceidlist0)
            }
        }
        if let violationTarget = self.violationTarget {
            try encodeContainer.encode(violationTarget, forKey: .violationTarget)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let violationTargetDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .violationTarget)
        violationTarget = violationTargetDecoded
        let violatingSecurityGroupsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .violatingSecurityGroups)
        var violatingSecurityGroupsDecoded0:[Swift.String]? = nil
        if let violatingSecurityGroupsContainer = violatingSecurityGroupsContainer {
            violatingSecurityGroupsDecoded0 = [Swift.String]()
            for string0 in violatingSecurityGroupsContainer {
                if let string0 = string0 {
                    violatingSecurityGroupsDecoded0?.append(string0)
                }
            }
        }
        violatingSecurityGroups = violatingSecurityGroupsDecoded0
    }
}
