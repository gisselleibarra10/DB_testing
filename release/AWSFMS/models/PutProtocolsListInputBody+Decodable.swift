// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutProtocolsListInputBody: Swift.Equatable {
    let protocolsList: FmsClientTypes.ProtocolsListData?
    let tagList: [FmsClientTypes.Tag]?
}

extension PutProtocolsListInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case protocolsList = "ProtocolsList"
        case tagList = "TagList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let protocolsListDecoded = try containerValues.decodeIfPresent(FmsClientTypes.ProtocolsListData.self, forKey: .protocolsList)
        protocolsList = protocolsListDecoded
        let tagListContainer = try containerValues.decodeIfPresent([FmsClientTypes.Tag?].self, forKey: .tagList)
        var tagListDecoded0:[FmsClientTypes.Tag]? = nil
        if let tagListContainer = tagListContainer {
            tagListDecoded0 = [FmsClientTypes.Tag]()
            for structure0 in tagListContainer {
                if let structure0 = structure0 {
                    tagListDecoded0?.append(structure0)
                }
            }
        }
        tagList = tagListDecoded0
    }
}
