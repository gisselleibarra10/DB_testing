// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListComplianceStatusOutputResponseBody: Swift.Equatable {
    let policyComplianceStatusList: [FmsClientTypes.PolicyComplianceStatus]?
    let nextToken: Swift.String?
}

extension ListComplianceStatusOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case policyComplianceStatusList = "PolicyComplianceStatusList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyComplianceStatusListContainer = try containerValues.decodeIfPresent([FmsClientTypes.PolicyComplianceStatus?].self, forKey: .policyComplianceStatusList)
        var policyComplianceStatusListDecoded0:[FmsClientTypes.PolicyComplianceStatus]? = nil
        if let policyComplianceStatusListContainer = policyComplianceStatusListContainer {
            policyComplianceStatusListDecoded0 = [FmsClientTypes.PolicyComplianceStatus]()
            for structure0 in policyComplianceStatusListContainer {
                if let structure0 = structure0 {
                    policyComplianceStatusListDecoded0?.append(structure0)
                }
            }
        }
        policyComplianceStatusList = policyComplianceStatusListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
