// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FmsClientTypes.SecurityServicePolicyData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case managedServiceData = "ManagedServiceData"
        case policyOption = "PolicyOption"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let managedServiceData = self.managedServiceData {
            try encodeContainer.encode(managedServiceData, forKey: .managedServiceData)
        }
        if let policyOption = self.policyOption {
            try encodeContainer.encode(policyOption, forKey: .policyOption)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(FmsClientTypes.SecurityServiceType.self, forKey: .type)
        type = typeDecoded
        let managedServiceDataDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .managedServiceData)
        managedServiceData = managedServiceDataDecoded
        let policyOptionDecoded = try containerValues.decodeIfPresent(FmsClientTypes.PolicyOption.self, forKey: .policyOption)
        policyOption = policyOptionDecoded
    }
}
