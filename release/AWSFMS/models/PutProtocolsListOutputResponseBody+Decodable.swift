// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutProtocolsListOutputResponseBody: Swift.Equatable {
    let protocolsList: FmsClientTypes.ProtocolsListData?
    let protocolsListArn: Swift.String?
}

extension PutProtocolsListOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case protocolsList = "ProtocolsList"
        case protocolsListArn = "ProtocolsListArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let protocolsListDecoded = try containerValues.decodeIfPresent(FmsClientTypes.ProtocolsListData.self, forKey: .protocolsList)
        protocolsList = protocolsListDecoded
        let protocolsListArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .protocolsListArn)
        protocolsListArn = protocolsListArnDecoded
    }
}
