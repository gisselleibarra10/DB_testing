// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMemberAccountsOutputResponseBody: Swift.Equatable {
    let memberAccounts: [Swift.String]?
    let nextToken: Swift.String?
}

extension ListMemberAccountsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case memberAccounts = "MemberAccounts"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let memberAccountsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .memberAccounts)
        var memberAccountsDecoded0:[Swift.String]? = nil
        if let memberAccountsContainer = memberAccountsContainer {
            memberAccountsDecoded0 = [Swift.String]()
            for string0 in memberAccountsContainer {
                if let string0 = string0 {
                    memberAccountsDecoded0?.append(string0)
                }
            }
        }
        memberAccounts = memberAccountsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
