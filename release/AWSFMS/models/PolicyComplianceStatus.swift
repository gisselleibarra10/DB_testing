// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FmsClientTypes {
    /// Indicates whether the account is compliant with the specified policy. An account is considered noncompliant if it includes resources that are not protected by the policy, for WAF and Shield Advanced policies, or that are noncompliant with the policy, for security group policies.
    public struct PolicyComplianceStatus: Swift.Equatable {
        /// An array of EvaluationResult objects.
        public var evaluationResults: [FmsClientTypes.EvaluationResult]?
        /// Details about problems with dependent services, such as WAF or Config, and the error message received that indicates the problem with the service.
        public var issueInfoMap: [Swift.String:Swift.String]?
        /// Timestamp of the last update to the EvaluationResult objects.
        public var lastUpdated: ClientRuntime.Date?
        /// The member account ID.
        public var memberAccount: Swift.String?
        /// The ID of the Firewall Manager policy.
        public var policyId: Swift.String?
        /// The name of the Firewall Manager policy.
        public var policyName: Swift.String?
        /// The Amazon Web Services account that created the Firewall Manager policy.
        public var policyOwner: Swift.String?

        public init (
            evaluationResults: [FmsClientTypes.EvaluationResult]? = nil,
            issueInfoMap: [Swift.String:Swift.String]? = nil,
            lastUpdated: ClientRuntime.Date? = nil,
            memberAccount: Swift.String? = nil,
            policyId: Swift.String? = nil,
            policyName: Swift.String? = nil,
            policyOwner: Swift.String? = nil
        )
        {
            self.evaluationResults = evaluationResults
            self.issueInfoMap = issueInfoMap
            self.lastUpdated = lastUpdated
            self.memberAccount = memberAccount
            self.policyId = policyId
            self.policyName = policyName
            self.policyOwner = policyOwner
        }
    }

}
