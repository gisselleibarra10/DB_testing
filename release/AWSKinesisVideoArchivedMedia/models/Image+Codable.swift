// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisVideoArchivedMediaClientTypes.Image: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case error = "Error"
        case imageContent = "ImageContent"
        case timeStamp = "TimeStamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let error = self.error {
            try encodeContainer.encode(error.rawValue, forKey: .error)
        }
        if let imageContent = self.imageContent {
            try encodeContainer.encode(imageContent, forKey: .imageContent)
        }
        if let timeStamp = self.timeStamp {
            try encodeContainer.encode(timeStamp.timeIntervalSince1970, forKey: .timeStamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timeStampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .timeStamp)
        timeStamp = timeStampDecoded
        let errorDecoded = try containerValues.decodeIfPresent(KinesisVideoArchivedMediaClientTypes.ImageError.self, forKey: .error)
        error = errorDecoded
        let imageContentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imageContent)
        imageContent = imageContentDecoded
    }
}
