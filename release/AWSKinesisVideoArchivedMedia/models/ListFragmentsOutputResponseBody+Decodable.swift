// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFragmentsOutputResponseBody: Swift.Equatable {
    let fragments: [KinesisVideoArchivedMediaClientTypes.Fragment]?
    let nextToken: Swift.String?
}

extension ListFragmentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fragments = "Fragments"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fragmentsContainer = try containerValues.decodeIfPresent([KinesisVideoArchivedMediaClientTypes.Fragment?].self, forKey: .fragments)
        var fragmentsDecoded0:[KinesisVideoArchivedMediaClientTypes.Fragment]? = nil
        if let fragmentsContainer = fragmentsContainer {
            fragmentsDecoded0 = [KinesisVideoArchivedMediaClientTypes.Fragment]()
            for structure0 in fragmentsContainer {
                if let structure0 = structure0 {
                    fragmentsDecoded0?.append(structure0)
                }
            }
        }
        fragments = fragmentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
