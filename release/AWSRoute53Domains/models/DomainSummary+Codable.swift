// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53DomainsClientTypes.DomainSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case autoRenew = "AutoRenew"
        case domainName = "DomainName"
        case expiry = "Expiry"
        case transferLock = "TransferLock"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let autoRenew = self.autoRenew {
            try encodeContainer.encode(autoRenew, forKey: .autoRenew)
        }
        if let domainName = self.domainName {
            try encodeContainer.encode(domainName, forKey: .domainName)
        }
        if let expiry = self.expiry {
            try encodeContainer.encode(expiry.timeIntervalSince1970, forKey: .expiry)
        }
        if let transferLock = self.transferLock {
            try encodeContainer.encode(transferLock, forKey: .transferLock)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let autoRenewDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .autoRenew)
        autoRenew = autoRenewDecoded
        let transferLockDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .transferLock)
        transferLock = transferLockDecoded
        let expiryDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .expiry)
        expiry = expiryDecoded
    }
}
