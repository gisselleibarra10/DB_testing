// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// The GetDomainDetail response includes the following elements.
public struct GetDomainDetailOutputResponse: Swift.Equatable {
    /// Email address to contact to report incorrect contact information for a domain, to report that the domain is being used to send spam, to report that someone is cybersquatting on a domain name, or report some other type of abuse.
    public var abuseContactEmail: Swift.String?
    /// Phone number for reporting abuse.
    public var abuseContactPhone: Swift.String?
    /// Provides details about the domain administrative contact.
    /// This member is required.
    public var adminContact: Route53DomainsClientTypes.ContactDetail?
    /// Specifies whether contact information is concealed from WHOIS queries. If the value is true, WHOIS ("who is") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If the value is false, WHOIS queries return the information that you entered for the admin contact.
    public var adminPrivacy: Swift.Bool?
    /// Specifies whether the domain registration is set to renew automatically.
    public var autoRenew: Swift.Bool?
    /// The date when the domain was created as found in the response to a WHOIS query. The date and time is in Unix time format and Coordinated Universal time (UTC).
    public var creationDate: ClientRuntime.Date?
    /// Deprecated.
    public var dnsSec: Swift.String?
    /// The name of a domain.
    /// This member is required.
    public var domainName: Swift.String?
    /// The date when the registration for the domain is set to expire. The date and time is in Unix time format and Coordinated Universal time (UTC).
    public var expirationDate: ClientRuntime.Date?
    /// The name of the domain.
    /// This member is required.
    public var nameservers: [Route53DomainsClientTypes.Nameserver]?
    /// Provides details about the domain registrant.
    /// This member is required.
    public var registrantContact: Route53DomainsClientTypes.ContactDetail?
    /// Specifies whether contact information is concealed from WHOIS queries. If the value is true, WHOIS ("who is") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If the value is false, WHOIS queries return the information that you entered for the registrant contact (domain owner).
    public var registrantPrivacy: Swift.Bool?
    /// Name of the registrar of the domain as identified in the registry. Domains with a .com, .net, or .org TLD are registered by Amazon Registrar. All other domains are registered by our registrar associate, Gandi. The value for domains that are registered by Gandi is "GANDI SAS".
    public var registrarName: Swift.String?
    /// Web address of the registrar.
    public var registrarUrl: Swift.String?
    /// Reserved for future use.
    public var registryDomainId: Swift.String?
    /// Reseller of the domain. Domains registered or transferred using Route 53 domains will have "Amazon" as the reseller.
    public var reseller: Swift.String?
    /// An array of domain name status codes, also known as Extensible Provisioning Protocol (EPP) status codes. ICANN, the organization that maintains a central database of domain names, has developed a set of domain name status codes that tell you the status of a variety of operations on a domain name, for example, registering a domain name, transferring a domain name to another registrar, renewing the registration for a domain name, and so on. All registrars use this same set of status codes. For a current list of domain name status codes and an explanation of what each code means, go to the [ICANN website](https://www.icann.org/) and search for epp status codes. (Search on the ICANN website; web searches sometimes return an old version of the document.)
    public var statusList: [Swift.String]?
    /// Provides details about the domain technical contact.
    /// This member is required.
    public var techContact: Route53DomainsClientTypes.ContactDetail?
    /// Specifies whether contact information is concealed from WHOIS queries. If the value is true, WHOIS ("who is") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If the value is false, WHOIS queries return the information that you entered for the technical contact.
    public var techPrivacy: Swift.Bool?
    /// The last updated date of the domain as found in the response to a WHOIS query. The date and time is in Unix time format and Coordinated Universal time (UTC).
    public var updatedDate: ClientRuntime.Date?
    /// The fully qualified name of the WHOIS server that can answer the WHOIS query for the domain.
    public var whoIsServer: Swift.String?

    public init (
        abuseContactEmail: Swift.String? = nil,
        abuseContactPhone: Swift.String? = nil,
        adminContact: Route53DomainsClientTypes.ContactDetail? = nil,
        adminPrivacy: Swift.Bool? = nil,
        autoRenew: Swift.Bool? = nil,
        creationDate: ClientRuntime.Date? = nil,
        dnsSec: Swift.String? = nil,
        domainName: Swift.String? = nil,
        expirationDate: ClientRuntime.Date? = nil,
        nameservers: [Route53DomainsClientTypes.Nameserver]? = nil,
        registrantContact: Route53DomainsClientTypes.ContactDetail? = nil,
        registrantPrivacy: Swift.Bool? = nil,
        registrarName: Swift.String? = nil,
        registrarUrl: Swift.String? = nil,
        registryDomainId: Swift.String? = nil,
        reseller: Swift.String? = nil,
        statusList: [Swift.String]? = nil,
        techContact: Route53DomainsClientTypes.ContactDetail? = nil,
        techPrivacy: Swift.Bool? = nil,
        updatedDate: ClientRuntime.Date? = nil,
        whoIsServer: Swift.String? = nil
    )
    {
        self.abuseContactEmail = abuseContactEmail
        self.abuseContactPhone = abuseContactPhone
        self.adminContact = adminContact
        self.adminPrivacy = adminPrivacy
        self.autoRenew = autoRenew
        self.creationDate = creationDate
        self.dnsSec = dnsSec
        self.domainName = domainName
        self.expirationDate = expirationDate
        self.nameservers = nameservers
        self.registrantContact = registrantContact
        self.registrantPrivacy = registrantPrivacy
        self.registrarName = registrarName
        self.registrarUrl = registrarUrl
        self.registryDomainId = registryDomainId
        self.reseller = reseller
        self.statusList = statusList
        self.techContact = techContact
        self.techPrivacy = techPrivacy
        self.updatedDate = updatedDate
        self.whoIsServer = whoIsServer
    }
}
