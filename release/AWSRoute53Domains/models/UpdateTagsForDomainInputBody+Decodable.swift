// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTagsForDomainInputBody: Swift.Equatable {
    let domainName: Swift.String?
    let tagsToUpdate: [Route53DomainsClientTypes.Tag]?
}

extension UpdateTagsForDomainInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainName = "DomainName"
        case tagsToUpdate = "TagsToUpdate"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let tagsToUpdateContainer = try containerValues.decodeIfPresent([Route53DomainsClientTypes.Tag?].self, forKey: .tagsToUpdate)
        var tagsToUpdateDecoded0:[Route53DomainsClientTypes.Tag]? = nil
        if let tagsToUpdateContainer = tagsToUpdateContainer {
            tagsToUpdateDecoded0 = [Route53DomainsClientTypes.Tag]()
            for structure0 in tagsToUpdateContainer {
                if let structure0 = structure0 {
                    tagsToUpdateDecoded0?.append(structure0)
                }
            }
        }
        tagsToUpdate = tagsToUpdateDecoded0
    }
}
