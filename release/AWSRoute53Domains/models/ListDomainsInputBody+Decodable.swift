// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainsInputBody: Swift.Equatable {
    let filterConditions: [Route53DomainsClientTypes.FilterCondition]?
    let sortCondition: Route53DomainsClientTypes.SortCondition?
    let marker: Swift.String?
    let maxItems: Swift.Int?
}

extension ListDomainsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterConditions = "FilterConditions"
        case marker = "Marker"
        case maxItems = "MaxItems"
        case sortCondition = "SortCondition"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterConditionsContainer = try containerValues.decodeIfPresent([Route53DomainsClientTypes.FilterCondition?].self, forKey: .filterConditions)
        var filterConditionsDecoded0:[Route53DomainsClientTypes.FilterCondition]? = nil
        if let filterConditionsContainer = filterConditionsContainer {
            filterConditionsDecoded0 = [Route53DomainsClientTypes.FilterCondition]()
            for structure0 in filterConditionsContainer {
                if let structure0 = structure0 {
                    filterConditionsDecoded0?.append(structure0)
                }
            }
        }
        filterConditions = filterConditionsDecoded0
        let sortConditionDecoded = try containerValues.decodeIfPresent(Route53DomainsClientTypes.SortCondition.self, forKey: .sortCondition)
        sortCondition = sortConditionDecoded
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        let maxItemsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxItems)
        maxItems = maxItemsDecoded
    }
}
