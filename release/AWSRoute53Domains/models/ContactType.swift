// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Route53DomainsClientTypes {
    public enum ContactType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case association
        case company
        case person
        case publicBody
        case reseller
        case sdkUnknown(Swift.String)

        public static var allCases: [ContactType] {
            return [
                .association,
                .company,
                .person,
                .publicBody,
                .reseller,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .association: return "ASSOCIATION"
            case .company: return "COMPANY"
            case .person: return "PERSON"
            case .publicBody: return "PUBLIC_BODY"
            case .reseller: return "RESELLER"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ContactType(rawValue: rawValue) ?? ContactType.sdkUnknown(rawValue)
        }
    }
}
