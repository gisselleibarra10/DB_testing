// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteTagsForDomainInputBody: Swift.Equatable {
    let domainName: Swift.String?
    let tagsToDelete: [Swift.String]?
}

extension DeleteTagsForDomainInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainName = "DomainName"
        case tagsToDelete = "TagsToDelete"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let tagsToDeleteContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .tagsToDelete)
        var tagsToDeleteDecoded0:[Swift.String]? = nil
        if let tagsToDeleteContainer = tagsToDeleteContainer {
            tagsToDeleteDecoded0 = [Swift.String]()
            for string0 in tagsToDeleteContainer {
                if let string0 = string0 {
                    tagsToDeleteDecoded0?.append(string0)
                }
            }
        }
        tagsToDelete = tagsToDeleteDecoded0
    }
}
