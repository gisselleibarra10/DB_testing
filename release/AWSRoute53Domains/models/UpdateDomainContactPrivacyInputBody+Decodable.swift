// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDomainContactPrivacyInputBody: Swift.Equatable {
    let domainName: Swift.String?
    let adminPrivacy: Swift.Bool?
    let registrantPrivacy: Swift.Bool?
    let techPrivacy: Swift.Bool?
}

extension UpdateDomainContactPrivacyInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case adminPrivacy = "AdminPrivacy"
        case domainName = "DomainName"
        case registrantPrivacy = "RegistrantPrivacy"
        case techPrivacy = "TechPrivacy"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let adminPrivacyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .adminPrivacy)
        adminPrivacy = adminPrivacyDecoded
        let registrantPrivacyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .registrantPrivacy)
        registrantPrivacy = registrantPrivacyDecoded
        let techPrivacyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .techPrivacy)
        techPrivacy = techPrivacyDecoded
    }
}
