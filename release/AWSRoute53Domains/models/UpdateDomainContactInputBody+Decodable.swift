// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDomainContactInputBody: Swift.Equatable {
    let domainName: Swift.String?
    let adminContact: Route53DomainsClientTypes.ContactDetail?
    let registrantContact: Route53DomainsClientTypes.ContactDetail?
    let techContact: Route53DomainsClientTypes.ContactDetail?
}

extension UpdateDomainContactInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case adminContact = "AdminContact"
        case domainName = "DomainName"
        case registrantContact = "RegistrantContact"
        case techContact = "TechContact"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let adminContactDecoded = try containerValues.decodeIfPresent(Route53DomainsClientTypes.ContactDetail.self, forKey: .adminContact)
        adminContact = adminContactDecoded
        let registrantContactDecoded = try containerValues.decodeIfPresent(Route53DomainsClientTypes.ContactDetail.self, forKey: .registrantContact)
        registrantContact = registrantContactDecoded
        let techContactDecoded = try containerValues.decodeIfPresent(Route53DomainsClientTypes.ContactDetail.self, forKey: .techContact)
        techContact = techContactDecoded
    }
}
