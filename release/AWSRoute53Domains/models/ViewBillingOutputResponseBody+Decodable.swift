// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ViewBillingOutputResponseBody: Swift.Equatable {
    let nextPageMarker: Swift.String?
    let billingRecords: [Route53DomainsClientTypes.BillingRecord]?
}

extension ViewBillingOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case billingRecords = "BillingRecords"
        case nextPageMarker = "NextPageMarker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextPageMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageMarker)
        nextPageMarker = nextPageMarkerDecoded
        let billingRecordsContainer = try containerValues.decodeIfPresent([Route53DomainsClientTypes.BillingRecord?].self, forKey: .billingRecords)
        var billingRecordsDecoded0:[Route53DomainsClientTypes.BillingRecord]? = nil
        if let billingRecordsContainer = billingRecordsContainer {
            billingRecordsDecoded0 = [Route53DomainsClientTypes.BillingRecord]()
            for structure0 in billingRecordsContainer {
                if let structure0 = structure0 {
                    billingRecordsDecoded0?.append(structure0)
                }
            }
        }
        billingRecords = billingRecordsDecoded0
    }
}
