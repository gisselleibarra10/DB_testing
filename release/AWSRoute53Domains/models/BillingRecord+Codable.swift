// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53DomainsClientTypes.BillingRecord: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case billDate = "BillDate"
        case domainName = "DomainName"
        case invoiceId = "InvoiceId"
        case operation = "Operation"
        case price = "Price"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let billDate = self.billDate {
            try encodeContainer.encode(billDate.timeIntervalSince1970, forKey: .billDate)
        }
        if let domainName = self.domainName {
            try encodeContainer.encode(domainName, forKey: .domainName)
        }
        if let invoiceId = self.invoiceId {
            try encodeContainer.encode(invoiceId, forKey: .invoiceId)
        }
        if let operation = self.operation {
            try encodeContainer.encode(operation.rawValue, forKey: .operation)
        }
        if price != 0.0 {
            try encodeContainer.encode(price, forKey: .price)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let operationDecoded = try containerValues.decodeIfPresent(Route53DomainsClientTypes.OperationType.self, forKey: .operation)
        operation = operationDecoded
        let invoiceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .invoiceId)
        invoiceId = invoiceIdDecoded
        let billDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .billDate)
        billDate = billDateDecoded
        let priceDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .price) ?? 0.0
        price = priceDecoded
    }
}
