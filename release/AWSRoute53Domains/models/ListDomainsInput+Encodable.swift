// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListDomainsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterConditions = "FilterConditions"
        case marker = "Marker"
        case maxItems = "MaxItems"
        case sortCondition = "SortCondition"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filterConditions = filterConditions {
            var filterConditionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filterConditions)
            for filterconditions0 in filterConditions {
                try filterConditionsContainer.encode(filterconditions0)
            }
        }
        if let marker = self.marker {
            try encodeContainer.encode(marker, forKey: .marker)
        }
        if let maxItems = self.maxItems {
            try encodeContainer.encode(maxItems, forKey: .maxItems)
        }
        if let sortCondition = self.sortCondition {
            try encodeContainer.encode(sortCondition, forKey: .sortCondition)
        }
    }
}
