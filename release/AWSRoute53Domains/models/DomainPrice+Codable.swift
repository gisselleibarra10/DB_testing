// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53DomainsClientTypes.DomainPrice: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case changeOwnershipPrice = "ChangeOwnershipPrice"
        case name = "Name"
        case registrationPrice = "RegistrationPrice"
        case renewalPrice = "RenewalPrice"
        case restorationPrice = "RestorationPrice"
        case transferPrice = "TransferPrice"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let changeOwnershipPrice = self.changeOwnershipPrice {
            try encodeContainer.encode(changeOwnershipPrice, forKey: .changeOwnershipPrice)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let registrationPrice = self.registrationPrice {
            try encodeContainer.encode(registrationPrice, forKey: .registrationPrice)
        }
        if let renewalPrice = self.renewalPrice {
            try encodeContainer.encode(renewalPrice, forKey: .renewalPrice)
        }
        if let restorationPrice = self.restorationPrice {
            try encodeContainer.encode(restorationPrice, forKey: .restorationPrice)
        }
        if let transferPrice = self.transferPrice {
            try encodeContainer.encode(transferPrice, forKey: .transferPrice)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let registrationPriceDecoded = try containerValues.decodeIfPresent(Route53DomainsClientTypes.PriceWithCurrency.self, forKey: .registrationPrice)
        registrationPrice = registrationPriceDecoded
        let transferPriceDecoded = try containerValues.decodeIfPresent(Route53DomainsClientTypes.PriceWithCurrency.self, forKey: .transferPrice)
        transferPrice = transferPriceDecoded
        let renewalPriceDecoded = try containerValues.decodeIfPresent(Route53DomainsClientTypes.PriceWithCurrency.self, forKey: .renewalPrice)
        renewalPrice = renewalPriceDecoded
        let changeOwnershipPriceDecoded = try containerValues.decodeIfPresent(Route53DomainsClientTypes.PriceWithCurrency.self, forKey: .changeOwnershipPrice)
        changeOwnershipPrice = changeOwnershipPriceDecoded
        let restorationPriceDecoded = try containerValues.decodeIfPresent(Route53DomainsClientTypes.PriceWithCurrency.self, forKey: .restorationPrice)
        restorationPrice = restorationPriceDecoded
    }
}
