// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartConfigurationSessionInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationIdentifier = "ApplicationIdentifier"
        case configurationProfileIdentifier = "ConfigurationProfileIdentifier"
        case environmentIdentifier = "EnvironmentIdentifier"
        case requiredMinimumPollIntervalInSeconds = "RequiredMinimumPollIntervalInSeconds"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applicationIdentifier = self.applicationIdentifier {
            try encodeContainer.encode(applicationIdentifier, forKey: .applicationIdentifier)
        }
        if let configurationProfileIdentifier = self.configurationProfileIdentifier {
            try encodeContainer.encode(configurationProfileIdentifier, forKey: .configurationProfileIdentifier)
        }
        if let environmentIdentifier = self.environmentIdentifier {
            try encodeContainer.encode(environmentIdentifier, forKey: .environmentIdentifier)
        }
        if let requiredMinimumPollIntervalInSeconds = self.requiredMinimumPollIntervalInSeconds {
            try encodeContainer.encode(requiredMinimumPollIntervalInSeconds, forKey: .requiredMinimumPollIntervalInSeconds)
        }
    }
}
