// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AppConfigDataClientTypes {
    public enum InvalidParameterProblem: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        /// The parameter was corrupted and could not be understood by the service.
        case corrupted
        /// The parameter was expired and can no longer be used.
        case expired
        /// The client called the service before the time specified in the poll interval.
        case pollIntervalNotSatisfied
        case sdkUnknown(Swift.String)

        public static var allCases: [InvalidParameterProblem] {
            return [
                .corrupted,
                .expired,
                .pollIntervalNotSatisfied,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .corrupted: return "Corrupted"
            case .expired: return "Expired"
            case .pollIntervalNotSatisfied: return "PollIntervalNotSatisfied"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = InvalidParameterProblem(rawValue: rawValue) ?? InvalidParameterProblem.sdkUnknown(rawValue)
        }
    }
}
