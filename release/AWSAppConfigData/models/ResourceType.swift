// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AppConfigDataClientTypes {
    public enum ResourceType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        /// Resource type value for the Application resource.
        case application
        /// Resource type value for the Configuration resource.
        case configuration
        /// Resource type value for the ConfigurationProfile resource.
        case configurationProfile
        /// Resource type value for the Deployment resource.
        case deployment
        /// Resource type value for the Environment resource.
        case environment
        case sdkUnknown(Swift.String)

        public static var allCases: [ResourceType] {
            return [
                .application,
                .configuration,
                .configurationProfile,
                .deployment,
                .environment,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .application: return "Application"
            case .configuration: return "Configuration"
            case .configurationProfile: return "ConfigurationProfile"
            case .deployment: return "Deployment"
            case .environment: return "Environment"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ResourceType(rawValue: rawValue) ?? ResourceType.sdkUnknown(rawValue)
        }
    }
}
