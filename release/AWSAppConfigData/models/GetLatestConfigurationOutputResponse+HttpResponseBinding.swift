// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetLatestConfigurationOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if let contentTypeHeaderValue = httpResponse.headers.value(for: "Content-Type") {
            self.contentType = contentTypeHeaderValue
        } else {
            self.contentType = nil
        }
        if let nextPollConfigurationTokenHeaderValue = httpResponse.headers.value(for: "Next-Poll-Configuration-Token") {
            self.nextPollConfigurationToken = nextPollConfigurationTokenHeaderValue
        } else {
            self.nextPollConfigurationToken = nil
        }
        if let nextPollIntervalInSecondsHeaderValue = httpResponse.headers.value(for: "Next-Poll-Interval-In-Seconds") {
            self.nextPollIntervalInSeconds = Swift.Int(nextPollIntervalInSecondsHeaderValue) ?? 0
        } else {
            self.nextPollIntervalInSeconds = 0
        }
        if case .stream(let reader) = httpResponse.body {
            let data = reader.toBytes().toData()
            self.configuration = data
        } else {
            self.configuration = nil
        }
    }
}
