// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResourceNotFoundExceptionBody: Swift.Equatable {
    let message: Swift.String?
    let resourceType: AppConfigDataClientTypes.ResourceType?
    let referencedBy: [Swift.String:Swift.String]?
}

extension ResourceNotFoundExceptionBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case message = "Message"
        case referencedBy = "ReferencedBy"
        case resourceType = "ResourceType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(AppConfigDataClientTypes.ResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let referencedByContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .referencedBy)
        var referencedByDecoded0: [Swift.String:Swift.String]? = nil
        if let referencedByContainer = referencedByContainer {
            referencedByDecoded0 = [Swift.String:Swift.String]()
            for (key0, string0) in referencedByContainer {
                if let string0 = string0 {
                    referencedByDecoded0?[key0] = string0
                }
            }
        }
        referencedBy = referencedByDecoded0
    }
}
