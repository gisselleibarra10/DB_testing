// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartConfigurationSessionInputBody: Swift.Equatable {
    let applicationIdentifier: Swift.String?
    let environmentIdentifier: Swift.String?
    let configurationProfileIdentifier: Swift.String?
    let requiredMinimumPollIntervalInSeconds: Swift.Int?
}

extension StartConfigurationSessionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applicationIdentifier = "ApplicationIdentifier"
        case configurationProfileIdentifier = "ConfigurationProfileIdentifier"
        case environmentIdentifier = "EnvironmentIdentifier"
        case requiredMinimumPollIntervalInSeconds = "RequiredMinimumPollIntervalInSeconds"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .applicationIdentifier)
        applicationIdentifier = applicationIdentifierDecoded
        let environmentIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .environmentIdentifier)
        environmentIdentifier = environmentIdentifierDecoded
        let configurationProfileIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .configurationProfileIdentifier)
        configurationProfileIdentifier = configurationProfileIdentifierDecoded
        let requiredMinimumPollIntervalInSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .requiredMinimumPollIntervalInSeconds)
        requiredMinimumPollIntervalInSeconds = requiredMinimumPollIntervalInSecondsDecoded
    }
}
