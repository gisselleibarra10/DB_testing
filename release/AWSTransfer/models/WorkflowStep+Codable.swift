// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TransferClientTypes.WorkflowStep: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case copyStepDetails = "CopyStepDetails"
        case customStepDetails = "CustomStepDetails"
        case deleteStepDetails = "DeleteStepDetails"
        case tagStepDetails = "TagStepDetails"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let copyStepDetails = self.copyStepDetails {
            try encodeContainer.encode(copyStepDetails, forKey: .copyStepDetails)
        }
        if let customStepDetails = self.customStepDetails {
            try encodeContainer.encode(customStepDetails, forKey: .customStepDetails)
        }
        if let deleteStepDetails = self.deleteStepDetails {
            try encodeContainer.encode(deleteStepDetails, forKey: .deleteStepDetails)
        }
        if let tagStepDetails = self.tagStepDetails {
            try encodeContainer.encode(tagStepDetails, forKey: .tagStepDetails)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(TransferClientTypes.WorkflowStepType.self, forKey: .type)
        type = typeDecoded
        let copyStepDetailsDecoded = try containerValues.decodeIfPresent(TransferClientTypes.CopyStepDetails.self, forKey: .copyStepDetails)
        copyStepDetails = copyStepDetailsDecoded
        let customStepDetailsDecoded = try containerValues.decodeIfPresent(TransferClientTypes.CustomStepDetails.self, forKey: .customStepDetails)
        customStepDetails = customStepDetailsDecoded
        let deleteStepDetailsDecoded = try containerValues.decodeIfPresent(TransferClientTypes.DeleteStepDetails.self, forKey: .deleteStepDetails)
        deleteStepDetails = deleteStepDetailsDecoded
        let tagStepDetailsDecoded = try containerValues.decodeIfPresent(TransferClientTypes.TagStepDetails.self, forKey: .tagStepDetails)
        tagStepDetails = tagStepDetailsDecoded
    }
}
