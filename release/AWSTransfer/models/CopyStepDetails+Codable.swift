// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TransferClientTypes.CopyStepDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationFileLocation = "DestinationFileLocation"
        case name = "Name"
        case overwriteExisting = "OverwriteExisting"
        case sourceFileLocation = "SourceFileLocation"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destinationFileLocation = self.destinationFileLocation {
            try encodeContainer.encode(destinationFileLocation, forKey: .destinationFileLocation)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let overwriteExisting = self.overwriteExisting {
            try encodeContainer.encode(overwriteExisting.rawValue, forKey: .overwriteExisting)
        }
        if let sourceFileLocation = self.sourceFileLocation {
            try encodeContainer.encode(sourceFileLocation, forKey: .sourceFileLocation)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let destinationFileLocationDecoded = try containerValues.decodeIfPresent(TransferClientTypes.InputFileLocation.self, forKey: .destinationFileLocation)
        destinationFileLocation = destinationFileLocationDecoded
        let overwriteExistingDecoded = try containerValues.decodeIfPresent(TransferClientTypes.OverwriteExisting.self, forKey: .overwriteExisting)
        overwriteExisting = overwriteExistingDecoded
        let sourceFileLocationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceFileLocation)
        sourceFileLocation = sourceFileLocationDecoded
    }
}
