// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConnectorsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let connectors: [TransferClientTypes.ListedConnector]?
}

extension ListConnectorsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectors = "Connectors"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let connectorsContainer = try containerValues.decodeIfPresent([TransferClientTypes.ListedConnector?].self, forKey: .connectors)
        var connectorsDecoded0:[TransferClientTypes.ListedConnector]? = nil
        if let connectorsContainer = connectorsContainer {
            connectorsDecoded0 = [TransferClientTypes.ListedConnector]()
            for structure0 in connectorsContainer {
                if let structure0 = structure0 {
                    connectorsDecoded0?.append(structure0)
                }
            }
        }
        connectors = connectorsDecoded0
    }
}
