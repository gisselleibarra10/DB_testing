// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateCertificateInputBody: Swift.Equatable {
    let certificateId: Swift.String?
    let activeDate: ClientRuntime.Date?
    let inactiveDate: ClientRuntime.Date?
    let description: Swift.String?
}

extension UpdateCertificateInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activeDate = "ActiveDate"
        case certificateId = "CertificateId"
        case description = "Description"
        case inactiveDate = "InactiveDate"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificateId)
        certificateId = certificateIdDecoded
        let activeDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .activeDate)
        activeDate = activeDateDecoded
        let inactiveDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .inactiveDate)
        inactiveDate = inactiveDateDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
    }
}
