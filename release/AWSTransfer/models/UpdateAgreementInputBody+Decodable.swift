// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateAgreementInputBody: Swift.Equatable {
    let agreementId: Swift.String?
    let serverId: Swift.String?
    let description: Swift.String?
    let status: TransferClientTypes.AgreementStatusType?
    let localProfileId: Swift.String?
    let partnerProfileId: Swift.String?
    let baseDirectory: Swift.String?
    let accessRole: Swift.String?
}

extension UpdateAgreementInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessRole = "AccessRole"
        case agreementId = "AgreementId"
        case baseDirectory = "BaseDirectory"
        case description = "Description"
        case localProfileId = "LocalProfileId"
        case partnerProfileId = "PartnerProfileId"
        case serverId = "ServerId"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let agreementIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .agreementId)
        agreementId = agreementIdDecoded
        let serverIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serverId)
        serverId = serverIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let statusDecoded = try containerValues.decodeIfPresent(TransferClientTypes.AgreementStatusType.self, forKey: .status)
        status = statusDecoded
        let localProfileIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .localProfileId)
        localProfileId = localProfileIdDecoded
        let partnerProfileIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .partnerProfileId)
        partnerProfileId = partnerProfileIdDecoded
        let baseDirectoryDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .baseDirectory)
        baseDirectory = baseDirectoryDecoded
        let accessRoleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accessRole)
        accessRole = accessRoleDecoded
    }
}
