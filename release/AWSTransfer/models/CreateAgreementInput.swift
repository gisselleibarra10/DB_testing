// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAgreementInput: Swift.Equatable {
    /// With AS2, you can send files by calling StartFileTransfer and specifying the file paths in the request parameter, SendFilePaths. We use the fileâ€™s parent directory (for example, for --send-file-paths /bucket/dir/file.txt, parent directory is /bucket/dir/) to temporarily store a processed AS2 message file, store the MDN when we receive them from the partner, and write a final JSON file containing relevant metadata of the transmission. So, the AccessRole needs to provide read and write access to the parent directory of the file location used in the StartFileTransfer request. Additionally, you need to provide read and write access to the parent directory of the files that you intend to send with StartFileTransfer.
    /// This member is required.
    public var accessRole: Swift.String?
    /// The landing directory (folder) for files transferred by using the AS2 protocol. A BaseDirectory example is /DOC-EXAMPLE-BUCKET/home/mydirectory .
    /// This member is required.
    public var baseDirectory: Swift.String?
    /// A name or short description to identify the agreement.
    public var description: Swift.String?
    /// A unique identifier for the AS2 local profile.
    /// This member is required.
    public var localProfileId: Swift.String?
    /// A unique identifier for the partner profile used in the agreement.
    /// This member is required.
    public var partnerProfileId: Swift.String?
    /// A system-assigned unique identifier for a server instance. This is the specific server that the agreement uses.
    /// This member is required.
    public var serverId: Swift.String?
    /// The status of the agreement. The agreement can be either ACTIVE or INACTIVE.
    public var status: TransferClientTypes.AgreementStatusType?
    /// Key-value pairs that can be used to group and search for agreements.
    public var tags: [TransferClientTypes.Tag]?

    public init (
        accessRole: Swift.String? = nil,
        baseDirectory: Swift.String? = nil,
        description: Swift.String? = nil,
        localProfileId: Swift.String? = nil,
        partnerProfileId: Swift.String? = nil,
        serverId: Swift.String? = nil,
        status: TransferClientTypes.AgreementStatusType? = nil,
        tags: [TransferClientTypes.Tag]? = nil
    )
    {
        self.accessRole = accessRole
        self.baseDirectory = baseDirectory
        self.description = description
        self.localProfileId = localProfileId
        self.partnerProfileId = partnerProfileId
        self.serverId = serverId
        self.status = status
        self.tags = tags
    }
}
