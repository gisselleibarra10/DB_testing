// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TransferClientTypes.ListedProfile: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case as2Id = "As2Id"
        case profileId = "ProfileId"
        case profileType = "ProfileType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let as2Id = self.as2Id {
            try encodeContainer.encode(as2Id, forKey: .as2Id)
        }
        if let profileId = self.profileId {
            try encodeContainer.encode(profileId, forKey: .profileId)
        }
        if let profileType = self.profileType {
            try encodeContainer.encode(profileType.rawValue, forKey: .profileType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let profileIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .profileId)
        profileId = profileIdDecoded
        let as2IdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .as2Id)
        as2Id = as2IdDecoded
        let profileTypeDecoded = try containerValues.decodeIfPresent(TransferClientTypes.ProfileType.self, forKey: .profileType)
        profileType = profileTypeDecoded
    }
}
