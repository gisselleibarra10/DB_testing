// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TransferClientTypes {
    /// Describes the properties of a certificate.
    public struct ListedCertificate: Swift.Equatable {
        /// An optional date that specifies when the certificate becomes active.
        public var activeDate: ClientRuntime.Date?
        /// The Amazon Resource Name (ARN) of the specified certificate.
        public var arn: Swift.String?
        /// An array of identifiers for the imported certificates. You use this identifier for working with profiles and partner profiles.
        public var certificateId: Swift.String?
        /// The name or short description that's used to identify the certificate.
        public var description: Swift.String?
        /// An optional date that specifies when the certificate becomes inactive.
        public var inactiveDate: ClientRuntime.Date?
        /// The certificate can be either ACTIVE, PENDING_ROTATION, or INACTIVE. PENDING_ROTATION means that this certificate will replace the current certificate when it expires.
        public var status: TransferClientTypes.CertificateStatusType?
        /// The type for the certificate. If a private key has been specified for the certificate, its type is CERTIFICATE_WITH_PRIVATE_KEY. If there is no private key, the type is CERTIFICATE.
        public var type: TransferClientTypes.CertificateType?
        /// Specifies whether this certificate is used for signing or encryption.
        public var usage: TransferClientTypes.CertificateUsageType?

        public init (
            activeDate: ClientRuntime.Date? = nil,
            arn: Swift.String? = nil,
            certificateId: Swift.String? = nil,
            description: Swift.String? = nil,
            inactiveDate: ClientRuntime.Date? = nil,
            status: TransferClientTypes.CertificateStatusType? = nil,
            type: TransferClientTypes.CertificateType? = nil,
            usage: TransferClientTypes.CertificateUsageType? = nil
        )
        {
            self.activeDate = activeDate
            self.arn = arn
            self.certificateId = certificateId
            self.description = description
            self.inactiveDate = inactiveDate
            self.status = status
            self.type = type
            self.usage = usage
        }
    }

}
