// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension TransferClientTypes {
    /// The details for an execution object.
    public struct DescribedExecution: Swift.Equatable {
        /// A unique identifier for the execution of a workflow.
        public var executionId: Swift.String?
        /// The IAM role associated with the execution.
        public var executionRole: Swift.String?
        /// A structure that describes the Amazon S3 or EFS file location. This is the file location when the execution begins: if the file is being copied, this is the initial (as opposed to destination) file location.
        public var initialFileLocation: TransferClientTypes.FileLocation?
        /// The IAM logging role associated with the execution.
        public var loggingConfiguration: TransferClientTypes.LoggingConfiguration?
        /// The full POSIX identity, including user ID (Uid), group ID (Gid), and any secondary groups IDs (SecondaryGids), that controls your users' access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.
        public var posixProfile: TransferClientTypes.PosixProfile?
        /// A structure that describes the execution results. This includes a list of the steps along with the details of each step, error type and message (if any), and the OnExceptionSteps structure.
        public var results: TransferClientTypes.ExecutionResults?
        /// A container object for the session details that are associated with a workflow.
        public var serviceMetadata: TransferClientTypes.ServiceMetadata?
        /// The status is one of the execution. Can be in progress, completed, exception encountered, or handling the exception.
        public var status: TransferClientTypes.ExecutionStatus?

        public init (
            executionId: Swift.String? = nil,
            executionRole: Swift.String? = nil,
            initialFileLocation: TransferClientTypes.FileLocation? = nil,
            loggingConfiguration: TransferClientTypes.LoggingConfiguration? = nil,
            posixProfile: TransferClientTypes.PosixProfile? = nil,
            results: TransferClientTypes.ExecutionResults? = nil,
            serviceMetadata: TransferClientTypes.ServiceMetadata? = nil,
            status: TransferClientTypes.ExecutionStatus? = nil
        )
        {
            self.executionId = executionId
            self.executionRole = executionRole
            self.initialFileLocation = initialFileLocation
            self.loggingConfiguration = loggingConfiguration
            self.posixProfile = posixProfile
            self.results = results
            self.serviceMetadata = serviceMetadata
            self.status = status
        }
    }

}
