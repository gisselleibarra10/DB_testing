// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateCertificateInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activeDate = "ActiveDate"
        case certificateId = "CertificateId"
        case description = "Description"
        case inactiveDate = "InactiveDate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let activeDate = self.activeDate {
            try encodeContainer.encode(activeDate.timeIntervalSince1970, forKey: .activeDate)
        }
        if let certificateId = self.certificateId {
            try encodeContainer.encode(certificateId, forKey: .certificateId)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let inactiveDate = self.inactiveDate {
            try encodeContainer.encode(inactiveDate.timeIntervalSince1970, forKey: .inactiveDate)
        }
    }
}
