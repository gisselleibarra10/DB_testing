// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ImportCertificateInput: Swift.Equatable {
    /// An optional date that specifies when the certificate becomes active.
    public var activeDate: ClientRuntime.Date?
    /// The file that contains the certificate to import.
    /// This member is required.
    public var certificate: Swift.String?
    /// An optional list of certificates that make up the chain for the certificate that's being imported.
    public var certificateChain: Swift.String?
    /// A short description that helps identify the certificate.
    public var description: Swift.String?
    /// An optional date that specifies when the certificate becomes inactive.
    public var inactiveDate: ClientRuntime.Date?
    /// The file that contains the private key for the certificate that's being imported.
    public var privateKey: Swift.String?
    /// Key-value pairs that can be used to group and search for certificates.
    public var tags: [TransferClientTypes.Tag]?
    /// Specifies whether this certificate is used for signing or encryption.
    /// This member is required.
    public var usage: TransferClientTypes.CertificateUsageType?

    public init (
        activeDate: ClientRuntime.Date? = nil,
        certificate: Swift.String? = nil,
        certificateChain: Swift.String? = nil,
        description: Swift.String? = nil,
        inactiveDate: ClientRuntime.Date? = nil,
        privateKey: Swift.String? = nil,
        tags: [TransferClientTypes.Tag]? = nil,
        usage: TransferClientTypes.CertificateUsageType? = nil
    )
    {
        self.activeDate = activeDate
        self.certificate = certificate
        self.certificateChain = certificateChain
        self.description = description
        self.inactiveDate = inactiveDate
        self.privateKey = privateKey
        self.tags = tags
        self.usage = usage
    }
}
