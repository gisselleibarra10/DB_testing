// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateProfileInputBody: Swift.Equatable {
    let profileId: Swift.String?
    let certificateIds: [Swift.String]?
}

extension UpdateProfileInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateIds = "CertificateIds"
        case profileId = "ProfileId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let profileIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .profileId)
        profileId = profileIdDecoded
        let certificateIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .certificateIds)
        var certificateIdsDecoded0:[Swift.String]? = nil
        if let certificateIdsContainer = certificateIdsContainer {
            certificateIdsDecoded0 = [Swift.String]()
            for string0 in certificateIdsContainer {
                if let string0 = string0 {
                    certificateIdsDecoded0?.append(string0)
                }
            }
        }
        certificateIds = certificateIdsDecoded0
    }
}
