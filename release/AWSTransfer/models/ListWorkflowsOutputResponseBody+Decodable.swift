// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorkflowsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let workflows: [TransferClientTypes.ListedWorkflow]?
}

extension ListWorkflowsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case workflows = "Workflows"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let workflowsContainer = try containerValues.decodeIfPresent([TransferClientTypes.ListedWorkflow?].self, forKey: .workflows)
        var workflowsDecoded0:[TransferClientTypes.ListedWorkflow]? = nil
        if let workflowsContainer = workflowsContainer {
            workflowsDecoded0 = [TransferClientTypes.ListedWorkflow]()
            for structure0 in workflowsContainer {
                if let structure0 = structure0 {
                    workflowsDecoded0?.append(structure0)
                }
            }
        }
        workflows = workflowsDecoded0
    }
}
