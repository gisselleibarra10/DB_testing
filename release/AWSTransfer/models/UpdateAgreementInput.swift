// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateAgreementInput: Swift.Equatable {
    /// With AS2, you can send files by calling StartFileTransfer and specifying the file paths in the request parameter, SendFilePaths. We use the fileâ€™s parent directory (for example, for --send-file-paths /bucket/dir/file.txt, parent directory is /bucket/dir/) to temporarily store a processed AS2 message file, store the MDN when we receive them from the partner, and write a final JSON file containing relevant metadata of the transmission. So, the AccessRole needs to provide read and write access to the parent directory of the file location used in the StartFileTransfer request. Additionally, you need to provide read and write access to the parent directory of the files that you intend to send with StartFileTransfer.
    public var accessRole: Swift.String?
    /// A unique identifier for the agreement. This identifier is returned when you create an agreement.
    /// This member is required.
    public var agreementId: Swift.String?
    /// To change the landing directory (folder) for files that are transferred, provide the bucket folder that you want to use; for example, /DOC-EXAMPLE-BUCKET/home/mydirectory .
    public var baseDirectory: Swift.String?
    /// To replace the existing description, provide a short description for the agreement.
    public var description: Swift.String?
    /// A unique identifier for the AS2 local profile. To change the local profile identifier, provide a new value here.
    public var localProfileId: Swift.String?
    /// A unique identifier for the partner profile. To change the partner profile identifier, provide a new value here.
    public var partnerProfileId: Swift.String?
    /// A system-assigned unique identifier for a server instance. This is the specific server that the agreement uses.
    /// This member is required.
    public var serverId: Swift.String?
    /// You can update the status for the agreement, either activating an inactive agreement or the reverse.
    public var status: TransferClientTypes.AgreementStatusType?

    public init (
        accessRole: Swift.String? = nil,
        agreementId: Swift.String? = nil,
        baseDirectory: Swift.String? = nil,
        description: Swift.String? = nil,
        localProfileId: Swift.String? = nil,
        partnerProfileId: Swift.String? = nil,
        serverId: Swift.String? = nil,
        status: TransferClientTypes.AgreementStatusType? = nil
    )
    {
        self.accessRole = accessRole
        self.agreementId = agreementId
        self.baseDirectory = baseDirectory
        self.description = description
        self.localProfileId = localProfileId
        self.partnerProfileId = partnerProfileId
        self.serverId = serverId
        self.status = status
    }
}
