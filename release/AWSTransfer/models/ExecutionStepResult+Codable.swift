// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TransferClientTypes.ExecutionStepResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case error = "Error"
        case outputs = "Outputs"
        case stepType = "StepType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let error = self.error {
            try encodeContainer.encode(error, forKey: .error)
        }
        if let outputs = self.outputs {
            try encodeContainer.encode(outputs, forKey: .outputs)
        }
        if let stepType = self.stepType {
            try encodeContainer.encode(stepType.rawValue, forKey: .stepType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stepTypeDecoded = try containerValues.decodeIfPresent(TransferClientTypes.WorkflowStepType.self, forKey: .stepType)
        stepType = stepTypeDecoded
        let outputsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .outputs)
        outputs = outputsDecoded
        let errorDecoded = try containerValues.decodeIfPresent(TransferClientTypes.ExecutionError.self, forKey: .error)
        error = errorDecoded
    }
}
