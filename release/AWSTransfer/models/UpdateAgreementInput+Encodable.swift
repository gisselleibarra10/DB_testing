// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateAgreementInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessRole = "AccessRole"
        case agreementId = "AgreementId"
        case baseDirectory = "BaseDirectory"
        case description = "Description"
        case localProfileId = "LocalProfileId"
        case partnerProfileId = "PartnerProfileId"
        case serverId = "ServerId"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessRole = self.accessRole {
            try encodeContainer.encode(accessRole, forKey: .accessRole)
        }
        if let agreementId = self.agreementId {
            try encodeContainer.encode(agreementId, forKey: .agreementId)
        }
        if let baseDirectory = self.baseDirectory {
            try encodeContainer.encode(baseDirectory, forKey: .baseDirectory)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let localProfileId = self.localProfileId {
            try encodeContainer.encode(localProfileId, forKey: .localProfileId)
        }
        if let partnerProfileId = self.partnerProfileId {
            try encodeContainer.encode(partnerProfileId, forKey: .partnerProfileId)
        }
        if let serverId = self.serverId {
            try encodeContainer.encode(serverId, forKey: .serverId)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }
}
