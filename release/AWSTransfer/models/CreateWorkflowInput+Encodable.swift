// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateWorkflowInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case onExceptionSteps = "OnExceptionSteps"
        case steps = "Steps"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let onExceptionSteps = onExceptionSteps {
            var onExceptionStepsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .onExceptionSteps)
            for workflowsteps0 in onExceptionSteps {
                try onExceptionStepsContainer.encode(workflowsteps0)
            }
        }
        if let steps = steps {
            var stepsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .steps)
            for workflowsteps0 in steps {
                try stepsContainer.encode(workflowsteps0)
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for tags0 in tags {
                try tagsContainer.encode(tags0)
            }
        }
    }
}
