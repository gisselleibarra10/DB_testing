// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAgreementsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let agreements: [TransferClientTypes.ListedAgreement]?
}

extension ListAgreementsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case agreements = "Agreements"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let agreementsContainer = try containerValues.decodeIfPresent([TransferClientTypes.ListedAgreement?].self, forKey: .agreements)
        var agreementsDecoded0:[TransferClientTypes.ListedAgreement]? = nil
        if let agreementsContainer = agreementsContainer {
            agreementsDecoded0 = [TransferClientTypes.ListedAgreement]()
            for structure0 in agreementsContainer {
                if let structure0 = structure0 {
                    agreementsDecoded0?.append(structure0)
                }
            }
        }
        agreements = agreementsDecoded0
    }
}
