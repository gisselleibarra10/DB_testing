// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TransferClientTypes.ListedHostKey: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case dateImported = "DateImported"
        case description = "Description"
        case fingerprint = "Fingerprint"
        case hostKeyId = "HostKeyId"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let dateImported = self.dateImported {
            try encodeContainer.encode(dateImported.timeIntervalSince1970, forKey: .dateImported)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let fingerprint = self.fingerprint {
            try encodeContainer.encode(fingerprint, forKey: .fingerprint)
        }
        if let hostKeyId = self.hostKeyId {
            try encodeContainer.encode(hostKeyId, forKey: .hostKeyId)
        }
        if let type = self.type {
            try encodeContainer.encode(type, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let hostKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hostKeyId)
        hostKeyId = hostKeyIdDecoded
        let fingerprintDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fingerprint)
        fingerprint = fingerprintDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let typeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .type)
        type = typeDecoded
        let dateImportedDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .dateImported)
        dateImported = dateImportedDecoded
    }
}
