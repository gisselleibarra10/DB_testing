// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateUserInputBody: Swift.Equatable {
    let username: Swift.String?
    let instanceId: Swift.String?
    let identityProvider: LicenseManagerUserSubscriptionsClientTypes.IdentityProvider?
    let domain: Swift.String?
}

extension AssociateUserInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domain = "Domain"
        case identityProvider = "IdentityProvider"
        case instanceId = "InstanceId"
        case username = "Username"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let usernameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .username)
        username = usernameDecoded
        let instanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let identityProviderDecoded = try containerValues.decodeIfPresent(LicenseManagerUserSubscriptionsClientTypes.IdentityProvider.self, forKey: .identityProvider)
        identityProvider = identityProviderDecoded
        let domainDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domain)
        domain = domainDecoded
    }
}
