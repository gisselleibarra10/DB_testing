// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeGuruProfilerClientTypes.Channel: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventPublishers
        case id
        case uri
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let eventPublishers = eventPublishers {
            var eventPublishersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .eventPublishers)
            for eventpublishers0 in eventPublishers {
                try eventPublishersContainer.encode(eventpublishers0.rawValue)
            }
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let uri = self.uri {
            try encodeContainer.encode(uri, forKey: .uri)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let uriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .uri)
        uri = uriDecoded
        let eventPublishersContainer = try containerValues.decodeIfPresent([CodeGuruProfilerClientTypes.EventPublisher?].self, forKey: .eventPublishers)
        var eventPublishersDecoded0:Swift.Set<CodeGuruProfilerClientTypes.EventPublisher>? = nil
        if let eventPublishersContainer = eventPublishersContainer {
            eventPublishersDecoded0 = Swift.Set<CodeGuruProfilerClientTypes.EventPublisher>()
            for string0 in eventPublishersContainer {
                if let string0 = string0 {
                    eventPublishersDecoded0?.insert(string0)
                }
            }
        }
        eventPublishers = eventPublishersDecoded0
    }
}
