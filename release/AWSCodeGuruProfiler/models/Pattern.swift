// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodeGuruProfilerClientTypes {
    /// A set of rules used to make a recommendation during an analysis.
    public struct Pattern: Swift.Equatable {
        /// A list of the different counters used to determine if there is a match.
        public var countersToAggregate: [Swift.String]?
        /// The description of the recommendation. This explains a potential inefficiency in a profiled application.
        public var description: Swift.String?
        /// The universally unique identifier (UUID) of this pattern.
        public var id: Swift.String?
        /// The name for this pattern.
        public var name: Swift.String?
        /// A string that contains the steps recommended to address the potential inefficiency.
        public var resolutionSteps: Swift.String?
        /// A list of frame names that were searched during the analysis that generated a recommendation.
        public var targetFrames: [[Swift.String]]?
        /// The percentage of time an application spends in one method that triggers a recommendation. The percentage of time is the same as the percentage of the total gathered sample counts during analysis.
        public var thresholdPercent: Swift.Double

        public init (
            countersToAggregate: [Swift.String]? = nil,
            description: Swift.String? = nil,
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            resolutionSteps: Swift.String? = nil,
            targetFrames: [[Swift.String]]? = nil,
            thresholdPercent: Swift.Double = 0.0
        )
        {
            self.countersToAggregate = countersToAggregate
            self.description = description
            self.id = id
            self.name = name
            self.resolutionSteps = resolutionSteps
            self.targetFrames = targetFrames
            self.thresholdPercent = thresholdPercent
        }
    }

}
