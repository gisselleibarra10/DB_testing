// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeGuruProfilerClientTypes.Recommendation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allMatchesCount
        case allMatchesSum
        case endTime
        case pattern
        case startTime
        case topMatches
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allMatchesCount = self.allMatchesCount {
            try encodeContainer.encode(allMatchesCount, forKey: .allMatchesCount)
        }
        if let allMatchesSum = self.allMatchesSum {
            try encodeContainer.encode(allMatchesSum, forKey: .allMatchesSum)
        }
        if let endTime = self.endTime {
            try encodeContainer.encode(endTime.timeIntervalSince1970, forKey: .endTime)
        }
        if let pattern = self.pattern {
            try encodeContainer.encode(pattern, forKey: .pattern)
        }
        if let startTime = self.startTime {
            try encodeContainer.encode(startTime.timeIntervalSince1970, forKey: .startTime)
        }
        if let topMatches = topMatches {
            var topMatchesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .topMatches)
            for matches0 in topMatches {
                try topMatchesContainer.encode(matches0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allMatchesCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .allMatchesCount)
        allMatchesCount = allMatchesCountDecoded
        let allMatchesSumDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .allMatchesSum)
        allMatchesSum = allMatchesSumDecoded
        let patternDecoded = try containerValues.decodeIfPresent(CodeGuruProfilerClientTypes.Pattern.self, forKey: .pattern)
        pattern = patternDecoded
        let topMatchesContainer = try containerValues.decodeIfPresent([CodeGuruProfilerClientTypes.Match?].self, forKey: .topMatches)
        var topMatchesDecoded0:[CodeGuruProfilerClientTypes.Match]? = nil
        if let topMatchesContainer = topMatchesContainer {
            topMatchesDecoded0 = [CodeGuruProfilerClientTypes.Match]()
            for structure0 in topMatchesContainer {
                if let structure0 = structure0 {
                    topMatchesDecoded0?.append(structure0)
                }
            }
        }
        topMatches = topMatchesDecoded0
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endTime)
        endTime = endTimeDecoded
    }
}
