// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ConnectClientTypes {
    public enum IntegrationType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case event
        case pinpointApp
        case voiceId
        case wisdomAssistant
        case wisdomKnowledgeBase
        case sdkUnknown(Swift.String)

        public static var allCases: [IntegrationType] {
            return [
                .event,
                .pinpointApp,
                .voiceId,
                .wisdomAssistant,
                .wisdomKnowledgeBase,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .event: return "EVENT"
            case .pinpointApp: return "PINPOINT_APP"
            case .voiceId: return "VOICE_ID"
            case .wisdomAssistant: return "WISDOM_ASSISTANT"
            case .wisdomKnowledgeBase: return "WISDOM_KNOWLEDGE_BASE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = IntegrationType(rawValue: rawValue) ?? IntegrationType.sdkUnknown(rawValue)
        }
    }
}
