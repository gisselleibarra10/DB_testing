// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContactFlowModulesOutputResponseBody: Swift.Equatable {
    let contactFlowModulesSummaryList: [ConnectClientTypes.ContactFlowModuleSummary]?
    let nextToken: Swift.String?
}

extension ListContactFlowModulesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contactFlowModulesSummaryList = "ContactFlowModulesSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactFlowModulesSummaryListContainer = try containerValues.decodeIfPresent([ConnectClientTypes.ContactFlowModuleSummary?].self, forKey: .contactFlowModulesSummaryList)
        var contactFlowModulesSummaryListDecoded0:[ConnectClientTypes.ContactFlowModuleSummary]? = nil
        if let contactFlowModulesSummaryListContainer = contactFlowModulesSummaryListContainer {
            contactFlowModulesSummaryListDecoded0 = [ConnectClientTypes.ContactFlowModuleSummary]()
            for structure0 in contactFlowModulesSummaryListContainer {
                if let structure0 = structure0 {
                    contactFlowModulesSummaryListDecoded0?.append(structure0)
                }
            }
        }
        contactFlowModulesSummaryList = contactFlowModulesSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
