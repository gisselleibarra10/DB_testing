// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateTaskTemplateInputBody: Swift.Equatable {
    let name: Swift.String?
    let description: Swift.String?
    let contactFlowId: Swift.String?
    let constraints: ConnectClientTypes.TaskTemplateConstraints?
    let defaults: ConnectClientTypes.TaskTemplateDefaults?
    let status: ConnectClientTypes.TaskTemplateStatus?
    let fields: [ConnectClientTypes.TaskTemplateField]?
    let clientToken: Swift.String?
}

extension CreateTaskTemplateInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case constraints = "Constraints"
        case contactFlowId = "ContactFlowId"
        case defaults = "Defaults"
        case description = "Description"
        case fields = "Fields"
        case name = "Name"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let contactFlowIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .contactFlowId)
        contactFlowId = contactFlowIdDecoded
        let constraintsDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.TaskTemplateConstraints.self, forKey: .constraints)
        constraints = constraintsDecoded
        let defaultsDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.TaskTemplateDefaults.self, forKey: .defaults)
        defaults = defaultsDecoded
        let statusDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.TaskTemplateStatus.self, forKey: .status)
        status = statusDecoded
        let fieldsContainer = try containerValues.decodeIfPresent([ConnectClientTypes.TaskTemplateField?].self, forKey: .fields)
        var fieldsDecoded0:[ConnectClientTypes.TaskTemplateField]? = nil
        if let fieldsContainer = fieldsContainer {
            fieldsDecoded0 = [ConnectClientTypes.TaskTemplateField]()
            for structure0 in fieldsContainer {
                if let structure0 = structure0 {
                    fieldsDecoded0?.append(structure0)
                }
            }
        }
        fields = fieldsDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
