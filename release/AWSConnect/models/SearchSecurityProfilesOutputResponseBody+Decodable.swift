// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchSecurityProfilesOutputResponseBody: Swift.Equatable {
    let securityProfiles: [ConnectClientTypes.SecurityProfileSearchSummary]?
    let nextToken: Swift.String?
    let approximateTotalCount: Swift.Int?
}

extension SearchSecurityProfilesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case approximateTotalCount = "ApproximateTotalCount"
        case nextToken = "NextToken"
        case securityProfiles = "SecurityProfiles"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let securityProfilesContainer = try containerValues.decodeIfPresent([ConnectClientTypes.SecurityProfileSearchSummary?].self, forKey: .securityProfiles)
        var securityProfilesDecoded0:[ConnectClientTypes.SecurityProfileSearchSummary]? = nil
        if let securityProfilesContainer = securityProfilesContainer {
            securityProfilesDecoded0 = [ConnectClientTypes.SecurityProfileSearchSummary]()
            for structure0 in securityProfilesContainer {
                if let structure0 = structure0 {
                    securityProfilesDecoded0?.append(structure0)
                }
            }
        }
        securityProfiles = securityProfilesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let approximateTotalCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .approximateTotalCount)
        approximateTotalCount = approximateTotalCountDecoded
    }
}
