// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUsersOutputResponseBody: Swift.Equatable {
    let userSummaryList: [ConnectClientTypes.UserSummary]?
    let nextToken: Swift.String?
}

extension ListUsersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case userSummaryList = "UserSummaryList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userSummaryListContainer = try containerValues.decodeIfPresent([ConnectClientTypes.UserSummary?].self, forKey: .userSummaryList)
        var userSummaryListDecoded0:[ConnectClientTypes.UserSummary]? = nil
        if let userSummaryListContainer = userSummaryListContainer {
            userSummaryListDecoded0 = [ConnectClientTypes.UserSummary]()
            for structure0 in userSummaryListContainer {
                if let structure0 = structure0 {
                    userSummaryListDecoded0?.append(structure0)
                }
            }
        }
        userSummaryList = userSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
