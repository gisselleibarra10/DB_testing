// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartContactStreamingInputBody: Swift.Equatable {
    let instanceId: Swift.String?
    let contactId: Swift.String?
    let chatStreamingConfiguration: ConnectClientTypes.ChatStreamingConfiguration?
    let clientToken: Swift.String?
}

extension StartContactStreamingInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case chatStreamingConfiguration = "ChatStreamingConfiguration"
        case clientToken = "ClientToken"
        case contactId = "ContactId"
        case instanceId = "InstanceId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let contactIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .contactId)
        contactId = contactIdDecoded
        let chatStreamingConfigurationDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.ChatStreamingConfiguration.self, forKey: .chatStreamingConfiguration)
        chatStreamingConfiguration = chatStreamingConfigurationDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
