// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchAvailablePhoneNumbersOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let availableNumbersList: [ConnectClientTypes.AvailableNumberSummary]?
}

extension SearchAvailablePhoneNumbersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case availableNumbersList = "AvailableNumbersList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let availableNumbersListContainer = try containerValues.decodeIfPresent([ConnectClientTypes.AvailableNumberSummary?].self, forKey: .availableNumbersList)
        var availableNumbersListDecoded0:[ConnectClientTypes.AvailableNumberSummary]? = nil
        if let availableNumbersListContainer = availableNumbersListContainer {
            availableNumbersListDecoded0 = [ConnectClientTypes.AvailableNumberSummary]()
            for structure0 in availableNumbersListContainer {
                if let structure0 = structure0 {
                    availableNumbersListDecoded0?.append(structure0)
                }
            }
        }
        availableNumbersList = availableNumbersListDecoded0
    }
}
