// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateVocabularyInput: Swift.Equatable {
    /// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If a create request is received more than once with same client token, subsequent requests return the previous response without creating a vocabulary again.
    public var clientToken: Swift.String?
    /// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. The size limit is 50KB. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table).
    /// This member is required.
    public var content: Swift.String?
    /// The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
    /// This member is required.
    public var instanceId: Swift.String?
    /// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html)
    /// This member is required.
    public var languageCode: ConnectClientTypes.VocabularyLanguageCode?
    /// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
    public var tags: [Swift.String:Swift.String]?
    /// A unique name of the custom vocabulary.
    /// This member is required.
    public var vocabularyName: Swift.String?

    public init (
        clientToken: Swift.String? = nil,
        content: Swift.String? = nil,
        instanceId: Swift.String? = nil,
        languageCode: ConnectClientTypes.VocabularyLanguageCode? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        vocabularyName: Swift.String? = nil
    )
    {
        self.clientToken = clientToken
        self.content = content
        self.instanceId = instanceId
        self.languageCode = languageCode
        self.tags = tags
        self.vocabularyName = vocabularyName
    }
}
