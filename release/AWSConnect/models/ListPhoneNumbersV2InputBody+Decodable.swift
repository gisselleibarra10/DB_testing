// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPhoneNumbersV2InputBody: Swift.Equatable {
    let targetArn: Swift.String?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
    let phoneNumberCountryCodes: [ConnectClientTypes.PhoneNumberCountryCode]?
    let phoneNumberTypes: [ConnectClientTypes.PhoneNumberType]?
    let phoneNumberPrefix: Swift.String?
}

extension ListPhoneNumbersV2InputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case phoneNumberCountryCodes = "PhoneNumberCountryCodes"
        case phoneNumberPrefix = "PhoneNumberPrefix"
        case phoneNumberTypes = "PhoneNumberTypes"
        case targetArn = "TargetArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetArn)
        targetArn = targetArnDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let phoneNumberCountryCodesContainer = try containerValues.decodeIfPresent([ConnectClientTypes.PhoneNumberCountryCode?].self, forKey: .phoneNumberCountryCodes)
        var phoneNumberCountryCodesDecoded0:[ConnectClientTypes.PhoneNumberCountryCode]? = nil
        if let phoneNumberCountryCodesContainer = phoneNumberCountryCodesContainer {
            phoneNumberCountryCodesDecoded0 = [ConnectClientTypes.PhoneNumberCountryCode]()
            for string0 in phoneNumberCountryCodesContainer {
                if let string0 = string0 {
                    phoneNumberCountryCodesDecoded0?.append(string0)
                }
            }
        }
        phoneNumberCountryCodes = phoneNumberCountryCodesDecoded0
        let phoneNumberTypesContainer = try containerValues.decodeIfPresent([ConnectClientTypes.PhoneNumberType?].self, forKey: .phoneNumberTypes)
        var phoneNumberTypesDecoded0:[ConnectClientTypes.PhoneNumberType]? = nil
        if let phoneNumberTypesContainer = phoneNumberTypesContainer {
            phoneNumberTypesDecoded0 = [ConnectClientTypes.PhoneNumberType]()
            for string0 in phoneNumberTypesContainer {
                if let string0 = string0 {
                    phoneNumberTypesDecoded0?.append(string0)
                }
            }
        }
        phoneNumberTypes = phoneNumberTypesDecoded0
        let phoneNumberPrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .phoneNumberPrefix)
        phoneNumberPrefix = phoneNumberPrefixDecoded
    }
}
