// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListQuickConnectsOutputResponseBody: Swift.Equatable {
    let quickConnectSummaryList: [ConnectClientTypes.QuickConnectSummary]?
    let nextToken: Swift.String?
}

extension ListQuickConnectsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case quickConnectSummaryList = "QuickConnectSummaryList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let quickConnectSummaryListContainer = try containerValues.decodeIfPresent([ConnectClientTypes.QuickConnectSummary?].self, forKey: .quickConnectSummaryList)
        var quickConnectSummaryListDecoded0:[ConnectClientTypes.QuickConnectSummary]? = nil
        if let quickConnectSummaryListContainer = quickConnectSummaryListContainer {
            quickConnectSummaryListDecoded0 = [ConnectClientTypes.QuickConnectSummary]()
            for structure0 in quickConnectSummaryListContainer {
                if let structure0 = structure0 {
                    quickConnectSummaryListDecoded0?.append(structure0)
                }
            }
        }
        quickConnectSummaryList = quickConnectSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
