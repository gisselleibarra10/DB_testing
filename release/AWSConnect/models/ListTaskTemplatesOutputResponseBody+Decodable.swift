// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTaskTemplatesOutputResponseBody: Swift.Equatable {
    let taskTemplates: [ConnectClientTypes.TaskTemplateMetadata]?
    let nextToken: Swift.String?
}

extension ListTaskTemplatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case taskTemplates = "TaskTemplates"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskTemplatesContainer = try containerValues.decodeIfPresent([ConnectClientTypes.TaskTemplateMetadata?].self, forKey: .taskTemplates)
        var taskTemplatesDecoded0:[ConnectClientTypes.TaskTemplateMetadata]? = nil
        if let taskTemplatesContainer = taskTemplatesContainer {
            taskTemplatesDecoded0 = [ConnectClientTypes.TaskTemplateMetadata]()
            for structure0 in taskTemplatesContainer {
                if let structure0 = structure0 {
                    taskTemplatesDecoded0?.append(structure0)
                }
            }
        }
        taskTemplates = taskTemplatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
