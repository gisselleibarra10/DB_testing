// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchVocabulariesOutputResponseBody: Swift.Equatable {
    let vocabularySummaryList: [ConnectClientTypes.VocabularySummary]?
    let nextToken: Swift.String?
}

extension SearchVocabulariesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case vocabularySummaryList = "VocabularySummaryList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vocabularySummaryListContainer = try containerValues.decodeIfPresent([ConnectClientTypes.VocabularySummary?].self, forKey: .vocabularySummaryList)
        var vocabularySummaryListDecoded0:[ConnectClientTypes.VocabularySummary]? = nil
        if let vocabularySummaryListContainer = vocabularySummaryListContainer {
            vocabularySummaryListDecoded0 = [ConnectClientTypes.VocabularySummary]()
            for structure0 in vocabularySummaryListContainer {
                if let structure0 = structure0 {
                    vocabularySummaryListDecoded0?.append(structure0)
                }
            }
        }
        vocabularySummaryList = vocabularySummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
