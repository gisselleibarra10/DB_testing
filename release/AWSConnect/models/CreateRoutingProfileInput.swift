// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateRoutingProfileInput: Swift.Equatable {
    /// The default outbound queue for the routing profile.
    /// This member is required.
    public var defaultOutboundQueueId: Swift.String?
    /// Description of the routing profile. Must not be more than 250 characters.
    /// This member is required.
    public var description: Swift.String?
    /// The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
    /// This member is required.
    public var instanceId: Swift.String?
    /// The channels that agents can handle in the Contact Control Panel (CCP) for this routing profile.
    /// This member is required.
    public var mediaConcurrencies: [ConnectClientTypes.MediaConcurrency]?
    /// The name of the routing profile. Must not be more than 127 characters.
    /// This member is required.
    public var name: Swift.String?
    /// The inbound queues associated with the routing profile. If no queue is added, the agent can make only outbound calls.
    public var queueConfigs: [ConnectClientTypes.RoutingProfileQueueConfig]?
    /// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
    public var tags: [Swift.String:Swift.String]?

    public init (
        defaultOutboundQueueId: Swift.String? = nil,
        description: Swift.String? = nil,
        instanceId: Swift.String? = nil,
        mediaConcurrencies: [ConnectClientTypes.MediaConcurrency]? = nil,
        name: Swift.String? = nil,
        queueConfigs: [ConnectClientTypes.RoutingProfileQueueConfig]? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.defaultOutboundQueueId = defaultOutboundQueueId
        self.description = description
        self.instanceId = instanceId
        self.mediaConcurrencies = mediaConcurrencies
        self.name = name
        self.queueConfigs = queueConfigs
        self.tags = tags
    }
}
