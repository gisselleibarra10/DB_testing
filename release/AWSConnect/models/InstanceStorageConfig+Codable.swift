// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectClientTypes.InstanceStorageConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associationId = "AssociationId"
        case kinesisFirehoseConfig = "KinesisFirehoseConfig"
        case kinesisStreamConfig = "KinesisStreamConfig"
        case kinesisVideoStreamConfig = "KinesisVideoStreamConfig"
        case s3Config = "S3Config"
        case storageType = "StorageType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let associationId = self.associationId {
            try encodeContainer.encode(associationId, forKey: .associationId)
        }
        if let kinesisFirehoseConfig = self.kinesisFirehoseConfig {
            try encodeContainer.encode(kinesisFirehoseConfig, forKey: .kinesisFirehoseConfig)
        }
        if let kinesisStreamConfig = self.kinesisStreamConfig {
            try encodeContainer.encode(kinesisStreamConfig, forKey: .kinesisStreamConfig)
        }
        if let kinesisVideoStreamConfig = self.kinesisVideoStreamConfig {
            try encodeContainer.encode(kinesisVideoStreamConfig, forKey: .kinesisVideoStreamConfig)
        }
        if let s3Config = self.s3Config {
            try encodeContainer.encode(s3Config, forKey: .s3Config)
        }
        if let storageType = self.storageType {
            try encodeContainer.encode(storageType.rawValue, forKey: .storageType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let associationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .associationId)
        associationId = associationIdDecoded
        let storageTypeDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.StorageType.self, forKey: .storageType)
        storageType = storageTypeDecoded
        let s3ConfigDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.S3Config.self, forKey: .s3Config)
        s3Config = s3ConfigDecoded
        let kinesisVideoStreamConfigDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.KinesisVideoStreamConfig.self, forKey: .kinesisVideoStreamConfig)
        kinesisVideoStreamConfig = kinesisVideoStreamConfigDecoded
        let kinesisStreamConfigDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.KinesisStreamConfig.self, forKey: .kinesisStreamConfig)
        kinesisStreamConfig = kinesisStreamConfigDecoded
        let kinesisFirehoseConfigDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.KinesisFirehoseConfig.self, forKey: .kinesisFirehoseConfig)
        kinesisFirehoseConfig = kinesisFirehoseConfigDecoded
    }
}
