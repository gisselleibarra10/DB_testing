// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateInstanceInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case directoryId = "DirectoryId"
        case identityManagementType = "IdentityManagementType"
        case inboundCallsEnabled = "InboundCallsEnabled"
        case instanceAlias = "InstanceAlias"
        case outboundCallsEnabled = "OutboundCallsEnabled"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let directoryId = self.directoryId {
            try encodeContainer.encode(directoryId, forKey: .directoryId)
        }
        if let identityManagementType = self.identityManagementType {
            try encodeContainer.encode(identityManagementType.rawValue, forKey: .identityManagementType)
        }
        if let inboundCallsEnabled = self.inboundCallsEnabled {
            try encodeContainer.encode(inboundCallsEnabled, forKey: .inboundCallsEnabled)
        }
        if let instanceAlias = self.instanceAlias {
            try encodeContainer.encode(instanceAlias, forKey: .instanceAlias)
        }
        if let outboundCallsEnabled = self.outboundCallsEnabled {
            try encodeContainer.encode(outboundCallsEnabled, forKey: .outboundCallsEnabled)
        }
    }
}
