// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectClientTypes.AnswerMachineDetectionConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case awaitAnswerMachinePrompt = "AwaitAnswerMachinePrompt"
        case enableAnswerMachineDetection = "EnableAnswerMachineDetection"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if awaitAnswerMachinePrompt != false {
            try encodeContainer.encode(awaitAnswerMachinePrompt, forKey: .awaitAnswerMachinePrompt)
        }
        if enableAnswerMachineDetection != false {
            try encodeContainer.encode(enableAnswerMachineDetection, forKey: .enableAnswerMachineDetection)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enableAnswerMachineDetectionDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableAnswerMachineDetection) ?? false
        enableAnswerMachineDetection = enableAnswerMachineDetectionDecoded
        let awaitAnswerMachinePromptDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .awaitAnswerMachinePrompt) ?? false
        awaitAnswerMachinePrompt = awaitAnswerMachinePromptDecoded
    }
}
