// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchRoutingProfilesOutputResponseBody: Swift.Equatable {
    let routingProfiles: [ConnectClientTypes.RoutingProfile]?
    let nextToken: Swift.String?
    let approximateTotalCount: Swift.Int?
}

extension SearchRoutingProfilesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case approximateTotalCount = "ApproximateTotalCount"
        case nextToken = "NextToken"
        case routingProfiles = "RoutingProfiles"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let routingProfilesContainer = try containerValues.decodeIfPresent([ConnectClientTypes.RoutingProfile?].self, forKey: .routingProfiles)
        var routingProfilesDecoded0:[ConnectClientTypes.RoutingProfile]? = nil
        if let routingProfilesContainer = routingProfilesContainer {
            routingProfilesDecoded0 = [ConnectClientTypes.RoutingProfile]()
            for structure0 in routingProfilesContainer {
                if let structure0 = structure0 {
                    routingProfilesDecoded0?.append(structure0)
                }
            }
        }
        routingProfiles = routingProfilesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let approximateTotalCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .approximateTotalCount)
        approximateTotalCount = approximateTotalCountDecoded
    }
}
