// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCurrentMetricDataOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let metricResults: [ConnectClientTypes.CurrentMetricResult]?
    let dataSnapshotTime: ClientRuntime.Date?
}

extension GetCurrentMetricDataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSnapshotTime = "DataSnapshotTime"
        case metricResults = "MetricResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let metricResultsContainer = try containerValues.decodeIfPresent([ConnectClientTypes.CurrentMetricResult?].self, forKey: .metricResults)
        var metricResultsDecoded0:[ConnectClientTypes.CurrentMetricResult]? = nil
        if let metricResultsContainer = metricResultsContainer {
            metricResultsDecoded0 = [ConnectClientTypes.CurrentMetricResult]()
            for structure0 in metricResultsContainer {
                if let structure0 = structure0 {
                    metricResultsDecoded0?.append(structure0)
                }
            }
        }
        metricResults = metricResultsDecoded0
        let dataSnapshotTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .dataSnapshotTime)
        dataSnapshotTime = dataSnapshotTimeDecoded
    }
}
