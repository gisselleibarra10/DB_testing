// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateVocabularyOutputResponseBody: Swift.Equatable {
    let vocabularyArn: Swift.String?
    let vocabularyId: Swift.String?
    let state: ConnectClientTypes.VocabularyState?
}

extension CreateVocabularyOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case state = "State"
        case vocabularyArn = "VocabularyArn"
        case vocabularyId = "VocabularyId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vocabularyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vocabularyArn)
        vocabularyArn = vocabularyArnDecoded
        let vocabularyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vocabularyId)
        vocabularyId = vocabularyIdDecoded
        let stateDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.VocabularyState.self, forKey: .state)
        state = stateDecoded
    }
}
