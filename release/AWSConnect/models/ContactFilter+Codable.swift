// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectClientTypes.ContactFilter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contactStates = "ContactStates"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contactStates = contactStates {
            var contactStatesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .contactStates)
            for contactstates0 in contactStates {
                try contactStatesContainer.encode(contactstates0.rawValue)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactStatesContainer = try containerValues.decodeIfPresent([ConnectClientTypes.ContactState?].self, forKey: .contactStates)
        var contactStatesDecoded0:[ConnectClientTypes.ContactState]? = nil
        if let contactStatesContainer = contactStatesContainer {
            contactStatesDecoded0 = [ConnectClientTypes.ContactState]()
            for string0 in contactStatesContainer {
                if let string0 = string0 {
                    contactStatesDecoded0?.append(string0)
                }
            }
        }
        contactStates = contactStatesDecoded0
    }
}
