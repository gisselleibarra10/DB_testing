// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateUserInput: Swift.Equatable {
    /// The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
    public var directoryUserId: Swift.String?
    /// The identifier of the hierarchy group for the user.
    public var hierarchyGroupId: Swift.String?
    /// The information about the identity of the user.
    public var identityInfo: ConnectClientTypes.UserIdentityInfo?
    /// The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
    /// This member is required.
    public var instanceId: Swift.String?
    /// The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
    public var password: Swift.String?
    /// The phone settings for the user.
    /// This member is required.
    public var phoneConfig: ConnectClientTypes.UserPhoneConfig?
    /// The identifier of the routing profile for the user.
    /// This member is required.
    public var routingProfileId: Swift.String?
    /// The identifier of the security profile for the user.
    /// This member is required.
    public var securityProfileIds: [Swift.String]?
    /// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
    public var tags: [Swift.String:Swift.String]?
    /// The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.
    /// This member is required.
    public var username: Swift.String?

    public init (
        directoryUserId: Swift.String? = nil,
        hierarchyGroupId: Swift.String? = nil,
        identityInfo: ConnectClientTypes.UserIdentityInfo? = nil,
        instanceId: Swift.String? = nil,
        password: Swift.String? = nil,
        phoneConfig: ConnectClientTypes.UserPhoneConfig? = nil,
        routingProfileId: Swift.String? = nil,
        securityProfileIds: [Swift.String]? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        username: Swift.String? = nil
    )
    {
        self.directoryUserId = directoryUserId
        self.hierarchyGroupId = hierarchyGroupId
        self.identityInfo = identityInfo
        self.instanceId = instanceId
        self.password = password
        self.phoneConfig = phoneConfig
        self.routingProfileId = routingProfileId
        self.securityProfileIds = securityProfileIds
        self.tags = tags
        self.username = username
    }
}
