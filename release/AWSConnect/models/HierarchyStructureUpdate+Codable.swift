// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectClientTypes.HierarchyStructureUpdate: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case levelFive = "LevelFive"
        case levelFour = "LevelFour"
        case levelOne = "LevelOne"
        case levelThree = "LevelThree"
        case levelTwo = "LevelTwo"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let levelFive = self.levelFive {
            try encodeContainer.encode(levelFive, forKey: .levelFive)
        }
        if let levelFour = self.levelFour {
            try encodeContainer.encode(levelFour, forKey: .levelFour)
        }
        if let levelOne = self.levelOne {
            try encodeContainer.encode(levelOne, forKey: .levelOne)
        }
        if let levelThree = self.levelThree {
            try encodeContainer.encode(levelThree, forKey: .levelThree)
        }
        if let levelTwo = self.levelTwo {
            try encodeContainer.encode(levelTwo, forKey: .levelTwo)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let levelOneDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.HierarchyLevelUpdate.self, forKey: .levelOne)
        levelOne = levelOneDecoded
        let levelTwoDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.HierarchyLevelUpdate.self, forKey: .levelTwo)
        levelTwo = levelTwoDecoded
        let levelThreeDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.HierarchyLevelUpdate.self, forKey: .levelThree)
        levelThree = levelThreeDecoded
        let levelFourDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.HierarchyLevelUpdate.self, forKey: .levelFour)
        levelFour = levelFourDecoded
        let levelFiveDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.HierarchyLevelUpdate.self, forKey: .levelFive)
        levelFive = levelFiveDecoded
    }
}
