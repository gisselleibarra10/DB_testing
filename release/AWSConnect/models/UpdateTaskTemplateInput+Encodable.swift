// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateTaskTemplateInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case constraints = "Constraints"
        case contactFlowId = "ContactFlowId"
        case defaults = "Defaults"
        case description = "Description"
        case fields = "Fields"
        case name = "Name"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let constraints = self.constraints {
            try encodeContainer.encode(constraints, forKey: .constraints)
        }
        if let contactFlowId = self.contactFlowId {
            try encodeContainer.encode(contactFlowId, forKey: .contactFlowId)
        }
        if let defaults = self.defaults {
            try encodeContainer.encode(defaults, forKey: .defaults)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let fields = fields {
            var fieldsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .fields)
            for tasktemplatefields0 in fields {
                try fieldsContainer.encode(tasktemplatefields0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }
}
