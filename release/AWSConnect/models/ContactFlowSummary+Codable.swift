// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectClientTypes.ContactFlowSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case contactFlowState = "ContactFlowState"
        case contactFlowType = "ContactFlowType"
        case id = "Id"
        case name = "Name"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let contactFlowState = self.contactFlowState {
            try encodeContainer.encode(contactFlowState.rawValue, forKey: .contactFlowState)
        }
        if let contactFlowType = self.contactFlowType {
            try encodeContainer.encode(contactFlowType.rawValue, forKey: .contactFlowType)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let contactFlowTypeDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.ContactFlowType.self, forKey: .contactFlowType)
        contactFlowType = contactFlowTypeDecoded
        let contactFlowStateDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.ContactFlowState.self, forKey: .contactFlowState)
        contactFlowState = contactFlowStateDecoded
    }
}
