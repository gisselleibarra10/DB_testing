// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ConnectClientTypes {
    public enum PropertyValidationExceptionReason: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case invalidFormat
        case notSupported
        case referencedResourceNotFound
        case requiredPropertyMissing
        case resourceNameAlreadyExists
        case uniqueConstraintViolated
        case sdkUnknown(Swift.String)

        public static var allCases: [PropertyValidationExceptionReason] {
            return [
                .invalidFormat,
                .notSupported,
                .referencedResourceNotFound,
                .requiredPropertyMissing,
                .resourceNameAlreadyExists,
                .uniqueConstraintViolated,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .invalidFormat: return "INVALID_FORMAT"
            case .notSupported: return "NOT_SUPPORTED"
            case .referencedResourceNotFound: return "REFERENCED_RESOURCE_NOT_FOUND"
            case .requiredPropertyMissing: return "REQUIRED_PROPERTY_MISSING"
            case .resourceNameAlreadyExists: return "RESOURCE_NAME_ALREADY_EXISTS"
            case .uniqueConstraintViolated: return "UNIQUE_CONSTRAINT_VIOLATED"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = PropertyValidationExceptionReason(rawValue: rawValue) ?? PropertyValidationExceptionReason.sdkUnknown(rawValue)
        }
    }
}
