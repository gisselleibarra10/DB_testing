// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTaskTemplateOutputResponseBody: Swift.Equatable {
    let instanceId: Swift.String?
    let id: Swift.String?
    let arn: Swift.String?
    let name: Swift.String?
    let description: Swift.String?
    let contactFlowId: Swift.String?
    let constraints: ConnectClientTypes.TaskTemplateConstraints?
    let defaults: ConnectClientTypes.TaskTemplateDefaults?
    let fields: [ConnectClientTypes.TaskTemplateField]?
    let status: ConnectClientTypes.TaskTemplateStatus?
    let lastModifiedTime: ClientRuntime.Date?
    let createdTime: ClientRuntime.Date?
    let tags: [Swift.String:Swift.String]?
}

extension GetTaskTemplateOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case constraints = "Constraints"
        case contactFlowId = "ContactFlowId"
        case createdTime = "CreatedTime"
        case defaults = "Defaults"
        case description = "Description"
        case fields = "Fields"
        case id = "Id"
        case instanceId = "InstanceId"
        case lastModifiedTime = "LastModifiedTime"
        case name = "Name"
        case status = "Status"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let contactFlowIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .contactFlowId)
        contactFlowId = contactFlowIdDecoded
        let constraintsDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.TaskTemplateConstraints.self, forKey: .constraints)
        constraints = constraintsDecoded
        let defaultsDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.TaskTemplateDefaults.self, forKey: .defaults)
        defaults = defaultsDecoded
        let fieldsContainer = try containerValues.decodeIfPresent([ConnectClientTypes.TaskTemplateField?].self, forKey: .fields)
        var fieldsDecoded0:[ConnectClientTypes.TaskTemplateField]? = nil
        if let fieldsContainer = fieldsContainer {
            fieldsDecoded0 = [ConnectClientTypes.TaskTemplateField]()
            for structure0 in fieldsContainer {
                if let structure0 = structure0 {
                    fieldsDecoded0?.append(structure0)
                }
            }
        }
        fields = fieldsDecoded0
        let statusDecoded = try containerValues.decodeIfPresent(ConnectClientTypes.TaskTemplateStatus.self, forKey: .status)
        status = statusDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let createdTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdTime)
        createdTime = createdTimeDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
