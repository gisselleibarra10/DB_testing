// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDefaultVocabulariesOutputResponseBody: Swift.Equatable {
    let defaultVocabularyList: [ConnectClientTypes.DefaultVocabulary]?
    let nextToken: Swift.String?
}

extension ListDefaultVocabulariesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultVocabularyList = "DefaultVocabularyList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let defaultVocabularyListContainer = try containerValues.decodeIfPresent([ConnectClientTypes.DefaultVocabulary?].self, forKey: .defaultVocabularyList)
        var defaultVocabularyListDecoded0:[ConnectClientTypes.DefaultVocabulary]? = nil
        if let defaultVocabularyListContainer = defaultVocabularyListContainer {
            defaultVocabularyListDecoded0 = [ConnectClientTypes.DefaultVocabulary]()
            for structure0 in defaultVocabularyListContainer {
                if let structure0 = structure0 {
                    defaultVocabularyListDecoded0?.append(structure0)
                }
            }
        }
        defaultVocabularyList = defaultVocabularyListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
