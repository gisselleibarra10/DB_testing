// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ConnectClientTypes {
    public enum InstanceStorageResourceType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case agentEvents
        case callRecordings
        case chatTranscripts
        case contactTraceRecords
        case mediaStreams
        case realTimeContactAnalysisSegments
        case scheduledReports
        case sdkUnknown(Swift.String)

        public static var allCases: [InstanceStorageResourceType] {
            return [
                .agentEvents,
                .callRecordings,
                .chatTranscripts,
                .contactTraceRecords,
                .mediaStreams,
                .realTimeContactAnalysisSegments,
                .scheduledReports,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .agentEvents: return "AGENT_EVENTS"
            case .callRecordings: return "CALL_RECORDINGS"
            case .chatTranscripts: return "CHAT_TRANSCRIPTS"
            case .contactTraceRecords: return "CONTACT_TRACE_RECORDS"
            case .mediaStreams: return "MEDIA_STREAMS"
            case .realTimeContactAnalysisSegments: return "REAL_TIME_CONTACT_ANALYSIS_SEGMENTS"
            case .scheduledReports: return "SCHEDULED_REPORTS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = InstanceStorageResourceType(rawValue: rawValue) ?? InstanceStorageResourceType.sdkUnknown(rawValue)
        }
    }
}
