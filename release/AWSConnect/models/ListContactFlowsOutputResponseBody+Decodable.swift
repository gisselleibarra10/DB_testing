// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContactFlowsOutputResponseBody: Swift.Equatable {
    let contactFlowSummaryList: [ConnectClientTypes.ContactFlowSummary]?
    let nextToken: Swift.String?
}

extension ListContactFlowsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contactFlowSummaryList = "ContactFlowSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactFlowSummaryListContainer = try containerValues.decodeIfPresent([ConnectClientTypes.ContactFlowSummary?].self, forKey: .contactFlowSummaryList)
        var contactFlowSummaryListDecoded0:[ConnectClientTypes.ContactFlowSummary]? = nil
        if let contactFlowSummaryListContainer = contactFlowSummaryListContainer {
            contactFlowSummaryListDecoded0 = [ConnectClientTypes.ContactFlowSummary]()
            for structure0 in contactFlowSummaryListContainer {
                if let structure0 = structure0 {
                    contactFlowSummaryListDecoded0?.append(structure0)
                }
            }
        }
        contactFlowSummaryList = contactFlowSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
