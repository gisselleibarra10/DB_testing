// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectClientTypes {
    /// Contains information about a contact.
    public struct Contact: Swift.Equatable {
        /// Information about the agent who accepted the contact.
        public var agentInfo: ConnectClientTypes.AgentInfo?
        /// The Amazon Resource Name (ARN) for the contact.
        public var arn: Swift.String?
        /// How the contact reached your contact center.
        public var channel: ConnectClientTypes.Channel?
        /// The description of the contact.
        public var description: Swift.String?
        /// The timestamp when the customer endpoint disconnected from Amazon Connect.
        public var disconnectTimestamp: ClientRuntime.Date?
        /// The identifier for the contact.
        public var id: Swift.String?
        /// If this contact is related to other contacts, this is the ID of the initial contact.
        public var initialContactId: Swift.String?
        /// Indicates how the contact was initiated.
        public var initiationMethod: ConnectClientTypes.ContactInitiationMethod?
        /// The date and time this contact was initiated, in UTC time. For INBOUND, this is when the contact arrived. For OUTBOUND, this is when the agent began dialing. For CALLBACK, this is when the callback contact was created. For TRANSFER and QUEUE_TRANSFER, this is when the transfer was initiated. For API, this is when the request arrived.
        public var initiationTimestamp: ClientRuntime.Date?
        /// The timestamp when contact was last updated.
        public var lastUpdateTimestamp: ClientRuntime.Date?
        /// The name of the contact.
        public var name: Swift.String?
        /// If this contact is not the first contact, this is the ID of the previous contact.
        public var previousContactId: Swift.String?
        /// If this contact was queued, this contains information about the queue.
        public var queueInfo: ConnectClientTypes.QueueInfo?
        /// The timestamp, in Unix epoch time format, at which to start running the inbound flow.
        public var scheduledTimestamp: ClientRuntime.Date?

        public init (
            agentInfo: ConnectClientTypes.AgentInfo? = nil,
            arn: Swift.String? = nil,
            channel: ConnectClientTypes.Channel? = nil,
            description: Swift.String? = nil,
            disconnectTimestamp: ClientRuntime.Date? = nil,
            id: Swift.String? = nil,
            initialContactId: Swift.String? = nil,
            initiationMethod: ConnectClientTypes.ContactInitiationMethod? = nil,
            initiationTimestamp: ClientRuntime.Date? = nil,
            lastUpdateTimestamp: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            previousContactId: Swift.String? = nil,
            queueInfo: ConnectClientTypes.QueueInfo? = nil,
            scheduledTimestamp: ClientRuntime.Date? = nil
        )
        {
            self.agentInfo = agentInfo
            self.arn = arn
            self.channel = channel
            self.description = description
            self.disconnectTimestamp = disconnectTimestamp
            self.id = id
            self.initialContactId = initialContactId
            self.initiationMethod = initiationMethod
            self.initiationTimestamp = initiationTimestamp
            self.lastUpdateTimestamp = lastUpdateTimestamp
            self.name = name
            self.previousContactId = previousContactId
            self.queueInfo = queueInfo
            self.scheduledTimestamp = scheduledTimestamp
        }
    }

}
