// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBotsOutputResponseBody: Swift.Equatable {
    let lexBots: [ConnectClientTypes.LexBotConfig]?
    let nextToken: Swift.String?
}

extension ListBotsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lexBots = "LexBots"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lexBotsContainer = try containerValues.decodeIfPresent([ConnectClientTypes.LexBotConfig?].self, forKey: .lexBots)
        var lexBotsDecoded0:[ConnectClientTypes.LexBotConfig]? = nil
        if let lexBotsContainer = lexBotsContainer {
            lexBotsDecoded0 = [ConnectClientTypes.LexBotConfig]()
            for structure0 in lexBotsContainer {
                if let structure0 = structure0 {
                    lexBotsDecoded0?.append(structure0)
                }
            }
        }
        lexBots = lexBotsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
