// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTagsInputBody: Swift.Equatable {
    let resourceArns: [Swift.String]?
}

extension DescribeTagsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceArns = "ResourceArns"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.resourceArns) {
            struct KeyVal0{struct member{}}
            let resourceArnsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .resourceArns)
            if let resourceArnsWrappedContainer = resourceArnsWrappedContainer {
                let resourceArnsContainer = try resourceArnsWrappedContainer.decodeIfPresent([Swift.String].self, forKey: .member)
                var resourceArnsBuffer:[Swift.String]? = nil
                if let resourceArnsContainer = resourceArnsContainer {
                    resourceArnsBuffer = [Swift.String]()
                    for stringContainer0 in resourceArnsContainer {
                        resourceArnsBuffer?.append(stringContainer0)
                    }
                }
                resourceArns = resourceArnsBuffer
            } else {
                resourceArns = []
            }
        } else {
            resourceArns = nil
        }
    }
}
