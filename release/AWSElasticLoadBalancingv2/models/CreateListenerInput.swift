// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateListenerInput: Swift.Equatable {
    /// [TLS listeners] The name of the Application-Layer Protocol Negotiation (ALPN) policy. You can specify one policy name. The following are the possible values:
    ///
    /// * HTTP1Only
    ///
    /// * HTTP2Only
    ///
    /// * HTTP2Optional
    ///
    /// * HTTP2Preferred
    ///
    /// * None
    ///
    ///
    /// For more information, see [ALPN policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#alpn-policies) in the Network Load Balancers Guide.
    public var alpnPolicy: [Swift.String]?
    /// [HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set CertificateArn to the certificate ARN but do not set IsDefault.
    public var certificates: [ElasticLoadBalancingV2ClientTypes.Certificate]?
    /// The actions for the default rule.
    /// This member is required.
    public var defaultActions: [ElasticLoadBalancingV2ClientTypes.Action]?
    /// The Amazon Resource Name (ARN) of the load balancer.
    /// This member is required.
    public var loadBalancerArn: Swift.String?
    /// The port on which the load balancer is listening. You cannot specify a port for a Gateway Load Balancer.
    public var port: Swift.Int?
    /// The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You canâ€™t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You cannot specify a protocol for a Gateway Load Balancer.
    public var `protocol`: ElasticLoadBalancingV2ClientTypes.ProtocolEnum?
    /// [HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies) in the Application Load Balancers Guide and [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies) in the Network Load Balancers Guide.
    public var sslPolicy: Swift.String?
    /// The tags to assign to the listener.
    public var tags: [ElasticLoadBalancingV2ClientTypes.Tag]?

    public init (
        alpnPolicy: [Swift.String]? = nil,
        certificates: [ElasticLoadBalancingV2ClientTypes.Certificate]? = nil,
        defaultActions: [ElasticLoadBalancingV2ClientTypes.Action]? = nil,
        loadBalancerArn: Swift.String? = nil,
        port: Swift.Int? = nil,
        `protocol`: ElasticLoadBalancingV2ClientTypes.ProtocolEnum? = nil,
        sslPolicy: Swift.String? = nil,
        tags: [ElasticLoadBalancingV2ClientTypes.Tag]? = nil
    )
    {
        self.alpnPolicy = alpnPolicy
        self.certificates = certificates
        self.defaultActions = defaultActions
        self.loadBalancerArn = loadBalancerArn
        self.port = port
        self.`protocol` = `protocol`
        self.sslPolicy = sslPolicy
        self.tags = tags
    }
}
