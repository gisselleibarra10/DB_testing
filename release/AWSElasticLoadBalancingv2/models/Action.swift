// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ElasticLoadBalancingV2ClientTypes {
    /// Information about an action. Each rule must include exactly one of the following types of actions: forward, fixed-response, or redirect, and it must be the last action to be performed.
    public struct Action: Swift.Equatable {
        /// [HTTPS listeners] Information for using Amazon Cognito to authenticate users. Specify only when Type is authenticate-cognito.
        public var authenticateCognitoConfig: ElasticLoadBalancingV2ClientTypes.AuthenticateCognitoActionConfig?
        /// [HTTPS listeners] Information about an identity provider that is compliant with OpenID Connect (OIDC). Specify only when Type is authenticate-oidc.
        public var authenticateOidcConfig: ElasticLoadBalancingV2ClientTypes.AuthenticateOidcActionConfig?
        /// [Application Load Balancer] Information for creating an action that returns a custom HTTP response. Specify only when Type is fixed-response.
        public var fixedResponseConfig: ElasticLoadBalancingV2ClientTypes.FixedResponseActionConfig?
        /// Information for creating an action that distributes requests among one or more target groups. For Network Load Balancers, you can specify a single target group. Specify only when Type is forward. If you specify both ForwardConfig and TargetGroupArn, you can specify only one target group using ForwardConfig and it must be the same target group specified in TargetGroupArn.
        public var forwardConfig: ElasticLoadBalancingV2ClientTypes.ForwardActionConfig?
        /// The order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first.
        public var order: Swift.Int?
        /// [Application Load Balancer] Information for creating a redirect action. Specify only when Type is redirect.
        public var redirectConfig: ElasticLoadBalancingV2ClientTypes.RedirectActionConfig?
        /// The Amazon Resource Name (ARN) of the target group. Specify only when Type is forward and you want to route to a single target group. To route to one or more target groups, use ForwardConfig instead.
        public var targetGroupArn: Swift.String?
        /// The type of action.
        /// This member is required.
        public var type: ElasticLoadBalancingV2ClientTypes.ActionTypeEnum?

        public init (
            authenticateCognitoConfig: ElasticLoadBalancingV2ClientTypes.AuthenticateCognitoActionConfig? = nil,
            authenticateOidcConfig: ElasticLoadBalancingV2ClientTypes.AuthenticateOidcActionConfig? = nil,
            fixedResponseConfig: ElasticLoadBalancingV2ClientTypes.FixedResponseActionConfig? = nil,
            forwardConfig: ElasticLoadBalancingV2ClientTypes.ForwardActionConfig? = nil,
            order: Swift.Int? = nil,
            redirectConfig: ElasticLoadBalancingV2ClientTypes.RedirectActionConfig? = nil,
            targetGroupArn: Swift.String? = nil,
            type: ElasticLoadBalancingV2ClientTypes.ActionTypeEnum? = nil
        )
        {
            self.authenticateCognitoConfig = authenticateCognitoConfig
            self.authenticateOidcConfig = authenticateOidcConfig
            self.fixedResponseConfig = fixedResponseConfig
            self.forwardConfig = forwardConfig
            self.order = order
            self.redirectConfig = redirectConfig
            self.targetGroupArn = targetGroupArn
            self.type = type
        }
    }

}
