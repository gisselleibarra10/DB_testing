// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ElasticLoadBalancingV2ClientTypes {
    public enum ActionTypeEnum: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case authenticateCognito
        case authenticateOidc
        case fixedResponse
        case forward
        case redirect
        case sdkUnknown(Swift.String)

        public static var allCases: [ActionTypeEnum] {
            return [
                .authenticateCognito,
                .authenticateOidc,
                .fixedResponse,
                .forward,
                .redirect,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .authenticateCognito: return "authenticate-cognito"
            case .authenticateOidc: return "authenticate-oidc"
            case .fixedResponse: return "fixed-response"
            case .forward: return "forward"
            case .redirect: return "redirect"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ActionTypeEnum(rawValue: rawValue) ?? ActionTypeEnum.sdkUnknown(rawValue)
        }
    }
}
