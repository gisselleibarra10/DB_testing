// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SetSubnetsInput: Swift.Equatable {
    /// [Network Load Balancers] The type of IP addresses used by the subnets for your load balancer. The possible values are ipv4 (for IPv4 addresses) and dualstack (for IPv4 and IPv6 addresses). You canâ€™t specify dualstack for a load balancer with a UDP or TCP_UDP listener. .
    public var ipAddressType: ElasticLoadBalancingV2ClientTypes.IpAddressType?
    /// The Amazon Resource Name (ARN) of the load balancer.
    /// This member is required.
    public var loadBalancerArn: Swift.String?
    /// The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings. [Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets. [Application Load Balancers on Outposts] You must specify one Outpost subnet. [Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones. [Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet if you need static IP addresses for your internet-facing load balancer. For internal load balancers, you can specify one private IP address per subnet from the IPv4 range of the subnet. For internet-facing load balancer, you can specify one IPv6 address per subnet.
    public var subnetMappings: [ElasticLoadBalancingV2ClientTypes.SubnetMapping]?
    /// The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings. [Application Load Balancers] You must specify subnets from at least two Availability Zones. [Application Load Balancers on Outposts] You must specify one Outpost subnet. [Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones. [Network Load Balancers] You can specify subnets from one or more Availability Zones.
    public var subnets: [Swift.String]?

    public init (
        ipAddressType: ElasticLoadBalancingV2ClientTypes.IpAddressType? = nil,
        loadBalancerArn: Swift.String? = nil,
        subnetMappings: [ElasticLoadBalancingV2ClientTypes.SubnetMapping]? = nil,
        subnets: [Swift.String]? = nil
    )
    {
        self.ipAddressType = ipAddressType
        self.loadBalancerArn = loadBalancerArn
        self.subnetMappings = subnetMappings
        self.subnets = subnets
    }
}
