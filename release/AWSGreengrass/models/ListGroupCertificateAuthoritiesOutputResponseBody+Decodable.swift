// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGroupCertificateAuthoritiesOutputResponseBody: Swift.Equatable {
    let groupCertificateAuthorities: [GreengrassClientTypes.GroupCertificateAuthorityProperties]?
}

extension ListGroupCertificateAuthoritiesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groupCertificateAuthorities = "GroupCertificateAuthorities"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupCertificateAuthoritiesContainer = try containerValues.decodeIfPresent([GreengrassClientTypes.GroupCertificateAuthorityProperties?].self, forKey: .groupCertificateAuthorities)
        var groupCertificateAuthoritiesDecoded0:[GreengrassClientTypes.GroupCertificateAuthorityProperties]? = nil
        if let groupCertificateAuthoritiesContainer = groupCertificateAuthoritiesContainer {
            groupCertificateAuthoritiesDecoded0 = [GreengrassClientTypes.GroupCertificateAuthorityProperties]()
            for structure0 in groupCertificateAuthoritiesContainer {
                if let structure0 = structure0 {
                    groupCertificateAuthoritiesDecoded0?.append(structure0)
                }
            }
        }
        groupCertificateAuthorities = groupCertificateAuthoritiesDecoded0
    }
}
