// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GreengrassClientTypes {
    /// The configuration of the Lambda function.
    public struct FunctionConfiguration: Swift.Equatable {
        /// The expected encoding type of the input payload for the function. The default is ''json''.
        public var encodingType: GreengrassClientTypes.EncodingType?
        /// The environment configuration of the function.
        public var environment: GreengrassClientTypes.FunctionConfigurationEnvironment?
        /// The execution arguments.
        public var execArgs: Swift.String?
        /// The name of the function executable.
        public var executable: Swift.String?
        /// The memory size, in KB, which the function requires. This setting is not applicable and should be cleared when you run the Lambda function without containerization.
        public var memorySize: Swift.Int?
        /// True if the function is pinned. Pinned means the function is long-lived and starts when the core starts.
        public var pinned: Swift.Bool?
        /// The allowed function execution time, after which Lambda should terminate the function. This timeout still applies to pinned Lambda functions for each request.
        public var timeout: Swift.Int?

        public init (
            encodingType: GreengrassClientTypes.EncodingType? = nil,
            environment: GreengrassClientTypes.FunctionConfigurationEnvironment? = nil,
            execArgs: Swift.String? = nil,
            executable: Swift.String? = nil,
            memorySize: Swift.Int? = nil,
            pinned: Swift.Bool? = nil,
            timeout: Swift.Int? = nil
        )
        {
            self.encodingType = encodingType
            self.environment = environment
            self.execArgs = execArgs
            self.executable = executable
            self.memorySize = memorySize
            self.pinned = pinned
            self.timeout = timeout
        }
    }

}
