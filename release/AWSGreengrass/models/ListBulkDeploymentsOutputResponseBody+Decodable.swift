// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBulkDeploymentsOutputResponseBody: Swift.Equatable {
    let bulkDeployments: [GreengrassClientTypes.BulkDeployment]?
    let nextToken: Swift.String?
}

extension ListBulkDeploymentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bulkDeployments = "BulkDeployments"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bulkDeploymentsContainer = try containerValues.decodeIfPresent([GreengrassClientTypes.BulkDeployment?].self, forKey: .bulkDeployments)
        var bulkDeploymentsDecoded0:[GreengrassClientTypes.BulkDeployment]? = nil
        if let bulkDeploymentsContainer = bulkDeploymentsContainer {
            bulkDeploymentsDecoded0 = [GreengrassClientTypes.BulkDeployment]()
            for structure0 in bulkDeploymentsContainer {
                if let structure0 = structure0 {
                    bulkDeploymentsDecoded0?.append(structure0)
                }
            }
        }
        bulkDeployments = bulkDeploymentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
