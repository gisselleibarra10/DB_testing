// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GreengrassClientTypes {
    /// Information about a subscription.
    public struct Subscription: Swift.Equatable {
        /// A descriptive or arbitrary ID for the subscription. This value must be unique within the subscription definition version. Max length is 128 characters with pattern ''[a-zA-Z0-9:_-]+''.
        /// This member is required.
        public var id: Swift.String?
        /// The source of the subscription. Can be a thing ARN, a Lambda function ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or 'GGShadowService'.
        /// This member is required.
        public var source: Swift.String?
        /// The MQTT topic used to route the message.
        /// This member is required.
        public var subject: Swift.String?
        /// Where the message is sent to. Can be a thing ARN, a Lambda function ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or 'GGShadowService'.
        /// This member is required.
        public var target: Swift.String?

        public init (
            id: Swift.String? = nil,
            source: Swift.String? = nil,
            subject: Swift.String? = nil,
            target: Swift.String? = nil
        )
        {
            self.id = id
            self.source = source
            self.subject = subject
            self.target = target
        }
    }

}
