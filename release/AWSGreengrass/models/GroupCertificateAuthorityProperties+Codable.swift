// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GreengrassClientTypes.GroupCertificateAuthorityProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case groupCertificateAuthorityArn = "GroupCertificateAuthorityArn"
        case groupCertificateAuthorityId = "GroupCertificateAuthorityId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let groupCertificateAuthorityArn = self.groupCertificateAuthorityArn {
            try encodeContainer.encode(groupCertificateAuthorityArn, forKey: .groupCertificateAuthorityArn)
        }
        if let groupCertificateAuthorityId = self.groupCertificateAuthorityId {
            try encodeContainer.encode(groupCertificateAuthorityId, forKey: .groupCertificateAuthorityId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupCertificateAuthorityArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groupCertificateAuthorityArn)
        groupCertificateAuthorityArn = groupCertificateAuthorityArnDecoded
        let groupCertificateAuthorityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groupCertificateAuthorityId)
        groupCertificateAuthorityId = groupCertificateAuthorityIdDecoded
    }
}
