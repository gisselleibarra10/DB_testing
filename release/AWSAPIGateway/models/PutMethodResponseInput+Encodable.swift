// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutMethodResponseInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case responseModels
        case responseParameters
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let responseModels = responseModels {
            var responseModelsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .responseModels)
            for (dictKey0, mapofstringtostring0) in responseModels {
                try responseModelsContainer.encode(mapofstringtostring0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let responseParameters = responseParameters {
            var responseParametersContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .responseParameters)
            for (dictKey0, mapofstringtoboolean0) in responseParameters {
                try responseParametersContainer.encode(mapofstringtoboolean0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
