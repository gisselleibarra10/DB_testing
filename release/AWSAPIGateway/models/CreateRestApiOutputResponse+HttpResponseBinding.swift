// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateRestApiOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: CreateRestApiOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.apiKeySource = output.apiKeySource
            self.binaryMediaTypes = output.binaryMediaTypes
            self.createdDate = output.createdDate
            self.description = output.description
            self.disableExecuteApiEndpoint = output.disableExecuteApiEndpoint
            self.endpointConfiguration = output.endpointConfiguration
            self.id = output.id
            self.minimumCompressionSize = output.minimumCompressionSize
            self.name = output.name
            self.policy = output.policy
            self.tags = output.tags
            self.version = output.version
            self.warnings = output.warnings
        } else {
            self.apiKeySource = nil
            self.binaryMediaTypes = nil
            self.createdDate = nil
            self.description = nil
            self.disableExecuteApiEndpoint = false
            self.endpointConfiguration = nil
            self.id = nil
            self.minimumCompressionSize = nil
            self.name = nil
            self.policy = nil
            self.tags = nil
            self.version = nil
            self.warnings = nil
        }
    }
}
