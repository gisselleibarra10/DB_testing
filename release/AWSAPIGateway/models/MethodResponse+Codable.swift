// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApiGatewayClientTypes.MethodResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case responseModels
        case responseParameters
        case statusCode
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let responseModels = responseModels {
            var responseModelsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .responseModels)
            for (dictKey0, mapofstringtostring0) in responseModels {
                try responseModelsContainer.encode(mapofstringtostring0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let responseParameters = responseParameters {
            var responseParametersContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .responseParameters)
            for (dictKey0, mapofstringtoboolean0) in responseParameters {
                try responseParametersContainer.encode(mapofstringtoboolean0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let statusCode = self.statusCode {
            try encodeContainer.encode(statusCode, forKey: .statusCode)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusCode)
        statusCode = statusCodeDecoded
        let responseParametersContainer = try containerValues.decodeIfPresent([Swift.String: Swift.Bool?].self, forKey: .responseParameters)
        var responseParametersDecoded0: [Swift.String:Swift.Bool]? = nil
        if let responseParametersContainer = responseParametersContainer {
            responseParametersDecoded0 = [Swift.String:Swift.Bool]()
            for (key0, nullableboolean0) in responseParametersContainer {
                if let nullableboolean0 = nullableboolean0 {
                    responseParametersDecoded0?[key0] = nullableboolean0
                }
            }
        }
        responseParameters = responseParametersDecoded0
        let responseModelsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .responseModels)
        var responseModelsDecoded0: [Swift.String:Swift.String]? = nil
        if let responseModelsContainer = responseModelsContainer {
            responseModelsDecoded0 = [Swift.String:Swift.String]()
            for (key0, string0) in responseModelsContainer {
                if let string0 = string0 {
                    responseModelsDecoded0?[key0] = string0
                }
            }
        }
        responseModels = responseModelsDecoded0
    }
}
