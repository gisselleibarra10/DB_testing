// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents a put integration response request.
public struct PutIntegrationResponseInput: Swift.Equatable {
    /// Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors: If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.
    public var contentHandling: ApiGatewayClientTypes.ContentHandlingStrategy?
    /// Specifies a put integration response request's HTTP method.
    /// This member is required.
    public var httpMethod: Swift.String?
    /// Specifies a put integration response request's resource identifier.
    /// This member is required.
    public var resourceId: Swift.String?
    /// A key-value map specifying response parameters that are passed to the method response from the back end. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name must be a valid and unique response header name and JSON-expression a valid JSON expression without the $ prefix.
    public var responseParameters: [Swift.String:Swift.String]?
    /// Specifies a put integration response's templates.
    public var responseTemplates: [Swift.String:Swift.String]?
    /// The string identifier of the associated RestApi.
    /// This member is required.
    public var restApiId: Swift.String?
    /// Specifies the selection pattern of a put integration response.
    public var selectionPattern: Swift.String?
    /// Specifies the status code that is used to map the integration response to an existing MethodResponse.
    /// This member is required.
    public var statusCode: Swift.String?

    public init (
        contentHandling: ApiGatewayClientTypes.ContentHandlingStrategy? = nil,
        httpMethod: Swift.String? = nil,
        resourceId: Swift.String? = nil,
        responseParameters: [Swift.String:Swift.String]? = nil,
        responseTemplates: [Swift.String:Swift.String]? = nil,
        restApiId: Swift.String? = nil,
        selectionPattern: Swift.String? = nil,
        statusCode: Swift.String? = nil
    )
    {
        self.contentHandling = contentHandling
        self.httpMethod = httpMethod
        self.resourceId = resourceId
        self.responseParameters = responseParameters
        self.responseTemplates = responseTemplates
        self.restApiId = restApiId
        self.selectionPattern = selectionPattern
        self.statusCode = statusCode
    }
}
