// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Represents a client certificate used to configure client-side SSL authentication while sending requests to the integration endpoint.
public struct GenerateClientCertificateOutputResponse: Swift.Equatable {
    /// The identifier of the client certificate.
    public var clientCertificateId: Swift.String?
    /// The timestamp when the client certificate was created.
    public var createdDate: ClientRuntime.Date?
    /// The description of the client certificate.
    public var description: Swift.String?
    /// The timestamp when the client certificate will expire.
    public var expirationDate: ClientRuntime.Date?
    /// The PEM-encoded public key of the client certificate, which can be used to configure certificate authentication in the integration endpoint .
    public var pemEncodedCertificate: Swift.String?
    /// The collection of tags. Each tag element is associated with a given resource.
    public var tags: [Swift.String:Swift.String]?

    public init (
        clientCertificateId: Swift.String? = nil,
        createdDate: ClientRuntime.Date? = nil,
        description: Swift.String? = nil,
        expirationDate: ClientRuntime.Date? = nil,
        pemEncodedCertificate: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.clientCertificateId = clientCertificateId
        self.createdDate = createdDate
        self.description = description
        self.expirationDate = expirationDate
        self.pemEncodedCertificate = pemEncodedCertificate
        self.tags = tags
    }
}
