// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetResourceOutputResponseBody: Swift.Equatable {
    let id: Swift.String?
    let parentId: Swift.String?
    let pathPart: Swift.String?
    let path: Swift.String?
    let resourceMethods: [Swift.String:ApiGatewayClientTypes.Method]?
}

extension GetResourceOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case id
        case parentId
        case path
        case pathPart
        case resourceMethods
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let parentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parentId)
        parentId = parentIdDecoded
        let pathPartDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pathPart)
        pathPart = pathPartDecoded
        let pathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .path)
        path = pathDecoded
        let resourceMethodsContainer = try containerValues.decodeIfPresent([Swift.String: ApiGatewayClientTypes.Method?].self, forKey: .resourceMethods)
        var resourceMethodsDecoded0: [Swift.String:ApiGatewayClientTypes.Method]? = nil
        if let resourceMethodsContainer = resourceMethodsContainer {
            resourceMethodsDecoded0 = [Swift.String:ApiGatewayClientTypes.Method]()
            for (key0, method0) in resourceMethodsContainer {
                if let method0 = method0 {
                    resourceMethodsDecoded0?[key0] = method0
                }
            }
        }
        resourceMethods = resourceMethodsDecoded0
    }
}
