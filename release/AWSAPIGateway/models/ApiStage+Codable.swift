// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApiGatewayClientTypes.ApiStage: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case apiId
        case stage
        case throttle
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let apiId = self.apiId {
            try encodeContainer.encode(apiId, forKey: .apiId)
        }
        if let stage = self.stage {
            try encodeContainer.encode(stage, forKey: .stage)
        }
        if let throttle = throttle {
            var throttleContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .throttle)
            for (dictKey0, mapofapistagethrottlesettings0) in throttle {
                try throttleContainer.encode(mapofapistagethrottlesettings0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let apiIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .apiId)
        apiId = apiIdDecoded
        let stageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stage)
        stage = stageDecoded
        let throttleContainer = try containerValues.decodeIfPresent([Swift.String: ApiGatewayClientTypes.ThrottleSettings?].self, forKey: .throttle)
        var throttleDecoded0: [Swift.String:ApiGatewayClientTypes.ThrottleSettings]? = nil
        if let throttleContainer = throttleContainer {
            throttleDecoded0 = [Swift.String:ApiGatewayClientTypes.ThrottleSettings]()
            for (key0, throttlesettings0) in throttleContainer {
                if let throttlesettings0 = throttlesettings0 {
                    throttleDecoded0?[key0] = throttlesettings0
                }
            }
        }
        throttle = throttleDecoded0
    }
}
