// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateRequestValidatorInputBody: Swift.Equatable {
    let name: Swift.String?
    let validateRequestBody: Swift.Bool
    let validateRequestParameters: Swift.Bool
}

extension CreateRequestValidatorInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name
        case validateRequestBody
        case validateRequestParameters
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let validateRequestBodyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .validateRequestBody) ?? false
        validateRequestBody = validateRequestBodyDecoded
        let validateRequestParametersDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .validateRequestParameters) ?? false
        validateRequestParameters = validateRequestParametersDecoded
    }
}
