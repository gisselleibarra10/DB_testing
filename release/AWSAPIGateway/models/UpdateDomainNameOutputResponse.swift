// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Represents a custom domain name as a user-friendly host name of an API (RestApi).
public struct UpdateDomainNameOutputResponse: Swift.Equatable {
    /// The reference to an AWS-managed certificate that will be used by edge-optimized endpoint for this domain name. AWS Certificate Manager is the only supported source.
    public var certificateArn: Swift.String?
    /// The name of the certificate that will be used by edge-optimized endpoint for this domain name.
    public var certificateName: Swift.String?
    /// The timestamp when the certificate that was used by edge-optimized endpoint for this domain name was uploaded.
    public var certificateUploadDate: ClientRuntime.Date?
    /// The domain name of the Amazon CloudFront distribution associated with this custom domain name for an edge-optimized endpoint. You set up this association when adding a DNS record pointing the custom domain name to this distribution name. For more information about CloudFront distributions, see the Amazon CloudFront documentation.
    public var distributionDomainName: Swift.String?
    /// The region-agnostic Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The valid value is Z2FDTNDATAQYW2 for all the regions. For more information, see Set up a Regional Custom Domain Name and AWS Regions and Endpoints for API Gateway.
    public var distributionHostedZoneId: Swift.String?
    /// The custom domain name as an API host name, for example, my-api.example.com.
    public var domainName: Swift.String?
    /// The status of the DomainName migration. The valid values are AVAILABLE and UPDATING. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated.
    public var domainNameStatus: ApiGatewayClientTypes.DomainNameStatus?
    /// An optional text message containing detailed information about status of the DomainName migration.
    public var domainNameStatusMessage: Swift.String?
    /// The endpoint configuration of this DomainName showing the endpoint types of the domain name.
    public var endpointConfiguration: ApiGatewayClientTypes.EndpointConfiguration?
    /// The mutual TLS authentication configuration for a custom domain name. If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API.
    public var mutualTlsAuthentication: ApiGatewayClientTypes.MutualTlsAuthentication?
    /// The ARN of the public certificate issued by ACM to validate ownership of your custom domain. Only required when configuring mutual TLS and using an ACM imported or private CA certificate ARN as the regionalCertificateArn.
    public var ownershipVerificationCertificateArn: Swift.String?
    /// The reference to an AWS-managed certificate that will be used for validating the regional domain name. AWS Certificate Manager is the only supported source.
    public var regionalCertificateArn: Swift.String?
    /// The name of the certificate that will be used for validating the regional domain name.
    public var regionalCertificateName: Swift.String?
    /// The domain name associated with the regional endpoint for this custom domain name. You set up this association by adding a DNS record that points the custom domain name to this regional domain name. The regional domain name is returned by API Gateway when you create a regional endpoint.
    public var regionalDomainName: Swift.String?
    /// The region-specific Amazon Route 53 Hosted Zone ID of the regional endpoint. For more information, see Set up a Regional Custom Domain Name and AWS Regions and Endpoints for API Gateway.
    public var regionalHostedZoneId: Swift.String?
    /// The Transport Layer Security (TLS) version + cipher suite for this DomainName. The valid values are TLS_1_0 and TLS_1_2.
    public var securityPolicy: ApiGatewayClientTypes.SecurityPolicy?
    /// The collection of tags. Each tag element is associated with a given resource.
    public var tags: [Swift.String:Swift.String]?

    public init (
        certificateArn: Swift.String? = nil,
        certificateName: Swift.String? = nil,
        certificateUploadDate: ClientRuntime.Date? = nil,
        distributionDomainName: Swift.String? = nil,
        distributionHostedZoneId: Swift.String? = nil,
        domainName: Swift.String? = nil,
        domainNameStatus: ApiGatewayClientTypes.DomainNameStatus? = nil,
        domainNameStatusMessage: Swift.String? = nil,
        endpointConfiguration: ApiGatewayClientTypes.EndpointConfiguration? = nil,
        mutualTlsAuthentication: ApiGatewayClientTypes.MutualTlsAuthentication? = nil,
        ownershipVerificationCertificateArn: Swift.String? = nil,
        regionalCertificateArn: Swift.String? = nil,
        regionalCertificateName: Swift.String? = nil,
        regionalDomainName: Swift.String? = nil,
        regionalHostedZoneId: Swift.String? = nil,
        securityPolicy: ApiGatewayClientTypes.SecurityPolicy? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.certificateArn = certificateArn
        self.certificateName = certificateName
        self.certificateUploadDate = certificateUploadDate
        self.distributionDomainName = distributionDomainName
        self.distributionHostedZoneId = distributionHostedZoneId
        self.domainName = domainName
        self.domainNameStatus = domainNameStatus
        self.domainNameStatusMessage = domainNameStatusMessage
        self.endpointConfiguration = endpointConfiguration
        self.mutualTlsAuthentication = mutualTlsAuthentication
        self.ownershipVerificationCertificateArn = ownershipVerificationCertificateArn
        self.regionalCertificateArn = regionalCertificateArn
        self.regionalCertificateName = regionalCertificateName
        self.regionalDomainName = regionalDomainName
        self.regionalHostedZoneId = regionalHostedZoneId
        self.securityPolicy = securityPolicy
        self.tags = tags
    }
}
