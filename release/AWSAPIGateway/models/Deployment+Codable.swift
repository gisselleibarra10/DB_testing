// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApiGatewayClientTypes.Deployment: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case apiSummary
        case createdDate
        case description
        case id
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let apiSummary = apiSummary {
            var apiSummaryContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .apiSummary)
            for (dictKey0, pathtomapofmethodsnapshot0) in apiSummary {
                try apiSummaryContainer.encode(pathtomapofmethodsnapshot0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let createdDate = self.createdDate {
            try encodeContainer.encode(createdDate.timeIntervalSince1970, forKey: .createdDate)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let createdDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdDate)
        createdDate = createdDateDecoded
        let apiSummaryContainer = try containerValues.decodeIfPresent([Swift.String: [Swift.String: ApiGatewayClientTypes.MethodSnapshot?]?].self, forKey: .apiSummary)
        var apiSummaryDecoded0: [Swift.String:[Swift.String:ApiGatewayClientTypes.MethodSnapshot]]? = nil
        if let apiSummaryContainer = apiSummaryContainer {
            apiSummaryDecoded0 = [Swift.String:[Swift.String:ApiGatewayClientTypes.MethodSnapshot]]()
            for (key0, mapofmethodsnapshot0) in apiSummaryContainer {
                var mapofmethodsnapshot0Decoded0: [Swift.String: ApiGatewayClientTypes.MethodSnapshot]? = nil
                if let mapofmethodsnapshot0 = mapofmethodsnapshot0 {
                    mapofmethodsnapshot0Decoded0 = [Swift.String: ApiGatewayClientTypes.MethodSnapshot]()
                    for (key1, methodsnapshot1) in mapofmethodsnapshot0 {
                        if let methodsnapshot1 = methodsnapshot1 {
                            mapofmethodsnapshot0Decoded0?[key1] = methodsnapshot1
                        }
                    }
                }
                apiSummaryDecoded0?[key0] = mapofmethodsnapshot0Decoded0
            }
        }
        apiSummary = apiSummaryDecoded0
    }
}
