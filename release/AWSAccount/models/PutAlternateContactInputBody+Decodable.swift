// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutAlternateContactInputBody: Swift.Equatable {
    let name: Swift.String?
    let title: Swift.String?
    let emailAddress: Swift.String?
    let phoneNumber: Swift.String?
    let alternateContactType: AccountClientTypes.AlternateContactType?
    let accountId: Swift.String?
}

extension PutAlternateContactInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountId = "AccountId"
        case alternateContactType = "AlternateContactType"
        case emailAddress = "EmailAddress"
        case name = "Name"
        case phoneNumber = "PhoneNumber"
        case title = "Title"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let titleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .title)
        title = titleDecoded
        let emailAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .emailAddress)
        emailAddress = emailAddressDecoded
        let phoneNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .phoneNumber)
        phoneNumber = phoneNumberDecoded
        let alternateContactTypeDecoded = try containerValues.decodeIfPresent(AccountClientTypes.AlternateContactType.self, forKey: .alternateContactType)
        alternateContactType = alternateContactTypeDecoded
        let accountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountId)
        accountId = accountIdDecoded
    }
}
