// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AccountClientTypes.ContactInformation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addressLine1 = "AddressLine1"
        case addressLine2 = "AddressLine2"
        case addressLine3 = "AddressLine3"
        case city = "City"
        case companyName = "CompanyName"
        case countryCode = "CountryCode"
        case districtOrCounty = "DistrictOrCounty"
        case fullName = "FullName"
        case phoneNumber = "PhoneNumber"
        case postalCode = "PostalCode"
        case stateOrRegion = "StateOrRegion"
        case websiteUrl = "WebsiteUrl"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let addressLine1 = self.addressLine1 {
            try encodeContainer.encode(addressLine1, forKey: .addressLine1)
        }
        if let addressLine2 = self.addressLine2 {
            try encodeContainer.encode(addressLine2, forKey: .addressLine2)
        }
        if let addressLine3 = self.addressLine3 {
            try encodeContainer.encode(addressLine3, forKey: .addressLine3)
        }
        if let city = self.city {
            try encodeContainer.encode(city, forKey: .city)
        }
        if let companyName = self.companyName {
            try encodeContainer.encode(companyName, forKey: .companyName)
        }
        if let countryCode = self.countryCode {
            try encodeContainer.encode(countryCode, forKey: .countryCode)
        }
        if let districtOrCounty = self.districtOrCounty {
            try encodeContainer.encode(districtOrCounty, forKey: .districtOrCounty)
        }
        if let fullName = self.fullName {
            try encodeContainer.encode(fullName, forKey: .fullName)
        }
        if let phoneNumber = self.phoneNumber {
            try encodeContainer.encode(phoneNumber, forKey: .phoneNumber)
        }
        if let postalCode = self.postalCode {
            try encodeContainer.encode(postalCode, forKey: .postalCode)
        }
        if let stateOrRegion = self.stateOrRegion {
            try encodeContainer.encode(stateOrRegion, forKey: .stateOrRegion)
        }
        if let websiteUrl = self.websiteUrl {
            try encodeContainer.encode(websiteUrl, forKey: .websiteUrl)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fullNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fullName)
        fullName = fullNameDecoded
        let addressLine1Decoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .addressLine1)
        addressLine1 = addressLine1Decoded
        let addressLine2Decoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .addressLine2)
        addressLine2 = addressLine2Decoded
        let addressLine3Decoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .addressLine3)
        addressLine3 = addressLine3Decoded
        let cityDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .city)
        city = cityDecoded
        let stateOrRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stateOrRegion)
        stateOrRegion = stateOrRegionDecoded
        let districtOrCountyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .districtOrCounty)
        districtOrCounty = districtOrCountyDecoded
        let postalCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .postalCode)
        postalCode = postalCodeDecoded
        let countryCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .countryCode)
        countryCode = countryCodeDecoded
        let phoneNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .phoneNumber)
        phoneNumber = phoneNumberDecoded
        let companyNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .companyName)
        companyName = companyNameDecoded
        let websiteUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .websiteUrl)
        websiteUrl = websiteUrlDecoded
    }
}
