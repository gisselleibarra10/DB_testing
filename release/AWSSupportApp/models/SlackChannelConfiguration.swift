// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SupportAppClientTypes {
    /// The configuration for a Slack channel that you added to an Amazon Web Services account.
    public struct SlackChannelConfiguration: Swift.Equatable {
        /// The channel ID in Slack. This ID identifies a channel within a Slack workspace.
        /// This member is required.
        public var channelId: Swift.String?
        /// The name of the Slack channel that you configured with the Amazon Web Services Support App.
        public var channelName: Swift.String?
        /// The Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations on Amazon Web Services. For more information, see [Managing access to the Amazon Web Services Support App](https://docs.aws.amazon.com/awssupport/latest/user/support-app-permissions.html) in the Amazon Web Services Support User Guide.
        public var channelRoleArn: Swift.String?
        /// Whether you want to get notified when a support case has a new correspondence.
        public var notifyOnAddCorrespondenceToCase: Swift.Bool?
        /// The case severity for a support case that you want to receive notifications.
        public var notifyOnCaseSeverity: SupportAppClientTypes.NotificationSeverityLevel?
        /// Whether you want to get notified when a support case is created or reopened.
        public var notifyOnCreateOrReopenCase: Swift.Bool?
        /// Whether you want to get notified when a support case is resolved.
        public var notifyOnResolveCase: Swift.Bool?
        /// The team ID in Slack. This ID uniquely identifies a Slack workspace.
        /// This member is required.
        public var teamId: Swift.String?

        public init (
            channelId: Swift.String? = nil,
            channelName: Swift.String? = nil,
            channelRoleArn: Swift.String? = nil,
            notifyOnAddCorrespondenceToCase: Swift.Bool? = nil,
            notifyOnCaseSeverity: SupportAppClientTypes.NotificationSeverityLevel? = nil,
            notifyOnCreateOrReopenCase: Swift.Bool? = nil,
            notifyOnResolveCase: Swift.Bool? = nil,
            teamId: Swift.String? = nil
        )
        {
            self.channelId = channelId
            self.channelName = channelName
            self.channelRoleArn = channelRoleArn
            self.notifyOnAddCorrespondenceToCase = notifyOnAddCorrespondenceToCase
            self.notifyOnCaseSeverity = notifyOnCaseSeverity
            self.notifyOnCreateOrReopenCase = notifyOnCreateOrReopenCase
            self.notifyOnResolveCase = notifyOnResolveCase
            self.teamId = teamId
        }
    }

}
