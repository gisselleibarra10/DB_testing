// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeartifactClientTypes {
    /// Information about a domain. A domain is a container for repositories. When you create a domain, it is empty until you add one or more repositories.
    public struct DomainDescription: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the domain.
        public var arn: Swift.String?
        /// The total size of all assets in the domain.
        public var assetSizeBytes: Swift.Int
        /// A timestamp that represents the date and time the domain was created.
        public var createdTime: ClientRuntime.Date?
        /// The ARN of an Key Management Service (KMS) key associated with a domain.
        public var encryptionKey: Swift.String?
        /// The name of the domain.
        public var name: Swift.String?
        /// The Amazon Web Services account ID that owns the domain.
        public var owner: Swift.String?
        /// The number of repositories in the domain.
        public var repositoryCount: Swift.Int
        /// The Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to store package assets in the domain.
        public var s3BucketArn: Swift.String?
        /// The current status of a domain.
        public var status: CodeartifactClientTypes.DomainStatus?

        public init (
            arn: Swift.String? = nil,
            assetSizeBytes: Swift.Int = 0,
            createdTime: ClientRuntime.Date? = nil,
            encryptionKey: Swift.String? = nil,
            name: Swift.String? = nil,
            owner: Swift.String? = nil,
            repositoryCount: Swift.Int = 0,
            s3BucketArn: Swift.String? = nil,
            status: CodeartifactClientTypes.DomainStatus? = nil
        )
        {
            self.arn = arn
            self.assetSizeBytes = assetSizeBytes
            self.createdTime = createdTime
            self.encryptionKey = encryptionKey
            self.name = name
            self.owner = owner
            self.repositoryCount = repositoryCount
            self.s3BucketArn = s3BucketArn
            self.status = status
        }
    }

}
