// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutDomainPermissionsPolicyInputBody: Swift.Equatable {
    let domain: Swift.String?
    let domainOwner: Swift.String?
    let policyRevision: Swift.String?
    let policyDocument: Swift.String?
}

extension PutDomainPermissionsPolicyInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domain
        case domainOwner
        case policyDocument
        case policyRevision
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domain)
        domain = domainDecoded
        let domainOwnerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainOwner)
        domainOwner = domainOwnerDecoded
        let policyRevisionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyRevision)
        policyRevision = policyRevisionDecoded
        let policyDocumentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyDocument)
        policyDocument = policyDocumentDecoded
    }
}
