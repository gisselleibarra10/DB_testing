// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeletePackageVersionsInputBody: Swift.Equatable {
    let versions: [Swift.String]?
    let expectedStatus: CodeartifactClientTypes.PackageVersionStatus?
}

extension DeletePackageVersionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case expectedStatus
        case versions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let versionsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .versions)
        var versionsDecoded0:[Swift.String]? = nil
        if let versionsContainer = versionsContainer {
            versionsDecoded0 = [Swift.String]()
            for string0 in versionsContainer {
                if let string0 = string0 {
                    versionsDecoded0?.append(string0)
                }
            }
        }
        versions = versionsDecoded0
        let expectedStatusDecoded = try containerValues.decodeIfPresent(CodeartifactClientTypes.PackageVersionStatus.self, forKey: .expectedStatus)
        expectedStatus = expectedStatusDecoded
    }
}
