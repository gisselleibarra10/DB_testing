// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetPackageVersionReadmeOutputResponseBody: Swift.Equatable {
    let format: CodeartifactClientTypes.PackageFormat?
    let namespace: Swift.String?
    let package: Swift.String?
    let version: Swift.String?
    let versionRevision: Swift.String?
    let readme: Swift.String?
}

extension GetPackageVersionReadmeOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case format
        case namespace
        case package
        case readme
        case version
        case versionRevision
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let formatDecoded = try containerValues.decodeIfPresent(CodeartifactClientTypes.PackageFormat.self, forKey: .format)
        format = formatDecoded
        let namespaceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .namespace)
        namespace = namespaceDecoded
        let packageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .package)
        package = packageDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
        let versionRevisionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .versionRevision)
        versionRevision = versionRevisionDecoded
        let readmeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .readme)
        readme = readmeDecoded
    }
}
