// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDiscoverersOutputResponseBody: Swift.Equatable {
    let discoverers: [SchemasClientTypes.DiscovererSummary]?
    let nextToken: Swift.String?
}

extension ListDiscoverersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case discoverers = "Discoverers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let discoverersContainer = try containerValues.decodeIfPresent([SchemasClientTypes.DiscovererSummary?].self, forKey: .discoverers)
        var discoverersDecoded0:[SchemasClientTypes.DiscovererSummary]? = nil
        if let discoverersContainer = discoverersContainer {
            discoverersDecoded0 = [SchemasClientTypes.DiscovererSummary]()
            for structure0 in discoverersContainer {
                if let structure0 = structure0 {
                    discoverersDecoded0?.append(structure0)
                }
            }
        }
        discoverers = discoverersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
