// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AmplifyClientTypes {
    /// Describes a domain association that associates a custom domain with an Amplify app.
    public struct DomainAssociation: Swift.Equatable {
        /// Sets branch patterns for automatic subdomain creation.
        public var autoSubDomainCreationPatterns: [Swift.String]?
        /// The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains.
        public var autoSubDomainIAMRole: Swift.String?
        /// The DNS record for certificate verification.
        public var certificateVerificationDNSRecord: Swift.String?
        /// The Amazon Resource Name (ARN) for the domain association.
        /// This member is required.
        public var domainAssociationArn: Swift.String?
        /// The name of the domain.
        /// This member is required.
        public var domainName: Swift.String?
        /// The current status of the domain association.
        /// This member is required.
        public var domainStatus: AmplifyClientTypes.DomainStatus?
        /// Enables the automated creation of subdomains for branches.
        /// This member is required.
        public var enableAutoSubDomain: Swift.Bool?
        /// The reason for the current status of the domain association.
        /// This member is required.
        public var statusReason: Swift.String?
        /// The subdomains for the domain association.
        /// This member is required.
        public var subDomains: [AmplifyClientTypes.SubDomain]?

        public init (
            autoSubDomainCreationPatterns: [Swift.String]? = nil,
            autoSubDomainIAMRole: Swift.String? = nil,
            certificateVerificationDNSRecord: Swift.String? = nil,
            domainAssociationArn: Swift.String? = nil,
            domainName: Swift.String? = nil,
            domainStatus: AmplifyClientTypes.DomainStatus? = nil,
            enableAutoSubDomain: Swift.Bool? = nil,
            statusReason: Swift.String? = nil,
            subDomains: [AmplifyClientTypes.SubDomain]? = nil
        )
        {
            self.autoSubDomainCreationPatterns = autoSubDomainCreationPatterns
            self.autoSubDomainIAMRole = autoSubDomainIAMRole
            self.certificateVerificationDNSRecord = certificateVerificationDNSRecord
            self.domainAssociationArn = domainAssociationArn
            self.domainName = domainName
            self.domainStatus = domainStatus
            self.enableAutoSubDomain = enableAutoSubDomain
            self.statusReason = statusReason
            self.subDomains = subDomains
        }
    }

}
