// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyClientTypes {
    /// Describes an execution step, for an execution job, for an Amplify app.
    public struct Step: Swift.Equatable {
        /// The URL to the artifact for the execution step.
        public var artifactsUrl: Swift.String?
        /// The context for the current step. Includes a build image if the step is build.
        public var context: Swift.String?
        /// The end date and time of the execution step.
        /// This member is required.
        public var endTime: ClientRuntime.Date?
        /// The URL to the logs for the execution step.
        public var logUrl: Swift.String?
        /// The list of screenshot URLs for the execution step, if relevant.
        public var screenshots: [Swift.String:Swift.String]?
        /// The start date and time of the execution step.
        /// This member is required.
        public var startTime: ClientRuntime.Date?
        /// The status of the execution step.
        /// This member is required.
        public var status: AmplifyClientTypes.JobStatus?
        /// The reason for the current step status.
        public var statusReason: Swift.String?
        /// The name of the execution step.
        /// This member is required.
        public var stepName: Swift.String?
        /// The URL to the test artifact for the execution step.
        public var testArtifactsUrl: Swift.String?
        /// The URL to the test configuration for the execution step.
        public var testConfigUrl: Swift.String?

        public init (
            artifactsUrl: Swift.String? = nil,
            context: Swift.String? = nil,
            endTime: ClientRuntime.Date? = nil,
            logUrl: Swift.String? = nil,
            screenshots: [Swift.String:Swift.String]? = nil,
            startTime: ClientRuntime.Date? = nil,
            status: AmplifyClientTypes.JobStatus? = nil,
            statusReason: Swift.String? = nil,
            stepName: Swift.String? = nil,
            testArtifactsUrl: Swift.String? = nil,
            testConfigUrl: Swift.String? = nil
        )
        {
            self.artifactsUrl = artifactsUrl
            self.context = context
            self.endTime = endTime
            self.logUrl = logUrl
            self.screenshots = screenshots
            self.startTime = startTime
            self.status = status
            self.statusReason = statusReason
            self.stepName = stepName
            self.testArtifactsUrl = testArtifactsUrl
            self.testConfigUrl = testConfigUrl
        }
    }

}
