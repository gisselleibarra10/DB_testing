// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyClientTypes.ProductionBranch: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case branchName
        case lastDeployTime
        case status
        case thumbnailUrl
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let branchName = self.branchName {
            try encodeContainer.encode(branchName, forKey: .branchName)
        }
        if let lastDeployTime = self.lastDeployTime {
            try encodeContainer.encode(lastDeployTime.timeIntervalSince1970, forKey: .lastDeployTime)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let thumbnailUrl = self.thumbnailUrl {
            try encodeContainer.encode(thumbnailUrl, forKey: .thumbnailUrl)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lastDeployTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastDeployTime)
        lastDeployTime = lastDeployTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let thumbnailUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thumbnailUrl)
        thumbnailUrl = thumbnailUrlDecoded
        let branchNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .branchName)
        branchName = branchNameDecoded
    }
}
