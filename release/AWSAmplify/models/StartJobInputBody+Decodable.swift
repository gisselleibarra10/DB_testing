// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartJobInputBody: Swift.Equatable {
    let jobId: Swift.String?
    let jobType: AmplifyClientTypes.JobType?
    let jobReason: Swift.String?
    let commitId: Swift.String?
    let commitMessage: Swift.String?
    let commitTime: ClientRuntime.Date?
}

extension StartJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case commitId
        case commitMessage
        case commitTime
        case jobId
        case jobReason
        case jobType
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobId)
        jobId = jobIdDecoded
        let jobTypeDecoded = try containerValues.decodeIfPresent(AmplifyClientTypes.JobType.self, forKey: .jobType)
        jobType = jobTypeDecoded
        let jobReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobReason)
        jobReason = jobReasonDecoded
        let commitIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .commitId)
        commitId = commitIdDecoded
        let commitMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .commitMessage)
        commitMessage = commitMessageDecoded
        let commitTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .commitTime)
        commitTime = commitTimeDecoded
    }
}
