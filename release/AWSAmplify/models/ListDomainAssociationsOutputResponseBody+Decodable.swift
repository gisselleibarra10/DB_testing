// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainAssociationsOutputResponseBody: Swift.Equatable {
    let domainAssociations: [AmplifyClientTypes.DomainAssociation]?
    let nextToken: Swift.String?
}

extension ListDomainAssociationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainAssociations
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainAssociationsContainer = try containerValues.decodeIfPresent([AmplifyClientTypes.DomainAssociation?].self, forKey: .domainAssociations)
        var domainAssociationsDecoded0:[AmplifyClientTypes.DomainAssociation]? = nil
        if let domainAssociationsContainer = domainAssociationsContainer {
            domainAssociationsDecoded0 = [AmplifyClientTypes.DomainAssociation]()
            for structure0 in domainAssociationsContainer {
                if let structure0 = structure0 {
                    domainAssociationsDecoded0?.append(structure0)
                }
            }
        }
        domainAssociations = domainAssociationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
