// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AmplifyClientTypes.Job: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case steps
        case summary
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let steps = steps {
            var stepsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .steps)
            for steps0 in steps {
                try stepsContainer.encode(steps0)
            }
        }
        if let summary = self.summary {
            try encodeContainer.encode(summary, forKey: .summary)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let summaryDecoded = try containerValues.decodeIfPresent(AmplifyClientTypes.JobSummary.self, forKey: .summary)
        summary = summaryDecoded
        let stepsContainer = try containerValues.decodeIfPresent([AmplifyClientTypes.Step?].self, forKey: .steps)
        var stepsDecoded0:[AmplifyClientTypes.Step]? = nil
        if let stepsContainer = stepsContainer {
            stepsDecoded0 = [AmplifyClientTypes.Step]()
            for structure0 in stepsContainer {
                if let structure0 = structure0 {
                    stepsDecoded0?.append(structure0)
                }
            }
        }
        steps = stepsDecoded0
    }
}
