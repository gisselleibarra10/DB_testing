// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDeploymentOutputResponseBody: Swift.Equatable {
    let jobId: Swift.String?
    let fileUploadUrls: [Swift.String:Swift.String]?
    let zipUploadUrl: Swift.String?
}

extension CreateDeploymentOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fileUploadUrls
        case jobId
        case zipUploadUrl
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobId)
        jobId = jobIdDecoded
        let fileUploadUrlsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .fileUploadUrls)
        var fileUploadUrlsDecoded0: [Swift.String:Swift.String]? = nil
        if let fileUploadUrlsContainer = fileUploadUrlsContainer {
            fileUploadUrlsDecoded0 = [Swift.String:Swift.String]()
            for (key0, uploadurl0) in fileUploadUrlsContainer {
                if let uploadurl0 = uploadurl0 {
                    fileUploadUrlsDecoded0?[key0] = uploadurl0
                }
            }
        }
        fileUploadUrls = fileUploadUrlsDecoded0
        let zipUploadUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .zipUploadUrl)
        zipUploadUrl = zipUploadUrlDecoded
    }
}
