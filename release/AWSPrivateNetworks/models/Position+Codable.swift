// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PrivateNetworksClientTypes.Position: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case elevation
        case elevationReference
        case elevationUnit
        case latitude
        case longitude
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let elevation = self.elevation {
            try encodeContainer.encode(elevation, forKey: .elevation)
        }
        if let elevationReference = self.elevationReference {
            try encodeContainer.encode(elevationReference.rawValue, forKey: .elevationReference)
        }
        if let elevationUnit = self.elevationUnit {
            try encodeContainer.encode(elevationUnit.rawValue, forKey: .elevationUnit)
        }
        if let latitude = self.latitude {
            try encodeContainer.encode(latitude, forKey: .latitude)
        }
        if let longitude = self.longitude {
            try encodeContainer.encode(longitude, forKey: .longitude)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let latitudeDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .latitude)
        latitude = latitudeDecoded
        let longitudeDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .longitude)
        longitude = longitudeDecoded
        let elevationDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .elevation)
        elevation = elevationDecoded
        let elevationUnitDecoded = try containerValues.decodeIfPresent(PrivateNetworksClientTypes.ElevationUnit.self, forKey: .elevationUnit)
        elevationUnit = elevationUnitDecoded
        let elevationReferenceDecoded = try containerValues.decodeIfPresent(PrivateNetworksClientTypes.ElevationReference.self, forKey: .elevationReference)
        elevationReference = elevationReferenceDecoded
    }
}
