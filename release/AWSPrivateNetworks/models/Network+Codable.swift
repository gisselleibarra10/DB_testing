// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PrivateNetworksClientTypes.Network: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdAt
        case description
        case networkArn
        case networkName
        case status
        case statusReason
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdAt = self.createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let networkArn = self.networkArn {
            try encodeContainer.encode(networkArn, forKey: .networkArn)
        }
        if let networkName = self.networkName {
            try encodeContainer.encode(networkName, forKey: .networkName)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let statusReason = self.statusReason {
            try encodeContainer.encode(statusReason, forKey: .statusReason)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let networkArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkArn)
        networkArn = networkArnDecoded
        let networkNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkName)
        networkName = networkNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let statusDecoded = try containerValues.decodeIfPresent(PrivateNetworksClientTypes.NetworkStatus.self, forKey: .status)
        status = statusDecoded
        let statusReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusReason)
        statusReason = statusReasonDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
    }
}
