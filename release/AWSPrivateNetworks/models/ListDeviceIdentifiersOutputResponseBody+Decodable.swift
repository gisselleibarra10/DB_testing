// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeviceIdentifiersOutputResponseBody: Swift.Equatable {
    let deviceIdentifiers: [PrivateNetworksClientTypes.DeviceIdentifier]?
    let nextToken: Swift.String?
}

extension ListDeviceIdentifiersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceIdentifiers
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceIdentifiersContainer = try containerValues.decodeIfPresent([PrivateNetworksClientTypes.DeviceIdentifier?].self, forKey: .deviceIdentifiers)
        var deviceIdentifiersDecoded0:[PrivateNetworksClientTypes.DeviceIdentifier]? = nil
        if let deviceIdentifiersContainer = deviceIdentifiersContainer {
            deviceIdentifiersDecoded0 = [PrivateNetworksClientTypes.DeviceIdentifier]()
            for structure0 in deviceIdentifiersContainer {
                if let structure0 = structure0 {
                    deviceIdentifiersDecoded0?.append(structure0)
                }
            }
        }
        deviceIdentifiers = deviceIdentifiersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
