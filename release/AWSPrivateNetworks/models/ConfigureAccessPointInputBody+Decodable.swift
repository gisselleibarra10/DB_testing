// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ConfigureAccessPointInputBody: Swift.Equatable {
    let accessPointArn: Swift.String?
    let position: PrivateNetworksClientTypes.Position?
    let cpiUsername: Swift.String?
    let cpiUserId: Swift.String?
    let cpiUserPassword: Swift.String?
    let cpiSecretKey: Swift.String?
}

extension ConfigureAccessPointInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessPointArn
        case cpiSecretKey
        case cpiUserId
        case cpiUserPassword
        case cpiUsername
        case position
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessPointArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accessPointArn)
        accessPointArn = accessPointArnDecoded
        let positionDecoded = try containerValues.decodeIfPresent(PrivateNetworksClientTypes.Position.self, forKey: .position)
        position = positionDecoded
        let cpiUsernameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cpiUsername)
        cpiUsername = cpiUsernameDecoded
        let cpiUserIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cpiUserId)
        cpiUserId = cpiUserIdDecoded
        let cpiUserPasswordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cpiUserPassword)
        cpiUserPassword = cpiUserPasswordDecoded
        let cpiSecretKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cpiSecretKey)
        cpiSecretKey = cpiSecretKeyDecoded
    }
}
