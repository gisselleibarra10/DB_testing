// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListNetworksInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filters
        case maxResults
        case startToken
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filters = filters {
            var filtersContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .filters)
            for (dictKey0, networkfilters0) in filters {
                try filtersContainer.encode(networkfilters0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let startToken = self.startToken {
            try encodeContainer.encode(startToken, forKey: .startToken)
        }
    }
}
