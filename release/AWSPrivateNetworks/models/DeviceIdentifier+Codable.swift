// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PrivateNetworksClientTypes.DeviceIdentifier: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdAt
        case deviceIdentifierArn
        case iccid
        case imsi
        case networkArn
        case orderArn
        case status
        case trafficGroupArn
        case vendor
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdAt = self.createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let deviceIdentifierArn = self.deviceIdentifierArn {
            try encodeContainer.encode(deviceIdentifierArn, forKey: .deviceIdentifierArn)
        }
        if let iccid = self.iccid {
            try encodeContainer.encode(iccid, forKey: .iccid)
        }
        if let imsi = self.imsi {
            try encodeContainer.encode(imsi, forKey: .imsi)
        }
        if let networkArn = self.networkArn {
            try encodeContainer.encode(networkArn, forKey: .networkArn)
        }
        if let orderArn = self.orderArn {
            try encodeContainer.encode(orderArn, forKey: .orderArn)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let trafficGroupArn = self.trafficGroupArn {
            try encodeContainer.encode(trafficGroupArn, forKey: .trafficGroupArn)
        }
        if let vendor = self.vendor {
            try encodeContainer.encode(vendor, forKey: .vendor)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceIdentifierArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceIdentifierArn)
        deviceIdentifierArn = deviceIdentifierArnDecoded
        let trafficGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trafficGroupArn)
        trafficGroupArn = trafficGroupArnDecoded
        let networkArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkArn)
        networkArn = networkArnDecoded
        let imsiDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imsi)
        imsi = imsiDecoded
        let iccidDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .iccid)
        iccid = iccidDecoded
        let vendorDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vendor)
        vendor = vendorDecoded
        let statusDecoded = try containerValues.decodeIfPresent(PrivateNetworksClientTypes.DeviceIdentifierStatus.self, forKey: .status)
        status = statusDecoded
        let orderArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .orderArn)
        orderArn = orderArnDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
    }
}
