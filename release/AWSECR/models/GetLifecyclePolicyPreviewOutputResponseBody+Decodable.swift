// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLifecyclePolicyPreviewOutputResponseBody: Swift.Equatable {
    let registryId: Swift.String?
    let repositoryName: Swift.String?
    let lifecyclePolicyText: Swift.String?
    let status: EcrClientTypes.LifecyclePolicyPreviewStatus?
    let nextToken: Swift.String?
    let previewResults: [EcrClientTypes.LifecyclePolicyPreviewResult]?
    let summary: EcrClientTypes.LifecyclePolicyPreviewSummary?
}

extension GetLifecyclePolicyPreviewOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lifecyclePolicyText
        case nextToken
        case previewResults
        case registryId
        case repositoryName
        case status
        case summary
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registryIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .registryId)
        registryId = registryIdDecoded
        let repositoryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let lifecyclePolicyTextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lifecyclePolicyText)
        lifecyclePolicyText = lifecyclePolicyTextDecoded
        let statusDecoded = try containerValues.decodeIfPresent(EcrClientTypes.LifecyclePolicyPreviewStatus.self, forKey: .status)
        status = statusDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let previewResultsContainer = try containerValues.decodeIfPresent([EcrClientTypes.LifecyclePolicyPreviewResult?].self, forKey: .previewResults)
        var previewResultsDecoded0:[EcrClientTypes.LifecyclePolicyPreviewResult]? = nil
        if let previewResultsContainer = previewResultsContainer {
            previewResultsDecoded0 = [EcrClientTypes.LifecyclePolicyPreviewResult]()
            for structure0 in previewResultsContainer {
                if let structure0 = structure0 {
                    previewResultsDecoded0?.append(structure0)
                }
            }
        }
        previewResults = previewResultsDecoded0
        let summaryDecoded = try containerValues.decodeIfPresent(EcrClientTypes.LifecyclePolicyPreviewSummary.self, forKey: .summary)
        summary = summaryDecoded
    }
}
