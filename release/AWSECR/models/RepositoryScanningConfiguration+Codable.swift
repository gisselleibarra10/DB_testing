// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EcrClientTypes.RepositoryScanningConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appliedScanFilters
        case repositoryArn
        case repositoryName
        case scanFrequency
        case scanOnPush
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appliedScanFilters = appliedScanFilters {
            var appliedScanFiltersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .appliedScanFilters)
            for scanningrepositoryfilterlist0 in appliedScanFilters {
                try appliedScanFiltersContainer.encode(scanningrepositoryfilterlist0)
            }
        }
        if let repositoryArn = self.repositoryArn {
            try encodeContainer.encode(repositoryArn, forKey: .repositoryArn)
        }
        if let repositoryName = self.repositoryName {
            try encodeContainer.encode(repositoryName, forKey: .repositoryName)
        }
        if let scanFrequency = self.scanFrequency {
            try encodeContainer.encode(scanFrequency.rawValue, forKey: .scanFrequency)
        }
        if scanOnPush != false {
            try encodeContainer.encode(scanOnPush, forKey: .scanOnPush)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryArn)
        repositoryArn = repositoryArnDecoded
        let repositoryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let scanOnPushDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .scanOnPush) ?? false
        scanOnPush = scanOnPushDecoded
        let scanFrequencyDecoded = try containerValues.decodeIfPresent(EcrClientTypes.ScanFrequency.self, forKey: .scanFrequency)
        scanFrequency = scanFrequencyDecoded
        let appliedScanFiltersContainer = try containerValues.decodeIfPresent([EcrClientTypes.ScanningRepositoryFilter?].self, forKey: .appliedScanFilters)
        var appliedScanFiltersDecoded0:[EcrClientTypes.ScanningRepositoryFilter]? = nil
        if let appliedScanFiltersContainer = appliedScanFiltersContainer {
            appliedScanFiltersDecoded0 = [EcrClientTypes.ScanningRepositoryFilter]()
            for structure0 in appliedScanFiltersContainer {
                if let structure0 = structure0 {
                    appliedScanFiltersDecoded0?.append(structure0)
                }
            }
        }
        appliedScanFilters = appliedScanFiltersDecoded0
    }
}
