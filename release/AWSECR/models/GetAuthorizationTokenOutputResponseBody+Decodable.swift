// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAuthorizationTokenOutputResponseBody: Swift.Equatable {
    let authorizationData: [EcrClientTypes.AuthorizationData]?
}

extension GetAuthorizationTokenOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authorizationData
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authorizationDataContainer = try containerValues.decodeIfPresent([EcrClientTypes.AuthorizationData?].self, forKey: .authorizationData)
        var authorizationDataDecoded0:[EcrClientTypes.AuthorizationData]? = nil
        if let authorizationDataContainer = authorizationDataContainer {
            authorizationDataDecoded0 = [EcrClientTypes.AuthorizationData]()
            for structure0 in authorizationDataContainer {
                if let structure0 = structure0 {
                    authorizationDataDecoded0?.append(structure0)
                }
            }
        }
        authorizationData = authorizationDataDecoded0
    }
}
