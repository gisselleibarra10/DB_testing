// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EcrClientTypes.RegistryScanningRule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case repositoryFilters
        case scanFrequency
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let repositoryFilters = repositoryFilters {
            var repositoryFiltersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .repositoryFilters)
            for scanningrepositoryfilterlist0 in repositoryFilters {
                try repositoryFiltersContainer.encode(scanningrepositoryfilterlist0)
            }
        }
        if let scanFrequency = self.scanFrequency {
            try encodeContainer.encode(scanFrequency.rawValue, forKey: .scanFrequency)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scanFrequencyDecoded = try containerValues.decodeIfPresent(EcrClientTypes.ScanFrequency.self, forKey: .scanFrequency)
        scanFrequency = scanFrequencyDecoded
        let repositoryFiltersContainer = try containerValues.decodeIfPresent([EcrClientTypes.ScanningRepositoryFilter?].self, forKey: .repositoryFilters)
        var repositoryFiltersDecoded0:[EcrClientTypes.ScanningRepositoryFilter]? = nil
        if let repositoryFiltersContainer = repositoryFiltersContainer {
            repositoryFiltersDecoded0 = [EcrClientTypes.ScanningRepositoryFilter]()
            for structure0 in repositoryFiltersContainer {
                if let structure0 = structure0 {
                    repositoryFiltersDecoded0?.append(structure0)
                }
            }
        }
        repositoryFilters = repositoryFiltersDecoded0
    }
}
