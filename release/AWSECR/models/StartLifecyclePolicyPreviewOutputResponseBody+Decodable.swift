// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartLifecyclePolicyPreviewOutputResponseBody: Swift.Equatable {
    let registryId: Swift.String?
    let repositoryName: Swift.String?
    let lifecyclePolicyText: Swift.String?
    let status: EcrClientTypes.LifecyclePolicyPreviewStatus?
}

extension StartLifecyclePolicyPreviewOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lifecyclePolicyText
        case registryId
        case repositoryName
        case status
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registryIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .registryId)
        registryId = registryIdDecoded
        let repositoryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let lifecyclePolicyTextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lifecyclePolicyText)
        lifecyclePolicyText = lifecyclePolicyTextDecoded
        let statusDecoded = try containerValues.decodeIfPresent(EcrClientTypes.LifecyclePolicyPreviewStatus.self, forKey: .status)
        status = statusDecoded
    }
}
