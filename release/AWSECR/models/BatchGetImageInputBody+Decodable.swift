// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetImageInputBody: Swift.Equatable {
    let registryId: Swift.String?
    let repositoryName: Swift.String?
    let imageIds: [EcrClientTypes.ImageIdentifier]?
    let acceptedMediaTypes: [Swift.String]?
}

extension BatchGetImageInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceptedMediaTypes
        case imageIds
        case registryId
        case repositoryName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registryIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .registryId)
        registryId = registryIdDecoded
        let repositoryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let imageIdsContainer = try containerValues.decodeIfPresent([EcrClientTypes.ImageIdentifier?].self, forKey: .imageIds)
        var imageIdsDecoded0:[EcrClientTypes.ImageIdentifier]? = nil
        if let imageIdsContainer = imageIdsContainer {
            imageIdsDecoded0 = [EcrClientTypes.ImageIdentifier]()
            for structure0 in imageIdsContainer {
                if let structure0 = structure0 {
                    imageIdsDecoded0?.append(structure0)
                }
            }
        }
        imageIds = imageIdsDecoded0
        let acceptedMediaTypesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .acceptedMediaTypes)
        var acceptedMediaTypesDecoded0:[Swift.String]? = nil
        if let acceptedMediaTypesContainer = acceptedMediaTypesContainer {
            acceptedMediaTypesDecoded0 = [Swift.String]()
            for string0 in acceptedMediaTypesContainer {
                if let string0 = string0 {
                    acceptedMediaTypesDecoded0?.append(string0)
                }
            }
        }
        acceptedMediaTypes = acceptedMediaTypesDecoded0
    }
}
