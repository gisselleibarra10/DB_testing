// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchCheckLayerAvailabilityOutputResponseBody: Swift.Equatable {
    let layers: [EcrClientTypes.Layer]?
    let failures: [EcrClientTypes.LayerFailure]?
}

extension BatchCheckLayerAvailabilityOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failures
        case layers
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let layersContainer = try containerValues.decodeIfPresent([EcrClientTypes.Layer?].self, forKey: .layers)
        var layersDecoded0:[EcrClientTypes.Layer]? = nil
        if let layersContainer = layersContainer {
            layersDecoded0 = [EcrClientTypes.Layer]()
            for structure0 in layersContainer {
                if let structure0 = structure0 {
                    layersDecoded0?.append(structure0)
                }
            }
        }
        layers = layersDecoded0
        let failuresContainer = try containerValues.decodeIfPresent([EcrClientTypes.LayerFailure?].self, forKey: .failures)
        var failuresDecoded0:[EcrClientTypes.LayerFailure]? = nil
        if let failuresContainer = failuresContainer {
            failuresDecoded0 = [EcrClientTypes.LayerFailure]()
            for structure0 in failuresContainer {
                if let structure0 = structure0 {
                    failuresDecoded0?.append(structure0)
                }
            }
        }
        failures = failuresDecoded0
    }
}
