// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EcrClientTypes.ReplicationRule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinations
        case repositoryFilters
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destinations = destinations {
            var destinationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .destinations)
            for replicationdestinationlist0 in destinations {
                try destinationsContainer.encode(replicationdestinationlist0)
            }
        }
        if let repositoryFilters = repositoryFilters {
            var repositoryFiltersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .repositoryFilters)
            for repositoryfilterlist0 in repositoryFilters {
                try repositoryFiltersContainer.encode(repositoryfilterlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationsContainer = try containerValues.decodeIfPresent([EcrClientTypes.ReplicationDestination?].self, forKey: .destinations)
        var destinationsDecoded0:[EcrClientTypes.ReplicationDestination]? = nil
        if let destinationsContainer = destinationsContainer {
            destinationsDecoded0 = [EcrClientTypes.ReplicationDestination]()
            for structure0 in destinationsContainer {
                if let structure0 = structure0 {
                    destinationsDecoded0?.append(structure0)
                }
            }
        }
        destinations = destinationsDecoded0
        let repositoryFiltersContainer = try containerValues.decodeIfPresent([EcrClientTypes.RepositoryFilter?].self, forKey: .repositoryFilters)
        var repositoryFiltersDecoded0:[EcrClientTypes.RepositoryFilter]? = nil
        if let repositoryFiltersContainer = repositoryFiltersContainer {
            repositoryFiltersDecoded0 = [EcrClientTypes.RepositoryFilter]()
            for structure0 in repositoryFiltersContainer {
                if let structure0 = structure0 {
                    repositoryFiltersDecoded0?.append(structure0)
                }
            }
        }
        repositoryFilters = repositoryFiltersDecoded0
    }
}
