// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePullThroughCacheRulesInputBody: Swift.Equatable {
    let registryId: Swift.String?
    let ecrRepositoryPrefixes: [Swift.String]?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension DescribePullThroughCacheRulesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ecrRepositoryPrefixes
        case maxResults
        case nextToken
        case registryId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registryIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .registryId)
        registryId = registryIdDecoded
        let ecrRepositoryPrefixesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .ecrRepositoryPrefixes)
        var ecrRepositoryPrefixesDecoded0:[Swift.String]? = nil
        if let ecrRepositoryPrefixesContainer = ecrRepositoryPrefixesContainer {
            ecrRepositoryPrefixesDecoded0 = [Swift.String]()
            for string0 in ecrRepositoryPrefixesContainer {
                if let string0 = string0 {
                    ecrRepositoryPrefixesDecoded0?.append(string0)
                }
            }
        }
        ecrRepositoryPrefixes = ecrRepositoryPrefixesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
