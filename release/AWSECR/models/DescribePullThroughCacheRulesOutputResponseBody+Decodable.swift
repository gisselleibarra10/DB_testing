// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePullThroughCacheRulesOutputResponseBody: Swift.Equatable {
    let pullThroughCacheRules: [EcrClientTypes.PullThroughCacheRule]?
    let nextToken: Swift.String?
}

extension DescribePullThroughCacheRulesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case pullThroughCacheRules
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pullThroughCacheRulesContainer = try containerValues.decodeIfPresent([EcrClientTypes.PullThroughCacheRule?].self, forKey: .pullThroughCacheRules)
        var pullThroughCacheRulesDecoded0:[EcrClientTypes.PullThroughCacheRule]? = nil
        if let pullThroughCacheRulesContainer = pullThroughCacheRulesContainer {
            pullThroughCacheRulesDecoded0 = [EcrClientTypes.PullThroughCacheRule]()
            for structure0 in pullThroughCacheRulesContainer {
                if let structure0 = structure0 {
                    pullThroughCacheRulesDecoded0?.append(structure0)
                }
            }
        }
        pullThroughCacheRules = pullThroughCacheRulesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
