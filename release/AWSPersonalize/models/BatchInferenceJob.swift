// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PersonalizeClientTypes {
    /// Contains information on a batch inference job.
    public struct BatchInferenceJob: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the batch inference job.
        public var batchInferenceJobArn: Swift.String?
        /// A string to string map of the configuration details of a batch inference job.
        public var batchInferenceJobConfig: PersonalizeClientTypes.BatchInferenceJobConfig?
        /// The time at which the batch inference job was created.
        public var creationDateTime: ClientRuntime.Date?
        /// If the batch inference job failed, the reason for the failure.
        public var failureReason: Swift.String?
        /// The ARN of the filter used on the batch inference job.
        public var filterArn: Swift.String?
        /// The Amazon S3 path that leads to the input data used to generate the batch inference job.
        public var jobInput: PersonalizeClientTypes.BatchInferenceJobInput?
        /// The name of the batch inference job.
        public var jobName: Swift.String?
        /// The Amazon S3 bucket that contains the output data generated by the batch inference job.
        public var jobOutput: PersonalizeClientTypes.BatchInferenceJobOutput?
        /// The time at which the batch inference job was last updated.
        public var lastUpdatedDateTime: ClientRuntime.Date?
        /// The number of recommendations generated by the batch inference job. This number includes the error messages generated for failed input records.
        public var numResults: Swift.Int?
        /// The ARN of the Amazon Identity and Access Management (IAM) role that requested the batch inference job.
        public var roleArn: Swift.String?
        /// The Amazon Resource Name (ARN) of the solution version from which the batch inference job was created.
        public var solutionVersionArn: Swift.String?
        /// The status of the batch inference job. The status is one of the following values:
        ///
        /// * PENDING
        ///
        /// * IN PROGRESS
        ///
        /// * ACTIVE
        ///
        /// * CREATE FAILED
        public var status: Swift.String?

        public init (
            batchInferenceJobArn: Swift.String? = nil,
            batchInferenceJobConfig: PersonalizeClientTypes.BatchInferenceJobConfig? = nil,
            creationDateTime: ClientRuntime.Date? = nil,
            failureReason: Swift.String? = nil,
            filterArn: Swift.String? = nil,
            jobInput: PersonalizeClientTypes.BatchInferenceJobInput? = nil,
            jobName: Swift.String? = nil,
            jobOutput: PersonalizeClientTypes.BatchInferenceJobOutput? = nil,
            lastUpdatedDateTime: ClientRuntime.Date? = nil,
            numResults: Swift.Int? = nil,
            roleArn: Swift.String? = nil,
            solutionVersionArn: Swift.String? = nil,
            status: Swift.String? = nil
        )
        {
            self.batchInferenceJobArn = batchInferenceJobArn
            self.batchInferenceJobConfig = batchInferenceJobConfig
            self.creationDateTime = creationDateTime
            self.failureReason = failureReason
            self.filterArn = filterArn
            self.jobInput = jobInput
            self.jobName = jobName
            self.jobOutput = jobOutput
            self.lastUpdatedDateTime = lastUpdatedDateTime
            self.numResults = numResults
            self.roleArn = roleArn
            self.solutionVersionArn = solutionVersionArn
            self.status = status
        }
    }

}
