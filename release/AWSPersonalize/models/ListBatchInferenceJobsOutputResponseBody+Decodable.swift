// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBatchInferenceJobsOutputResponseBody: Swift.Equatable {
    let batchInferenceJobs: [PersonalizeClientTypes.BatchInferenceJobSummary]?
    let nextToken: Swift.String?
}

extension ListBatchInferenceJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case batchInferenceJobs
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let batchInferenceJobsContainer = try containerValues.decodeIfPresent([PersonalizeClientTypes.BatchInferenceJobSummary?].self, forKey: .batchInferenceJobs)
        var batchInferenceJobsDecoded0:[PersonalizeClientTypes.BatchInferenceJobSummary]? = nil
        if let batchInferenceJobsContainer = batchInferenceJobsContainer {
            batchInferenceJobsDecoded0 = [PersonalizeClientTypes.BatchInferenceJobSummary]()
            for structure0 in batchInferenceJobsContainer {
                if let structure0 = structure0 {
                    batchInferenceJobsDecoded0?.append(structure0)
                }
            }
        }
        batchInferenceJobs = batchInferenceJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
