// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PersonalizeClientTypes {
    /// A dataset group is a collection of related datasets (Interactions, User, and Item). You create a dataset group by calling [CreateDatasetGroup](https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetGroup.html). You then create a dataset and add it to a dataset group by calling [CreateDataset](https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html). The dataset group is used to create and train a solution by calling [CreateSolution](https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html). A dataset group can contain only one of each type of dataset. You can specify an Key Management Service (KMS) key to encrypt the datasets in the group.
    public struct DatasetGroup: Swift.Equatable {
        /// The creation date and time (in Unix time) of the dataset group.
        public var creationDateTime: ClientRuntime.Date?
        /// The Amazon Resource Name (ARN) of the dataset group.
        public var datasetGroupArn: Swift.String?
        /// The domain of a Domain dataset group.
        public var domain: PersonalizeClientTypes.Domain?
        /// If creating a dataset group fails, provides the reason why.
        public var failureReason: Swift.String?
        /// The Amazon Resource Name (ARN) of the Key Management Service (KMS) key used to encrypt the datasets.
        public var kmsKeyArn: Swift.String?
        /// The last update date and time (in Unix time) of the dataset group.
        public var lastUpdatedDateTime: ClientRuntime.Date?
        /// The name of the dataset group.
        public var name: Swift.String?
        /// The ARN of the IAM role that has permissions to create the dataset group.
        public var roleArn: Swift.String?
        /// The current status of the dataset group. A dataset group can be in one of the following states:
        ///
        /// * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
        ///
        /// * DELETE PENDING
        public var status: Swift.String?

        public init (
            creationDateTime: ClientRuntime.Date? = nil,
            datasetGroupArn: Swift.String? = nil,
            domain: PersonalizeClientTypes.Domain? = nil,
            failureReason: Swift.String? = nil,
            kmsKeyArn: Swift.String? = nil,
            lastUpdatedDateTime: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            roleArn: Swift.String? = nil,
            status: Swift.String? = nil
        )
        {
            self.creationDateTime = creationDateTime
            self.datasetGroupArn = datasetGroupArn
            self.domain = domain
            self.failureReason = failureReason
            self.kmsKeyArn = kmsKeyArn
            self.lastUpdatedDateTime = lastUpdatedDateTime
            self.name = name
            self.roleArn = roleArn
            self.status = status
        }
    }

}
