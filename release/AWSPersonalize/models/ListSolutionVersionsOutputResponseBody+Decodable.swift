// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSolutionVersionsOutputResponseBody: Swift.Equatable {
    let solutionVersions: [PersonalizeClientTypes.SolutionVersionSummary]?
    let nextToken: Swift.String?
}

extension ListSolutionVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case solutionVersions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let solutionVersionsContainer = try containerValues.decodeIfPresent([PersonalizeClientTypes.SolutionVersionSummary?].self, forKey: .solutionVersions)
        var solutionVersionsDecoded0:[PersonalizeClientTypes.SolutionVersionSummary]? = nil
        if let solutionVersionsContainer = solutionVersionsContainer {
            solutionVersionsDecoded0 = [PersonalizeClientTypes.SolutionVersionSummary]()
            for structure0 in solutionVersionsContainer {
                if let structure0 = structure0 {
                    solutionVersionsDecoded0?.append(structure0)
                }
            }
        }
        solutionVersions = solutionVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
