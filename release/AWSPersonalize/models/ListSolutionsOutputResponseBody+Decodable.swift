// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSolutionsOutputResponseBody: Swift.Equatable {
    let solutions: [PersonalizeClientTypes.SolutionSummary]?
    let nextToken: Swift.String?
}

extension ListSolutionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case solutions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let solutionsContainer = try containerValues.decodeIfPresent([PersonalizeClientTypes.SolutionSummary?].self, forKey: .solutions)
        var solutionsDecoded0:[PersonalizeClientTypes.SolutionSummary]? = nil
        if let solutionsContainer = solutionsContainer {
            solutionsDecoded0 = [PersonalizeClientTypes.SolutionSummary]()
            for structure0 in solutionsContainer {
                if let structure0 = structure0 {
                    solutionsDecoded0?.append(structure0)
                }
            }
        }
        solutions = solutionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
