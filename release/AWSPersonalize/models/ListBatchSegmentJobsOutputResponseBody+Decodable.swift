// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBatchSegmentJobsOutputResponseBody: Swift.Equatable {
    let batchSegmentJobs: [PersonalizeClientTypes.BatchSegmentJobSummary]?
    let nextToken: Swift.String?
}

extension ListBatchSegmentJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case batchSegmentJobs
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let batchSegmentJobsContainer = try containerValues.decodeIfPresent([PersonalizeClientTypes.BatchSegmentJobSummary?].self, forKey: .batchSegmentJobs)
        var batchSegmentJobsDecoded0:[PersonalizeClientTypes.BatchSegmentJobSummary]? = nil
        if let batchSegmentJobsContainer = batchSegmentJobsContainer {
            batchSegmentJobsDecoded0 = [PersonalizeClientTypes.BatchSegmentJobSummary]()
            for structure0 in batchSegmentJobsContainer {
                if let structure0 = structure0 {
                    batchSegmentJobsDecoded0?.append(structure0)
                }
            }
        }
        batchSegmentJobs = batchSegmentJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
