// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PersonalizeClientTypes {
    /// An object that describes the deployment of a solution version. For more information on campaigns, see [CreateCampaign](https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html).
    public struct Campaign: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the campaign.
        public var campaignArn: Swift.String?
        /// The configuration details of a campaign.
        public var campaignConfig: PersonalizeClientTypes.CampaignConfig?
        /// The date and time (in Unix format) that the campaign was created.
        public var creationDateTime: ClientRuntime.Date?
        /// If a campaign fails, the reason behind the failure.
        public var failureReason: Swift.String?
        /// The date and time (in Unix format) that the campaign was last updated.
        public var lastUpdatedDateTime: ClientRuntime.Date?
        /// Provides a summary of the properties of a campaign update. For a complete listing, call the [DescribeCampaign](https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeCampaign.html) API.
        public var latestCampaignUpdate: PersonalizeClientTypes.CampaignUpdateSummary?
        /// Specifies the requested minimum provisioned transactions (recommendations) per second.
        public var minProvisionedTPS: Swift.Int?
        /// The name of the campaign.
        public var name: Swift.String?
        /// The Amazon Resource Name (ARN) of a specific version of the solution.
        public var solutionVersionArn: Swift.String?
        /// The status of the campaign. A campaign can be in one of the following states:
        ///
        /// * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
        ///
        /// * DELETE PENDING > DELETE IN_PROGRESS
        public var status: Swift.String?

        public init (
            campaignArn: Swift.String? = nil,
            campaignConfig: PersonalizeClientTypes.CampaignConfig? = nil,
            creationDateTime: ClientRuntime.Date? = nil,
            failureReason: Swift.String? = nil,
            lastUpdatedDateTime: ClientRuntime.Date? = nil,
            latestCampaignUpdate: PersonalizeClientTypes.CampaignUpdateSummary? = nil,
            minProvisionedTPS: Swift.Int? = nil,
            name: Swift.String? = nil,
            solutionVersionArn: Swift.String? = nil,
            status: Swift.String? = nil
        )
        {
            self.campaignArn = campaignArn
            self.campaignConfig = campaignConfig
            self.creationDateTime = creationDateTime
            self.failureReason = failureReason
            self.lastUpdatedDateTime = lastUpdatedDateTime
            self.latestCampaignUpdate = latestCampaignUpdate
            self.minProvisionedTPS = minProvisionedTPS
            self.name = name
            self.solutionVersionArn = solutionVersionArn
            self.status = status
        }
    }

}
