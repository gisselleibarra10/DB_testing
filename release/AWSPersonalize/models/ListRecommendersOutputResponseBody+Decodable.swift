// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecommendersOutputResponseBody: Swift.Equatable {
    let recommenders: [PersonalizeClientTypes.RecommenderSummary]?
    let nextToken: Swift.String?
}

extension ListRecommendersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case recommenders
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recommendersContainer = try containerValues.decodeIfPresent([PersonalizeClientTypes.RecommenderSummary?].self, forKey: .recommenders)
        var recommendersDecoded0:[PersonalizeClientTypes.RecommenderSummary]? = nil
        if let recommendersContainer = recommendersContainer {
            recommendersDecoded0 = [PersonalizeClientTypes.RecommenderSummary]()
            for structure0 in recommendersContainer {
                if let structure0 = structure0 {
                    recommendersDecoded0?.append(structure0)
                }
            }
        }
        recommenders = recommendersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
