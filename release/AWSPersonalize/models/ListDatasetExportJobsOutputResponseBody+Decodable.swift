// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDatasetExportJobsOutputResponseBody: Swift.Equatable {
    let datasetExportJobs: [PersonalizeClientTypes.DatasetExportJobSummary]?
    let nextToken: Swift.String?
}

extension ListDatasetExportJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case datasetExportJobs
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetExportJobsContainer = try containerValues.decodeIfPresent([PersonalizeClientTypes.DatasetExportJobSummary?].self, forKey: .datasetExportJobs)
        var datasetExportJobsDecoded0:[PersonalizeClientTypes.DatasetExportJobSummary]? = nil
        if let datasetExportJobsContainer = datasetExportJobsContainer {
            datasetExportJobsDecoded0 = [PersonalizeClientTypes.DatasetExportJobSummary]()
            for structure0 in datasetExportJobsContainer {
                if let structure0 = structure0 {
                    datasetExportJobsDecoded0?.append(structure0)
                }
            }
        }
        datasetExportJobs = datasetExportJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
