// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEventTrackersOutputResponseBody: Swift.Equatable {
    let eventTrackers: [PersonalizeClientTypes.EventTrackerSummary]?
    let nextToken: Swift.String?
}

extension ListEventTrackersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventTrackers
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventTrackersContainer = try containerValues.decodeIfPresent([PersonalizeClientTypes.EventTrackerSummary?].self, forKey: .eventTrackers)
        var eventTrackersDecoded0:[PersonalizeClientTypes.EventTrackerSummary]? = nil
        if let eventTrackersContainer = eventTrackersContainer {
            eventTrackersDecoded0 = [PersonalizeClientTypes.EventTrackerSummary]()
            for structure0 in eventTrackersContainer {
                if let structure0 = structure0 {
                    eventTrackersDecoded0?.append(structure0)
                }
            }
        }
        eventTrackers = eventTrackersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
