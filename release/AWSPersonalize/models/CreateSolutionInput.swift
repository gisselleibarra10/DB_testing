// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateSolutionInput: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of the dataset group that provides the training data.
    /// This member is required.
    public var datasetGroupArn: Swift.String?
    /// When your have multiple event types (using an EVENT_TYPE schema field), this parameter specifies which event type (for example, 'click' or 'like') is used for training the model. If you do not provide an eventType, Amazon Personalize will use all interactions for training with equal weight regardless of type.
    public var eventType: Swift.String?
    /// The name for the solution.
    /// This member is required.
    public var name: Swift.String?
    /// Whether to perform automated machine learning (AutoML). The default is false. For this case, you must specify recipeArn. When set to true, Amazon Personalize analyzes your training data and selects the optimal USER_PERSONALIZATION recipe and hyperparameters. In this case, you must omit recipeArn. Amazon Personalize determines the optimal recipe by running tests with different values for the hyperparameters. AutoML lengthens the training process as compared to selecting a specific recipe.
    public var performAutoML: Swift.Bool
    /// Whether to perform hyperparameter optimization (HPO) on the specified or selected recipe. The default is false. When performing AutoML, this parameter is always true and you should not set it to false.
    public var performHPO: Swift.Bool?
    /// The ARN of the recipe to use for model training. Only specified when performAutoML is false.
    public var recipeArn: Swift.String?
    /// The configuration to use with the solution. When performAutoML is set to true, Amazon Personalize only evaluates the autoMLConfig section of the solution configuration. Amazon Personalize doesn't support configuring the hpoObjective at this time.
    public var solutionConfig: PersonalizeClientTypes.SolutionConfig?
    /// A list of [tags](https://docs.aws.amazon.com/personalize/latest/dev/tagging-resources.html) to apply to the solution.
    public var tags: [PersonalizeClientTypes.Tag]?

    public init (
        datasetGroupArn: Swift.String? = nil,
        eventType: Swift.String? = nil,
        name: Swift.String? = nil,
        performAutoML: Swift.Bool = false,
        performHPO: Swift.Bool? = nil,
        recipeArn: Swift.String? = nil,
        solutionConfig: PersonalizeClientTypes.SolutionConfig? = nil,
        tags: [PersonalizeClientTypes.Tag]? = nil
    )
    {
        self.datasetGroupArn = datasetGroupArn
        self.eventType = eventType
        self.name = name
        self.performAutoML = performAutoML
        self.performHPO = performHPO
        self.recipeArn = recipeArn
        self.solutionConfig = solutionConfig
        self.tags = tags
    }
}
