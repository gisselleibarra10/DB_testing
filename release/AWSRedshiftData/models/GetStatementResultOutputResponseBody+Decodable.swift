// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetStatementResultOutputResponseBody: Swift.Equatable {
    let records: [[RedshiftDataClientTypes.Field]]?
    let columnMetadata: [RedshiftDataClientTypes.ColumnMetadata]?
    let totalNumRows: Swift.Int
    let nextToken: Swift.String?
}

extension GetStatementResultOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case columnMetadata = "ColumnMetadata"
        case nextToken = "NextToken"
        case records = "Records"
        case totalNumRows = "TotalNumRows"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recordsContainer = try containerValues.decodeIfPresent([[RedshiftDataClientTypes.Field?]?].self, forKey: .records)
        var recordsDecoded0:[[RedshiftDataClientTypes.Field]]? = nil
        if let recordsContainer = recordsContainer {
            recordsDecoded0 = [[RedshiftDataClientTypes.Field]]()
            for list0 in recordsContainer {
                var list0Decoded0: [RedshiftDataClientTypes.Field]? = nil
                if let list0 = list0 {
                    list0Decoded0 = [RedshiftDataClientTypes.Field]()
                    for union1 in list0 {
                        if let union1 = union1 {
                            list0Decoded0?.append(union1)
                        }
                    }
                }
                if let list0Decoded0 = list0Decoded0 {
                    recordsDecoded0?.append(list0Decoded0)
                }
            }
        }
        records = recordsDecoded0
        let columnMetadataContainer = try containerValues.decodeIfPresent([RedshiftDataClientTypes.ColumnMetadata?].self, forKey: .columnMetadata)
        var columnMetadataDecoded0:[RedshiftDataClientTypes.ColumnMetadata]? = nil
        if let columnMetadataContainer = columnMetadataContainer {
            columnMetadataDecoded0 = [RedshiftDataClientTypes.ColumnMetadata]()
            for structure0 in columnMetadataContainer {
                if let structure0 = structure0 {
                    columnMetadataDecoded0?.append(structure0)
                }
            }
        }
        columnMetadata = columnMetadataDecoded0
        let totalNumRowsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalNumRows) ?? 0
        totalNumRows = totalNumRowsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
