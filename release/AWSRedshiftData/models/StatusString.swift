// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RedshiftDataClientTypes {
    public enum StatusString: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case aborted
        case all
        case failed
        case finished
        case picked
        case started
        case submitted
        case sdkUnknown(Swift.String)

        public static var allCases: [StatusString] {
            return [
                .aborted,
                .all,
                .failed,
                .finished,
                .picked,
                .started,
                .submitted,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .aborted: return "ABORTED"
            case .all: return "ALL"
            case .failed: return "FAILED"
            case .finished: return "FINISHED"
            case .picked: return "PICKED"
            case .started: return "STARTED"
            case .submitted: return "SUBMITTED"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = StatusString(rawValue: rawValue) ?? StatusString.sdkUnknown(rawValue)
        }
    }
}
