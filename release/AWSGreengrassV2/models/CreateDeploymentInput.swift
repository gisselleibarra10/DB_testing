// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDeploymentInput: Swift.Equatable {
    /// A unique, case-sensitive identifier that you can provide to ensure that the request is idempotent. Idempotency means that the request is successfully processed only once, even if you send the request multiple times. When a request succeeds, and you specify the same client token for subsequent successful requests, the IoT Greengrass V2 service returns the successful response that it caches from the previous request. IoT Greengrass V2 caches successful responses for idempotent requests for up to 8 hours.
    public var clientToken: Swift.String?
    /// The components to deploy. This is a dictionary, where each key is the name of a component, and each key's value is the version and configuration to deploy for that component.
    public var components: [Swift.String:GreengrassV2ClientTypes.ComponentDeploymentSpecification]?
    /// The name of the deployment.
    public var deploymentName: Swift.String?
    /// The deployment policies for the deployment. These policies define how the deployment updates components and handles failure.
    public var deploymentPolicies: GreengrassV2ClientTypes.DeploymentPolicies?
    /// The job configuration for the deployment configuration. The job configuration specifies the rollout, timeout, and stop configurations for the deployment configuration.
    public var iotJobConfiguration: GreengrassV2ClientTypes.DeploymentIoTJobConfiguration?
    /// A list of key-value pairs that contain metadata for the resource. For more information, see [Tag your resources](https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html) in the IoT Greengrass V2 Developer Guide.
    public var tags: [Swift.String:Swift.String]?
    /// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the target IoT thing or thing group.
    /// This member is required.
    public var targetArn: Swift.String?

    public init (
        clientToken: Swift.String? = nil,
        components: [Swift.String:GreengrassV2ClientTypes.ComponentDeploymentSpecification]? = nil,
        deploymentName: Swift.String? = nil,
        deploymentPolicies: GreengrassV2ClientTypes.DeploymentPolicies? = nil,
        iotJobConfiguration: GreengrassV2ClientTypes.DeploymentIoTJobConfiguration? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        targetArn: Swift.String? = nil
    )
    {
        self.clientToken = clientToken
        self.components = components
        self.deploymentName = deploymentName
        self.deploymentPolicies = deploymentPolicies
        self.iotJobConfiguration = iotJobConfiguration
        self.tags = tags
        self.targetArn = targetArn
    }
}
