// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GreengrassV2ClientTypes.CloudComponentStatus: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case componentState
        case errors
        case message
        case vendorGuidance
        case vendorGuidanceMessage
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let componentState = self.componentState {
            try encodeContainer.encode(componentState.rawValue, forKey: .componentState)
        }
        if let errors = errors {
            var errorsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .errors)
            for (dictKey0, stringmap0) in errors {
                try errorsContainer.encode(stringmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let message = self.message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let vendorGuidance = self.vendorGuidance {
            try encodeContainer.encode(vendorGuidance.rawValue, forKey: .vendorGuidance)
        }
        if let vendorGuidanceMessage = self.vendorGuidanceMessage {
            try encodeContainer.encode(vendorGuidanceMessage, forKey: .vendorGuidanceMessage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let componentStateDecoded = try containerValues.decodeIfPresent(GreengrassV2ClientTypes.CloudComponentState.self, forKey: .componentState)
        componentState = componentStateDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let errorsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .errors)
        var errorsDecoded0: [Swift.String:Swift.String]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [Swift.String:Swift.String]()
            for (key0, nonemptystring0) in errorsContainer {
                if let nonemptystring0 = nonemptystring0 {
                    errorsDecoded0?[key0] = nonemptystring0
                }
            }
        }
        errors = errorsDecoded0
        let vendorGuidanceDecoded = try containerValues.decodeIfPresent(GreengrassV2ClientTypes.VendorGuidance.self, forKey: .vendorGuidance)
        vendorGuidance = vendorGuidanceDecoded
        let vendorGuidanceMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vendorGuidanceMessage)
        vendorGuidanceMessage = vendorGuidanceMessageDecoded
    }
}
