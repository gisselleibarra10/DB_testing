// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GreengrassV2ClientTypes {
    /// Contains the status of a component version in the IoT Greengrass service.
    public struct CloudComponentStatus: Swift.Equatable {
        /// The state of the component version.
        public var componentState: GreengrassV2ClientTypes.CloudComponentState?
        /// A dictionary of errors that communicate why the component version is in an error state. For example, if IoT Greengrass can't access an artifact for the component version, then errors contains the artifact's URI as a key, and the error message as the value for that key.
        public var errors: [Swift.String:Swift.String]?
        /// A message that communicates details, such as errors, about the status of the component version.
        public var message: Swift.String?
        /// The vendor guidance state for the component version. This state indicates whether the component version has any issues that you should consider before you deploy it. The vendor guidance state can be:
        ///
        /// * ACTIVE – This component version is available and recommended for use.
        ///
        /// * DISCONTINUED – This component version has been discontinued by its publisher. You can deploy this component version, but we recommend that you use a different version of this component.
        ///
        /// * DELETED – This component version has been deleted by its publisher, so you can't deploy it. If you have any existing deployments that specify this component version, those deployments will fail.
        public var vendorGuidance: GreengrassV2ClientTypes.VendorGuidance?
        /// A message that communicates details about the vendor guidance state of the component version. This message communicates why a component version is discontinued or deleted.
        public var vendorGuidanceMessage: Swift.String?

        public init (
            componentState: GreengrassV2ClientTypes.CloudComponentState? = nil,
            errors: [Swift.String:Swift.String]? = nil,
            message: Swift.String? = nil,
            vendorGuidance: GreengrassV2ClientTypes.VendorGuidance? = nil,
            vendorGuidanceMessage: Swift.String? = nil
        )
        {
            self.componentState = componentState
            self.errors = errors
            self.message = message
            self.vendorGuidance = vendorGuidance
            self.vendorGuidanceMessage = vendorGuidanceMessage
        }
    }

}
