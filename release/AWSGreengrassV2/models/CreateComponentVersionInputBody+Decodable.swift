// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateComponentVersionInputBody: Swift.Equatable {
    let inlineRecipe: ClientRuntime.Data?
    let lambdaFunction: GreengrassV2ClientTypes.LambdaFunctionRecipeSource?
    let tags: [Swift.String:Swift.String]?
    let clientToken: Swift.String?
}

extension CreateComponentVersionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken
        case inlineRecipe
        case lambdaFunction
        case tags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inlineRecipeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .inlineRecipe)
        inlineRecipe = inlineRecipeDecoded
        let lambdaFunctionDecoded = try containerValues.decodeIfPresent(GreengrassV2ClientTypes.LambdaFunctionRecipeSource.self, forKey: .lambdaFunction)
        lambdaFunction = lambdaFunctionDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
