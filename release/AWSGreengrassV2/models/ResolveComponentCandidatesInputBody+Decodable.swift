// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResolveComponentCandidatesInputBody: Swift.Equatable {
    let platform: GreengrassV2ClientTypes.ComponentPlatform?
    let componentCandidates: [GreengrassV2ClientTypes.ComponentCandidate]?
}

extension ResolveComponentCandidatesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case componentCandidates
        case platform
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let platformDecoded = try containerValues.decodeIfPresent(GreengrassV2ClientTypes.ComponentPlatform.self, forKey: .platform)
        platform = platformDecoded
        let componentCandidatesContainer = try containerValues.decodeIfPresent([GreengrassV2ClientTypes.ComponentCandidate?].self, forKey: .componentCandidates)
        var componentCandidatesDecoded0:[GreengrassV2ClientTypes.ComponentCandidate]? = nil
        if let componentCandidatesContainer = componentCandidatesContainer {
            componentCandidatesDecoded0 = [GreengrassV2ClientTypes.ComponentCandidate]()
            for structure0 in componentCandidatesContainer {
                if let structure0 = structure0 {
                    componentCandidatesDecoded0?.append(structure0)
                }
            }
        }
        componentCandidates = componentCandidatesDecoded0
    }
}
