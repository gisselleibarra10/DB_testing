// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListComponentVersionsOutputResponseBody: Swift.Equatable {
    let componentVersions: [GreengrassV2ClientTypes.ComponentVersionListItem]?
    let nextToken: Swift.String?
}

extension ListComponentVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case componentVersions
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let componentVersionsContainer = try containerValues.decodeIfPresent([GreengrassV2ClientTypes.ComponentVersionListItem?].self, forKey: .componentVersions)
        var componentVersionsDecoded0:[GreengrassV2ClientTypes.ComponentVersionListItem]? = nil
        if let componentVersionsContainer = componentVersionsContainer {
            componentVersionsDecoded0 = [GreengrassV2ClientTypes.ComponentVersionListItem]()
            for structure0 in componentVersionsContainer {
                if let structure0 = structure0 {
                    componentVersionsDecoded0?.append(structure0)
                }
            }
        }
        componentVersions = componentVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
