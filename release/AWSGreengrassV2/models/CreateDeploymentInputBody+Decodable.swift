// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDeploymentInputBody: Swift.Equatable {
    let targetArn: Swift.String?
    let deploymentName: Swift.String?
    let components: [Swift.String:GreengrassV2ClientTypes.ComponentDeploymentSpecification]?
    let iotJobConfiguration: GreengrassV2ClientTypes.DeploymentIoTJobConfiguration?
    let deploymentPolicies: GreengrassV2ClientTypes.DeploymentPolicies?
    let tags: [Swift.String:Swift.String]?
    let clientToken: Swift.String?
}

extension CreateDeploymentInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken
        case components
        case deploymentName
        case deploymentPolicies
        case iotJobConfiguration
        case tags
        case targetArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetArn)
        targetArn = targetArnDecoded
        let deploymentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deploymentName)
        deploymentName = deploymentNameDecoded
        let componentsContainer = try containerValues.decodeIfPresent([Swift.String: GreengrassV2ClientTypes.ComponentDeploymentSpecification?].self, forKey: .components)
        var componentsDecoded0: [Swift.String:GreengrassV2ClientTypes.ComponentDeploymentSpecification]? = nil
        if let componentsContainer = componentsContainer {
            componentsDecoded0 = [Swift.String:GreengrassV2ClientTypes.ComponentDeploymentSpecification]()
            for (key0, componentdeploymentspecification0) in componentsContainer {
                if let componentdeploymentspecification0 = componentdeploymentspecification0 {
                    componentsDecoded0?[key0] = componentdeploymentspecification0
                }
            }
        }
        components = componentsDecoded0
        let iotJobConfigurationDecoded = try containerValues.decodeIfPresent(GreengrassV2ClientTypes.DeploymentIoTJobConfiguration.self, forKey: .iotJobConfiguration)
        iotJobConfiguration = iotJobConfigurationDecoded
        let deploymentPoliciesDecoded = try containerValues.decodeIfPresent(GreengrassV2ClientTypes.DeploymentPolicies.self, forKey: .deploymentPolicies)
        deploymentPolicies = deploymentPoliciesDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
