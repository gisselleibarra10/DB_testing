// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GreengrassV2ClientTypes {
    /// Contains information about a component on a Greengrass core device.
    public struct InstalledComponent: Swift.Equatable {
        /// The name of the component.
        public var componentName: Swift.String?
        /// The version of the component.
        public var componentVersion: Swift.String?
        /// Whether or not the component is a root component.
        public var isRoot: Swift.Bool
        /// The status of how current the data is. This response is based off of component state changes. The status reflects component disruptions and deployments. If a component only sees a configuration update during a deployment, it might not undergo a state change and this status would not be updated.
        public var lastStatusChangeTimestamp: ClientRuntime.Date?
        /// The lifecycle state of the component.
        public var lifecycleState: GreengrassV2ClientTypes.InstalledComponentLifecycleState?
        /// The details about the lifecycle state of the component.
        public var lifecycleStateDetails: Swift.String?

        public init (
            componentName: Swift.String? = nil,
            componentVersion: Swift.String? = nil,
            isRoot: Swift.Bool = false,
            lastStatusChangeTimestamp: ClientRuntime.Date? = nil,
            lifecycleState: GreengrassV2ClientTypes.InstalledComponentLifecycleState? = nil,
            lifecycleStateDetails: Swift.String? = nil
        )
        {
            self.componentName = componentName
            self.componentVersion = componentVersion
            self.isRoot = isRoot
            self.lastStatusChangeTimestamp = lastStatusChangeTimestamp
            self.lifecycleState = lifecycleState
            self.lifecycleStateDetails = lifecycleStateDetails
        }
    }

}
