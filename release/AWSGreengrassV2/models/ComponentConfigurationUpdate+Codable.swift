// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GreengrassV2ClientTypes.ComponentConfigurationUpdate: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case merge
        case reset
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let merge = self.merge {
            try encodeContainer.encode(merge, forKey: .merge)
        }
        if let reset = reset {
            var resetContainer = encodeContainer.nestedUnkeyedContainer(forKey: .reset)
            for componentconfigurationpathlist0 in reset {
                try resetContainer.encode(componentconfigurationpathlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mergeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .merge)
        merge = mergeDecoded
        let resetContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .reset)
        var resetDecoded0:[Swift.String]? = nil
        if let resetContainer = resetContainer {
            resetDecoded0 = [Swift.String]()
            for string0 in resetContainer {
                if let string0 = string0 {
                    resetDecoded0?.append(string0)
                }
            }
        }
        reset = resetDecoded0
    }
}
