// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCoreDevicesOutputResponseBody: Swift.Equatable {
    let coreDevices: [GreengrassV2ClientTypes.CoreDevice]?
    let nextToken: Swift.String?
}

extension ListCoreDevicesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case coreDevices
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let coreDevicesContainer = try containerValues.decodeIfPresent([GreengrassV2ClientTypes.CoreDevice?].self, forKey: .coreDevices)
        var coreDevicesDecoded0:[GreengrassV2ClientTypes.CoreDevice]? = nil
        if let coreDevicesContainer = coreDevicesContainer {
            coreDevicesDecoded0 = [GreengrassV2ClientTypes.CoreDevice]()
            for structure0 in coreDevicesContainer {
                if let structure0 = structure0 {
                    coreDevicesDecoded0?.append(structure0)
                }
            }
        }
        coreDevices = coreDevicesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
