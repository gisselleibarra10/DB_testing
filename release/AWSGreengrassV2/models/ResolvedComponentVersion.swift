// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GreengrassV2ClientTypes {
    /// Contains information about a component version that is compatible to run on a Greengrass core device.
    public struct ResolvedComponentVersion: Swift.Equatable {
        /// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the component version.
        public var arn: Swift.String?
        /// The name of the component.
        public var componentName: Swift.String?
        /// The version of the component.
        public var componentVersion: Swift.String?
        /// A message that communicates details about the vendor guidance state of the component version. This message communicates why a component version is discontinued or deleted.
        public var message: Swift.String?
        /// The recipe of the component version.
        public var recipe: ClientRuntime.Data?
        /// The vendor guidance state for the component version. This state indicates whether the component version has any issues that you should consider before you deploy it. The vendor guidance state can be:
        ///
        /// * ACTIVE – This component version is available and recommended for use.
        ///
        /// * DISCONTINUED – This component version has been discontinued by its publisher. You can deploy this component version, but we recommend that you use a different version of this component.
        ///
        /// * DELETED – This component version has been deleted by its publisher, so you can't deploy it. If you have any existing deployments that specify this component version, those deployments will fail.
        public var vendorGuidance: GreengrassV2ClientTypes.VendorGuidance?

        public init (
            arn: Swift.String? = nil,
            componentName: Swift.String? = nil,
            componentVersion: Swift.String? = nil,
            message: Swift.String? = nil,
            recipe: ClientRuntime.Data? = nil,
            vendorGuidance: GreengrassV2ClientTypes.VendorGuidance? = nil
        )
        {
            self.arn = arn
            self.componentName = componentName
            self.componentVersion = componentVersion
            self.message = message
            self.recipe = recipe
            self.vendorGuidance = vendorGuidance
        }
    }

}
