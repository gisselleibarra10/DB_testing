// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GreengrassV2ClientTypes {
    /// Contains information about an Lambda function to import to create a component.
    public struct LambdaFunctionRecipeSource: Swift.Equatable {
        /// The component versions on which this Lambda function component depends.
        public var componentDependencies: [Swift.String:GreengrassV2ClientTypes.ComponentDependencyRequirement]?
        /// The system and runtime parameters for the Lambda function as it runs on the Greengrass core device.
        public var componentLambdaParameters: GreengrassV2ClientTypes.LambdaExecutionParameters?
        /// The name of the component. Defaults to the name of the Lambda function.
        public var componentName: Swift.String?
        /// The platforms that the component version supports.
        public var componentPlatforms: [GreengrassV2ClientTypes.ComponentPlatform]?
        /// The version of the component. Defaults to the version of the Lambda function as a semantic version. For example, if your function version is 3, the component version becomes 3.0.0.
        public var componentVersion: Swift.String?
        /// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the Lambda function. The ARN must include the version of the function to import. You can't use version aliases like $LATEST.
        /// This member is required.
        public var lambdaArn: Swift.String?

        public init (
            componentDependencies: [Swift.String:GreengrassV2ClientTypes.ComponentDependencyRequirement]? = nil,
            componentLambdaParameters: GreengrassV2ClientTypes.LambdaExecutionParameters? = nil,
            componentName: Swift.String? = nil,
            componentPlatforms: [GreengrassV2ClientTypes.ComponentPlatform]? = nil,
            componentVersion: Swift.String? = nil,
            lambdaArn: Swift.String? = nil
        )
        {
            self.componentDependencies = componentDependencies
            self.componentLambdaParameters = componentLambdaParameters
            self.componentName = componentName
            self.componentPlatforms = componentPlatforms
            self.componentVersion = componentVersion
            self.lambdaArn = lambdaArn
        }
    }

}
