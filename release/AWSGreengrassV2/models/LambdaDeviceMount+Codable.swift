// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GreengrassV2ClientTypes.LambdaDeviceMount: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addGroupOwner
        case path
        case permission
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let addGroupOwner = self.addGroupOwner {
            try encodeContainer.encode(addGroupOwner, forKey: .addGroupOwner)
        }
        if let path = self.path {
            try encodeContainer.encode(path, forKey: .path)
        }
        if let permission = self.permission {
            try encodeContainer.encode(permission.rawValue, forKey: .permission)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .path)
        path = pathDecoded
        let permissionDecoded = try containerValues.decodeIfPresent(GreengrassV2ClientTypes.LambdaFilesystemPermission.self, forKey: .permission)
        permission = permissionDecoded
        let addGroupOwnerDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .addGroupOwner)
        addGroupOwner = addGroupOwnerDecoded
    }
}
