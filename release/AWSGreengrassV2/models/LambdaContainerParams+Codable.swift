// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GreengrassV2ClientTypes.LambdaContainerParams: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case devices
        case memorySizeInKB
        case mountROSysfs
        case volumes
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let devices = devices {
            var devicesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .devices)
            for lambdadevicelist0 in devices {
                try devicesContainer.encode(lambdadevicelist0)
            }
        }
        if let memorySizeInKB = self.memorySizeInKB {
            try encodeContainer.encode(memorySizeInKB, forKey: .memorySizeInKB)
        }
        if let mountROSysfs = self.mountROSysfs {
            try encodeContainer.encode(mountROSysfs, forKey: .mountROSysfs)
        }
        if let volumes = volumes {
            var volumesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .volumes)
            for lambdavolumelist0 in volumes {
                try volumesContainer.encode(lambdavolumelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let memorySizeInKBDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .memorySizeInKB)
        memorySizeInKB = memorySizeInKBDecoded
        let mountROSysfsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .mountROSysfs)
        mountROSysfs = mountROSysfsDecoded
        let volumesContainer = try containerValues.decodeIfPresent([GreengrassV2ClientTypes.LambdaVolumeMount?].self, forKey: .volumes)
        var volumesDecoded0:[GreengrassV2ClientTypes.LambdaVolumeMount]? = nil
        if let volumesContainer = volumesContainer {
            volumesDecoded0 = [GreengrassV2ClientTypes.LambdaVolumeMount]()
            for structure0 in volumesContainer {
                if let structure0 = structure0 {
                    volumesDecoded0?.append(structure0)
                }
            }
        }
        volumes = volumesDecoded0
        let devicesContainer = try containerValues.decodeIfPresent([GreengrassV2ClientTypes.LambdaDeviceMount?].self, forKey: .devices)
        var devicesDecoded0:[GreengrassV2ClientTypes.LambdaDeviceMount]? = nil
        if let devicesContainer = devicesContainer {
            devicesDecoded0 = [GreengrassV2ClientTypes.LambdaDeviceMount]()
            for structure0 in devicesContainer {
                if let structure0 = structure0 {
                    devicesDecoded0?.append(structure0)
                }
            }
        }
        devices = devicesDecoded0
    }
}
