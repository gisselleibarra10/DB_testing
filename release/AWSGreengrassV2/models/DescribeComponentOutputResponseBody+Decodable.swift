// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeComponentOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let componentName: Swift.String?
    let componentVersion: Swift.String?
    let creationTimestamp: ClientRuntime.Date?
    let publisher: Swift.String?
    let description: Swift.String?
    let status: GreengrassV2ClientTypes.CloudComponentStatus?
    let platforms: [GreengrassV2ClientTypes.ComponentPlatform]?
    let tags: [Swift.String:Swift.String]?
}

extension DescribeComponentOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case componentName
        case componentVersion
        case creationTimestamp
        case description
        case platforms
        case publisher
        case status
        case tags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let componentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .componentName)
        componentName = componentNameDecoded
        let componentVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .componentVersion)
        componentVersion = componentVersionDecoded
        let creationTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTimestamp)
        creationTimestamp = creationTimestampDecoded
        let publisherDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publisher)
        publisher = publisherDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let statusDecoded = try containerValues.decodeIfPresent(GreengrassV2ClientTypes.CloudComponentStatus.self, forKey: .status)
        status = statusDecoded
        let platformsContainer = try containerValues.decodeIfPresent([GreengrassV2ClientTypes.ComponentPlatform?].self, forKey: .platforms)
        var platformsDecoded0:[GreengrassV2ClientTypes.ComponentPlatform]? = nil
        if let platformsContainer = platformsContainer {
            platformsDecoded0 = [GreengrassV2ClientTypes.ComponentPlatform]()
            for structure0 in platformsContainer {
                if let structure0 = structure0 {
                    platformsDecoded0?.append(structure0)
                }
            }
        }
        platforms = platformsDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
