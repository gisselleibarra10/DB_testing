// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateChatTokenOutputResponseBody: Swift.Equatable {
    let token: Swift.String?
    let tokenExpirationTime: ClientRuntime.Date?
    let sessionExpirationTime: ClientRuntime.Date?
}

extension CreateChatTokenOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case sessionExpirationTime
        case token
        case tokenExpirationTime
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .token)
        token = tokenDecoded
        let tokenExpirationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .tokenExpirationTime)
        tokenExpirationTime = tokenExpirationTimeDecoded
        let sessionExpirationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .sessionExpirationTime)
        sessionExpirationTime = sessionExpirationTimeDecoded
    }
}
