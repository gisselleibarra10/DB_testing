// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DisconnectUserInputBody: Swift.Equatable {
    let roomIdentifier: Swift.String?
    let userId: Swift.String?
    let reason: Swift.String?
}

extension DisconnectUserInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case reason
        case roomIdentifier
        case userId
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roomIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roomIdentifier)
        roomIdentifier = roomIdentifierDecoded
        let userIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userId)
        userId = userIdDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reason)
        reason = reasonDecoded
    }
}
