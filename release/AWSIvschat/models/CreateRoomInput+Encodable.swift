// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateRoomInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maximumMessageLength
        case maximumMessageRatePerSecond
        case messageReviewHandler
        case name
        case tags
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if maximumMessageLength != 0 {
            try encodeContainer.encode(maximumMessageLength, forKey: .maximumMessageLength)
        }
        if maximumMessageRatePerSecond != 0 {
            try encodeContainer.encode(maximumMessageRatePerSecond, forKey: .maximumMessageRatePerSecond)
        }
        if let messageReviewHandler = self.messageReviewHandler {
            try encodeContainer.encode(messageReviewHandler, forKey: .messageReviewHandler)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, tags0) in tags {
                try tagsContainer.encode(tags0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
