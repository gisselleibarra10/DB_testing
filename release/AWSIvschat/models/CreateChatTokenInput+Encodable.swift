// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateChatTokenInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributes
        case capabilities
        case roomIdentifier
        case sessionDurationInMinutes
        case userId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributes = attributes {
            var attributesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .attributes)
            for (dictKey0, chattokenattributes0) in attributes {
                try attributesContainer.encode(chattokenattributes0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let capabilities = capabilities {
            var capabilitiesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .capabilities)
            for chattokencapabilities0 in capabilities {
                try capabilitiesContainer.encode(chattokencapabilities0.rawValue)
            }
        }
        if let roomIdentifier = self.roomIdentifier {
            try encodeContainer.encode(roomIdentifier, forKey: .roomIdentifier)
        }
        if sessionDurationInMinutes != 0 {
            try encodeContainer.encode(sessionDurationInMinutes, forKey: .sessionDurationInMinutes)
        }
        if let userId = self.userId {
            try encodeContainer.encode(userId, forKey: .userId)
        }
    }
}
