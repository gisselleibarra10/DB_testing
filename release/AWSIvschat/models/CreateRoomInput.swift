// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateRoomInput: Swift.Equatable {
    /// Maximum number of characters in a single message. Messages are expected to be UTF-8 encoded and this limit applies specifically to rune/code-point count, not number of bytes. Default: 500.
    public var maximumMessageLength: Swift.Int
    /// Maximum number of messages per second that can be sent to the room (by all clients). Default: 10.
    public var maximumMessageRatePerSecond: Swift.Int
    /// Configuration information for optional review of messages.
    public var messageReviewHandler: IvschatClientTypes.MessageReviewHandler?
    /// Room name. The value does not need to be unique.
    public var name: Swift.String?
    /// Tags to attach to the resource. Array of maps, each of the form string:string (key:value). See [Tagging AWS Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) for details, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS Chat has no constraints beyond what is documented there.
    public var tags: [Swift.String:Swift.String]?

    public init (
        maximumMessageLength: Swift.Int = 0,
        maximumMessageRatePerSecond: Swift.Int = 0,
        messageReviewHandler: IvschatClientTypes.MessageReviewHandler? = nil,
        name: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.maximumMessageLength = maximumMessageLength
        self.maximumMessageRatePerSecond = maximumMessageRatePerSecond
        self.messageReviewHandler = messageReviewHandler
        self.name = name
        self.tags = tags
    }
}
