// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IvschatClientTypes {
    /// Summary information about a room.
    public struct RoomSummary: Swift.Equatable {
        /// Room ARN.
        public var arn: Swift.String?
        /// Time when the room was created. This is an ISO 8601 timestamp; note that this is returned as a string.
        public var createTime: ClientRuntime.Date?
        /// Room ID, generated by the system. This is a relative identifier, the part of the ARN that uniquely identifies the room.
        public var id: Swift.String?
        /// Configuration information for optional review of messages.
        public var messageReviewHandler: IvschatClientTypes.MessageReviewHandler?
        /// Room name. The value does not need to be unique.
        public var name: Swift.String?
        /// Tags attached to the resource. See [Tagging AWS Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) for details, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS Chat has no constraints beyond what is documented there.
        public var tags: [Swift.String:Swift.String]?
        /// Time of the roomâ€™s last update. This is an ISO 8601 timestamp; note that this is returned as a string.
        public var updateTime: ClientRuntime.Date?

        public init (
            arn: Swift.String? = nil,
            createTime: ClientRuntime.Date? = nil,
            id: Swift.String? = nil,
            messageReviewHandler: IvschatClientTypes.MessageReviewHandler? = nil,
            name: Swift.String? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            updateTime: ClientRuntime.Date? = nil
        )
        {
            self.arn = arn
            self.createTime = createTime
            self.id = id
            self.messageReviewHandler = messageReviewHandler
            self.name = name
            self.tags = tags
            self.updateTime = updateTime
        }
    }

}
