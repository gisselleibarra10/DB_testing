// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateRoomInputBody: Swift.Equatable {
    let name: Swift.String?
    let maximumMessageRatePerSecond: Swift.Int
    let maximumMessageLength: Swift.Int
    let messageReviewHandler: IvschatClientTypes.MessageReviewHandler?
    let tags: [Swift.String:Swift.String]?
}

extension CreateRoomInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maximumMessageLength
        case maximumMessageRatePerSecond
        case messageReviewHandler
        case name
        case tags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let maximumMessageRatePerSecondDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maximumMessageRatePerSecond) ?? 0
        maximumMessageRatePerSecond = maximumMessageRatePerSecondDecoded
        let maximumMessageLengthDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maximumMessageLength) ?? 0
        maximumMessageLength = maximumMessageLengthDecoded
        let messageReviewHandlerDecoded = try containerValues.decodeIfPresent(IvschatClientTypes.MessageReviewHandler.self, forKey: .messageReviewHandler)
        messageReviewHandler = messageReviewHandlerDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
    }
}
