// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateChatTokenInput: Swift.Equatable {
    /// Application-provided attributes to encode into the token and attach to a chat session. Map keys and values can contain UTF-8 encoded text. The maximum length of this field is 1 KB total.
    public var attributes: [Swift.String:Swift.String]?
    /// Set of capabilities that the user is allowed to perform in the room. Default: None (the capability to view messages is implicitly included in all requests).
    public var capabilities: [IvschatClientTypes.ChatTokenCapability]?
    /// Identifier of the room that the client is trying to access. Currently this must be an ARN.
    /// This member is required.
    public var roomIdentifier: Swift.String?
    /// Session duration (in minutes), after which the session expires. Default: 60 (1 hour).
    public var sessionDurationInMinutes: Swift.Int
    /// Application-provided ID that uniquely identifies the user associated with this token. This can be any UTF-8 encoded text.
    /// This member is required.
    public var userId: Swift.String?

    public init (
        attributes: [Swift.String:Swift.String]? = nil,
        capabilities: [IvschatClientTypes.ChatTokenCapability]? = nil,
        roomIdentifier: Swift.String? = nil,
        sessionDurationInMinutes: Swift.Int = 0,
        userId: Swift.String? = nil
    )
    {
        self.attributes = attributes
        self.capabilities = capabilities
        self.roomIdentifier = roomIdentifier
        self.sessionDurationInMinutes = sessionDurationInMinutes
        self.userId = userId
    }
}
