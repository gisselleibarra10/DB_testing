// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FisClientTypes {
    /// Describes an experiment.
    public struct Experiment: Swift.Equatable {
        /// The actions for the experiment.
        public var actions: [Swift.String:FisClientTypes.ExperimentAction]?
        /// The time that the experiment was created.
        public var creationTime: ClientRuntime.Date?
        /// The time that the experiment ended.
        public var endTime: ClientRuntime.Date?
        /// The ID of the experiment template.
        public var experimentTemplateId: Swift.String?
        /// The ID of the experiment.
        public var id: Swift.String?
        /// The configuration for experiment logging.
        public var logConfiguration: FisClientTypes.ExperimentLogConfiguration?
        /// The Amazon Resource Name (ARN) of an IAM role that grants the FIS service permission to perform service actions on your behalf.
        public var roleArn: Swift.String?
        /// The time that the experiment started.
        public var startTime: ClientRuntime.Date?
        /// The state of the experiment.
        public var state: FisClientTypes.ExperimentState?
        /// The stop conditions for the experiment.
        public var stopConditions: [FisClientTypes.ExperimentStopCondition]?
        /// The tags for the experiment.
        public var tags: [Swift.String:Swift.String]?
        /// The targets for the experiment.
        public var targets: [Swift.String:FisClientTypes.ExperimentTarget]?

        public init (
            actions: [Swift.String:FisClientTypes.ExperimentAction]? = nil,
            creationTime: ClientRuntime.Date? = nil,
            endTime: ClientRuntime.Date? = nil,
            experimentTemplateId: Swift.String? = nil,
            id: Swift.String? = nil,
            logConfiguration: FisClientTypes.ExperimentLogConfiguration? = nil,
            roleArn: Swift.String? = nil,
            startTime: ClientRuntime.Date? = nil,
            state: FisClientTypes.ExperimentState? = nil,
            stopConditions: [FisClientTypes.ExperimentStopCondition]? = nil,
            tags: [Swift.String:Swift.String]? = nil,
            targets: [Swift.String:FisClientTypes.ExperimentTarget]? = nil
        )
        {
            self.actions = actions
            self.creationTime = creationTime
            self.endTime = endTime
            self.experimentTemplateId = experimentTemplateId
            self.id = id
            self.logConfiguration = logConfiguration
            self.roleArn = roleArn
            self.startTime = startTime
            self.state = state
            self.stopConditions = stopConditions
            self.tags = tags
            self.targets = targets
        }
    }

}
