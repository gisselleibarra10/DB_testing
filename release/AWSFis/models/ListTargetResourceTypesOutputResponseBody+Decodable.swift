// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTargetResourceTypesOutputResponseBody: Swift.Equatable {
    let targetResourceTypes: [FisClientTypes.TargetResourceTypeSummary]?
    let nextToken: Swift.String?
}

extension ListTargetResourceTypesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case targetResourceTypes
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetResourceTypesContainer = try containerValues.decodeIfPresent([FisClientTypes.TargetResourceTypeSummary?].self, forKey: .targetResourceTypes)
        var targetResourceTypesDecoded0:[FisClientTypes.TargetResourceTypeSummary]? = nil
        if let targetResourceTypesContainer = targetResourceTypesContainer {
            targetResourceTypesDecoded0 = [FisClientTypes.TargetResourceTypeSummary]()
            for structure0 in targetResourceTypesContainer {
                if let structure0 = structure0 {
                    targetResourceTypesDecoded0?.append(structure0)
                }
            }
        }
        targetResourceTypes = targetResourceTypesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
