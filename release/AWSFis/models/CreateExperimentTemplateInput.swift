// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateExperimentTemplateInput: Swift.Equatable {
    /// The actions for the experiment.
    /// This member is required.
    public var actions: [Swift.String:FisClientTypes.CreateExperimentTemplateActionInput]?
    /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
    /// This member is required.
    public var clientToken: Swift.String?
    /// A description for the experiment template.
    /// This member is required.
    public var description: Swift.String?
    /// The configuration for experiment logging.
    public var logConfiguration: FisClientTypes.CreateExperimentTemplateLogConfigurationInput?
    /// The Amazon Resource Name (ARN) of an IAM role that grants the FIS service permission to perform service actions on your behalf.
    /// This member is required.
    public var roleArn: Swift.String?
    /// The stop conditions.
    /// This member is required.
    public var stopConditions: [FisClientTypes.CreateExperimentTemplateStopConditionInput]?
    /// The tags to apply to the experiment template.
    public var tags: [Swift.String:Swift.String]?
    /// The targets for the experiment.
    public var targets: [Swift.String:FisClientTypes.CreateExperimentTemplateTargetInput]?

    public init (
        actions: [Swift.String:FisClientTypes.CreateExperimentTemplateActionInput]? = nil,
        clientToken: Swift.String? = nil,
        description: Swift.String? = nil,
        logConfiguration: FisClientTypes.CreateExperimentTemplateLogConfigurationInput? = nil,
        roleArn: Swift.String? = nil,
        stopConditions: [FisClientTypes.CreateExperimentTemplateStopConditionInput]? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        targets: [Swift.String:FisClientTypes.CreateExperimentTemplateTargetInput]? = nil
    )
    {
        self.actions = actions
        self.clientToken = clientToken
        self.description = description
        self.logConfiguration = logConfiguration
        self.roleArn = roleArn
        self.stopConditions = stopConditions
        self.tags = tags
        self.targets = targets
    }
}
