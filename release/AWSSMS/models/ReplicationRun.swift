// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SmsClientTypes {
    /// Represents a replication run.
    public struct ReplicationRun: Swift.Equatable {
        /// The ID of the Amazon Machine Image (AMI) from the replication run.
        public var amiId: Swift.String?
        /// The completion time of the last replication run.
        public var completedTime: ClientRuntime.Date?
        /// The description of the replication run.
        public var description: Swift.String?
        /// Indicates whether the replication run should produce an encrypted AMI.
        public var encrypted: Swift.Bool?
        /// The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following:
        ///
        /// * KMS key ID
        ///
        /// * KMS key alias
        ///
        /// * ARN referring to the KMS key ID
        ///
        /// * ARN referring to the KMS key alias
        ///
        ///
        /// If encrypted is true but a KMS key ID is not specified, the customer's default KMS key for Amazon EBS is used.
        public var kmsKeyId: Swift.String?
        /// The ID of the replication run.
        public var replicationRunId: Swift.String?
        /// The start time of the next replication run.
        public var scheduledStartTime: ClientRuntime.Date?
        /// Details about the current stage of the replication run.
        public var stageDetails: SmsClientTypes.ReplicationRunStageDetails?
        /// The state of the replication run.
        public var state: SmsClientTypes.ReplicationRunState?
        /// The description of the current status of the replication job.
        public var statusMessage: Swift.String?
        /// The type of replication run.
        public var type: SmsClientTypes.ReplicationRunType?

        public init (
            amiId: Swift.String? = nil,
            completedTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            encrypted: Swift.Bool? = nil,
            kmsKeyId: Swift.String? = nil,
            replicationRunId: Swift.String? = nil,
            scheduledStartTime: ClientRuntime.Date? = nil,
            stageDetails: SmsClientTypes.ReplicationRunStageDetails? = nil,
            state: SmsClientTypes.ReplicationRunState? = nil,
            statusMessage: Swift.String? = nil,
            type: SmsClientTypes.ReplicationRunType? = nil
        )
        {
            self.amiId = amiId
            self.completedTime = completedTime
            self.description = description
            self.encrypted = encrypted
            self.kmsKeyId = kmsKeyId
            self.replicationRunId = replicationRunId
            self.scheduledStartTime = scheduledStartTime
            self.stageDetails = stageDetails
            self.state = state
            self.statusMessage = statusMessage
            self.type = type
        }
    }

}
