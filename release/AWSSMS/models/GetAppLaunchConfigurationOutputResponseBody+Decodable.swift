// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAppLaunchConfigurationOutputResponseBody: Swift.Equatable {
    let appId: Swift.String?
    let roleName: Swift.String?
    let autoLaunch: Swift.Bool?
    let serverGroupLaunchConfigurations: [SmsClientTypes.ServerGroupLaunchConfiguration]?
}

extension GetAppLaunchConfigurationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appId
        case autoLaunch
        case roleName
        case serverGroupLaunchConfigurations
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appId)
        appId = appIdDecoded
        let roleNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleName)
        roleName = roleNameDecoded
        let autoLaunchDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .autoLaunch)
        autoLaunch = autoLaunchDecoded
        let serverGroupLaunchConfigurationsContainer = try containerValues.decodeIfPresent([SmsClientTypes.ServerGroupLaunchConfiguration?].self, forKey: .serverGroupLaunchConfigurations)
        var serverGroupLaunchConfigurationsDecoded0:[SmsClientTypes.ServerGroupLaunchConfiguration]? = nil
        if let serverGroupLaunchConfigurationsContainer = serverGroupLaunchConfigurationsContainer {
            serverGroupLaunchConfigurationsDecoded0 = [SmsClientTypes.ServerGroupLaunchConfiguration]()
            for structure0 in serverGroupLaunchConfigurationsContainer {
                if let structure0 = structure0 {
                    serverGroupLaunchConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        serverGroupLaunchConfigurations = serverGroupLaunchConfigurationsDecoded0
    }
}
