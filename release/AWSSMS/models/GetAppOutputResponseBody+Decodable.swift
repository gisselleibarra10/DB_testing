// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAppOutputResponseBody: Swift.Equatable {
    let appSummary: SmsClientTypes.AppSummary?
    let serverGroups: [SmsClientTypes.ServerGroup]?
    let tags: [SmsClientTypes.Tag]?
}

extension GetAppOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appSummary
        case serverGroups
        case tags
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appSummaryDecoded = try containerValues.decodeIfPresent(SmsClientTypes.AppSummary.self, forKey: .appSummary)
        appSummary = appSummaryDecoded
        let serverGroupsContainer = try containerValues.decodeIfPresent([SmsClientTypes.ServerGroup?].self, forKey: .serverGroups)
        var serverGroupsDecoded0:[SmsClientTypes.ServerGroup]? = nil
        if let serverGroupsContainer = serverGroupsContainer {
            serverGroupsDecoded0 = [SmsClientTypes.ServerGroup]()
            for structure0 in serverGroupsContainer {
                if let structure0 = structure0 {
                    serverGroupsDecoded0?.append(structure0)
                }
            }
        }
        serverGroups = serverGroupsDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([SmsClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[SmsClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [SmsClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
