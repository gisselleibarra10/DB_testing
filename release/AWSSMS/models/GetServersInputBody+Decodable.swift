// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetServersInputBody: Swift.Equatable {
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let vmServerAddressList: [SmsClientTypes.VmServerAddress]?
}

extension GetServersInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults
        case nextToken
        case vmServerAddressList
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let vmServerAddressListContainer = try containerValues.decodeIfPresent([SmsClientTypes.VmServerAddress?].self, forKey: .vmServerAddressList)
        var vmServerAddressListDecoded0:[SmsClientTypes.VmServerAddress]? = nil
        if let vmServerAddressListContainer = vmServerAddressListContainer {
            vmServerAddressListDecoded0 = [SmsClientTypes.VmServerAddress]()
            for structure0 in vmServerAddressListContainer {
                if let structure0 = structure0 {
                    vmServerAddressListDecoded0?.append(structure0)
                }
            }
        }
        vmServerAddressList = vmServerAddressListDecoded0
    }
}
