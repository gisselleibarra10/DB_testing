// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SmsClientTypes.ValidationOutput: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appValidationOutput
        case latestValidationTime
        case name
        case serverValidationOutput
        case status
        case statusMessage
        case validationId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appValidationOutput = self.appValidationOutput {
            try encodeContainer.encode(appValidationOutput, forKey: .appValidationOutput)
        }
        if let latestValidationTime = self.latestValidationTime {
            try encodeContainer.encode(latestValidationTime.timeIntervalSince1970, forKey: .latestValidationTime)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let serverValidationOutput = self.serverValidationOutput {
            try encodeContainer.encode(serverValidationOutput, forKey: .serverValidationOutput)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let statusMessage = self.statusMessage {
            try encodeContainer.encode(statusMessage, forKey: .statusMessage)
        }
        if let validationId = self.validationId {
            try encodeContainer.encode(validationId, forKey: .validationId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let validationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .validationId)
        validationId = validationIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SmsClientTypes.ValidationStatus.self, forKey: .status)
        status = statusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let latestValidationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .latestValidationTime)
        latestValidationTime = latestValidationTimeDecoded
        let appValidationOutputDecoded = try containerValues.decodeIfPresent(SmsClientTypes.AppValidationOutput.self, forKey: .appValidationOutput)
        appValidationOutput = appValidationOutputDecoded
        let serverValidationOutputDecoded = try containerValues.decodeIfPresent(SmsClientTypes.ServerValidationOutput.self, forKey: .serverValidationOutput)
        serverValidationOutput = serverValidationOutputDecoded
    }
}
