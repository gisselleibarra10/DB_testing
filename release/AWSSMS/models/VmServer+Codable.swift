// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SmsClientTypes.VmServer: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case vmManagerName
        case vmManagerType
        case vmName
        case vmPath
        case vmServerAddress
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let vmManagerName = self.vmManagerName {
            try encodeContainer.encode(vmManagerName, forKey: .vmManagerName)
        }
        if let vmManagerType = self.vmManagerType {
            try encodeContainer.encode(vmManagerType.rawValue, forKey: .vmManagerType)
        }
        if let vmName = self.vmName {
            try encodeContainer.encode(vmName, forKey: .vmName)
        }
        if let vmPath = self.vmPath {
            try encodeContainer.encode(vmPath, forKey: .vmPath)
        }
        if let vmServerAddress = self.vmServerAddress {
            try encodeContainer.encode(vmServerAddress, forKey: .vmServerAddress)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vmServerAddressDecoded = try containerValues.decodeIfPresent(SmsClientTypes.VmServerAddress.self, forKey: .vmServerAddress)
        vmServerAddress = vmServerAddressDecoded
        let vmNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vmName)
        vmName = vmNameDecoded
        let vmManagerNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vmManagerName)
        vmManagerName = vmManagerNameDecoded
        let vmManagerTypeDecoded = try containerValues.decodeIfPresent(SmsClientTypes.VmManagerType.self, forKey: .vmManagerType)
        vmManagerType = vmManagerTypeDecoded
        let vmPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vmPath)
        vmPath = vmPathDecoded
    }
}
