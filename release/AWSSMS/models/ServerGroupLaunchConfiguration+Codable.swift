// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SmsClientTypes.ServerGroupLaunchConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case launchOrder
        case serverGroupId
        case serverLaunchConfigurations
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let launchOrder = self.launchOrder {
            try encodeContainer.encode(launchOrder, forKey: .launchOrder)
        }
        if let serverGroupId = self.serverGroupId {
            try encodeContainer.encode(serverGroupId, forKey: .serverGroupId)
        }
        if let serverLaunchConfigurations = serverLaunchConfigurations {
            var serverLaunchConfigurationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .serverLaunchConfigurations)
            for serverlaunchconfigurations0 in serverLaunchConfigurations {
                try serverLaunchConfigurationsContainer.encode(serverlaunchconfigurations0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serverGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serverGroupId)
        serverGroupId = serverGroupIdDecoded
        let launchOrderDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .launchOrder)
        launchOrder = launchOrderDecoded
        let serverLaunchConfigurationsContainer = try containerValues.decodeIfPresent([SmsClientTypes.ServerLaunchConfiguration?].self, forKey: .serverLaunchConfigurations)
        var serverLaunchConfigurationsDecoded0:[SmsClientTypes.ServerLaunchConfiguration]? = nil
        if let serverLaunchConfigurationsContainer = serverLaunchConfigurationsContainer {
            serverLaunchConfigurationsDecoded0 = [SmsClientTypes.ServerLaunchConfiguration]()
            for structure0 in serverLaunchConfigurationsContainer {
                if let structure0 = structure0 {
                    serverLaunchConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        serverLaunchConfigurations = serverLaunchConfigurationsDecoded0
    }
}
