// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SmsClientTypes {
    /// Launch configuration for a server.
    public struct ServerLaunchConfiguration: Swift.Equatable {
        /// Indicates whether a publicly accessible IP address is created when launching the server.
        public var associatePublicIpAddress: Swift.Bool?
        /// Location of an Amazon S3 object.
        public var configureScript: SmsClientTypes.S3Location?
        /// The type of configuration script.
        public var configureScriptType: SmsClientTypes.ScriptType?
        /// The name of the Amazon EC2 SSH key to be used for connecting to the launched server.
        public var ec2KeyName: Swift.String?
        /// The name of the IAM instance profile.
        public var iamInstanceProfileName: Swift.String?
        /// The instance type to use when launching the server.
        public var instanceType: Swift.String?
        /// The logical ID of the server in the CloudFormation template.
        public var logicalId: Swift.String?
        /// The ID of the security group that applies to the launched server.
        public var securityGroup: Swift.String?
        /// The ID of the server with which the launch configuration is associated.
        public var server: SmsClientTypes.Server?
        /// The ID of the subnet the server should be launched into.
        public var subnet: Swift.String?
        /// Location of the user-data script to be executed when launching the server.
        public var userData: SmsClientTypes.UserData?
        /// The ID of the VPC into which the server should be launched.
        public var vpc: Swift.String?

        public init (
            associatePublicIpAddress: Swift.Bool? = nil,
            configureScript: SmsClientTypes.S3Location? = nil,
            configureScriptType: SmsClientTypes.ScriptType? = nil,
            ec2KeyName: Swift.String? = nil,
            iamInstanceProfileName: Swift.String? = nil,
            instanceType: Swift.String? = nil,
            logicalId: Swift.String? = nil,
            securityGroup: Swift.String? = nil,
            server: SmsClientTypes.Server? = nil,
            subnet: Swift.String? = nil,
            userData: SmsClientTypes.UserData? = nil,
            vpc: Swift.String? = nil
        )
        {
            self.associatePublicIpAddress = associatePublicIpAddress
            self.configureScript = configureScript
            self.configureScriptType = configureScriptType
            self.ec2KeyName = ec2KeyName
            self.iamInstanceProfileName = iamInstanceProfileName
            self.instanceType = instanceType
            self.logicalId = logicalId
            self.securityGroup = securityGroup
            self.server = server
            self.subnet = subnet
            self.userData = userData
            self.vpc = vpc
        }
    }

}
