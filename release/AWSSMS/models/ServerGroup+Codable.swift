// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SmsClientTypes.ServerGroup: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name
        case serverGroupId
        case serverList
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let serverGroupId = self.serverGroupId {
            try encodeContainer.encode(serverGroupId, forKey: .serverGroupId)
        }
        if let serverList = serverList {
            var serverListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .serverList)
            for serverlist0 in serverList {
                try serverListContainer.encode(serverlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serverGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serverGroupId)
        serverGroupId = serverGroupIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let serverListContainer = try containerValues.decodeIfPresent([SmsClientTypes.Server?].self, forKey: .serverList)
        var serverListDecoded0:[SmsClientTypes.Server]? = nil
        if let serverListContainer = serverListContainer {
            serverListDecoded0 = [SmsClientTypes.Server]()
            for structure0 in serverListContainer {
                if let structure0 = structure0 {
                    serverListDecoded0?.append(structure0)
                }
            }
        }
        serverList = serverListDecoded0
    }
}
