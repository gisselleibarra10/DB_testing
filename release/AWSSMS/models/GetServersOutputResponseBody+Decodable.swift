// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetServersOutputResponseBody: Swift.Equatable {
    let lastModifiedOn: ClientRuntime.Date?
    let serverCatalogStatus: SmsClientTypes.ServerCatalogStatus?
    let serverList: [SmsClientTypes.Server]?
    let nextToken: Swift.String?
}

extension GetServersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastModifiedOn
        case nextToken
        case serverCatalogStatus
        case serverList
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lastModifiedOnDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedOn)
        lastModifiedOn = lastModifiedOnDecoded
        let serverCatalogStatusDecoded = try containerValues.decodeIfPresent(SmsClientTypes.ServerCatalogStatus.self, forKey: .serverCatalogStatus)
        serverCatalogStatus = serverCatalogStatusDecoded
        let serverListContainer = try containerValues.decodeIfPresent([SmsClientTypes.Server?].self, forKey: .serverList)
        var serverListDecoded0:[SmsClientTypes.Server]? = nil
        if let serverListContainer = serverListContainer {
            serverListDecoded0 = [SmsClientTypes.Server]()
            for structure0 in serverListContainer {
                if let structure0 = structure0 {
                    serverListDecoded0?.append(structure0)
                }
            }
        }
        serverList = serverListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
