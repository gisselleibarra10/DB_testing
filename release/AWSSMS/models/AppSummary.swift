// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SmsClientTypes {
    /// Information about the application.
    public struct AppSummary: Swift.Equatable {
        /// The unique ID of the application.
        public var appId: Swift.String?
        /// The creation time of the application.
        public var creationTime: ClientRuntime.Date?
        /// The description of the application.
        public var description: Swift.String?
        /// The ID of the application.
        public var importedAppId: Swift.String?
        /// The last modified time of the application.
        public var lastModified: ClientRuntime.Date?
        /// The timestamp of the application's most recent successful replication.
        public var latestReplicationTime: ClientRuntime.Date?
        /// Status of the launch configuration.
        public var launchConfigurationStatus: SmsClientTypes.AppLaunchConfigurationStatus?
        /// Details about the latest launch of the application.
        public var launchDetails: SmsClientTypes.LaunchDetails?
        /// The launch status of the application.
        public var launchStatus: SmsClientTypes.AppLaunchStatus?
        /// A message related to the launch status of the application.
        public var launchStatusMessage: Swift.String?
        /// The name of the application.
        public var name: Swift.String?
        /// Status of the replication configuration.
        public var replicationConfigurationStatus: SmsClientTypes.AppReplicationConfigurationStatus?
        /// The replication status of the application.
        public var replicationStatus: SmsClientTypes.AppReplicationStatus?
        /// A message related to the replication status of the application.
        public var replicationStatusMessage: Swift.String?
        /// The name of the service role in the customer's account used by Server Migration Service.
        public var roleName: Swift.String?
        /// Status of the application.
        public var status: SmsClientTypes.AppStatus?
        /// A message related to the status of the application
        public var statusMessage: Swift.String?
        /// The number of server groups present in the application.
        public var totalServerGroups: Swift.Int?
        /// The number of servers present in the application.
        public var totalServers: Swift.Int?

        public init (
            appId: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            importedAppId: Swift.String? = nil,
            lastModified: ClientRuntime.Date? = nil,
            latestReplicationTime: ClientRuntime.Date? = nil,
            launchConfigurationStatus: SmsClientTypes.AppLaunchConfigurationStatus? = nil,
            launchDetails: SmsClientTypes.LaunchDetails? = nil,
            launchStatus: SmsClientTypes.AppLaunchStatus? = nil,
            launchStatusMessage: Swift.String? = nil,
            name: Swift.String? = nil,
            replicationConfigurationStatus: SmsClientTypes.AppReplicationConfigurationStatus? = nil,
            replicationStatus: SmsClientTypes.AppReplicationStatus? = nil,
            replicationStatusMessage: Swift.String? = nil,
            roleName: Swift.String? = nil,
            status: SmsClientTypes.AppStatus? = nil,
            statusMessage: Swift.String? = nil,
            totalServerGroups: Swift.Int? = nil,
            totalServers: Swift.Int? = nil
        )
        {
            self.appId = appId
            self.creationTime = creationTime
            self.description = description
            self.importedAppId = importedAppId
            self.lastModified = lastModified
            self.latestReplicationTime = latestReplicationTime
            self.launchConfigurationStatus = launchConfigurationStatus
            self.launchDetails = launchDetails
            self.launchStatus = launchStatus
            self.launchStatusMessage = launchStatusMessage
            self.name = name
            self.replicationConfigurationStatus = replicationConfigurationStatus
            self.replicationStatus = replicationStatus
            self.replicationStatusMessage = replicationStatusMessage
            self.roleName = roleName
            self.status = status
            self.statusMessage = statusMessage
            self.totalServerGroups = totalServerGroups
            self.totalServers = totalServers
        }
    }

}
