// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TranscribeClientTypes.ContentRedaction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case piiEntityTypes = "PiiEntityTypes"
        case redactionOutput = "RedactionOutput"
        case redactionType = "RedactionType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let piiEntityTypes = piiEntityTypes {
            var piiEntityTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .piiEntityTypes)
            for piientitytypes0 in piiEntityTypes {
                try piiEntityTypesContainer.encode(piientitytypes0.rawValue)
            }
        }
        if let redactionOutput = self.redactionOutput {
            try encodeContainer.encode(redactionOutput.rawValue, forKey: .redactionOutput)
        }
        if let redactionType = self.redactionType {
            try encodeContainer.encode(redactionType.rawValue, forKey: .redactionType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let redactionTypeDecoded = try containerValues.decodeIfPresent(TranscribeClientTypes.RedactionType.self, forKey: .redactionType)
        redactionType = redactionTypeDecoded
        let redactionOutputDecoded = try containerValues.decodeIfPresent(TranscribeClientTypes.RedactionOutput.self, forKey: .redactionOutput)
        redactionOutput = redactionOutputDecoded
        let piiEntityTypesContainer = try containerValues.decodeIfPresent([TranscribeClientTypes.PiiEntityType?].self, forKey: .piiEntityTypes)
        var piiEntityTypesDecoded0:[TranscribeClientTypes.PiiEntityType]? = nil
        if let piiEntityTypesContainer = piiEntityTypesContainer {
            piiEntityTypesDecoded0 = [TranscribeClientTypes.PiiEntityType]()
            for string0 in piiEntityTypesContainer {
                if let string0 = string0 {
                    piiEntityTypesDecoded0?.append(string0)
                }
            }
        }
        piiEntityTypes = piiEntityTypesDecoded0
    }
}
