// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVocabularyFiltersOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let vocabularyFilters: [TranscribeClientTypes.VocabularyFilterInfo]?
}

extension ListVocabularyFiltersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case vocabularyFilters = "VocabularyFilters"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let vocabularyFiltersContainer = try containerValues.decodeIfPresent([TranscribeClientTypes.VocabularyFilterInfo?].self, forKey: .vocabularyFilters)
        var vocabularyFiltersDecoded0:[TranscribeClientTypes.VocabularyFilterInfo]? = nil
        if let vocabularyFiltersContainer = vocabularyFiltersContainer {
            vocabularyFiltersDecoded0 = [TranscribeClientTypes.VocabularyFilterInfo]()
            for structure0 in vocabularyFiltersContainer {
                if let structure0 = structure0 {
                    vocabularyFiltersDecoded0?.append(structure0)
                }
            }
        }
        vocabularyFilters = vocabularyFiltersDecoded0
    }
}
