// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCallAnalyticsCategoriesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let categories: [TranscribeClientTypes.CategoryProperties]?
}

extension ListCallAnalyticsCategoriesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case categories = "Categories"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let categoriesContainer = try containerValues.decodeIfPresent([TranscribeClientTypes.CategoryProperties?].self, forKey: .categories)
        var categoriesDecoded0:[TranscribeClientTypes.CategoryProperties]? = nil
        if let categoriesContainer = categoriesContainer {
            categoriesDecoded0 = [TranscribeClientTypes.CategoryProperties]()
            for structure0 in categoriesContainer {
                if let structure0 = structure0 {
                    categoriesDecoded0?.append(structure0)
                }
            }
        }
        categories = categoriesDecoded0
    }
}
