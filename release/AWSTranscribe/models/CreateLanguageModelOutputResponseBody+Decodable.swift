// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLanguageModelOutputResponseBody: Swift.Equatable {
    let languageCode: TranscribeClientTypes.CLMLanguageCode?
    let baseModelName: TranscribeClientTypes.BaseModelName?
    let modelName: Swift.String?
    let inputDataConfig: TranscribeClientTypes.InputDataConfig?
    let modelStatus: TranscribeClientTypes.ModelStatus?
}

extension CreateLanguageModelOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case baseModelName = "BaseModelName"
        case inputDataConfig = "InputDataConfig"
        case languageCode = "LanguageCode"
        case modelName = "ModelName"
        case modelStatus = "ModelStatus"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let languageCodeDecoded = try containerValues.decodeIfPresent(TranscribeClientTypes.CLMLanguageCode.self, forKey: .languageCode)
        languageCode = languageCodeDecoded
        let baseModelNameDecoded = try containerValues.decodeIfPresent(TranscribeClientTypes.BaseModelName.self, forKey: .baseModelName)
        baseModelName = baseModelNameDecoded
        let modelNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelName)
        modelName = modelNameDecoded
        let inputDataConfigDecoded = try containerValues.decodeIfPresent(TranscribeClientTypes.InputDataConfig.self, forKey: .inputDataConfig)
        inputDataConfig = inputDataConfigDecoded
        let modelStatusDecoded = try containerValues.decodeIfPresent(TranscribeClientTypes.ModelStatus.self, forKey: .modelStatus)
        modelStatus = modelStatusDecoded
    }
}
