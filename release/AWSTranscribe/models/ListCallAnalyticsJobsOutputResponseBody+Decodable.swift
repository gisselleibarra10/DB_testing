// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCallAnalyticsJobsOutputResponseBody: Swift.Equatable {
    let status: TranscribeClientTypes.CallAnalyticsJobStatus?
    let nextToken: Swift.String?
    let callAnalyticsJobSummaries: [TranscribeClientTypes.CallAnalyticsJobSummary]?
}

extension ListCallAnalyticsJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case callAnalyticsJobSummaries = "CallAnalyticsJobSummaries"
        case nextToken = "NextToken"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(TranscribeClientTypes.CallAnalyticsJobStatus.self, forKey: .status)
        status = statusDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let callAnalyticsJobSummariesContainer = try containerValues.decodeIfPresent([TranscribeClientTypes.CallAnalyticsJobSummary?].self, forKey: .callAnalyticsJobSummaries)
        var callAnalyticsJobSummariesDecoded0:[TranscribeClientTypes.CallAnalyticsJobSummary]? = nil
        if let callAnalyticsJobSummariesContainer = callAnalyticsJobSummariesContainer {
            callAnalyticsJobSummariesDecoded0 = [TranscribeClientTypes.CallAnalyticsJobSummary]()
            for structure0 in callAnalyticsJobSummariesContainer {
                if let structure0 = structure0 {
                    callAnalyticsJobSummariesDecoded0?.append(structure0)
                }
            }
        }
        callAnalyticsJobSummaries = callAnalyticsJobSummariesDecoded0
    }
}
