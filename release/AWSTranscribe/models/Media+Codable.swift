// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TranscribeClientTypes.Media: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case mediaFileUri = "MediaFileUri"
        case redactedMediaFileUri = "RedactedMediaFileUri"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let mediaFileUri = self.mediaFileUri {
            try encodeContainer.encode(mediaFileUri, forKey: .mediaFileUri)
        }
        if let redactedMediaFileUri = self.redactedMediaFileUri {
            try encodeContainer.encode(redactedMediaFileUri, forKey: .redactedMediaFileUri)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mediaFileUriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mediaFileUri)
        mediaFileUri = mediaFileUriDecoded
        let redactedMediaFileUriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .redactedMediaFileUri)
        redactedMediaFileUri = redactedMediaFileUriDecoded
    }
}
