// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension TranscribeClientTypes {
    /// Flag the presence or absence of specific sentiments detected in your Call Analytics transcription output. Rules using SentimentFilter are designed to match:
    ///
    /// * The presence or absence of a positive sentiment felt by the customer, agent, or both at specified points in the call
    ///
    /// * The presence or absence of a negative sentiment felt by the customer, agent, or both at specified points in the call
    ///
    /// * The presence or absence of a neutral sentiment felt by the customer, agent, or both at specified points in the call
    ///
    /// * The presence or absence of a mixed sentiment felt by the customer, the agent, or both at specified points in the call
    ///
    ///
    /// See [Rule criteria](https://docs.aws.amazon.com/transcribe/latest/dg/call-analytics-create-categories.html#call-analytics-create-categories-rules) for examples.
    public struct SentimentFilter: Swift.Equatable {
        /// Allows you to specify a time range (in milliseconds) in your audio, during which you want to search for the specified sentiments. See for more detail.
        public var absoluteTimeRange: TranscribeClientTypes.AbsoluteTimeRange?
        /// Set to TRUE to flag the sentiments you didn't include in your request. Set to FALSE to flag the sentiments you specified in your request.
        public var negate: Swift.Bool?
        /// Specify the participant you want to flag. Omitting this parameter is equivalent to specifying both participants.
        public var participantRole: TranscribeClientTypes.ParticipantRole?
        /// Allows you to specify a time range (in percentage) in your media file, during which you want to search for the specified sentiments. See for more detail.
        public var relativeTimeRange: TranscribeClientTypes.RelativeTimeRange?
        /// Specify the sentiments you want to flag.
        /// This member is required.
        public var sentiments: [TranscribeClientTypes.SentimentValue]?

        public init (
            absoluteTimeRange: TranscribeClientTypes.AbsoluteTimeRange? = nil,
            negate: Swift.Bool? = nil,
            participantRole: TranscribeClientTypes.ParticipantRole? = nil,
            relativeTimeRange: TranscribeClientTypes.RelativeTimeRange? = nil,
            sentiments: [TranscribeClientTypes.SentimentValue]? = nil
        )
        {
            self.absoluteTimeRange = absoluteTimeRange
            self.negate = negate
            self.participantRole = participantRole
            self.relativeTimeRange = relativeTimeRange
            self.sentiments = sentiments
        }
    }

}
