// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension TranscribeClientTypes {
    /// A time range, in milliseconds, between two points in your media file. You can use StartTime and EndTime to search a custom segment. For example, setting StartTime to 10000 and EndTime to 50000 only searches for your specified criteria in the audio contained between the 10,000 millisecond mark and the 50,000 millisecond mark of your media file. You must use StartTime and EndTime as a set; that is, if you include one, you must include both. You can use also First to search from the start of the audio until the time you specify, or Last to search from the time you specify until the end of the audio. For example, setting First to 50000 only searches for your specified criteria in the audio contained between the start of the media file to the 50,000 millisecond mark. You can use First and Last independently of each other. If you prefer to use percentage instead of milliseconds, see .
    public struct AbsoluteTimeRange: Swift.Equatable {
        /// The time, in milliseconds, when Amazon Transcribe stops searching for the specified criteria in your audio. If you include EndTime in your request, you must also include StartTime.
        public var endTime: Swift.Int?
        /// The time, in milliseconds, from the start of your media file until the value you specify in which Amazon Transcribe searches for your specified criteria.
        public var first: Swift.Int?
        /// The time, in milliseconds, from the value you specify until the end of your media file in which Amazon Transcribe searches for your specified criteria.
        public var last: Swift.Int?
        /// The time, in milliseconds, when Amazon Transcribe starts searching for the specified criteria in your audio. If you include StartTime in your request, you must also include EndTime.
        public var startTime: Swift.Int?

        public init (
            endTime: Swift.Int? = nil,
            first: Swift.Int? = nil,
            last: Swift.Int? = nil,
            startTime: Swift.Int? = nil
        )
        {
            self.endTime = endTime
            self.first = first
            self.last = last
            self.startTime = startTime
        }
    }

}
