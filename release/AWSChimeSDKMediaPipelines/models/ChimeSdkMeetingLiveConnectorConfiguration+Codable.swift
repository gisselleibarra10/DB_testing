// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ChimeSdkMediaPipelinesClientTypes.ChimeSdkMeetingLiveConnectorConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "Arn"
        case compositedVideo = "CompositedVideo"
        case muxType = "MuxType"
        case sourceConfiguration = "SourceConfiguration"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let compositedVideo = self.compositedVideo {
            try encodeContainer.encode(compositedVideo, forKey: .compositedVideo)
        }
        if let muxType = self.muxType {
            try encodeContainer.encode(muxType.rawValue, forKey: .muxType)
        }
        if let sourceConfiguration = self.sourceConfiguration {
            try encodeContainer.encode(sourceConfiguration, forKey: .sourceConfiguration)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let muxTypeDecoded = try containerValues.decodeIfPresent(ChimeSdkMediaPipelinesClientTypes.LiveConnectorMuxType.self, forKey: .muxType)
        muxType = muxTypeDecoded
        let compositedVideoDecoded = try containerValues.decodeIfPresent(ChimeSdkMediaPipelinesClientTypes.CompositedVideoArtifactsConfiguration.self, forKey: .compositedVideo)
        compositedVideo = compositedVideoDecoded
        let sourceConfigurationDecoded = try containerValues.decodeIfPresent(ChimeSdkMediaPipelinesClientTypes.SourceConfiguration.self, forKey: .sourceConfiguration)
        sourceConfiguration = sourceConfigurationDecoded
    }
}
