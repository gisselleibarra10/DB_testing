// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateMediaConcatenationPipelineInputBody: Swift.Equatable {
    let sources: [ChimeSdkMediaPipelinesClientTypes.ConcatenationSource]?
    let sinks: [ChimeSdkMediaPipelinesClientTypes.ConcatenationSink]?
    let clientRequestToken: Swift.String?
    let tags: [ChimeSdkMediaPipelinesClientTypes.Tag]?
}

extension CreateMediaConcatenationPipelineInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case sinks = "Sinks"
        case sources = "Sources"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourcesContainer = try containerValues.decodeIfPresent([ChimeSdkMediaPipelinesClientTypes.ConcatenationSource?].self, forKey: .sources)
        var sourcesDecoded0:[ChimeSdkMediaPipelinesClientTypes.ConcatenationSource]? = nil
        if let sourcesContainer = sourcesContainer {
            sourcesDecoded0 = [ChimeSdkMediaPipelinesClientTypes.ConcatenationSource]()
            for structure0 in sourcesContainer {
                if let structure0 = structure0 {
                    sourcesDecoded0?.append(structure0)
                }
            }
        }
        sources = sourcesDecoded0
        let sinksContainer = try containerValues.decodeIfPresent([ChimeSdkMediaPipelinesClientTypes.ConcatenationSink?].self, forKey: .sinks)
        var sinksDecoded0:[ChimeSdkMediaPipelinesClientTypes.ConcatenationSink]? = nil
        if let sinksContainer = sinksContainer {
            sinksDecoded0 = [ChimeSdkMediaPipelinesClientTypes.ConcatenationSink]()
            for structure0 in sinksContainer {
                if let structure0 = structure0 {
                    sinksDecoded0?.append(structure0)
                }
            }
        }
        sinks = sinksDecoded0
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let tagsContainer = try containerValues.decodeIfPresent([ChimeSdkMediaPipelinesClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[ChimeSdkMediaPipelinesClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [ChimeSdkMediaPipelinesClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
