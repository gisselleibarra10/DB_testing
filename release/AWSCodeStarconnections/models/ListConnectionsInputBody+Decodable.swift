// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConnectionsInputBody: Swift.Equatable {
    let providerTypeFilter: CodeStarConnectionsClientTypes.ProviderType?
    let hostArnFilter: Swift.String?
    let maxResults: Swift.Int
    let nextToken: Swift.String?
}

extension ListConnectionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hostArnFilter = "HostArnFilter"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case providerTypeFilter = "ProviderTypeFilter"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let providerTypeFilterDecoded = try containerValues.decodeIfPresent(CodeStarConnectionsClientTypes.ProviderType.self, forKey: .providerTypeFilter)
        providerTypeFilter = providerTypeFilterDecoded
        let hostArnFilterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hostArnFilter)
        hostArnFilter = hostArnFilterDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults) ?? 0
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
