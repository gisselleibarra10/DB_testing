// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDocumentsOutputResponseBody: Swift.Equatable {
    let documentIdentifiers: [SsmClientTypes.DocumentIdentifier]?
    let nextToken: Swift.String?
}

extension ListDocumentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case documentIdentifiers = "DocumentIdentifiers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentIdentifiersContainer = try containerValues.decodeIfPresent([SsmClientTypes.DocumentIdentifier?].self, forKey: .documentIdentifiers)
        var documentIdentifiersDecoded0:[SsmClientTypes.DocumentIdentifier]? = nil
        if let documentIdentifiersContainer = documentIdentifiersContainer {
            documentIdentifiersDecoded0 = [SsmClientTypes.DocumentIdentifier]()
            for structure0 in documentIdentifiersContainer {
                if let structure0 = structure0 {
                    documentIdentifiersDecoded0?.append(structure0)
                }
            }
        }
        documentIdentifiers = documentIdentifiersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
