// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutComplianceItemsInputBody: Swift.Equatable {
    let resourceId: Swift.String?
    let resourceType: Swift.String?
    let complianceType: Swift.String?
    let executionSummary: SsmClientTypes.ComplianceExecutionSummary?
    let items: [SsmClientTypes.ComplianceItemEntry]?
    let itemContentHash: Swift.String?
    let uploadType: SsmClientTypes.ComplianceUploadType?
}

extension PutComplianceItemsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case complianceType = "ComplianceType"
        case executionSummary = "ExecutionSummary"
        case itemContentHash = "ItemContentHash"
        case items = "Items"
        case resourceId = "ResourceId"
        case resourceType = "ResourceType"
        case uploadType = "UploadType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let complianceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .complianceType)
        complianceType = complianceTypeDecoded
        let executionSummaryDecoded = try containerValues.decodeIfPresent(SsmClientTypes.ComplianceExecutionSummary.self, forKey: .executionSummary)
        executionSummary = executionSummaryDecoded
        let itemsContainer = try containerValues.decodeIfPresent([SsmClientTypes.ComplianceItemEntry?].self, forKey: .items)
        var itemsDecoded0:[SsmClientTypes.ComplianceItemEntry]? = nil
        if let itemsContainer = itemsContainer {
            itemsDecoded0 = [SsmClientTypes.ComplianceItemEntry]()
            for structure0 in itemsContainer {
                if let structure0 = structure0 {
                    itemsDecoded0?.append(structure0)
                }
            }
        }
        items = itemsDecoded0
        let itemContentHashDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .itemContentHash)
        itemContentHash = itemContentHashDecoded
        let uploadTypeDecoded = try containerValues.decodeIfPresent(SsmClientTypes.ComplianceUploadType.self, forKey: .uploadType)
        uploadType = uploadTypeDecoded
    }
}
