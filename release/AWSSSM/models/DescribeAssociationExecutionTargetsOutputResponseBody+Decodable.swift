// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAssociationExecutionTargetsOutputResponseBody: Swift.Equatable {
    let associationExecutionTargets: [SsmClientTypes.AssociationExecutionTarget]?
    let nextToken: Swift.String?
}

extension DescribeAssociationExecutionTargetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associationExecutionTargets = "AssociationExecutionTargets"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let associationExecutionTargetsContainer = try containerValues.decodeIfPresent([SsmClientTypes.AssociationExecutionTarget?].self, forKey: .associationExecutionTargets)
        var associationExecutionTargetsDecoded0:[SsmClientTypes.AssociationExecutionTarget]? = nil
        if let associationExecutionTargetsContainer = associationExecutionTargetsContainer {
            associationExecutionTargetsDecoded0 = [SsmClientTypes.AssociationExecutionTarget]()
            for structure0 in associationExecutionTargetsContainer {
                if let structure0 = structure0 {
                    associationExecutionTargetsDecoded0?.append(structure0)
                }
            }
        }
        associationExecutionTargets = associationExecutionTargetsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
