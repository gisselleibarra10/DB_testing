// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInventorySchemaInputBody: Swift.Equatable {
    let typeName: Swift.String?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let aggregator: Swift.Bool
    let subType: Swift.Bool?
}

extension GetInventorySchemaInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregator = "Aggregator"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case subType = "SubType"
        case typeName = "TypeName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .typeName)
        typeName = typeNameDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let aggregatorDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .aggregator) ?? false
        aggregator = aggregatorDecoded
        let subTypeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .subType)
        subType = subTypeDecoded
    }
}
