// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOpsItemEventsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let summaries: [SsmClientTypes.OpsItemEventSummary]?
}

extension ListOpsItemEventsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case summaries = "Summaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let summariesContainer = try containerValues.decodeIfPresent([SsmClientTypes.OpsItemEventSummary?].self, forKey: .summaries)
        var summariesDecoded0:[SsmClientTypes.OpsItemEventSummary]? = nil
        if let summariesContainer = summariesContainer {
            summariesDecoded0 = [SsmClientTypes.OpsItemEventSummary]()
            for structure0 in summariesContainer {
                if let structure0 = structure0 {
                    summariesDecoded0?.append(structure0)
                }
            }
        }
        summaries = summariesDecoded0
    }
}
