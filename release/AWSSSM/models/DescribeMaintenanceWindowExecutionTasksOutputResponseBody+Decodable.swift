// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMaintenanceWindowExecutionTasksOutputResponseBody: Swift.Equatable {
    let windowExecutionTaskIdentities: [SsmClientTypes.MaintenanceWindowExecutionTaskIdentity]?
    let nextToken: Swift.String?
}

extension DescribeMaintenanceWindowExecutionTasksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case windowExecutionTaskIdentities = "WindowExecutionTaskIdentities"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let windowExecutionTaskIdentitiesContainer = try containerValues.decodeIfPresent([SsmClientTypes.MaintenanceWindowExecutionTaskIdentity?].self, forKey: .windowExecutionTaskIdentities)
        var windowExecutionTaskIdentitiesDecoded0:[SsmClientTypes.MaintenanceWindowExecutionTaskIdentity]? = nil
        if let windowExecutionTaskIdentitiesContainer = windowExecutionTaskIdentitiesContainer {
            windowExecutionTaskIdentitiesDecoded0 = [SsmClientTypes.MaintenanceWindowExecutionTaskIdentity]()
            for structure0 in windowExecutionTaskIdentitiesContainer {
                if let structure0 = structure0 {
                    windowExecutionTaskIdentitiesDecoded0?.append(structure0)
                }
            }
        }
        windowExecutionTaskIdentities = windowExecutionTaskIdentitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
