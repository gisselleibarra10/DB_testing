// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.AlarmConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarms = "Alarms"
        case ignorePollAlarmFailure = "IgnorePollAlarmFailure"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let alarms = alarms {
            var alarmsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .alarms)
            for alarmlist0 in alarms {
                try alarmsContainer.encode(alarmlist0)
            }
        }
        if ignorePollAlarmFailure != false {
            try encodeContainer.encode(ignorePollAlarmFailure, forKey: .ignorePollAlarmFailure)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ignorePollAlarmFailureDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .ignorePollAlarmFailure) ?? false
        ignorePollAlarmFailure = ignorePollAlarmFailureDecoded
        let alarmsContainer = try containerValues.decodeIfPresent([SsmClientTypes.Alarm?].self, forKey: .alarms)
        var alarmsDecoded0:[SsmClientTypes.Alarm]? = nil
        if let alarmsContainer = alarmsContainer {
            alarmsDecoded0 = [SsmClientTypes.Alarm]()
            for structure0 in alarmsContainer {
                if let structure0 = structure0 {
                    alarmsDecoded0?.append(structure0)
                }
            }
        }
        alarms = alarmsDecoded0
    }
}
