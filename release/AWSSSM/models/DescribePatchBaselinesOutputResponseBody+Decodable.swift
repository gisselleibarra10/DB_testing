// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePatchBaselinesOutputResponseBody: Swift.Equatable {
    let baselineIdentities: [SsmClientTypes.PatchBaselineIdentity]?
    let nextToken: Swift.String?
}

extension DescribePatchBaselinesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case baselineIdentities = "BaselineIdentities"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let baselineIdentitiesContainer = try containerValues.decodeIfPresent([SsmClientTypes.PatchBaselineIdentity?].self, forKey: .baselineIdentities)
        var baselineIdentitiesDecoded0:[SsmClientTypes.PatchBaselineIdentity]? = nil
        if let baselineIdentitiesContainer = baselineIdentitiesContainer {
            baselineIdentitiesDecoded0 = [SsmClientTypes.PatchBaselineIdentity]()
            for structure0 in baselineIdentitiesContainer {
                if let structure0 = structure0 {
                    baselineIdentitiesDecoded0?.append(structure0)
                }
            }
        }
        baselineIdentities = baselineIdentitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
