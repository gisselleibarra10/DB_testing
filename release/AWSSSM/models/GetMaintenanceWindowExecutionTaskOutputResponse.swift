// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetMaintenanceWindowExecutionTaskOutputResponse: Swift.Equatable {
    /// The details for the CloudWatch alarm you applied to your maintenance window task.
    public var alarmConfiguration: SsmClientTypes.AlarmConfiguration?
    /// The time the task execution completed.
    public var endTime: ClientRuntime.Date?
    /// The defined maximum number of task executions that could be run in parallel.
    public var maxConcurrency: Swift.String?
    /// The defined maximum number of task execution errors allowed before scheduling of the task execution would have been stopped.
    public var maxErrors: Swift.String?
    /// The priority of the task.
    public var priority: Swift.Int
    /// The role that was assumed when running the task.
    public var serviceRole: Swift.String?
    /// The time the task execution started.
    public var startTime: ClientRuntime.Date?
    /// The status of the task.
    public var status: SsmClientTypes.MaintenanceWindowExecutionStatus?
    /// The details explaining the status. Not available for all status values.
    public var statusDetails: Swift.String?
    /// The Amazon Resource Name (ARN) of the task that ran.
    public var taskArn: Swift.String?
    /// The ID of the specific task execution in the maintenance window task that was retrieved.
    public var taskExecutionId: Swift.String?
    /// The parameters passed to the task when it was run. TaskParameters has been deprecated. To specify parameters to pass to a task when it runs, instead use the Parameters option in the TaskInvocationParameters structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see [MaintenanceWindowTaskInvocationParameters]. The map has the following format:
    ///
    /// * Key: string, between 1 and 255 characters
    ///
    /// * Value: an array of strings, each between 1 and 255 characters
    public var taskParameters: [[Swift.String:SsmClientTypes.MaintenanceWindowTaskParameterValueExpression]]?
    /// The CloudWatch alarms that were invoked by the maintenance window task.
    public var triggeredAlarms: [SsmClientTypes.AlarmStateInformation]?
    /// The type of task that was run.
    public var type: SsmClientTypes.MaintenanceWindowTaskType?
    /// The ID of the maintenance window execution that includes the task.
    public var windowExecutionId: Swift.String?

    public init (
        alarmConfiguration: SsmClientTypes.AlarmConfiguration? = nil,
        endTime: ClientRuntime.Date? = nil,
        maxConcurrency: Swift.String? = nil,
        maxErrors: Swift.String? = nil,
        priority: Swift.Int = 0,
        serviceRole: Swift.String? = nil,
        startTime: ClientRuntime.Date? = nil,
        status: SsmClientTypes.MaintenanceWindowExecutionStatus? = nil,
        statusDetails: Swift.String? = nil,
        taskArn: Swift.String? = nil,
        taskExecutionId: Swift.String? = nil,
        taskParameters: [[Swift.String:SsmClientTypes.MaintenanceWindowTaskParameterValueExpression]]? = nil,
        triggeredAlarms: [SsmClientTypes.AlarmStateInformation]? = nil,
        type: SsmClientTypes.MaintenanceWindowTaskType? = nil,
        windowExecutionId: Swift.String? = nil
    )
    {
        self.alarmConfiguration = alarmConfiguration
        self.endTime = endTime
        self.maxConcurrency = maxConcurrency
        self.maxErrors = maxErrors
        self.priority = priority
        self.serviceRole = serviceRole
        self.startTime = startTime
        self.status = status
        self.statusDetails = statusDetails
        self.taskArn = taskArn
        self.taskExecutionId = taskExecutionId
        self.taskParameters = taskParameters
        self.triggeredAlarms = triggeredAlarms
        self.type = type
        self.windowExecutionId = windowExecutionId
    }
}
