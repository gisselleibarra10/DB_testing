// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetMaintenanceWindowExecutionTaskInvocationOutputResponse: Swift.Equatable {
    /// The time that the task finished running on the target.
    public var endTime: ClientRuntime.Date?
    /// The execution ID.
    public var executionId: Swift.String?
    /// The invocation ID.
    public var invocationId: Swift.String?
    /// User-provided value to be included in any Amazon CloudWatch Events or Amazon EventBridge events raised while running tasks for these targets in this maintenance window.
    public var ownerInformation: Swift.String?
    /// The parameters used at the time that the task ran.
    public var parameters: Swift.String?
    /// The time that the task started running on the target.
    public var startTime: ClientRuntime.Date?
    /// The task status for an invocation.
    public var status: SsmClientTypes.MaintenanceWindowExecutionStatus?
    /// The details explaining the status. Details are only available for certain status values.
    public var statusDetails: Swift.String?
    /// The task execution ID.
    public var taskExecutionId: Swift.String?
    /// Retrieves the task type for a maintenance window.
    public var taskType: SsmClientTypes.MaintenanceWindowTaskType?
    /// The maintenance window execution ID.
    public var windowExecutionId: Swift.String?
    /// The maintenance window target ID.
    public var windowTargetId: Swift.String?

    public init (
        endTime: ClientRuntime.Date? = nil,
        executionId: Swift.String? = nil,
        invocationId: Swift.String? = nil,
        ownerInformation: Swift.String? = nil,
        parameters: Swift.String? = nil,
        startTime: ClientRuntime.Date? = nil,
        status: SsmClientTypes.MaintenanceWindowExecutionStatus? = nil,
        statusDetails: Swift.String? = nil,
        taskExecutionId: Swift.String? = nil,
        taskType: SsmClientTypes.MaintenanceWindowTaskType? = nil,
        windowExecutionId: Swift.String? = nil,
        windowTargetId: Swift.String? = nil
    )
    {
        self.endTime = endTime
        self.executionId = executionId
        self.invocationId = invocationId
        self.ownerInformation = ownerInformation
        self.parameters = parameters
        self.startTime = startTime
        self.status = status
        self.statusDetails = statusDetails
        self.taskExecutionId = taskExecutionId
        self.taskType = taskType
        self.windowExecutionId = windowExecutionId
        self.windowTargetId = windowTargetId
    }
}
