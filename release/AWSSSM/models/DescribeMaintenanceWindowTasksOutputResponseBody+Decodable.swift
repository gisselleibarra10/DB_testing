// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMaintenanceWindowTasksOutputResponseBody: Swift.Equatable {
    let tasks: [SsmClientTypes.MaintenanceWindowTask]?
    let nextToken: Swift.String?
}

extension DescribeMaintenanceWindowTasksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case tasks = "Tasks"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tasksContainer = try containerValues.decodeIfPresent([SsmClientTypes.MaintenanceWindowTask?].self, forKey: .tasks)
        var tasksDecoded0:[SsmClientTypes.MaintenanceWindowTask]? = nil
        if let tasksContainer = tasksContainer {
            tasksDecoded0 = [SsmClientTypes.MaintenanceWindowTask]()
            for structure0 in tasksContainer {
                if let structure0 = structure0 {
                    tasksDecoded0?.append(structure0)
                }
            }
        }
        tasks = tasksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
