// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribePatchGroupStateOutputResponse: Swift.Equatable {
    /// The number of managed nodes in the patch group.
    public var instances: Swift.Int
    /// The number of managed nodes where patches that are specified as Critical for compliance reporting in the patch baseline aren't installed. These patches might be missing, have failed installation, were rejected, or were installed but awaiting a required managed node reboot. The status of these managed nodes is NON_COMPLIANT.
    public var instancesWithCriticalNonCompliantPatches: Swift.Int?
    /// The number of managed nodes with patches from the patch baseline that failed to install.
    public var instancesWithFailedPatches: Swift.Int
    /// The number of managed nodes with patches installed that aren't defined in the patch baseline.
    public var instancesWithInstalledOtherPatches: Swift.Int
    /// The number of managed nodes with installed patches.
    public var instancesWithInstalledPatches: Swift.Int
    /// The number of managed nodes with patches installed by Patch Manager that haven't been rebooted after the patch installation. The status of these managed nodes is NON_COMPLIANT.
    public var instancesWithInstalledPendingRebootPatches: Swift.Int?
    /// The number of managed nodes with patches installed that are specified in a RejectedPatches list. Patches with a status of INSTALLED_REJECTED were typically installed before they were added to a RejectedPatches list. If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstancesWithInstalledRejectedPatches will always be 0 (zero).
    public var instancesWithInstalledRejectedPatches: Swift.Int?
    /// The number of managed nodes with missing patches from the patch baseline.
    public var instancesWithMissingPatches: Swift.Int
    /// The number of managed nodes with patches that aren't applicable.
    public var instancesWithNotApplicablePatches: Swift.Int
    /// The number of managed nodes with patches installed that are specified as other than Critical or Security but aren't compliant with the patch baseline. The status of these managed nodes is NON_COMPLIANT.
    public var instancesWithOtherNonCompliantPatches: Swift.Int?
    /// The number of managed nodes where patches that are specified as Security in a patch advisory aren't installed. These patches might be missing, have failed installation, were rejected, or were installed but awaiting a required managed node reboot. The status of these managed nodes is NON_COMPLIANT.
    public var instancesWithSecurityNonCompliantPatches: Swift.Int?
    /// The number of managed nodes with NotApplicable patches beyond the supported limit, which aren't reported by name to Inventory. Inventory is a capability of Amazon Web Services Systems Manager.
    public var instancesWithUnreportedNotApplicablePatches: Swift.Int?

    public init (
        instances: Swift.Int = 0,
        instancesWithCriticalNonCompliantPatches: Swift.Int? = nil,
        instancesWithFailedPatches: Swift.Int = 0,
        instancesWithInstalledOtherPatches: Swift.Int = 0,
        instancesWithInstalledPatches: Swift.Int = 0,
        instancesWithInstalledPendingRebootPatches: Swift.Int? = nil,
        instancesWithInstalledRejectedPatches: Swift.Int? = nil,
        instancesWithMissingPatches: Swift.Int = 0,
        instancesWithNotApplicablePatches: Swift.Int = 0,
        instancesWithOtherNonCompliantPatches: Swift.Int? = nil,
        instancesWithSecurityNonCompliantPatches: Swift.Int? = nil,
        instancesWithUnreportedNotApplicablePatches: Swift.Int? = nil
    )
    {
        self.instances = instances
        self.instancesWithCriticalNonCompliantPatches = instancesWithCriticalNonCompliantPatches
        self.instancesWithFailedPatches = instancesWithFailedPatches
        self.instancesWithInstalledOtherPatches = instancesWithInstalledOtherPatches
        self.instancesWithInstalledPatches = instancesWithInstalledPatches
        self.instancesWithInstalledPendingRebootPatches = instancesWithInstalledPendingRebootPatches
        self.instancesWithInstalledRejectedPatches = instancesWithInstalledRejectedPatches
        self.instancesWithMissingPatches = instancesWithMissingPatches
        self.instancesWithNotApplicablePatches = instancesWithNotApplicablePatches
        self.instancesWithOtherNonCompliantPatches = instancesWithOtherNonCompliantPatches
        self.instancesWithSecurityNonCompliantPatches = instancesWithSecurityNonCompliantPatches
        self.instancesWithUnreportedNotApplicablePatches = instancesWithUnreportedNotApplicablePatches
    }
}
