// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateOpsMetadataInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case keysToDelete = "KeysToDelete"
        case metadataToUpdate = "MetadataToUpdate"
        case opsMetadataArn = "OpsMetadataArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let keysToDelete = keysToDelete {
            var keysToDeleteContainer = encodeContainer.nestedUnkeyedContainer(forKey: .keysToDelete)
            for metadatakeystodeletelist0 in keysToDelete {
                try keysToDeleteContainer.encode(metadatakeystodeletelist0)
            }
        }
        if let metadataToUpdate = metadataToUpdate {
            var metadataToUpdateContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .metadataToUpdate)
            for (dictKey0, metadatamap0) in metadataToUpdate {
                try metadataToUpdateContainer.encode(metadatamap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let opsMetadataArn = self.opsMetadataArn {
            try encodeContainer.encode(opsMetadataArn, forKey: .opsMetadataArn)
        }
    }
}
