// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartSessionInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case documentName = "DocumentName"
        case parameters = "Parameters"
        case reason = "Reason"
        case target = "Target"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let documentName = self.documentName {
            try encodeContainer.encode(documentName, forKey: .documentName)
        }
        if let parameters = parameters {
            var parametersContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .parameters)
            for (dictKey0, sessionmanagerparameters0) in parameters {
                try parametersContainer.encode(sessionmanagerparameters0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let reason = self.reason {
            try encodeContainer.encode(reason, forKey: .reason)
        }
        if let target = self.target {
            try encodeContainer.encode(target, forKey: .target)
        }
    }
}
