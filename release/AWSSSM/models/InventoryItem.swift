// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SsmClientTypes {
    /// Information collected from managed nodes based on your inventory policy document
    public struct InventoryItem: Swift.Equatable {
        /// The time the inventory information was collected.
        /// This member is required.
        public var captureTime: Swift.String?
        /// The inventory data of the inventory type.
        public var content: [[Swift.String:Swift.String]]?
        /// MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API doesn't update the inventory item type contents if the MD5 hash hasn't changed since last update.
        public var contentHash: Swift.String?
        /// A map of associated properties for a specified inventory type. For example, with this attribute, you can specify the ExecutionId, ExecutionType, ComplianceType properties of the AWS:ComplianceItem type.
        public var context: [Swift.String:Swift.String]?
        /// The schema version for the inventory item.
        /// This member is required.
        public var schemaVersion: Swift.String?
        /// The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.
        /// This member is required.
        public var typeName: Swift.String?

        public init (
            captureTime: Swift.String? = nil,
            content: [[Swift.String:Swift.String]]? = nil,
            contentHash: Swift.String? = nil,
            context: [Swift.String:Swift.String]? = nil,
            schemaVersion: Swift.String? = nil,
            typeName: Swift.String? = nil
        )
        {
            self.captureTime = captureTime
            self.content = content
            self.contentHash = contentHash
            self.context = context
            self.schemaVersion = schemaVersion
            self.typeName = typeName
        }
    }

}
