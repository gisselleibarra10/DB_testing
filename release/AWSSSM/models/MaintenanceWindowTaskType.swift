// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SsmClientTypes {
    public enum MaintenanceWindowTaskType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case automation
        case lambda
        case runcommand
        case stepfunctions
        case sdkUnknown(Swift.String)

        public static var allCases: [MaintenanceWindowTaskType] {
            return [
                .automation,
                .lambda,
                .runcommand,
                .stepfunctions,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .automation: return "AUTOMATION"
            case .lambda: return "LAMBDA"
            case .runcommand: return "RUN_COMMAND"
            case .stepfunctions: return "STEP_FUNCTIONS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = MaintenanceWindowTaskType(rawValue: rawValue) ?? MaintenanceWindowTaskType.sdkUnknown(rawValue)
        }
    }
}
