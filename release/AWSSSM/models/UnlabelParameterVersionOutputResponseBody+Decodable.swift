// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UnlabelParameterVersionOutputResponseBody: Swift.Equatable {
    let removedLabels: [Swift.String]?
    let invalidLabels: [Swift.String]?
}

extension UnlabelParameterVersionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case invalidLabels = "InvalidLabels"
        case removedLabels = "RemovedLabels"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let removedLabelsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .removedLabels)
        var removedLabelsDecoded0:[Swift.String]? = nil
        if let removedLabelsContainer = removedLabelsContainer {
            removedLabelsDecoded0 = [Swift.String]()
            for string0 in removedLabelsContainer {
                if let string0 = string0 {
                    removedLabelsDecoded0?.append(string0)
                }
            }
        }
        removedLabels = removedLabelsDecoded0
        let invalidLabelsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .invalidLabels)
        var invalidLabelsDecoded0:[Swift.String]? = nil
        if let invalidLabelsContainer = invalidLabelsContainer {
            invalidLabelsDecoded0 = [Swift.String]()
            for string0 in invalidLabelsContainer {
                if let string0 = string0 {
                    invalidLabelsDecoded0?.append(string0)
                }
            }
        }
        invalidLabels = invalidLabelsDecoded0
    }
}
