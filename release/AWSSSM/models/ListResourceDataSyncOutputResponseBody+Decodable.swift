// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourceDataSyncOutputResponseBody: Swift.Equatable {
    let resourceDataSyncItems: [SsmClientTypes.ResourceDataSyncItem]?
    let nextToken: Swift.String?
}

extension ListResourceDataSyncOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case resourceDataSyncItems = "ResourceDataSyncItems"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceDataSyncItemsContainer = try containerValues.decodeIfPresent([SsmClientTypes.ResourceDataSyncItem?].self, forKey: .resourceDataSyncItems)
        var resourceDataSyncItemsDecoded0:[SsmClientTypes.ResourceDataSyncItem]? = nil
        if let resourceDataSyncItemsContainer = resourceDataSyncItemsContainer {
            resourceDataSyncItemsDecoded0 = [SsmClientTypes.ResourceDataSyncItem]()
            for structure0 in resourceDataSyncItemsContainer {
                if let structure0 = structure0 {
                    resourceDataSyncItemsDecoded0?.append(structure0)
                }
            }
        }
        resourceDataSyncItems = resourceDataSyncItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
