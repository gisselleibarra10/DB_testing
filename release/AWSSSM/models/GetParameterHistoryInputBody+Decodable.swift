// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetParameterHistoryInputBody: Swift.Equatable {
    let name: Swift.String?
    let withDecryption: Swift.Bool?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension GetParameterHistoryInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case name = "Name"
        case nextToken = "NextToken"
        case withDecryption = "WithDecryption"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let withDecryptionDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .withDecryption)
        withDecryption = withDecryptionDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
