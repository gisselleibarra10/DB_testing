// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMaintenanceWindowExecutionTaskInvocationOutputResponseBody: Swift.Equatable {
    let windowExecutionId: Swift.String?
    let taskExecutionId: Swift.String?
    let invocationId: Swift.String?
    let executionId: Swift.String?
    let taskType: SsmClientTypes.MaintenanceWindowTaskType?
    let parameters: Swift.String?
    let status: SsmClientTypes.MaintenanceWindowExecutionStatus?
    let statusDetails: Swift.String?
    let startTime: ClientRuntime.Date?
    let endTime: ClientRuntime.Date?
    let ownerInformation: Swift.String?
    let windowTargetId: Swift.String?
}

extension GetMaintenanceWindowExecutionTaskInvocationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case endTime = "EndTime"
        case executionId = "ExecutionId"
        case invocationId = "InvocationId"
        case ownerInformation = "OwnerInformation"
        case parameters = "Parameters"
        case startTime = "StartTime"
        case status = "Status"
        case statusDetails = "StatusDetails"
        case taskExecutionId = "TaskExecutionId"
        case taskType = "TaskType"
        case windowExecutionId = "WindowExecutionId"
        case windowTargetId = "WindowTargetId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let windowExecutionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .windowExecutionId)
        windowExecutionId = windowExecutionIdDecoded
        let taskExecutionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskExecutionId)
        taskExecutionId = taskExecutionIdDecoded
        let invocationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .invocationId)
        invocationId = invocationIdDecoded
        let executionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executionId)
        executionId = executionIdDecoded
        let taskTypeDecoded = try containerValues.decodeIfPresent(SsmClientTypes.MaintenanceWindowTaskType.self, forKey: .taskType)
        taskType = taskTypeDecoded
        let parametersDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .parameters)
        parameters = parametersDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SsmClientTypes.MaintenanceWindowExecutionStatus.self, forKey: .status)
        status = statusDecoded
        let statusDetailsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusDetails)
        statusDetails = statusDetailsDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let ownerInformationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ownerInformation)
        ownerInformation = ownerInformationDecoded
        let windowTargetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .windowTargetId)
        windowTargetId = windowTargetIdDecoded
    }
}
