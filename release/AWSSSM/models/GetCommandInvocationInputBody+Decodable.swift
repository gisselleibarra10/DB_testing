// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCommandInvocationInputBody: Swift.Equatable {
    let commandId: Swift.String?
    let instanceId: Swift.String?
    let pluginName: Swift.String?
}

extension GetCommandInvocationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case commandId = "CommandId"
        case instanceId = "InstanceId"
        case pluginName = "PluginName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commandIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .commandId)
        commandId = commandIdDecoded
        let instanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let pluginNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pluginName)
        pluginName = pluginNameDecoded
    }
}
