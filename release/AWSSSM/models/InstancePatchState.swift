// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes {
    /// Defines the high-level patch compliance state for a managed node, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the managed node.
    public struct InstancePatchState: Swift.Equatable {
        /// The ID of the patch baseline used to patch the managed node.
        /// This member is required.
        public var baselineId: Swift.String?
        /// The number of managed nodes where patches that are specified as Critical for compliance reporting in the patch baseline aren't installed. These patches might be missing, have failed installation, were rejected, or were installed but awaiting a required managed node reboot. The status of these managed nodes is NON_COMPLIANT.
        public var criticalNonCompliantCount: Swift.Int?
        /// The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.
        public var failedCount: Swift.Int
        /// An https URL or an Amazon Simple Storage Service (Amazon S3) path-style URL to a list of patches to be installed. This patch installation list, which you maintain in an S3 bucket in YAML format and specify in the SSM document AWS-RunPatchBaseline, overrides the patches specified by the default patch baseline. For more information about the InstallOverrideList parameter, see [About the ]AWS-RunPatchBaseline(https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html) SSM document in the Amazon Web Services Systems Manager User Guide.
        public var installOverrideList: Swift.String?
        /// The number of patches from the patch baseline that are installed on the managed node.
        public var installedCount: Swift.Int
        /// The number of patches not specified in the patch baseline that are installed on the managed node.
        public var installedOtherCount: Swift.Int
        /// The number of patches installed by Patch Manager since the last time the managed node was rebooted.
        public var installedPendingRebootCount: Swift.Int?
        /// The number of patches installed on a managed node that are specified in a RejectedPatches list. Patches with a status of InstalledRejected were typically installed before they were added to a RejectedPatches list. If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of InstalledRejectedCount will always be 0 (zero).
        public var installedRejectedCount: Swift.Int?
        /// The ID of the managed node the high-level patch compliance information was collected for.
        /// This member is required.
        public var instanceId: Swift.String?
        /// The time of the last attempt to patch the managed node with NoReboot specified as the reboot option.
        public var lastNoRebootInstallOperationTime: ClientRuntime.Date?
        /// The number of patches from the patch baseline that are applicable for the managed node but aren't currently installed.
        public var missingCount: Swift.Int
        /// The number of patches from the patch baseline that aren't applicable for the managed node and therefore aren't installed on the node. This number may be truncated if the list of patch names is very large. The number of patches beyond this limit are reported in UnreportedNotApplicableCount.
        public var notApplicableCount: Swift.Int
        /// The type of patching operation that was performed: or
        ///
        /// * SCAN assesses the patch compliance state.
        ///
        /// * INSTALL installs missing patches.
        /// This member is required.
        public var operation: SsmClientTypes.PatchOperationType?
        /// The time the most recent patching operation completed on the managed node.
        /// This member is required.
        public var operationEndTime: ClientRuntime.Date?
        /// The time the most recent patching operation was started on the managed node.
        /// This member is required.
        public var operationStartTime: ClientRuntime.Date?
        /// The number of managed nodes with patches installed that are specified as other than Critical or Security but aren't compliant with the patch baseline. The status of these managed nodes is NON_COMPLIANT.
        public var otherNonCompliantCount: Swift.Int?
        /// Placeholder information. This field will always be empty in the current release of the service.
        public var ownerInformation: Swift.String?
        /// The name of the patch group the managed node belongs to.
        /// This member is required.
        public var patchGroup: Swift.String?
        /// Indicates the reboot option specified in the patch baseline. Reboot options apply to Install operations only. Reboots aren't attempted for Patch Manager Scan operations.
        ///
        /// * RebootIfNeeded: Patch Manager tries to reboot the managed node if it installed any patches, or if any patches are detected with a status of InstalledPendingReboot.
        ///
        /// * NoReboot: Patch Manager attempts to install missing packages without trying to reboot the system. Patches installed with this option are assigned a status of InstalledPendingReboot. These patches might not be in effect until a reboot is performed.
        public var rebootOption: SsmClientTypes.RebootOption?
        /// The number of managed nodes where patches that are specified as Security in a patch advisory aren't installed. These patches might be missing, have failed installation, were rejected, or were installed but awaiting a required managed node reboot. The status of these managed nodes is NON_COMPLIANT.
        public var securityNonCompliantCount: Swift.Int?
        /// The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.
        public var snapshotId: Swift.String?
        /// The number of patches beyond the supported limit of NotApplicableCount that aren't reported by name to Inventory. Inventory is a capability of Amazon Web Services Systems Manager.
        public var unreportedNotApplicableCount: Swift.Int?

        public init (
            baselineId: Swift.String? = nil,
            criticalNonCompliantCount: Swift.Int? = nil,
            failedCount: Swift.Int = 0,
            installOverrideList: Swift.String? = nil,
            installedCount: Swift.Int = 0,
            installedOtherCount: Swift.Int = 0,
            installedPendingRebootCount: Swift.Int? = nil,
            installedRejectedCount: Swift.Int? = nil,
            instanceId: Swift.String? = nil,
            lastNoRebootInstallOperationTime: ClientRuntime.Date? = nil,
            missingCount: Swift.Int = 0,
            notApplicableCount: Swift.Int = 0,
            operation: SsmClientTypes.PatchOperationType? = nil,
            operationEndTime: ClientRuntime.Date? = nil,
            operationStartTime: ClientRuntime.Date? = nil,
            otherNonCompliantCount: Swift.Int? = nil,
            ownerInformation: Swift.String? = nil,
            patchGroup: Swift.String? = nil,
            rebootOption: SsmClientTypes.RebootOption? = nil,
            securityNonCompliantCount: Swift.Int? = nil,
            snapshotId: Swift.String? = nil,
            unreportedNotApplicableCount: Swift.Int? = nil
        )
        {
            self.baselineId = baselineId
            self.criticalNonCompliantCount = criticalNonCompliantCount
            self.failedCount = failedCount
            self.installOverrideList = installOverrideList
            self.installedCount = installedCount
            self.installedOtherCount = installedOtherCount
            self.installedPendingRebootCount = installedPendingRebootCount
            self.installedRejectedCount = installedRejectedCount
            self.instanceId = instanceId
            self.lastNoRebootInstallOperationTime = lastNoRebootInstallOperationTime
            self.missingCount = missingCount
            self.notApplicableCount = notApplicableCount
            self.operation = operation
            self.operationEndTime = operationEndTime
            self.operationStartTime = operationStartTime
            self.otherNonCompliantCount = otherNonCompliantCount
            self.ownerInformation = ownerInformation
            self.patchGroup = patchGroup
            self.rebootOption = rebootOption
            self.securityNonCompliantCount = securityNonCompliantCount
            self.snapshotId = snapshotId
            self.unreportedNotApplicableCount = unreportedNotApplicableCount
        }
    }

}
