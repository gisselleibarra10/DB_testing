// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SsmClientTypes {
    public enum OpsItemStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case approved
        case cancelled
        case cancelling
        case changeCalendarOverrideApproved
        case changeCalendarOverrideRejected
        case closed
        case completedWithFailure
        case completedWithSuccess
        case failed
        case inProgress
        case `open`
        case pending
        case pendingApproval
        case pendingChangeCalendarOverride
        case rejected
        case resolved
        case runbookInProgress
        case scheduled
        case timedOut
        case sdkUnknown(Swift.String)

        public static var allCases: [OpsItemStatus] {
            return [
                .approved,
                .cancelled,
                .cancelling,
                .changeCalendarOverrideApproved,
                .changeCalendarOverrideRejected,
                .closed,
                .completedWithFailure,
                .completedWithSuccess,
                .failed,
                .inProgress,
                .open,
                .pending,
                .pendingApproval,
                .pendingChangeCalendarOverride,
                .rejected,
                .resolved,
                .runbookInProgress,
                .scheduled,
                .timedOut,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .approved: return "Approved"
            case .cancelled: return "Cancelled"
            case .cancelling: return "Cancelling"
            case .changeCalendarOverrideApproved: return "ChangeCalendarOverrideApproved"
            case .changeCalendarOverrideRejected: return "ChangeCalendarOverrideRejected"
            case .closed: return "Closed"
            case .completedWithFailure: return "CompletedWithFailure"
            case .completedWithSuccess: return "CompletedWithSuccess"
            case .failed: return "Failed"
            case .inProgress: return "InProgress"
            case .open: return "Open"
            case .pending: return "Pending"
            case .pendingApproval: return "PendingApproval"
            case .pendingChangeCalendarOverride: return "PendingChangeCalendarOverride"
            case .rejected: return "Rejected"
            case .resolved: return "Resolved"
            case .runbookInProgress: return "RunbookInProgress"
            case .scheduled: return "Scheduled"
            case .timedOut: return "TimedOut"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = OpsItemStatus(rawValue: rawValue) ?? OpsItemStatus.sdkUnknown(rawValue)
        }
    }
}
