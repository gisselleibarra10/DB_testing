// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeInstancePatchStatesOutputResponseBody: Swift.Equatable {
    let instancePatchStates: [SsmClientTypes.InstancePatchState]?
    let nextToken: Swift.String?
}

extension DescribeInstancePatchStatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case instancePatchStates = "InstancePatchStates"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instancePatchStatesContainer = try containerValues.decodeIfPresent([SsmClientTypes.InstancePatchState?].self, forKey: .instancePatchStates)
        var instancePatchStatesDecoded0:[SsmClientTypes.InstancePatchState]? = nil
        if let instancePatchStatesContainer = instancePatchStatesContainer {
            instancePatchStatesDecoded0 = [SsmClientTypes.InstancePatchState]()
            for structure0 in instancePatchStatesContainer {
                if let structure0 = structure0 {
                    instancePatchStatesDecoded0?.append(structure0)
                }
            }
        }
        instancePatchStates = instancePatchStatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
