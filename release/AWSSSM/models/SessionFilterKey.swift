// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SsmClientTypes {
    public enum SessionFilterKey: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case invokedAfter
        case invokedBefore
        case owner
        case sessionId
        case status
        case targetId
        case sdkUnknown(Swift.String)

        public static var allCases: [SessionFilterKey] {
            return [
                .invokedAfter,
                .invokedBefore,
                .owner,
                .sessionId,
                .status,
                .targetId,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .invokedAfter: return "InvokedAfter"
            case .invokedBefore: return "InvokedBefore"
            case .owner: return "Owner"
            case .sessionId: return "SessionId"
            case .status: return "Status"
            case .targetId: return "Target"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SessionFilterKey(rawValue: rawValue) ?? SessionFilterKey.sdkUnknown(rawValue)
        }
    }
}
