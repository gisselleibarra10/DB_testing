// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.NonCompliantSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nonCompliantCount = "NonCompliantCount"
        case severitySummary = "SeveritySummary"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if nonCompliantCount != 0 {
            try encodeContainer.encode(nonCompliantCount, forKey: .nonCompliantCount)
        }
        if let severitySummary = self.severitySummary {
            try encodeContainer.encode(severitySummary, forKey: .severitySummary)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nonCompliantCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .nonCompliantCount) ?? 0
        nonCompliantCount = nonCompliantCountDecoded
        let severitySummaryDecoded = try containerValues.decodeIfPresent(SsmClientTypes.SeveritySummary.self, forKey: .severitySummary)
        severitySummary = severitySummaryDecoded
    }
}
