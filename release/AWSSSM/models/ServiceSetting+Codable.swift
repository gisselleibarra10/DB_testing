// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.ServiceSetting: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aRN = "ARN"
        case lastModifiedDate = "LastModifiedDate"
        case lastModifiedUser = "LastModifiedUser"
        case settingId = "SettingId"
        case settingValue = "SettingValue"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aRN = self.aRN {
            try encodeContainer.encode(aRN, forKey: .aRN)
        }
        if let lastModifiedDate = self.lastModifiedDate {
            try encodeContainer.encode(lastModifiedDate.timeIntervalSince1970, forKey: .lastModifiedDate)
        }
        if let lastModifiedUser = self.lastModifiedUser {
            try encodeContainer.encode(lastModifiedUser, forKey: .lastModifiedUser)
        }
        if let settingId = self.settingId {
            try encodeContainer.encode(settingId, forKey: .settingId)
        }
        if let settingValue = self.settingValue {
            try encodeContainer.encode(settingValue, forKey: .settingValue)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let settingIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .settingId)
        settingId = settingIdDecoded
        let settingValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .settingValue)
        settingValue = settingValueDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
        let lastModifiedUserDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastModifiedUser)
        lastModifiedUser = lastModifiedUserDecoded
        let aRNDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .aRN)
        aRN = aRNDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
    }
}
