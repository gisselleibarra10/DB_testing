// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.ComplianceSummaryItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case complianceType = "ComplianceType"
        case compliantSummary = "CompliantSummary"
        case nonCompliantSummary = "NonCompliantSummary"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let complianceType = self.complianceType {
            try encodeContainer.encode(complianceType, forKey: .complianceType)
        }
        if let compliantSummary = self.compliantSummary {
            try encodeContainer.encode(compliantSummary, forKey: .compliantSummary)
        }
        if let nonCompliantSummary = self.nonCompliantSummary {
            try encodeContainer.encode(nonCompliantSummary, forKey: .nonCompliantSummary)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let complianceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .complianceType)
        complianceType = complianceTypeDecoded
        let compliantSummaryDecoded = try containerValues.decodeIfPresent(SsmClientTypes.CompliantSummary.self, forKey: .compliantSummary)
        compliantSummary = compliantSummaryDecoded
        let nonCompliantSummaryDecoded = try containerValues.decodeIfPresent(SsmClientTypes.NonCompliantSummary.self, forKey: .nonCompliantSummary)
        nonCompliantSummary = nonCompliantSummaryDecoded
    }
}
