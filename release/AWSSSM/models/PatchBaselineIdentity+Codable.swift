// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.PatchBaselineIdentity: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case baselineDescription = "BaselineDescription"
        case baselineId = "BaselineId"
        case baselineName = "BaselineName"
        case defaultBaseline = "DefaultBaseline"
        case operatingSystem = "OperatingSystem"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let baselineDescription = self.baselineDescription {
            try encodeContainer.encode(baselineDescription, forKey: .baselineDescription)
        }
        if let baselineId = self.baselineId {
            try encodeContainer.encode(baselineId, forKey: .baselineId)
        }
        if let baselineName = self.baselineName {
            try encodeContainer.encode(baselineName, forKey: .baselineName)
        }
        if defaultBaseline != false {
            try encodeContainer.encode(defaultBaseline, forKey: .defaultBaseline)
        }
        if let operatingSystem = self.operatingSystem {
            try encodeContainer.encode(operatingSystem.rawValue, forKey: .operatingSystem)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let baselineIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .baselineId)
        baselineId = baselineIdDecoded
        let baselineNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .baselineName)
        baselineName = baselineNameDecoded
        let operatingSystemDecoded = try containerValues.decodeIfPresent(SsmClientTypes.OperatingSystem.self, forKey: .operatingSystem)
        operatingSystem = operatingSystemDecoded
        let baselineDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .baselineDescription)
        baselineDescription = baselineDescriptionDecoded
        let defaultBaselineDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .defaultBaseline) ?? false
        defaultBaseline = defaultBaselineDecoded
    }
}
