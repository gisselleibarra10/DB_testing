// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes {
    /// Describes a filter for a specific list of managed nodes.
    public struct InstanceInformation: Swift.Equatable {
        /// The activation ID created by Amazon Web Services Systems Manager when the server or virtual machine (VM) was registered.
        public var activationId: Swift.String?
        /// The version of SSM Agent running on your Linux managed node.
        public var agentVersion: Swift.String?
        /// Information about the association.
        public var associationOverview: SsmClientTypes.InstanceAggregatedAssociationOverview?
        /// The status of the association.
        public var associationStatus: Swift.String?
        /// The fully qualified host name of the managed node.
        public var computerName: Swift.String?
        /// The IP address of the managed node.
        public var iPAddress: Swift.String?
        /// The Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed node. This call doesn't return the IAM role for Amazon Elastic Compute Cloud (Amazon EC2) instances. To retrieve the IAM role for an EC2 instance, use the Amazon EC2 DescribeInstances operation. For information, see [DescribeInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html) in the Amazon EC2 API Reference or [describe-instances](https://docs.aws.amazon.com/cli/latest/ec2/describe-instances.html) in the Amazon Web Services CLI Command Reference.
        public var iamRole: Swift.String?
        /// The managed node ID.
        public var instanceId: Swift.String?
        /// Indicates whether the latest version of SSM Agent is running on your Linux managed node. This field doesn't indicate whether or not the latest version is installed on Windows managed nodes, because some older versions of Windows Server use the EC2Config service to process Systems Manager requests.
        public var isLatestVersion: Swift.Bool?
        /// The date the association was last run.
        public var lastAssociationExecutionDate: ClientRuntime.Date?
        /// The date and time when the agent last pinged the Systems Manager service.
        public var lastPingDateTime: ClientRuntime.Date?
        /// The last date the association was successfully run.
        public var lastSuccessfulAssociationExecutionDate: ClientRuntime.Date?
        /// The name assigned to an on-premises server, edge device, or virtual machine (VM) when it is activated as a Systems Manager managed node. The name is specified as the DefaultInstanceName property using the [CreateActivation] command. It is applied to the managed node by specifying the Activation Code and Activation ID when you install SSM Agent on the node, as explained in [Install SSM Agent for a hybrid environment (Linux)](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-linux.html) and [Install SSM Agent for a hybrid environment (Windows)](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-win.html). To retrieve the Name tag of an EC2 instance, use the Amazon EC2 DescribeInstances operation. For information, see [DescribeInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html) in the Amazon EC2 API Reference or [describe-instances](https://docs.aws.amazon.com/cli/latest/ec2/describe-instances.html) in the Amazon Web Services CLI Command Reference.
        public var name: Swift.String?
        /// Connection status of SSM Agent. The status Inactive has been deprecated and is no longer in use.
        public var pingStatus: SsmClientTypes.PingStatus?
        /// The name of the operating system platform running on your managed node.
        public var platformName: Swift.String?
        /// The operating system platform type.
        public var platformType: SsmClientTypes.PlatformType?
        /// The version of the OS platform running on your managed node.
        public var platformVersion: Swift.String?
        /// The date the server or VM was registered with Amazon Web Services as a managed node.
        public var registrationDate: ClientRuntime.Date?
        /// The type of instance. Instances are either EC2 instances or managed instances.
        public var resourceType: SsmClientTypes.ResourceType?
        /// The ID of the source resource. For IoT Greengrass devices, SourceId is the Thing name.
        public var sourceId: Swift.String?
        /// The type of the source resource. For IoT Greengrass devices, SourceType is AWS::IoT::Thing.
        public var sourceType: SsmClientTypes.SourceType?

        public init (
            activationId: Swift.String? = nil,
            agentVersion: Swift.String? = nil,
            associationOverview: SsmClientTypes.InstanceAggregatedAssociationOverview? = nil,
            associationStatus: Swift.String? = nil,
            computerName: Swift.String? = nil,
            iPAddress: Swift.String? = nil,
            iamRole: Swift.String? = nil,
            instanceId: Swift.String? = nil,
            isLatestVersion: Swift.Bool? = nil,
            lastAssociationExecutionDate: ClientRuntime.Date? = nil,
            lastPingDateTime: ClientRuntime.Date? = nil,
            lastSuccessfulAssociationExecutionDate: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            pingStatus: SsmClientTypes.PingStatus? = nil,
            platformName: Swift.String? = nil,
            platformType: SsmClientTypes.PlatformType? = nil,
            platformVersion: Swift.String? = nil,
            registrationDate: ClientRuntime.Date? = nil,
            resourceType: SsmClientTypes.ResourceType? = nil,
            sourceId: Swift.String? = nil,
            sourceType: SsmClientTypes.SourceType? = nil
        )
        {
            self.activationId = activationId
            self.agentVersion = agentVersion
            self.associationOverview = associationOverview
            self.associationStatus = associationStatus
            self.computerName = computerName
            self.iPAddress = iPAddress
            self.iamRole = iamRole
            self.instanceId = instanceId
            self.isLatestVersion = isLatestVersion
            self.lastAssociationExecutionDate = lastAssociationExecutionDate
            self.lastPingDateTime = lastPingDateTime
            self.lastSuccessfulAssociationExecutionDate = lastSuccessfulAssociationExecutionDate
            self.name = name
            self.pingStatus = pingStatus
            self.platformName = platformName
            self.platformType = platformType
            self.platformVersion = platformVersion
            self.registrationDate = registrationDate
            self.resourceType = resourceType
            self.sourceId = sourceId
            self.sourceType = sourceType
        }
    }

}
