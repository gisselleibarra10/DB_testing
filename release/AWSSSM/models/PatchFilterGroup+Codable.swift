// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.PatchFilterGroup: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case patchFilters = "PatchFilters"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let patchFilters = patchFilters {
            var patchFiltersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .patchFilters)
            for patchfilterlist0 in patchFilters {
                try patchFiltersContainer.encode(patchfilterlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let patchFiltersContainer = try containerValues.decodeIfPresent([SsmClientTypes.PatchFilter?].self, forKey: .patchFilters)
        var patchFiltersDecoded0:[SsmClientTypes.PatchFilter]? = nil
        if let patchFiltersContainer = patchFiltersContainer {
            patchFiltersDecoded0 = [SsmClientTypes.PatchFilter]()
            for structure0 in patchFiltersContainer {
                if let structure0 = structure0 {
                    patchFiltersDecoded0?.append(structure0)
                }
            }
        }
        patchFilters = patchFiltersDecoded0
    }
}
