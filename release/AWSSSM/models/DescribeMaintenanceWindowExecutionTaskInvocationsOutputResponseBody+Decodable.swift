// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMaintenanceWindowExecutionTaskInvocationsOutputResponseBody: Swift.Equatable {
    let windowExecutionTaskInvocationIdentities: [SsmClientTypes.MaintenanceWindowExecutionTaskInvocationIdentity]?
    let nextToken: Swift.String?
}

extension DescribeMaintenanceWindowExecutionTaskInvocationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case windowExecutionTaskInvocationIdentities = "WindowExecutionTaskInvocationIdentities"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let windowExecutionTaskInvocationIdentitiesContainer = try containerValues.decodeIfPresent([SsmClientTypes.MaintenanceWindowExecutionTaskInvocationIdentity?].self, forKey: .windowExecutionTaskInvocationIdentities)
        var windowExecutionTaskInvocationIdentitiesDecoded0:[SsmClientTypes.MaintenanceWindowExecutionTaskInvocationIdentity]? = nil
        if let windowExecutionTaskInvocationIdentitiesContainer = windowExecutionTaskInvocationIdentitiesContainer {
            windowExecutionTaskInvocationIdentitiesDecoded0 = [SsmClientTypes.MaintenanceWindowExecutionTaskInvocationIdentity]()
            for structure0 in windowExecutionTaskInvocationIdentitiesContainer {
                if let structure0 = structure0 {
                    windowExecutionTaskInvocationIdentitiesDecoded0?.append(structure0)
                }
            }
        }
        windowExecutionTaskInvocationIdentities = windowExecutionTaskInvocationIdentitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
