// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct OpsItemInvalidParameterExceptionBody: Swift.Equatable {
    let parameterNames: [Swift.String]?
    let message: Swift.String?
}

extension OpsItemInvalidParameterExceptionBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case message = "Message"
        case parameterNames = "ParameterNames"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let parameterNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .parameterNames)
        var parameterNamesDecoded0:[Swift.String]? = nil
        if let parameterNamesContainer = parameterNamesContainer {
            parameterNamesDecoded0 = [Swift.String]()
            for string0 in parameterNamesContainer {
                if let string0 = string0 {
                    parameterNamesDecoded0?.append(string0)
                }
            }
        }
        parameterNames = parameterNamesDecoded0
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
    }
}
