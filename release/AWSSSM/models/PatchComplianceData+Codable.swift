// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.PatchComplianceData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cVEIds = "CVEIds"
        case classification = "Classification"
        case installedTime = "InstalledTime"
        case kBId = "KBId"
        case severity = "Severity"
        case state = "State"
        case title = "Title"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cVEIds = self.cVEIds {
            try encodeContainer.encode(cVEIds, forKey: .cVEIds)
        }
        if let classification = self.classification {
            try encodeContainer.encode(classification, forKey: .classification)
        }
        if let installedTime = self.installedTime {
            try encodeContainer.encode(installedTime.timeIntervalSince1970, forKey: .installedTime)
        }
        if let kBId = self.kBId {
            try encodeContainer.encode(kBId, forKey: .kBId)
        }
        if let severity = self.severity {
            try encodeContainer.encode(severity, forKey: .severity)
        }
        if let state = self.state {
            try encodeContainer.encode(state.rawValue, forKey: .state)
        }
        if let title = self.title {
            try encodeContainer.encode(title, forKey: .title)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let titleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .title)
        title = titleDecoded
        let kBIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kBId)
        kBId = kBIdDecoded
        let classificationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .classification)
        classification = classificationDecoded
        let severityDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .severity)
        severity = severityDecoded
        let stateDecoded = try containerValues.decodeIfPresent(SsmClientTypes.PatchComplianceDataState.self, forKey: .state)
        state = stateDecoded
        let installedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .installedTime)
        installedTime = installedTimeDecoded
        let cVEIdsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cVEIds)
        cVEIds = cVEIdsDecoded
    }
}
