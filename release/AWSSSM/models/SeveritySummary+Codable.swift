// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.SeveritySummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case criticalCount = "CriticalCount"
        case highCount = "HighCount"
        case informationalCount = "InformationalCount"
        case lowCount = "LowCount"
        case mediumCount = "MediumCount"
        case unspecifiedCount = "UnspecifiedCount"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if criticalCount != 0 {
            try encodeContainer.encode(criticalCount, forKey: .criticalCount)
        }
        if highCount != 0 {
            try encodeContainer.encode(highCount, forKey: .highCount)
        }
        if informationalCount != 0 {
            try encodeContainer.encode(informationalCount, forKey: .informationalCount)
        }
        if lowCount != 0 {
            try encodeContainer.encode(lowCount, forKey: .lowCount)
        }
        if mediumCount != 0 {
            try encodeContainer.encode(mediumCount, forKey: .mediumCount)
        }
        if unspecifiedCount != 0 {
            try encodeContainer.encode(unspecifiedCount, forKey: .unspecifiedCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let criticalCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .criticalCount) ?? 0
        criticalCount = criticalCountDecoded
        let highCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .highCount) ?? 0
        highCount = highCountDecoded
        let mediumCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .mediumCount) ?? 0
        mediumCount = mediumCountDecoded
        let lowCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .lowCount) ?? 0
        lowCount = lowCountDecoded
        let informationalCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .informationalCount) ?? 0
        informationalCount = informationalCountDecoded
        let unspecifiedCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unspecifiedCount) ?? 0
        unspecifiedCount = unspecifiedCountDecoded
    }
}
