// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartAutomationExecutionInput: Swift.Equatable {
    /// The CloudWatch alarm you want to apply to your automation.
    public var alarmConfiguration: SsmClientTypes.AlarmConfiguration?
    /// User-provided idempotency token. The token must be unique, is case insensitive, enforces the UUID format, and can't be reused.
    public var clientToken: Swift.String?
    /// The name of the SSM document to run. This can be a public document or a custom document. To run a shared document belonging to another account, specify the document ARN. For more information about how to use shared documents, see [Using shared SSM documents](https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-using-shared.html) in the Amazon Web Services Systems Manager User Guide.
    /// This member is required.
    public var documentName: Swift.String?
    /// The version of the Automation runbook to use for this execution.
    public var documentVersion: Swift.String?
    /// The maximum number of targets allowed to run this task in parallel. You can specify a number, such as 10, or a percentage, such as 10%. The default value is 10.
    public var maxConcurrency: Swift.String?
    /// The number of errors that are allowed before the system stops running the automation on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops running the automation when the fourth error is received. If you specify 0, then the system stops running the automation on additional targets after the first error result is returned. If you run an automation on 50 resources and set max-errors to 10%, then the system stops running the automation on additional targets when the sixth error is received. Executions that are already running an automation when max-errors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set max-concurrency to 1 so the executions proceed one at a time.
    public var maxErrors: Swift.String?
    /// The execution mode of the automation. Valid modes include the following: Auto and Interactive. The default mode is Auto.
    public var mode: SsmClientTypes.ExecutionMode?
    /// A key-value map of execution parameters, which match the declared parameters in the Automation runbook.
    public var parameters: [Swift.String:[Swift.String]]?
    /// Optional metadata that you assign to a resource. You can specify a maximum of five tags for an automation. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an automation to identify an environment or operating system. In this case, you could specify the following key-value pairs:
    ///
    /// * Key=environment,Value=test
    ///
    /// * Key=OS,Value=Windows
    ///
    ///
    /// To add tags to an existing automation, use the [AddTagsToResource] operation.
    public var tags: [SsmClientTypes.Tag]?
    /// A location is a combination of Amazon Web Services Regions and/or Amazon Web Services accounts where you want to run the automation. Use this operation to start an automation in multiple Amazon Web Services Regions and multiple Amazon Web Services accounts. For more information, see [Running Automation workflows in multiple Amazon Web Services Regions and Amazon Web Services accounts](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html) in the Amazon Web Services Systems Manager User Guide.
    public var targetLocations: [SsmClientTypes.TargetLocation]?
    /// A key-value mapping of document parameters to target resources. Both Targets and TargetMaps can't be specified together.
    public var targetMaps: [[Swift.String:[Swift.String]]]?
    /// The name of the parameter used as the target resource for the rate-controlled execution. Required if you specify targets.
    public var targetParameterName: Swift.String?
    /// A key-value mapping to target resources. Required if you specify TargetParameterName.
    public var targets: [SsmClientTypes.Target]?

    public init (
        alarmConfiguration: SsmClientTypes.AlarmConfiguration? = nil,
        clientToken: Swift.String? = nil,
        documentName: Swift.String? = nil,
        documentVersion: Swift.String? = nil,
        maxConcurrency: Swift.String? = nil,
        maxErrors: Swift.String? = nil,
        mode: SsmClientTypes.ExecutionMode? = nil,
        parameters: [Swift.String:[Swift.String]]? = nil,
        tags: [SsmClientTypes.Tag]? = nil,
        targetLocations: [SsmClientTypes.TargetLocation]? = nil,
        targetMaps: [[Swift.String:[Swift.String]]]? = nil,
        targetParameterName: Swift.String? = nil,
        targets: [SsmClientTypes.Target]? = nil
    )
    {
        self.alarmConfiguration = alarmConfiguration
        self.clientToken = clientToken
        self.documentName = documentName
        self.documentVersion = documentVersion
        self.maxConcurrency = maxConcurrency
        self.maxErrors = maxErrors
        self.mode = mode
        self.parameters = parameters
        self.tags = tags
        self.targetLocations = targetLocations
        self.targetMaps = targetMaps
        self.targetParameterName = targetParameterName
        self.targets = targets
    }
}
