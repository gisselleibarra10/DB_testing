// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes {
    /// Detailed information about the current state of an individual Automation execution.
    public struct AutomationExecution: Swift.Equatable {
        /// The details for the CloudWatch alarm applied to your automation.
        public var alarmConfiguration: SsmClientTypes.AlarmConfiguration?
        /// The ID of a State Manager association used in the Automation operation.
        public var associationId: Swift.String?
        /// The execution ID.
        public var automationExecutionId: Swift.String?
        /// The execution status of the Automation.
        public var automationExecutionStatus: SsmClientTypes.AutomationExecutionStatus?
        /// The subtype of the Automation operation. Currently, the only supported value is ChangeRequest.
        public var automationSubtype: SsmClientTypes.AutomationSubtype?
        /// The name of the Change Manager change request.
        public var changeRequestName: Swift.String?
        /// The action of the step that is currently running.
        public var currentAction: Swift.String?
        /// The name of the step that is currently running.
        public var currentStepName: Swift.String?
        /// The name of the Automation runbook used during the execution.
        public var documentName: Swift.String?
        /// The version of the document to use during execution.
        public var documentVersion: Swift.String?
        /// The Amazon Resource Name (ARN) of the user who ran the automation.
        public var executedBy: Swift.String?
        /// The time the execution finished.
        public var executionEndTime: ClientRuntime.Date?
        /// The time the execution started.
        public var executionStartTime: ClientRuntime.Date?
        /// A message describing why an execution has failed, if the status is set to Failed.
        public var failureMessage: Swift.String?
        /// The MaxConcurrency value specified by the user when the execution started.
        public var maxConcurrency: Swift.String?
        /// The MaxErrors value specified by the user when the execution started.
        public var maxErrors: Swift.String?
        /// The automation execution mode.
        public var mode: SsmClientTypes.ExecutionMode?
        /// The ID of an OpsItem that is created to represent a Change Manager change request.
        public var opsItemId: Swift.String?
        /// The list of execution outputs as defined in the Automation runbook.
        public var outputs: [Swift.String:[Swift.String]]?
        /// The key-value map of execution parameters, which were supplied when calling [StartAutomationExecution].
        public var parameters: [Swift.String:[Swift.String]]?
        /// The AutomationExecutionId of the parent automation.
        public var parentAutomationExecutionId: Swift.String?
        /// An aggregate of step execution statuses displayed in the Amazon Web Services Systems Manager console for a multi-Region and multi-account Automation execution.
        public var progressCounters: SsmClientTypes.ProgressCounters?
        /// A list of resolved targets in the rate control execution.
        public var resolvedTargets: SsmClientTypes.ResolvedTargets?
        /// Information about the Automation runbooks that are run as part of a runbook workflow. The Automation runbooks specified for the runbook workflow can't run until all required approvals for the change request have been received.
        public var runbooks: [SsmClientTypes.Runbook]?
        /// The date and time the Automation operation is scheduled to start.
        public var scheduledTime: ClientRuntime.Date?
        /// A list of details about the current state of all steps that comprise an execution. An Automation runbook contains a list of steps that are run in order.
        public var stepExecutions: [SsmClientTypes.StepExecution]?
        /// A boolean value that indicates if the response contains the full list of the Automation step executions. If true, use the DescribeAutomationStepExecutions API operation to get the full list of step executions.
        public var stepExecutionsTruncated: Swift.Bool
        /// The target of the execution.
        public var target: Swift.String?
        /// The combination of Amazon Web Services Regions and/or Amazon Web Services accounts where you want to run the Automation.
        public var targetLocations: [SsmClientTypes.TargetLocation]?
        /// The specified key-value mapping of document parameters to target resources.
        public var targetMaps: [[Swift.String:[Swift.String]]]?
        /// The parameter name.
        public var targetParameterName: Swift.String?
        /// The specified targets.
        public var targets: [SsmClientTypes.Target]?
        /// The CloudWatch alarm that was invoked by the automation.
        public var triggeredAlarms: [SsmClientTypes.AlarmStateInformation]?

        public init (
            alarmConfiguration: SsmClientTypes.AlarmConfiguration? = nil,
            associationId: Swift.String? = nil,
            automationExecutionId: Swift.String? = nil,
            automationExecutionStatus: SsmClientTypes.AutomationExecutionStatus? = nil,
            automationSubtype: SsmClientTypes.AutomationSubtype? = nil,
            changeRequestName: Swift.String? = nil,
            currentAction: Swift.String? = nil,
            currentStepName: Swift.String? = nil,
            documentName: Swift.String? = nil,
            documentVersion: Swift.String? = nil,
            executedBy: Swift.String? = nil,
            executionEndTime: ClientRuntime.Date? = nil,
            executionStartTime: ClientRuntime.Date? = nil,
            failureMessage: Swift.String? = nil,
            maxConcurrency: Swift.String? = nil,
            maxErrors: Swift.String? = nil,
            mode: SsmClientTypes.ExecutionMode? = nil,
            opsItemId: Swift.String? = nil,
            outputs: [Swift.String:[Swift.String]]? = nil,
            parameters: [Swift.String:[Swift.String]]? = nil,
            parentAutomationExecutionId: Swift.String? = nil,
            progressCounters: SsmClientTypes.ProgressCounters? = nil,
            resolvedTargets: SsmClientTypes.ResolvedTargets? = nil,
            runbooks: [SsmClientTypes.Runbook]? = nil,
            scheduledTime: ClientRuntime.Date? = nil,
            stepExecutions: [SsmClientTypes.StepExecution]? = nil,
            stepExecutionsTruncated: Swift.Bool = false,
            target: Swift.String? = nil,
            targetLocations: [SsmClientTypes.TargetLocation]? = nil,
            targetMaps: [[Swift.String:[Swift.String]]]? = nil,
            targetParameterName: Swift.String? = nil,
            targets: [SsmClientTypes.Target]? = nil,
            triggeredAlarms: [SsmClientTypes.AlarmStateInformation]? = nil
        )
        {
            self.alarmConfiguration = alarmConfiguration
            self.associationId = associationId
            self.automationExecutionId = automationExecutionId
            self.automationExecutionStatus = automationExecutionStatus
            self.automationSubtype = automationSubtype
            self.changeRequestName = changeRequestName
            self.currentAction = currentAction
            self.currentStepName = currentStepName
            self.documentName = documentName
            self.documentVersion = documentVersion
            self.executedBy = executedBy
            self.executionEndTime = executionEndTime
            self.executionStartTime = executionStartTime
            self.failureMessage = failureMessage
            self.maxConcurrency = maxConcurrency
            self.maxErrors = maxErrors
            self.mode = mode
            self.opsItemId = opsItemId
            self.outputs = outputs
            self.parameters = parameters
            self.parentAutomationExecutionId = parentAutomationExecutionId
            self.progressCounters = progressCounters
            self.resolvedTargets = resolvedTargets
            self.runbooks = runbooks
            self.scheduledTime = scheduledTime
            self.stepExecutions = stepExecutions
            self.stepExecutionsTruncated = stepExecutionsTruncated
            self.target = target
            self.targetLocations = targetLocations
            self.targetMaps = targetMaps
            self.targetParameterName = targetParameterName
            self.targets = targets
            self.triggeredAlarms = triggeredAlarms
        }
    }

}
