// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeActivationsOutputResponseBody: Swift.Equatable {
    let activationList: [SsmClientTypes.Activation]?
    let nextToken: Swift.String?
}

extension DescribeActivationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activationList = "ActivationList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activationListContainer = try containerValues.decodeIfPresent([SsmClientTypes.Activation?].self, forKey: .activationList)
        var activationListDecoded0:[SsmClientTypes.Activation]? = nil
        if let activationListContainer = activationListContainer {
            activationListDecoded0 = [SsmClientTypes.Activation]()
            for structure0 in activationListContainer {
                if let structure0 = structure0 {
                    activationListDecoded0?.append(structure0)
                }
            }
        }
        activationList = activationListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
