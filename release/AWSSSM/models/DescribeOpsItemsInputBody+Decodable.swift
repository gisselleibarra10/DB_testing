// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOpsItemsInputBody: Swift.Equatable {
    let opsItemFilters: [SsmClientTypes.OpsItemFilter]?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension DescribeOpsItemsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case opsItemFilters = "OpsItemFilters"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let opsItemFiltersContainer = try containerValues.decodeIfPresent([SsmClientTypes.OpsItemFilter?].self, forKey: .opsItemFilters)
        var opsItemFiltersDecoded0:[SsmClientTypes.OpsItemFilter]? = nil
        if let opsItemFiltersContainer = opsItemFiltersContainer {
            opsItemFiltersDecoded0 = [SsmClientTypes.OpsItemFilter]()
            for structure0 in opsItemFiltersContainer {
                if let structure0 = structure0 {
                    opsItemFiltersDecoded0?.append(structure0)
                }
            }
        }
        opsItemFilters = opsItemFiltersDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
