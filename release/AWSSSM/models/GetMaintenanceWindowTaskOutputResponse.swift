// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetMaintenanceWindowTaskOutputResponse: Swift.Equatable {
    /// The details for the CloudWatch alarm you applied to your maintenance window task.
    public var alarmConfiguration: SsmClientTypes.AlarmConfiguration?
    /// The action to take on tasks when the maintenance window cutoff time is reached. CONTINUE_TASK means that tasks continue to run. For Automation, Lambda, Step Functions tasks, CANCEL_TASK means that currently running task invocations continue, but no new task invocations are started. For Run Command tasks, CANCEL_TASK means the system attempts to stop the task by sending a CancelCommand operation.
    public var cutoffBehavior: SsmClientTypes.MaintenanceWindowTaskCutoffBehavior?
    /// The retrieved task description.
    public var description: Swift.String?
    /// The location in Amazon Simple Storage Service (Amazon S3) where the task results are logged. LoggingInfo has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the OutputS3BucketName and OutputS3KeyPrefix options in the TaskInvocationParameters structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see [MaintenanceWindowTaskInvocationParameters].
    public var loggingInfo: SsmClientTypes.LoggingInfo?
    /// The maximum number of targets allowed to run this task in parallel. For maintenance window tasks without a target specified, you can't supply a value for this option. Instead, the system inserts a placeholder value of 1, which may be reported in the response to this command. This value doesn't affect the running of your task and can be ignored.
    public var maxConcurrency: Swift.String?
    /// The maximum number of errors allowed before the task stops being scheduled. For maintenance window tasks without a target specified, you can't supply a value for this option. Instead, the system inserts a placeholder value of 1, which may be reported in the response to this command. This value doesn't affect the running of your task and can be ignored.
    public var maxErrors: Swift.String?
    /// The retrieved task name.
    public var name: Swift.String?
    /// The priority of the task when it runs. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.
    public var priority: Swift.Int
    /// The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for maintenance window Run Command tasks.
    public var serviceRoleArn: Swift.String?
    /// The targets where the task should run.
    public var targets: [SsmClientTypes.Target]?
    /// The resource that the task used during execution. For RUN_COMMAND and AUTOMATION task types, the value of TaskArn is the SSM document name/ARN. For LAMBDA tasks, the value is the function name/ARN. For STEP_FUNCTIONS tasks, the value is the state machine ARN.
    public var taskArn: Swift.String?
    /// The parameters to pass to the task when it runs.
    public var taskInvocationParameters: SsmClientTypes.MaintenanceWindowTaskInvocationParameters?
    /// The parameters to pass to the task when it runs. TaskParameters has been deprecated. To specify parameters to pass to a task when it runs, instead use the Parameters option in the TaskInvocationParameters structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see [MaintenanceWindowTaskInvocationParameters].
    public var taskParameters: [Swift.String:SsmClientTypes.MaintenanceWindowTaskParameterValueExpression]?
    /// The type of task to run.
    public var taskType: SsmClientTypes.MaintenanceWindowTaskType?
    /// The retrieved maintenance window ID.
    public var windowId: Swift.String?
    /// The retrieved maintenance window task ID.
    public var windowTaskId: Swift.String?

    public init (
        alarmConfiguration: SsmClientTypes.AlarmConfiguration? = nil,
        cutoffBehavior: SsmClientTypes.MaintenanceWindowTaskCutoffBehavior? = nil,
        description: Swift.String? = nil,
        loggingInfo: SsmClientTypes.LoggingInfo? = nil,
        maxConcurrency: Swift.String? = nil,
        maxErrors: Swift.String? = nil,
        name: Swift.String? = nil,
        priority: Swift.Int = 0,
        serviceRoleArn: Swift.String? = nil,
        targets: [SsmClientTypes.Target]? = nil,
        taskArn: Swift.String? = nil,
        taskInvocationParameters: SsmClientTypes.MaintenanceWindowTaskInvocationParameters? = nil,
        taskParameters: [Swift.String:SsmClientTypes.MaintenanceWindowTaskParameterValueExpression]? = nil,
        taskType: SsmClientTypes.MaintenanceWindowTaskType? = nil,
        windowId: Swift.String? = nil,
        windowTaskId: Swift.String? = nil
    )
    {
        self.alarmConfiguration = alarmConfiguration
        self.cutoffBehavior = cutoffBehavior
        self.description = description
        self.loggingInfo = loggingInfo
        self.maxConcurrency = maxConcurrency
        self.maxErrors = maxErrors
        self.name = name
        self.priority = priority
        self.serviceRoleArn = serviceRoleArn
        self.targets = targets
        self.taskArn = taskArn
        self.taskInvocationParameters = taskInvocationParameters
        self.taskParameters = taskParameters
        self.taskType = taskType
        self.windowId = windowId
        self.windowTaskId = windowTaskId
    }
}
