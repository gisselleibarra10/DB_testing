// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMaintenanceWindowsForTargetOutputResponseBody: Swift.Equatable {
    let windowIdentities: [SsmClientTypes.MaintenanceWindowIdentityForTarget]?
    let nextToken: Swift.String?
}

extension DescribeMaintenanceWindowsForTargetOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case windowIdentities = "WindowIdentities"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let windowIdentitiesContainer = try containerValues.decodeIfPresent([SsmClientTypes.MaintenanceWindowIdentityForTarget?].self, forKey: .windowIdentities)
        var windowIdentitiesDecoded0:[SsmClientTypes.MaintenanceWindowIdentityForTarget]? = nil
        if let windowIdentitiesContainer = windowIdentitiesContainer {
            windowIdentitiesDecoded0 = [SsmClientTypes.MaintenanceWindowIdentityForTarget]()
            for structure0 in windowIdentitiesContainer {
                if let structure0 = structure0 {
                    windowIdentitiesDecoded0?.append(structure0)
                }
            }
        }
        windowIdentities = windowIdentitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
