// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateMaintenanceWindowTargetInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case name = "Name"
        case ownerInformation = "OwnerInformation"
        case replace = "Replace"
        case targets = "Targets"
        case windowId = "WindowId"
        case windowTargetId = "WindowTargetId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let ownerInformation = self.ownerInformation {
            try encodeContainer.encode(ownerInformation, forKey: .ownerInformation)
        }
        if let replace = self.replace {
            try encodeContainer.encode(replace, forKey: .replace)
        }
        if let targets = targets {
            var targetsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .targets)
            for targets0 in targets {
                try targetsContainer.encode(targets0)
            }
        }
        if let windowId = self.windowId {
            try encodeContainer.encode(windowId, forKey: .windowId)
        }
        if let windowTargetId = self.windowTargetId {
            try encodeContainer.encode(windowTargetId, forKey: .windowTargetId)
        }
    }
}
