// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes {
    /// Represents metadata about a patch.
    public struct Patch: Swift.Equatable {
        /// The Advisory ID of the patch. For example, RHSA-2020:3779. Applies to Linux-based managed nodes only.
        public var advisoryIds: [Swift.String]?
        /// The architecture of the patch. For example, in example-pkg-0.710.10-2.7.abcd.x86_64, the architecture is indicated by x86_64. Applies to Linux-based managed nodes only.
        public var arch: Swift.String?
        /// The Bugzilla ID of the patch. For example, 1600646. Applies to Linux-based managed nodes only.
        public var bugzillaIds: [Swift.String]?
        /// The Common Vulnerabilities and Exposures (CVE) ID of the patch. For example, CVE-2011-3192. Applies to Linux-based managed nodes only.
        public var cVEIds: [Swift.String]?
        /// The classification of the patch. For example, SecurityUpdates, Updates, or CriticalUpdates.
        public var classification: Swift.String?
        /// The URL where more information can be obtained about the patch.
        public var contentUrl: Swift.String?
        /// The description of the patch.
        public var description: Swift.String?
        /// The epoch of the patch. For example in pkg-example-EE-20180914-2.2.amzn1.noarch, the epoch value is 20180914-2. Applies to Linux-based managed nodes only.
        public var epoch: Swift.Int
        /// The ID of the patch. Applies to Windows patches only. This ID isn't the same as the Microsoft Knowledge Base ID.
        public var id: Swift.String?
        /// The Microsoft Knowledge Base ID of the patch. Applies to Windows patches only.
        public var kbNumber: Swift.String?
        /// The language of the patch if it's language-specific.
        public var language: Swift.String?
        /// The ID of the Microsoft Security Response Center (MSRC) bulletin the patch is related to. For example, MS14-045. Applies to Windows patches only.
        public var msrcNumber: Swift.String?
        /// The severity of the patch, such as Critical, Important, or Moderate. Applies to Windows patches only.
        public var msrcSeverity: Swift.String?
        /// The name of the patch. Applies to Linux-based managed nodes only.
        public var name: Swift.String?
        /// The specific product the patch is applicable for. For example, WindowsServer2016 or AmazonLinux2018.03.
        public var product: Swift.String?
        /// The product family the patch is applicable for. For example, Windows or Amazon Linux 2.
        public var productFamily: Swift.String?
        /// The particular release of a patch. For example, in pkg-example-EE-20180914-2.2.amzn1.noarch, the release is 2.amaz1. Applies to Linux-based managed nodes only.
        public var release: Swift.String?
        /// The date the patch was released.
        public var releaseDate: ClientRuntime.Date?
        /// The source patch repository for the operating system and version, such as trusty-security for Ubuntu Server 14.04 LTE and focal-security for Ubuntu Server 20.04 LTE. Applies to Linux-based managed nodes only.
        public var repository: Swift.String?
        /// The severity level of the patch. For example, CRITICAL or MODERATE.
        public var severity: Swift.String?
        /// The title of the patch.
        public var title: Swift.String?
        /// The name of the vendor providing the patch.
        public var vendor: Swift.String?
        /// The version number of the patch. For example, in example-pkg-1.710.10-2.7.abcd.x86_64, the version number is indicated by -1. Applies to Linux-based managed nodes only.
        public var version: Swift.String?

        public init (
            advisoryIds: [Swift.String]? = nil,
            arch: Swift.String? = nil,
            bugzillaIds: [Swift.String]? = nil,
            cVEIds: [Swift.String]? = nil,
            classification: Swift.String? = nil,
            contentUrl: Swift.String? = nil,
            description: Swift.String? = nil,
            epoch: Swift.Int = 0,
            id: Swift.String? = nil,
            kbNumber: Swift.String? = nil,
            language: Swift.String? = nil,
            msrcNumber: Swift.String? = nil,
            msrcSeverity: Swift.String? = nil,
            name: Swift.String? = nil,
            product: Swift.String? = nil,
            productFamily: Swift.String? = nil,
            release: Swift.String? = nil,
            releaseDate: ClientRuntime.Date? = nil,
            repository: Swift.String? = nil,
            severity: Swift.String? = nil,
            title: Swift.String? = nil,
            vendor: Swift.String? = nil,
            version: Swift.String? = nil
        )
        {
            self.advisoryIds = advisoryIds
            self.arch = arch
            self.bugzillaIds = bugzillaIds
            self.cVEIds = cVEIds
            self.classification = classification
            self.contentUrl = contentUrl
            self.description = description
            self.epoch = epoch
            self.id = id
            self.kbNumber = kbNumber
            self.language = language
            self.msrcNumber = msrcNumber
            self.msrcSeverity = msrcSeverity
            self.name = name
            self.product = product
            self.productFamily = productFamily
            self.release = release
            self.releaseDate = releaseDate
            self.repository = repository
            self.severity = severity
            self.title = title
            self.vendor = vendor
            self.version = version
        }
    }

}
