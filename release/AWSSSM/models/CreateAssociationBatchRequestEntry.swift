// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SsmClientTypes {
    /// Describes the association of a Amazon Web Services Systems Manager document (SSM document) and a managed node.
    public struct CreateAssociationBatchRequestEntry: Swift.Equatable {
        /// The details for the CloudWatch alarm you want to apply to an automation or command.
        public var alarmConfiguration: SsmClientTypes.AlarmConfiguration?
        /// By default, when you create a new associations, the system runs it immediately after it is created and then according to the schedule you specified. Specify this option if you don't want an association to run immediately after you create it. This parameter isn't supported for rate expressions.
        public var applyOnlyAtCronInterval: Swift.Bool
        /// Specify a descriptive name for the association.
        public var associationName: Swift.String?
        /// Specify the target for the association. This target is required for associations that use an Automation runbook and target resources by using rate controls. Automation is a capability of Amazon Web Services Systems Manager.
        public var automationTargetParameterName: Swift.String?
        /// The names or Amazon Resource Names (ARNs) of the Change Calendar type documents your associations are gated under. The associations only run when that Change Calendar is open. For more information, see [Amazon Web Services Systems Manager Change Calendar](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar).
        public var calendarNames: [Swift.String]?
        /// The severity level to assign to the association.
        public var complianceSeverity: SsmClientTypes.AssociationComplianceSeverity?
        /// The document version.
        public var documentVersion: Swift.String?
        /// The managed node ID. InstanceId has been deprecated. To specify a managed node ID for an association, use the Targets parameter. Requests that include the parameter InstanceID with Systems Manager documents (SSM documents) that use schema version 2.0 or later will fail. In addition, if you use the parameter InstanceId, you can't use the parameters AssociationName, DocumentVersion, MaxErrors, MaxConcurrency, OutputLocation, or ScheduleExpression. To use these parameters, you must use the Targets parameter.
        public var instanceId: Swift.String?
        /// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time. If a new managed node starts and attempts to run an association while Systems Manager is running MaxConcurrency associations, the association is allowed to run. During the next association interval, the new managed node will process its association within the limit specified for MaxConcurrency.
        public var maxConcurrency: Swift.String?
        /// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 managed nodes and set MaxError to 10%, then the system stops sending the request when the sixth error is received. Executions that are already running an association when MaxErrors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set MaxConcurrency to 1 so that executions proceed one at a time.
        public var maxErrors: Swift.String?
        /// The name of the SSM document that contains the configuration information for the managed node. You can specify Command or Automation runbooks. You can specify Amazon Web Services-predefined documents, documents you created, or a document that is shared with you from another account. For SSM documents that are shared with you from other Amazon Web Services accounts, you must specify the complete SSM document ARN, in the following format: arn:aws:ssm:region:account-id:document/document-name  For example: arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document For Amazon Web Services-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, AWS-ApplyPatchBaseline or My-Document.
        /// This member is required.
        public var name: Swift.String?
        /// An S3 bucket where you want to store the results of this request.
        public var outputLocation: SsmClientTypes.InstanceAssociationOutputLocation?
        /// A description of the parameters for a document.
        public var parameters: [Swift.String:[Swift.String]]?
        /// A cron expression that specifies a schedule when the association runs.
        public var scheduleExpression: Swift.String?
        /// Number of days to wait after the scheduled day to run an association.
        public var scheduleOffset: Swift.Int?
        /// The mode for generating association compliance. You can specify AUTO or MANUAL. In AUTO mode, the system uses the status of the association execution to determine the compliance status. If the association execution runs successfully, then the association is COMPLIANT. If the association execution doesn't run successfully, the association is NON-COMPLIANT. In MANUAL mode, you must specify the AssociationId as a parameter for the [PutComplianceItems] API operation. In this case, compliance data isn't managed by State Manager, a capability of Amazon Web Services Systems Manager. It is managed by your direct call to the [PutComplianceItems] API operation. By default, all associations use AUTO mode.
        public var syncCompliance: SsmClientTypes.AssociationSyncCompliance?
        /// Use this action to create an association in multiple Regions and multiple accounts.
        public var targetLocations: [SsmClientTypes.TargetLocation]?
        /// A key-value mapping of document parameters to target resources. Both Targets and TargetMaps can't be specified together.
        public var targetMaps: [[Swift.String:[Swift.String]]]?
        /// The managed nodes targeted by the request.
        public var targets: [SsmClientTypes.Target]?

        public init (
            alarmConfiguration: SsmClientTypes.AlarmConfiguration? = nil,
            applyOnlyAtCronInterval: Swift.Bool = false,
            associationName: Swift.String? = nil,
            automationTargetParameterName: Swift.String? = nil,
            calendarNames: [Swift.String]? = nil,
            complianceSeverity: SsmClientTypes.AssociationComplianceSeverity? = nil,
            documentVersion: Swift.String? = nil,
            instanceId: Swift.String? = nil,
            maxConcurrency: Swift.String? = nil,
            maxErrors: Swift.String? = nil,
            name: Swift.String? = nil,
            outputLocation: SsmClientTypes.InstanceAssociationOutputLocation? = nil,
            parameters: [Swift.String:[Swift.String]]? = nil,
            scheduleExpression: Swift.String? = nil,
            scheduleOffset: Swift.Int? = nil,
            syncCompliance: SsmClientTypes.AssociationSyncCompliance? = nil,
            targetLocations: [SsmClientTypes.TargetLocation]? = nil,
            targetMaps: [[Swift.String:[Swift.String]]]? = nil,
            targets: [SsmClientTypes.Target]? = nil
        )
        {
            self.alarmConfiguration = alarmConfiguration
            self.applyOnlyAtCronInterval = applyOnlyAtCronInterval
            self.associationName = associationName
            self.automationTargetParameterName = automationTargetParameterName
            self.calendarNames = calendarNames
            self.complianceSeverity = complianceSeverity
            self.documentVersion = documentVersion
            self.instanceId = instanceId
            self.maxConcurrency = maxConcurrency
            self.maxErrors = maxErrors
            self.name = name
            self.outputLocation = outputLocation
            self.parameters = parameters
            self.scheduleExpression = scheduleExpression
            self.scheduleOffset = scheduleOffset
            self.syncCompliance = syncCompliance
            self.targetLocations = targetLocations
            self.targetMaps = targetMaps
            self.targets = targets
        }
    }

}
