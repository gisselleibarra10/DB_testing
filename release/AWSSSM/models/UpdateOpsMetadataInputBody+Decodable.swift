// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateOpsMetadataInputBody: Swift.Equatable {
    let opsMetadataArn: Swift.String?
    let metadataToUpdate: [Swift.String:SsmClientTypes.MetadataValue]?
    let keysToDelete: [Swift.String]?
}

extension UpdateOpsMetadataInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case keysToDelete = "KeysToDelete"
        case metadataToUpdate = "MetadataToUpdate"
        case opsMetadataArn = "OpsMetadataArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let opsMetadataArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .opsMetadataArn)
        opsMetadataArn = opsMetadataArnDecoded
        let metadataToUpdateContainer = try containerValues.decodeIfPresent([Swift.String: SsmClientTypes.MetadataValue?].self, forKey: .metadataToUpdate)
        var metadataToUpdateDecoded0: [Swift.String:SsmClientTypes.MetadataValue]? = nil
        if let metadataToUpdateContainer = metadataToUpdateContainer {
            metadataToUpdateDecoded0 = [Swift.String:SsmClientTypes.MetadataValue]()
            for (key0, metadatavalue0) in metadataToUpdateContainer {
                if let metadatavalue0 = metadatavalue0 {
                    metadataToUpdateDecoded0?[key0] = metadatavalue0
                }
            }
        }
        metadataToUpdate = metadataToUpdateDecoded0
        let keysToDeleteContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .keysToDelete)
        var keysToDeleteDecoded0:[Swift.String]? = nil
        if let keysToDeleteContainer = keysToDeleteContainer {
            keysToDeleteDecoded0 = [Swift.String]()
            for string0 in keysToDeleteContainer {
                if let string0 = string0 {
                    keysToDeleteDecoded0?.append(string0)
                }
            }
        }
        keysToDelete = keysToDeleteDecoded0
    }
}
