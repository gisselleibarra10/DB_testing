// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.AssociationOverview: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associationStatusAggregatedCount = "AssociationStatusAggregatedCount"
        case detailedStatus = "DetailedStatus"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let associationStatusAggregatedCount = associationStatusAggregatedCount {
            var associationStatusAggregatedCountContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .associationStatusAggregatedCount)
            for (dictKey0, associationstatusaggregatedcount0) in associationStatusAggregatedCount {
                try associationStatusAggregatedCountContainer.encode(associationstatusaggregatedcount0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let detailedStatus = self.detailedStatus {
            try encodeContainer.encode(detailedStatus, forKey: .detailedStatus)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let detailedStatusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .detailedStatus)
        detailedStatus = detailedStatusDecoded
        let associationStatusAggregatedCountContainer = try containerValues.decodeIfPresent([Swift.String: Swift.Int?].self, forKey: .associationStatusAggregatedCount)
        var associationStatusAggregatedCountDecoded0: [Swift.String:Swift.Int]? = nil
        if let associationStatusAggregatedCountContainer = associationStatusAggregatedCountContainer {
            associationStatusAggregatedCountDecoded0 = [Swift.String:Swift.Int]()
            for (key0, instancecount0) in associationStatusAggregatedCountContainer {
                if let instancecount0 = instancecount0 {
                    associationStatusAggregatedCountDecoded0?[key0] = instancecount0
                }
            }
        }
        associationStatusAggregatedCount = associationStatusAggregatedCountDecoded0
    }
}
