// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutComplianceItemsInput: Swift.Equatable {
    /// Specify the compliance type. For example, specify Association (for a State Manager association), Patch, or Custom:string.
    /// This member is required.
    public var complianceType: Swift.String?
    /// A summary of the call execution that includes an execution ID, the type of execution (for example, Command), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.
    /// This member is required.
    public var executionSummary: SsmClientTypes.ComplianceExecutionSummary?
    /// MD5 or SHA-256 content hash. The content hash is used to determine if existing information should be overwritten or ignored. If the content hashes match, the request to put compliance information is ignored.
    public var itemContentHash: Swift.String?
    /// Information about the compliance as defined by the resource type. For example, for a patch compliance type, Items includes information about the PatchSeverity, Classification, and so on.
    /// This member is required.
    public var items: [SsmClientTypes.ComplianceItemEntry]?
    /// Specify an ID for this resource. For a managed node, this is the node ID.
    /// This member is required.
    public var resourceId: Swift.String?
    /// Specify the type of resource. ManagedInstance is currently the only supported resource type.
    /// This member is required.
    public var resourceType: Swift.String?
    /// The mode for uploading compliance items. You can specify COMPLETE or PARTIAL. In COMPLETE mode, the system overwrites all existing compliance information for the resource. You must provide a full list of compliance items each time you send the request. In PARTIAL mode, the system overwrites compliance information for a specific association. The association must be configured with SyncCompliance set to MANUAL. By default, all requests use COMPLETE mode. This attribute is only valid for association compliance.
    public var uploadType: SsmClientTypes.ComplianceUploadType?

    public init (
        complianceType: Swift.String? = nil,
        executionSummary: SsmClientTypes.ComplianceExecutionSummary? = nil,
        itemContentHash: Swift.String? = nil,
        items: [SsmClientTypes.ComplianceItemEntry]? = nil,
        resourceId: Swift.String? = nil,
        resourceType: Swift.String? = nil,
        uploadType: SsmClientTypes.ComplianceUploadType? = nil
    )
    {
        self.complianceType = complianceType
        self.executionSummary = executionSummary
        self.itemContentHash = itemContentHash
        self.items = items
        self.resourceId = resourceId
        self.resourceType = resourceType
        self.uploadType = uploadType
    }
}
