// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetOpsSummaryInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregators = "Aggregators"
        case filters = "Filters"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case resultAttributes = "ResultAttributes"
        case syncName = "SyncName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aggregators = aggregators {
            var aggregatorsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .aggregators)
            for opsaggregatorlist0 in aggregators {
                try aggregatorsContainer.encode(opsaggregatorlist0)
            }
        }
        if let filters = filters {
            var filtersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filters)
            for opsfilterlist0 in filters {
                try filtersContainer.encode(opsfilterlist0)
            }
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let resultAttributes = resultAttributes {
            var resultAttributesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .resultAttributes)
            for opsresultattributelist0 in resultAttributes {
                try resultAttributesContainer.encode(opsresultattributelist0)
            }
        }
        if let syncName = self.syncName {
            try encodeContainer.encode(syncName, forKey: .syncName)
        }
    }
}
