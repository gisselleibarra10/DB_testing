// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDocumentVersionsOutputResponseBody: Swift.Equatable {
    let documentVersions: [SsmClientTypes.DocumentVersionInfo]?
    let nextToken: Swift.String?
}

extension ListDocumentVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case documentVersions = "DocumentVersions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentVersionsContainer = try containerValues.decodeIfPresent([SsmClientTypes.DocumentVersionInfo?].self, forKey: .documentVersions)
        var documentVersionsDecoded0:[SsmClientTypes.DocumentVersionInfo]? = nil
        if let documentVersionsContainer = documentVersionsContainer {
            documentVersionsDecoded0 = [SsmClientTypes.DocumentVersionInfo]()
            for structure0 in documentVersionsContainer {
                if let structure0 = structure0 {
                    documentVersionsDecoded0?.append(structure0)
                }
            }
        }
        documentVersions = documentVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
