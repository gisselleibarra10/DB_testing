// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmClientTypes.MaintenanceWindowLambdaParameters: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientContext = "ClientContext"
        case payload = "Payload"
        case qualifier = "Qualifier"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientContext = self.clientContext {
            try encodeContainer.encode(clientContext, forKey: .clientContext)
        }
        if let payload = self.payload {
            try encodeContainer.encode(payload.base64EncodedString(), forKey: .payload)
        }
        if let qualifier = self.qualifier {
            try encodeContainer.encode(qualifier, forKey: .qualifier)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientContextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientContext)
        clientContext = clientContextDecoded
        let qualifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .qualifier)
        qualifier = qualifierDecoded
        let payloadDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .payload)
        payload = payloadDecoded
    }
}
