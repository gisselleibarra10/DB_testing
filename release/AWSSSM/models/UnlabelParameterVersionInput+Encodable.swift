// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UnlabelParameterVersionInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case labels = "Labels"
        case name = "Name"
        case parameterVersion = "ParameterVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let labels = labels {
            var labelsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .labels)
            for parameterlabellist0 in labels {
                try labelsContainer.encode(parameterlabellist0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let parameterVersion = self.parameterVersion {
            try encodeContainer.encode(parameterVersion, forKey: .parameterVersion)
        }
    }
}
