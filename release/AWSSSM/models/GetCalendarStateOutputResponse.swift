// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetCalendarStateOutputResponse: Swift.Equatable {
    /// The time, as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string, that you specified in your command. If you don't specify a time, GetCalendarState uses the current time.
    public var atTime: Swift.String?
    /// The time, as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string, that the calendar state will change. If the current calendar state is OPEN, NextTransitionTime indicates when the calendar state changes to CLOSED, and vice-versa.
    public var nextTransitionTime: Swift.String?
    /// The state of the calendar. An OPEN calendar indicates that actions are allowed to proceed, and a CLOSED calendar indicates that actions aren't allowed to proceed.
    public var state: SsmClientTypes.CalendarState?

    public init (
        atTime: Swift.String? = nil,
        nextTransitionTime: Swift.String? = nil,
        state: SsmClientTypes.CalendarState? = nil
    )
    {
        self.atTime = atTime
        self.nextTransitionTime = nextTransitionTime
        self.state = state
    }
}
