// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateMaintenanceWindowInput: Swift.Equatable {
    /// Whether targets must be registered with the maintenance window before tasks can be defined for those targets.
    public var allowUnassociatedTargets: Swift.Bool?
    /// The number of hours before the end of the maintenance window that Amazon Web Services Systems Manager stops scheduling new tasks for execution.
    public var cutoff: Swift.Int?
    /// An optional description for the update request.
    public var description: Swift.String?
    /// The duration of the maintenance window in hours.
    public var duration: Swift.Int?
    /// Whether the maintenance window is enabled.
    public var enabled: Swift.Bool?
    /// The date and time, in ISO-8601 Extended format, for when you want the maintenance window to become inactive. EndDate allows you to set a date and time in the future when the maintenance window will no longer run.
    public var endDate: Swift.String?
    /// The name of the maintenance window.
    public var name: Swift.String?
    /// If True, then all fields that are required by the [CreateMaintenanceWindow] operation are also required for this API request. Optional fields that aren't specified are set to null.
    public var replace: Swift.Bool?
    /// The schedule of the maintenance window in the form of a cron or rate expression.
    public var schedule: Swift.String?
    /// The number of days to wait after the date and time specified by a cron expression before running the maintenance window. For example, the following cron expression schedules a maintenance window to run the third Tuesday of every month at 11:30 PM. cron(30 23 ? * TUE#3 *) If the schedule offset is 2, the maintenance window won't run until two days later.
    public var scheduleOffset: Swift.Int?
    /// The time zone that the scheduled maintenance window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "UTC", or "Asia/Seoul". For more information, see the [Time Zone Database](https://www.iana.org/time-zones) on the IANA website.
    public var scheduleTimezone: Swift.String?
    /// The date and time, in ISO-8601 Extended format, for when you want the maintenance window to become active. StartDate allows you to delay activation of the maintenance window until the specified future date.
    public var startDate: Swift.String?
    /// The ID of the maintenance window to update.
    /// This member is required.
    public var windowId: Swift.String?

    public init (
        allowUnassociatedTargets: Swift.Bool? = nil,
        cutoff: Swift.Int? = nil,
        description: Swift.String? = nil,
        duration: Swift.Int? = nil,
        enabled: Swift.Bool? = nil,
        endDate: Swift.String? = nil,
        name: Swift.String? = nil,
        replace: Swift.Bool? = nil,
        schedule: Swift.String? = nil,
        scheduleOffset: Swift.Int? = nil,
        scheduleTimezone: Swift.String? = nil,
        startDate: Swift.String? = nil,
        windowId: Swift.String? = nil
    )
    {
        self.allowUnassociatedTargets = allowUnassociatedTargets
        self.cutoff = cutoff
        self.description = description
        self.duration = duration
        self.enabled = enabled
        self.endDate = endDate
        self.name = name
        self.replace = replace
        self.schedule = schedule
        self.scheduleOffset = scheduleOffset
        self.scheduleTimezone = scheduleTimezone
        self.startDate = startDate
        self.windowId = windowId
    }
}
