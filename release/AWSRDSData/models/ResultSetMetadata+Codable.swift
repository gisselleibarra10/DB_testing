// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RdsDataClientTypes.ResultSetMetadata: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case columnCount
        case columnMetadata
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if columnCount != 0 {
            try encodeContainer.encode(columnCount, forKey: .columnCount)
        }
        if let columnMetadata = columnMetadata {
            var columnMetadataContainer = encodeContainer.nestedUnkeyedContainer(forKey: .columnMetadata)
            for metadata0 in columnMetadata {
                try columnMetadataContainer.encode(metadata0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let columnCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .columnCount) ?? 0
        columnCount = columnCountDecoded
        let columnMetadataContainer = try containerValues.decodeIfPresent([RdsDataClientTypes.ColumnMetadata?].self, forKey: .columnMetadata)
        var columnMetadataDecoded0:[RdsDataClientTypes.ColumnMetadata]? = nil
        if let columnMetadataContainer = columnMetadataContainer {
            columnMetadataDecoded0 = [RdsDataClientTypes.ColumnMetadata]()
            for structure0 in columnMetadataContainer {
                if let structure0 = structure0 {
                    columnMetadataDecoded0?.append(structure0)
                }
            }
        }
        columnMetadata = columnMetadataDecoded0
    }
}
