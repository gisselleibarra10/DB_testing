// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The request parameters represent the input of a request to run a SQL statement against a database.
public struct ExecuteStatementInput: Swift.Equatable {
    /// A value that indicates whether to continue running the statement after the call times out. By default, the statement stops running when the call times out. For DDL statements, we recommend continuing to run the statement after the call times out. When a DDL statement terminates before it is finished running, it can result in errors and possibly corrupted data structures.
    public var continueAfterTimeout: Swift.Bool
    /// The name of the database.
    public var database: Swift.String?
    /// A value that indicates whether to format the result set as a single JSON string. This parameter only applies to SELECT statements and is ignored for other types of statements. Allowed values are NONE and JSON. The default value is NONE. The result is returned in the formattedRecords field. For usage information about the JSON format for result sets, see [Using the Data API](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the Amazon Aurora User Guide.
    public var formatRecordsAs: RdsDataClientTypes.RecordsFormatType?
    /// A value that indicates whether to include metadata in the results.
    public var includeResultMetadata: Swift.Bool
    /// The parameters for the SQL statement. Array parameters are not supported.
    public var parameters: [RdsDataClientTypes.SqlParameter]?
    /// The Amazon Resource Name (ARN) of the Aurora Serverless DB cluster.
    /// This member is required.
    public var resourceArn: Swift.String?
    /// Options that control how the result set is returned.
    public var resultSetOptions: RdsDataClientTypes.ResultSetOptions?
    /// The name of the database schema. Currently, the schema parameter isn't supported.
    public var schema: Swift.String?
    /// The ARN of the secret that enables access to the DB cluster. Enter the database user name and password for the credentials in the secret. For information about creating the secret, see [Create a database secret](https://docs.aws.amazon.com/secretsmanager/latest/userguide/create_database_secret.html).
    /// This member is required.
    public var secretArn: Swift.String?
    /// The SQL statement to run.
    /// This member is required.
    public var sql: Swift.String?
    /// The identifier of a transaction that was started by using the BeginTransaction operation. Specify the transaction ID of the transaction that you want to include the SQL statement in. If the SQL statement is not part of a transaction, don't set this parameter.
    public var transactionId: Swift.String?

    public init (
        continueAfterTimeout: Swift.Bool = false,
        database: Swift.String? = nil,
        formatRecordsAs: RdsDataClientTypes.RecordsFormatType? = nil,
        includeResultMetadata: Swift.Bool = false,
        parameters: [RdsDataClientTypes.SqlParameter]? = nil,
        resourceArn: Swift.String? = nil,
        resultSetOptions: RdsDataClientTypes.ResultSetOptions? = nil,
        schema: Swift.String? = nil,
        secretArn: Swift.String? = nil,
        sql: Swift.String? = nil,
        transactionId: Swift.String? = nil
    )
    {
        self.continueAfterTimeout = continueAfterTimeout
        self.database = database
        self.formatRecordsAs = formatRecordsAs
        self.includeResultMetadata = includeResultMetadata
        self.parameters = parameters
        self.resourceArn = resourceArn
        self.resultSetOptions = resultSetOptions
        self.schema = schema
        self.secretArn = secretArn
        self.sql = sql
        self.transactionId = transactionId
    }
}
