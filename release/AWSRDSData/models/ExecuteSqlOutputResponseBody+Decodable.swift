// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExecuteSqlOutputResponseBody: Swift.Equatable {
    let sqlStatementResults: [RdsDataClientTypes.SqlStatementResult]?
}

extension ExecuteSqlOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case sqlStatementResults
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sqlStatementResultsContainer = try containerValues.decodeIfPresent([RdsDataClientTypes.SqlStatementResult?].self, forKey: .sqlStatementResults)
        var sqlStatementResultsDecoded0:[RdsDataClientTypes.SqlStatementResult]? = nil
        if let sqlStatementResultsContainer = sqlStatementResultsContainer {
            sqlStatementResultsDecoded0 = [RdsDataClientTypes.SqlStatementResult]()
            for structure0 in sqlStatementResultsContainer {
                if let structure0 = structure0 {
                    sqlStatementResultsDecoded0?.append(structure0)
                }
            }
        }
        sqlStatementResults = sqlStatementResultsDecoded0
    }
}
