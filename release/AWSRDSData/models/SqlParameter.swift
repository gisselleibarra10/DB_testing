// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RdsDataClientTypes {
    /// A parameter used in a SQL statement.
    public struct SqlParameter: Swift.Equatable {
        /// The name of the parameter.
        public var name: Swift.String?
        /// A hint that specifies the correct object type for data type mapping. Possible values are as follows:
        ///
        /// * DATE - The corresponding String parameter value is sent as an object of DATE type to the database. The accepted format is YYYY-MM-DD.
        ///
        /// * DECIMAL - The corresponding String parameter value is sent as an object of DECIMAL type to the database.
        ///
        /// * JSON - The corresponding String parameter value is sent as an object of JSON type to the database.
        ///
        /// * TIME - The corresponding String parameter value is sent as an object of TIME type to the database. The accepted format is HH:MM:SS[.FFF].
        ///
        /// * TIMESTAMP - The corresponding String parameter value is sent as an object of TIMESTAMP type to the database. The accepted format is YYYY-MM-DD HH:MM:SS[.FFF].
        ///
        /// * UUID - The corresponding String parameter value is sent as an object of UUID type to the database.
        public var typeHint: RdsDataClientTypes.TypeHint?
        /// The value of the parameter.
        public var value: RdsDataClientTypes.Field?

        public init (
            name: Swift.String? = nil,
            typeHint: RdsDataClientTypes.TypeHint? = nil,
            value: RdsDataClientTypes.Field? = nil
        )
        {
            self.name = name
            self.typeHint = typeHint
            self.value = value
        }
    }

}
