// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFrameworksOutputResponseBody: Swift.Equatable {
    let frameworks: [BackupClientTypes.Framework]?
    let nextToken: Swift.String?
}

extension ListFrameworksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case frameworks = "Frameworks"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let frameworksContainer = try containerValues.decodeIfPresent([BackupClientTypes.Framework?].self, forKey: .frameworks)
        var frameworksDecoded0:[BackupClientTypes.Framework]? = nil
        if let frameworksContainer = frameworksContainer {
            frameworksDecoded0 = [BackupClientTypes.Framework]()
            for structure0 in frameworksContainer {
                if let structure0 = structure0 {
                    frameworksDecoded0?.append(structure0)
                }
            }
        }
        frameworks = frameworksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
