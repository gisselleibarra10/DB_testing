// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListReportJobsOutputResponseBody: Swift.Equatable {
    let reportJobs: [BackupClientTypes.ReportJob]?
    let nextToken: Swift.String?
}

extension ListReportJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case reportJobs = "ReportJobs"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reportJobsContainer = try containerValues.decodeIfPresent([BackupClientTypes.ReportJob?].self, forKey: .reportJobs)
        var reportJobsDecoded0:[BackupClientTypes.ReportJob]? = nil
        if let reportJobsContainer = reportJobsContainer {
            reportJobsDecoded0 = [BackupClientTypes.ReportJob]()
            for structure0 in reportJobsContainer {
                if let structure0 = structure0 {
                    reportJobsDecoded0?.append(structure0)
                }
            }
        }
        reportJobs = reportJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
