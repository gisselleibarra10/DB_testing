// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupPlansOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let backupPlansList: [BackupClientTypes.BackupPlansListMember]?
}

extension ListBackupPlansOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case backupPlansList = "BackupPlansList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let backupPlansListContainer = try containerValues.decodeIfPresent([BackupClientTypes.BackupPlansListMember?].self, forKey: .backupPlansList)
        var backupPlansListDecoded0:[BackupClientTypes.BackupPlansListMember]? = nil
        if let backupPlansListContainer = backupPlansListContainer {
            backupPlansListDecoded0 = [BackupClientTypes.BackupPlansListMember]()
            for structure0 in backupPlansListContainer {
                if let structure0 = structure0 {
                    backupPlansListDecoded0?.append(structure0)
                }
            }
        }
        backupPlansList = backupPlansListDecoded0
    }
}
