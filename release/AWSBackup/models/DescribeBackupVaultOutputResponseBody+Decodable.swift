// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeBackupVaultOutputResponseBody: Swift.Equatable {
    let backupVaultName: Swift.String?
    let backupVaultArn: Swift.String?
    let encryptionKeyArn: Swift.String?
    let creationDate: ClientRuntime.Date?
    let creatorRequestId: Swift.String?
    let numberOfRecoveryPoints: Swift.Int
    let locked: Swift.Bool?
    let minRetentionDays: Swift.Int?
    let maxRetentionDays: Swift.Int?
    let lockDate: ClientRuntime.Date?
}

extension DescribeBackupVaultOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case backupVaultArn = "BackupVaultArn"
        case backupVaultName = "BackupVaultName"
        case creationDate = "CreationDate"
        case creatorRequestId = "CreatorRequestId"
        case encryptionKeyArn = "EncryptionKeyArn"
        case lockDate = "LockDate"
        case locked = "Locked"
        case maxRetentionDays = "MaxRetentionDays"
        case minRetentionDays = "MinRetentionDays"
        case numberOfRecoveryPoints = "NumberOfRecoveryPoints"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupVaultNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .backupVaultName)
        backupVaultName = backupVaultNameDecoded
        let backupVaultArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .backupVaultArn)
        backupVaultArn = backupVaultArnDecoded
        let encryptionKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .encryptionKeyArn)
        encryptionKeyArn = encryptionKeyArnDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let creatorRequestIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .creatorRequestId)
        creatorRequestId = creatorRequestIdDecoded
        let numberOfRecoveryPointsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfRecoveryPoints) ?? 0
        numberOfRecoveryPoints = numberOfRecoveryPointsDecoded
        let lockedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .locked)
        locked = lockedDecoded
        let minRetentionDaysDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .minRetentionDays)
        minRetentionDays = minRetentionDaysDecoded
        let maxRetentionDaysDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxRetentionDays)
        maxRetentionDays = maxRetentionDaysDecoded
        let lockDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lockDate)
        lockDate = lockDateDecoded
    }
}
