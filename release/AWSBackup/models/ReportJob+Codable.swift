// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BackupClientTypes.ReportJob: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case completionTime = "CompletionTime"
        case creationTime = "CreationTime"
        case reportDestination = "ReportDestination"
        case reportJobId = "ReportJobId"
        case reportPlanArn = "ReportPlanArn"
        case reportTemplate = "ReportTemplate"
        case status = "Status"
        case statusMessage = "StatusMessage"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let completionTime = self.completionTime {
            try encodeContainer.encode(completionTime.timeIntervalSince1970, forKey: .completionTime)
        }
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let reportDestination = self.reportDestination {
            try encodeContainer.encode(reportDestination, forKey: .reportDestination)
        }
        if let reportJobId = self.reportJobId {
            try encodeContainer.encode(reportJobId, forKey: .reportJobId)
        }
        if let reportPlanArn = self.reportPlanArn {
            try encodeContainer.encode(reportPlanArn, forKey: .reportPlanArn)
        }
        if let reportTemplate = self.reportTemplate {
            try encodeContainer.encode(reportTemplate, forKey: .reportTemplate)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let statusMessage = self.statusMessage {
            try encodeContainer.encode(statusMessage, forKey: .statusMessage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reportJobIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reportJobId)
        reportJobId = reportJobIdDecoded
        let reportPlanArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reportPlanArn)
        reportPlanArn = reportPlanArnDecoded
        let reportTemplateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reportTemplate)
        reportTemplate = reportTemplateDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let completionTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .completionTime)
        completionTime = completionTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let reportDestinationDecoded = try containerValues.decodeIfPresent(BackupClientTypes.ReportDestination.self, forKey: .reportDestination)
        reportDestination = reportDestinationDecoded
    }
}
