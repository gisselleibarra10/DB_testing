// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupSelectionsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let backupSelectionsList: [BackupClientTypes.BackupSelectionsListMember]?
}

extension ListBackupSelectionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case backupSelectionsList = "BackupSelectionsList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let backupSelectionsListContainer = try containerValues.decodeIfPresent([BackupClientTypes.BackupSelectionsListMember?].self, forKey: .backupSelectionsList)
        var backupSelectionsListDecoded0:[BackupClientTypes.BackupSelectionsListMember]? = nil
        if let backupSelectionsListContainer = backupSelectionsListContainer {
            backupSelectionsListDecoded0 = [BackupClientTypes.BackupSelectionsListMember]()
            for structure0 in backupSelectionsListContainer {
                if let structure0 = structure0 {
                    backupSelectionsListDecoded0?.append(structure0)
                }
            }
        }
        backupSelectionsList = backupSelectionsListDecoded0
    }
}
