// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupPlanTemplatesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let backupPlanTemplatesList: [BackupClientTypes.BackupPlanTemplatesListMember]?
}

extension ListBackupPlanTemplatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case backupPlanTemplatesList = "BackupPlanTemplatesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let backupPlanTemplatesListContainer = try containerValues.decodeIfPresent([BackupClientTypes.BackupPlanTemplatesListMember?].self, forKey: .backupPlanTemplatesList)
        var backupPlanTemplatesListDecoded0:[BackupClientTypes.BackupPlanTemplatesListMember]? = nil
        if let backupPlanTemplatesListContainer = backupPlanTemplatesListContainer {
            backupPlanTemplatesListDecoded0 = [BackupClientTypes.BackupPlanTemplatesListMember]()
            for structure0 in backupPlanTemplatesListContainer {
                if let structure0 = structure0 {
                    backupPlanTemplatesListDecoded0?.append(structure0)
                }
            }
        }
        backupPlanTemplatesList = backupPlanTemplatesListDecoded0
    }
}
