// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension BackupClientTypes {
    public enum BackupVaultEvent: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case backupJobCompleted
        case backupJobExpired
        case backupJobFailed
        case backupJobStarted
        case backupJobSuccessful
        case backupPlanCreated
        case backupPlanModified
        case copyJobFailed
        case copyJobStarted
        case copyJobSuccessful
        case recoveryPointModified
        case restoreJobCompleted
        case restoreJobFailed
        case restoreJobStarted
        case restoreJobSuccessful
        case s3BackupObjectFailed
        case s3RestoreObjectFailed
        case sdkUnknown(Swift.String)

        public static var allCases: [BackupVaultEvent] {
            return [
                .backupJobCompleted,
                .backupJobExpired,
                .backupJobFailed,
                .backupJobStarted,
                .backupJobSuccessful,
                .backupPlanCreated,
                .backupPlanModified,
                .copyJobFailed,
                .copyJobStarted,
                .copyJobSuccessful,
                .recoveryPointModified,
                .restoreJobCompleted,
                .restoreJobFailed,
                .restoreJobStarted,
                .restoreJobSuccessful,
                .s3BackupObjectFailed,
                .s3RestoreObjectFailed,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .backupJobCompleted: return "BACKUP_JOB_COMPLETED"
            case .backupJobExpired: return "BACKUP_JOB_EXPIRED"
            case .backupJobFailed: return "BACKUP_JOB_FAILED"
            case .backupJobStarted: return "BACKUP_JOB_STARTED"
            case .backupJobSuccessful: return "BACKUP_JOB_SUCCESSFUL"
            case .backupPlanCreated: return "BACKUP_PLAN_CREATED"
            case .backupPlanModified: return "BACKUP_PLAN_MODIFIED"
            case .copyJobFailed: return "COPY_JOB_FAILED"
            case .copyJobStarted: return "COPY_JOB_STARTED"
            case .copyJobSuccessful: return "COPY_JOB_SUCCESSFUL"
            case .recoveryPointModified: return "RECOVERY_POINT_MODIFIED"
            case .restoreJobCompleted: return "RESTORE_JOB_COMPLETED"
            case .restoreJobFailed: return "RESTORE_JOB_FAILED"
            case .restoreJobStarted: return "RESTORE_JOB_STARTED"
            case .restoreJobSuccessful: return "RESTORE_JOB_SUCCESSFUL"
            case .s3BackupObjectFailed: return "S3_BACKUP_OBJECT_FAILED"
            case .s3RestoreObjectFailed: return "S3_RESTORE_OBJECT_FAILED"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = BackupVaultEvent(rawValue: rawValue) ?? BackupVaultEvent.sdkUnknown(rawValue)
        }
    }
}
