// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupVaultsOutputResponseBody: Swift.Equatable {
    let backupVaultList: [BackupClientTypes.BackupVaultListMember]?
    let nextToken: Swift.String?
}

extension ListBackupVaultsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case backupVaultList = "BackupVaultList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupVaultListContainer = try containerValues.decodeIfPresent([BackupClientTypes.BackupVaultListMember?].self, forKey: .backupVaultList)
        var backupVaultListDecoded0:[BackupClientTypes.BackupVaultListMember]? = nil
        if let backupVaultListContainer = backupVaultListContainer {
            backupVaultListDecoded0 = [BackupClientTypes.BackupVaultListMember]()
            for structure0 in backupVaultListContainer {
                if let structure0 = structure0 {
                    backupVaultListDecoded0?.append(structure0)
                }
            }
        }
        backupVaultList = backupVaultListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
