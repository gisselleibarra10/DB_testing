// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRestoreJobOutputResponseBody: Swift.Equatable {
    let accountId: Swift.String?
    let restoreJobId: Swift.String?
    let recoveryPointArn: Swift.String?
    let creationDate: ClientRuntime.Date?
    let completionDate: ClientRuntime.Date?
    let status: BackupClientTypes.RestoreJobStatus?
    let statusMessage: Swift.String?
    let percentDone: Swift.String?
    let backupSizeInBytes: Swift.Int?
    let iamRoleArn: Swift.String?
    let expectedCompletionTimeMinutes: Swift.Int?
    let createdResourceArn: Swift.String?
    let resourceType: Swift.String?
}

extension DescribeRestoreJobOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountId = "AccountId"
        case backupSizeInBytes = "BackupSizeInBytes"
        case completionDate = "CompletionDate"
        case createdResourceArn = "CreatedResourceArn"
        case creationDate = "CreationDate"
        case expectedCompletionTimeMinutes = "ExpectedCompletionTimeMinutes"
        case iamRoleArn = "IamRoleArn"
        case percentDone = "PercentDone"
        case recoveryPointArn = "RecoveryPointArn"
        case resourceType = "ResourceType"
        case restoreJobId = "RestoreJobId"
        case status = "Status"
        case statusMessage = "StatusMessage"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let restoreJobIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .restoreJobId)
        restoreJobId = restoreJobIdDecoded
        let recoveryPointArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recoveryPointArn)
        recoveryPointArn = recoveryPointArnDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let completionDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .completionDate)
        completionDate = completionDateDecoded
        let statusDecoded = try containerValues.decodeIfPresent(BackupClientTypes.RestoreJobStatus.self, forKey: .status)
        status = statusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let percentDoneDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .percentDone)
        percentDone = percentDoneDecoded
        let backupSizeInBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .backupSizeInBytes)
        backupSizeInBytes = backupSizeInBytesDecoded
        let iamRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .iamRoleArn)
        iamRoleArn = iamRoleArnDecoded
        let expectedCompletionTimeMinutesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .expectedCompletionTimeMinutes)
        expectedCompletionTimeMinutes = expectedCompletionTimeMinutesDecoded
        let createdResourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .createdResourceArn)
        createdResourceArn = createdResourceArnDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
    }
}
