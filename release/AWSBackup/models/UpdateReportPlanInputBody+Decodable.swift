// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateReportPlanInputBody: Swift.Equatable {
    let reportPlanDescription: Swift.String?
    let reportDeliveryChannel: BackupClientTypes.ReportDeliveryChannel?
    let reportSetting: BackupClientTypes.ReportSetting?
    let idempotencyToken: Swift.String?
}

extension UpdateReportPlanInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case idempotencyToken = "IdempotencyToken"
        case reportDeliveryChannel = "ReportDeliveryChannel"
        case reportPlanDescription = "ReportPlanDescription"
        case reportSetting = "ReportSetting"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reportPlanDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reportPlanDescription)
        reportPlanDescription = reportPlanDescriptionDecoded
        let reportDeliveryChannelDecoded = try containerValues.decodeIfPresent(BackupClientTypes.ReportDeliveryChannel.self, forKey: .reportDeliveryChannel)
        reportDeliveryChannel = reportDeliveryChannelDecoded
        let reportSettingDecoded = try containerValues.decodeIfPresent(BackupClientTypes.ReportSetting.self, forKey: .reportSetting)
        reportSetting = reportSettingDecoded
        let idempotencyTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .idempotencyToken)
        idempotencyToken = idempotencyTokenDecoded
    }
}
