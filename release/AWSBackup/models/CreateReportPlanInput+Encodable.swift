// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateReportPlanInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case idempotencyToken = "IdempotencyToken"
        case reportDeliveryChannel = "ReportDeliveryChannel"
        case reportPlanDescription = "ReportPlanDescription"
        case reportPlanName = "ReportPlanName"
        case reportPlanTags = "ReportPlanTags"
        case reportSetting = "ReportSetting"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let idempotencyToken = self.idempotencyToken {
            try encodeContainer.encode(idempotencyToken, forKey: .idempotencyToken)
        }
        if let reportDeliveryChannel = self.reportDeliveryChannel {
            try encodeContainer.encode(reportDeliveryChannel, forKey: .reportDeliveryChannel)
        }
        if let reportPlanDescription = self.reportPlanDescription {
            try encodeContainer.encode(reportPlanDescription, forKey: .reportPlanDescription)
        }
        if let reportPlanName = self.reportPlanName {
            try encodeContainer.encode(reportPlanName, forKey: .reportPlanName)
        }
        if let reportPlanTags = reportPlanTags {
            var reportPlanTagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .reportPlanTags)
            for (dictKey0, stringmap0) in reportPlanTags {
                try reportPlanTagsContainer.encode(stringmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let reportSetting = self.reportSetting {
            try encodeContainer.encode(reportSetting, forKey: .reportSetting)
        }
    }
}
