// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateFrameworkInputBody: Swift.Equatable {
    let frameworkDescription: Swift.String?
    let frameworkControls: [BackupClientTypes.FrameworkControl]?
    let idempotencyToken: Swift.String?
}

extension UpdateFrameworkInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case frameworkControls = "FrameworkControls"
        case frameworkDescription = "FrameworkDescription"
        case idempotencyToken = "IdempotencyToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let frameworkDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .frameworkDescription)
        frameworkDescription = frameworkDescriptionDecoded
        let frameworkControlsContainer = try containerValues.decodeIfPresent([BackupClientTypes.FrameworkControl?].self, forKey: .frameworkControls)
        var frameworkControlsDecoded0:[BackupClientTypes.FrameworkControl]? = nil
        if let frameworkControlsContainer = frameworkControlsContainer {
            frameworkControlsDecoded0 = [BackupClientTypes.FrameworkControl]()
            for structure0 in frameworkControlsContainer {
                if let structure0 = structure0 {
                    frameworkControlsDecoded0?.append(structure0)
                }
            }
        }
        frameworkControls = frameworkControlsDecoded0
        let idempotencyTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .idempotencyToken)
        idempotencyToken = idempotencyTokenDecoded
    }
}
