// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListReportPlansOutputResponseBody: Swift.Equatable {
    let reportPlans: [BackupClientTypes.ReportPlan]?
    let nextToken: Swift.String?
}

extension ListReportPlansOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case reportPlans = "ReportPlans"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reportPlansContainer = try containerValues.decodeIfPresent([BackupClientTypes.ReportPlan?].self, forKey: .reportPlans)
        var reportPlansDecoded0:[BackupClientTypes.ReportPlan]? = nil
        if let reportPlansContainer = reportPlansContainer {
            reportPlansDecoded0 = [BackupClientTypes.ReportPlan]()
            for structure0 in reportPlansContainer {
                if let structure0 = structure0 {
                    reportPlansDecoded0?.append(structure0)
                }
            }
        }
        reportPlans = reportPlansDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
