// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension BackupClientTypes {
    /// Specifies a scheduled task used to back up a selection of resources.
    public struct BackupRuleInput: Swift.Equatable {
        /// A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by Backup. This value is optional.
        public var completionWindowMinutes: Swift.Int?
        /// An array of CopyAction objects, which contains the details of the copy operation.
        public var copyActions: [BackupClientTypes.CopyAction]?
        /// Specifies whether Backup creates continuous backups. True causes Backup to create continuous backups capable of point-in-time restore (PITR). False (or not specified) causes Backup to create snapshot backups.
        public var enableContinuousBackup: Swift.Bool?
        /// The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup will transition and expire backups automatically according to the lifecycle that you define. Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “retention” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. Resource types that are able to be transitioned to cold storage are listed in the "Lifecycle to cold storage" section of the [ Feature availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource) table. Backup ignores this expression for other resource types.
        public var lifecycle: BackupClientTypes.Lifecycle?
        /// To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.
        public var recoveryPointTags: [Swift.String:Swift.String]?
        /// A display name for a backup rule. Must contain 1 to 50 alphanumeric or '-_.' characters.
        /// This member is required.
        public var ruleName: Swift.String?
        /// A CRON expression in UTC specifying when Backup initiates a backup job.
        public var scheduleExpression: Swift.String?
        /// A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional.
        public var startWindowMinutes: Swift.Int?
        /// The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.
        /// This member is required.
        public var targetBackupVaultName: Swift.String?

        public init (
            completionWindowMinutes: Swift.Int? = nil,
            copyActions: [BackupClientTypes.CopyAction]? = nil,
            enableContinuousBackup: Swift.Bool? = nil,
            lifecycle: BackupClientTypes.Lifecycle? = nil,
            recoveryPointTags: [Swift.String:Swift.String]? = nil,
            ruleName: Swift.String? = nil,
            scheduleExpression: Swift.String? = nil,
            startWindowMinutes: Swift.Int? = nil,
            targetBackupVaultName: Swift.String? = nil
        )
        {
            self.completionWindowMinutes = completionWindowMinutes
            self.copyActions = copyActions
            self.enableContinuousBackup = enableContinuousBackup
            self.lifecycle = lifecycle
            self.recoveryPointTags = recoveryPointTags
            self.ruleName = ruleName
            self.scheduleExpression = scheduleExpression
            self.startWindowMinutes = startWindowMinutes
            self.targetBackupVaultName = targetBackupVaultName
        }
    }

}
