// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComprehendClientTypes.EntityRecognizerMetadata: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entityTypes = "EntityTypes"
        case evaluationMetrics = "EvaluationMetrics"
        case numberOfTestDocuments = "NumberOfTestDocuments"
        case numberOfTrainedDocuments = "NumberOfTrainedDocuments"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let entityTypes = entityTypes {
            var entityTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .entityTypes)
            for entityrecognizermetadataentitytypeslist0 in entityTypes {
                try entityTypesContainer.encode(entityrecognizermetadataentitytypeslist0)
            }
        }
        if let evaluationMetrics = self.evaluationMetrics {
            try encodeContainer.encode(evaluationMetrics, forKey: .evaluationMetrics)
        }
        if let numberOfTestDocuments = self.numberOfTestDocuments {
            try encodeContainer.encode(numberOfTestDocuments, forKey: .numberOfTestDocuments)
        }
        if let numberOfTrainedDocuments = self.numberOfTrainedDocuments {
            try encodeContainer.encode(numberOfTrainedDocuments, forKey: .numberOfTrainedDocuments)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let numberOfTrainedDocumentsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfTrainedDocuments)
        numberOfTrainedDocuments = numberOfTrainedDocumentsDecoded
        let numberOfTestDocumentsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfTestDocuments)
        numberOfTestDocuments = numberOfTestDocumentsDecoded
        let evaluationMetricsDecoded = try containerValues.decodeIfPresent(ComprehendClientTypes.EntityRecognizerEvaluationMetrics.self, forKey: .evaluationMetrics)
        evaluationMetrics = evaluationMetricsDecoded
        let entityTypesContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.EntityRecognizerMetadataEntityTypesListItem?].self, forKey: .entityTypes)
        var entityTypesDecoded0:[ComprehendClientTypes.EntityRecognizerMetadataEntityTypesListItem]? = nil
        if let entityTypesContainer = entityTypesContainer {
            entityTypesDecoded0 = [ComprehendClientTypes.EntityRecognizerMetadataEntityTypesListItem]()
            for structure0 in entityTypesContainer {
                if let structure0 = structure0 {
                    entityTypesDecoded0?.append(structure0)
                }
            }
        }
        entityTypes = entityTypesDecoded0
    }
}
