// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTopicsDetectionJobsOutputResponseBody: Swift.Equatable {
    let topicsDetectionJobPropertiesList: [ComprehendClientTypes.TopicsDetectionJobProperties]?
    let nextToken: Swift.String?
}

extension ListTopicsDetectionJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case topicsDetectionJobPropertiesList = "TopicsDetectionJobPropertiesList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let topicsDetectionJobPropertiesListContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.TopicsDetectionJobProperties?].self, forKey: .topicsDetectionJobPropertiesList)
        var topicsDetectionJobPropertiesListDecoded0:[ComprehendClientTypes.TopicsDetectionJobProperties]? = nil
        if let topicsDetectionJobPropertiesListContainer = topicsDetectionJobPropertiesListContainer {
            topicsDetectionJobPropertiesListDecoded0 = [ComprehendClientTypes.TopicsDetectionJobProperties]()
            for structure0 in topicsDetectionJobPropertiesListContainer {
                if let structure0 = structure0 {
                    topicsDetectionJobPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        topicsDetectionJobPropertiesList = topicsDetectionJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
