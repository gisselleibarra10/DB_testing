// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateEndpointInputBody: Swift.Equatable {
    let endpointArn: Swift.String?
    let desiredModelArn: Swift.String?
    let desiredInferenceUnits: Swift.Int?
    let desiredDataAccessRoleArn: Swift.String?
}

extension UpdateEndpointInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case desiredDataAccessRoleArn = "DesiredDataAccessRoleArn"
        case desiredInferenceUnits = "DesiredInferenceUnits"
        case desiredModelArn = "DesiredModelArn"
        case endpointArn = "EndpointArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endpointArn)
        endpointArn = endpointArnDecoded
        let desiredModelArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .desiredModelArn)
        desiredModelArn = desiredModelArnDecoded
        let desiredInferenceUnitsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .desiredInferenceUnits)
        desiredInferenceUnits = desiredInferenceUnitsDecoded
        let desiredDataAccessRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .desiredDataAccessRoleArn)
        desiredDataAccessRoleArn = desiredDataAccessRoleArnDecoded
    }
}
