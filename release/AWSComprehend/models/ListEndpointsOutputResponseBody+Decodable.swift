// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEndpointsOutputResponseBody: Swift.Equatable {
    let endpointPropertiesList: [ComprehendClientTypes.EndpointProperties]?
    let nextToken: Swift.String?
}

extension ListEndpointsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case endpointPropertiesList = "EndpointPropertiesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointPropertiesListContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.EndpointProperties?].self, forKey: .endpointPropertiesList)
        var endpointPropertiesListDecoded0:[ComprehendClientTypes.EndpointProperties]? = nil
        if let endpointPropertiesListContainer = endpointPropertiesListContainer {
            endpointPropertiesListDecoded0 = [ComprehendClientTypes.EndpointProperties]()
            for structure0 in endpointPropertiesListContainer {
                if let structure0 = structure0 {
                    endpointPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        endpointPropertiesList = endpointPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
