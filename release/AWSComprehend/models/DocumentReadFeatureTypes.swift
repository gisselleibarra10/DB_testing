// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ComprehendClientTypes {
    /// A list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.
    ///
    /// * TABLES - Add TABLES to the list to return information about the tables that are detected in the input document.
    ///
    /// * FORMS - Add FORMS to return detected form data.
    public enum DocumentReadFeatureTypes: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case forms
        case tables
        case sdkUnknown(Swift.String)

        public static var allCases: [DocumentReadFeatureTypes] {
            return [
                .forms,
                .tables,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .forms: return "FORMS"
            case .tables: return "TABLES"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = DocumentReadFeatureTypes(rawValue: rawValue) ?? DocumentReadFeatureTypes.sdkUnknown(rawValue)
        }
    }
}
