// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ComprehendClientTypes {
    /// The input properties for a topic detection job.
    public struct DocumentReaderConfig: Swift.Equatable {
        /// This enum field will start with two values which will apply to PDFs:
        ///
        /// * TEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.
        ///
        /// * TEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.
        /// This member is required.
        public var documentReadAction: ComprehendClientTypes.DocumentReadAction?
        /// This enum field provides two values:
        ///
        /// * SERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs
        ///
        /// * FORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.
        public var documentReadMode: ComprehendClientTypes.DocumentReadMode?
        /// Specifies how the text in an input file should be processed:
        public var featureTypes: [ComprehendClientTypes.DocumentReadFeatureTypes]?

        public init (
            documentReadAction: ComprehendClientTypes.DocumentReadAction? = nil,
            documentReadMode: ComprehendClientTypes.DocumentReadMode? = nil,
            featureTypes: [ComprehendClientTypes.DocumentReadFeatureTypes]? = nil
        )
        {
            self.documentReadAction = documentReadAction
            self.documentReadMode = documentReadMode
            self.featureTypes = featureTypes
        }
    }

}
