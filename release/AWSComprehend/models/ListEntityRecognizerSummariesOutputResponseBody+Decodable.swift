// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEntityRecognizerSummariesOutputResponseBody: Swift.Equatable {
    let entityRecognizerSummariesList: [ComprehendClientTypes.EntityRecognizerSummary]?
    let nextToken: Swift.String?
}

extension ListEntityRecognizerSummariesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entityRecognizerSummariesList = "EntityRecognizerSummariesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entityRecognizerSummariesListContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.EntityRecognizerSummary?].self, forKey: .entityRecognizerSummariesList)
        var entityRecognizerSummariesListDecoded0:[ComprehendClientTypes.EntityRecognizerSummary]? = nil
        if let entityRecognizerSummariesListContainer = entityRecognizerSummariesListContainer {
            entityRecognizerSummariesListDecoded0 = [ComprehendClientTypes.EntityRecognizerSummary]()
            for structure0 in entityRecognizerSummariesListContainer {
                if let structure0 = structure0 {
                    entityRecognizerSummariesListDecoded0?.append(structure0)
                }
            }
        }
        entityRecognizerSummariesList = entityRecognizerSummariesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
