// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTargetedSentimentDetectionJobsOutputResponseBody: Swift.Equatable {
    let targetedSentimentDetectionJobPropertiesList: [ComprehendClientTypes.TargetedSentimentDetectionJobProperties]?
    let nextToken: Swift.String?
}

extension ListTargetedSentimentDetectionJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case targetedSentimentDetectionJobPropertiesList = "TargetedSentimentDetectionJobPropertiesList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetedSentimentDetectionJobPropertiesListContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.TargetedSentimentDetectionJobProperties?].self, forKey: .targetedSentimentDetectionJobPropertiesList)
        var targetedSentimentDetectionJobPropertiesListDecoded0:[ComprehendClientTypes.TargetedSentimentDetectionJobProperties]? = nil
        if let targetedSentimentDetectionJobPropertiesListContainer = targetedSentimentDetectionJobPropertiesListContainer {
            targetedSentimentDetectionJobPropertiesListDecoded0 = [ComprehendClientTypes.TargetedSentimentDetectionJobProperties]()
            for structure0 in targetedSentimentDetectionJobPropertiesListContainer {
                if let structure0 = structure0 {
                    targetedSentimentDetectionJobPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        targetedSentimentDetectionJobPropertiesList = targetedSentimentDetectionJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
