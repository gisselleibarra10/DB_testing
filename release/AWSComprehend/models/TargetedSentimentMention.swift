// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ComprehendClientTypes {
    /// Information about one mention of an entity. The mention information includes the location of the mention in the text and the sentiment of the mention. For more information about targeted sentiment, see [Targeted sentiment](https://docs.aws.amazon.com/comprehend/latest/dg/how-targeted-sentiment.html).
    public struct TargetedSentimentMention: Swift.Equatable {
        /// The offset into the document text where the mention begins.
        public var beginOffset: Swift.Int?
        /// The offset into the document text where the mention ends.
        public var endOffset: Swift.Int?
        /// The confidence that all the entities mentioned in the group relate to the same entity.
        public var groupScore: Swift.Float?
        /// Contains the sentiment and sentiment score for the mention.
        public var mentionSentiment: ComprehendClientTypes.MentionSentiment?
        /// Model confidence that the entity is relevant. Value range is zero to one, where one is highest confidence.
        public var score: Swift.Float?
        /// The text in the document that identifies the entity.
        public var text: Swift.String?
        /// The type of the entity. Amazon Comprehend supports a variety of [entity types](https://docs.aws.amazon.com/comprehend/latest/dg/how-targeted-sentiment.html#how-targeted-sentiment-entities).
        public var type: ComprehendClientTypes.TargetedSentimentEntityType?

        public init (
            beginOffset: Swift.Int? = nil,
            endOffset: Swift.Int? = nil,
            groupScore: Swift.Float? = nil,
            mentionSentiment: ComprehendClientTypes.MentionSentiment? = nil,
            score: Swift.Float? = nil,
            text: Swift.String? = nil,
            type: ComprehendClientTypes.TargetedSentimentEntityType? = nil
        )
        {
            self.beginOffset = beginOffset
            self.endOffset = endOffset
            self.groupScore = groupScore
            self.mentionSentiment = mentionSentiment
            self.score = score
            self.text = text
            self.type = type
        }
    }

}
