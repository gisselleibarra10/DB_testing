// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDocumentClassificationJobsOutputResponseBody: Swift.Equatable {
    let documentClassificationJobPropertiesList: [ComprehendClientTypes.DocumentClassificationJobProperties]?
    let nextToken: Swift.String?
}

extension ListDocumentClassificationJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case documentClassificationJobPropertiesList = "DocumentClassificationJobPropertiesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentClassificationJobPropertiesListContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.DocumentClassificationJobProperties?].self, forKey: .documentClassificationJobPropertiesList)
        var documentClassificationJobPropertiesListDecoded0:[ComprehendClientTypes.DocumentClassificationJobProperties]? = nil
        if let documentClassificationJobPropertiesListContainer = documentClassificationJobPropertiesListContainer {
            documentClassificationJobPropertiesListDecoded0 = [ComprehendClientTypes.DocumentClassificationJobProperties]()
            for structure0 in documentClassificationJobPropertiesListContainer {
                if let structure0 = structure0 {
                    documentClassificationJobPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        documentClassificationJobPropertiesList = documentClassificationJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
