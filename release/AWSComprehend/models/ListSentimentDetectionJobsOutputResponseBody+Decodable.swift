// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSentimentDetectionJobsOutputResponseBody: Swift.Equatable {
    let sentimentDetectionJobPropertiesList: [ComprehendClientTypes.SentimentDetectionJobProperties]?
    let nextToken: Swift.String?
}

extension ListSentimentDetectionJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case sentimentDetectionJobPropertiesList = "SentimentDetectionJobPropertiesList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sentimentDetectionJobPropertiesListContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.SentimentDetectionJobProperties?].self, forKey: .sentimentDetectionJobPropertiesList)
        var sentimentDetectionJobPropertiesListDecoded0:[ComprehendClientTypes.SentimentDetectionJobProperties]? = nil
        if let sentimentDetectionJobPropertiesListContainer = sentimentDetectionJobPropertiesListContainer {
            sentimentDetectionJobPropertiesListDecoded0 = [ComprehendClientTypes.SentimentDetectionJobProperties]()
            for structure0 in sentimentDetectionJobPropertiesListContainer {
                if let structure0 = structure0 {
                    sentimentDetectionJobPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        sentimentDetectionJobPropertiesList = sentimentDetectionJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
