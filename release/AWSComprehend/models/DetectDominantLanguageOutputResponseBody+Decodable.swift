// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectDominantLanguageOutputResponseBody: Swift.Equatable {
    let languages: [ComprehendClientTypes.DominantLanguage]?
}

extension DetectDominantLanguageOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case languages = "Languages"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let languagesContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.DominantLanguage?].self, forKey: .languages)
        var languagesDecoded0:[ComprehendClientTypes.DominantLanguage]? = nil
        if let languagesContainer = languagesContainer {
            languagesDecoded0 = [ComprehendClientTypes.DominantLanguage]()
            for structure0 in languagesContainer {
                if let structure0 = structure0 {
                    languagesDecoded0?.append(structure0)
                }
            }
        }
        languages = languagesDecoded0
    }
}
