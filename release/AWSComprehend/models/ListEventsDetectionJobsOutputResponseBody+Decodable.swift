// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEventsDetectionJobsOutputResponseBody: Swift.Equatable {
    let eventsDetectionJobPropertiesList: [ComprehendClientTypes.EventsDetectionJobProperties]?
    let nextToken: Swift.String?
}

extension ListEventsDetectionJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventsDetectionJobPropertiesList = "EventsDetectionJobPropertiesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventsDetectionJobPropertiesListContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.EventsDetectionJobProperties?].self, forKey: .eventsDetectionJobPropertiesList)
        var eventsDetectionJobPropertiesListDecoded0:[ComprehendClientTypes.EventsDetectionJobProperties]? = nil
        if let eventsDetectionJobPropertiesListContainer = eventsDetectionJobPropertiesListContainer {
            eventsDetectionJobPropertiesListDecoded0 = [ComprehendClientTypes.EventsDetectionJobProperties]()
            for structure0 in eventsDetectionJobPropertiesListContainer {
                if let structure0 = structure0 {
                    eventsDetectionJobPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        eventsDetectionJobPropertiesList = eventsDetectionJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
