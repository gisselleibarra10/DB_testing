// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEntitiesDetectionJobsOutputResponseBody: Swift.Equatable {
    let entitiesDetectionJobPropertiesList: [ComprehendClientTypes.EntitiesDetectionJobProperties]?
    let nextToken: Swift.String?
}

extension ListEntitiesDetectionJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entitiesDetectionJobPropertiesList = "EntitiesDetectionJobPropertiesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entitiesDetectionJobPropertiesListContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.EntitiesDetectionJobProperties?].self, forKey: .entitiesDetectionJobPropertiesList)
        var entitiesDetectionJobPropertiesListDecoded0:[ComprehendClientTypes.EntitiesDetectionJobProperties]? = nil
        if let entitiesDetectionJobPropertiesListContainer = entitiesDetectionJobPropertiesListContainer {
            entitiesDetectionJobPropertiesListDecoded0 = [ComprehendClientTypes.EntitiesDetectionJobProperties]()
            for structure0 in entitiesDetectionJobPropertiesListContainer {
                if let structure0 = structure0 {
                    entitiesDetectionJobPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        entitiesDetectionJobPropertiesList = entitiesDetectionJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
