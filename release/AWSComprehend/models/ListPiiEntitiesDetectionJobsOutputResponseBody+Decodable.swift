// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPiiEntitiesDetectionJobsOutputResponseBody: Swift.Equatable {
    let piiEntitiesDetectionJobPropertiesList: [ComprehendClientTypes.PiiEntitiesDetectionJobProperties]?
    let nextToken: Swift.String?
}

extension ListPiiEntitiesDetectionJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case piiEntitiesDetectionJobPropertiesList = "PiiEntitiesDetectionJobPropertiesList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let piiEntitiesDetectionJobPropertiesListContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.PiiEntitiesDetectionJobProperties?].self, forKey: .piiEntitiesDetectionJobPropertiesList)
        var piiEntitiesDetectionJobPropertiesListDecoded0:[ComprehendClientTypes.PiiEntitiesDetectionJobProperties]? = nil
        if let piiEntitiesDetectionJobPropertiesListContainer = piiEntitiesDetectionJobPropertiesListContainer {
            piiEntitiesDetectionJobPropertiesListDecoded0 = [ComprehendClientTypes.PiiEntitiesDetectionJobProperties]()
            for structure0 in piiEntitiesDetectionJobPropertiesListContainer {
                if let structure0 = structure0 {
                    piiEntitiesDetectionJobPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        piiEntitiesDetectionJobPropertiesList = piiEntitiesDetectionJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
