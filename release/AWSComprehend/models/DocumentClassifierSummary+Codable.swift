// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComprehendClientTypes.DocumentClassifierSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case documentClassifierName = "DocumentClassifierName"
        case latestVersionCreatedAt = "LatestVersionCreatedAt"
        case latestVersionName = "LatestVersionName"
        case latestVersionStatus = "LatestVersionStatus"
        case numberOfVersions = "NumberOfVersions"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let documentClassifierName = self.documentClassifierName {
            try encodeContainer.encode(documentClassifierName, forKey: .documentClassifierName)
        }
        if let latestVersionCreatedAt = self.latestVersionCreatedAt {
            try encodeContainer.encode(latestVersionCreatedAt.timeIntervalSince1970, forKey: .latestVersionCreatedAt)
        }
        if let latestVersionName = self.latestVersionName {
            try encodeContainer.encode(latestVersionName, forKey: .latestVersionName)
        }
        if let latestVersionStatus = self.latestVersionStatus {
            try encodeContainer.encode(latestVersionStatus.rawValue, forKey: .latestVersionStatus)
        }
        if let numberOfVersions = self.numberOfVersions {
            try encodeContainer.encode(numberOfVersions, forKey: .numberOfVersions)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentClassifierNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .documentClassifierName)
        documentClassifierName = documentClassifierNameDecoded
        let numberOfVersionsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfVersions)
        numberOfVersions = numberOfVersionsDecoded
        let latestVersionCreatedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .latestVersionCreatedAt)
        latestVersionCreatedAt = latestVersionCreatedAtDecoded
        let latestVersionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .latestVersionName)
        latestVersionName = latestVersionNameDecoded
        let latestVersionStatusDecoded = try containerValues.decodeIfPresent(ComprehendClientTypes.ModelStatus.self, forKey: .latestVersionStatus)
        latestVersionStatus = latestVersionStatusDecoded
    }
}
