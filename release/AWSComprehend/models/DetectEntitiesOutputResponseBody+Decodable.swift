// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectEntitiesOutputResponseBody: Swift.Equatable {
    let entities: [ComprehendClientTypes.Entity]?
}

extension DetectEntitiesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case entities = "Entities"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entitiesContainer = try containerValues.decodeIfPresent([ComprehendClientTypes.Entity?].self, forKey: .entities)
        var entitiesDecoded0:[ComprehendClientTypes.Entity]? = nil
        if let entitiesContainer = entitiesContainer {
            entitiesDecoded0 = [ComprehendClientTypes.Entity]()
            for structure0 in entitiesContainer {
                if let structure0 = structure0 {
                    entitiesDecoded0?.append(structure0)
                }
            }
        }
        entities = entitiesDecoded0
    }
}
