// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ComprehendClientTypes {
    /// An augmented manifest file that provides training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.
    public struct AugmentedManifestsListItem: Swift.Equatable {
        /// The S3 prefix to the annotation files that are referred in the augmented manifest file.
        public var annotationDataS3Uri: Swift.String?
        /// The JSON attribute that contains the annotations for your training documents. The number of attribute names that you specify depends on whether your augmented manifest file is the output of a single labeling job or a chained labeling job. If your file is the output of a single labeling job, specify the LabelAttributeName key that was used when the job was created in Ground Truth. If your file is the output of a chained labeling job, specify the LabelAttributeName key for one or more jobs in the chain. Each LabelAttributeName key provides the annotations from an individual job.
        /// This member is required.
        public var attributeNames: [Swift.String]?
        /// The type of augmented manifest. PlainTextDocument or SemiStructuredDocument. If you don't specify, the default is PlainTextDocument.
        ///
        /// * PLAIN_TEXT_DOCUMENT A document type that represents any unicode text that is encoded in UTF-8.
        ///
        /// * SEMI_STRUCTURED_DOCUMENT A document type with positional and structural context, like a PDF. For training with Amazon Comprehend, only PDFs are supported. For inference, Amazon Comprehend support PDFs, DOCX and TXT.
        public var documentType: ComprehendClientTypes.AugmentedManifestsDocumentTypeFormat?
        /// The Amazon S3 location of the augmented manifest file.
        /// This member is required.
        public var s3Uri: Swift.String?
        /// The S3 prefix to the source files (PDFs) that are referred to in the augmented manifest file.
        public var sourceDocumentsS3Uri: Swift.String?
        /// The purpose of the data you've provided in the augmented manifest. You can either train or test this data. If you don't specify, the default is train. TRAIN - all of the documents in the manifest will be used for training. If no test documents are provided, Amazon Comprehend will automatically reserve a portion of the training documents for testing. TEST - all of the documents in the manifest will be used for testing.
        public var split: ComprehendClientTypes.Split?

        public init (
            annotationDataS3Uri: Swift.String? = nil,
            attributeNames: [Swift.String]? = nil,
            documentType: ComprehendClientTypes.AugmentedManifestsDocumentTypeFormat? = nil,
            s3Uri: Swift.String? = nil,
            sourceDocumentsS3Uri: Swift.String? = nil,
            split: ComprehendClientTypes.Split? = nil
        )
        {
            self.annotationDataS3Uri = annotationDataS3Uri
            self.attributeNames = attributeNames
            self.documentType = documentType
            self.s3Uri = s3Uri
            self.sourceDocumentsS3Uri = sourceDocumentsS3Uri
            self.split = split
        }
    }

}
