// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLexiconsOutputResponseBody: Swift.Equatable {
    let lexicons: [PollyClientTypes.LexiconDescription]?
    let nextToken: Swift.String?
}

extension ListLexiconsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lexicons = "Lexicons"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lexiconsContainer = try containerValues.decodeIfPresent([PollyClientTypes.LexiconDescription?].self, forKey: .lexicons)
        var lexiconsDecoded0:[PollyClientTypes.LexiconDescription]? = nil
        if let lexiconsContainer = lexiconsContainer {
            lexiconsDecoded0 = [PollyClientTypes.LexiconDescription]()
            for structure0 in lexiconsContainer {
                if let structure0 = structure0 {
                    lexiconsDecoded0?.append(structure0)
                }
            }
        }
        lexicons = lexiconsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
