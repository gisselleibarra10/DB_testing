// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDataRepositoryAssociationInputBody: Swift.Equatable {
    let fileSystemId: Swift.String?
    let fileSystemPath: Swift.String?
    let dataRepositoryPath: Swift.String?
    let batchImportMetaDataOnCreate: Swift.Bool?
    let importedFileChunkSize: Swift.Int?
    let s3: FSxClientTypes.S3DataRepositoryConfiguration?
    let clientRequestToken: Swift.String?
    let tags: [FSxClientTypes.Tag]?
}

extension CreateDataRepositoryAssociationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case batchImportMetaDataOnCreate = "BatchImportMetaDataOnCreate"
        case clientRequestToken = "ClientRequestToken"
        case dataRepositoryPath = "DataRepositoryPath"
        case fileSystemId = "FileSystemId"
        case fileSystemPath = "FileSystemPath"
        case importedFileChunkSize = "ImportedFileChunkSize"
        case s3 = "S3"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fileSystemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fileSystemId)
        fileSystemId = fileSystemIdDecoded
        let fileSystemPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fileSystemPath)
        fileSystemPath = fileSystemPathDecoded
        let dataRepositoryPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataRepositoryPath)
        dataRepositoryPath = dataRepositoryPathDecoded
        let batchImportMetaDataOnCreateDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .batchImportMetaDataOnCreate)
        batchImportMetaDataOnCreate = batchImportMetaDataOnCreateDecoded
        let importedFileChunkSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .importedFileChunkSize)
        importedFileChunkSize = importedFileChunkSizeDecoded
        let s3Decoded = try containerValues.decodeIfPresent(FSxClientTypes.S3DataRepositoryConfiguration.self, forKey: .s3)
        s3 = s3Decoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let tagsContainer = try containerValues.decodeIfPresent([FSxClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[FSxClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [FSxClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
