// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.LustreRootSquashConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case noSquashNids = "NoSquashNids"
        case rootSquash = "RootSquash"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let noSquashNids = noSquashNids {
            var noSquashNidsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .noSquashNids)
            for lustrenosquashnids0 in noSquashNids {
                try noSquashNidsContainer.encode(lustrenosquashnids0)
            }
        }
        if let rootSquash = self.rootSquash {
            try encodeContainer.encode(rootSquash, forKey: .rootSquash)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rootSquashDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rootSquash)
        rootSquash = rootSquashDecoded
        let noSquashNidsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .noSquashNids)
        var noSquashNidsDecoded0:[Swift.String]? = nil
        if let noSquashNidsContainer = noSquashNidsContainer {
            noSquashNidsDecoded0 = [Swift.String]()
            for string0 in noSquashNidsContainer {
                if let string0 = string0 {
                    noSquashNidsDecoded0?.append(string0)
                }
            }
        }
        noSquashNids = noSquashNidsDecoded0
    }
}
