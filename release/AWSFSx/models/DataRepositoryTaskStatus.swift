// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes {
    /// Provides the task status showing a running total of the total number of files to be processed, the number successfully processed, and the number of files the task failed to process.
    public struct DataRepositoryTaskStatus: Swift.Equatable {
        /// A running total of the number of files that the task failed to process.
        public var failedCount: Swift.Int?
        /// The time at which the task status was last updated.
        public var lastUpdatedTime: ClientRuntime.Date?
        /// The total amount of data, in GiB, released by an Amazon File Cache AUTO_RELEASE_DATA task that automatically releases files from the cache.
        public var releasedCapacity: Swift.Int?
        /// A running total of the number of files that the task has successfully processed.
        public var succeededCount: Swift.Int?
        /// The total number of files that the task will process. While a task is executing, the sum of SucceededCount plus FailedCount may not equal TotalCount. When the task is complete, TotalCount equals the sum of SucceededCount plus FailedCount.
        public var totalCount: Swift.Int?

        public init (
            failedCount: Swift.Int? = nil,
            lastUpdatedTime: ClientRuntime.Date? = nil,
            releasedCapacity: Swift.Int? = nil,
            succeededCount: Swift.Int? = nil,
            totalCount: Swift.Int? = nil
        )
        {
            self.failedCount = failedCount
            self.lastUpdatedTime = lastUpdatedTime
            self.releasedCapacity = releasedCapacity
            self.succeededCount = succeededCount
            self.totalCount = totalCount
        }
    }

}
