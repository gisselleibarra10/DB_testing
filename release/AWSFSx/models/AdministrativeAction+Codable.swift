// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.AdministrativeAction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case administrativeActionType = "AdministrativeActionType"
        case failureDetails = "FailureDetails"
        case progressPercent = "ProgressPercent"
        case requestTime = "RequestTime"
        case status = "Status"
        case targetFileSystemValues = "TargetFileSystemValues"
        case targetSnapshotValues = "TargetSnapshotValues"
        case targetVolumeValues = "TargetVolumeValues"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let administrativeActionType = self.administrativeActionType {
            try encodeContainer.encode(administrativeActionType.rawValue, forKey: .administrativeActionType)
        }
        if let failureDetails = self.failureDetails {
            try encodeContainer.encode(failureDetails, forKey: .failureDetails)
        }
        if let progressPercent = self.progressPercent {
            try encodeContainer.encode(progressPercent, forKey: .progressPercent)
        }
        if let requestTime = self.requestTime {
            try encodeContainer.encode(requestTime.timeIntervalSince1970, forKey: .requestTime)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let targetFileSystemValues = self.targetFileSystemValues {
            try encodeContainer.encode(targetFileSystemValues, forKey: .targetFileSystemValues)
        }
        if let targetSnapshotValues = self.targetSnapshotValues {
            try encodeContainer.encode(targetSnapshotValues, forKey: .targetSnapshotValues)
        }
        if let targetVolumeValues = self.targetVolumeValues {
            try encodeContainer.encode(targetVolumeValues, forKey: .targetVolumeValues)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let administrativeActionTypeDecoded = try containerValues.decodeIfPresent(FSxClientTypes.AdministrativeActionType.self, forKey: .administrativeActionType)
        administrativeActionType = administrativeActionTypeDecoded
        let progressPercentDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .progressPercent)
        progressPercent = progressPercentDecoded
        let requestTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .requestTime)
        requestTime = requestTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(FSxClientTypes.Status.self, forKey: .status)
        status = statusDecoded
        let targetFileSystemValuesDecoded = try containerValues.decodeIfPresent(FSxClientTypes.FileSystem.self, forKey: .targetFileSystemValues)
        targetFileSystemValues = targetFileSystemValuesDecoded
        let failureDetailsDecoded = try containerValues.decodeIfPresent(FSxClientTypes.AdministrativeActionFailureDetails.self, forKey: .failureDetails)
        failureDetails = failureDetailsDecoded
        let targetVolumeValuesDecoded = try containerValues.decodeIfPresent(FSxClientTypes.Volume.self, forKey: .targetVolumeValues)
        targetVolumeValues = targetVolumeValuesDecoded
        let targetSnapshotValuesDecoded = try containerValues.decodeIfPresent(FSxClientTypes.Snapshot.self, forKey: .targetSnapshotValues)
        targetSnapshotValues = targetSnapshotValuesDecoded
    }
}
