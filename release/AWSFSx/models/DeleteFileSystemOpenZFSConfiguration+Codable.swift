// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.DeleteFileSystemOpenZFSConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case finalBackupTags = "FinalBackupTags"
        case options = "Options"
        case skipFinalBackup = "SkipFinalBackup"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let finalBackupTags = finalBackupTags {
            var finalBackupTagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .finalBackupTags)
            for tags0 in finalBackupTags {
                try finalBackupTagsContainer.encode(tags0)
            }
        }
        if let options = options {
            var optionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .options)
            for deletefilesystemopenzfsoptions0 in options {
                try optionsContainer.encode(deletefilesystemopenzfsoptions0.rawValue)
            }
        }
        if let skipFinalBackup = self.skipFinalBackup {
            try encodeContainer.encode(skipFinalBackup, forKey: .skipFinalBackup)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let skipFinalBackupDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .skipFinalBackup)
        skipFinalBackup = skipFinalBackupDecoded
        let finalBackupTagsContainer = try containerValues.decodeIfPresent([FSxClientTypes.Tag?].self, forKey: .finalBackupTags)
        var finalBackupTagsDecoded0:[FSxClientTypes.Tag]? = nil
        if let finalBackupTagsContainer = finalBackupTagsContainer {
            finalBackupTagsDecoded0 = [FSxClientTypes.Tag]()
            for structure0 in finalBackupTagsContainer {
                if let structure0 = structure0 {
                    finalBackupTagsDecoded0?.append(structure0)
                }
            }
        }
        finalBackupTags = finalBackupTagsDecoded0
        let optionsContainer = try containerValues.decodeIfPresent([FSxClientTypes.DeleteFileSystemOpenZFSOption?].self, forKey: .options)
        var optionsDecoded0:[FSxClientTypes.DeleteFileSystemOpenZFSOption]? = nil
        if let optionsContainer = optionsContainer {
            optionsDecoded0 = [FSxClientTypes.DeleteFileSystemOpenZFSOption]()
            for enum0 in optionsContainer {
                if let enum0 = enum0 {
                    optionsDecoded0?.append(enum0)
                }
            }
        }
        options = optionsDecoded0
    }
}
