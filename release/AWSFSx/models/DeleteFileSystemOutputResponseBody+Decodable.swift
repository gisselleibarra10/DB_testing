// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteFileSystemOutputResponseBody: Swift.Equatable {
    let fileSystemId: Swift.String?
    let lifecycle: FSxClientTypes.FileSystemLifecycle?
    let windowsResponse: FSxClientTypes.DeleteFileSystemWindowsResponse?
    let lustreResponse: FSxClientTypes.DeleteFileSystemLustreResponse?
    let openZFSResponse: FSxClientTypes.DeleteFileSystemOpenZFSResponse?
}

extension DeleteFileSystemOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fileSystemId = "FileSystemId"
        case lifecycle = "Lifecycle"
        case lustreResponse = "LustreResponse"
        case openZFSResponse = "OpenZFSResponse"
        case windowsResponse = "WindowsResponse"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fileSystemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fileSystemId)
        fileSystemId = fileSystemIdDecoded
        let lifecycleDecoded = try containerValues.decodeIfPresent(FSxClientTypes.FileSystemLifecycle.self, forKey: .lifecycle)
        lifecycle = lifecycleDecoded
        let windowsResponseDecoded = try containerValues.decodeIfPresent(FSxClientTypes.DeleteFileSystemWindowsResponse.self, forKey: .windowsResponse)
        windowsResponse = windowsResponseDecoded
        let lustreResponseDecoded = try containerValues.decodeIfPresent(FSxClientTypes.DeleteFileSystemLustreResponse.self, forKey: .lustreResponse)
        lustreResponse = lustreResponseDecoded
        let openZFSResponseDecoded = try containerValues.decodeIfPresent(FSxClientTypes.DeleteFileSystemOpenZFSResponse.self, forKey: .openZFSResponse)
        openZFSResponse = openZFSResponseDecoded
    }
}
