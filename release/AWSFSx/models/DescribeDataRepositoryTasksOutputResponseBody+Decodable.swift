// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDataRepositoryTasksOutputResponseBody: Swift.Equatable {
    let dataRepositoryTasks: [FSxClientTypes.DataRepositoryTask]?
    let nextToken: Swift.String?
}

extension DescribeDataRepositoryTasksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataRepositoryTasks = "DataRepositoryTasks"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataRepositoryTasksContainer = try containerValues.decodeIfPresent([FSxClientTypes.DataRepositoryTask?].self, forKey: .dataRepositoryTasks)
        var dataRepositoryTasksDecoded0:[FSxClientTypes.DataRepositoryTask]? = nil
        if let dataRepositoryTasksContainer = dataRepositoryTasksContainer {
            dataRepositoryTasksDecoded0 = [FSxClientTypes.DataRepositoryTask]()
            for structure0 in dataRepositoryTasksContainer {
                if let structure0 = structure0 {
                    dataRepositoryTasksDecoded0?.append(structure0)
                }
            }
        }
        dataRepositoryTasks = dataRepositoryTasksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
