// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.DataRepositoryConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case autoImportPolicy = "AutoImportPolicy"
        case exportPath = "ExportPath"
        case failureDetails = "FailureDetails"
        case importPath = "ImportPath"
        case importedFileChunkSize = "ImportedFileChunkSize"
        case lifecycle = "Lifecycle"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let autoImportPolicy = self.autoImportPolicy {
            try encodeContainer.encode(autoImportPolicy.rawValue, forKey: .autoImportPolicy)
        }
        if let exportPath = self.exportPath {
            try encodeContainer.encode(exportPath, forKey: .exportPath)
        }
        if let failureDetails = self.failureDetails {
            try encodeContainer.encode(failureDetails, forKey: .failureDetails)
        }
        if let importPath = self.importPath {
            try encodeContainer.encode(importPath, forKey: .importPath)
        }
        if let importedFileChunkSize = self.importedFileChunkSize {
            try encodeContainer.encode(importedFileChunkSize, forKey: .importedFileChunkSize)
        }
        if let lifecycle = self.lifecycle {
            try encodeContainer.encode(lifecycle.rawValue, forKey: .lifecycle)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lifecycleDecoded = try containerValues.decodeIfPresent(FSxClientTypes.DataRepositoryLifecycle.self, forKey: .lifecycle)
        lifecycle = lifecycleDecoded
        let importPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .importPath)
        importPath = importPathDecoded
        let exportPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exportPath)
        exportPath = exportPathDecoded
        let importedFileChunkSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .importedFileChunkSize)
        importedFileChunkSize = importedFileChunkSizeDecoded
        let autoImportPolicyDecoded = try containerValues.decodeIfPresent(FSxClientTypes.AutoImportPolicyType.self, forKey: .autoImportPolicy)
        autoImportPolicy = autoImportPolicyDecoded
        let failureDetailsDecoded = try containerValues.decodeIfPresent(FSxClientTypes.DataRepositoryFailureDetails.self, forKey: .failureDetails)
        failureDetails = failureDetailsDecoded
    }
}
