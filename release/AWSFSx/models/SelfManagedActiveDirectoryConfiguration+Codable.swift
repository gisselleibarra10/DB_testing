// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.SelfManagedActiveDirectoryConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dnsIps = "DnsIps"
        case domainName = "DomainName"
        case fileSystemAdministratorsGroup = "FileSystemAdministratorsGroup"
        case organizationalUnitDistinguishedName = "OrganizationalUnitDistinguishedName"
        case password = "Password"
        case userName = "UserName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dnsIps = dnsIps {
            var dnsIpsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dnsIps)
            for dnsips0 in dnsIps {
                try dnsIpsContainer.encode(dnsips0)
            }
        }
        if let domainName = self.domainName {
            try encodeContainer.encode(domainName, forKey: .domainName)
        }
        if let fileSystemAdministratorsGroup = self.fileSystemAdministratorsGroup {
            try encodeContainer.encode(fileSystemAdministratorsGroup, forKey: .fileSystemAdministratorsGroup)
        }
        if let organizationalUnitDistinguishedName = self.organizationalUnitDistinguishedName {
            try encodeContainer.encode(organizationalUnitDistinguishedName, forKey: .organizationalUnitDistinguishedName)
        }
        if let password = self.password {
            try encodeContainer.encode(password, forKey: .password)
        }
        if let userName = self.userName {
            try encodeContainer.encode(userName, forKey: .userName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let organizationalUnitDistinguishedNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .organizationalUnitDistinguishedName)
        organizationalUnitDistinguishedName = organizationalUnitDistinguishedNameDecoded
        let fileSystemAdministratorsGroupDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fileSystemAdministratorsGroup)
        fileSystemAdministratorsGroup = fileSystemAdministratorsGroupDecoded
        let userNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userName)
        userName = userNameDecoded
        let passwordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .password)
        password = passwordDecoded
        let dnsIpsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .dnsIps)
        var dnsIpsDecoded0:[Swift.String]? = nil
        if let dnsIpsContainer = dnsIpsContainer {
            dnsIpsDecoded0 = [Swift.String]()
            for string0 in dnsIpsContainer {
                if let string0 = string0 {
                    dnsIpsDecoded0?.append(string0)
                }
            }
        }
        dnsIps = dnsIpsDecoded0
    }
}
