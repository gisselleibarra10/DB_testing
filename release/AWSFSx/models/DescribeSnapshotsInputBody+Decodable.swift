// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSnapshotsInputBody: Swift.Equatable {
    let snapshotIds: [Swift.String]?
    let filters: [FSxClientTypes.SnapshotFilter]?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension DescribeSnapshotsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filters = "Filters"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case snapshotIds = "SnapshotIds"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let snapshotIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .snapshotIds)
        var snapshotIdsDecoded0:[Swift.String]? = nil
        if let snapshotIdsContainer = snapshotIdsContainer {
            snapshotIdsDecoded0 = [Swift.String]()
            for string0 in snapshotIdsContainer {
                if let string0 = string0 {
                    snapshotIdsDecoded0?.append(string0)
                }
            }
        }
        snapshotIds = snapshotIdsDecoded0
        let filtersContainer = try containerValues.decodeIfPresent([FSxClientTypes.SnapshotFilter?].self, forKey: .filters)
        var filtersDecoded0:[FSxClientTypes.SnapshotFilter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [FSxClientTypes.SnapshotFilter]()
            for structure0 in filtersContainer {
                if let structure0 = structure0 {
                    filtersDecoded0?.append(structure0)
                }
            }
        }
        filters = filtersDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
