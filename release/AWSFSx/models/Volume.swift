// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes {
    /// Describes an Amazon FSx for NetApp ONTAP or Amazon FSx for OpenZFS volume.
    public struct Volume: Swift.Equatable {
        /// A list of administrative actions for the file system that are in process or waiting to be processed. Administrative actions describe changes to the Amazon FSx system that you initiated.
        public var administrativeActions: [FSxClientTypes.AdministrativeAction]?
        /// The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
        public var creationTime: ClientRuntime.Date?
        /// The globally unique ID of the file system, assigned by Amazon FSx.
        public var fileSystemId: Swift.String?
        /// The lifecycle status of the volume.
        ///
        /// * AVAILABLE - The volume is fully available for use.
        ///
        /// * CREATED - The volume has been created.
        ///
        /// * CREATING - Amazon FSx is creating the new volume.
        ///
        /// * DELETING - Amazon FSx is deleting an existing volume.
        ///
        /// * FAILED - Amazon FSx was unable to create the volume.
        ///
        /// * MISCONFIGURED - The volume is in a failed but recoverable state.
        ///
        /// * PENDING - Amazon FSx hasn't started creating the volume.
        public var lifecycle: FSxClientTypes.VolumeLifecycle?
        /// The reason why the volume lifecycle status changed.
        public var lifecycleTransitionReason: FSxClientTypes.LifecycleTransitionReason?
        /// The name of the volume.
        public var name: Swift.String?
        /// The configuration of an Amazon FSx for NetApp ONTAP volume.
        public var ontapConfiguration: FSxClientTypes.OntapVolumeConfiguration?
        /// The configuration of an Amazon FSx for OpenZFS volume.
        public var openZFSConfiguration: FSxClientTypes.OpenZFSVolumeConfiguration?
        /// The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the Amazon Web Services General Reference.
        public var resourceARN: Swift.String?
        /// A list of Tag values, with a maximum of 50 elements.
        public var tags: [FSxClientTypes.Tag]?
        /// The system-generated, unique ID of the volume.
        public var volumeId: Swift.String?
        /// The type of the volume.
        public var volumeType: FSxClientTypes.VolumeType?

        public init (
            administrativeActions: [FSxClientTypes.AdministrativeAction]? = nil,
            creationTime: ClientRuntime.Date? = nil,
            fileSystemId: Swift.String? = nil,
            lifecycle: FSxClientTypes.VolumeLifecycle? = nil,
            lifecycleTransitionReason: FSxClientTypes.LifecycleTransitionReason? = nil,
            name: Swift.String? = nil,
            ontapConfiguration: FSxClientTypes.OntapVolumeConfiguration? = nil,
            openZFSConfiguration: FSxClientTypes.OpenZFSVolumeConfiguration? = nil,
            resourceARN: Swift.String? = nil,
            tags: [FSxClientTypes.Tag]? = nil,
            volumeId: Swift.String? = nil,
            volumeType: FSxClientTypes.VolumeType? = nil
        )
        {
            self.administrativeActions = administrativeActions
            self.creationTime = creationTime
            self.fileSystemId = fileSystemId
            self.lifecycle = lifecycle
            self.lifecycleTransitionReason = lifecycleTransitionReason
            self.name = name
            self.ontapConfiguration = ontapConfiguration
            self.openZFSConfiguration = openZFSConfiguration
            self.resourceARN = resourceARN
            self.tags = tags
            self.volumeId = volumeId
            self.volumeType = volumeType
        }
    }

}
