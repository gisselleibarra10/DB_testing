// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.OpenZFSNfsExport: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientConfigurations = "ClientConfigurations"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientConfigurations = clientConfigurations {
            var clientConfigurationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .clientConfigurations)
            for openzfsclientconfigurations0 in clientConfigurations {
                try clientConfigurationsContainer.encode(openzfsclientconfigurations0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientConfigurationsContainer = try containerValues.decodeIfPresent([FSxClientTypes.OpenZFSClientConfiguration?].self, forKey: .clientConfigurations)
        var clientConfigurationsDecoded0:[FSxClientTypes.OpenZFSClientConfiguration]? = nil
        if let clientConfigurationsContainer = clientConfigurationsContainer {
            clientConfigurationsDecoded0 = [FSxClientTypes.OpenZFSClientConfiguration]()
            for structure0 in clientConfigurationsContainer {
                if let structure0 = structure0 {
                    clientConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        clientConfigurations = clientConfigurationsDecoded0
    }
}
