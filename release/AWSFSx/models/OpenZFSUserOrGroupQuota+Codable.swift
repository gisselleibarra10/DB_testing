// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.OpenZFSUserOrGroupQuota: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case id = "Id"
        case storageCapacityQuotaGiB = "StorageCapacityQuotaGiB"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let storageCapacityQuotaGiB = self.storageCapacityQuotaGiB {
            try encodeContainer.encode(storageCapacityQuotaGiB, forKey: .storageCapacityQuotaGiB)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(FSxClientTypes.OpenZFSQuotaType.self, forKey: .type)
        type = typeDecoded
        let idDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .id)
        id = idDecoded
        let storageCapacityQuotaGiBDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .storageCapacityQuotaGiB)
        storageCapacityQuotaGiB = storageCapacityQuotaGiBDecoded
    }
}
