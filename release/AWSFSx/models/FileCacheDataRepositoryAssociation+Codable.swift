// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.FileCacheDataRepositoryAssociation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataRepositoryPath = "DataRepositoryPath"
        case dataRepositorySubdirectories = "DataRepositorySubdirectories"
        case fileCachePath = "FileCachePath"
        case nFS = "NFS"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataRepositoryPath = self.dataRepositoryPath {
            try encodeContainer.encode(dataRepositoryPath, forKey: .dataRepositoryPath)
        }
        if let dataRepositorySubdirectories = dataRepositorySubdirectories {
            var dataRepositorySubdirectoriesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dataRepositorySubdirectories)
            for subdirectoriespaths0 in dataRepositorySubdirectories {
                try dataRepositorySubdirectoriesContainer.encode(subdirectoriespaths0)
            }
        }
        if let fileCachePath = self.fileCachePath {
            try encodeContainer.encode(fileCachePath, forKey: .fileCachePath)
        }
        if let nFS = self.nFS {
            try encodeContainer.encode(nFS, forKey: .nFS)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fileCachePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fileCachePath)
        fileCachePath = fileCachePathDecoded
        let dataRepositoryPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataRepositoryPath)
        dataRepositoryPath = dataRepositoryPathDecoded
        let dataRepositorySubdirectoriesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .dataRepositorySubdirectories)
        var dataRepositorySubdirectoriesDecoded0:[Swift.String]? = nil
        if let dataRepositorySubdirectoriesContainer = dataRepositorySubdirectoriesContainer {
            dataRepositorySubdirectoriesDecoded0 = [Swift.String]()
            for string0 in dataRepositorySubdirectoriesContainer {
                if let string0 = string0 {
                    dataRepositorySubdirectoriesDecoded0?.append(string0)
                }
            }
        }
        dataRepositorySubdirectories = dataRepositorySubdirectoriesDecoded0
        let nFSDecoded = try containerValues.decodeIfPresent(FSxClientTypes.FileCacheNFSConfiguration.self, forKey: .nFS)
        nFS = nFSDecoded
    }
}
