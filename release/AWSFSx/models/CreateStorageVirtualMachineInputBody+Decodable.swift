// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateStorageVirtualMachineInputBody: Swift.Equatable {
    let activeDirectoryConfiguration: FSxClientTypes.CreateSvmActiveDirectoryConfiguration?
    let clientRequestToken: Swift.String?
    let fileSystemId: Swift.String?
    let name: Swift.String?
    let svmAdminPassword: Swift.String?
    let tags: [FSxClientTypes.Tag]?
    let rootVolumeSecurityStyle: FSxClientTypes.StorageVirtualMachineRootVolumeSecurityStyle?
}

extension CreateStorageVirtualMachineInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activeDirectoryConfiguration = "ActiveDirectoryConfiguration"
        case clientRequestToken = "ClientRequestToken"
        case fileSystemId = "FileSystemId"
        case name = "Name"
        case rootVolumeSecurityStyle = "RootVolumeSecurityStyle"
        case svmAdminPassword = "SvmAdminPassword"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activeDirectoryConfigurationDecoded = try containerValues.decodeIfPresent(FSxClientTypes.CreateSvmActiveDirectoryConfiguration.self, forKey: .activeDirectoryConfiguration)
        activeDirectoryConfiguration = activeDirectoryConfigurationDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let fileSystemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fileSystemId)
        fileSystemId = fileSystemIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let svmAdminPasswordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .svmAdminPassword)
        svmAdminPassword = svmAdminPasswordDecoded
        let tagsContainer = try containerValues.decodeIfPresent([FSxClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[FSxClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [FSxClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
        let rootVolumeSecurityStyleDecoded = try containerValues.decodeIfPresent(FSxClientTypes.StorageVirtualMachineRootVolumeSecurityStyle.self, forKey: .rootVolumeSecurityStyle)
        rootVolumeSecurityStyle = rootVolumeSecurityStyleDecoded
    }
}
