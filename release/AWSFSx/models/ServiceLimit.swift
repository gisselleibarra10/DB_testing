// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FSxClientTypes {
    /// The types of limits on your service utilization. Limits include file system count, total throughput capacity, total storage, and total user-initiated backups. These limits apply for a specific account in a specific Amazon Web Services Region. You can increase some of them by contacting Amazon Web Services Support.
    public enum ServiceLimit: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case fileCacheCount
        case fileSystemCount
        case storageVirtualMachinesPerFileSystem
        case totalInProgressCopyBackups
        case totalSsdIops
        case totalStorage
        case totalThroughputCapacity
        case totalUserInitiatedBackups
        case totalUserTags
        case volumesPerFileSystem
        case sdkUnknown(Swift.String)

        public static var allCases: [ServiceLimit] {
            return [
                .fileCacheCount,
                .fileSystemCount,
                .storageVirtualMachinesPerFileSystem,
                .totalInProgressCopyBackups,
                .totalSsdIops,
                .totalStorage,
                .totalThroughputCapacity,
                .totalUserInitiatedBackups,
                .totalUserTags,
                .volumesPerFileSystem,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .fileCacheCount: return "FILE_CACHE_COUNT"
            case .fileSystemCount: return "FILE_SYSTEM_COUNT"
            case .storageVirtualMachinesPerFileSystem: return "STORAGE_VIRTUAL_MACHINES_PER_FILE_SYSTEM"
            case .totalInProgressCopyBackups: return "TOTAL_IN_PROGRESS_COPY_BACKUPS"
            case .totalSsdIops: return "TOTAL_SSD_IOPS"
            case .totalStorage: return "TOTAL_STORAGE"
            case .totalThroughputCapacity: return "TOTAL_THROUGHPUT_CAPACITY"
            case .totalUserInitiatedBackups: return "TOTAL_USER_INITIATED_BACKUPS"
            case .totalUserTags: return "TOTAL_USER_TAGS"
            case .volumesPerFileSystem: return "VOLUMES_PER_FILE_SYSTEM"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ServiceLimit(rawValue: rawValue) ?? ServiceLimit.sdkUnknown(rawValue)
        }
    }
}
