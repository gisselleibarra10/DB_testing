// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDataRepositoryAssociationInputBody: Swift.Equatable {
    let associationId: Swift.String?
    let clientRequestToken: Swift.String?
    let importedFileChunkSize: Swift.Int?
    let s3: FSxClientTypes.S3DataRepositoryConfiguration?
}

extension UpdateDataRepositoryAssociationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associationId = "AssociationId"
        case clientRequestToken = "ClientRequestToken"
        case importedFileChunkSize = "ImportedFileChunkSize"
        case s3 = "S3"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let associationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .associationId)
        associationId = associationIdDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let importedFileChunkSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .importedFileChunkSize)
        importedFileChunkSize = importedFileChunkSizeDecoded
        let s3Decoded = try containerValues.decodeIfPresent(FSxClientTypes.S3DataRepositoryConfiguration.self, forKey: .s3)
        s3 = s3Decoded
    }
}
