// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InvalidNetworkSettingsBody: Swift.Equatable {
    let message: Swift.String?
    let invalidSubnetId: Swift.String?
    let invalidSecurityGroupId: Swift.String?
    let invalidRouteTableId: Swift.String?
}

extension InvalidNetworkSettingsBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case invalidRouteTableId = "InvalidRouteTableId"
        case invalidSecurityGroupId = "InvalidSecurityGroupId"
        case invalidSubnetId = "InvalidSubnetId"
        case message = "Message"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let invalidSubnetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .invalidSubnetId)
        invalidSubnetId = invalidSubnetIdDecoded
        let invalidSecurityGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .invalidSecurityGroupId)
        invalidSecurityGroupId = invalidSecurityGroupIdDecoded
        let invalidRouteTableIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .invalidRouteTableId)
        invalidRouteTableId = invalidRouteTableIdDecoded
    }
}
