// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FSxClientTypes {
    /// The configuration object for Amazon FSx for Lustre file systems used in the UpdateFileSystem operation.
    public struct UpdateFileSystemLustreConfiguration: Swift.Equatable {
        /// (Optional) When you create your file system, your existing S3 objects appear as file and directory listings. Use this property to choose how Amazon FSx keeps your file and directory listing up to date as you add or modify objects in your linked S3 bucket. AutoImportPolicy can have the following values:
        ///
        /// * NONE - (Default) AutoImport is off. Amazon FSx only updates file and directory listings from the linked S3 bucket when the file system is created. FSx does not update the file and directory listing for any new or changed objects after choosing this option.
        ///
        /// * NEW - AutoImport is on. Amazon FSx automatically imports directory listings of any new objects added to the linked S3 bucket that do not currently exist in the FSx file system.
        ///
        /// * NEW_CHANGED - AutoImport is on. Amazon FSx automatically imports file and directory listings of any new objects added to the S3 bucket and any existing objects that are changed in the S3 bucket after you choose this option.
        ///
        /// * NEW_CHANGED_DELETED - AutoImport is on. Amazon FSx automatically imports file and directory listings of any new objects added to the S3 bucket, any existing objects that are changed in the S3 bucket, and any objects that were deleted in the S3 bucket.
        ///
        ///
        /// The AutoImportPolicy parameter is not supported for Lustre file systems with the Persistent_2 deployment type. Instead, use to update a data repository association on your Persistent_2 file system.
        public var autoImportPolicy: FSxClientTypes.AutoImportPolicyType?
        /// The number of days to retain automatic backups. Setting this property to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days. The default is 0.
        public var automaticBackupRetentionDays: Swift.Int?
        /// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily.
        public var dailyAutomaticBackupStartTime: Swift.String?
        /// Sets the data compression configuration for the file system. DataCompressionType can have the following values:
        ///
        /// * NONE - Data compression is turned off for the file system.
        ///
        /// * LZ4 - Data compression is turned on with the LZ4 algorithm.
        ///
        ///
        /// If you don't use DataCompressionType, the file system retains its current data compression configuration. For more information, see [Lustre data compression](https://docs.aws.amazon.com/fsx/latest/LustreGuide/data-compression.html).
        public var dataCompressionType: FSxClientTypes.DataCompressionType?
        /// The Lustre logging configuration used when updating an Amazon FSx for Lustre file system. When logging is enabled, Lustre logs error and warning events for data repositories associated with your file system to Amazon CloudWatch Logs.
        public var logConfiguration: FSxClientTypes.LustreLogCreateConfiguration?
        /// The Lustre root squash configuration used when updating an Amazon FSx for Lustre file system. When enabled, root squash restricts root-level access from clients that try to access your file system as a root user.
        public var rootSquashConfiguration: FSxClientTypes.LustreRootSquashConfiguration?
        /// (Optional) The preferred start time to perform weekly maintenance, formatted d:HH:MM in the UTC time zone. d is the weekday number, from 1 through 7, beginning with Monday and ending with Sunday.
        public var weeklyMaintenanceStartTime: Swift.String?

        public init (
            autoImportPolicy: FSxClientTypes.AutoImportPolicyType? = nil,
            automaticBackupRetentionDays: Swift.Int? = nil,
            dailyAutomaticBackupStartTime: Swift.String? = nil,
            dataCompressionType: FSxClientTypes.DataCompressionType? = nil,
            logConfiguration: FSxClientTypes.LustreLogCreateConfiguration? = nil,
            rootSquashConfiguration: FSxClientTypes.LustreRootSquashConfiguration? = nil,
            weeklyMaintenanceStartTime: Swift.String? = nil
        )
        {
            self.autoImportPolicy = autoImportPolicy
            self.automaticBackupRetentionDays = automaticBackupRetentionDays
            self.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime
            self.dataCompressionType = dataCompressionType
            self.logConfiguration = logConfiguration
            self.rootSquashConfiguration = rootSquashConfiguration
            self.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime
        }
    }

}
