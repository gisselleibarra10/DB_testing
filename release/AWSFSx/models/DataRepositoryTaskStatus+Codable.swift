// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.DataRepositoryTaskStatus: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failedCount = "FailedCount"
        case lastUpdatedTime = "LastUpdatedTime"
        case releasedCapacity = "ReleasedCapacity"
        case succeededCount = "SucceededCount"
        case totalCount = "TotalCount"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let failedCount = self.failedCount {
            try encodeContainer.encode(failedCount, forKey: .failedCount)
        }
        if let lastUpdatedTime = self.lastUpdatedTime {
            try encodeContainer.encode(lastUpdatedTime.timeIntervalSince1970, forKey: .lastUpdatedTime)
        }
        if let releasedCapacity = self.releasedCapacity {
            try encodeContainer.encode(releasedCapacity, forKey: .releasedCapacity)
        }
        if let succeededCount = self.succeededCount {
            try encodeContainer.encode(succeededCount, forKey: .succeededCount)
        }
        if let totalCount = self.totalCount {
            try encodeContainer.encode(totalCount, forKey: .totalCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
        let succeededCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .succeededCount)
        succeededCount = succeededCountDecoded
        let failedCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failedCount)
        failedCount = failedCountDecoded
        let lastUpdatedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedTime)
        lastUpdatedTime = lastUpdatedTimeDecoded
        let releasedCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .releasedCapacity)
        releasedCapacity = releasedCapacityDecoded
    }
}
