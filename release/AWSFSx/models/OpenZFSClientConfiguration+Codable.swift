// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.OpenZFSClientConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clients = "Clients"
        case options = "Options"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clients = self.clients {
            try encodeContainer.encode(clients, forKey: .clients)
        }
        if let options = options {
            var optionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .options)
            for openzfsnfsexportoptions0 in options {
                try optionsContainer.encode(openzfsnfsexportoptions0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clients)
        clients = clientsDecoded
        let optionsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .options)
        var optionsDecoded0:[Swift.String]? = nil
        if let optionsContainer = optionsContainer {
            optionsDecoded0 = [Swift.String]()
            for string0 in optionsContainer {
                if let string0 = string0 {
                    optionsDecoded0?.append(string0)
                }
            }
        }
        options = optionsDecoded0
    }
}
