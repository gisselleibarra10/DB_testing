// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FSxClientTypes.FileCacheNFSConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dnsIps = "DnsIps"
        case version = "Version"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dnsIps = dnsIps {
            var dnsIpsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dnsIps)
            for repositorydnsips0 in dnsIps {
                try dnsIpsContainer.encode(repositorydnsips0)
            }
        }
        if let version = self.version {
            try encodeContainer.encode(version.rawValue, forKey: .version)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let versionDecoded = try containerValues.decodeIfPresent(FSxClientTypes.NfsVersion.self, forKey: .version)
        version = versionDecoded
        let dnsIpsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .dnsIps)
        var dnsIpsDecoded0:[Swift.String]? = nil
        if let dnsIpsContainer = dnsIpsContainer {
            dnsIpsDecoded0 = [Swift.String]()
            for string0 in dnsIpsContainer {
                if let string0 = string0 {
                    dnsIpsDecoded0?.append(string0)
                }
            }
        }
        dnsIps = dnsIpsDecoded0
    }
}
