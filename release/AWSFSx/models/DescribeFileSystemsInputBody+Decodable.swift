// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFileSystemsInputBody: Swift.Equatable {
    let fileSystemIds: [Swift.String]?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension DescribeFileSystemsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fileSystemIds = "FileSystemIds"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fileSystemIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .fileSystemIds)
        var fileSystemIdsDecoded0:[Swift.String]? = nil
        if let fileSystemIdsContainer = fileSystemIdsContainer {
            fileSystemIdsDecoded0 = [Swift.String]()
            for string0 in fileSystemIdsContainer {
                if let string0 = string0 {
                    fileSystemIdsDecoded0?.append(string0)
                }
            }
        }
        fileSystemIds = fileSystemIdsDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
