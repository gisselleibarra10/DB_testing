// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTestCasesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let testCases: [CodeBuildClientTypes.TestCase]?
}

extension DescribeTestCasesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case testCases
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let testCasesContainer = try containerValues.decodeIfPresent([CodeBuildClientTypes.TestCase?].self, forKey: .testCases)
        var testCasesDecoded0:[CodeBuildClientTypes.TestCase]? = nil
        if let testCasesContainer = testCasesContainer {
            testCasesDecoded0 = [CodeBuildClientTypes.TestCase]()
            for structure0 in testCasesContainer {
                if let structure0 = structure0 {
                    testCasesDecoded0?.append(structure0)
                }
            }
        }
        testCases = testCasesDecoded0
    }
}
