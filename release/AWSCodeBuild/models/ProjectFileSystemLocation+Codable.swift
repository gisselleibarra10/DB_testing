// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeBuildClientTypes.ProjectFileSystemLocation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identifier
        case location
        case mountOptions
        case mountPoint
        case type
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let identifier = self.identifier {
            try encodeContainer.encode(identifier, forKey: .identifier)
        }
        if let location = self.location {
            try encodeContainer.encode(location, forKey: .location)
        }
        if let mountOptions = self.mountOptions {
            try encodeContainer.encode(mountOptions, forKey: .mountOptions)
        }
        if let mountPoint = self.mountPoint {
            try encodeContainer.encode(mountPoint, forKey: .mountPoint)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(CodeBuildClientTypes.FileSystemType.self, forKey: .type)
        type = typeDecoded
        let locationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .location)
        location = locationDecoded
        let mountPointDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mountPoint)
        mountPoint = mountPointDecoded
        let identifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identifier)
        identifier = identifierDecoded
        let mountOptionsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mountOptions)
        mountOptions = mountOptionsDecoded
    }
}
