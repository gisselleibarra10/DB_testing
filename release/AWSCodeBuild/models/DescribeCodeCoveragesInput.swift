// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeCodeCoveragesInput: Swift.Equatable {
    /// The maximum line coverage percentage to report.
    public var maxLineCoveragePercentage: Swift.Double?
    /// The maximum number of results to return.
    public var maxResults: Swift.Int?
    /// The minimum line coverage percentage to report.
    public var minLineCoveragePercentage: Swift.Double?
    /// The nextToken value returned from a previous call to DescribeCodeCoverages. This specifies the next item to return. To return the beginning of the list, exclude this parameter.
    public var nextToken: Swift.String?
    /// The ARN of the report for which test cases are returned.
    /// This member is required.
    public var reportArn: Swift.String?
    /// Specifies how the results are sorted. Possible values are: FILE_PATH The results are sorted by file path. LINE_COVERAGE_PERCENTAGE The results are sorted by the percentage of lines that are covered.
    public var sortBy: CodeBuildClientTypes.ReportCodeCoverageSortByType?
    /// Specifies if the results are sorted in ascending or descending order.
    public var sortOrder: CodeBuildClientTypes.SortOrderType?

    public init (
        maxLineCoveragePercentage: Swift.Double? = nil,
        maxResults: Swift.Int? = nil,
        minLineCoveragePercentage: Swift.Double? = nil,
        nextToken: Swift.String? = nil,
        reportArn: Swift.String? = nil,
        sortBy: CodeBuildClientTypes.ReportCodeCoverageSortByType? = nil,
        sortOrder: CodeBuildClientTypes.SortOrderType? = nil
    )
    {
        self.maxLineCoveragePercentage = maxLineCoveragePercentage
        self.maxResults = maxResults
        self.minLineCoveragePercentage = minLineCoveragePercentage
        self.nextToken = nextToken
        self.reportArn = reportArn
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
