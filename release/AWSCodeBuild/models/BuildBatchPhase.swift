// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeBuildClientTypes {
    /// Contains information about a stage for a batch build.
    public struct BuildBatchPhase: Swift.Equatable {
        /// Additional information about the batch build phase. Especially to help troubleshoot a failed batch build.
        public var contexts: [CodeBuildClientTypes.PhaseContext]?
        /// How long, in seconds, between the starting and ending times of the batch build's phase.
        public var durationInSeconds: Swift.Int?
        /// When the batch build phase ended, expressed in Unix time format.
        public var endTime: ClientRuntime.Date?
        /// The current status of the batch build phase. Valid values include: FAILED The build phase failed. FAULT The build phase faulted. IN_PROGRESS The build phase is still in progress. STOPPED The build phase stopped. SUCCEEDED The build phase succeeded. TIMED_OUT The build phase timed out.
        public var phaseStatus: CodeBuildClientTypes.StatusType?
        /// The name of the batch build phase. Valid values include: COMBINE_ARTIFACTS Build output artifacts are being combined and uploaded to the output location. DOWNLOAD_BATCHSPEC The batch build specification is being downloaded. FAILED One or more of the builds failed. IN_PROGRESS The batch build is in progress. STOPPED The batch build was stopped. SUBMITTED The btach build has been submitted. SUCCEEDED The batch build succeeded.
        public var phaseType: CodeBuildClientTypes.BuildBatchPhaseType?
        /// When the batch build phase started, expressed in Unix time format.
        public var startTime: ClientRuntime.Date?

        public init (
            contexts: [CodeBuildClientTypes.PhaseContext]? = nil,
            durationInSeconds: Swift.Int? = nil,
            endTime: ClientRuntime.Date? = nil,
            phaseStatus: CodeBuildClientTypes.StatusType? = nil,
            phaseType: CodeBuildClientTypes.BuildBatchPhaseType? = nil,
            startTime: ClientRuntime.Date? = nil
        )
        {
            self.contexts = contexts
            self.durationInSeconds = durationInSeconds
            self.endTime = endTime
            self.phaseStatus = phaseStatus
            self.phaseType = phaseType
            self.startTime = startTime
        }
    }

}
