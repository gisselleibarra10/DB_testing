// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSharedReportGroupsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let reportGroups: [Swift.String]?
}

extension ListSharedReportGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case reportGroups
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let reportGroupsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .reportGroups)
        var reportGroupsDecoded0:[Swift.String]? = nil
        if let reportGroupsContainer = reportGroupsContainer {
            reportGroupsDecoded0 = [Swift.String]()
            for string0 in reportGroupsContainer {
                if let string0 = string0 {
                    reportGroupsDecoded0?.append(string0)
                }
            }
        }
        reportGroups = reportGroupsDecoded0
    }
}
