// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeBuildClientTypes.CodeCoverageReportSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case branchCoveragePercentage
        case branchesCovered
        case branchesMissed
        case lineCoveragePercentage
        case linesCovered
        case linesMissed
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let branchCoveragePercentage = self.branchCoveragePercentage {
            try encodeContainer.encode(branchCoveragePercentage, forKey: .branchCoveragePercentage)
        }
        if let branchesCovered = self.branchesCovered {
            try encodeContainer.encode(branchesCovered, forKey: .branchesCovered)
        }
        if let branchesMissed = self.branchesMissed {
            try encodeContainer.encode(branchesMissed, forKey: .branchesMissed)
        }
        if let lineCoveragePercentage = self.lineCoveragePercentage {
            try encodeContainer.encode(lineCoveragePercentage, forKey: .lineCoveragePercentage)
        }
        if let linesCovered = self.linesCovered {
            try encodeContainer.encode(linesCovered, forKey: .linesCovered)
        }
        if let linesMissed = self.linesMissed {
            try encodeContainer.encode(linesMissed, forKey: .linesMissed)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lineCoveragePercentageDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .lineCoveragePercentage)
        lineCoveragePercentage = lineCoveragePercentageDecoded
        let linesCoveredDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .linesCovered)
        linesCovered = linesCoveredDecoded
        let linesMissedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .linesMissed)
        linesMissed = linesMissedDecoded
        let branchCoveragePercentageDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .branchCoveragePercentage)
        branchCoveragePercentage = branchCoveragePercentageDecoded
        let branchesCoveredDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .branchesCovered)
        branchesCovered = branchesCoveredDecoded
        let branchesMissedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .branchesMissed)
        branchesMissed = branchesMissedDecoded
    }
}
