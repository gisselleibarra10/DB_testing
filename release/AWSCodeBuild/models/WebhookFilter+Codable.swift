// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeBuildClientTypes.WebhookFilter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case excludeMatchedPattern
        case pattern
        case type
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let excludeMatchedPattern = self.excludeMatchedPattern {
            try encodeContainer.encode(excludeMatchedPattern, forKey: .excludeMatchedPattern)
        }
        if let pattern = self.pattern {
            try encodeContainer.encode(pattern, forKey: .pattern)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(CodeBuildClientTypes.WebhookFilterType.self, forKey: .type)
        type = typeDecoded
        let patternDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pattern)
        pattern = patternDecoded
        let excludeMatchedPatternDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .excludeMatchedPattern)
        excludeMatchedPattern = excludeMatchedPatternDecoded
    }
}
