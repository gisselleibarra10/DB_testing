// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSharedProjectsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let projects: [Swift.String]?
}

extension ListSharedProjectsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case projects
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let projectsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .projects)
        var projectsDecoded0:[Swift.String]? = nil
        if let projectsContainer = projectsContainer {
            projectsDecoded0 = [Swift.String]()
            for string0 in projectsContainer {
                if let string0 = string0 {
                    projectsDecoded0?.append(string0)
                }
            }
        }
        projects = projectsDecoded0
    }
}
