// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeBuildClientTypes {
    /// Information about a stage for a build.
    public struct BuildPhase: Swift.Equatable {
        /// Additional information about a build phase, especially to help troubleshoot a failed build.
        public var contexts: [CodeBuildClientTypes.PhaseContext]?
        /// How long, in seconds, between the starting and ending times of the build's phase.
        public var durationInSeconds: Swift.Int?
        /// When the build phase ended, expressed in Unix time format.
        public var endTime: ClientRuntime.Date?
        /// The current status of the build phase. Valid values include: FAILED The build phase failed. FAULT The build phase faulted. IN_PROGRESS The build phase is still in progress. STOPPED The build phase stopped. SUCCEEDED The build phase succeeded. TIMED_OUT The build phase timed out.
        public var phaseStatus: CodeBuildClientTypes.StatusType?
        /// The name of the build phase. Valid values include: BUILD Core build activities typically occur in this build phase. COMPLETED The build has been completed. DOWNLOAD_SOURCE Source code is being downloaded in this build phase. FINALIZING The build process is completing in this build phase. INSTALL Installation activities typically occur in this build phase. POST_BUILD Post-build activities typically occur in this build phase. PRE_BUILD Pre-build activities typically occur in this build phase. PROVISIONING The build environment is being set up. QUEUED The build has been submitted and is queued behind other submitted builds. SUBMITTED The build has been submitted. UPLOAD_ARTIFACTS Build output artifacts are being uploaded to the output location.
        public var phaseType: CodeBuildClientTypes.BuildPhaseType?
        /// When the build phase started, expressed in Unix time format.
        public var startTime: ClientRuntime.Date?

        public init (
            contexts: [CodeBuildClientTypes.PhaseContext]? = nil,
            durationInSeconds: Swift.Int? = nil,
            endTime: ClientRuntime.Date? = nil,
            phaseStatus: CodeBuildClientTypes.StatusType? = nil,
            phaseType: CodeBuildClientTypes.BuildPhaseType? = nil,
            startTime: ClientRuntime.Date? = nil
        )
        {
            self.contexts = contexts
            self.durationInSeconds = durationInSeconds
            self.endTime = endTime
            self.phaseStatus = phaseStatus
            self.phaseType = phaseType
            self.startTime = startTime
        }
    }

}
