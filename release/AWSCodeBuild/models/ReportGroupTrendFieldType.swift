// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodeBuildClientTypes {
    public enum ReportGroupTrendFieldType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case branchesCovered
        case branchesMissed
        case branchCoverage
        case duration
        case linesCovered
        case linesMissed
        case lineCoverage
        case passRate
        case total
        case sdkUnknown(Swift.String)

        public static var allCases: [ReportGroupTrendFieldType] {
            return [
                .branchesCovered,
                .branchesMissed,
                .branchCoverage,
                .duration,
                .linesCovered,
                .linesMissed,
                .lineCoverage,
                .passRate,
                .total,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .branchesCovered: return "BRANCHES_COVERED"
            case .branchesMissed: return "BRANCHES_MISSED"
            case .branchCoverage: return "BRANCH_COVERAGE"
            case .duration: return "DURATION"
            case .linesCovered: return "LINES_COVERED"
            case .linesMissed: return "LINES_MISSED"
            case .lineCoverage: return "LINE_COVERAGE"
            case .passRate: return "PASS_RATE"
            case .total: return "TOTAL"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ReportGroupTrendFieldType(rawValue: rawValue) ?? ReportGroupTrendFieldType.sdkUnknown(rawValue)
        }
    }
}
