// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetReportsOutputResponseBody: Swift.Equatable {
    let reports: [CodeBuildClientTypes.Report]?
    let reportsNotFound: [Swift.String]?
}

extension BatchGetReportsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case reports
        case reportsNotFound
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reportsContainer = try containerValues.decodeIfPresent([CodeBuildClientTypes.Report?].self, forKey: .reports)
        var reportsDecoded0:[CodeBuildClientTypes.Report]? = nil
        if let reportsContainer = reportsContainer {
            reportsDecoded0 = [CodeBuildClientTypes.Report]()
            for structure0 in reportsContainer {
                if let structure0 = structure0 {
                    reportsDecoded0?.append(structure0)
                }
            }
        }
        reports = reportsDecoded0
        let reportsNotFoundContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .reportsNotFound)
        var reportsNotFoundDecoded0:[Swift.String]? = nil
        if let reportsNotFoundContainer = reportsNotFoundContainer {
            reportsNotFoundDecoded0 = [Swift.String]()
            for string0 in reportsNotFoundContainer {
                if let string0 = string0 {
                    reportsNotFoundDecoded0?.append(string0)
                }
            }
        }
        reportsNotFound = reportsNotFoundDecoded0
    }
}
