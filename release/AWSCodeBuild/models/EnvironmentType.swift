// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodeBuildClientTypes {
    public enum EnvironmentType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case armContainer
        case linuxContainer
        case linuxGpuContainer
        case windowsContainer
        case windowsServer2019Container
        case sdkUnknown(Swift.String)

        public static var allCases: [EnvironmentType] {
            return [
                .armContainer,
                .linuxContainer,
                .linuxGpuContainer,
                .windowsContainer,
                .windowsServer2019Container,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .armContainer: return "ARM_CONTAINER"
            case .linuxContainer: return "LINUX_CONTAINER"
            case .linuxGpuContainer: return "LINUX_GPU_CONTAINER"
            case .windowsContainer: return "WINDOWS_CONTAINER"
            case .windowsServer2019Container: return "WINDOWS_SERVER_2019_CONTAINER"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = EnvironmentType(rawValue: rawValue) ?? EnvironmentType.sdkUnknown(rawValue)
        }
    }
}
