// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CodeBuildClientTypes {
    public enum LanguageType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case android
        case base
        case docker
        case dotnet
        case golang
        case java
        case nodeJs
        case php
        case python
        case ruby
        case sdkUnknown(Swift.String)

        public static var allCases: [LanguageType] {
            return [
                .android,
                .base,
                .docker,
                .dotnet,
                .golang,
                .java,
                .nodeJs,
                .php,
                .python,
                .ruby,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .android: return "ANDROID"
            case .base: return "BASE"
            case .docker: return "DOCKER"
            case .dotnet: return "DOTNET"
            case .golang: return "GOLANG"
            case .java: return "JAVA"
            case .nodeJs: return "NODE_JS"
            case .php: return "PHP"
            case .python: return "PYTHON"
            case .ruby: return "RUBY"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = LanguageType(rawValue: rawValue) ?? LanguageType.sdkUnknown(rawValue)
        }
    }
}
