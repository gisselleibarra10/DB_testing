// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeBuildClientTypes.EnvironmentLanguage: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case images
        case language
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let images = images {
            var imagesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .images)
            for environmentimages0 in images {
                try imagesContainer.encode(environmentimages0)
            }
        }
        if let language = self.language {
            try encodeContainer.encode(language.rawValue, forKey: .language)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let languageDecoded = try containerValues.decodeIfPresent(CodeBuildClientTypes.LanguageType.self, forKey: .language)
        language = languageDecoded
        let imagesContainer = try containerValues.decodeIfPresent([CodeBuildClientTypes.EnvironmentImage?].self, forKey: .images)
        var imagesDecoded0:[CodeBuildClientTypes.EnvironmentImage]? = nil
        if let imagesContainer = imagesContainer {
            imagesDecoded0 = [CodeBuildClientTypes.EnvironmentImage]()
            for structure0 in imagesContainer {
                if let structure0 = structure0 {
                    imagesDecoded0?.append(structure0)
                }
            }
        }
        images = imagesDecoded0
    }
}
