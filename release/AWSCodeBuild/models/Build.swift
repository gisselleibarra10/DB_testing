// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeBuildClientTypes {
    /// Information about a build.
    public struct Build: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the build.
        public var arn: Swift.String?
        /// Information about the output artifacts for the build.
        public var artifacts: CodeBuildClientTypes.BuildArtifacts?
        /// The ARN of the batch build that this build is a member of, if applicable.
        public var buildBatchArn: Swift.String?
        /// Whether the build is complete. True if complete; otherwise, false.
        public var buildComplete: Swift.Bool
        /// The number of the build. For each project, the buildNumber of its first build is 1. The buildNumber of each subsequent build is incremented by 1. If a build is deleted, the buildNumber of other builds does not change.
        public var buildNumber: Swift.Int?
        /// The current status of the build. Valid values include:
        ///
        /// * FAILED: The build failed.
        ///
        /// * FAULT: The build faulted.
        ///
        /// * IN_PROGRESS: The build is still in progress.
        ///
        /// * STOPPED: The build stopped.
        ///
        /// * SUCCEEDED: The build succeeded.
        ///
        /// * TIMED_OUT: The build timed out.
        public var buildStatus: CodeBuildClientTypes.StatusType?
        /// Information about the cache for the build.
        public var cache: CodeBuildClientTypes.ProjectCache?
        /// The current build phase.
        public var currentPhase: Swift.String?
        /// Contains information about the debug session for this build.
        public var debugSession: CodeBuildClientTypes.DebugSession?
        /// The Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts. You can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key. You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias (using the format alias/).
        public var encryptionKey: Swift.String?
        /// When the build process ended, expressed in Unix time format.
        public var endTime: ClientRuntime.Date?
        /// Information about the build environment for this build.
        public var environment: CodeBuildClientTypes.ProjectEnvironment?
        /// A list of exported environment variables for this build. Exported environment variables are used in conjunction with CodePipeline to export environment variables from the current build stage to subsequent stages in the pipeline. For more information, see [Working with variables](https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-variables.html) in the CodePipeline User Guide.
        public var exportedEnvironmentVariables: [CodeBuildClientTypes.ExportedEnvironmentVariable]?
        /// An array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier, location, mountOptions, mountPoint, and type of a file system created using Amazon Elastic File System.
        public var fileSystemLocations: [CodeBuildClientTypes.ProjectFileSystemLocation]?
        /// The unique ID for the build.
        public var id: Swift.String?
        /// The entity that started the build. Valid values include:
        ///
        /// * If CodePipeline started the build, the pipeline's name (for example, codepipeline/my-demo-pipeline).
        ///
        /// * If an IAM user started the build, the user's name (for example, MyUserName).
        ///
        /// * If the Jenkins plugin for CodeBuild started the build, the string CodeBuild-Jenkins-Plugin.
        public var initiator: Swift.String?
        /// Information about the build's logs in CloudWatch Logs.
        public var logs: CodeBuildClientTypes.LogsLocation?
        /// Describes a network interface.
        public var networkInterface: CodeBuildClientTypes.NetworkInterface?
        /// Information about all previous build phases that are complete and information about any current build phase that is not yet complete.
        public var phases: [CodeBuildClientTypes.BuildPhase]?
        /// The name of the CodeBuild project.
        public var projectName: Swift.String?
        /// The number of minutes a build is allowed to be queued before it times out.
        public var queuedTimeoutInMinutes: Swift.Int?
        /// An array of the ARNs associated with this build's reports.
        public var reportArns: [Swift.String]?
        /// An identifier for the version of this build's source code.
        ///
        /// * For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID.
        ///
        /// * For CodePipeline, the source revision provided by CodePipeline.
        ///
        /// * For Amazon S3, this does not apply.
        public var resolvedSourceVersion: Swift.String?
        /// An array of ProjectArtifacts objects.
        public var secondaryArtifacts: [CodeBuildClientTypes.BuildArtifacts]?
        /// An array of ProjectSourceVersion objects. Each ProjectSourceVersion must be one of:
        ///
        /// * For CodeCommit: the commit ID, branch, or Git tag to use.
        ///
        /// * For GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.
        ///
        /// * For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.
        ///
        /// * For Amazon S3: the version ID of the object that represents the build input ZIP file to use.
        public var secondarySourceVersions: [CodeBuildClientTypes.ProjectSourceVersion]?
        /// An array of ProjectSource objects.
        public var secondarySources: [CodeBuildClientTypes.ProjectSource]?
        /// The name of a service role used for this build.
        public var serviceRole: Swift.String?
        /// Information about the source code to be built.
        public var source: CodeBuildClientTypes.ProjectSource?
        /// Any version identifier for the version of the source code to be built. If sourceVersion is specified at the project level, then this sourceVersion (at the build level) takes precedence. For more information, see [Source Version Sample with CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html) in the CodeBuild User Guide.
        public var sourceVersion: Swift.String?
        /// When the build process started, expressed in Unix time format.
        public var startTime: ClientRuntime.Date?
        /// How long, in minutes, for CodeBuild to wait before timing out this build if it does not get marked as completed.
        public var timeoutInMinutes: Swift.Int?
        /// If your CodeBuild project accesses resources in an Amazon VPC, you provide this parameter that identifies the VPC ID and the list of security group IDs and subnet IDs. The security groups and subnets must belong to the same VPC. You must provide at least one security group and one subnet ID.
        public var vpcConfig: CodeBuildClientTypes.VpcConfig?

        public init (
            arn: Swift.String? = nil,
            artifacts: CodeBuildClientTypes.BuildArtifacts? = nil,
            buildBatchArn: Swift.String? = nil,
            buildComplete: Swift.Bool = false,
            buildNumber: Swift.Int? = nil,
            buildStatus: CodeBuildClientTypes.StatusType? = nil,
            cache: CodeBuildClientTypes.ProjectCache? = nil,
            currentPhase: Swift.String? = nil,
            debugSession: CodeBuildClientTypes.DebugSession? = nil,
            encryptionKey: Swift.String? = nil,
            endTime: ClientRuntime.Date? = nil,
            environment: CodeBuildClientTypes.ProjectEnvironment? = nil,
            exportedEnvironmentVariables: [CodeBuildClientTypes.ExportedEnvironmentVariable]? = nil,
            fileSystemLocations: [CodeBuildClientTypes.ProjectFileSystemLocation]? = nil,
            id: Swift.String? = nil,
            initiator: Swift.String? = nil,
            logs: CodeBuildClientTypes.LogsLocation? = nil,
            networkInterface: CodeBuildClientTypes.NetworkInterface? = nil,
            phases: [CodeBuildClientTypes.BuildPhase]? = nil,
            projectName: Swift.String? = nil,
            queuedTimeoutInMinutes: Swift.Int? = nil,
            reportArns: [Swift.String]? = nil,
            resolvedSourceVersion: Swift.String? = nil,
            secondaryArtifacts: [CodeBuildClientTypes.BuildArtifacts]? = nil,
            secondarySourceVersions: [CodeBuildClientTypes.ProjectSourceVersion]? = nil,
            secondarySources: [CodeBuildClientTypes.ProjectSource]? = nil,
            serviceRole: Swift.String? = nil,
            source: CodeBuildClientTypes.ProjectSource? = nil,
            sourceVersion: Swift.String? = nil,
            startTime: ClientRuntime.Date? = nil,
            timeoutInMinutes: Swift.Int? = nil,
            vpcConfig: CodeBuildClientTypes.VpcConfig? = nil
        )
        {
            self.arn = arn
            self.artifacts = artifacts
            self.buildBatchArn = buildBatchArn
            self.buildComplete = buildComplete
            self.buildNumber = buildNumber
            self.buildStatus = buildStatus
            self.cache = cache
            self.currentPhase = currentPhase
            self.debugSession = debugSession
            self.encryptionKey = encryptionKey
            self.endTime = endTime
            self.environment = environment
            self.exportedEnvironmentVariables = exportedEnvironmentVariables
            self.fileSystemLocations = fileSystemLocations
            self.id = id
            self.initiator = initiator
            self.logs = logs
            self.networkInterface = networkInterface
            self.phases = phases
            self.projectName = projectName
            self.queuedTimeoutInMinutes = queuedTimeoutInMinutes
            self.reportArns = reportArns
            self.resolvedSourceVersion = resolvedSourceVersion
            self.secondaryArtifacts = secondaryArtifacts
            self.secondarySourceVersions = secondarySourceVersions
            self.secondarySources = secondarySources
            self.serviceRole = serviceRole
            self.source = source
            self.sourceVersion = sourceVersion
            self.startTime = startTime
            self.timeoutInMinutes = timeoutInMinutes
            self.vpcConfig = vpcConfig
        }
    }

}
