// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMilestonesOutputResponseBody: Swift.Equatable {
    let workloadId: Swift.String?
    let milestoneSummaries: [WellArchitectedClientTypes.MilestoneSummary]?
    let nextToken: Swift.String?
}

extension ListMilestonesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case milestoneSummaries = "MilestoneSummaries"
        case nextToken = "NextToken"
        case workloadId = "WorkloadId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workloadIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .workloadId)
        workloadId = workloadIdDecoded
        let milestoneSummariesContainer = try containerValues.decodeIfPresent([WellArchitectedClientTypes.MilestoneSummary?].self, forKey: .milestoneSummaries)
        var milestoneSummariesDecoded0:[WellArchitectedClientTypes.MilestoneSummary]? = nil
        if let milestoneSummariesContainer = milestoneSummariesContainer {
            milestoneSummariesDecoded0 = [WellArchitectedClientTypes.MilestoneSummary]()
            for structure0 in milestoneSummariesContainer {
                if let structure0 = structure0 {
                    milestoneSummariesDecoded0?.append(structure0)
                }
            }
        }
        milestoneSummaries = milestoneSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
