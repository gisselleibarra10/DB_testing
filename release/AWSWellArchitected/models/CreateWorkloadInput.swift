// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Input for workload creation.
public struct CreateWorkloadInput: Swift.Equatable {
    /// The list of Amazon Web Services account IDs associated with the workload.
    public var accountIds: [Swift.String]?
    /// The URL of the architectural design for the workload.
    public var architecturalDesign: Swift.String?
    /// The list of Amazon Web Services Regions associated with the workload, for example, us-east-2, or ca-central-1.
    public var awsRegions: [Swift.String]?
    /// A unique case-sensitive string used to ensure that this request is idempotent (executes only once). You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after it has completed successfully, the result of the original request is returned. This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.
    /// This member is required.
    public var clientRequestToken: Swift.String?
    /// The description for the workload.
    /// This member is required.
    public var description: Swift.String?
    /// The environment for the workload.
    /// This member is required.
    public var environment: WellArchitectedClientTypes.WorkloadEnvironment?
    /// The industry for the workload.
    public var industry: Swift.String?
    /// The industry type for the workload. If specified, must be one of the following:
    ///
    /// * Agriculture
    ///
    /// * Automobile
    ///
    /// * Defense
    ///
    /// * Design and Engineering
    ///
    /// * Digital Advertising
    ///
    /// * Education
    ///
    /// * Environmental Protection
    ///
    /// * Financial Services
    ///
    /// * Gaming
    ///
    /// * General Public Services
    ///
    /// * Healthcare
    ///
    /// * Hospitality
    ///
    /// * InfoTech
    ///
    /// * Justice and Public Safety
    ///
    /// * Life Sciences
    ///
    /// * Manufacturing
    ///
    /// * Media & Entertainment
    ///
    /// * Mining & Resources
    ///
    /// * Oil & Gas
    ///
    /// * Power & Utilities
    ///
    /// * Professional Services
    ///
    /// * Real Estate & Construction
    ///
    /// * Retail & Wholesale
    ///
    /// * Social Protection
    ///
    /// * Telecommunications
    ///
    /// * Travel, Transportation & Logistics
    ///
    /// * Other
    public var industryType: Swift.String?
    /// The list of lenses associated with the workload. Each lens is identified by its [LensSummary$LensAlias].
    /// This member is required.
    public var lenses: [Swift.String]?
    /// The list of non-Amazon Web Services Regions associated with the workload.
    public var nonAwsRegions: [Swift.String]?
    /// The notes associated with the workload.
    public var notes: Swift.String?
    /// The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its [PillarReviewSummary$PillarId].
    public var pillarPriorities: [Swift.String]?
    /// The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.
    public var reviewOwner: Swift.String?
    /// The tags to be associated with the workload.
    public var tags: [Swift.String:Swift.String]?
    /// The name of the workload. The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.
    /// This member is required.
    public var workloadName: Swift.String?

    public init (
        accountIds: [Swift.String]? = nil,
        architecturalDesign: Swift.String? = nil,
        awsRegions: [Swift.String]? = nil,
        clientRequestToken: Swift.String? = nil,
        description: Swift.String? = nil,
        environment: WellArchitectedClientTypes.WorkloadEnvironment? = nil,
        industry: Swift.String? = nil,
        industryType: Swift.String? = nil,
        lenses: [Swift.String]? = nil,
        nonAwsRegions: [Swift.String]? = nil,
        notes: Swift.String? = nil,
        pillarPriorities: [Swift.String]? = nil,
        reviewOwner: Swift.String? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        workloadName: Swift.String? = nil
    )
    {
        self.accountIds = accountIds
        self.architecturalDesign = architecturalDesign
        self.awsRegions = awsRegions
        self.clientRequestToken = clientRequestToken
        self.description = description
        self.environment = environment
        self.industry = industry
        self.industryType = industryType
        self.lenses = lenses
        self.nonAwsRegions = nonAwsRegions
        self.notes = notes
        self.pillarPriorities = pillarPriorities
        self.reviewOwner = reviewOwner
        self.tags = tags
        self.workloadName = workloadName
    }
}
