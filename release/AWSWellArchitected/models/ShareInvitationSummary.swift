// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension WellArchitectedClientTypes {
    /// A share invitation summary return object.
    public struct ShareInvitationSummary: Swift.Equatable {
        /// The ARN for the lens.
        public var lensArn: Swift.String?
        /// The full name of the lens.
        public var lensName: Swift.String?
        /// Permission granted on a workload share.
        public var permissionType: WellArchitectedClientTypes.PermissionType?
        /// The ID assigned to the share invitation.
        public var shareInvitationId: Swift.String?
        /// The resource type of the share invitation.
        public var shareResourceType: WellArchitectedClientTypes.ShareResourceType?
        /// An Amazon Web Services account ID.
        public var sharedBy: Swift.String?
        /// The Amazon Web Services account ID or IAM role with which the workload is shared.
        public var sharedWith: Swift.String?
        /// The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        public var workloadId: Swift.String?
        /// The name of the workload. The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.
        public var workloadName: Swift.String?

        public init (
            lensArn: Swift.String? = nil,
            lensName: Swift.String? = nil,
            permissionType: WellArchitectedClientTypes.PermissionType? = nil,
            shareInvitationId: Swift.String? = nil,
            shareResourceType: WellArchitectedClientTypes.ShareResourceType? = nil,
            sharedBy: Swift.String? = nil,
            sharedWith: Swift.String? = nil,
            workloadId: Swift.String? = nil,
            workloadName: Swift.String? = nil
        )
        {
            self.lensArn = lensArn
            self.lensName = lensName
            self.permissionType = permissionType
            self.shareInvitationId = shareInvitationId
            self.shareResourceType = shareResourceType
            self.sharedBy = sharedBy
            self.sharedWith = sharedWith
            self.workloadId = workloadId
            self.workloadName = workloadName
        }
    }

}
