// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WellArchitectedClientTypes.Choice: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case additionalResources = "AdditionalResources"
        case choiceId = "ChoiceId"
        case description = "Description"
        case helpfulResource = "HelpfulResource"
        case improvementPlan = "ImprovementPlan"
        case title = "Title"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let additionalResources = additionalResources {
            var additionalResourcesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .additionalResources)
            for additionalresourceslist0 in additionalResources {
                try additionalResourcesContainer.encode(additionalresourceslist0)
            }
        }
        if let choiceId = self.choiceId {
            try encodeContainer.encode(choiceId, forKey: .choiceId)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let helpfulResource = self.helpfulResource {
            try encodeContainer.encode(helpfulResource, forKey: .helpfulResource)
        }
        if let improvementPlan = self.improvementPlan {
            try encodeContainer.encode(improvementPlan, forKey: .improvementPlan)
        }
        if let title = self.title {
            try encodeContainer.encode(title, forKey: .title)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let choiceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .choiceId)
        choiceId = choiceIdDecoded
        let titleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .title)
        title = titleDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let helpfulResourceDecoded = try containerValues.decodeIfPresent(WellArchitectedClientTypes.ChoiceContent.self, forKey: .helpfulResource)
        helpfulResource = helpfulResourceDecoded
        let improvementPlanDecoded = try containerValues.decodeIfPresent(WellArchitectedClientTypes.ChoiceContent.self, forKey: .improvementPlan)
        improvementPlan = improvementPlanDecoded
        let additionalResourcesContainer = try containerValues.decodeIfPresent([WellArchitectedClientTypes.AdditionalResources?].self, forKey: .additionalResources)
        var additionalResourcesDecoded0:[WellArchitectedClientTypes.AdditionalResources]? = nil
        if let additionalResourcesContainer = additionalResourcesContainer {
            additionalResourcesDecoded0 = [WellArchitectedClientTypes.AdditionalResources]()
            for structure0 in additionalResourcesContainer {
                if let structure0 = structure0 {
                    additionalResourcesDecoded0?.append(structure0)
                }
            }
        }
        additionalResources = additionalResourcesDecoded0
    }
}
