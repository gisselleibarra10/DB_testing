// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListShareInvitationsOutputResponseBody: Swift.Equatable {
    let shareInvitationSummaries: [WellArchitectedClientTypes.ShareInvitationSummary]?
    let nextToken: Swift.String?
}

extension ListShareInvitationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case shareInvitationSummaries = "ShareInvitationSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let shareInvitationSummariesContainer = try containerValues.decodeIfPresent([WellArchitectedClientTypes.ShareInvitationSummary?].self, forKey: .shareInvitationSummaries)
        var shareInvitationSummariesDecoded0:[WellArchitectedClientTypes.ShareInvitationSummary]? = nil
        if let shareInvitationSummariesContainer = shareInvitationSummariesContainer {
            shareInvitationSummariesDecoded0 = [WellArchitectedClientTypes.ShareInvitationSummary]()
            for structure0 in shareInvitationSummariesContainer {
                if let structure0 = structure0 {
                    shareInvitationSummariesDecoded0?.append(structure0)
                }
            }
        }
        shareInvitationSummaries = shareInvitationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
