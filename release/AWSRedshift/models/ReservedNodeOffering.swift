// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RedshiftClientTypes {
    /// Describes a reserved node offering.
    public struct ReservedNodeOffering: Swift.Equatable {
        /// The currency code for the compute nodes offering.
        public var currencyCode: Swift.String?
        /// The duration, in seconds, for which the offering will reserve the node.
        public var duration: Swift.Int
        /// The upfront fixed charge you will pay to purchase the specific reserved node offering.
        public var fixedPrice: Swift.Double
        /// The node type offered by the reserved node offering.
        public var nodeType: Swift.String?
        /// The anticipated utilization of the reserved node, as defined in the reserved node offering.
        public var offeringType: Swift.String?
        /// The charge to your account regardless of whether you are creating any clusters using the node offering. Recurring charges are only in effect for heavy-utilization reserved nodes.
        public var recurringCharges: [RedshiftClientTypes.RecurringCharge]?
        /// The offering identifier.
        public var reservedNodeOfferingId: Swift.String?
        ///
        public var reservedNodeOfferingType: RedshiftClientTypes.ReservedNodeOfferingType?
        /// The rate you are charged for each hour the cluster that is using the offering is running.
        public var usagePrice: Swift.Double

        public init (
            currencyCode: Swift.String? = nil,
            duration: Swift.Int = 0,
            fixedPrice: Swift.Double = 0.0,
            nodeType: Swift.String? = nil,
            offeringType: Swift.String? = nil,
            recurringCharges: [RedshiftClientTypes.RecurringCharge]? = nil,
            reservedNodeOfferingId: Swift.String? = nil,
            reservedNodeOfferingType: RedshiftClientTypes.ReservedNodeOfferingType? = nil,
            usagePrice: Swift.Double = 0.0
        )
        {
            self.currencyCode = currencyCode
            self.duration = duration
            self.fixedPrice = fixedPrice
            self.nodeType = nodeType
            self.offeringType = offeringType
            self.recurringCharges = recurringCharges
            self.reservedNodeOfferingId = reservedNodeOfferingId
            self.reservedNodeOfferingType = reservedNodeOfferingType
            self.usagePrice = usagePrice
        }
    }

}
