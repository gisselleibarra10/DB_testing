// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDeleteClusterSnapshotsInputBody: Swift.Equatable {
    let identifiers: [RedshiftClientTypes.DeleteClusterSnapshotMessage]?
}

extension BatchDeleteClusterSnapshotsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identifiers = "Identifiers"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.identifiers) {
            struct KeyVal0{struct DeleteClusterSnapshotMessage{}}
            let identifiersWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.DeleteClusterSnapshotMessage>.CodingKeys.self, forKey: .identifiers)
            if let identifiersWrappedContainer = identifiersWrappedContainer {
                let identifiersContainer = try identifiersWrappedContainer.decodeIfPresent([RedshiftClientTypes.DeleteClusterSnapshotMessage].self, forKey: .member)
                var identifiersBuffer:[RedshiftClientTypes.DeleteClusterSnapshotMessage]? = nil
                if let identifiersContainer = identifiersContainer {
                    identifiersBuffer = [RedshiftClientTypes.DeleteClusterSnapshotMessage]()
                    for structureContainer0 in identifiersContainer {
                        identifiersBuffer?.append(structureContainer0)
                    }
                }
                identifiers = identifiersBuffer
            } else {
                identifiers = []
            }
        } else {
            identifiers = nil
        }
    }
}
