// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftClientTypes {
    /// Describes a reserved node. You can call the [DescribeReservedNodeOfferings] API to obtain the available reserved node offerings.
    public struct ReservedNode: Swift.Equatable {
        /// The currency code for the reserved cluster.
        public var currencyCode: Swift.String?
        /// The duration of the node reservation in seconds.
        public var duration: Swift.Int
        /// The fixed cost Amazon Redshift charges you for this reserved node.
        public var fixedPrice: Swift.Double
        /// The number of reserved compute nodes.
        public var nodeCount: Swift.Int
        /// The node type of the reserved node.
        public var nodeType: Swift.String?
        /// The anticipated utilization of the reserved node, as defined in the reserved node offering.
        public var offeringType: Swift.String?
        /// The recurring charges for the reserved node.
        public var recurringCharges: [RedshiftClientTypes.RecurringCharge]?
        /// The unique identifier for the reservation.
        public var reservedNodeId: Swift.String?
        /// The identifier for the reserved node offering.
        public var reservedNodeOfferingId: Swift.String?
        ///
        public var reservedNodeOfferingType: RedshiftClientTypes.ReservedNodeOfferingType?
        /// The time the reservation started. You purchase a reserved node offering for a duration. This is the start time of that duration.
        public var startTime: ClientRuntime.Date?
        /// The state of the reserved compute node. Possible Values:
        ///
        /// * pending-payment-This reserved node has recently been purchased, and the sale has been approved, but payment has not yet been confirmed.
        ///
        /// * active-This reserved node is owned by the caller and is available for use.
        ///
        /// * payment-failed-Payment failed for the purchase attempt.
        ///
        /// * retired-The reserved node is no longer available.
        ///
        /// * exchanging-The owner is exchanging the reserved node for another reserved node.
        public var state: Swift.String?
        /// The hourly rate Amazon Redshift charges you for this reserved node.
        public var usagePrice: Swift.Double

        public init (
            currencyCode: Swift.String? = nil,
            duration: Swift.Int = 0,
            fixedPrice: Swift.Double = 0.0,
            nodeCount: Swift.Int = 0,
            nodeType: Swift.String? = nil,
            offeringType: Swift.String? = nil,
            recurringCharges: [RedshiftClientTypes.RecurringCharge]? = nil,
            reservedNodeId: Swift.String? = nil,
            reservedNodeOfferingId: Swift.String? = nil,
            reservedNodeOfferingType: RedshiftClientTypes.ReservedNodeOfferingType? = nil,
            startTime: ClientRuntime.Date? = nil,
            state: Swift.String? = nil,
            usagePrice: Swift.Double = 0.0
        )
        {
            self.currencyCode = currencyCode
            self.duration = duration
            self.fixedPrice = fixedPrice
            self.nodeCount = nodeCount
            self.nodeType = nodeType
            self.offeringType = offeringType
            self.recurringCharges = recurringCharges
            self.reservedNodeId = reservedNodeId
            self.reservedNodeOfferingId = reservedNodeOfferingId
            self.reservedNodeOfferingType = reservedNodeOfferingType
            self.startTime = startTime
            self.state = state
            self.usagePrice = usagePrice
        }
    }

}
