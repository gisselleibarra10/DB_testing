// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftClientTypes.ClusterNode: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nodeRole = "NodeRole"
        case privateIPAddress = "PrivateIPAddress"
        case publicIPAddress = "PublicIPAddress"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let nodeRole = nodeRole {
            try container.encode(nodeRole, forKey: ClientRuntime.Key("NodeRole"))
        }
        if let privateIPAddress = privateIPAddress {
            try container.encode(privateIPAddress, forKey: ClientRuntime.Key("PrivateIPAddress"))
        }
        if let publicIPAddress = publicIPAddress {
            try container.encode(publicIPAddress, forKey: ClientRuntime.Key("PublicIPAddress"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nodeRoleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nodeRole)
        nodeRole = nodeRoleDecoded
        let privateIPAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .privateIPAddress)
        privateIPAddress = privateIPAddressDecoded
        let publicIPAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publicIPAddress)
        publicIPAddress = publicIPAddressDecoded
    }
}
