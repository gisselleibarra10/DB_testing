// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeScheduledActionsOutputResponseBody: Swift.Equatable {
    let marker: Swift.String?
    let scheduledActions: [RedshiftClientTypes.ScheduledAction]?
}

extension DescribeScheduledActionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case scheduledActions = "ScheduledActions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DescribeScheduledActionsResult"))
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        if containerValues.contains(.scheduledActions) {
            struct KeyVal0{struct ScheduledAction{}}
            let scheduledActionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.ScheduledAction>.CodingKeys.self, forKey: .scheduledActions)
            if let scheduledActionsWrappedContainer = scheduledActionsWrappedContainer {
                let scheduledActionsContainer = try scheduledActionsWrappedContainer.decodeIfPresent([RedshiftClientTypes.ScheduledAction].self, forKey: .member)
                var scheduledActionsBuffer:[RedshiftClientTypes.ScheduledAction]? = nil
                if let scheduledActionsContainer = scheduledActionsContainer {
                    scheduledActionsBuffer = [RedshiftClientTypes.ScheduledAction]()
                    for structureContainer0 in scheduledActionsContainer {
                        scheduledActionsBuffer?.append(structureContainer0)
                    }
                }
                scheduledActions = scheduledActionsBuffer
            } else {
                scheduledActions = []
            }
        } else {
            scheduledActions = nil
        }
    }
}
