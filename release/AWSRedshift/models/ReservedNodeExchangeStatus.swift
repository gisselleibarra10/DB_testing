// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftClientTypes {
    /// Reserved-node status details, such as the source reserved-node identifier, the target reserved-node identifier, the node type, the node count, and other details.
    public struct ReservedNodeExchangeStatus: Swift.Equatable {
        /// A date and time that indicate when the reserved-node exchange was requested.
        public var requestTime: ClientRuntime.Date?
        /// The identifier of the reserved-node exchange request.
        public var reservedNodeExchangeRequestId: Swift.String?
        /// The source reserved-node count in the cluster.
        public var sourceReservedNodeCount: Swift.Int
        /// The identifier of the source reserved node.
        public var sourceReservedNodeId: Swift.String?
        /// The source reserved-node type, for example ds2.xlarge.
        public var sourceReservedNodeType: Swift.String?
        /// The status of the reserved-node exchange request. Statuses include in-progress and requested.
        public var status: RedshiftClientTypes.ReservedNodeExchangeStatusType?
        /// The count of target reserved nodes in the cluster.
        public var targetReservedNodeCount: Swift.Int
        /// The identifier of the target reserved node offering.
        public var targetReservedNodeOfferingId: Swift.String?
        /// The node type of the target reserved node, for example ra3.4xlarge.
        public var targetReservedNodeType: Swift.String?

        public init (
            requestTime: ClientRuntime.Date? = nil,
            reservedNodeExchangeRequestId: Swift.String? = nil,
            sourceReservedNodeCount: Swift.Int = 0,
            sourceReservedNodeId: Swift.String? = nil,
            sourceReservedNodeType: Swift.String? = nil,
            status: RedshiftClientTypes.ReservedNodeExchangeStatusType? = nil,
            targetReservedNodeCount: Swift.Int = 0,
            targetReservedNodeOfferingId: Swift.String? = nil,
            targetReservedNodeType: Swift.String? = nil
        )
        {
            self.requestTime = requestTime
            self.reservedNodeExchangeRequestId = reservedNodeExchangeRequestId
            self.sourceReservedNodeCount = sourceReservedNodeCount
            self.sourceReservedNodeId = sourceReservedNodeId
            self.sourceReservedNodeType = sourceReservedNodeType
            self.status = status
            self.targetReservedNodeCount = targetReservedNodeCount
            self.targetReservedNodeOfferingId = targetReservedNodeOfferingId
            self.targetReservedNodeType = targetReservedNodeType
        }
    }

}
