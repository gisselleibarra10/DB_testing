// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DisassociateDataShareConsumerInputBody: Swift.Equatable {
    let dataShareArn: Swift.String?
    let disassociateEntireAccount: Swift.Bool?
    let consumerArn: Swift.String?
    let consumerRegion: Swift.String?
}

extension DisassociateDataShareConsumerInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case consumerArn = "ConsumerArn"
        case consumerRegion = "ConsumerRegion"
        case dataShareArn = "DataShareArn"
        case disassociateEntireAccount = "DisassociateEntireAccount"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataShareArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataShareArn)
        dataShareArn = dataShareArnDecoded
        let disassociateEntireAccountDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .disassociateEntireAccount)
        disassociateEntireAccount = disassociateEntireAccountDecoded
        let consumerArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .consumerArn)
        consumerArn = consumerArnDecoded
        let consumerRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .consumerRegion)
        consumerRegion = consumerRegionDecoded
    }
}
