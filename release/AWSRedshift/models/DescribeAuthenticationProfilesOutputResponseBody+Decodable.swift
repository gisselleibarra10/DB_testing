// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAuthenticationProfilesOutputResponseBody: Swift.Equatable {
    let authenticationProfiles: [RedshiftClientTypes.AuthenticationProfile]?
}

extension DescribeAuthenticationProfilesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authenticationProfiles = "AuthenticationProfiles"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DescribeAuthenticationProfilesResult"))
        if containerValues.contains(.authenticationProfiles) {
            struct KeyVal0{struct member{}}
            let authenticationProfilesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .authenticationProfiles)
            if let authenticationProfilesWrappedContainer = authenticationProfilesWrappedContainer {
                let authenticationProfilesContainer = try authenticationProfilesWrappedContainer.decodeIfPresent([RedshiftClientTypes.AuthenticationProfile].self, forKey: .member)
                var authenticationProfilesBuffer:[RedshiftClientTypes.AuthenticationProfile]? = nil
                if let authenticationProfilesContainer = authenticationProfilesContainer {
                    authenticationProfilesBuffer = [RedshiftClientTypes.AuthenticationProfile]()
                    for structureContainer0 in authenticationProfilesContainer {
                        authenticationProfilesBuffer?.append(structureContainer0)
                    }
                }
                authenticationProfiles = authenticationProfilesBuffer
            } else {
                authenticationProfiles = []
            }
        } else {
            authenticationProfiles = nil
        }
    }
}
