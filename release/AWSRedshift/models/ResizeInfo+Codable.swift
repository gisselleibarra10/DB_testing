// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftClientTypes.ResizeInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowCancelResize = "AllowCancelResize"
        case resizeType = "ResizeType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if allowCancelResize != false {
            try container.encode(allowCancelResize, forKey: ClientRuntime.Key("AllowCancelResize"))
        }
        if let resizeType = resizeType {
            try container.encode(resizeType, forKey: ClientRuntime.Key("ResizeType"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resizeTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resizeType)
        resizeType = resizeTypeDecoded
        let allowCancelResizeDecoded = try containerValues.decode(Swift.Bool.self, forKey: .allowCancelResize)
        allowCancelResize = allowCancelResizeDecoded
    }
}
