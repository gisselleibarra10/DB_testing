// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AcceptReservedNodeExchangeOutputResponseBody: Swift.Equatable {
    let exchangedReservedNode: RedshiftClientTypes.ReservedNode?
}

extension AcceptReservedNodeExchangeOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exchangedReservedNode = "ExchangedReservedNode"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("AcceptReservedNodeExchangeResult"))
        let exchangedReservedNodeDecoded = try containerValues.decodeIfPresent(RedshiftClientTypes.ReservedNode.self, forKey: .exchangedReservedNode)
        exchangedReservedNode = exchangedReservedNodeDecoded
    }
}
