// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftClientTypes.ScheduledActionType: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case pauseCluster = "PauseCluster"
        case resizeCluster = "ResizeCluster"
        case resumeCluster = "ResumeCluster"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let pauseCluster = pauseCluster {
            try container.encode(pauseCluster, forKey: ClientRuntime.Key("PauseCluster"))
        }
        if let resizeCluster = resizeCluster {
            try container.encode(resizeCluster, forKey: ClientRuntime.Key("ResizeCluster"))
        }
        if let resumeCluster = resumeCluster {
            try container.encode(resumeCluster, forKey: ClientRuntime.Key("ResumeCluster"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resizeClusterDecoded = try containerValues.decodeIfPresent(RedshiftClientTypes.ResizeClusterMessage.self, forKey: .resizeCluster)
        resizeCluster = resizeClusterDecoded
        let pauseClusterDecoded = try containerValues.decodeIfPresent(RedshiftClientTypes.PauseClusterMessage.self, forKey: .pauseCluster)
        pauseCluster = pauseClusterDecoded
        let resumeClusterDecoded = try containerValues.decodeIfPresent(RedshiftClientTypes.ResumeClusterMessage.self, forKey: .resumeCluster)
        resumeCluster = resumeClusterDecoded
    }
}
