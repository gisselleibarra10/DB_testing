// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftClientTypes.SnapshotSortingEntity: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attribute = "Attribute"
        case sortOrder = "SortOrder"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let attribute = attribute {
            try container.encode(attribute, forKey: ClientRuntime.Key("Attribute"))
        }
        if let sortOrder = sortOrder {
            try container.encode(sortOrder, forKey: ClientRuntime.Key("SortOrder"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributeDecoded = try containerValues.decodeIfPresent(RedshiftClientTypes.SnapshotAttributeToSortBy.self, forKey: .attribute)
        attribute = attributeDecoded
        let sortOrderDecoded = try containerValues.decodeIfPresent(RedshiftClientTypes.SortByOrder.self, forKey: .sortOrder)
        sortOrder = sortOrderDecoded
    }
}
