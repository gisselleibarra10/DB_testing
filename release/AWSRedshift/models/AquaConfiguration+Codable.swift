// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftClientTypes.AquaConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aquaConfigurationStatus = "AquaConfigurationStatus"
        case aquaStatus = "AquaStatus"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let aquaConfigurationStatus = aquaConfigurationStatus {
            try container.encode(aquaConfigurationStatus, forKey: ClientRuntime.Key("AquaConfigurationStatus"))
        }
        if let aquaStatus = aquaStatus {
            try container.encode(aquaStatus, forKey: ClientRuntime.Key("AquaStatus"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aquaStatusDecoded = try containerValues.decodeIfPresent(RedshiftClientTypes.AquaStatus.self, forKey: .aquaStatus)
        aquaStatus = aquaStatusDecoded
        let aquaConfigurationStatusDecoded = try containerValues.decodeIfPresent(RedshiftClientTypes.AquaConfigurationStatus.self, forKey: .aquaConfigurationStatus)
        aquaConfigurationStatus = aquaConfigurationStatusDecoded
    }
}
