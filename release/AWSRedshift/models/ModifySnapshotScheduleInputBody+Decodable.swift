// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifySnapshotScheduleInputBody: Swift.Equatable {
    let scheduleIdentifier: Swift.String?
    let scheduleDefinitions: [Swift.String]?
}

extension ModifySnapshotScheduleInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case scheduleDefinitions = "ScheduleDefinitions"
        case scheduleIdentifier = "ScheduleIdentifier"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scheduleIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .scheduleIdentifier)
        scheduleIdentifier = scheduleIdentifierDecoded
        if containerValues.contains(.scheduleDefinitions) {
            struct KeyVal0{struct ScheduleDefinition{}}
            let scheduleDefinitionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.ScheduleDefinition>.CodingKeys.self, forKey: .scheduleDefinitions)
            if let scheduleDefinitionsWrappedContainer = scheduleDefinitionsWrappedContainer {
                let scheduleDefinitionsContainer = try scheduleDefinitionsWrappedContainer.decodeIfPresent([Swift.String].self, forKey: .member)
                var scheduleDefinitionsBuffer:[Swift.String]? = nil
                if let scheduleDefinitionsContainer = scheduleDefinitionsContainer {
                    scheduleDefinitionsBuffer = [Swift.String]()
                    for stringContainer0 in scheduleDefinitionsContainer {
                        scheduleDefinitionsBuffer?.append(stringContainer0)
                    }
                }
                scheduleDefinitions = scheduleDefinitionsBuffer
            } else {
                scheduleDefinitions = []
            }
        } else {
            scheduleDefinitions = nil
        }
    }
}
