// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchModifyClusterSnapshotsInputBody: Swift.Equatable {
    let snapshotIdentifierList: [Swift.String]?
    let manualSnapshotRetentionPeriod: Swift.Int?
    let force: Swift.Bool
}

extension BatchModifyClusterSnapshotsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case force = "Force"
        case manualSnapshotRetentionPeriod = "ManualSnapshotRetentionPeriod"
        case snapshotIdentifierList = "SnapshotIdentifierList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.snapshotIdentifierList) {
            struct KeyVal0{struct String{}}
            let snapshotIdentifierListWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.String>.CodingKeys.self, forKey: .snapshotIdentifierList)
            if let snapshotIdentifierListWrappedContainer = snapshotIdentifierListWrappedContainer {
                let snapshotIdentifierListContainer = try snapshotIdentifierListWrappedContainer.decodeIfPresent([Swift.String].self, forKey: .member)
                var snapshotIdentifierListBuffer:[Swift.String]? = nil
                if let snapshotIdentifierListContainer = snapshotIdentifierListContainer {
                    snapshotIdentifierListBuffer = [Swift.String]()
                    for stringContainer0 in snapshotIdentifierListContainer {
                        snapshotIdentifierListBuffer?.append(stringContainer0)
                    }
                }
                snapshotIdentifierList = snapshotIdentifierListBuffer
            } else {
                snapshotIdentifierList = []
            }
        } else {
            snapshotIdentifierList = nil
        }
        let manualSnapshotRetentionPeriodDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .manualSnapshotRetentionPeriod)
        manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriodDecoded
        let forceDecoded = try containerValues.decode(Swift.Bool.self, forKey: .force)
        force = forceDecoded
    }
}
