// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReservedNodeExchangeStatusInputBody: Swift.Equatable {
    let reservedNodeId: Swift.String?
    let reservedNodeExchangeRequestId: Swift.String?
    let maxRecords: Swift.Int?
    let marker: Swift.String?
}

extension DescribeReservedNodeExchangeStatusInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case maxRecords = "MaxRecords"
        case reservedNodeExchangeRequestId = "ReservedNodeExchangeRequestId"
        case reservedNodeId = "ReservedNodeId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reservedNodeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reservedNodeId)
        reservedNodeId = reservedNodeIdDecoded
        let reservedNodeExchangeRequestIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reservedNodeExchangeRequestId)
        reservedNodeExchangeRequestId = reservedNodeExchangeRequestIdDecoded
        let maxRecordsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxRecords)
        maxRecords = maxRecordsDecoded
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
