// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResizeClusterInputBody: Swift.Equatable {
    let clusterIdentifier: Swift.String?
    let clusterType: Swift.String?
    let nodeType: Swift.String?
    let numberOfNodes: Swift.Int?
    let classic: Swift.Bool?
    let reservedNodeId: Swift.String?
    let targetReservedNodeOfferingId: Swift.String?
}

extension ResizeClusterInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case classic = "Classic"
        case clusterIdentifier = "ClusterIdentifier"
        case clusterType = "ClusterType"
        case nodeType = "NodeType"
        case numberOfNodes = "NumberOfNodes"
        case reservedNodeId = "ReservedNodeId"
        case targetReservedNodeOfferingId = "TargetReservedNodeOfferingId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterIdentifier)
        clusterIdentifier = clusterIdentifierDecoded
        let clusterTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterType)
        clusterType = clusterTypeDecoded
        let nodeTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nodeType)
        nodeType = nodeTypeDecoded
        let numberOfNodesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfNodes)
        numberOfNodes = numberOfNodesDecoded
        let classicDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .classic)
        classic = classicDecoded
        let reservedNodeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reservedNodeId)
        reservedNodeId = reservedNodeIdDecoded
        let targetReservedNodeOfferingIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetReservedNodeOfferingId)
        targetReservedNodeOfferingId = targetReservedNodeOfferingIdDecoded
    }
}
