// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EnableLoggingInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let bucketName = bucketName {
            try container.encode(bucketName, forKey: ClientRuntime.Key("BucketName"))
        }
        if let clusterIdentifier = clusterIdentifier {
            try container.encode(clusterIdentifier, forKey: ClientRuntime.Key("ClusterIdentifier"))
        }
        if let logDestinationType = logDestinationType {
            try container.encode(logDestinationType, forKey: ClientRuntime.Key("LogDestinationType"))
        }
        if let logExports = logExports {
            var logExportsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("LogExports"))
            for (index0, string0) in logExports.enumerated() {
                try logExportsContainer.encode(string0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let s3KeyPrefix = s3KeyPrefix {
            try container.encode(s3KeyPrefix, forKey: ClientRuntime.Key("S3KeyPrefix"))
        }
        try container.encode("EnableLogging", forKey:ClientRuntime.Key("Action"))
        try container.encode("2012-12-01", forKey:ClientRuntime.Key("Version"))
    }
}
