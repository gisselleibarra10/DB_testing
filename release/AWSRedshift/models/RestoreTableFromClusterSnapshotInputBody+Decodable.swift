// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RestoreTableFromClusterSnapshotInputBody: Swift.Equatable {
    let clusterIdentifier: Swift.String?
    let snapshotIdentifier: Swift.String?
    let sourceDatabaseName: Swift.String?
    let sourceSchemaName: Swift.String?
    let sourceTableName: Swift.String?
    let targetDatabaseName: Swift.String?
    let targetSchemaName: Swift.String?
    let newTableName: Swift.String?
    let enableCaseSensitiveIdentifier: Swift.Bool?
}

extension RestoreTableFromClusterSnapshotInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusterIdentifier = "ClusterIdentifier"
        case enableCaseSensitiveIdentifier = "EnableCaseSensitiveIdentifier"
        case newTableName = "NewTableName"
        case snapshotIdentifier = "SnapshotIdentifier"
        case sourceDatabaseName = "SourceDatabaseName"
        case sourceSchemaName = "SourceSchemaName"
        case sourceTableName = "SourceTableName"
        case targetDatabaseName = "TargetDatabaseName"
        case targetSchemaName = "TargetSchemaName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterIdentifier)
        clusterIdentifier = clusterIdentifierDecoded
        let snapshotIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snapshotIdentifier)
        snapshotIdentifier = snapshotIdentifierDecoded
        let sourceDatabaseNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceDatabaseName)
        sourceDatabaseName = sourceDatabaseNameDecoded
        let sourceSchemaNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceSchemaName)
        sourceSchemaName = sourceSchemaNameDecoded
        let sourceTableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceTableName)
        sourceTableName = sourceTableNameDecoded
        let targetDatabaseNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetDatabaseName)
        targetDatabaseName = targetDatabaseNameDecoded
        let targetSchemaNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetSchemaName)
        targetSchemaName = targetSchemaNameDecoded
        let newTableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .newTableName)
        newTableName = newTableNameDecoded
        let enableCaseSensitiveIdentifierDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableCaseSensitiveIdentifier)
        enableCaseSensitiveIdentifier = enableCaseSensitiveIdentifierDecoded
    }
}
