// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AcceptReservedNodeExchangeInputBody: Swift.Equatable {
    let reservedNodeId: Swift.String?
    let targetReservedNodeOfferingId: Swift.String?
}

extension AcceptReservedNodeExchangeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case reservedNodeId = "ReservedNodeId"
        case targetReservedNodeOfferingId = "TargetReservedNodeOfferingId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reservedNodeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reservedNodeId)
        reservedNodeId = reservedNodeIdDecoded
        let targetReservedNodeOfferingIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetReservedNodeOfferingId)
        targetReservedNodeOfferingId = targetReservedNodeOfferingIdDecoded
    }
}
