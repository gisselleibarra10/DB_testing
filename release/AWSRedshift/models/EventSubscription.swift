// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftClientTypes {
    /// Describes event subscriptions.
    public struct EventSubscription: Swift.Equatable {
        /// The name of the Amazon Redshift event notification subscription.
        public var custSubscriptionId: Swift.String?
        /// The Amazon Web Services account associated with the Amazon Redshift event notification subscription.
        public var customerAwsId: Swift.String?
        /// A boolean value indicating whether the subscription is enabled; true indicates that the subscription is enabled.
        public var enabled: Swift.Bool
        /// The list of Amazon Redshift event categories specified in the event notification subscription. Values: Configuration, Management, Monitoring, Security, Pending
        public var eventCategoriesList: [Swift.String]?
        /// The event severity specified in the Amazon Redshift event notification subscription. Values: ERROR, INFO
        public var severity: Swift.String?
        /// The Amazon Resource Name (ARN) of the Amazon SNS topic used by the event notification subscription.
        public var snsTopicArn: Swift.String?
        /// A list of the sources that publish events to the Amazon Redshift event notification subscription.
        public var sourceIdsList: [Swift.String]?
        /// The source type of the events returned by the Amazon Redshift event notification, such as cluster, cluster-snapshot, cluster-parameter-group, cluster-security-group, or scheduled-action.
        public var sourceType: Swift.String?
        /// The status of the Amazon Redshift event notification subscription. Constraints:
        ///
        /// * Can be one of the following: active | no-permission | topic-not-exist
        ///
        /// * The status "no-permission" indicates that Amazon Redshift no longer has permission to post to the Amazon SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.
        public var status: Swift.String?
        /// The date and time the Amazon Redshift event notification subscription was created.
        public var subscriptionCreationTime: ClientRuntime.Date?
        /// The list of tags for the event subscription.
        public var tags: [RedshiftClientTypes.Tag]?

        public init (
            custSubscriptionId: Swift.String? = nil,
            customerAwsId: Swift.String? = nil,
            enabled: Swift.Bool = false,
            eventCategoriesList: [Swift.String]? = nil,
            severity: Swift.String? = nil,
            snsTopicArn: Swift.String? = nil,
            sourceIdsList: [Swift.String]? = nil,
            sourceType: Swift.String? = nil,
            status: Swift.String? = nil,
            subscriptionCreationTime: ClientRuntime.Date? = nil,
            tags: [RedshiftClientTypes.Tag]? = nil
        )
        {
            self.custSubscriptionId = custSubscriptionId
            self.customerAwsId = customerAwsId
            self.enabled = enabled
            self.eventCategoriesList = eventCategoriesList
            self.severity = severity
            self.snsTopicArn = snsTopicArn
            self.sourceIdsList = sourceIdsList
            self.sourceType = sourceType
            self.status = status
            self.subscriptionCreationTime = subscriptionCreationTime
            self.tags = tags
        }
    }

}
