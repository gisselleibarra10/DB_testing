// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedshiftClientTypes {
    /// Describes a cluster.
    public struct Cluster: Swift.Equatable {
        /// A boolean value that, if true, indicates that major version upgrades will be applied automatically to the cluster during the maintenance window.
        public var allowVersionUpgrade: Swift.Bool
        /// This field is retired. Amazon Redshift automatically determines whether to use AQUA (Advanced Query Accelerator).
        public var aquaConfiguration: RedshiftClientTypes.AquaConfiguration?
        /// The number of days that automatic cluster snapshots are retained.
        public var automatedSnapshotRetentionPeriod: Swift.Int
        /// The name of the Availability Zone in which the cluster is located.
        public var availabilityZone: Swift.String?
        /// Describes the status of the Availability Zone relocation operation.
        public var availabilityZoneRelocationStatus: Swift.String?
        /// The availability status of the cluster for queries. Possible values are the following:
        ///
        /// * Available - The cluster is available for queries.
        ///
        /// * Unavailable - The cluster is not available for queries.
        ///
        /// * Maintenance - The cluster is intermittently available for queries due to maintenance activities.
        ///
        /// * Modifying - The cluster is intermittently available for queries due to changes that modify the cluster.
        ///
        /// * Failed - The cluster failed and is not available for queries.
        public var clusterAvailabilityStatus: Swift.String?
        /// The date and time that the cluster was created.
        public var clusterCreateTime: ClientRuntime.Date?
        /// The unique identifier of the cluster.
        public var clusterIdentifier: Swift.String?
        /// The namespace Amazon Resource Name (ARN) of the cluster.
        public var clusterNamespaceArn: Swift.String?
        /// The nodes in the cluster.
        public var clusterNodes: [RedshiftClientTypes.ClusterNode]?
        /// The list of cluster parameter groups that are associated with this cluster. Each parameter group in the list is returned with its status.
        public var clusterParameterGroups: [RedshiftClientTypes.ClusterParameterGroupStatus]?
        /// The public key for the cluster.
        public var clusterPublicKey: Swift.String?
        /// The specific revision number of the database in the cluster.
        public var clusterRevisionNumber: Swift.String?
        /// A list of cluster security group that are associated with the cluster. Each security group is represented by an element that contains ClusterSecurityGroup.Name and ClusterSecurityGroup.Status subelements. Cluster security groups are used when the cluster is not created in an Amazon Virtual Private Cloud (VPC). Clusters that are created in a VPC use VPC security groups, which are listed by the VpcSecurityGroups parameter.
        public var clusterSecurityGroups: [RedshiftClientTypes.ClusterSecurityGroupMembership]?
        /// A value that returns the destination region and retention period that are configured for cross-region snapshot copy.
        public var clusterSnapshotCopyStatus: RedshiftClientTypes.ClusterSnapshotCopyStatus?
        /// The current state of the cluster. Possible values are the following:
        ///
        /// * available
        ///
        /// * available, prep-for-resize
        ///
        /// * available, resize-cleanup
        ///
        /// * cancelling-resize
        ///
        /// * creating
        ///
        /// * deleting
        ///
        /// * final-snapshot
        ///
        /// * hardware-failure
        ///
        /// * incompatible-hsm
        ///
        /// * incompatible-network
        ///
        /// * incompatible-parameters
        ///
        /// * incompatible-restore
        ///
        /// * modifying
        ///
        /// * paused
        ///
        /// * rebooting
        ///
        /// * renaming
        ///
        /// * resizing
        ///
        /// * rotating-keys
        ///
        /// * storage-full
        ///
        /// * updating-hsm
        public var clusterStatus: Swift.String?
        /// The name of the subnet group that is associated with the cluster. This parameter is valid only when the cluster is in a VPC.
        public var clusterSubnetGroupName: Swift.String?
        /// The version ID of the Amazon Redshift engine that is running on the cluster.
        public var clusterVersion: Swift.String?
        /// The name of the initial database that was created when the cluster was created. This same name is returned for the life of the cluster. If an initial database was not specified, a database named devdev was created by default.
        public var dBName: Swift.String?
        ///
        public var dataTransferProgress: RedshiftClientTypes.DataTransferProgress?
        /// The Amazon Resource Name (ARN) for the IAM role set as default for the cluster.
        public var defaultIamRoleArn: Swift.String?
        /// Describes a group of DeferredMaintenanceWindow objects.
        public var deferredMaintenanceWindows: [RedshiftClientTypes.DeferredMaintenanceWindow]?
        /// The status of the elastic IP (EIP) address.
        public var elasticIpStatus: RedshiftClientTypes.ElasticIpStatus?
        /// The number of nodes that you can resize the cluster to with the elastic resize method.
        public var elasticResizeNumberOfNodeOptions: Swift.String?
        /// A boolean value that, if true, indicates that data in the cluster is encrypted at rest.
        public var encrypted: Swift.Bool
        /// The connection endpoint.
        public var endpoint: RedshiftClientTypes.Endpoint?
        /// An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see [Enhanced VPC Routing](https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html) in the Amazon Redshift Cluster Management Guide. If this option is true, enhanced VPC routing is enabled. Default: false
        public var enhancedVpcRouting: Swift.Bool
        /// The date and time when the next snapshot is expected to be taken for clusters with a valid snapshot schedule and backups enabled.
        public var expectedNextSnapshotScheduleTime: ClientRuntime.Date?
        /// The status of next expected snapshot for clusters having a valid snapshot schedule and backups enabled. Possible values are the following:
        ///
        /// * OnTrack - The next snapshot is expected to be taken on time.
        ///
        /// * Pending - The next snapshot is pending to be taken.
        public var expectedNextSnapshotScheduleTimeStatus: Swift.String?
        /// A value that reports whether the Amazon Redshift cluster has finished applying any hardware security module (HSM) settings changes specified in a modify cluster command. Values: active, applying
        public var hsmStatus: RedshiftClientTypes.HsmStatus?
        /// A list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services.
        public var iamRoles: [RedshiftClientTypes.ClusterIamRole]?
        /// The Key Management Service (KMS) key ID of the encryption key used to encrypt data in the cluster.
        public var kmsKeyId: Swift.String?
        /// The name of the maintenance track for the cluster.
        public var maintenanceTrackName: Swift.String?
        /// The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots. The value must be either -1 or an integer between 1 and 3,653.
        public var manualSnapshotRetentionPeriod: Swift.Int
        /// The admin user name for the cluster. This name is used to connect to the database that is specified in the DBName parameter.
        public var masterUsername: Swift.String?
        /// The status of a modify operation, if any, initiated for the cluster.
        public var modifyStatus: Swift.String?
        /// The date and time in UTC when system maintenance can begin.
        public var nextMaintenanceWindowStartTime: ClientRuntime.Date?
        /// The node type for the nodes in the cluster.
        public var nodeType: Swift.String?
        /// The number of compute nodes in the cluster.
        public var numberOfNodes: Swift.Int
        /// Cluster operations that are waiting to be started.
        public var pendingActions: [Swift.String]?
        /// A value that, if present, indicates that changes to the cluster are pending. Specific pending changes are identified by subelements.
        public var pendingModifiedValues: RedshiftClientTypes.PendingModifiedValues?
        /// The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance can occur.
        public var preferredMaintenanceWindow: Swift.String?
        /// A boolean value that, if true, indicates that the cluster can be accessed from a public network.
        public var publiclyAccessible: Swift.Bool
        /// The status of the reserved-node exchange request. Statuses include in-progress and requested.
        public var reservedNodeExchangeStatus: RedshiftClientTypes.ReservedNodeExchangeStatus?
        /// Returns the following:
        ///
        /// * AllowCancelResize: a boolean value indicating if the resize operation can be cancelled.
        ///
        /// * ResizeType: Returns ClassicResize
        public var resizeInfo: RedshiftClientTypes.ResizeInfo?
        /// A value that describes the status of a cluster restore action. This parameter returns null if the cluster was not created by restoring a snapshot.
        public var restoreStatus: RedshiftClientTypes.RestoreStatus?
        /// A unique identifier for the cluster snapshot schedule.
        public var snapshotScheduleIdentifier: Swift.String?
        /// The current state of the cluster snapshot schedule.
        public var snapshotScheduleState: RedshiftClientTypes.ScheduleState?
        /// The list of tags for the cluster.
        public var tags: [RedshiftClientTypes.Tag]?
        /// The total storage capacity of the cluster in megabytes.
        public var totalStorageCapacityInMegaBytes: Swift.Int?
        /// The identifier of the VPC the cluster is in, if the cluster is in a VPC.
        public var vpcId: Swift.String?
        /// A list of Amazon Virtual Private Cloud (Amazon VPC) security groups that are associated with the cluster. This parameter is returned only if the cluster is in a VPC.
        public var vpcSecurityGroups: [RedshiftClientTypes.VpcSecurityGroupMembership]?

        public init (
            allowVersionUpgrade: Swift.Bool = false,
            aquaConfiguration: RedshiftClientTypes.AquaConfiguration? = nil,
            automatedSnapshotRetentionPeriod: Swift.Int = 0,
            availabilityZone: Swift.String? = nil,
            availabilityZoneRelocationStatus: Swift.String? = nil,
            clusterAvailabilityStatus: Swift.String? = nil,
            clusterCreateTime: ClientRuntime.Date? = nil,
            clusterIdentifier: Swift.String? = nil,
            clusterNamespaceArn: Swift.String? = nil,
            clusterNodes: [RedshiftClientTypes.ClusterNode]? = nil,
            clusterParameterGroups: [RedshiftClientTypes.ClusterParameterGroupStatus]? = nil,
            clusterPublicKey: Swift.String? = nil,
            clusterRevisionNumber: Swift.String? = nil,
            clusterSecurityGroups: [RedshiftClientTypes.ClusterSecurityGroupMembership]? = nil,
            clusterSnapshotCopyStatus: RedshiftClientTypes.ClusterSnapshotCopyStatus? = nil,
            clusterStatus: Swift.String? = nil,
            clusterSubnetGroupName: Swift.String? = nil,
            clusterVersion: Swift.String? = nil,
            dBName: Swift.String? = nil,
            dataTransferProgress: RedshiftClientTypes.DataTransferProgress? = nil,
            defaultIamRoleArn: Swift.String? = nil,
            deferredMaintenanceWindows: [RedshiftClientTypes.DeferredMaintenanceWindow]? = nil,
            elasticIpStatus: RedshiftClientTypes.ElasticIpStatus? = nil,
            elasticResizeNumberOfNodeOptions: Swift.String? = nil,
            encrypted: Swift.Bool = false,
            endpoint: RedshiftClientTypes.Endpoint? = nil,
            enhancedVpcRouting: Swift.Bool = false,
            expectedNextSnapshotScheduleTime: ClientRuntime.Date? = nil,
            expectedNextSnapshotScheduleTimeStatus: Swift.String? = nil,
            hsmStatus: RedshiftClientTypes.HsmStatus? = nil,
            iamRoles: [RedshiftClientTypes.ClusterIamRole]? = nil,
            kmsKeyId: Swift.String? = nil,
            maintenanceTrackName: Swift.String? = nil,
            manualSnapshotRetentionPeriod: Swift.Int = 0,
            masterUsername: Swift.String? = nil,
            modifyStatus: Swift.String? = nil,
            nextMaintenanceWindowStartTime: ClientRuntime.Date? = nil,
            nodeType: Swift.String? = nil,
            numberOfNodes: Swift.Int = 0,
            pendingActions: [Swift.String]? = nil,
            pendingModifiedValues: RedshiftClientTypes.PendingModifiedValues? = nil,
            preferredMaintenanceWindow: Swift.String? = nil,
            publiclyAccessible: Swift.Bool = false,
            reservedNodeExchangeStatus: RedshiftClientTypes.ReservedNodeExchangeStatus? = nil,
            resizeInfo: RedshiftClientTypes.ResizeInfo? = nil,
            restoreStatus: RedshiftClientTypes.RestoreStatus? = nil,
            snapshotScheduleIdentifier: Swift.String? = nil,
            snapshotScheduleState: RedshiftClientTypes.ScheduleState? = nil,
            tags: [RedshiftClientTypes.Tag]? = nil,
            totalStorageCapacityInMegaBytes: Swift.Int? = nil,
            vpcId: Swift.String? = nil,
            vpcSecurityGroups: [RedshiftClientTypes.VpcSecurityGroupMembership]? = nil
        )
        {
            self.allowVersionUpgrade = allowVersionUpgrade
            self.aquaConfiguration = aquaConfiguration
            self.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod
            self.availabilityZone = availabilityZone
            self.availabilityZoneRelocationStatus = availabilityZoneRelocationStatus
            self.clusterAvailabilityStatus = clusterAvailabilityStatus
            self.clusterCreateTime = clusterCreateTime
            self.clusterIdentifier = clusterIdentifier
            self.clusterNamespaceArn = clusterNamespaceArn
            self.clusterNodes = clusterNodes
            self.clusterParameterGroups = clusterParameterGroups
            self.clusterPublicKey = clusterPublicKey
            self.clusterRevisionNumber = clusterRevisionNumber
            self.clusterSecurityGroups = clusterSecurityGroups
            self.clusterSnapshotCopyStatus = clusterSnapshotCopyStatus
            self.clusterStatus = clusterStatus
            self.clusterSubnetGroupName = clusterSubnetGroupName
            self.clusterVersion = clusterVersion
            self.dBName = dBName
            self.dataTransferProgress = dataTransferProgress
            self.defaultIamRoleArn = defaultIamRoleArn
            self.deferredMaintenanceWindows = deferredMaintenanceWindows
            self.elasticIpStatus = elasticIpStatus
            self.elasticResizeNumberOfNodeOptions = elasticResizeNumberOfNodeOptions
            self.encrypted = encrypted
            self.endpoint = endpoint
            self.enhancedVpcRouting = enhancedVpcRouting
            self.expectedNextSnapshotScheduleTime = expectedNextSnapshotScheduleTime
            self.expectedNextSnapshotScheduleTimeStatus = expectedNextSnapshotScheduleTimeStatus
            self.hsmStatus = hsmStatus
            self.iamRoles = iamRoles
            self.kmsKeyId = kmsKeyId
            self.maintenanceTrackName = maintenanceTrackName
            self.manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriod
            self.masterUsername = masterUsername
            self.modifyStatus = modifyStatus
            self.nextMaintenanceWindowStartTime = nextMaintenanceWindowStartTime
            self.nodeType = nodeType
            self.numberOfNodes = numberOfNodes
            self.pendingActions = pendingActions
            self.pendingModifiedValues = pendingModifiedValues
            self.preferredMaintenanceWindow = preferredMaintenanceWindow
            self.publiclyAccessible = publiclyAccessible
            self.reservedNodeExchangeStatus = reservedNodeExchangeStatus
            self.resizeInfo = resizeInfo
            self.restoreStatus = restoreStatus
            self.snapshotScheduleIdentifier = snapshotScheduleIdentifier
            self.snapshotScheduleState = snapshotScheduleState
            self.tags = tags
            self.totalStorageCapacityInMegaBytes = totalStorageCapacityInMegaBytes
            self.vpcId = vpcId
            self.vpcSecurityGroups = vpcSecurityGroups
        }
    }

}
