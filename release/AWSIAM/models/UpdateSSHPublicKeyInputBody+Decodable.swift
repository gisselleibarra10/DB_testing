// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateSSHPublicKeyInputBody: Swift.Equatable {
    let userName: Swift.String?
    let sSHPublicKeyId: Swift.String?
    let status: IamClientTypes.StatusType?
}

extension UpdateSSHPublicKeyInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case sSHPublicKeyId = "SSHPublicKeyId"
        case status = "Status"
        case userName = "UserName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userName)
        userName = userNameDecoded
        let sSHPublicKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sSHPublicKeyId)
        sSHPublicKeyId = sSHPublicKeyIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IamClientTypes.StatusType.self, forKey: .status)
        status = statusDecoded
    }
}
