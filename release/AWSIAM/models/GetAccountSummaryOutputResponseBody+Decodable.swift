// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAccountSummaryOutputResponseBody: Swift.Equatable {
    let summaryMap: [Swift.String:Swift.Int]?
}

extension GetAccountSummaryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case summaryMap = "SummaryMap"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("GetAccountSummaryResult"))
        if containerValues.contains(.summaryMap) {
            struct KeyVal0{struct key{}; struct value{}}
            let summaryMapWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: ClientRuntime.MapEntry<Swift.String, Swift.Int, KeyVal0.key, KeyVal0.value>.CodingKeys.self, forKey: .summaryMap)
            if let summaryMapWrappedContainer = summaryMapWrappedContainer {
                let summaryMapContainer = try summaryMapWrappedContainer.decodeIfPresent([ClientRuntime.MapKeyValue<Swift.String, Swift.Int, KeyVal0.key, KeyVal0.value>].self, forKey: .entry)
                var summaryMapBuffer: [Swift.String:Swift.Int]? = nil
                if let summaryMapContainer = summaryMapContainer {
                    summaryMapBuffer = [Swift.String:Swift.Int]()
                    for integerContainer0 in summaryMapContainer {
                        summaryMapBuffer?[integerContainer0.key] = integerContainer0.value
                    }
                }
                summaryMap = summaryMapBuffer
            } else {
                summaryMap = [:]
            }
        } else {
            summaryMap = nil
        }
    }
}
