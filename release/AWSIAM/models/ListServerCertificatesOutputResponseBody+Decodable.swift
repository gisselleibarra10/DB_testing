// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServerCertificatesOutputResponseBody: Swift.Equatable {
    let serverCertificateMetadataList: [IamClientTypes.ServerCertificateMetadata]?
    let isTruncated: Swift.Bool
    let marker: Swift.String?
}

extension ListServerCertificatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case isTruncated = "IsTruncated"
        case marker = "Marker"
        case serverCertificateMetadataList = "ServerCertificateMetadataList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("ListServerCertificatesResult"))
        if containerValues.contains(.serverCertificateMetadataList) {
            struct KeyVal0{struct member{}}
            let serverCertificateMetadataListWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .serverCertificateMetadataList)
            if let serverCertificateMetadataListWrappedContainer = serverCertificateMetadataListWrappedContainer {
                let serverCertificateMetadataListContainer = try serverCertificateMetadataListWrappedContainer.decodeIfPresent([IamClientTypes.ServerCertificateMetadata].self, forKey: .member)
                var serverCertificateMetadataListBuffer:[IamClientTypes.ServerCertificateMetadata]? = nil
                if let serverCertificateMetadataListContainer = serverCertificateMetadataListContainer {
                    serverCertificateMetadataListBuffer = [IamClientTypes.ServerCertificateMetadata]()
                    for structureContainer0 in serverCertificateMetadataListContainer {
                        serverCertificateMetadataListBuffer?.append(structureContainer0)
                    }
                }
                serverCertificateMetadataList = serverCertificateMetadataListBuffer
            } else {
                serverCertificateMetadataList = []
            }
        } else {
            serverCertificateMetadataList = nil
        }
        let isTruncatedDecoded = try containerValues.decode(Swift.Bool.self, forKey: .isTruncated)
        isTruncated = isTruncatedDecoded
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
