// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RdsClientTypes {
    /// This data type is used as a response element in the DescribeDBClusterBacktracks action.
    public struct DBClusterBacktrack: Swift.Equatable {
        /// Contains the backtrack identifier.
        public var backtrackIdentifier: Swift.String?
        /// The timestamp of the time at which the backtrack was requested.
        public var backtrackRequestCreationTime: ClientRuntime.Date?
        /// The timestamp of the time to which the DB cluster was backtracked.
        public var backtrackTo: ClientRuntime.Date?
        /// The timestamp of the time from which the DB cluster was backtracked.
        public var backtrackedFrom: ClientRuntime.Date?
        /// Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.
        public var dBClusterIdentifier: Swift.String?
        /// The status of the backtrack. This property returns one of the following values:
        ///
        /// * applying - The backtrack is currently being applied to or rolled back from the DB cluster.
        ///
        /// * completed - The backtrack has successfully been applied to or rolled back from the DB cluster.
        ///
        /// * failed - An error occurred while the backtrack was applied to or rolled back from the DB cluster.
        ///
        /// * pending - The backtrack is currently pending application to or rollback from the DB cluster.
        public var status: Swift.String?

        public init (
            backtrackIdentifier: Swift.String? = nil,
            backtrackRequestCreationTime: ClientRuntime.Date? = nil,
            backtrackTo: ClientRuntime.Date? = nil,
            backtrackedFrom: ClientRuntime.Date? = nil,
            dBClusterIdentifier: Swift.String? = nil,
            status: Swift.String? = nil
        )
        {
            self.backtrackIdentifier = backtrackIdentifier
            self.backtrackRequestCreationTime = backtrackRequestCreationTime
            self.backtrackTo = backtrackTo
            self.backtrackedFrom = backtrackedFrom
            self.dBClusterIdentifier = dBClusterIdentifier
            self.status = status
        }
    }

}
