// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RdsClientTypes {
    /// Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster. For an Amazon Aurora DB cluster, this data type is used as a response element in the operations CreateDBCluster, DeleteDBCluster, DescribeDBClusters, FailoverDBCluster, ModifyDBCluster, PromoteReadReplicaDBCluster, RestoreDBClusterFromS3, RestoreDBClusterFromSnapshot, RestoreDBClusterToPointInTime, StartDBCluster, and StopDBCluster. For a Multi-AZ DB cluster, this data type is used as a response element in the operations CreateDBCluster, DeleteDBCluster, DescribeDBClusters, FailoverDBCluster, ModifyDBCluster, RebootDBCluster, RestoreDBClusterFromSnapshot, and RestoreDBClusterToPointInTime. For more information on Amazon Aurora DB clusters, see [ What is Amazon Aurora?](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html) in the Amazon Aurora User Guide. For more information on Multi-AZ DB clusters, see [ Multi-AZ deployments with two readable standby DB instances](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html) in the Amazon RDS User Guide.
    public struct DBCluster: Swift.Equatable {
        /// The name of the Amazon Kinesis data stream used for the database activity stream.
        public var activityStreamKinesisStreamName: Swift.String?
        /// The Amazon Web Services KMS key identifier used for encrypting messages in the database activity stream. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
        public var activityStreamKmsKeyId: Swift.String?
        /// The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.
        public var activityStreamMode: RdsClientTypes.ActivityStreamMode?
        /// The status of the database activity stream.
        public var activityStreamStatus: RdsClientTypes.ActivityStreamStatus?
        /// For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed.
        public var allocatedStorage: Swift.Int?
        /// Provides a list of the Amazon Web Services Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other Amazon Web Services on your behalf.
        public var associatedRoles: [RdsClientTypes.DBClusterRole]?
        /// A value that indicates that minor version patches are applied automatically. This setting is only for non-Aurora Multi-AZ DB clusters.
        public var autoMinorVersionUpgrade: Swift.Bool
        /// The time when a stopped DB cluster is restarted automatically.
        public var automaticRestartTime: ClientRuntime.Date?
        /// Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.
        public var availabilityZones: [Swift.String]?
        /// The number of change records stored for Backtrack.
        public var backtrackConsumedChangeRecords: Swift.Int?
        /// The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.
        public var backtrackWindow: Swift.Int?
        /// Specifies the number of days for which automatic DB snapshots are retained.
        public var backupRetentionPeriod: Swift.Int?
        /// The current capacity of an Aurora Serverless v1 DB cluster. The capacity is 0 (zero) when the cluster is paused. For more information about Aurora Serverless v1, see [Using Amazon Aurora Serverless v1](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) in the Amazon Aurora User Guide.
        public var capacity: Swift.Int?
        /// If present, specifies the name of the character set that this cluster is associated with.
        public var characterSetName: Swift.String?
        /// Identifies the clone group to which the DB cluster is associated.
        public var cloneGroupId: Swift.String?
        /// Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).
        public var clusterCreateTime: ClientRuntime.Date?
        /// Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.
        public var copyTagsToSnapshot: Swift.Bool?
        /// Specifies whether the DB cluster is a clone of a DB cluster owned by a different Amazon Web Services account.
        public var crossAccountClone: Swift.Bool?
        /// Identifies all custom endpoints associated with the cluster.
        public var customEndpoints: [Swift.String]?
        /// The Amazon Resource Name (ARN) for the DB cluster.
        public var dBClusterArn: Swift.String?
        /// Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.
        public var dBClusterIdentifier: Swift.String?
        /// The name of the compute and memory capacity class of the DB instance. This setting is only for non-Aurora Multi-AZ DB clusters.
        public var dBClusterInstanceClass: Swift.String?
        /// Provides the list of instances that make up the DB cluster.
        public var dBClusterMembers: [RdsClientTypes.DBClusterMember]?
        /// Provides the list of option group memberships for this DB cluster.
        public var dBClusterOptionGroupMemberships: [RdsClientTypes.DBClusterOptionGroupStatus]?
        /// Specifies the name of the DB cluster parameter group for the DB cluster.
        public var dBClusterParameterGroup: Swift.String?
        /// Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.
        public var dBSubnetGroup: Swift.String?
        /// Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.
        public var databaseName: Swift.String?
        /// The Amazon Web Services Region-unique, immutable identifier for the DB cluster. This identifier is found in Amazon Web Services CloudTrail log entries whenever the KMS key for the DB cluster is accessed.
        public var dbClusterResourceId: Swift.String?
        /// Indicates if the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled.
        public var deletionProtection: Swift.Bool?
        /// The Active Directory Domain membership records associated with the DB cluster.
        public var domainMemberships: [RdsClientTypes.DomainMembership]?
        /// The earliest time to which a DB cluster can be backtracked.
        public var earliestBacktrackTime: ClientRuntime.Date?
        /// The earliest time to which a database can be restored with point-in-time restore.
        public var earliestRestorableTime: ClientRuntime.Date?
        /// A list of log types that this DB cluster is configured to export to CloudWatch Logs. Log types vary by DB engine. For information about the log types for each DB engine, see [Amazon RDS Database Log Files](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html) in the Amazon Aurora User Guide.
        public var enabledCloudwatchLogsExports: [Swift.String]?
        /// Specifies the connection endpoint for the primary instance of the DB cluster.
        public var endpoint: Swift.String?
        /// The name of the database engine to be used for this DB cluster.
        public var engine: Swift.String?
        /// The DB engine mode of the DB cluster, either provisioned, serverless, parallelquery, global, or multimaster. For more information, see [ CreateDBCluster](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBCluster.html).
        public var engineMode: Swift.String?
        /// Indicates the database engine version.
        public var engineVersion: Swift.String?
        /// Specifies whether you have requested to enable write forwarding for a secondary cluster in an Aurora global database. Because write forwarding takes time to enable, check the value of GlobalWriteForwardingStatus to confirm that the request has completed before using the write forwarding feature for this cluster.
        public var globalWriteForwardingRequested: Swift.Bool?
        /// Specifies whether a secondary cluster in an Aurora global database has write forwarding enabled, not enabled, or is in the process of enabling it.
        public var globalWriteForwardingStatus: RdsClientTypes.WriteForwardingStatus?
        /// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
        public var hostedZoneId: Swift.String?
        /// A value that indicates whether the HTTP endpoint for an Aurora Serverless v1 DB cluster is enabled. When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless v1 DB cluster. You can also query your database from inside the RDS console with the query editor. For more information, see [Using the Data API for Aurora Serverless v1](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the Amazon Aurora User Guide.
        public var httpEndpointEnabled: Swift.Bool?
        /// A value that indicates whether the mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts is enabled.
        public var iAMDatabaseAuthenticationEnabled: Swift.Bool?
        /// The Provisioned IOPS (I/O operations per second) value. This setting is only for non-Aurora Multi-AZ DB clusters.
        public var iops: Swift.Int?
        /// If StorageEncrypted is enabled, the Amazon Web Services KMS key identifier for the encrypted DB cluster. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
        public var kmsKeyId: Swift.String?
        /// Specifies the latest time to which a database can be restored with point-in-time restore.
        public var latestRestorableTime: ClientRuntime.Date?
        /// Contains the master username for the DB cluster.
        public var masterUsername: Swift.String?
        /// The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster. This setting is only for non-Aurora Multi-AZ DB clusters.
        public var monitoringInterval: Swift.Int?
        /// The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs. This setting is only for non-Aurora Multi-AZ DB clusters.
        public var monitoringRoleArn: Swift.String?
        /// Specifies whether the DB cluster has instances in multiple Availability Zones.
        public var multiAZ: Swift.Bool?
        /// The network type of the DB instance. Valid values:
        ///
        /// * IPV4
        ///
        /// * DUAL
        ///
        ///
        /// The network type is determined by the DBSubnetGroup specified for the DB cluster. A DBSubnetGroup can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (DUAL). For more information, see [ Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the Amazon Aurora User Guide. This setting is only for Aurora DB clusters.
        public var networkType: Swift.String?
        /// A value that specifies that changes to the DB cluster are pending. This element is only included when changes are pending. Specific changes are identified by subelements.
        public var pendingModifiedValues: RdsClientTypes.ClusterPendingModifiedValues?
        /// Specifies the progress of the operation as a percentage.
        public var percentProgress: Swift.String?
        /// True if Performance Insights is enabled for the DB cluster, and otherwise false. This setting is only for non-Aurora Multi-AZ DB clusters.
        public var performanceInsightsEnabled: Swift.Bool?
        /// The Amazon Web Services KMS key identifier for encryption of Performance Insights data. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. This setting is only for non-Aurora Multi-AZ DB clusters.
        public var performanceInsightsKMSKeyId: Swift.String?
        /// The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:
        ///
        /// * 7
        ///
        /// * month * 31, where month is a number of months from 1-23
        ///
        /// * 731
        ///
        ///
        /// For example, the following values are valid:
        ///
        /// * 93 (3 months * 31)
        ///
        /// * 341 (11 months * 31)
        ///
        /// * 589 (19 months * 31)
        ///
        /// * 731
        ///
        ///
        /// This setting is only for non-Aurora Multi-AZ DB clusters.
        public var performanceInsightsRetentionPeriod: Swift.Int?
        /// Specifies the port that the database engine is listening on.
        public var port: Swift.Int?
        /// Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod.
        public var preferredBackupWindow: Swift.String?
        /// Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        public var preferredMaintenanceWindow: Swift.String?
        /// Specifies the accessibility options for the DB instance. When the DB instance is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB instance's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB instance doesn't permit it. When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address. For more information, see [CreateDBInstance]. This setting is only for non-Aurora Multi-AZ DB clusters.
        public var publiclyAccessible: Swift.Bool?
        /// Contains one or more identifiers of the read replicas associated with this DB cluster.
        public var readReplicaIdentifiers: [Swift.String]?
        /// The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster. If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.
        public var readerEndpoint: Swift.String?
        /// Contains the identifier of the source DB cluster if this DB cluster is a read replica.
        public var replicationSourceIdentifier: Swift.String?
        /// Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode. For more information, see [Using Amazon Aurora Serverless v1](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) in the Amazon Aurora User Guide.
        public var scalingConfigurationInfo: RdsClientTypes.ScalingConfigurationInfo?
        /// Shows the scaling configuration for an Aurora Serverless v2 DB cluster. For more information, see [Using Amazon Aurora Serverless v2](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html) in the Amazon Aurora User Guide.
        public var serverlessV2ScalingConfiguration: RdsClientTypes.ServerlessV2ScalingConfigurationInfo?
        /// Specifies the current state of this DB cluster.
        public var status: Swift.String?
        /// Specifies whether the DB cluster is encrypted.
        public var storageEncrypted: Swift.Bool
        /// The storage type associated with the DB cluster. This setting is only for non-Aurora Multi-AZ DB clusters.
        public var storageType: Swift.String?
        /// A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the Amazon RDS User Guide.
        public var tagList: [RdsClientTypes.Tag]?
        /// Provides a list of VPC security groups that the DB cluster belongs to.
        public var vpcSecurityGroups: [RdsClientTypes.VpcSecurityGroupMembership]?

        public init (
            activityStreamKinesisStreamName: Swift.String? = nil,
            activityStreamKmsKeyId: Swift.String? = nil,
            activityStreamMode: RdsClientTypes.ActivityStreamMode? = nil,
            activityStreamStatus: RdsClientTypes.ActivityStreamStatus? = nil,
            allocatedStorage: Swift.Int? = nil,
            associatedRoles: [RdsClientTypes.DBClusterRole]? = nil,
            autoMinorVersionUpgrade: Swift.Bool = false,
            automaticRestartTime: ClientRuntime.Date? = nil,
            availabilityZones: [Swift.String]? = nil,
            backtrackConsumedChangeRecords: Swift.Int? = nil,
            backtrackWindow: Swift.Int? = nil,
            backupRetentionPeriod: Swift.Int? = nil,
            capacity: Swift.Int? = nil,
            characterSetName: Swift.String? = nil,
            cloneGroupId: Swift.String? = nil,
            clusterCreateTime: ClientRuntime.Date? = nil,
            copyTagsToSnapshot: Swift.Bool? = nil,
            crossAccountClone: Swift.Bool? = nil,
            customEndpoints: [Swift.String]? = nil,
            dBClusterArn: Swift.String? = nil,
            dBClusterIdentifier: Swift.String? = nil,
            dBClusterInstanceClass: Swift.String? = nil,
            dBClusterMembers: [RdsClientTypes.DBClusterMember]? = nil,
            dBClusterOptionGroupMemberships: [RdsClientTypes.DBClusterOptionGroupStatus]? = nil,
            dBClusterParameterGroup: Swift.String? = nil,
            dBSubnetGroup: Swift.String? = nil,
            databaseName: Swift.String? = nil,
            dbClusterResourceId: Swift.String? = nil,
            deletionProtection: Swift.Bool? = nil,
            domainMemberships: [RdsClientTypes.DomainMembership]? = nil,
            earliestBacktrackTime: ClientRuntime.Date? = nil,
            earliestRestorableTime: ClientRuntime.Date? = nil,
            enabledCloudwatchLogsExports: [Swift.String]? = nil,
            endpoint: Swift.String? = nil,
            engine: Swift.String? = nil,
            engineMode: Swift.String? = nil,
            engineVersion: Swift.String? = nil,
            globalWriteForwardingRequested: Swift.Bool? = nil,
            globalWriteForwardingStatus: RdsClientTypes.WriteForwardingStatus? = nil,
            hostedZoneId: Swift.String? = nil,
            httpEndpointEnabled: Swift.Bool? = nil,
            iAMDatabaseAuthenticationEnabled: Swift.Bool? = nil,
            iops: Swift.Int? = nil,
            kmsKeyId: Swift.String? = nil,
            latestRestorableTime: ClientRuntime.Date? = nil,
            masterUsername: Swift.String? = nil,
            monitoringInterval: Swift.Int? = nil,
            monitoringRoleArn: Swift.String? = nil,
            multiAZ: Swift.Bool? = nil,
            networkType: Swift.String? = nil,
            pendingModifiedValues: RdsClientTypes.ClusterPendingModifiedValues? = nil,
            percentProgress: Swift.String? = nil,
            performanceInsightsEnabled: Swift.Bool? = nil,
            performanceInsightsKMSKeyId: Swift.String? = nil,
            performanceInsightsRetentionPeriod: Swift.Int? = nil,
            port: Swift.Int? = nil,
            preferredBackupWindow: Swift.String? = nil,
            preferredMaintenanceWindow: Swift.String? = nil,
            publiclyAccessible: Swift.Bool? = nil,
            readReplicaIdentifiers: [Swift.String]? = nil,
            readerEndpoint: Swift.String? = nil,
            replicationSourceIdentifier: Swift.String? = nil,
            scalingConfigurationInfo: RdsClientTypes.ScalingConfigurationInfo? = nil,
            serverlessV2ScalingConfiguration: RdsClientTypes.ServerlessV2ScalingConfigurationInfo? = nil,
            status: Swift.String? = nil,
            storageEncrypted: Swift.Bool = false,
            storageType: Swift.String? = nil,
            tagList: [RdsClientTypes.Tag]? = nil,
            vpcSecurityGroups: [RdsClientTypes.VpcSecurityGroupMembership]? = nil
        )
        {
            self.activityStreamKinesisStreamName = activityStreamKinesisStreamName
            self.activityStreamKmsKeyId = activityStreamKmsKeyId
            self.activityStreamMode = activityStreamMode
            self.activityStreamStatus = activityStreamStatus
            self.allocatedStorage = allocatedStorage
            self.associatedRoles = associatedRoles
            self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
            self.automaticRestartTime = automaticRestartTime
            self.availabilityZones = availabilityZones
            self.backtrackConsumedChangeRecords = backtrackConsumedChangeRecords
            self.backtrackWindow = backtrackWindow
            self.backupRetentionPeriod = backupRetentionPeriod
            self.capacity = capacity
            self.characterSetName = characterSetName
            self.cloneGroupId = cloneGroupId
            self.clusterCreateTime = clusterCreateTime
            self.copyTagsToSnapshot = copyTagsToSnapshot
            self.crossAccountClone = crossAccountClone
            self.customEndpoints = customEndpoints
            self.dBClusterArn = dBClusterArn
            self.dBClusterIdentifier = dBClusterIdentifier
            self.dBClusterInstanceClass = dBClusterInstanceClass
            self.dBClusterMembers = dBClusterMembers
            self.dBClusterOptionGroupMemberships = dBClusterOptionGroupMemberships
            self.dBClusterParameterGroup = dBClusterParameterGroup
            self.dBSubnetGroup = dBSubnetGroup
            self.databaseName = databaseName
            self.dbClusterResourceId = dbClusterResourceId
            self.deletionProtection = deletionProtection
            self.domainMemberships = domainMemberships
            self.earliestBacktrackTime = earliestBacktrackTime
            self.earliestRestorableTime = earliestRestorableTime
            self.enabledCloudwatchLogsExports = enabledCloudwatchLogsExports
            self.endpoint = endpoint
            self.engine = engine
            self.engineMode = engineMode
            self.engineVersion = engineVersion
            self.globalWriteForwardingRequested = globalWriteForwardingRequested
            self.globalWriteForwardingStatus = globalWriteForwardingStatus
            self.hostedZoneId = hostedZoneId
            self.httpEndpointEnabled = httpEndpointEnabled
            self.iAMDatabaseAuthenticationEnabled = iAMDatabaseAuthenticationEnabled
            self.iops = iops
            self.kmsKeyId = kmsKeyId
            self.latestRestorableTime = latestRestorableTime
            self.masterUsername = masterUsername
            self.monitoringInterval = monitoringInterval
            self.monitoringRoleArn = monitoringRoleArn
            self.multiAZ = multiAZ
            self.networkType = networkType
            self.pendingModifiedValues = pendingModifiedValues
            self.percentProgress = percentProgress
            self.performanceInsightsEnabled = performanceInsightsEnabled
            self.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId
            self.performanceInsightsRetentionPeriod = performanceInsightsRetentionPeriod
            self.port = port
            self.preferredBackupWindow = preferredBackupWindow
            self.preferredMaintenanceWindow = preferredMaintenanceWindow
            self.publiclyAccessible = publiclyAccessible
            self.readReplicaIdentifiers = readReplicaIdentifiers
            self.readerEndpoint = readerEndpoint
            self.replicationSourceIdentifier = replicationSourceIdentifier
            self.scalingConfigurationInfo = scalingConfigurationInfo
            self.serverlessV2ScalingConfiguration = serverlessV2ScalingConfiguration
            self.status = status
            self.storageEncrypted = storageEncrypted
            self.storageType = storageType
            self.tagList = tagList
            self.vpcSecurityGroups = vpcSecurityGroups
        }
    }

}
