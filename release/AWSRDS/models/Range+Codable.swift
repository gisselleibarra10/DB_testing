// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RdsClientTypes.Range: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case from = "From"
        case step = "Step"
        case to = "To"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if from != 0 {
            try container.encode(from, forKey: ClientRuntime.Key("From"))
        }
        if let step = step {
            try container.encode(step, forKey: ClientRuntime.Key("Step"))
        }
        if to != 0 {
            try container.encode(to, forKey: ClientRuntime.Key("To"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fromDecoded = try containerValues.decode(Swift.Int.self, forKey: .from)
        from = fromDecoded
        let toDecoded = try containerValues.decode(Swift.Int.self, forKey: .to)
        to = toDecoded
        let stepDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .step)
        step = stepDecoded
    }
}
