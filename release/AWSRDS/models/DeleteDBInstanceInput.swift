// Code generated by smithy-swift-codegen. DO NOT EDIT!



///
public struct DeleteDBInstanceInput: Swift.Equatable {
    /// The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive. Constraints:
    ///
    /// * Must match the name of an existing DB instance.
    /// This member is required.
    public var dBInstanceIdentifier: Swift.String?
    /// A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.
    public var deleteAutomatedBackups: Swift.Bool?
    /// The DBSnapshotIdentifier of the new DBSnapshot created when the SkipFinalSnapshot parameter is disabled. If you enable this parameter and also enable SkipFinalShapshot, the command results in an error. This setting doesn't apply to RDS Custom. Constraints:
    ///
    /// * Must be 1 to 255 letters or numbers.
    ///
    /// * First character must be a letter.
    ///
    /// * Can't end with a hyphen or contain two consecutive hyphens.
    ///
    /// * Can't be specified when deleting a read replica.
    public var finalDBSnapshotIdentifier: Swift.String?
    /// A value that indicates whether to skip the creation of a final DB snapshot before deleting the instance. If you enable this parameter, RDS doesn't create a DB snapshot. If you don't enable this parameter, RDS creates a DB snapshot before the DB instance is deleted. By default, skip isn't enabled, and the DB snapshot is created. If you don't enable this parameter, you must specify the FinalDBSnapshotIdentifier parameter. When a DB instance is in a failure state and has a status of failed, incompatible-restore, or incompatible-network, RDS can delete the instance only if you enable this parameter. If you delete a read replica or an RDS Custom instance, you must enable this setting. This setting is required for RDS Custom.
    public var skipFinalSnapshot: Swift.Bool

    public init (
        dBInstanceIdentifier: Swift.String? = nil,
        deleteAutomatedBackups: Swift.Bool? = nil,
        finalDBSnapshotIdentifier: Swift.String? = nil,
        skipFinalSnapshot: Swift.Bool = false
    )
    {
        self.dBInstanceIdentifier = dBInstanceIdentifier
        self.deleteAutomatedBackups = deleteAutomatedBackups
        self.finalDBSnapshotIdentifier = finalDBSnapshotIdentifier
        self.skipFinalSnapshot = skipFinalSnapshot
    }
}
