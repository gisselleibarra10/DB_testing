// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeregisterDBProxyTargetsInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let dBClusterIdentifiers = dBClusterIdentifiers {
            var dBClusterIdentifiersContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("DBClusterIdentifiers"))
            for (index0, string0) in dBClusterIdentifiers.enumerated() {
                try dBClusterIdentifiersContainer.encode(string0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let dBInstanceIdentifiers = dBInstanceIdentifiers {
            var dBInstanceIdentifiersContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("DBInstanceIdentifiers"))
            for (index0, string0) in dBInstanceIdentifiers.enumerated() {
                try dBInstanceIdentifiersContainer.encode(string0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let dBProxyName = dBProxyName {
            try container.encode(dBProxyName, forKey: ClientRuntime.Key("DBProxyName"))
        }
        if let targetGroupName = targetGroupName {
            try container.encode(targetGroupName, forKey: ClientRuntime.Key("TargetGroupName"))
        }
        try container.encode("DeregisterDBProxyTargets", forKey:ClientRuntime.Key("Action"))
        try container.encode("2014-10-31", forKey:ClientRuntime.Key("Version"))
    }
}
