// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct RestoreDBInstanceFromS3Input: Swift.Equatable {
    /// The amount of storage (in gigabytes) to allocate initially for the DB instance. Follow the allocation rules specified in CreateDBInstance. Be sure to allocate enough memory for your new DB instance so that the restore operation can succeed. You can also allocate additional memory for future growth.
    public var allocatedStorage: Swift.Int?
    /// A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are not applied automatically.
    public var autoMinorVersionUpgrade: Swift.Bool?
    /// The Availability Zone that the DB instance is created in. For information about Amazon Web Services Regions and Availability Zones, see [Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html) in the Amazon RDS User Guide. Default: A random, system-chosen Availability Zone in the endpoint's Amazon Web Services Region. Example: us-east-1d Constraint: The AvailabilityZone parameter can't be specified if the DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the same Amazon Web Services Region as the current endpoint.
    public var availabilityZone: Swift.String?
    /// The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. For more information, see CreateDBInstance.
    public var backupRetentionPeriod: Swift.Int?
    /// A value that indicates whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.
    public var copyTagsToSnapshot: Swift.Bool?
    /// The compute and memory capacity of the DB instance, for example db.m4.large. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see [DB Instance Class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide. Importing from Amazon S3 isn't supported on the db.t2.micro DB instance class.
    /// This member is required.
    public var dBInstanceClass: Swift.String?
    /// The DB instance identifier. This parameter is stored as a lowercase string. Constraints:
    ///
    /// * Must contain from 1 to 63 letters, numbers, or hyphens.
    ///
    /// * First character must be a letter.
    ///
    /// * Can't end with a hyphen or contain two consecutive hyphens.
    ///
    ///
    /// Example: mydbinstance
    /// This member is required.
    public var dBInstanceIdentifier: Swift.String?
    /// The name of the database to create when the DB instance is created. Follow the naming rules specified in CreateDBInstance.
    public var dBName: Swift.String?
    /// The name of the DB parameter group to associate with this DB instance. If you do not specify a value for DBParameterGroupName, then the default DBParameterGroup for the specified DB engine is used.
    public var dBParameterGroupName: Swift.String?
    /// A list of DB security groups to associate with this DB instance. Default: The default DB security group for the database engine.
    public var dBSecurityGroups: [Swift.String]?
    /// A DB subnet group to associate with this DB instance. Constraints: If supplied, must match the name of an existing DBSubnetGroup. Example: mydbsubnetgroup
    public var dBSubnetGroupName: Swift.String?
    /// A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see [ Deleting a DB Instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).
    public var deletionProtection: Swift.Bool?
    /// The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the Amazon RDS User Guide.
    public var enableCloudwatchLogsExports: [Swift.String]?
    /// A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled. For more information about IAM database authentication, see [ IAM Database Authentication for MySQL and PostgreSQL](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html) in the Amazon RDS User Guide.
    public var enableIAMDatabaseAuthentication: Swift.Bool?
    /// A value that indicates whether to enable Performance Insights for the DB instance. For more information, see [Using Amazon Performance Insights](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the Amazon RDS User Guide.
    public var enablePerformanceInsights: Swift.Bool?
    /// The name of the database engine to be used for this instance. Valid Values: mysql
    /// This member is required.
    public var engine: Swift.String?
    /// The version number of the database engine to use. Choose the latest minor version of your database engine. For information about engine versions, see CreateDBInstance, or call DescribeDBEngineVersions.
    public var engineVersion: Swift.String?
    /// The amount of Provisioned IOPS (input/output operations per second) to allocate initially for the DB instance. For information about valid Iops values, see [Amazon RDS Provisioned IOPS Storage to Improve Performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide.
    public var iops: Swift.Int?
    /// The Amazon Web Services KMS key identifier for an encrypted DB instance. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If the StorageEncrypted parameter is enabled, and you do not specify a value for the KmsKeyId parameter, then Amazon RDS will use your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.
    public var kmsKeyId: Swift.String?
    /// The license model for this DB instance. Use general-public-license.
    public var licenseModel: Swift.String?
    /// The password for the master user. The password can include any printable ASCII character except "/", """, or "@". Constraints: Must contain from 8 to 41 characters.
    public var masterUserPassword: Swift.String?
    /// The name for the master user. Constraints:
    ///
    /// * Must be 1 to 16 letters or numbers.
    ///
    /// * First character must be a letter.
    ///
    /// * Can't be a reserved word for the chosen database engine.
    public var masterUsername: Swift.String?
    /// The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance. For more information about this setting, including limitations that apply to it, see [ Managing capacity automatically with Amazon RDS storage autoscaling](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling) in the Amazon RDS User Guide.
    public var maxAllocatedStorage: Swift.Int?
    /// The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. If MonitoringRoleArn is specified, then you must also set MonitoringInterval to a value other than 0. Valid Values: 0, 1, 5, 10, 15, 30, 60 Default: 0
    public var monitoringInterval: Swift.Int?
    /// The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess. For information on creating a monitoring role, see [Setting Up and Enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the Amazon RDS User Guide. If MonitoringInterval is set to a value other than 0, then you must supply a MonitoringRoleArn value.
    public var monitoringRoleArn: Swift.String?
    /// A value that indicates whether the DB instance is a Multi-AZ deployment. If the DB instance is a Multi-AZ deployment, you can't set the AvailabilityZone parameter.
    public var multiAZ: Swift.Bool?
    /// The network type of the DB instance. Valid values:
    ///
    /// * IPV4
    ///
    /// * DUAL
    ///
    ///
    /// The network type is determined by the DBSubnetGroup specified for the DB instance. A DBSubnetGroup can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (DUAL). For more information, see [ Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the Amazon RDS User Guide.
    public var networkType: Swift.String?
    /// The name of the option group to associate with this DB instance. If this argument is omitted, the default option group for the specified engine is used.
    public var optionGroupName: Swift.String?
    /// The Amazon Web Services KMS key identifier for encryption of Performance Insights data. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. If you do not specify a value for PerformanceInsightsKMSKeyId, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.
    public var performanceInsightsKMSKeyId: Swift.String?
    /// The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:
    ///
    /// * 7
    ///
    /// * month * 31, where month is a number of months from 1-23
    ///
    /// * 731
    ///
    ///
    /// For example, the following values are valid:
    ///
    /// * 93 (3 months * 31)
    ///
    /// * 341 (11 months * 31)
    ///
    /// * 589 (19 months * 31)
    ///
    /// * 731
    ///
    ///
    /// If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.
    public var performanceInsightsRetentionPeriod: Swift.Int?
    /// The port number on which the database accepts connections. Type: Integer Valid Values: 1150-65535 Default: 3306
    public var port: Swift.Int?
    /// The time range each day during which automated backups are created if automated backups are enabled. For more information, see [Backup window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow) in the Amazon RDS User Guide. Constraints:
    ///
    /// * Must be in the format hh24:mi-hh24:mi.
    ///
    /// * Must be in Universal Coordinated Time (UTC).
    ///
    /// * Must not conflict with the preferred maintenance window.
    ///
    /// * Must be at least 30 minutes.
    public var preferredBackupWindow: Swift.String?
    /// The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see [Amazon RDS Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance) in the Amazon RDS User Guide. Constraints:
    ///
    /// * Must be in the format ddd:hh24:mi-ddd:hh24:mi.
    ///
    /// * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
    ///
    /// * Must be in Universal Coordinated Time (UTC).
    ///
    /// * Must not conflict with the preferred backup window.
    ///
    /// * Must be at least 30 minutes.
    public var preferredMaintenanceWindow: Swift.String?
    /// The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
    public var processorFeatures: [RdsClientTypes.ProcessorFeature]?
    /// A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB instance's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB instance doesn't permit it. When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address. For more information, see [CreateDBInstance].
    public var publiclyAccessible: Swift.Bool?
    /// The name of your Amazon S3 bucket that contains your database backup file.
    /// This member is required.
    public var s3BucketName: Swift.String?
    /// An Amazon Web Services Identity and Access Management (IAM) role to allow Amazon RDS to access your Amazon S3 bucket.
    /// This member is required.
    public var s3IngestionRoleArn: Swift.String?
    /// The prefix of your Amazon S3 bucket.
    public var s3Prefix: Swift.String?
    /// The name of the engine of your source database. Valid Values: mysql
    /// This member is required.
    public var sourceEngine: Swift.String?
    /// The version of the database that the backup files were created from. MySQL versions 5.6 and 5.7 are supported. Example: 5.6.40
    /// This member is required.
    public var sourceEngineVersion: Swift.String?
    /// A value that indicates whether the new DB instance is encrypted or not.
    public var storageEncrypted: Swift.Bool?
    /// Specifies the storage type to be associated with the DB instance. Valid values: standard | gp2 | io1 If you specify io1, you must also include a value for the Iops parameter. Default: io1 if the Iops parameter is specified; otherwise gp2
    public var storageType: Swift.String?
    /// A list of tags to associate with this DB instance. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the Amazon RDS User Guide.
    public var tags: [RdsClientTypes.Tag]?
    /// A value that indicates whether the DB instance class of the DB instance uses its default processor features.
    public var useDefaultProcessorFeatures: Swift.Bool?
    /// A list of VPC security groups to associate with this DB instance.
    public var vpcSecurityGroupIds: [Swift.String]?

    public init (
        allocatedStorage: Swift.Int? = nil,
        autoMinorVersionUpgrade: Swift.Bool? = nil,
        availabilityZone: Swift.String? = nil,
        backupRetentionPeriod: Swift.Int? = nil,
        copyTagsToSnapshot: Swift.Bool? = nil,
        dBInstanceClass: Swift.String? = nil,
        dBInstanceIdentifier: Swift.String? = nil,
        dBName: Swift.String? = nil,
        dBParameterGroupName: Swift.String? = nil,
        dBSecurityGroups: [Swift.String]? = nil,
        dBSubnetGroupName: Swift.String? = nil,
        deletionProtection: Swift.Bool? = nil,
        enableCloudwatchLogsExports: [Swift.String]? = nil,
        enableIAMDatabaseAuthentication: Swift.Bool? = nil,
        enablePerformanceInsights: Swift.Bool? = nil,
        engine: Swift.String? = nil,
        engineVersion: Swift.String? = nil,
        iops: Swift.Int? = nil,
        kmsKeyId: Swift.String? = nil,
        licenseModel: Swift.String? = nil,
        masterUserPassword: Swift.String? = nil,
        masterUsername: Swift.String? = nil,
        maxAllocatedStorage: Swift.Int? = nil,
        monitoringInterval: Swift.Int? = nil,
        monitoringRoleArn: Swift.String? = nil,
        multiAZ: Swift.Bool? = nil,
        networkType: Swift.String? = nil,
        optionGroupName: Swift.String? = nil,
        performanceInsightsKMSKeyId: Swift.String? = nil,
        performanceInsightsRetentionPeriod: Swift.Int? = nil,
        port: Swift.Int? = nil,
        preferredBackupWindow: Swift.String? = nil,
        preferredMaintenanceWindow: Swift.String? = nil,
        processorFeatures: [RdsClientTypes.ProcessorFeature]? = nil,
        publiclyAccessible: Swift.Bool? = nil,
        s3BucketName: Swift.String? = nil,
        s3IngestionRoleArn: Swift.String? = nil,
        s3Prefix: Swift.String? = nil,
        sourceEngine: Swift.String? = nil,
        sourceEngineVersion: Swift.String? = nil,
        storageEncrypted: Swift.Bool? = nil,
        storageType: Swift.String? = nil,
        tags: [RdsClientTypes.Tag]? = nil,
        useDefaultProcessorFeatures: Swift.Bool? = nil,
        vpcSecurityGroupIds: [Swift.String]? = nil
    )
    {
        self.allocatedStorage = allocatedStorage
        self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
        self.availabilityZone = availabilityZone
        self.backupRetentionPeriod = backupRetentionPeriod
        self.copyTagsToSnapshot = copyTagsToSnapshot
        self.dBInstanceClass = dBInstanceClass
        self.dBInstanceIdentifier = dBInstanceIdentifier
        self.dBName = dBName
        self.dBParameterGroupName = dBParameterGroupName
        self.dBSecurityGroups = dBSecurityGroups
        self.dBSubnetGroupName = dBSubnetGroupName
        self.deletionProtection = deletionProtection
        self.enableCloudwatchLogsExports = enableCloudwatchLogsExports
        self.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication
        self.enablePerformanceInsights = enablePerformanceInsights
        self.engine = engine
        self.engineVersion = engineVersion
        self.iops = iops
        self.kmsKeyId = kmsKeyId
        self.licenseModel = licenseModel
        self.masterUserPassword = masterUserPassword
        self.masterUsername = masterUsername
        self.maxAllocatedStorage = maxAllocatedStorage
        self.monitoringInterval = monitoringInterval
        self.monitoringRoleArn = monitoringRoleArn
        self.multiAZ = multiAZ
        self.networkType = networkType
        self.optionGroupName = optionGroupName
        self.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId
        self.performanceInsightsRetentionPeriod = performanceInsightsRetentionPeriod
        self.port = port
        self.preferredBackupWindow = preferredBackupWindow
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.processorFeatures = processorFeatures
        self.publiclyAccessible = publiclyAccessible
        self.s3BucketName = s3BucketName
        self.s3IngestionRoleArn = s3IngestionRoleArn
        self.s3Prefix = s3Prefix
        self.sourceEngine = sourceEngine
        self.sourceEngineVersion = sourceEngineVersion
        self.storageEncrypted = storageEncrypted
        self.storageType = storageType
        self.tags = tags
        self.useDefaultProcessorFeatures = useDefaultProcessorFeatures
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
