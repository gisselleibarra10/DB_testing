// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PromoteReadReplicaInputBody: Swift.Equatable {
    let dBInstanceIdentifier: Swift.String?
    let backupRetentionPeriod: Swift.Int?
    let preferredBackupWindow: Swift.String?
}

extension PromoteReadReplicaInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case backupRetentionPeriod = "BackupRetentionPeriod"
        case dBInstanceIdentifier = "DBInstanceIdentifier"
        case preferredBackupWindow = "PreferredBackupWindow"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dBInstanceIdentifierDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dBInstanceIdentifier)
        dBInstanceIdentifier = dBInstanceIdentifierDecoded
        let backupRetentionPeriodDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .backupRetentionPeriod)
        backupRetentionPeriod = backupRetentionPeriodDecoded
        let preferredBackupWindowDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .preferredBackupWindow)
        preferredBackupWindow = preferredBackupWindowDecoded
    }
}
