// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeDBEngineVersionsInput: Swift.Equatable {
    /// The name of a specific DB parameter group family to return details for. Constraints:
    ///
    /// * If supplied, must match an existing DBParameterGroupFamily.
    public var dBParameterGroupFamily: Swift.String?
    /// A value that indicates whether only the default version of the specified engine or engine and major version combination is returned.
    public var defaultOnly: Swift.Bool
    /// The database engine to return. Valid Values:
    ///
    /// * aurora (for MySQL 5.6-compatible Aurora)
    ///
    /// * aurora-mysql (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora)
    ///
    /// * aurora-postgresql
    ///
    /// * mariadb
    ///
    /// * mysql
    ///
    /// * oracle-ee
    ///
    /// * oracle-ee-cdb
    ///
    /// * oracle-se2
    ///
    /// * oracle-se2-cdb
    ///
    /// * postgres
    ///
    /// * sqlserver-ee
    ///
    /// * sqlserver-se
    ///
    /// * sqlserver-ex
    ///
    /// * sqlserver-web
    public var engine: Swift.String?
    /// The database engine version to return. Example: 5.1.49
    public var engineVersion: Swift.String?
    /// A filter that specifies one or more DB engine versions to describe. Supported filters:
    ///
    /// * db-parameter-group-family - Accepts parameter groups family names. The results list only includes information about the DB engine versions for these parameter group families.
    ///
    /// * engine - Accepts engine names. The results list only includes information about the DB engine versions for these engines.
    ///
    /// * engine-mode - Accepts DB engine modes. The results list only includes information about the DB engine versions for these engine modes. Valid DB engine modes are the following:
    ///
    /// * global
    ///
    /// * multimaster
    ///
    /// * parallelquery
    ///
    /// * provisioned
    ///
    /// * serverless
    ///
    ///
    ///
    ///
    /// * engine-version - Accepts engine versions. The results list only includes information about the DB engine versions for these engine versions.
    ///
    /// * status - Accepts engine version statuses. The results list only includes information about the DB engine versions for these statuses. Valid statuses are the following:
    ///
    /// * available
    ///
    /// * deprecated
    public var filters: [RdsClientTypes.Filter]?
    /// A value that indicates whether to include engine versions that aren't available in the list. The default is to list only available engine versions.
    public var includeAll: Swift.Bool?
    /// A value that indicates whether to list the supported character sets for each engine version. If this parameter is enabled and the requested engine supports the CharacterSetName parameter for CreateDBInstance, the response includes a list of supported character sets for each engine version. For RDS Custom, the default is not to list supported character sets. If you set ListSupportedCharacterSets to true, RDS Custom returns no results.
    public var listSupportedCharacterSets: Swift.Bool?
    /// A value that indicates whether to list the supported time zones for each engine version. If this parameter is enabled and the requested engine supports the TimeZone parameter for CreateDBInstance, the response includes a list of supported time zones for each engine version. For RDS Custom, the default is not to list supported time zones. If you set ListSupportedTimezones to true, RDS Custom returns no results.
    public var listSupportedTimezones: Swift.Bool?
    /// An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
    public var marker: Swift.String?
    /// The maximum number of records to include in the response. If more than the MaxRecords value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results. Default: 100 Constraints: Minimum 20, maximum 100.
    public var maxRecords: Swift.Int?

    public init (
        dBParameterGroupFamily: Swift.String? = nil,
        defaultOnly: Swift.Bool = false,
        engine: Swift.String? = nil,
        engineVersion: Swift.String? = nil,
        filters: [RdsClientTypes.Filter]? = nil,
        includeAll: Swift.Bool? = nil,
        listSupportedCharacterSets: Swift.Bool? = nil,
        listSupportedTimezones: Swift.Bool? = nil,
        marker: Swift.String? = nil,
        maxRecords: Swift.Int? = nil
    )
    {
        self.dBParameterGroupFamily = dBParameterGroupFamily
        self.defaultOnly = defaultOnly
        self.engine = engine
        self.engineVersion = engineVersion
        self.filters = filters
        self.includeAll = includeAll
        self.listSupportedCharacterSets = listSupportedCharacterSets
        self.listSupportedTimezones = listSupportedTimezones
        self.marker = marker
        self.maxRecords = maxRecords
    }
}
