// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDBSnapshotsOutputResponseBody: Swift.Equatable {
    let marker: Swift.String?
    let dBSnapshots: [RdsClientTypes.DBSnapshot]?
}

extension DescribeDBSnapshotsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dBSnapshots = "DBSnapshots"
        case marker = "Marker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("DescribeDBSnapshotsResult"))
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
        if containerValues.contains(.dBSnapshots) {
            struct KeyVal0{struct DBSnapshot{}}
            let dBSnapshotsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.DBSnapshot>.CodingKeys.self, forKey: .dBSnapshots)
            if let dBSnapshotsWrappedContainer = dBSnapshotsWrappedContainer {
                let dBSnapshotsContainer = try dBSnapshotsWrappedContainer.decodeIfPresent([RdsClientTypes.DBSnapshot].self, forKey: .member)
                var dBSnapshotsBuffer:[RdsClientTypes.DBSnapshot]? = nil
                if let dBSnapshotsContainer = dBSnapshotsContainer {
                    dBSnapshotsBuffer = [RdsClientTypes.DBSnapshot]()
                    for structureContainer0 in dBSnapshotsContainer {
                        dBSnapshotsBuffer?.append(structureContainer0)
                    }
                }
                dBSnapshots = dBSnapshotsBuffer
            } else {
                dBSnapshots = []
            }
        } else {
            dBSnapshots = nil
        }
    }
}
