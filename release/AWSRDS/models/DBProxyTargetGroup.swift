// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RdsClientTypes {
    /// Represents a set of RDS DB instances, Aurora DB clusters, or both that a proxy can connect to. Currently, each target group is associated with exactly one RDS DB instance or Aurora DB cluster. This data type is used as a response element in the DescribeDBProxyTargetGroups action.
    public struct DBProxyTargetGroup: Swift.Equatable {
        /// The settings that determine the size and behavior of the connection pool for the target group.
        public var connectionPoolConfig: RdsClientTypes.ConnectionPoolConfigurationInfo?
        /// The date and time when the target group was first created.
        public var createdDate: ClientRuntime.Date?
        /// The identifier for the RDS proxy associated with this target group.
        public var dBProxyName: Swift.String?
        /// Whether this target group is the first one used for connection requests by the associated proxy. Because each proxy is currently associated with a single target group, currently this setting is always true.
        public var isDefault: Swift.Bool
        /// The current status of this target group. A status of available means the target group is correctly associated with a database. Other values indicate that you must wait for the target group to be ready, or take some action to resolve an issue.
        public var status: Swift.String?
        /// The Amazon Resource Name (ARN) representing the target group.
        public var targetGroupArn: Swift.String?
        /// The identifier for the target group. This name must be unique for all target groups owned by your Amazon Web Services account in the specified Amazon Web Services Region.
        public var targetGroupName: Swift.String?
        /// The date and time when the target group was last updated.
        public var updatedDate: ClientRuntime.Date?

        public init (
            connectionPoolConfig: RdsClientTypes.ConnectionPoolConfigurationInfo? = nil,
            createdDate: ClientRuntime.Date? = nil,
            dBProxyName: Swift.String? = nil,
            isDefault: Swift.Bool = false,
            status: Swift.String? = nil,
            targetGroupArn: Swift.String? = nil,
            targetGroupName: Swift.String? = nil,
            updatedDate: ClientRuntime.Date? = nil
        )
        {
            self.connectionPoolConfig = connectionPoolConfig
            self.createdDate = createdDate
            self.dBProxyName = dBProxyName
            self.isDefault = isDefault
            self.status = status
            self.targetGroupArn = targetGroupArn
            self.targetGroupName = targetGroupName
            self.updatedDate = updatedDate
        }
    }

}
