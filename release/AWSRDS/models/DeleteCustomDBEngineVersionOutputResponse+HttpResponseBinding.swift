// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeleteCustomDBEngineVersionOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: DeleteCustomDBEngineVersionOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.createTime = output.createTime
            self.dBEngineDescription = output.dBEngineDescription
            self.dBEngineVersionArn = output.dBEngineVersionArn
            self.dBEngineVersionDescription = output.dBEngineVersionDescription
            self.dBParameterGroupFamily = output.dBParameterGroupFamily
            self.databaseInstallationFilesS3BucketName = output.databaseInstallationFilesS3BucketName
            self.databaseInstallationFilesS3Prefix = output.databaseInstallationFilesS3Prefix
            self.defaultCharacterSet = output.defaultCharacterSet
            self.engine = output.engine
            self.engineVersion = output.engineVersion
            self.exportableLogTypes = output.exportableLogTypes
            self.kMSKeyId = output.kMSKeyId
            self.majorEngineVersion = output.majorEngineVersion
            self.status = output.status
            self.supportedCharacterSets = output.supportedCharacterSets
            self.supportedEngineModes = output.supportedEngineModes
            self.supportedFeatureNames = output.supportedFeatureNames
            self.supportedNcharCharacterSets = output.supportedNcharCharacterSets
            self.supportedTimezones = output.supportedTimezones
            self.supportsBabelfish = output.supportsBabelfish
            self.supportsGlobalDatabases = output.supportsGlobalDatabases
            self.supportsLogExportsToCloudwatchLogs = output.supportsLogExportsToCloudwatchLogs
            self.supportsParallelQuery = output.supportsParallelQuery
            self.supportsReadReplica = output.supportsReadReplica
            self.tagList = output.tagList
            self.validUpgradeTarget = output.validUpgradeTarget
        } else {
            self.createTime = nil
            self.dBEngineDescription = nil
            self.dBEngineVersionArn = nil
            self.dBEngineVersionDescription = nil
            self.dBParameterGroupFamily = nil
            self.databaseInstallationFilesS3BucketName = nil
            self.databaseInstallationFilesS3Prefix = nil
            self.defaultCharacterSet = nil
            self.engine = nil
            self.engineVersion = nil
            self.exportableLogTypes = nil
            self.kMSKeyId = nil
            self.majorEngineVersion = nil
            self.status = nil
            self.supportedCharacterSets = nil
            self.supportedEngineModes = nil
            self.supportedFeatureNames = nil
            self.supportedNcharCharacterSets = nil
            self.supportedTimezones = nil
            self.supportsBabelfish = false
            self.supportsGlobalDatabases = false
            self.supportsLogExportsToCloudwatchLogs = false
            self.supportsParallelQuery = false
            self.supportsReadReplica = false
            self.tagList = nil
            self.validUpgradeTarget = nil
        }
    }
}
