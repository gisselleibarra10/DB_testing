// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResetDBParameterGroupInputBody: Swift.Equatable {
    let dBParameterGroupName: Swift.String?
    let resetAllParameters: Swift.Bool
    let parameters: [RdsClientTypes.Parameter]?
}

extension ResetDBParameterGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dBParameterGroupName = "DBParameterGroupName"
        case parameters = "Parameters"
        case resetAllParameters = "ResetAllParameters"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dBParameterGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dBParameterGroupName)
        dBParameterGroupName = dBParameterGroupNameDecoded
        let resetAllParametersDecoded = try containerValues.decode(Swift.Bool.self, forKey: .resetAllParameters)
        resetAllParameters = resetAllParametersDecoded
        if containerValues.contains(.parameters) {
            struct KeyVal0{struct Parameter{}}
            let parametersWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.Parameter>.CodingKeys.self, forKey: .parameters)
            if let parametersWrappedContainer = parametersWrappedContainer {
                let parametersContainer = try parametersWrappedContainer.decodeIfPresent([RdsClientTypes.Parameter].self, forKey: .member)
                var parametersBuffer:[RdsClientTypes.Parameter]? = nil
                if let parametersContainer = parametersContainer {
                    parametersBuffer = [RdsClientTypes.Parameter]()
                    for structureContainer0 in parametersContainer {
                        parametersBuffer?.append(structureContainer0)
                    }
                }
                parameters = parametersBuffer
            } else {
                parameters = []
            }
        } else {
            parameters = nil
        }
    }
}
