// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RdsClientTypes {
    /// Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values.
    public struct OptionSetting: Swift.Equatable {
        /// The allowed values of the option setting.
        public var allowedValues: Swift.String?
        /// The DB engine specific parameter type.
        public var applyType: Swift.String?
        /// The data type of the option setting.
        public var dataType: Swift.String?
        /// The default value of the option setting.
        public var defaultValue: Swift.String?
        /// The description of the option setting.
        public var description: Swift.String?
        /// Indicates if the option setting is part of a collection.
        public var isCollection: Swift.Bool
        /// A Boolean value that, when true, indicates the option setting can be modified from the default.
        public var isModifiable: Swift.Bool
        /// The name of the option that has settings that you can set.
        public var name: Swift.String?
        /// The current value of the option setting.
        public var value: Swift.String?

        public init (
            allowedValues: Swift.String? = nil,
            applyType: Swift.String? = nil,
            dataType: Swift.String? = nil,
            defaultValue: Swift.String? = nil,
            description: Swift.String? = nil,
            isCollection: Swift.Bool = false,
            isModifiable: Swift.Bool = false,
            name: Swift.String? = nil,
            value: Swift.String? = nil
        )
        {
            self.allowedValues = allowedValues
            self.applyType = applyType
            self.dataType = dataType
            self.defaultValue = defaultValue
            self.description = description
            self.isCollection = isCollection
            self.isModifiable = isModifiable
            self.name = name
            self.value = value
        }
    }

}
