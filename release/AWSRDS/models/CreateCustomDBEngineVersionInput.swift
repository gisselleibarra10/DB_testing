// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateCustomDBEngineVersionInput: Swift.Equatable {
    /// The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is my-custom-installation-files.
    /// This member is required.
    public var databaseInstallationFilesS3BucketName: Swift.String?
    /// The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is 123456789012/cev1. If this setting isn't specified, no prefix is assumed.
    public var databaseInstallationFilesS3Prefix: Swift.String?
    /// An optional description of your CEV.
    public var description: Swift.String?
    /// The database engine to use for your custom engine version (CEV). The only supported value is custom-oracle-ee.
    /// This member is required.
    public var engine: Swift.String?
    /// The name of your CEV. The name format is 19.customized_string . For example, a valid name is 19.my_cev1. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of Engine and EngineVersion is unique per customer per Region.
    /// This member is required.
    public var engineVersion: Swift.String?
    /// The Amazon Web Services KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS. If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in [ Creating a symmetric encryption KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk) in the Amazon Web Services Key Management Service Developer Guide. You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.
    /// This member is required.
    public var kMSKeyId: Swift.String?
    /// The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed. The following JSON fields are valid: MediaImportTemplateVersion Version of the CEV manifest. The date is in the format YYYY-MM-DD. databaseInstallationFileNames Ordered list of installation files for the CEV. opatchFileNames Ordered list of OPatch installers used for the Oracle DB engine. psuRuPatchFileNames The PSU and RU patches for this CEV. OtherPatchFileNames The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches. For more information, see [ Creating the CEV manifest](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest) in the Amazon RDS User Guide.
    /// This member is required.
    public var manifest: Swift.String?
    /// A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the Amazon RDS User Guide.
    public var tags: [RdsClientTypes.Tag]?

    public init (
        databaseInstallationFilesS3BucketName: Swift.String? = nil,
        databaseInstallationFilesS3Prefix: Swift.String? = nil,
        description: Swift.String? = nil,
        engine: Swift.String? = nil,
        engineVersion: Swift.String? = nil,
        kMSKeyId: Swift.String? = nil,
        manifest: Swift.String? = nil,
        tags: [RdsClientTypes.Tag]? = nil
    )
    {
        self.databaseInstallationFilesS3BucketName = databaseInstallationFilesS3BucketName
        self.databaseInstallationFilesS3Prefix = databaseInstallationFilesS3Prefix
        self.description = description
        self.engine = engine
        self.engineVersion = engineVersion
        self.kMSKeyId = kMSKeyId
        self.manifest = manifest
        self.tags = tags
    }
}
