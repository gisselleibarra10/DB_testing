// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifyDBProxyInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let auth = auth {
            var authContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Auth"))
            for (index0, userauthconfig0) in auth.enumerated() {
                try authContainer.encode(userauthconfig0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let dBProxyName = dBProxyName {
            try container.encode(dBProxyName, forKey: ClientRuntime.Key("DBProxyName"))
        }
        if let debugLogging = debugLogging {
            try container.encode(debugLogging, forKey: ClientRuntime.Key("DebugLogging"))
        }
        if let idleClientTimeout = idleClientTimeout {
            try container.encode(idleClientTimeout, forKey: ClientRuntime.Key("IdleClientTimeout"))
        }
        if let newDBProxyName = newDBProxyName {
            try container.encode(newDBProxyName, forKey: ClientRuntime.Key("NewDBProxyName"))
        }
        if let requireTLS = requireTLS {
            try container.encode(requireTLS, forKey: ClientRuntime.Key("RequireTLS"))
        }
        if let roleArn = roleArn {
            try container.encode(roleArn, forKey: ClientRuntime.Key("RoleArn"))
        }
        if let securityGroups = securityGroups {
            var securityGroupsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("SecurityGroups"))
            for (index0, string0) in securityGroups.enumerated() {
                try securityGroupsContainer.encode(string0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("ModifyDBProxy", forKey:ClientRuntime.Key("Action"))
        try container.encode("2014-10-31", forKey:ClientRuntime.Key("Version"))
    }
}
