// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyDBProxyInput: Swift.Equatable {
    /// The new authentication settings for the DBProxy.
    public var auth: [RdsClientTypes.UserAuthConfig]?
    /// The identifier for the DBProxy to modify.
    /// This member is required.
    public var dBProxyName: Swift.String?
    /// Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.
    public var debugLogging: Swift.Bool?
    /// The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.
    public var idleClientTimeout: Swift.Int?
    /// The new identifier for the DBProxy. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
    public var newDBProxyName: Swift.String?
    /// Whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy, even if the associated database doesn't use TLS.
    public var requireTLS: Swift.Bool?
    /// The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in Amazon Web Services Secrets Manager.
    public var roleArn: Swift.String?
    /// The new list of security groups for the DBProxy.
    public var securityGroups: [Swift.String]?

    public init (
        auth: [RdsClientTypes.UserAuthConfig]? = nil,
        dBProxyName: Swift.String? = nil,
        debugLogging: Swift.Bool? = nil,
        idleClientTimeout: Swift.Int? = nil,
        newDBProxyName: Swift.String? = nil,
        requireTLS: Swift.Bool? = nil,
        roleArn: Swift.String? = nil,
        securityGroups: [Swift.String]? = nil
    )
    {
        self.auth = auth
        self.dBProxyName = dBProxyName
        self.debugLogging = debugLogging
        self.idleClientTimeout = idleClientTimeout
        self.newDBProxyName = newDBProxyName
        self.requireTLS = requireTLS
        self.roleArn = roleArn
        self.securityGroups = securityGroups
    }
}
