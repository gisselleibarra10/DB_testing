// Code generated by smithy-swift-codegen. DO NOT EDIT!



///
public struct DescribeDBLogFilesInput: Swift.Equatable {
    /// The customer-assigned name of the DB instance that contains the log files you want to list. Constraints:
    ///
    /// * Must match the identifier of an existing DBInstance.
    /// This member is required.
    public var dBInstanceIdentifier: Swift.String?
    /// Filters the available log files for files written since the specified date, in POSIX timestamp format with milliseconds.
    public var fileLastWritten: Swift.Int
    /// Filters the available log files for files larger than the specified size.
    public var fileSize: Swift.Int
    /// Filters the available log files for log file names that contain the specified string.
    public var filenameContains: Swift.String?
    /// This parameter isn't currently supported.
    public var filters: [RdsClientTypes.Filter]?
    /// The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords.
    public var marker: Swift.String?
    /// The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.
    public var maxRecords: Swift.Int?

    public init (
        dBInstanceIdentifier: Swift.String? = nil,
        fileLastWritten: Swift.Int = 0,
        fileSize: Swift.Int = 0,
        filenameContains: Swift.String? = nil,
        filters: [RdsClientTypes.Filter]? = nil,
        marker: Swift.String? = nil,
        maxRecords: Swift.Int? = nil
    )
    {
        self.dBInstanceIdentifier = dBInstanceIdentifier
        self.fileLastWritten = fileLastWritten
        self.fileSize = fileSize
        self.filenameContains = filenameContains
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
    }
}
