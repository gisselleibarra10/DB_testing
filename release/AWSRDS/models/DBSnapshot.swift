// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RdsClientTypes {
    /// Contains the details of an Amazon RDS DB snapshot. This data type is used as a response element in the DescribeDBSnapshots action.
    public struct DBSnapshot: Swift.Equatable {
        /// Specifies the allocated storage size in gibibytes (GiB).
        public var allocatedStorage: Swift.Int
        /// Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.
        public var availabilityZone: Swift.String?
        /// Specifies the DB instance identifier of the DB instance this DB snapshot was created from.
        public var dBInstanceIdentifier: Swift.String?
        /// The Amazon Resource Name (ARN) for the DB snapshot.
        public var dBSnapshotArn: Swift.String?
        /// Specifies the identifier for the DB snapshot.
        public var dBSnapshotIdentifier: Swift.String?
        /// The identifier for the source DB instance, which can't be changed and which is unique to an Amazon Web Services Region.
        public var dbiResourceId: Swift.String?
        /// Specifies whether the DB snapshot is encrypted.
        public var encrypted: Swift.Bool
        /// Specifies the name of the database engine.
        public var engine: Swift.String?
        /// Specifies the version of the database engine.
        public var engineVersion: Swift.String?
        /// True if mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
        public var iAMDatabaseAuthenticationEnabled: Swift.Bool
        /// Specifies the time in Coordinated Universal Time (UTC) when the DB instance, from which the snapshot was taken, was created.
        public var instanceCreateTime: ClientRuntime.Date?
        /// Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.
        public var iops: Swift.Int?
        /// If Encrypted is true, the Amazon Web Services KMS key identifier for the encrypted DB snapshot. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
        public var kmsKeyId: Swift.String?
        /// License model information for the restored DB instance.
        public var licenseModel: Swift.String?
        /// Provides the master username for the DB snapshot.
        public var masterUsername: Swift.String?
        /// Provides the option group name for the DB snapshot.
        public var optionGroupName: Swift.String?
        /// Specifies the time of the CreateDBSnapshot operation in Coordinated Universal Time (UTC). Doesn't change when the snapshot is copied.
        public var originalSnapshotCreateTime: ClientRuntime.Date?
        /// The percentage of the estimated data that has been transferred.
        public var percentProgress: Swift.Int
        /// Specifies the port that the database engine was listening on at the time of the snapshot.
        public var port: Swift.Int
        /// The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB snapshot was created.
        public var processorFeatures: [RdsClientTypes.ProcessorFeature]?
        /// Specifies when the snapshot was taken in Coordinated Universal Time (UTC). Changes for the copy when the snapshot is copied.
        public var snapshotCreateTime: ClientRuntime.Date?
        /// The timestamp of the most recent transaction applied to the database that you're backing up. Thus, if you restore a snapshot, SnapshotDatabaseTime is the most recent transaction in the restored DB instance. In contrast, originalSnapshotCreateTime specifies the system time that the snapshot completed. If you back up a read replica, you can determine the replica lag by comparing SnapshotDatabaseTime with originalSnapshotCreateTime. For example, if originalSnapshotCreateTime is two hours later than SnapshotDatabaseTime, then the replica lag is two hours.
        public var snapshotDatabaseTime: ClientRuntime.Date?
        /// Specifies where manual snapshots are stored: Amazon Web Services Outposts or the Amazon Web Services Region.
        public var snapshotTarget: Swift.String?
        /// Provides the type of the DB snapshot.
        public var snapshotType: Swift.String?
        /// The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has a value in the case of a cross-account or cross-Region copy.
        public var sourceDBSnapshotIdentifier: Swift.String?
        /// The Amazon Web Services Region that the DB snapshot was created in or copied from.
        public var sourceRegion: Swift.String?
        /// Specifies the status of this DB snapshot.
        public var status: Swift.String?
        /// Specifies the storage type associated with DB snapshot.
        public var storageType: Swift.String?
        /// A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the Amazon RDS User Guide.
        public var tagList: [RdsClientTypes.Tag]?
        /// The ARN from the key store with which to associate the instance for TDE encryption.
        public var tdeCredentialArn: Swift.String?
        /// The time zone of the DB snapshot. In most cases, the Timezone element is empty. Timezone content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.
        public var timezone: Swift.String?
        /// Provides the VPC ID associated with the DB snapshot.
        public var vpcId: Swift.String?

        public init (
            allocatedStorage: Swift.Int = 0,
            availabilityZone: Swift.String? = nil,
            dBInstanceIdentifier: Swift.String? = nil,
            dBSnapshotArn: Swift.String? = nil,
            dBSnapshotIdentifier: Swift.String? = nil,
            dbiResourceId: Swift.String? = nil,
            encrypted: Swift.Bool = false,
            engine: Swift.String? = nil,
            engineVersion: Swift.String? = nil,
            iAMDatabaseAuthenticationEnabled: Swift.Bool = false,
            instanceCreateTime: ClientRuntime.Date? = nil,
            iops: Swift.Int? = nil,
            kmsKeyId: Swift.String? = nil,
            licenseModel: Swift.String? = nil,
            masterUsername: Swift.String? = nil,
            optionGroupName: Swift.String? = nil,
            originalSnapshotCreateTime: ClientRuntime.Date? = nil,
            percentProgress: Swift.Int = 0,
            port: Swift.Int = 0,
            processorFeatures: [RdsClientTypes.ProcessorFeature]? = nil,
            snapshotCreateTime: ClientRuntime.Date? = nil,
            snapshotDatabaseTime: ClientRuntime.Date? = nil,
            snapshotTarget: Swift.String? = nil,
            snapshotType: Swift.String? = nil,
            sourceDBSnapshotIdentifier: Swift.String? = nil,
            sourceRegion: Swift.String? = nil,
            status: Swift.String? = nil,
            storageType: Swift.String? = nil,
            tagList: [RdsClientTypes.Tag]? = nil,
            tdeCredentialArn: Swift.String? = nil,
            timezone: Swift.String? = nil,
            vpcId: Swift.String? = nil
        )
        {
            self.allocatedStorage = allocatedStorage
            self.availabilityZone = availabilityZone
            self.dBInstanceIdentifier = dBInstanceIdentifier
            self.dBSnapshotArn = dBSnapshotArn
            self.dBSnapshotIdentifier = dBSnapshotIdentifier
            self.dbiResourceId = dbiResourceId
            self.encrypted = encrypted
            self.engine = engine
            self.engineVersion = engineVersion
            self.iAMDatabaseAuthenticationEnabled = iAMDatabaseAuthenticationEnabled
            self.instanceCreateTime = instanceCreateTime
            self.iops = iops
            self.kmsKeyId = kmsKeyId
            self.licenseModel = licenseModel
            self.masterUsername = masterUsername
            self.optionGroupName = optionGroupName
            self.originalSnapshotCreateTime = originalSnapshotCreateTime
            self.percentProgress = percentProgress
            self.port = port
            self.processorFeatures = processorFeatures
            self.snapshotCreateTime = snapshotCreateTime
            self.snapshotDatabaseTime = snapshotDatabaseTime
            self.snapshotTarget = snapshotTarget
            self.snapshotType = snapshotType
            self.sourceDBSnapshotIdentifier = sourceDBSnapshotIdentifier
            self.sourceRegion = sourceRegion
            self.status = status
            self.storageType = storageType
            self.tagList = tagList
            self.tdeCredentialArn = tdeCredentialArn
            self.timezone = timezone
            self.vpcId = vpcId
        }
    }

}
