// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyDBProxyTargetGroupInputBody: Swift.Equatable {
    let targetGroupName: Swift.String?
    let dBProxyName: Swift.String?
    let connectionPoolConfig: RdsClientTypes.ConnectionPoolConfiguration?
    let newName: Swift.String?
}

extension ModifyDBProxyTargetGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectionPoolConfig = "ConnectionPoolConfig"
        case dBProxyName = "DBProxyName"
        case newName = "NewName"
        case targetGroupName = "TargetGroupName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetGroupName)
        targetGroupName = targetGroupNameDecoded
        let dBProxyNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dBProxyName)
        dBProxyName = dBProxyNameDecoded
        let connectionPoolConfigDecoded = try containerValues.decodeIfPresent(RdsClientTypes.ConnectionPoolConfiguration.self, forKey: .connectionPoolConfig)
        connectionPoolConfig = connectionPoolConfigDecoded
        let newNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .newName)
        newName = newNameDecoded
    }
}
