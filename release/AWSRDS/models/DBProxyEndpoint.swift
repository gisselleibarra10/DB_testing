// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RdsClientTypes {
    /// The data structure representing an endpoint associated with a DB proxy. RDS automatically creates one endpoint for each DB proxy. For Aurora DB clusters, you can associate additional endpoints with the same DB proxy. These endpoints can be read/write or read-only. They can also reside in different VPCs than the associated DB proxy. This data type is used as a response element in the DescribeDBProxyEndpoints operation.
    public struct DBProxyEndpoint: Swift.Equatable {
        /// The date and time when the DB proxy endpoint was first created.
        public var createdDate: ClientRuntime.Date?
        /// The Amazon Resource Name (ARN) for the DB proxy endpoint.
        public var dBProxyEndpointArn: Swift.String?
        /// The name for the DB proxy endpoint. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
        public var dBProxyEndpointName: Swift.String?
        /// The identifier for the DB proxy that is associated with this DB proxy endpoint.
        public var dBProxyName: Swift.String?
        /// The endpoint that you can use to connect to the DB proxy. You include the endpoint value in the connection string for a database client application.
        public var endpoint: Swift.String?
        /// A value that indicates whether this endpoint is the default endpoint for the associated DB proxy. Default DB proxy endpoints always have read/write capability. Other endpoints that you associate with the DB proxy can be either read/write or read-only.
        public var isDefault: Swift.Bool
        /// The current status of this DB proxy endpoint. A status of available means the endpoint is ready to handle requests. Other values indicate that you must wait for the endpoint to be ready, or take some action to resolve an issue.
        public var status: RdsClientTypes.DBProxyEndpointStatus?
        /// A value that indicates whether the DB proxy endpoint can be used for read/write or read-only operations.
        public var targetRole: RdsClientTypes.DBProxyEndpointTargetRole?
        /// Provides the VPC ID of the DB proxy endpoint.
        public var vpcId: Swift.String?
        /// Provides a list of VPC security groups that the DB proxy endpoint belongs to.
        public var vpcSecurityGroupIds: [Swift.String]?
        /// The EC2 subnet IDs for the DB proxy endpoint.
        public var vpcSubnetIds: [Swift.String]?

        public init (
            createdDate: ClientRuntime.Date? = nil,
            dBProxyEndpointArn: Swift.String? = nil,
            dBProxyEndpointName: Swift.String? = nil,
            dBProxyName: Swift.String? = nil,
            endpoint: Swift.String? = nil,
            isDefault: Swift.Bool = false,
            status: RdsClientTypes.DBProxyEndpointStatus? = nil,
            targetRole: RdsClientTypes.DBProxyEndpointTargetRole? = nil,
            vpcId: Swift.String? = nil,
            vpcSecurityGroupIds: [Swift.String]? = nil,
            vpcSubnetIds: [Swift.String]? = nil
        )
        {
            self.createdDate = createdDate
            self.dBProxyEndpointArn = dBProxyEndpointArn
            self.dBProxyEndpointName = dBProxyEndpointName
            self.dBProxyName = dBProxyName
            self.endpoint = endpoint
            self.isDefault = isDefault
            self.status = status
            self.targetRole = targetRole
            self.vpcId = vpcId
            self.vpcSecurityGroupIds = vpcSecurityGroupIds
            self.vpcSubnetIds = vpcSubnetIds
        }
    }

}
