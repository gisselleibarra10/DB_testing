// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RdsClientTypes {
    /// Contains the details of an Amazon RDS DB instance. This data type is used as a response element in the operations CreateDBInstance, CreateDBInstanceReadReplica, DeleteDBInstance, DescribeDBInstances, ModifyDBInstance, PromoteReadReplica, RebootDBInstance, RestoreDBInstanceFromDBSnapshot, RestoreDBInstanceFromS3, RestoreDBInstanceToPointInTime, StartDBInstance, and StopDBInstance.
    public struct DBInstance: Swift.Equatable {
        /// Indicates whether engine-native audit fields are included in the database activity stream.
        public var activityStreamEngineNativeAuditFieldsIncluded: Swift.Bool?
        /// The name of the Amazon Kinesis data stream used for the database activity stream.
        public var activityStreamKinesisStreamName: Swift.String?
        /// The Amazon Web Services KMS key identifier used for encrypting messages in the database activity stream. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
        public var activityStreamKmsKeyId: Swift.String?
        /// The mode of the database activity stream. Database events such as a change or access generate an activity stream event. RDS for Oracle always handles these events asynchronously.
        public var activityStreamMode: RdsClientTypes.ActivityStreamMode?
        /// The status of the policy state of the activity stream.
        public var activityStreamPolicyStatus: RdsClientTypes.ActivityStreamPolicyStatus?
        /// The status of the database activity stream.
        public var activityStreamStatus: RdsClientTypes.ActivityStreamStatus?
        /// Specifies the allocated storage size specified in gibibytes (GiB).
        public var allocatedStorage: Swift.Int
        /// The Amazon Web Services Identity and Access Management (IAM) roles associated with the DB instance.
        public var associatedRoles: [RdsClientTypes.DBInstanceRole]?
        /// A value that indicates that minor version patches are applied automatically.
        public var autoMinorVersionUpgrade: Swift.Bool
        /// The time when a stopped DB instance is restarted automatically.
        public var automaticRestartTime: ClientRuntime.Date?
        /// The automation mode of the RDS Custom DB instance: full or all paused. If full, the DB instance automates monitoring and instance recovery. If all paused, the instance pauses automation for the duration set by --resume-full-automation-mode-minutes.
        public var automationMode: RdsClientTypes.AutomationMode?
        /// Specifies the name of the Availability Zone the DB instance is located in.
        public var availabilityZone: Swift.String?
        /// The Amazon Resource Name (ARN) of the recovery point in Amazon Web Services Backup.
        public var awsBackupRecoveryPointArn: Swift.String?
        /// Specifies the number of days for which automatic DB snapshots are retained.
        public var backupRetentionPeriod: Swift.Int
        /// Specifies where automated backups and manual snapshots are stored: Amazon Web Services Outposts or the Amazon Web Services Region.
        public var backupTarget: Swift.String?
        /// The identifier of the CA certificate for this DB instance.
        public var cACertificateIdentifier: Swift.String?
        /// If present, specifies the name of the character set that this instance is associated with.
        public var characterSetName: Swift.String?
        /// Specifies whether tags are copied from the DB instance to snapshots of the DB instance. Amazon Aurora Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster.
        public var copyTagsToSnapshot: Swift.Bool
        /// The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:
        ///
        /// * The profile must exist in your account.
        ///
        /// * The profile must have an IAM role that Amazon EC2 has permissions to assume.
        ///
        /// * The instance profile name and the associated IAM role name must start with the prefix AWSRDSCustom.
        ///
        ///
        /// For the list of permissions required for the IAM role, see [ Configure IAM and your VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc) in the Amazon RDS User Guide.
        public var customIamInstanceProfile: Swift.String?
        /// Specifies whether a customer-owned IP address (CoIP) is enabled for an RDS on Outposts DB instance. A CoIP provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network. For more information about RDS on Outposts, see [Working with Amazon RDS on Amazon Web Services Outposts](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html) in the Amazon RDS User Guide. For more information about CoIPs, see [Customer-owned IP addresses](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing) in the Amazon Web Services Outposts User Guide.
        public var customerOwnedIpEnabled: Swift.Bool?
        /// If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.
        public var dBClusterIdentifier: Swift.String?
        /// The Amazon Resource Name (ARN) for the DB instance.
        public var dBInstanceArn: Swift.String?
        /// The list of replicated automated backups associated with the DB instance.
        public var dBInstanceAutomatedBackupsReplications: [RdsClientTypes.DBInstanceAutomatedBackupsReplication]?
        /// Contains the name of the compute and memory capacity class of the DB instance.
        public var dBInstanceClass: Swift.String?
        /// Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.
        public var dBInstanceIdentifier: Swift.String?
        /// Specifies the current state of this database. For information about DB instance statuses, see [Viewing DB instance status](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/accessing-monitoring.html#Overview.DBInstance.Status) in the Amazon RDS User Guide.
        public var dBInstanceStatus: Swift.String?
        /// The meaning of this parameter differs according to the database engine you use. MySQL, MariaDB, SQL Server, PostgreSQL Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance. Type: String Oracle Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.
        public var dBName: Swift.String?
        /// Provides the list of DB parameter groups applied to this DB instance.
        public var dBParameterGroups: [RdsClientTypes.DBParameterGroupStatus]?
        /// A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.
        public var dBSecurityGroups: [RdsClientTypes.DBSecurityGroupMembership]?
        /// Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.
        public var dBSubnetGroup: RdsClientTypes.DBSubnetGroup?
        /// Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.
        public var dbInstancePort: Swift.Int
        /// The Amazon Web Services Region-unique, immutable identifier for the DB instance. This identifier is found in Amazon Web Services CloudTrail log entries whenever the Amazon Web Services KMS key for the DB instance is accessed.
        public var dbiResourceId: Swift.String?
        /// Indicates if the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. For more information, see [ Deleting a DB Instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).
        public var deletionProtection: Swift.Bool
        /// The Active Directory Domain membership records associated with the DB instance.
        public var domainMemberships: [RdsClientTypes.DomainMembership]?
        /// A list of log types that this DB instance is configured to export to CloudWatch Logs. Log types vary by DB engine. For information about the log types for each DB engine, see [Amazon RDS Database Log Files](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html) in the Amazon RDS User Guide.
        public var enabledCloudwatchLogsExports: [Swift.String]?
        /// Specifies the connection endpoint. The endpoint might not be shown for instances whose status is creating.
        public var endpoint: RdsClientTypes.Endpoint?
        /// The name of the database engine to be used for this DB instance.
        public var engine: Swift.String?
        /// Indicates the database engine version.
        public var engineVersion: Swift.String?
        /// The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.
        public var enhancedMonitoringResourceArn: Swift.String?
        /// True if mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false. IAM database authentication can be enabled for the following database engines
        ///
        /// * For MySQL 5.6, minor version 5.6.34 or higher
        ///
        /// * For MySQL 5.7, minor version 5.7.16 or higher
        ///
        /// * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.
        public var iAMDatabaseAuthenticationEnabled: Swift.Bool
        /// Provides the date and time the DB instance was created.
        public var instanceCreateTime: ClientRuntime.Date?
        /// Specifies the Provisioned IOPS (I/O operations per second) value.
        public var iops: Swift.Int?
        /// If StorageEncrypted is true, the Amazon Web Services KMS key identifier for the encrypted DB instance. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
        public var kmsKeyId: Swift.String?
        /// Specifies the latest time to which a database can be restored with point-in-time restore.
        public var latestRestorableTime: ClientRuntime.Date?
        /// License model information for this DB instance. This setting doesn't apply to RDS Custom.
        public var licenseModel: Swift.String?
        /// Specifies the listener connection endpoint for SQL Server Always On.
        public var listenerEndpoint: RdsClientTypes.Endpoint?
        /// Contains the master username for the DB instance.
        public var masterUsername: Swift.String?
        /// The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.
        public var maxAllocatedStorage: Swift.Int?
        /// The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.
        public var monitoringInterval: Swift.Int?
        /// The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.
        public var monitoringRoleArn: Swift.String?
        /// Specifies if the DB instance is a Multi-AZ deployment. This setting doesn't apply to RDS Custom.
        public var multiAZ: Swift.Bool
        /// The name of the NCHAR character set for the Oracle DB instance. This character set specifies the Unicode encoding for data stored in table columns of type NCHAR, NCLOB, or NVARCHAR2.
        public var ncharCharacterSetName: Swift.String?
        /// The network type of the DB instance. Valid values:
        ///
        /// * IPV4
        ///
        /// * DUAL
        ///
        ///
        /// The network type is determined by the DBSubnetGroup specified for the DB instance. A DBSubnetGroup can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (DUAL). For more information, see [ Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the Amazon RDS User Guide and [ Working with a DB instance in a VPC](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html) in the Amazon Aurora User Guide.
        public var networkType: Swift.String?
        /// Provides the list of option group memberships for this DB instance.
        public var optionGroupMemberships: [RdsClientTypes.OptionGroupMembership]?
        /// A value that specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.
        public var pendingModifiedValues: RdsClientTypes.PendingModifiedValues?
        /// True if Performance Insights is enabled for the DB instance, and otherwise false.
        public var performanceInsightsEnabled: Swift.Bool?
        /// The Amazon Web Services KMS key identifier for encryption of Performance Insights data. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
        public var performanceInsightsKMSKeyId: Swift.String?
        /// The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:
        ///
        /// * 7
        ///
        /// * month * 31, where month is a number of months from 1-23
        ///
        /// * 731
        ///
        ///
        /// For example, the following values are valid:
        ///
        /// * 93 (3 months * 31)
        ///
        /// * 341 (11 months * 31)
        ///
        /// * 589 (19 months * 31)
        ///
        /// * 731
        public var performanceInsightsRetentionPeriod: Swift.Int?
        /// Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod.
        public var preferredBackupWindow: Swift.String?
        /// Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        public var preferredMaintenanceWindow: Swift.String?
        /// The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
        public var processorFeatures: [RdsClientTypes.ProcessorFeature]?
        /// A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see [ Fault Tolerance for an Aurora DB Cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance) in the Amazon Aurora User Guide.
        public var promotionTier: Swift.Int?
        /// Specifies the accessibility options for the DB instance. When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it. When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address. For more information, see [CreateDBInstance].
        public var publiclyAccessible: Swift.Bool
        /// Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS for MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output doesn't contain information about cross-Region Aurora read replicas. Currently, each RDS DB instance can have only one Aurora read replica.
        public var readReplicaDBClusterIdentifiers: [Swift.String]?
        /// Contains one or more identifiers of the read replicas associated with this DB instance.
        public var readReplicaDBInstanceIdentifiers: [Swift.String]?
        /// Contains the identifier of the source DB instance if this DB instance is a read replica.
        public var readReplicaSourceDBInstanceIdentifier: Swift.String?
        /// The open mode of an Oracle read replica. The default is open-read-only. For more information, see [Working with Oracle Read Replicas for Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html) in the Amazon RDS User Guide. This attribute is only supported in RDS for Oracle.
        public var replicaMode: RdsClientTypes.ReplicaMode?
        /// The number of minutes to pause the automation. When the time period ends, RDS Custom resumes full automation. The minimum value is 60 (default). The maximum value is 1,440.
        public var resumeFullAutomationModeTime: ClientRuntime.Date?
        /// If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.
        public var secondaryAvailabilityZone: Swift.String?
        /// The status of a read replica. If the instance isn't a read replica, this is blank.
        public var statusInfos: [RdsClientTypes.DBInstanceStatusInfo]?
        /// Specifies whether the DB instance is encrypted.
        public var storageEncrypted: Swift.Bool
        /// Specifies the storage type associated with DB instance.
        public var storageType: Swift.String?
        /// A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the Amazon RDS User Guide.
        public var tagList: [RdsClientTypes.Tag]?
        /// The ARN from the key store with which the instance is associated for TDE encryption.
        public var tdeCredentialArn: Swift.String?
        /// The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.
        public var timezone: Swift.String?
        /// Provides a list of VPC security group elements that the DB instance belongs to.
        public var vpcSecurityGroups: [RdsClientTypes.VpcSecurityGroupMembership]?

        public init (
            activityStreamEngineNativeAuditFieldsIncluded: Swift.Bool? = nil,
            activityStreamKinesisStreamName: Swift.String? = nil,
            activityStreamKmsKeyId: Swift.String? = nil,
            activityStreamMode: RdsClientTypes.ActivityStreamMode? = nil,
            activityStreamPolicyStatus: RdsClientTypes.ActivityStreamPolicyStatus? = nil,
            activityStreamStatus: RdsClientTypes.ActivityStreamStatus? = nil,
            allocatedStorage: Swift.Int = 0,
            associatedRoles: [RdsClientTypes.DBInstanceRole]? = nil,
            autoMinorVersionUpgrade: Swift.Bool = false,
            automaticRestartTime: ClientRuntime.Date? = nil,
            automationMode: RdsClientTypes.AutomationMode? = nil,
            availabilityZone: Swift.String? = nil,
            awsBackupRecoveryPointArn: Swift.String? = nil,
            backupRetentionPeriod: Swift.Int = 0,
            backupTarget: Swift.String? = nil,
            cACertificateIdentifier: Swift.String? = nil,
            characterSetName: Swift.String? = nil,
            copyTagsToSnapshot: Swift.Bool = false,
            customIamInstanceProfile: Swift.String? = nil,
            customerOwnedIpEnabled: Swift.Bool? = nil,
            dBClusterIdentifier: Swift.String? = nil,
            dBInstanceArn: Swift.String? = nil,
            dBInstanceAutomatedBackupsReplications: [RdsClientTypes.DBInstanceAutomatedBackupsReplication]? = nil,
            dBInstanceClass: Swift.String? = nil,
            dBInstanceIdentifier: Swift.String? = nil,
            dBInstanceStatus: Swift.String? = nil,
            dBName: Swift.String? = nil,
            dBParameterGroups: [RdsClientTypes.DBParameterGroupStatus]? = nil,
            dBSecurityGroups: [RdsClientTypes.DBSecurityGroupMembership]? = nil,
            dBSubnetGroup: RdsClientTypes.DBSubnetGroup? = nil,
            dbInstancePort: Swift.Int = 0,
            dbiResourceId: Swift.String? = nil,
            deletionProtection: Swift.Bool = false,
            domainMemberships: [RdsClientTypes.DomainMembership]? = nil,
            enabledCloudwatchLogsExports: [Swift.String]? = nil,
            endpoint: RdsClientTypes.Endpoint? = nil,
            engine: Swift.String? = nil,
            engineVersion: Swift.String? = nil,
            enhancedMonitoringResourceArn: Swift.String? = nil,
            iAMDatabaseAuthenticationEnabled: Swift.Bool = false,
            instanceCreateTime: ClientRuntime.Date? = nil,
            iops: Swift.Int? = nil,
            kmsKeyId: Swift.String? = nil,
            latestRestorableTime: ClientRuntime.Date? = nil,
            licenseModel: Swift.String? = nil,
            listenerEndpoint: RdsClientTypes.Endpoint? = nil,
            masterUsername: Swift.String? = nil,
            maxAllocatedStorage: Swift.Int? = nil,
            monitoringInterval: Swift.Int? = nil,
            monitoringRoleArn: Swift.String? = nil,
            multiAZ: Swift.Bool = false,
            ncharCharacterSetName: Swift.String? = nil,
            networkType: Swift.String? = nil,
            optionGroupMemberships: [RdsClientTypes.OptionGroupMembership]? = nil,
            pendingModifiedValues: RdsClientTypes.PendingModifiedValues? = nil,
            performanceInsightsEnabled: Swift.Bool? = nil,
            performanceInsightsKMSKeyId: Swift.String? = nil,
            performanceInsightsRetentionPeriod: Swift.Int? = nil,
            preferredBackupWindow: Swift.String? = nil,
            preferredMaintenanceWindow: Swift.String? = nil,
            processorFeatures: [RdsClientTypes.ProcessorFeature]? = nil,
            promotionTier: Swift.Int? = nil,
            publiclyAccessible: Swift.Bool = false,
            readReplicaDBClusterIdentifiers: [Swift.String]? = nil,
            readReplicaDBInstanceIdentifiers: [Swift.String]? = nil,
            readReplicaSourceDBInstanceIdentifier: Swift.String? = nil,
            replicaMode: RdsClientTypes.ReplicaMode? = nil,
            resumeFullAutomationModeTime: ClientRuntime.Date? = nil,
            secondaryAvailabilityZone: Swift.String? = nil,
            statusInfos: [RdsClientTypes.DBInstanceStatusInfo]? = nil,
            storageEncrypted: Swift.Bool = false,
            storageType: Swift.String? = nil,
            tagList: [RdsClientTypes.Tag]? = nil,
            tdeCredentialArn: Swift.String? = nil,
            timezone: Swift.String? = nil,
            vpcSecurityGroups: [RdsClientTypes.VpcSecurityGroupMembership]? = nil
        )
        {
            self.activityStreamEngineNativeAuditFieldsIncluded = activityStreamEngineNativeAuditFieldsIncluded
            self.activityStreamKinesisStreamName = activityStreamKinesisStreamName
            self.activityStreamKmsKeyId = activityStreamKmsKeyId
            self.activityStreamMode = activityStreamMode
            self.activityStreamPolicyStatus = activityStreamPolicyStatus
            self.activityStreamStatus = activityStreamStatus
            self.allocatedStorage = allocatedStorage
            self.associatedRoles = associatedRoles
            self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
            self.automaticRestartTime = automaticRestartTime
            self.automationMode = automationMode
            self.availabilityZone = availabilityZone
            self.awsBackupRecoveryPointArn = awsBackupRecoveryPointArn
            self.backupRetentionPeriod = backupRetentionPeriod
            self.backupTarget = backupTarget
            self.cACertificateIdentifier = cACertificateIdentifier
            self.characterSetName = characterSetName
            self.copyTagsToSnapshot = copyTagsToSnapshot
            self.customIamInstanceProfile = customIamInstanceProfile
            self.customerOwnedIpEnabled = customerOwnedIpEnabled
            self.dBClusterIdentifier = dBClusterIdentifier
            self.dBInstanceArn = dBInstanceArn
            self.dBInstanceAutomatedBackupsReplications = dBInstanceAutomatedBackupsReplications
            self.dBInstanceClass = dBInstanceClass
            self.dBInstanceIdentifier = dBInstanceIdentifier
            self.dBInstanceStatus = dBInstanceStatus
            self.dBName = dBName
            self.dBParameterGroups = dBParameterGroups
            self.dBSecurityGroups = dBSecurityGroups
            self.dBSubnetGroup = dBSubnetGroup
            self.dbInstancePort = dbInstancePort
            self.dbiResourceId = dbiResourceId
            self.deletionProtection = deletionProtection
            self.domainMemberships = domainMemberships
            self.enabledCloudwatchLogsExports = enabledCloudwatchLogsExports
            self.endpoint = endpoint
            self.engine = engine
            self.engineVersion = engineVersion
            self.enhancedMonitoringResourceArn = enhancedMonitoringResourceArn
            self.iAMDatabaseAuthenticationEnabled = iAMDatabaseAuthenticationEnabled
            self.instanceCreateTime = instanceCreateTime
            self.iops = iops
            self.kmsKeyId = kmsKeyId
            self.latestRestorableTime = latestRestorableTime
            self.licenseModel = licenseModel
            self.listenerEndpoint = listenerEndpoint
            self.masterUsername = masterUsername
            self.maxAllocatedStorage = maxAllocatedStorage
            self.monitoringInterval = monitoringInterval
            self.monitoringRoleArn = monitoringRoleArn
            self.multiAZ = multiAZ
            self.ncharCharacterSetName = ncharCharacterSetName
            self.networkType = networkType
            self.optionGroupMemberships = optionGroupMemberships
            self.pendingModifiedValues = pendingModifiedValues
            self.performanceInsightsEnabled = performanceInsightsEnabled
            self.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId
            self.performanceInsightsRetentionPeriod = performanceInsightsRetentionPeriod
            self.preferredBackupWindow = preferredBackupWindow
            self.preferredMaintenanceWindow = preferredMaintenanceWindow
            self.processorFeatures = processorFeatures
            self.promotionTier = promotionTier
            self.publiclyAccessible = publiclyAccessible
            self.readReplicaDBClusterIdentifiers = readReplicaDBClusterIdentifiers
            self.readReplicaDBInstanceIdentifiers = readReplicaDBInstanceIdentifiers
            self.readReplicaSourceDBInstanceIdentifier = readReplicaSourceDBInstanceIdentifier
            self.replicaMode = replicaMode
            self.resumeFullAutomationModeTime = resumeFullAutomationModeTime
            self.secondaryAvailabilityZone = secondaryAvailabilityZone
            self.statusInfos = statusInfos
            self.storageEncrypted = storageEncrypted
            self.storageType = storageType
            self.tagList = tagList
            self.tdeCredentialArn = tdeCredentialArn
            self.timezone = timezone
            self.vpcSecurityGroups = vpcSecurityGroups
        }
    }

}
