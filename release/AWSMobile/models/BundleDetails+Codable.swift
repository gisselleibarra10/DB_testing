// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MobileClientTypes.BundleDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case availablePlatforms
        case bundleId
        case description
        case iconUrl
        case title
        case version
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let availablePlatforms = availablePlatforms {
            var availablePlatformsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .availablePlatforms)
            for platforms0 in availablePlatforms {
                try availablePlatformsContainer.encode(platforms0.rawValue)
            }
        }
        if let bundleId = self.bundleId {
            try encodeContainer.encode(bundleId, forKey: .bundleId)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let iconUrl = self.iconUrl {
            try encodeContainer.encode(iconUrl, forKey: .iconUrl)
        }
        if let title = self.title {
            try encodeContainer.encode(title, forKey: .title)
        }
        if let version = self.version {
            try encodeContainer.encode(version, forKey: .version)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bundleIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bundleId)
        bundleId = bundleIdDecoded
        let titleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .title)
        title = titleDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let iconUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .iconUrl)
        iconUrl = iconUrlDecoded
        let availablePlatformsContainer = try containerValues.decodeIfPresent([MobileClientTypes.Platform?].self, forKey: .availablePlatforms)
        var availablePlatformsDecoded0:[MobileClientTypes.Platform]? = nil
        if let availablePlatformsContainer = availablePlatformsContainer {
            availablePlatformsDecoded0 = [MobileClientTypes.Platform]()
            for string0 in availablePlatformsContainer {
                if let string0 = string0 {
                    availablePlatformsDecoded0?.append(string0)
                }
            }
        }
        availablePlatforms = availablePlatformsDecoded0
    }
}
