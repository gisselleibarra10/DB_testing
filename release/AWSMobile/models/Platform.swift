// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MobileClientTypes {
    /// Developer desktop or target mobile app or website platform.
    public enum Platform: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case android
        case javascript
        case linux
        case objc
        case osx
        case swift
        case windows
        case sdkUnknown(Swift.String)

        public static var allCases: [Platform] {
            return [
                .android,
                .javascript,
                .linux,
                .objc,
                .osx,
                .swift,
                .windows,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .android: return "ANDROID"
            case .javascript: return "JAVASCRIPT"
            case .linux: return "LINUX"
            case .objc: return "OBJC"
            case .osx: return "OSX"
            case .swift: return "SWIFT"
            case .windows: return "WINDOWS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = Platform(rawValue: rawValue) ?? Platform.sdkUnknown(rawValue)
        }
    }
}
