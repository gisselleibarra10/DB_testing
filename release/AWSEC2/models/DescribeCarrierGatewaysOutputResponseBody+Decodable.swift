// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCarrierGatewaysOutputResponseBody: Swift.Equatable {
    let carrierGateways: [Ec2ClientTypes.CarrierGateway]?
    let nextToken: Swift.String?
}

extension DescribeCarrierGatewaysOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case carrierGateways = "carrierGatewaySet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.carrierGateways) {
            struct KeyVal0{struct item{}}
            let carrierGatewaysWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .carrierGateways)
            if let carrierGatewaysWrappedContainer = carrierGatewaysWrappedContainer {
                let carrierGatewaysContainer = try carrierGatewaysWrappedContainer.decodeIfPresent([Ec2ClientTypes.CarrierGateway].self, forKey: .member)
                var carrierGatewaysBuffer:[Ec2ClientTypes.CarrierGateway]? = nil
                if let carrierGatewaysContainer = carrierGatewaysContainer {
                    carrierGatewaysBuffer = [Ec2ClientTypes.CarrierGateway]()
                    for structureContainer0 in carrierGatewaysContainer {
                        carrierGatewaysBuffer?.append(structureContainer0)
                    }
                }
                carrierGateways = carrierGatewaysBuffer
            } else {
                carrierGateways = []
            }
        } else {
            carrierGateways = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
