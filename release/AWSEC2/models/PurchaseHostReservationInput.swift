// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PurchaseHostReservationInput: Swift.Equatable {
    /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [Ensuring Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
    public var clientToken: Swift.String?
    /// The currency in which the totalUpfrontPrice, LimitPrice, and totalHourlyPrice amounts are specified. At this time, the only supported currency is USD.
    public var currencyCode: Ec2ClientTypes.CurrencyCodeValues?
    /// The IDs of the Dedicated Hosts with which the reservation will be associated.
    /// This member is required.
    public var hostIdSet: [Swift.String]?
    /// The specified limit is checked against the total upfront cost of the reservation (calculated as the offering's upfront cost multiplied by the host count). If the total upfront cost is greater than the specified price limit, the request fails. This is used to ensure that the purchase does not exceed the expected upfront cost of the purchase. At this time, the only supported currency is USD. For example, to indicate a limit price of USD 100, specify 100.00.
    public var limitPrice: Swift.String?
    /// The ID of the offering.
    /// This member is required.
    public var offeringId: Swift.String?
    /// The tags to apply to the Dedicated Host Reservation during purchase.
    public var tagSpecifications: [Ec2ClientTypes.TagSpecification]?

    public init (
        clientToken: Swift.String? = nil,
        currencyCode: Ec2ClientTypes.CurrencyCodeValues? = nil,
        hostIdSet: [Swift.String]? = nil,
        limitPrice: Swift.String? = nil,
        offeringId: Swift.String? = nil,
        tagSpecifications: [Ec2ClientTypes.TagSpecification]? = nil
    )
    {
        self.clientToken = clientToken
        self.currencyCode = currencyCode
        self.hostIdSet = hostIdSet
        self.limitPrice = limitPrice
        self.offeringId = offeringId
        self.tagSpecifications = tagSpecifications
    }
}
