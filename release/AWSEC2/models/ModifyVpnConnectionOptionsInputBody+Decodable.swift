// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyVpnConnectionOptionsInputBody: Swift.Equatable {
    let vpnConnectionId: Swift.String?
    let localIpv4NetworkCidr: Swift.String?
    let remoteIpv4NetworkCidr: Swift.String?
    let localIpv6NetworkCidr: Swift.String?
    let remoteIpv6NetworkCidr: Swift.String?
    let dryRun: Swift.Bool?
}

extension ModifyVpnConnectionOptionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "DryRun"
        case localIpv4NetworkCidr = "LocalIpv4NetworkCidr"
        case localIpv6NetworkCidr = "LocalIpv6NetworkCidr"
        case remoteIpv4NetworkCidr = "RemoteIpv4NetworkCidr"
        case remoteIpv6NetworkCidr = "RemoteIpv6NetworkCidr"
        case vpnConnectionId = "VpnConnectionId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vpnConnectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpnConnectionId)
        vpnConnectionId = vpnConnectionIdDecoded
        let localIpv4NetworkCidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .localIpv4NetworkCidr)
        localIpv4NetworkCidr = localIpv4NetworkCidrDecoded
        let remoteIpv4NetworkCidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .remoteIpv4NetworkCidr)
        remoteIpv4NetworkCidr = remoteIpv4NetworkCidrDecoded
        let localIpv6NetworkCidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .localIpv6NetworkCidr)
        localIpv6NetworkCidr = localIpv6NetworkCidrDecoded
        let remoteIpv6NetworkCidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .remoteIpv6NetworkCidr)
        remoteIpv6NetworkCidr = remoteIpv6NetworkCidrDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
