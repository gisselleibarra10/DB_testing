// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateManagedPrefixListInput: Swift.Equatable {
    /// The IP address type. Valid Values: IPv4 | IPv6
    /// This member is required.
    public var addressFamily: Swift.String?
    /// Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see [Ensuring Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html). Constraints: Up to 255 UTF-8 characters in length.
    public var clientToken: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// One or more entries for the prefix list.
    public var entries: [EC2ClientTypes.AddPrefixListEntry]?
    /// The maximum number of entries for the prefix list.
    /// This member is required.
    public var maxEntries: Swift.Int?
    /// A name for the prefix list. Constraints: Up to 255 characters in length. The name cannot start with com.amazonaws.
    /// This member is required.
    public var prefixListName: Swift.String?
    /// The tags to apply to the prefix list during creation.
    public var tagSpecifications: [EC2ClientTypes.TagSpecification]?

    public init (
        addressFamily: Swift.String? = nil,
        clientToken: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        entries: [EC2ClientTypes.AddPrefixListEntry]? = nil,
        maxEntries: Swift.Int? = nil,
        prefixListName: Swift.String? = nil,
        tagSpecifications: [EC2ClientTypes.TagSpecification]? = nil
    )
    {
        self.addressFamily = addressFamily
        self.clientToken = clientToken
        self.dryRun = dryRun
        self.entries = entries
        self.maxEntries = maxEntries
        self.prefixListName = prefixListName
        self.tagSpecifications = tagSpecifications
    }
}
