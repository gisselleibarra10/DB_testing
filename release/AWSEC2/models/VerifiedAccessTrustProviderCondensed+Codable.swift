// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.VerifiedAccessTrustProviderCondensed: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "description"
        case deviceTrustProviderType = "deviceTrustProviderType"
        case trustProviderType = "trustProviderType"
        case userTrustProviderType = "userTrustProviderType"
        case verifiedAccessTrustProviderId = "verifiedAccessTrustProviderId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let description = description {
            try container.encode(description, forKey: ClientRuntime.Key("Description"))
        }
        if let deviceTrustProviderType = deviceTrustProviderType {
            try container.encode(deviceTrustProviderType, forKey: ClientRuntime.Key("DeviceTrustProviderType"))
        }
        if let trustProviderType = trustProviderType {
            try container.encode(trustProviderType, forKey: ClientRuntime.Key("TrustProviderType"))
        }
        if let userTrustProviderType = userTrustProviderType {
            try container.encode(userTrustProviderType, forKey: ClientRuntime.Key("UserTrustProviderType"))
        }
        if let verifiedAccessTrustProviderId = verifiedAccessTrustProviderId {
            try container.encode(verifiedAccessTrustProviderId, forKey: ClientRuntime.Key("VerifiedAccessTrustProviderId"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let verifiedAccessTrustProviderIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .verifiedAccessTrustProviderId)
        verifiedAccessTrustProviderId = verifiedAccessTrustProviderIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let trustProviderTypeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.TrustProviderType.self, forKey: .trustProviderType)
        trustProviderType = trustProviderTypeDecoded
        let userTrustProviderTypeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.UserTrustProviderType.self, forKey: .userTrustProviderType)
        userTrustProviderType = userTrustProviderTypeDecoded
        let deviceTrustProviderTypeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.DeviceTrustProviderType.self, forKey: .deviceTrustProviderType)
        deviceTrustProviderType = deviceTrustProviderTypeDecoded
    }
}
