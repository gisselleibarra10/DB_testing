// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.PciId: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceId = "DeviceId"
        case subsystemId = "SubsystemId"
        case subsystemVendorId = "SubsystemVendorId"
        case vendorId = "VendorId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let deviceId = deviceId {
            try container.encode(deviceId, forKey: ClientRuntime.Key("DeviceId"))
        }
        if let subsystemId = subsystemId {
            try container.encode(subsystemId, forKey: ClientRuntime.Key("SubsystemId"))
        }
        if let subsystemVendorId = subsystemVendorId {
            try container.encode(subsystemVendorId, forKey: ClientRuntime.Key("SubsystemVendorId"))
        }
        if let vendorId = vendorId {
            try container.encode(vendorId, forKey: ClientRuntime.Key("VendorId"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceId)
        deviceId = deviceIdDecoded
        let vendorIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vendorId)
        vendorId = vendorIdDecoded
        let subsystemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subsystemId)
        subsystemId = subsystemIdDecoded
        let subsystemVendorIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subsystemVendorId)
        subsystemVendorId = subsystemVendorIdDecoded
    }
}
