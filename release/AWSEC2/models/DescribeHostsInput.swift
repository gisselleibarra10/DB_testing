// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeHostsInput: Swift.Equatable {
    /// The filters.
    ///
    /// * auto-placement - Whether auto-placement is enabled or disabled (on | off).
    ///
    /// * availability-zone - The Availability Zone of the host.
    ///
    /// * client-token - The idempotency token that you provided when you allocated the host.
    ///
    /// * host-reservation-id - The ID of the reservation assigned to this host.
    ///
    /// * instance-type - The instance type size that the Dedicated Host is configured to support.
    ///
    /// * state - The allocation state of the Dedicated Host (available | under-assessment | permanent-failure | released | released-permanent-failure).
    ///
    /// * tag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.
    public var filter: [EC2ClientTypes.Filter]?
    /// The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.
    public var hostIds: [Swift.String]?
    /// The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error. You cannot specify this parameter and the host IDs parameter in the same request.
    public var maxResults: Swift.Int?
    /// The token to use to retrieve the next page of results.
    public var nextToken: Swift.String?

    public init (
        filter: [EC2ClientTypes.Filter]? = nil,
        hostIds: [Swift.String]? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil
    )
    {
        self.filter = filter
        self.hostIds = hostIds
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
