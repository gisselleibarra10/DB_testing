// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ImportVolumeInputBody: Swift.Equatable {
    let availabilityZone: Swift.String?
    let description: Swift.String?
    let dryRun: Swift.Bool?
    let image: Ec2ClientTypes.DiskImageDetail?
    let volume: Ec2ClientTypes.VolumeDetail?
}

extension ImportVolumeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case availabilityZone = "availabilityZone"
        case description = "description"
        case dryRun = "dryRun"
        case image = "image"
        case volume = "volume"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let availabilityZoneDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .availabilityZone)
        availabilityZone = availabilityZoneDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let imageDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.DiskImageDetail.self, forKey: .image)
        image = imageDecoded
        let volumeDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.VolumeDetail.self, forKey: .volume)
        volume = volumeDecoded
    }
}
