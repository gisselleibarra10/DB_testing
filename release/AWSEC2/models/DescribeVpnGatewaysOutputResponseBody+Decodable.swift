// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeVpnGatewaysOutputResponseBody: Swift.Equatable {
    let vpnGateways: [Ec2ClientTypes.VpnGateway]?
}

extension DescribeVpnGatewaysOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case vpnGateways = "vpnGatewaySet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.vpnGateways) {
            struct KeyVal0{struct item{}}
            let vpnGatewaysWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .vpnGateways)
            if let vpnGatewaysWrappedContainer = vpnGatewaysWrappedContainer {
                let vpnGatewaysContainer = try vpnGatewaysWrappedContainer.decodeIfPresent([Ec2ClientTypes.VpnGateway].self, forKey: .member)
                var vpnGatewaysBuffer:[Ec2ClientTypes.VpnGateway]? = nil
                if let vpnGatewaysContainer = vpnGatewaysContainer {
                    vpnGatewaysBuffer = [Ec2ClientTypes.VpnGateway]()
                    for structureContainer0 in vpnGatewaysContainer {
                        vpnGatewaysBuffer?.append(structureContainer0)
                    }
                }
                vpnGateways = vpnGatewaysBuffer
            } else {
                vpnGateways = []
            }
        } else {
            vpnGateways = nil
        }
    }
}
