// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSpotFleetRequestHistoryInputBody: Swift.Equatable {
    let dryRun: Swift.Bool?
    let eventType: EC2ClientTypes.EventType?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
    let spotFleetRequestId: Swift.String?
    let startTime: ClientRuntime.Date?
}

extension DescribeSpotFleetRequestHistoryInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "dryRun"
        case eventType = "eventType"
        case maxResults = "maxResults"
        case nextToken = "nextToken"
        case spotFleetRequestId = "spotFleetRequestId"
        case startTime = "startTime"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let eventTypeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.EventType.self, forKey: .eventType)
        eventType = eventTypeDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let spotFleetRequestIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .spotFleetRequestId)
        spotFleetRequestId = spotFleetRequestIdDecoded
        let startTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .startTime)
        startTime = startTimeDecoded
    }
}
