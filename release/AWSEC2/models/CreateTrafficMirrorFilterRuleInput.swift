// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateTrafficMirrorFilterRuleInput: Swift.Equatable {
    /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [How to ensure idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
    public var clientToken: Swift.String?
    /// The description of the Traffic Mirror rule.
    public var description: Swift.String?
    /// The destination CIDR block to assign to the Traffic Mirror rule.
    /// This member is required.
    public var destinationCidrBlock: Swift.String?
    /// The destination port range.
    public var destinationPortRange: EC2ClientTypes.TrafficMirrorPortRangeRequest?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The protocol, for example UDP, to assign to the Traffic Mirror rule. For information about the protocol value, see [Protocol Numbers](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) on the Internet Assigned Numbers Authority (IANA) website.
    public var `protocol`: Swift.Int?
    /// The action to take on the filtered traffic.
    /// This member is required.
    public var ruleAction: EC2ClientTypes.TrafficMirrorRuleAction?
    /// The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
    /// This member is required.
    public var ruleNumber: Swift.Int?
    /// The source CIDR block to assign to the Traffic Mirror rule.
    /// This member is required.
    public var sourceCidrBlock: Swift.String?
    /// The source port range.
    public var sourcePortRange: EC2ClientTypes.TrafficMirrorPortRangeRequest?
    /// The type of traffic.
    /// This member is required.
    public var trafficDirection: EC2ClientTypes.TrafficDirection?
    /// The ID of the filter that this rule is associated with.
    /// This member is required.
    public var trafficMirrorFilterId: Swift.String?

    public init (
        clientToken: Swift.String? = nil,
        description: Swift.String? = nil,
        destinationCidrBlock: Swift.String? = nil,
        destinationPortRange: EC2ClientTypes.TrafficMirrorPortRangeRequest? = nil,
        dryRun: Swift.Bool? = nil,
        `protocol`: Swift.Int? = nil,
        ruleAction: EC2ClientTypes.TrafficMirrorRuleAction? = nil,
        ruleNumber: Swift.Int? = nil,
        sourceCidrBlock: Swift.String? = nil,
        sourcePortRange: EC2ClientTypes.TrafficMirrorPortRangeRequest? = nil,
        trafficDirection: EC2ClientTypes.TrafficDirection? = nil,
        trafficMirrorFilterId: Swift.String? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.destinationCidrBlock = destinationCidrBlock
        self.destinationPortRange = destinationPortRange
        self.dryRun = dryRun
        self.`protocol` = `protocol`
        self.ruleAction = ruleAction
        self.ruleNumber = ruleNumber
        self.sourceCidrBlock = sourceCidrBlock
        self.sourcePortRange = sourcePortRange
        self.trafficDirection = trafficDirection
        self.trafficMirrorFilterId = trafficMirrorFilterId
    }
}
