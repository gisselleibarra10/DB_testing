// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.Ipv6CidrAssociation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associatedResource = "associatedResource"
        case ipv6Cidr = "ipv6Cidr"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let associatedResource = associatedResource {
            try container.encode(associatedResource, forKey: ClientRuntime.Key("AssociatedResource"))
        }
        if let ipv6Cidr = ipv6Cidr {
            try container.encode(ipv6Cidr, forKey: ClientRuntime.Key("Ipv6Cidr"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ipv6CidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipv6Cidr)
        ipv6Cidr = ipv6CidrDecoded
        let associatedResourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .associatedResource)
        associatedResource = associatedResourceDecoded
    }
}
