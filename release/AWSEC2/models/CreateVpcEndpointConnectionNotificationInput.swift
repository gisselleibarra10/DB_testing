// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateVpcEndpointConnectionNotificationInput: Swift.Equatable {
    /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [How to ensure idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
    public var clientToken: Swift.String?
    /// One or more endpoint events for which to receive notifications. Valid values are Accept, Connect, Delete, and Reject.
    /// This member is required.
    public var connectionEvents: [Swift.String]?
    /// The ARN of the SNS topic for the notifications.
    /// This member is required.
    public var connectionNotificationArn: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The ID of the endpoint service.
    public var serviceId: Swift.String?
    /// The ID of the endpoint.
    public var vpcEndpointId: Swift.String?

    public init (
        clientToken: Swift.String? = nil,
        connectionEvents: [Swift.String]? = nil,
        connectionNotificationArn: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        serviceId: Swift.String? = nil,
        vpcEndpointId: Swift.String? = nil
    )
    {
        self.clientToken = clientToken
        self.connectionEvents = connectionEvents
        self.connectionNotificationArn = connectionNotificationArn
        self.dryRun = dryRun
        self.serviceId = serviceId
        self.vpcEndpointId = vpcEndpointId
    }
}
