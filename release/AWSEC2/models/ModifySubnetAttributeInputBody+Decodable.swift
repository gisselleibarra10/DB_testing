// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifySubnetAttributeInputBody: Swift.Equatable {
    let assignIpv6AddressOnCreation: Ec2ClientTypes.AttributeBooleanValue?
    let mapPublicIpOnLaunch: Ec2ClientTypes.AttributeBooleanValue?
    let subnetId: Swift.String?
    let mapCustomerOwnedIpOnLaunch: Ec2ClientTypes.AttributeBooleanValue?
    let customerOwnedIpv4Pool: Swift.String?
    let enableDns64: Ec2ClientTypes.AttributeBooleanValue?
    let privateDnsHostnameTypeOnLaunch: Ec2ClientTypes.HostnameType?
    let enableResourceNameDnsARecordOnLaunch: Ec2ClientTypes.AttributeBooleanValue?
    let enableResourceNameDnsAAAARecordOnLaunch: Ec2ClientTypes.AttributeBooleanValue?
    let enableLniAtDeviceIndex: Swift.Int?
    let disableLniAtDeviceIndex: Ec2ClientTypes.AttributeBooleanValue?
}

extension ModifySubnetAttributeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case assignIpv6AddressOnCreation = "AssignIpv6AddressOnCreation"
        case customerOwnedIpv4Pool = "CustomerOwnedIpv4Pool"
        case disableLniAtDeviceIndex = "DisableLniAtDeviceIndex"
        case enableDns64 = "EnableDns64"
        case enableLniAtDeviceIndex = "EnableLniAtDeviceIndex"
        case enableResourceNameDnsAAAARecordOnLaunch = "EnableResourceNameDnsAAAARecordOnLaunch"
        case enableResourceNameDnsARecordOnLaunch = "EnableResourceNameDnsARecordOnLaunch"
        case mapCustomerOwnedIpOnLaunch = "MapCustomerOwnedIpOnLaunch"
        case mapPublicIpOnLaunch = "MapPublicIpOnLaunch"
        case privateDnsHostnameTypeOnLaunch = "PrivateDnsHostnameTypeOnLaunch"
        case subnetId = "subnetId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assignIpv6AddressOnCreationDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.AttributeBooleanValue.self, forKey: .assignIpv6AddressOnCreation)
        assignIpv6AddressOnCreation = assignIpv6AddressOnCreationDecoded
        let mapPublicIpOnLaunchDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.AttributeBooleanValue.self, forKey: .mapPublicIpOnLaunch)
        mapPublicIpOnLaunch = mapPublicIpOnLaunchDecoded
        let subnetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subnetId)
        subnetId = subnetIdDecoded
        let mapCustomerOwnedIpOnLaunchDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.AttributeBooleanValue.self, forKey: .mapCustomerOwnedIpOnLaunch)
        mapCustomerOwnedIpOnLaunch = mapCustomerOwnedIpOnLaunchDecoded
        let customerOwnedIpv4PoolDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customerOwnedIpv4Pool)
        customerOwnedIpv4Pool = customerOwnedIpv4PoolDecoded
        let enableDns64Decoded = try containerValues.decodeIfPresent(Ec2ClientTypes.AttributeBooleanValue.self, forKey: .enableDns64)
        enableDns64 = enableDns64Decoded
        let privateDnsHostnameTypeOnLaunchDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.HostnameType.self, forKey: .privateDnsHostnameTypeOnLaunch)
        privateDnsHostnameTypeOnLaunch = privateDnsHostnameTypeOnLaunchDecoded
        let enableResourceNameDnsARecordOnLaunchDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.AttributeBooleanValue.self, forKey: .enableResourceNameDnsARecordOnLaunch)
        enableResourceNameDnsARecordOnLaunch = enableResourceNameDnsARecordOnLaunchDecoded
        let enableResourceNameDnsAAAARecordOnLaunchDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.AttributeBooleanValue.self, forKey: .enableResourceNameDnsAAAARecordOnLaunch)
        enableResourceNameDnsAAAARecordOnLaunch = enableResourceNameDnsAAAARecordOnLaunchDecoded
        let enableLniAtDeviceIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .enableLniAtDeviceIndex)
        enableLniAtDeviceIndex = enableLniAtDeviceIndexDecoded
        let disableLniAtDeviceIndexDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.AttributeBooleanValue.self, forKey: .disableLniAtDeviceIndex)
        disableLniAtDeviceIndex = disableLniAtDeviceIndexDecoded
    }
}
