// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// The information for a launch template.
    public struct ResponseLaunchTemplateData: Swift.Equatable {
        /// The block device mappings.
        public var blockDeviceMappings: [Ec2ClientTypes.LaunchTemplateBlockDeviceMapping]?
        /// Information about the Capacity Reservation targeting option.
        public var capacityReservationSpecification: Ec2ClientTypes.LaunchTemplateCapacityReservationSpecificationResponse?
        /// The CPU options for the instance. For more information, see [Optimizing CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the Amazon Elastic Compute Cloud User Guide.
        public var cpuOptions: Ec2ClientTypes.LaunchTemplateCpuOptions?
        /// The credit option for CPU usage of the instance.
        public var creditSpecification: Ec2ClientTypes.CreditSpecification?
        /// Indicates whether the instance is enabled for stop protection. For more information, see [Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
        public var disableApiStop: Swift.Bool?
        /// If set to true, indicates that the instance cannot be terminated using the Amazon EC2 console, command line tool, or API.
        public var disableApiTermination: Swift.Bool?
        /// Indicates whether the instance is optimized for Amazon EBS I/O.
        public var ebsOptimized: Swift.Bool?
        /// The elastic GPU specification.
        public var elasticGpuSpecifications: [Ec2ClientTypes.ElasticGpuSpecificationResponse]?
        /// The elastic inference accelerator for the instance.
        public var elasticInferenceAccelerators: [Ec2ClientTypes.LaunchTemplateElasticInferenceAcceleratorResponse]?
        /// Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
        public var enclaveOptions: Ec2ClientTypes.LaunchTemplateEnclaveOptions?
        /// Indicates whether an instance is configured for hibernation. For more information, see [Hibernate your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the Amazon Elastic Compute Cloud User Guide.
        public var hibernationOptions: Ec2ClientTypes.LaunchTemplateHibernationOptions?
        /// The IAM instance profile.
        public var iamInstanceProfile: Ec2ClientTypes.LaunchTemplateIamInstanceProfileSpecification?
        /// The ID of the AMI that was used to launch the instance.
        public var imageId: Swift.String?
        /// Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
        public var instanceInitiatedShutdownBehavior: Ec2ClientTypes.ShutdownBehavior?
        /// The market (purchasing) option for the instances.
        public var instanceMarketOptions: Ec2ClientTypes.LaunchTemplateInstanceMarketOptions?
        /// The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes. If you specify InstanceRequirements, you can't specify InstanceTypes.
        public var instanceRequirements: Ec2ClientTypes.InstanceRequirements?
        /// The instance type.
        public var instanceType: Ec2ClientTypes.InstanceType?
        /// The ID of the kernel, if applicable.
        public var kernelId: Swift.String?
        /// The name of the key pair.
        public var keyName: Swift.String?
        /// The license configurations.
        public var licenseSpecifications: [Ec2ClientTypes.LaunchTemplateLicenseConfiguration]?
        /// The maintenance options for your instance.
        public var maintenanceOptions: Ec2ClientTypes.LaunchTemplateInstanceMaintenanceOptions?
        /// The metadata options for the instance. For more information, see [Instance metadata and user data](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) in the Amazon Elastic Compute Cloud User Guide.
        public var metadataOptions: Ec2ClientTypes.LaunchTemplateInstanceMetadataOptions?
        /// The monitoring for the instance.
        public var monitoring: Ec2ClientTypes.LaunchTemplatesMonitoring?
        /// The network interfaces.
        public var networkInterfaces: [Ec2ClientTypes.LaunchTemplateInstanceNetworkInterfaceSpecification]?
        /// The placement of the instance.
        public var placement: Ec2ClientTypes.LaunchTemplatePlacement?
        /// The options for the instance hostname.
        public var privateDnsNameOptions: Ec2ClientTypes.LaunchTemplatePrivateDnsNameOptions?
        /// The ID of the RAM disk, if applicable.
        public var ramDiskId: Swift.String?
        /// The security group IDs.
        public var securityGroupIds: [Swift.String]?
        /// The security group names.
        public var securityGroups: [Swift.String]?
        /// The tags that are applied to the resources that are created during instance launch.
        public var tagSpecifications: [Ec2ClientTypes.LaunchTemplateTagSpecification]?
        /// The user data for the instance.
        public var userData: Swift.String?

        public init (
            blockDeviceMappings: [Ec2ClientTypes.LaunchTemplateBlockDeviceMapping]? = nil,
            capacityReservationSpecification: Ec2ClientTypes.LaunchTemplateCapacityReservationSpecificationResponse? = nil,
            cpuOptions: Ec2ClientTypes.LaunchTemplateCpuOptions? = nil,
            creditSpecification: Ec2ClientTypes.CreditSpecification? = nil,
            disableApiStop: Swift.Bool? = nil,
            disableApiTermination: Swift.Bool? = nil,
            ebsOptimized: Swift.Bool? = nil,
            elasticGpuSpecifications: [Ec2ClientTypes.ElasticGpuSpecificationResponse]? = nil,
            elasticInferenceAccelerators: [Ec2ClientTypes.LaunchTemplateElasticInferenceAcceleratorResponse]? = nil,
            enclaveOptions: Ec2ClientTypes.LaunchTemplateEnclaveOptions? = nil,
            hibernationOptions: Ec2ClientTypes.LaunchTemplateHibernationOptions? = nil,
            iamInstanceProfile: Ec2ClientTypes.LaunchTemplateIamInstanceProfileSpecification? = nil,
            imageId: Swift.String? = nil,
            instanceInitiatedShutdownBehavior: Ec2ClientTypes.ShutdownBehavior? = nil,
            instanceMarketOptions: Ec2ClientTypes.LaunchTemplateInstanceMarketOptions? = nil,
            instanceRequirements: Ec2ClientTypes.InstanceRequirements? = nil,
            instanceType: Ec2ClientTypes.InstanceType? = nil,
            kernelId: Swift.String? = nil,
            keyName: Swift.String? = nil,
            licenseSpecifications: [Ec2ClientTypes.LaunchTemplateLicenseConfiguration]? = nil,
            maintenanceOptions: Ec2ClientTypes.LaunchTemplateInstanceMaintenanceOptions? = nil,
            metadataOptions: Ec2ClientTypes.LaunchTemplateInstanceMetadataOptions? = nil,
            monitoring: Ec2ClientTypes.LaunchTemplatesMonitoring? = nil,
            networkInterfaces: [Ec2ClientTypes.LaunchTemplateInstanceNetworkInterfaceSpecification]? = nil,
            placement: Ec2ClientTypes.LaunchTemplatePlacement? = nil,
            privateDnsNameOptions: Ec2ClientTypes.LaunchTemplatePrivateDnsNameOptions? = nil,
            ramDiskId: Swift.String? = nil,
            securityGroupIds: [Swift.String]? = nil,
            securityGroups: [Swift.String]? = nil,
            tagSpecifications: [Ec2ClientTypes.LaunchTemplateTagSpecification]? = nil,
            userData: Swift.String? = nil
        )
        {
            self.blockDeviceMappings = blockDeviceMappings
            self.capacityReservationSpecification = capacityReservationSpecification
            self.cpuOptions = cpuOptions
            self.creditSpecification = creditSpecification
            self.disableApiStop = disableApiStop
            self.disableApiTermination = disableApiTermination
            self.ebsOptimized = ebsOptimized
            self.elasticGpuSpecifications = elasticGpuSpecifications
            self.elasticInferenceAccelerators = elasticInferenceAccelerators
            self.enclaveOptions = enclaveOptions
            self.hibernationOptions = hibernationOptions
            self.iamInstanceProfile = iamInstanceProfile
            self.imageId = imageId
            self.instanceInitiatedShutdownBehavior = instanceInitiatedShutdownBehavior
            self.instanceMarketOptions = instanceMarketOptions
            self.instanceRequirements = instanceRequirements
            self.instanceType = instanceType
            self.kernelId = kernelId
            self.keyName = keyName
            self.licenseSpecifications = licenseSpecifications
            self.maintenanceOptions = maintenanceOptions
            self.metadataOptions = metadataOptions
            self.monitoring = monitoring
            self.networkInterfaces = networkInterfaces
            self.placement = placement
            self.privateDnsNameOptions = privateDnsNameOptions
            self.ramDiskId = ramDiskId
            self.securityGroupIds = securityGroupIds
            self.securityGroups = securityGroups
            self.tagSpecifications = tagSpecifications
            self.userData = userData
        }
    }

}
