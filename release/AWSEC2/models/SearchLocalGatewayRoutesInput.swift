// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SearchLocalGatewayRoutesInput: Swift.Equatable {
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// One or more filters.
    ///
    /// * route-search.exact-match - The exact match of the specified filter.
    ///
    /// * route-search.longest-prefix-match - The longest prefix that matches the route.
    ///
    /// * route-search.subnet-of-match - The routes with a subnet that match the specified CIDR filter.
    ///
    /// * route-search.supernet-of-match - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns 10.0.1.0/29.
    ///
    /// * state - The state of the route.
    ///
    /// * type - The route type.
    public var filters: [Ec2ClientTypes.Filter]?
    /// The ID of the local gateway route table.
    /// This member is required.
    public var localGatewayRouteTableId: Swift.String?
    /// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.
    public var maxResults: Swift.Int?
    /// The token for the next page of results.
    public var nextToken: Swift.String?

    public init (
        dryRun: Swift.Bool? = nil,
        filters: [Ec2ClientTypes.Filter]? = nil,
        localGatewayRouteTableId: Swift.String? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.localGatewayRouteTableId = localGatewayRouteTableId
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
