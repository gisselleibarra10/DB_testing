// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateFleetInput: Swift.Equatable {
    /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
    public var clientToken: Swift.String?
    /// Reserved.
    public var context: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
    public var excessCapacityTerminationPolicy: EC2ClientTypes.FleetExcessCapacityTerminationPolicy?
    /// The configuration for the EC2 Fleet.
    /// This member is required.
    public var launchTemplateConfigs: [EC2ClientTypes.FleetLaunchTemplateConfigRequest]?
    /// Describes the configuration of On-Demand Instances in an EC2 Fleet.
    public var onDemandOptions: EC2ClientTypes.OnDemandOptionsRequest?
    /// Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type maintain. For more information, see [EC2 Fleet health checks](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks) in the Amazon EC2 User Guide.
    public var replaceUnhealthyInstances: Swift.Bool?
    /// Describes the configuration of Spot Instances in an EC2 Fleet.
    public var spotOptions: EC2ClientTypes.SpotOptionsRequest?
    /// The key-value pair for tagging the EC2 Fleet request on creation. For more information, see [Tagging your resources](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources). If the fleet type is instant, specify a resource type of fleet to tag the fleet or instance to tag the instances at launch. If the fleet type is maintain or request, specify a resource type of fleet to tag the fleet. You cannot specify a resource type of instance. To tag instances at launch, specify the tags in a [launch template](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template).
    public var tagSpecifications: [EC2ClientTypes.TagSpecification]?
    /// The number of units to request.
    /// This member is required.
    public var targetCapacitySpecification: EC2ClientTypes.TargetCapacitySpecificationRequest?
    /// Indicates whether running instances should be terminated when the EC2 Fleet expires.
    public var terminateInstancesWithExpiration: Swift.Bool?
    /// The fleet type. The default value is maintain.
    ///
    /// * maintain - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.
    ///
    /// * request - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.
    ///
    /// * instant - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.
    ///
    ///
    /// For more information, see [EC2 Fleet request types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html) in the Amazon EC2 User Guide.
    public var type: EC2ClientTypes.FleetType?
    /// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    public var validFrom: ClientRuntime.Date?
    /// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
    public var validUntil: ClientRuntime.Date?

    public init (
        clientToken: Swift.String? = nil,
        context: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        excessCapacityTerminationPolicy: EC2ClientTypes.FleetExcessCapacityTerminationPolicy? = nil,
        launchTemplateConfigs: [EC2ClientTypes.FleetLaunchTemplateConfigRequest]? = nil,
        onDemandOptions: EC2ClientTypes.OnDemandOptionsRequest? = nil,
        replaceUnhealthyInstances: Swift.Bool? = nil,
        spotOptions: EC2ClientTypes.SpotOptionsRequest? = nil,
        tagSpecifications: [EC2ClientTypes.TagSpecification]? = nil,
        targetCapacitySpecification: EC2ClientTypes.TargetCapacitySpecificationRequest? = nil,
        terminateInstancesWithExpiration: Swift.Bool? = nil,
        type: EC2ClientTypes.FleetType? = nil,
        validFrom: ClientRuntime.Date? = nil,
        validUntil: ClientRuntime.Date? = nil
    )
    {
        self.clientToken = clientToken
        self.context = context
        self.dryRun = dryRun
        self.excessCapacityTerminationPolicy = excessCapacityTerminationPolicy
        self.launchTemplateConfigs = launchTemplateConfigs
        self.onDemandOptions = onDemandOptions
        self.replaceUnhealthyInstances = replaceUnhealthyInstances
        self.spotOptions = spotOptions
        self.tagSpecifications = tagSpecifications
        self.targetCapacitySpecification = targetCapacitySpecification
        self.terminateInstancesWithExpiration = terminateInstancesWithExpiration
        self.type = type
        self.validFrom = validFrom
        self.validUntil = validUntil
    }
}
