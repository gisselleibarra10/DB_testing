// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EC2ClientTypes {
    public enum PeriodType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case fifteenMinutes
        case fiveMinutes
        case oneDay
        case oneHour
        case oneWeek
        case threeHours
        case sdkUnknown(Swift.String)

        public static var allCases: [PeriodType] {
            return [
                .fifteenMinutes,
                .fiveMinutes,
                .oneDay,
                .oneHour,
                .oneWeek,
                .threeHours,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .fifteenMinutes: return "fifteen-minutes"
            case .fiveMinutes: return "five-minutes"
            case .oneDay: return "one-day"
            case .oneHour: return "one-hour"
            case .oneWeek: return "one-week"
            case .threeHours: return "three-hours"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = PeriodType(rawValue: rawValue) ?? PeriodType.sdkUnknown(rawValue)
        }
    }
}
