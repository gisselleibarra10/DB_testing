// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePlacementGroupsOutputResponseBody: Swift.Equatable {
    let placementGroups: [EC2ClientTypes.PlacementGroup]?
}

extension DescribePlacementGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case placementGroups = "placementGroupSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.placementGroups) {
            struct KeyVal0{struct item{}}
            let placementGroupsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .placementGroups)
            if let placementGroupsWrappedContainer = placementGroupsWrappedContainer {
                let placementGroupsContainer = try placementGroupsWrappedContainer.decodeIfPresent([EC2ClientTypes.PlacementGroup].self, forKey: .member)
                var placementGroupsBuffer:[EC2ClientTypes.PlacementGroup]? = nil
                if let placementGroupsContainer = placementGroupsContainer {
                    placementGroupsBuffer = [EC2ClientTypes.PlacementGroup]()
                    for structureContainer0 in placementGroupsContainer {
                        placementGroupsBuffer?.append(structureContainer0)
                    }
                }
                placementGroups = placementGroupsBuffer
            } else {
                placementGroups = []
            }
        } else {
            placementGroups = nil
        }
    }
}
