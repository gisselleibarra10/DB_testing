// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.LoadBalancersConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case classicLoadBalancersConfig = "classicLoadBalancersConfig"
        case targetGroupsConfig = "targetGroupsConfig"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let classicLoadBalancersConfig = classicLoadBalancersConfig {
            try container.encode(classicLoadBalancersConfig, forKey: ClientRuntime.Key("ClassicLoadBalancersConfig"))
        }
        if let targetGroupsConfig = targetGroupsConfig {
            try container.encode(targetGroupsConfig, forKey: ClientRuntime.Key("TargetGroupsConfig"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let classicLoadBalancersConfigDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.ClassicLoadBalancersConfig.self, forKey: .classicLoadBalancersConfig)
        classicLoadBalancersConfig = classicLoadBalancersConfigDecoded
        let targetGroupsConfigDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.TargetGroupsConfig.self, forKey: .targetGroupsConfig)
        targetGroupsConfig = targetGroupsConfigDecoded
    }
}
