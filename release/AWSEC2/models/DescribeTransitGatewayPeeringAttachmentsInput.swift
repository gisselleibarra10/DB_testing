// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeTransitGatewayPeeringAttachmentsInput: Swift.Equatable {
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// One or more filters. The possible values are:
    ///
    /// * transit-gateway-attachment-id - The ID of the transit gateway attachment.
    ///
    /// * local-owner-id - The ID of your Amazon Web Services account.
    ///
    /// * remote-owner-id - The ID of the Amazon Web Services account in the remote Region that owns the transit gateway.
    ///
    /// * state - The state of the peering attachment. Valid values are available | deleted | deleting | failed | failing | initiatingRequest | modifying | pendingAcceptance | pending | rollingBack | rejected | rejecting).
    ///
    /// * tag: - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.
    ///
    /// * tag-key - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.
    ///
    /// * transit-gateway-id - The ID of the transit gateway.
    public var filters: [EC2ClientTypes.Filter]?
    /// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.
    public var maxResults: Swift.Int?
    /// The token for the next page of results.
    public var nextToken: Swift.String?
    /// One or more IDs of the transit gateway peering attachments.
    public var transitGatewayAttachmentIds: [Swift.String]?

    public init (
        dryRun: Swift.Bool? = nil,
        filters: [EC2ClientTypes.Filter]? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        transitGatewayAttachmentIds: [Swift.String]? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.transitGatewayAttachmentIds = transitGatewayAttachmentIds
    }
}
