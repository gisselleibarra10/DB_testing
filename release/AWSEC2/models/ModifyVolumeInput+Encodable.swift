// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifyVolumeInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let iops = iops {
            try container.encode(iops, forKey: ClientRuntime.Key("Iops"))
        }
        if let multiAttachEnabled = multiAttachEnabled {
            try container.encode(multiAttachEnabled, forKey: ClientRuntime.Key("MultiAttachEnabled"))
        }
        if let size = size {
            try container.encode(size, forKey: ClientRuntime.Key("Size"))
        }
        if let throughput = throughput {
            try container.encode(throughput, forKey: ClientRuntime.Key("Throughput"))
        }
        if let volumeId = volumeId {
            try container.encode(volumeId, forKey: ClientRuntime.Key("VolumeId"))
        }
        if let volumeType = volumeType {
            try container.encode(volumeType, forKey: ClientRuntime.Key("VolumeType"))
        }
        try container.encode("ModifyVolume", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
