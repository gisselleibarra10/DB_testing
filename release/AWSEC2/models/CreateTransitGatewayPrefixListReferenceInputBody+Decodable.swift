// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateTransitGatewayPrefixListReferenceInputBody: Swift.Equatable {
    let transitGatewayRouteTableId: Swift.String?
    let prefixListId: Swift.String?
    let transitGatewayAttachmentId: Swift.String?
    let blackhole: Swift.Bool?
    let dryRun: Swift.Bool?
}

extension CreateTransitGatewayPrefixListReferenceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case blackhole = "Blackhole"
        case dryRun = "DryRun"
        case prefixListId = "PrefixListId"
        case transitGatewayAttachmentId = "TransitGatewayAttachmentId"
        case transitGatewayRouteTableId = "TransitGatewayRouteTableId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transitGatewayRouteTableIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transitGatewayRouteTableId)
        transitGatewayRouteTableId = transitGatewayRouteTableIdDecoded
        let prefixListIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .prefixListId)
        prefixListId = prefixListIdDecoded
        let transitGatewayAttachmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transitGatewayAttachmentId)
        transitGatewayAttachmentId = transitGatewayAttachmentIdDecoded
        let blackholeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .blackhole)
        blackhole = blackholeDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
