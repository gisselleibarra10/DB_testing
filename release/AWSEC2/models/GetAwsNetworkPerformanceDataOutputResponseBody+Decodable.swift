// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAwsNetworkPerformanceDataOutputResponseBody: Swift.Equatable {
    let dataResponses: [EC2ClientTypes.DataResponse]?
    let nextToken: Swift.String?
}

extension GetAwsNetworkPerformanceDataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataResponses = "dataResponseSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.dataResponses) {
            struct KeyVal0{struct item{}}
            let dataResponsesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .dataResponses)
            if let dataResponsesWrappedContainer = dataResponsesWrappedContainer {
                let dataResponsesContainer = try dataResponsesWrappedContainer.decodeIfPresent([EC2ClientTypes.DataResponse].self, forKey: .member)
                var dataResponsesBuffer:[EC2ClientTypes.DataResponse]? = nil
                if let dataResponsesContainer = dataResponsesContainer {
                    dataResponsesBuffer = [EC2ClientTypes.DataResponse]()
                    for structureContainer0 in dataResponsesContainer {
                        dataResponsesBuffer?.append(structureContainer0)
                    }
                }
                dataResponses = dataResponsesBuffer
            } else {
                dataResponses = []
            }
        } else {
            dataResponses = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
