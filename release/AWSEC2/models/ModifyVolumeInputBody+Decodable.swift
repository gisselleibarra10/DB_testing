// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyVolumeInputBody: Swift.Equatable {
    let dryRun: Swift.Bool?
    let volumeId: Swift.String?
    let size: Swift.Int?
    let volumeType: EC2ClientTypes.VolumeType?
    let iops: Swift.Int?
    let throughput: Swift.Int?
    let multiAttachEnabled: Swift.Bool?
}

extension ModifyVolumeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "DryRun"
        case iops = "Iops"
        case multiAttachEnabled = "MultiAttachEnabled"
        case size = "Size"
        case throughput = "Throughput"
        case volumeId = "VolumeId"
        case volumeType = "VolumeType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let volumeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeId)
        volumeId = volumeIdDecoded
        let sizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .size)
        size = sizeDecoded
        let volumeTypeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.VolumeType.self, forKey: .volumeType)
        volumeType = volumeTypeDecoded
        let iopsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .iops)
        iops = iopsDecoded
        let throughputDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .throughput)
        throughput = throughputDecoded
        let multiAttachEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .multiAttachEnabled)
        multiAttachEnabled = multiAttachEnabledDecoded
    }
}
