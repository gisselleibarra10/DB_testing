// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateClientVpnTargetNetworkInputBody: Swift.Equatable {
    let clientVpnEndpointId: Swift.String?
    let subnetId: Swift.String?
    let clientToken: Swift.String?
    let dryRun: Swift.Bool?
}

extension AssociateClientVpnTargetNetworkInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case clientVpnEndpointId = "ClientVpnEndpointId"
        case dryRun = "DryRun"
        case subnetId = "SubnetId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientVpnEndpointIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientVpnEndpointId)
        clientVpnEndpointId = clientVpnEndpointIdDecoded
        let subnetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subnetId)
        subnetId = subnetIdDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
