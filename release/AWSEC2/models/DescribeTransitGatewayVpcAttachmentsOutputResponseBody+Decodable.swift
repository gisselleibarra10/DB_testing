// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTransitGatewayVpcAttachmentsOutputResponseBody: Swift.Equatable {
    let transitGatewayVpcAttachments: [EC2ClientTypes.TransitGatewayVpcAttachment]?
    let nextToken: Swift.String?
}

extension DescribeTransitGatewayVpcAttachmentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case transitGatewayVpcAttachments = "transitGatewayVpcAttachments"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.transitGatewayVpcAttachments) {
            struct KeyVal0{struct item{}}
            let transitGatewayVpcAttachmentsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .transitGatewayVpcAttachments)
            if let transitGatewayVpcAttachmentsWrappedContainer = transitGatewayVpcAttachmentsWrappedContainer {
                let transitGatewayVpcAttachmentsContainer = try transitGatewayVpcAttachmentsWrappedContainer.decodeIfPresent([EC2ClientTypes.TransitGatewayVpcAttachment].self, forKey: .member)
                var transitGatewayVpcAttachmentsBuffer:[EC2ClientTypes.TransitGatewayVpcAttachment]? = nil
                if let transitGatewayVpcAttachmentsContainer = transitGatewayVpcAttachmentsContainer {
                    transitGatewayVpcAttachmentsBuffer = [EC2ClientTypes.TransitGatewayVpcAttachment]()
                    for structureContainer0 in transitGatewayVpcAttachmentsContainer {
                        transitGatewayVpcAttachmentsBuffer?.append(structureContainer0)
                    }
                }
                transitGatewayVpcAttachments = transitGatewayVpcAttachmentsBuffer
            } else {
                transitGatewayVpcAttachments = []
            }
        } else {
            transitGatewayVpcAttachments = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
