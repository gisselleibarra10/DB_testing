// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.FederatedAuthentication: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case samlProviderArn = "samlProviderArn"
        case selfServiceSamlProviderArn = "selfServiceSamlProviderArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let samlProviderArn = samlProviderArn {
            try container.encode(samlProviderArn, forKey: ClientRuntime.Key("SamlProviderArn"))
        }
        if let selfServiceSamlProviderArn = selfServiceSamlProviderArn {
            try container.encode(selfServiceSamlProviderArn, forKey: ClientRuntime.Key("SelfServiceSamlProviderArn"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let samlProviderArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .samlProviderArn)
        samlProviderArn = samlProviderArnDecoded
        let selfServiceSamlProviderArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .selfServiceSamlProviderArn)
        selfServiceSamlProviderArn = selfServiceSamlProviderArnDecoded
    }
}
