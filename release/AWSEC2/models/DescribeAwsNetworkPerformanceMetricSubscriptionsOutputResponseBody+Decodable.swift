// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAwsNetworkPerformanceMetricSubscriptionsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let subscriptions: [EC2ClientTypes.Subscription]?
}

extension DescribeAwsNetworkPerformanceMetricSubscriptionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case subscriptions = "subscriptionSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.subscriptions) {
            struct KeyVal0{struct item{}}
            let subscriptionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .subscriptions)
            if let subscriptionsWrappedContainer = subscriptionsWrappedContainer {
                let subscriptionsContainer = try subscriptionsWrappedContainer.decodeIfPresent([EC2ClientTypes.Subscription].self, forKey: .member)
                var subscriptionsBuffer:[EC2ClientTypes.Subscription]? = nil
                if let subscriptionsContainer = subscriptionsContainer {
                    subscriptionsBuffer = [EC2ClientTypes.Subscription]()
                    for structureContainer0 in subscriptionsContainer {
                        subscriptionsBuffer?.append(structureContainer0)
                    }
                }
                subscriptions = subscriptionsBuffer
            } else {
                subscriptions = []
            }
        } else {
            subscriptions = nil
        }
    }
}
