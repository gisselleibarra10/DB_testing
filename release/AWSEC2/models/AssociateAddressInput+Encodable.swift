// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AssociateAddressInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let allocationId = allocationId {
            try container.encode(allocationId, forKey: ClientRuntime.Key("AllocationId"))
        }
        if let allowReassociation = allowReassociation {
            try container.encode(allowReassociation, forKey: ClientRuntime.Key("AllowReassociation"))
        }
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let instanceId = instanceId {
            try container.encode(instanceId, forKey: ClientRuntime.Key("InstanceId"))
        }
        if let networkInterfaceId = networkInterfaceId {
            try container.encode(networkInterfaceId, forKey: ClientRuntime.Key("NetworkInterfaceId"))
        }
        if let privateIpAddress = privateIpAddress {
            try container.encode(privateIpAddress, forKey: ClientRuntime.Key("PrivateIpAddress"))
        }
        if let publicIp = publicIp {
            try container.encode(publicIp, forKey: ClientRuntime.Key("PublicIp"))
        }
        try container.encode("AssociateAddress", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
