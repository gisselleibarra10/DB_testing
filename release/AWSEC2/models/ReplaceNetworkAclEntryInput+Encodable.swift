// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ReplaceNetworkAclEntryInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let cidrBlock = cidrBlock {
            try container.encode(cidrBlock, forKey: ClientRuntime.Key("CidrBlock"))
        }
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let egress = egress {
            try container.encode(egress, forKey: ClientRuntime.Key("Egress"))
        }
        if let icmpTypeCode = icmpTypeCode {
            try container.encode(icmpTypeCode, forKey: ClientRuntime.Key("Icmp"))
        }
        if let ipv6CidrBlock = ipv6CidrBlock {
            try container.encode(ipv6CidrBlock, forKey: ClientRuntime.Key("Ipv6CidrBlock"))
        }
        if let networkAclId = networkAclId {
            try container.encode(networkAclId, forKey: ClientRuntime.Key("NetworkAclId"))
        }
        if let portRange = portRange {
            try container.encode(portRange, forKey: ClientRuntime.Key("PortRange"))
        }
        if let `protocol` = `protocol` {
            try container.encode(`protocol`, forKey: ClientRuntime.Key("Protocol"))
        }
        if let ruleAction = ruleAction {
            try container.encode(ruleAction, forKey: ClientRuntime.Key("RuleAction"))
        }
        if let ruleNumber = ruleNumber {
            try container.encode(ruleNumber, forKey: ClientRuntime.Key("RuleNumber"))
        }
        try container.encode("ReplaceNetworkAclEntry", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
