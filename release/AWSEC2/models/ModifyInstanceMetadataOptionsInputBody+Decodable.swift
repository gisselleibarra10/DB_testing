// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyInstanceMetadataOptionsInputBody: Swift.Equatable {
    let instanceId: Swift.String?
    let httpTokens: EC2ClientTypes.HttpTokensState?
    let httpPutResponseHopLimit: Swift.Int?
    let httpEndpoint: EC2ClientTypes.InstanceMetadataEndpointState?
    let dryRun: Swift.Bool?
    let httpProtocolIpv6: EC2ClientTypes.InstanceMetadataProtocolState?
    let instanceMetadataTags: EC2ClientTypes.InstanceMetadataTagsState?
}

extension ModifyInstanceMetadataOptionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "DryRun"
        case httpEndpoint = "HttpEndpoint"
        case httpProtocolIpv6 = "HttpProtocolIpv6"
        case httpPutResponseHopLimit = "HttpPutResponseHopLimit"
        case httpTokens = "HttpTokens"
        case instanceId = "InstanceId"
        case instanceMetadataTags = "InstanceMetadataTags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let httpTokensDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.HttpTokensState.self, forKey: .httpTokens)
        httpTokens = httpTokensDecoded
        let httpPutResponseHopLimitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .httpPutResponseHopLimit)
        httpPutResponseHopLimit = httpPutResponseHopLimitDecoded
        let httpEndpointDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.InstanceMetadataEndpointState.self, forKey: .httpEndpoint)
        httpEndpoint = httpEndpointDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let httpProtocolIpv6Decoded = try containerValues.decodeIfPresent(EC2ClientTypes.InstanceMetadataProtocolState.self, forKey: .httpProtocolIpv6)
        httpProtocolIpv6 = httpProtocolIpv6Decoded
        let instanceMetadataTagsDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.InstanceMetadataTagsState.self, forKey: .instanceMetadataTags)
        instanceMetadataTags = instanceMetadataTagsDecoded
    }
}
