// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateFpgaImageInput: Swift.Equatable {
    /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [Ensuring Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
    public var clientToken: Swift.String?
    /// A description for the AFI.
    public var description: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The location of the encrypted design checkpoint in Amazon S3. The input must be a tarball.
    /// This member is required.
    public var inputStorageLocation: EC2ClientTypes.StorageLocation?
    /// The location in Amazon S3 for the output logs.
    public var logsStorageLocation: EC2ClientTypes.StorageLocation?
    /// A name for the AFI.
    public var name: Swift.String?
    /// The tags to apply to the FPGA image during creation.
    public var tagSpecifications: [EC2ClientTypes.TagSpecification]?

    public init (
        clientToken: Swift.String? = nil,
        description: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        inputStorageLocation: EC2ClientTypes.StorageLocation? = nil,
        logsStorageLocation: EC2ClientTypes.StorageLocation? = nil,
        name: Swift.String? = nil,
        tagSpecifications: [EC2ClientTypes.TagSpecification]? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.dryRun = dryRun
        self.inputStorageLocation = inputStorageLocation
        self.logsStorageLocation = logsStorageLocation
        self.name = name
        self.tagSpecifications = tagSpecifications
    }
}
