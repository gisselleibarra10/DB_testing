// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyTrafficMirrorFilterRuleInput: Swift.Equatable {
    /// The description to assign to the Traffic Mirror rule.
    public var description: Swift.String?
    /// The destination CIDR block to assign to the Traffic Mirror rule.
    public var destinationCidrBlock: Swift.String?
    /// The destination ports that are associated with the Traffic Mirror rule.
    public var destinationPortRange: EC2ClientTypes.TrafficMirrorPortRangeRequest?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The protocol, for example TCP, to assign to the Traffic Mirror rule.
    public var `protocol`: Swift.Int?
    /// The properties that you want to remove from the Traffic Mirror filter rule. When you remove a property from a Traffic Mirror filter rule, the property is set to the default.
    public var removeFields: [EC2ClientTypes.TrafficMirrorFilterRuleField]?
    /// The action to assign to the rule.
    public var ruleAction: EC2ClientTypes.TrafficMirrorRuleAction?
    /// The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
    public var ruleNumber: Swift.Int?
    /// The source CIDR block to assign to the Traffic Mirror rule.
    public var sourceCidrBlock: Swift.String?
    /// The port range to assign to the Traffic Mirror rule.
    public var sourcePortRange: EC2ClientTypes.TrafficMirrorPortRangeRequest?
    /// The type of traffic to assign to the rule.
    public var trafficDirection: EC2ClientTypes.TrafficDirection?
    /// The ID of the Traffic Mirror rule.
    /// This member is required.
    public var trafficMirrorFilterRuleId: Swift.String?

    public init (
        description: Swift.String? = nil,
        destinationCidrBlock: Swift.String? = nil,
        destinationPortRange: EC2ClientTypes.TrafficMirrorPortRangeRequest? = nil,
        dryRun: Swift.Bool? = nil,
        `protocol`: Swift.Int? = nil,
        removeFields: [EC2ClientTypes.TrafficMirrorFilterRuleField]? = nil,
        ruleAction: EC2ClientTypes.TrafficMirrorRuleAction? = nil,
        ruleNumber: Swift.Int? = nil,
        sourceCidrBlock: Swift.String? = nil,
        sourcePortRange: EC2ClientTypes.TrafficMirrorPortRangeRequest? = nil,
        trafficDirection: EC2ClientTypes.TrafficDirection? = nil,
        trafficMirrorFilterRuleId: Swift.String? = nil
    )
    {
        self.description = description
        self.destinationCidrBlock = destinationCidrBlock
        self.destinationPortRange = destinationPortRange
        self.dryRun = dryRun
        self.`protocol` = `protocol`
        self.removeFields = removeFields
        self.ruleAction = ruleAction
        self.ruleNumber = ruleNumber
        self.sourceCidrBlock = sourceCidrBlock
        self.sourcePortRange = sourcePortRange
        self.trafficDirection = trafficDirection
        self.trafficMirrorFilterRuleId = trafficMirrorFilterRuleId
    }
}
