// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetIpamResourceCidrsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let ipamResourceCidrs: [EC2ClientTypes.IpamResourceCidr]?
}

extension GetIpamResourceCidrsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ipamResourceCidrs = "ipamResourceCidrSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.ipamResourceCidrs) {
            struct KeyVal0{struct item{}}
            let ipamResourceCidrsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .ipamResourceCidrs)
            if let ipamResourceCidrsWrappedContainer = ipamResourceCidrsWrappedContainer {
                let ipamResourceCidrsContainer = try ipamResourceCidrsWrappedContainer.decodeIfPresent([EC2ClientTypes.IpamResourceCidr].self, forKey: .member)
                var ipamResourceCidrsBuffer:[EC2ClientTypes.IpamResourceCidr]? = nil
                if let ipamResourceCidrsContainer = ipamResourceCidrsContainer {
                    ipamResourceCidrsBuffer = [EC2ClientTypes.IpamResourceCidr]()
                    for structureContainer0 in ipamResourceCidrsContainer {
                        ipamResourceCidrsBuffer?.append(structureContainer0)
                    }
                }
                ipamResourceCidrs = ipamResourceCidrsBuffer
            } else {
                ipamResourceCidrs = []
            }
        } else {
            ipamResourceCidrs = nil
        }
    }
}
