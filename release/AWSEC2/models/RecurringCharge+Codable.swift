// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.RecurringCharge: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case amount = "amount"
        case frequency = "frequency"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let amount = amount {
            try container.encode(amount, forKey: ClientRuntime.Key("Amount"))
        }
        if let frequency = frequency {
            try container.encode(frequency, forKey: ClientRuntime.Key("Frequency"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let amountDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .amount)
        amount = amountDecoded
        let frequencyDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.RecurringChargeFrequency.self, forKey: .frequency)
        frequency = frequencyDecoded
    }
}
