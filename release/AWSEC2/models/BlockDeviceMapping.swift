// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EC2ClientTypes {
    /// Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch.
    public struct BlockDeviceMapping: Swift.Equatable {
        /// The device name (for example, /dev/sdh or xvdh).
        public var deviceName: Swift.String?
        /// Parameters used to automatically set up EBS volumes when the instance is launched.
        public var ebs: EC2ClientTypes.EbsBlockDevice?
        /// To omit the device from the block device mapping, specify an empty string. When this property is specified, the device is removed from the block device mapping regardless of the assigned value.
        public var noDevice: Swift.String?
        /// The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume. NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect. Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.
        public var virtualName: Swift.String?

        public init (
            deviceName: Swift.String? = nil,
            ebs: EC2ClientTypes.EbsBlockDevice? = nil,
            noDevice: Swift.String? = nil,
            virtualName: Swift.String? = nil
        )
        {
            self.deviceName = deviceName
            self.ebs = ebs
            self.noDevice = noDevice
            self.virtualName = virtualName
        }
    }

}
