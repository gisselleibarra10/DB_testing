// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyVpcEndpointServiceConfigurationInput: Swift.Equatable {
    /// Indicates whether requests to create an endpoint to your service must be accepted.
    public var acceptanceRequired: Swift.Bool?
    /// The Amazon Resource Names (ARNs) of Gateway Load Balancers to add to your service configuration.
    public var addGatewayLoadBalancerArns: [Swift.String]?
    /// The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service configuration.
    public var addNetworkLoadBalancerArns: [Swift.String]?
    /// The IP address types to add to your service configuration.
    public var addSupportedIpAddressTypes: [Swift.String]?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// (Interface endpoint configuration) The private DNS name to assign to the endpoint service.
    public var privateDnsName: Swift.String?
    /// The Amazon Resource Names (ARNs) of Gateway Load Balancers to remove from your service configuration.
    public var removeGatewayLoadBalancerArns: [Swift.String]?
    /// The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service configuration.
    public var removeNetworkLoadBalancerArns: [Swift.String]?
    /// (Interface endpoint configuration) Removes the private DNS name of the endpoint service.
    public var removePrivateDnsName: Swift.Bool?
    /// The IP address types to remove from your service configuration.
    public var removeSupportedIpAddressTypes: [Swift.String]?
    /// The ID of the service.
    /// This member is required.
    public var serviceId: Swift.String?

    public init (
        acceptanceRequired: Swift.Bool? = nil,
        addGatewayLoadBalancerArns: [Swift.String]? = nil,
        addNetworkLoadBalancerArns: [Swift.String]? = nil,
        addSupportedIpAddressTypes: [Swift.String]? = nil,
        dryRun: Swift.Bool? = nil,
        privateDnsName: Swift.String? = nil,
        removeGatewayLoadBalancerArns: [Swift.String]? = nil,
        removeNetworkLoadBalancerArns: [Swift.String]? = nil,
        removePrivateDnsName: Swift.Bool? = nil,
        removeSupportedIpAddressTypes: [Swift.String]? = nil,
        serviceId: Swift.String? = nil
    )
    {
        self.acceptanceRequired = acceptanceRequired
        self.addGatewayLoadBalancerArns = addGatewayLoadBalancerArns
        self.addNetworkLoadBalancerArns = addNetworkLoadBalancerArns
        self.addSupportedIpAddressTypes = addSupportedIpAddressTypes
        self.dryRun = dryRun
        self.privateDnsName = privateDnsName
        self.removeGatewayLoadBalancerArns = removeGatewayLoadBalancerArns
        self.removeNetworkLoadBalancerArns = removeNetworkLoadBalancerArns
        self.removePrivateDnsName = removePrivateDnsName
        self.removeSupportedIpAddressTypes = removeSupportedIpAddressTypes
        self.serviceId = serviceId
    }
}
