// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ImportSnapshotInput: Swift.Equatable {
    /// The client-specific data.
    public var clientData: Ec2ClientTypes.ClientData?
    /// Token to enable idempotency for VM import requests.
    public var clientToken: Swift.String?
    /// The description string for the import snapshot task.
    public var description: Swift.String?
    /// Information about the disk container.
    public var diskContainer: Ec2ClientTypes.SnapshotDiskContainer?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// Specifies whether the destination snapshot of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using KmsKeyId. For more information, see [Amazon EBS Encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) in the Amazon Elastic Compute Cloud User Guide.
    public var encrypted: Swift.Bool?
    /// An identifier for the symmetric KMS key to use when creating the encrypted snapshot. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set. The KMS key identifier may be provided in any of the following formats:
    ///
    /// * Key ID
    ///
    /// * Key alias. The alias ARN contains the arn:aws:kms namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the alias namespace, and then the key alias. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
    ///
    /// * ARN using key ID. The ID ARN contains the arn:aws:kms namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the key namespace, and then the key ID. For example, arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef.
    ///
    /// * ARN using key alias. The alias ARN contains the arn:aws:kms namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the alias namespace, and then the key alias. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
    ///
    ///
    /// Amazon Web Services parses KmsKeyId asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure. The specified KMS key must exist in the Region that the snapshot is being copied to. Amazon EBS does not support asymmetric KMS keys.
    public var kmsKeyId: Swift.String?
    /// The name of the role to use when not using the default role, 'vmimport'.
    public var roleName: Swift.String?
    /// The tags to apply to the import snapshot task during creation.
    public var tagSpecifications: [Ec2ClientTypes.TagSpecification]?

    public init (
        clientData: Ec2ClientTypes.ClientData? = nil,
        clientToken: Swift.String? = nil,
        description: Swift.String? = nil,
        diskContainer: Ec2ClientTypes.SnapshotDiskContainer? = nil,
        dryRun: Swift.Bool? = nil,
        encrypted: Swift.Bool? = nil,
        kmsKeyId: Swift.String? = nil,
        roleName: Swift.String? = nil,
        tagSpecifications: [Ec2ClientTypes.TagSpecification]? = nil
    )
    {
        self.clientData = clientData
        self.clientToken = clientToken
        self.description = description
        self.diskContainer = diskContainer
        self.dryRun = dryRun
        self.encrypted = encrypted
        self.kmsKeyId = kmsKeyId
        self.roleName = roleName
        self.tagSpecifications = tagSpecifications
    }
}
