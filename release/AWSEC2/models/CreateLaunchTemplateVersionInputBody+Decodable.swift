// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLaunchTemplateVersionInputBody: Swift.Equatable {
    let dryRun: Swift.Bool?
    let clientToken: Swift.String?
    let launchTemplateId: Swift.String?
    let launchTemplateName: Swift.String?
    let sourceVersion: Swift.String?
    let versionDescription: Swift.String?
    let launchTemplateData: Ec2ClientTypes.RequestLaunchTemplateData?
}

extension CreateLaunchTemplateVersionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case dryRun = "DryRun"
        case launchTemplateData = "LaunchTemplateData"
        case launchTemplateId = "LaunchTemplateId"
        case launchTemplateName = "LaunchTemplateName"
        case sourceVersion = "SourceVersion"
        case versionDescription = "VersionDescription"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let launchTemplateIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .launchTemplateId)
        launchTemplateId = launchTemplateIdDecoded
        let launchTemplateNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .launchTemplateName)
        launchTemplateName = launchTemplateNameDecoded
        let sourceVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceVersion)
        sourceVersion = sourceVersionDecoded
        let versionDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .versionDescription)
        versionDescription = versionDescriptionDecoded
        let launchTemplateDataDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.RequestLaunchTemplateData.self, forKey: .launchTemplateData)
        launchTemplateData = launchTemplateDataDecoded
    }
}
