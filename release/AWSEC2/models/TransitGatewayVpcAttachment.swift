// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes {
    /// Describes a VPC attachment.
    public struct TransitGatewayVpcAttachment: Swift.Equatable {
        /// The creation time.
        public var creationTime: ClientRuntime.Date?
        /// The VPC attachment options.
        public var options: EC2ClientTypes.TransitGatewayVpcAttachmentOptions?
        /// The state of the VPC attachment. Note that the initiating state has been deprecated.
        public var state: EC2ClientTypes.TransitGatewayAttachmentState?
        /// The IDs of the subnets.
        public var subnetIds: [Swift.String]?
        /// The tags for the VPC attachment.
        public var tags: [EC2ClientTypes.Tag]?
        /// The ID of the attachment.
        public var transitGatewayAttachmentId: Swift.String?
        /// The ID of the transit gateway.
        public var transitGatewayId: Swift.String?
        /// The ID of the VPC.
        public var vpcId: Swift.String?
        /// The ID of the Amazon Web Services account that owns the VPC.
        public var vpcOwnerId: Swift.String?

        public init (
            creationTime: ClientRuntime.Date? = nil,
            options: EC2ClientTypes.TransitGatewayVpcAttachmentOptions? = nil,
            state: EC2ClientTypes.TransitGatewayAttachmentState? = nil,
            subnetIds: [Swift.String]? = nil,
            tags: [EC2ClientTypes.Tag]? = nil,
            transitGatewayAttachmentId: Swift.String? = nil,
            transitGatewayId: Swift.String? = nil,
            vpcId: Swift.String? = nil,
            vpcOwnerId: Swift.String? = nil
        )
        {
            self.creationTime = creationTime
            self.options = options
            self.state = state
            self.subnetIds = subnetIds
            self.tags = tags
            self.transitGatewayAttachmentId = transitGatewayAttachmentId
            self.transitGatewayId = transitGatewayId
            self.vpcId = vpcId
            self.vpcOwnerId = vpcOwnerId
        }
    }

}
