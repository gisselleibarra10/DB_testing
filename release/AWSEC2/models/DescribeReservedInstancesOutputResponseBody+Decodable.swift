// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReservedInstancesOutputResponseBody: Swift.Equatable {
    let reservedInstances: [Ec2ClientTypes.ReservedInstances]?
}

extension DescribeReservedInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case reservedInstances = "reservedInstancesSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.reservedInstances) {
            struct KeyVal0{struct item{}}
            let reservedInstancesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .reservedInstances)
            if let reservedInstancesWrappedContainer = reservedInstancesWrappedContainer {
                let reservedInstancesContainer = try reservedInstancesWrappedContainer.decodeIfPresent([Ec2ClientTypes.ReservedInstances].self, forKey: .member)
                var reservedInstancesBuffer:[Ec2ClientTypes.ReservedInstances]? = nil
                if let reservedInstancesContainer = reservedInstancesContainer {
                    reservedInstancesBuffer = [Ec2ClientTypes.ReservedInstances]()
                    for structureContainer0 in reservedInstancesContainer {
                        reservedInstancesBuffer?.append(structureContainer0)
                    }
                }
                reservedInstances = reservedInstancesBuffer
            } else {
                reservedInstances = []
            }
        } else {
            reservedInstances = nil
        }
    }
}
