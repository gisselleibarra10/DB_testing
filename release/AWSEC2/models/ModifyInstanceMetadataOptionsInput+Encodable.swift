// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifyInstanceMetadataOptionsInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let httpEndpoint = httpEndpoint {
            try container.encode(httpEndpoint, forKey: ClientRuntime.Key("HttpEndpoint"))
        }
        if let httpProtocolIpv6 = httpProtocolIpv6 {
            try container.encode(httpProtocolIpv6, forKey: ClientRuntime.Key("HttpProtocolIpv6"))
        }
        if let httpPutResponseHopLimit = httpPutResponseHopLimit {
            try container.encode(httpPutResponseHopLimit, forKey: ClientRuntime.Key("HttpPutResponseHopLimit"))
        }
        if let httpTokens = httpTokens {
            try container.encode(httpTokens, forKey: ClientRuntime.Key("HttpTokens"))
        }
        if let instanceId = instanceId {
            try container.encode(instanceId, forKey: ClientRuntime.Key("InstanceId"))
        }
        if let instanceMetadataTags = instanceMetadataTags {
            try container.encode(instanceMetadataTags, forKey: ClientRuntime.Key("InstanceMetadataTags"))
        }
        try container.encode("ModifyInstanceMetadataOptions", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
