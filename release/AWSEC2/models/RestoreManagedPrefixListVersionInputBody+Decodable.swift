// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RestoreManagedPrefixListVersionInputBody: Swift.Equatable {
    let dryRun: Swift.Bool?
    let prefixListId: Swift.String?
    let previousVersion: Swift.Int?
    let currentVersion: Swift.Int?
}

extension RestoreManagedPrefixListVersionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case currentVersion = "CurrentVersion"
        case dryRun = "DryRun"
        case prefixListId = "PrefixListId"
        case previousVersion = "PreviousVersion"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let prefixListIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .prefixListId)
        prefixListId = prefixListIdDecoded
        let previousVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .previousVersion)
        previousVersion = previousVersionDecoded
        let currentVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .currentVersion)
        currentVersion = currentVersionDecoded
    }
}
