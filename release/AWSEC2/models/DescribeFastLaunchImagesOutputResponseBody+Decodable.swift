// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFastLaunchImagesOutputResponseBody: Swift.Equatable {
    let fastLaunchImages: [Ec2ClientTypes.DescribeFastLaunchImagesSuccessItem]?
    let nextToken: Swift.String?
}

extension DescribeFastLaunchImagesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fastLaunchImages = "fastLaunchImageSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.fastLaunchImages) {
            struct KeyVal0{struct item{}}
            let fastLaunchImagesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .fastLaunchImages)
            if let fastLaunchImagesWrappedContainer = fastLaunchImagesWrappedContainer {
                let fastLaunchImagesContainer = try fastLaunchImagesWrappedContainer.decodeIfPresent([Ec2ClientTypes.DescribeFastLaunchImagesSuccessItem].self, forKey: .member)
                var fastLaunchImagesBuffer:[Ec2ClientTypes.DescribeFastLaunchImagesSuccessItem]? = nil
                if let fastLaunchImagesContainer = fastLaunchImagesContainer {
                    fastLaunchImagesBuffer = [Ec2ClientTypes.DescribeFastLaunchImagesSuccessItem]()
                    for structureContainer0 in fastLaunchImagesContainer {
                        fastLaunchImagesBuffer?.append(structureContainer0)
                    }
                }
                fastLaunchImages = fastLaunchImagesBuffer
            } else {
                fastLaunchImages = []
            }
        } else {
            fastLaunchImages = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
