// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.TransitGatewayVpcAttachmentOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applianceModeSupport = "applianceModeSupport"
        case dnsSupport = "dnsSupport"
        case ipv6Support = "ipv6Support"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let applianceModeSupport = applianceModeSupport {
            try container.encode(applianceModeSupport, forKey: ClientRuntime.Key("ApplianceModeSupport"))
        }
        if let dnsSupport = dnsSupport {
            try container.encode(dnsSupport, forKey: ClientRuntime.Key("DnsSupport"))
        }
        if let ipv6Support = ipv6Support {
            try container.encode(ipv6Support, forKey: ClientRuntime.Key("Ipv6Support"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dnsSupportDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.DnsSupportValue.self, forKey: .dnsSupport)
        dnsSupport = dnsSupportDecoded
        let ipv6SupportDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.Ipv6SupportValue.self, forKey: .ipv6Support)
        ipv6Support = ipv6SupportDecoded
        let applianceModeSupportDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.ApplianceModeSupportValue.self, forKey: .applianceModeSupport)
        applianceModeSupport = applianceModeSupportDecoded
    }
}
