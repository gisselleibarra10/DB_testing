// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.AnalysisAclRule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cidr = "cidr"
        case egress = "egress"
        case portRange = "portRange"
        case `protocol` = "protocol"
        case ruleAction = "ruleAction"
        case ruleNumber = "ruleNumber"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let cidr = cidr {
            try container.encode(cidr, forKey: ClientRuntime.Key("Cidr"))
        }
        if let egress = egress {
            try container.encode(egress, forKey: ClientRuntime.Key("Egress"))
        }
        if let portRange = portRange {
            try container.encode(portRange, forKey: ClientRuntime.Key("PortRange"))
        }
        if let `protocol` = `protocol` {
            try container.encode(`protocol`, forKey: ClientRuntime.Key("Protocol"))
        }
        if let ruleAction = ruleAction {
            try container.encode(ruleAction, forKey: ClientRuntime.Key("RuleAction"))
        }
        if let ruleNumber = ruleNumber {
            try container.encode(ruleNumber, forKey: ClientRuntime.Key("RuleNumber"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cidr)
        cidr = cidrDecoded
        let egressDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .egress)
        egress = egressDecoded
        let portRangeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.PortRange.self, forKey: .portRange)
        portRange = portRangeDecoded
        let protocolDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .protocol)
        `protocol` = protocolDecoded
        let ruleActionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ruleAction)
        ruleAction = ruleActionDecoded
        let ruleNumberDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .ruleNumber)
        ruleNumber = ruleNumberDecoded
    }
}
