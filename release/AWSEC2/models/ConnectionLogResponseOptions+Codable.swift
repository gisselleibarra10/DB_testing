// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.ConnectionLogResponseOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cloudwatchLogGroup = "CloudwatchLogGroup"
        case cloudwatchLogStream = "CloudwatchLogStream"
        case enabled = "Enabled"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let cloudwatchLogGroup = cloudwatchLogGroup {
            try container.encode(cloudwatchLogGroup, forKey: ClientRuntime.Key("CloudwatchLogGroup"))
        }
        if let cloudwatchLogStream = cloudwatchLogStream {
            try container.encode(cloudwatchLogStream, forKey: ClientRuntime.Key("CloudwatchLogStream"))
        }
        if let enabled = enabled {
            try container.encode(enabled, forKey: ClientRuntime.Key("Enabled"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let cloudwatchLogGroupDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cloudwatchLogGroup)
        cloudwatchLogGroup = cloudwatchLogGroupDecoded
        let cloudwatchLogStreamDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cloudwatchLogStream)
        cloudwatchLogStream = cloudwatchLogStreamDecoded
    }
}
