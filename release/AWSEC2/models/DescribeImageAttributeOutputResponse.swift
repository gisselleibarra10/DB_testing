// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Describes an image attribute.
public struct DescribeImageAttributeOutputResponse: Swift.Equatable {
    /// The block device mapping entries.
    public var blockDeviceMappings: [EC2ClientTypes.BlockDeviceMapping]?
    /// The boot mode.
    public var bootMode: EC2ClientTypes.AttributeValue?
    /// A description for the AMI.
    public var description: EC2ClientTypes.AttributeValue?
    /// The ID of the AMI.
    public var imageId: Swift.String?
    /// If v2.0, it indicates that IMDSv2 is specified in the AMI. Instances launched from this AMI will have HttpTokens automatically set to required so that, by default, the instance requires that IMDSv2 is used when requesting instance metadata. In addition, HttpPutResponseHopLimit is set to 2. For more information, see [Configure the AMI](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration) in the Amazon EC2 User Guide.
    public var imdsSupport: EC2ClientTypes.AttributeValue?
    /// The kernel ID.
    public var kernelId: EC2ClientTypes.AttributeValue?
    /// The date and time, in [ISO 8601 date-time format](http://www.iso.org/iso/iso8601), when the AMI was last used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported. lastLaunchedTime data is available starting April 2017.
    public var lastLaunchedTime: EC2ClientTypes.AttributeValue?
    /// The launch permissions.
    public var launchPermissions: [EC2ClientTypes.LaunchPermission]?
    /// The product codes.
    public var productCodes: [EC2ClientTypes.ProductCode]?
    /// The RAM disk ID.
    public var ramdiskId: EC2ClientTypes.AttributeValue?
    /// Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
    public var sriovNetSupport: EC2ClientTypes.AttributeValue?
    /// If the image is configured for NitroTPM support, the value is v2.0.
    public var tpmSupport: EC2ClientTypes.AttributeValue?
    /// Base64 representation of the non-volatile UEFI variable store. To retrieve the UEFI data, use the [GetInstanceUefiData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceUefiData) command. You can inspect and modify the UEFI data by using the [python-uefivars tool](https://github.com/awslabs/python-uefivars) on GitHub. For more information, see [UEFI Secure Boot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html) in the Amazon EC2 User Guide.
    public var uefiData: EC2ClientTypes.AttributeValue?

    public init (
        blockDeviceMappings: [EC2ClientTypes.BlockDeviceMapping]? = nil,
        bootMode: EC2ClientTypes.AttributeValue? = nil,
        description: EC2ClientTypes.AttributeValue? = nil,
        imageId: Swift.String? = nil,
        imdsSupport: EC2ClientTypes.AttributeValue? = nil,
        kernelId: EC2ClientTypes.AttributeValue? = nil,
        lastLaunchedTime: EC2ClientTypes.AttributeValue? = nil,
        launchPermissions: [EC2ClientTypes.LaunchPermission]? = nil,
        productCodes: [EC2ClientTypes.ProductCode]? = nil,
        ramdiskId: EC2ClientTypes.AttributeValue? = nil,
        sriovNetSupport: EC2ClientTypes.AttributeValue? = nil,
        tpmSupport: EC2ClientTypes.AttributeValue? = nil,
        uefiData: EC2ClientTypes.AttributeValue? = nil
    )
    {
        self.blockDeviceMappings = blockDeviceMappings
        self.bootMode = bootMode
        self.description = description
        self.imageId = imageId
        self.imdsSupport = imdsSupport
        self.kernelId = kernelId
        self.lastLaunchedTime = lastLaunchedTime
        self.launchPermissions = launchPermissions
        self.productCodes = productCodes
        self.ramdiskId = ramdiskId
        self.sriovNetSupport = sriovNetSupport
        self.tpmSupport = tpmSupport
        self.uefiData = uefiData
    }
}
