// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeInternetGatewaysOutputResponseBody: Swift.Equatable {
    let internetGateways: [Ec2ClientTypes.InternetGateway]?
    let nextToken: Swift.String?
}

extension DescribeInternetGatewaysOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case internetGateways = "internetGatewaySet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.internetGateways) {
            struct KeyVal0{struct item{}}
            let internetGatewaysWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .internetGateways)
            if let internetGatewaysWrappedContainer = internetGatewaysWrappedContainer {
                let internetGatewaysContainer = try internetGatewaysWrappedContainer.decodeIfPresent([Ec2ClientTypes.InternetGateway].self, forKey: .member)
                var internetGatewaysBuffer:[Ec2ClientTypes.InternetGateway]? = nil
                if let internetGatewaysContainer = internetGatewaysContainer {
                    internetGatewaysBuffer = [Ec2ClientTypes.InternetGateway]()
                    for structureContainer0 in internetGatewaysContainer {
                        internetGatewaysBuffer?.append(structureContainer0)
                    }
                }
                internetGateways = internetGatewaysBuffer
            } else {
                internetGateways = []
            }
        } else {
            internetGateways = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
