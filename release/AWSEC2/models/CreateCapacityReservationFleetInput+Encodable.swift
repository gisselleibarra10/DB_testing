// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateCapacityReservationFleetInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let allocationStrategy = allocationStrategy {
            try container.encode(allocationStrategy, forKey: ClientRuntime.Key("AllocationStrategy"))
        }
        if let clientToken = clientToken {
            try container.encode(clientToken, forKey: ClientRuntime.Key("ClientToken"))
        }
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let endDate = endDate {
            try container.encode(ClientRuntime.TimestampWrapper(endDate, format: .dateTime), forKey: ClientRuntime.Key("EndDate"))
        }
        if let instanceMatchCriteria = instanceMatchCriteria {
            try container.encode(instanceMatchCriteria, forKey: ClientRuntime.Key("InstanceMatchCriteria"))
        }
        if let instanceTypeSpecifications = instanceTypeSpecifications {
            if !instanceTypeSpecifications.isEmpty {
                for (index0, reservationfleetinstancespecification0) in instanceTypeSpecifications.enumerated() {
                    var instanceTypeSpecificationsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("InstanceTypeSpecification.\(index0.advanced(by: 1))"))
                    try instanceTypeSpecificationsContainer0.encode(reservationfleetinstancespecification0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        if let tagSpecifications = tagSpecifications {
            if !tagSpecifications.isEmpty {
                for (index0, tagspecification0) in tagSpecifications.enumerated() {
                    var tagSpecificationsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("TagSpecification.\(index0.advanced(by: 1))"))
                    try tagSpecificationsContainer0.encode(tagspecification0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        if let tenancy = tenancy {
            try container.encode(tenancy, forKey: ClientRuntime.Key("Tenancy"))
        }
        if let totalTargetCapacity = totalTargetCapacity {
            try container.encode(totalTargetCapacity, forKey: ClientRuntime.Key("TotalTargetCapacity"))
        }
        try container.encode("CreateCapacityReservationFleet", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
