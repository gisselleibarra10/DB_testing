// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    public enum FleetStateCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case active
        case deleted
        case deletedRunning
        case deletedTerminatingInstances
        case failed
        case modifying
        case submitted
        case sdkUnknown(Swift.String)

        public static var allCases: [FleetStateCode] {
            return [
                .active,
                .deleted,
                .deletedRunning,
                .deletedTerminatingInstances,
                .failed,
                .modifying,
                .submitted,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .active: return "active"
            case .deleted: return "deleted"
            case .deletedRunning: return "deleted_running"
            case .deletedTerminatingInstances: return "deleted_terminating"
            case .failed: return "failed"
            case .modifying: return "modifying"
            case .submitted: return "submitted"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = FleetStateCode(rawValue: rawValue) ?? FleetStateCode.sdkUnknown(rawValue)
        }
    }
}
