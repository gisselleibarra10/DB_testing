// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Contains the parameters for AssignPrivateIpAddresses.
public struct AssignPrivateIpAddressesInput: Swift.Equatable {
    /// Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.
    public var allowReassignment: Swift.Bool?
    /// The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the Ipv4 Prefixes option.
    public var ipv4PrefixCount: Swift.Int?
    /// One or more IPv4 prefixes assigned to the network interface. You cannot use this option if you use the Ipv4PrefixCount option.
    public var ipv4Prefixes: [Swift.String]?
    /// The ID of the network interface.
    /// This member is required.
    public var networkInterfaceId: Swift.String?
    /// The IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses. If you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.
    public var privateIpAddresses: [Swift.String]?
    /// The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.
    public var secondaryPrivateIpAddressCount: Swift.Int?

    public init (
        allowReassignment: Swift.Bool? = nil,
        ipv4PrefixCount: Swift.Int? = nil,
        ipv4Prefixes: [Swift.String]? = nil,
        networkInterfaceId: Swift.String? = nil,
        privateIpAddresses: [Swift.String]? = nil,
        secondaryPrivateIpAddressCount: Swift.Int? = nil
    )
    {
        self.allowReassignment = allowReassignment
        self.ipv4PrefixCount = ipv4PrefixCount
        self.ipv4Prefixes = ipv4Prefixes
        self.networkInterfaceId = networkInterfaceId
        self.privateIpAddresses = privateIpAddresses
        self.secondaryPrivateIpAddressCount = secondaryPrivateIpAddressCount
    }
}
