// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// Describes the networking features of the instance type.
    public struct NetworkInfo: Swift.Equatable {
        /// The index of the default network card, starting at 0.
        public var defaultNetworkCardIndex: Swift.Int?
        /// Describes the Elastic Fabric Adapters for the instance type.
        public var efaInfo: Ec2ClientTypes.EfaInfo?
        /// Indicates whether Elastic Fabric Adapter (EFA) is supported.
        public var efaSupported: Swift.Bool?
        /// Indicates whether Elastic Network Adapter (ENA) is supported.
        public var enaSupport: Ec2ClientTypes.EnaSupport?
        /// Indicates whether the instance type automatically encrypts in-transit traffic between instances.
        public var encryptionInTransitSupported: Swift.Bool?
        /// The maximum number of IPv4 addresses per network interface.
        public var ipv4AddressesPerInterface: Swift.Int?
        /// The maximum number of IPv6 addresses per network interface.
        public var ipv6AddressesPerInterface: Swift.Int?
        /// Indicates whether IPv6 is supported.
        public var ipv6Supported: Swift.Bool?
        /// The maximum number of physical network cards that can be allocated to the instance.
        public var maximumNetworkCards: Swift.Int?
        /// The maximum number of network interfaces for the instance type.
        public var maximumNetworkInterfaces: Swift.Int?
        /// Describes the network cards for the instance type.
        public var networkCards: [Ec2ClientTypes.NetworkCardInfo]?
        /// The network performance.
        public var networkPerformance: Swift.String?

        public init (
            defaultNetworkCardIndex: Swift.Int? = nil,
            efaInfo: Ec2ClientTypes.EfaInfo? = nil,
            efaSupported: Swift.Bool? = nil,
            enaSupport: Ec2ClientTypes.EnaSupport? = nil,
            encryptionInTransitSupported: Swift.Bool? = nil,
            ipv4AddressesPerInterface: Swift.Int? = nil,
            ipv6AddressesPerInterface: Swift.Int? = nil,
            ipv6Supported: Swift.Bool? = nil,
            maximumNetworkCards: Swift.Int? = nil,
            maximumNetworkInterfaces: Swift.Int? = nil,
            networkCards: [Ec2ClientTypes.NetworkCardInfo]? = nil,
            networkPerformance: Swift.String? = nil
        )
        {
            self.defaultNetworkCardIndex = defaultNetworkCardIndex
            self.efaInfo = efaInfo
            self.efaSupported = efaSupported
            self.enaSupport = enaSupport
            self.encryptionInTransitSupported = encryptionInTransitSupported
            self.ipv4AddressesPerInterface = ipv4AddressesPerInterface
            self.ipv6AddressesPerInterface = ipv6AddressesPerInterface
            self.ipv6Supported = ipv6Supported
            self.maximumNetworkCards = maximumNetworkCards
            self.maximumNetworkInterfaces = maximumNetworkInterfaces
            self.networkCards = networkCards
            self.networkPerformance = networkPerformance
        }
    }

}
