// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeLaunchTemplatesInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let filters = filters {
            if !filters.isEmpty {
                for (index0, filter0) in filters.enumerated() {
                    var filtersContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Filter.\(index0.advanced(by: 1))"))
                    try filtersContainer0.encode(filter0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        if let launchTemplateIds = launchTemplateIds {
            if !launchTemplateIds.isEmpty {
                for (index0, launchtemplateid0) in launchTemplateIds.enumerated() {
                    var launchTemplateIdsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("LaunchTemplateId.\(index0.advanced(by: 1))"))
                    try launchTemplateIdsContainer0.encode(launchtemplateid0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        if let launchTemplateNames = launchTemplateNames {
            if !launchTemplateNames.isEmpty {
                for (index0, launchtemplatename0) in launchTemplateNames.enumerated() {
                    var launchTemplateNamesContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("LaunchTemplateName.\(index0.advanced(by: 1))"))
                    try launchTemplateNamesContainer0.encode(launchtemplatename0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        if let maxResults = maxResults {
            try container.encode(maxResults, forKey: ClientRuntime.Key("MaxResults"))
        }
        if let nextToken = nextToken {
            try container.encode(nextToken, forKey: ClientRuntime.Key("NextToken"))
        }
        try container.encode("DescribeLaunchTemplates", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
