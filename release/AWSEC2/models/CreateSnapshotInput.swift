// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateSnapshotInput: Swift.Equatable {
    /// A description for the snapshot.
    public var description: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The Amazon Resource Name (ARN) of the Outpost on which to create a local snapshot.
    ///
    /// * To create a snapshot of a volume in a Region, omit this parameter. The snapshot is created in the same Region as the volume.
    ///
    /// * To create a snapshot of a volume on an Outpost and store the snapshot in the Region, omit this parameter. The snapshot is created in the Region for the Outpost.
    ///
    /// * To create a snapshot of a volume on an Outpost and store the snapshot on an Outpost, specify the ARN of the destination Outpost. The snapshot must be created on the same Outpost as the volume.
    ///
    ///
    /// For more information, see [Create local snapshots from volumes on an Outpost](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#create-snapshot) in the Amazon Elastic Compute Cloud User Guide.
    public var outpostArn: Swift.String?
    /// The tags to apply to the snapshot during creation.
    public var tagSpecifications: [Ec2ClientTypes.TagSpecification]?
    /// The ID of the Amazon EBS volume.
    /// This member is required.
    public var volumeId: Swift.String?

    public init (
        description: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        outpostArn: Swift.String? = nil,
        tagSpecifications: [Ec2ClientTypes.TagSpecification]? = nil,
        volumeId: Swift.String? = nil
    )
    {
        self.description = description
        self.dryRun = dryRun
        self.outpostArn = outpostArn
        self.tagSpecifications = tagSpecifications
        self.volumeId = volumeId
    }
}
