// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyVpcPeeringConnectionOptionsInputBody: Swift.Equatable {
    let accepterPeeringConnectionOptions: EC2ClientTypes.PeeringConnectionOptionsRequest?
    let dryRun: Swift.Bool?
    let requesterPeeringConnectionOptions: EC2ClientTypes.PeeringConnectionOptionsRequest?
    let vpcPeeringConnectionId: Swift.String?
}

extension ModifyVpcPeeringConnectionOptionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accepterPeeringConnectionOptions = "AccepterPeeringConnectionOptions"
        case dryRun = "DryRun"
        case requesterPeeringConnectionOptions = "RequesterPeeringConnectionOptions"
        case vpcPeeringConnectionId = "VpcPeeringConnectionId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accepterPeeringConnectionOptionsDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.PeeringConnectionOptionsRequest.self, forKey: .accepterPeeringConnectionOptions)
        accepterPeeringConnectionOptions = accepterPeeringConnectionOptionsDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let requesterPeeringConnectionOptionsDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.PeeringConnectionOptionsRequest.self, forKey: .requesterPeeringConnectionOptions)
        requesterPeeringConnectionOptions = requesterPeeringConnectionOptionsDecoded
        let vpcPeeringConnectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpcPeeringConnectionId)
        vpcPeeringConnectionId = vpcPeeringConnectionIdDecoded
    }
}
