// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ReplaceNetworkAclEntryInput: Swift.Equatable {
    /// The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24).
    public var cidrBlock: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// Indicates whether to replace the egress rule. Default: If no value is specified, we replace the ingress rule.
    /// This member is required.
    public var egress: Swift.Bool?
    /// ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.
    public var icmpTypeCode: Ec2ClientTypes.IcmpTypeCode?
    /// The IPv6 network range to allow or deny, in CIDR notation (for example 2001:bd8:1234:1a00::/64).
    public var ipv6CidrBlock: Swift.String?
    /// The ID of the ACL.
    /// This member is required.
    public var networkAclId: Swift.String?
    /// TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).
    public var portRange: Ec2ClientTypes.PortRange?
    /// The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.
    /// This member is required.
    public var `protocol`: Swift.String?
    /// Indicates whether to allow or deny the traffic that matches the rule.
    /// This member is required.
    public var ruleAction: Ec2ClientTypes.RuleAction?
    /// The rule number of the entry to replace.
    /// This member is required.
    public var ruleNumber: Swift.Int?

    public init (
        cidrBlock: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        egress: Swift.Bool? = nil,
        icmpTypeCode: Ec2ClientTypes.IcmpTypeCode? = nil,
        ipv6CidrBlock: Swift.String? = nil,
        networkAclId: Swift.String? = nil,
        portRange: Ec2ClientTypes.PortRange? = nil,
        `protocol`: Swift.String? = nil,
        ruleAction: Ec2ClientTypes.RuleAction? = nil,
        ruleNumber: Swift.Int? = nil
    )
    {
        self.cidrBlock = cidrBlock
        self.dryRun = dryRun
        self.egress = egress
        self.icmpTypeCode = icmpTypeCode
        self.ipv6CidrBlock = ipv6CidrBlock
        self.networkAclId = networkAclId
        self.portRange = portRange
        self.`protocol` = `protocol`
        self.ruleAction = ruleAction
        self.ruleNumber = ruleNumber
    }
}
