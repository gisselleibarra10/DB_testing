// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.DeleteLaunchTemplateVersionsResponseErrorItem: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case launchTemplateId = "launchTemplateId"
        case launchTemplateName = "launchTemplateName"
        case responseError = "responseError"
        case versionNumber = "versionNumber"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let launchTemplateId = launchTemplateId {
            try container.encode(launchTemplateId, forKey: ClientRuntime.Key("LaunchTemplateId"))
        }
        if let launchTemplateName = launchTemplateName {
            try container.encode(launchTemplateName, forKey: ClientRuntime.Key("LaunchTemplateName"))
        }
        if let responseError = responseError {
            try container.encode(responseError, forKey: ClientRuntime.Key("ResponseError"))
        }
        if let versionNumber = versionNumber {
            try container.encode(versionNumber, forKey: ClientRuntime.Key("VersionNumber"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let launchTemplateIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .launchTemplateId)
        launchTemplateId = launchTemplateIdDecoded
        let launchTemplateNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .launchTemplateName)
        launchTemplateName = launchTemplateNameDecoded
        let versionNumberDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .versionNumber)
        versionNumber = versionNumberDecoded
        let responseErrorDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.ResponseError.self, forKey: .responseError)
        responseError = responseErrorDecoded
    }
}
