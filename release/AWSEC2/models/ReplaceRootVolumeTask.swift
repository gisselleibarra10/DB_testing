// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// Information about a root volume replacement task.
    public struct ReplaceRootVolumeTask: Swift.Equatable {
        /// The time the task completed.
        public var completeTime: Swift.String?
        /// The ID of the instance for which the root volume replacement task was created.
        public var instanceId: Swift.String?
        /// The ID of the root volume replacement task.
        public var replaceRootVolumeTaskId: Swift.String?
        /// The time the task was started.
        public var startTime: Swift.String?
        /// The tags assigned to the task.
        public var tags: [Ec2ClientTypes.Tag]?
        /// The state of the task. The task can be in one of the following states:
        ///
        /// * pending - the replacement volume is being created.
        ///
        /// * in-progress - the original volume is being detached and the replacement volume is being attached.
        ///
        /// * succeeded - the replacement volume has been successfully attached to the instance and the instance is available.
        ///
        /// * failing - the replacement task is in the process of failing.
        ///
        /// * failed - the replacement task has failed but the original root volume is still attached.
        ///
        /// * failing-detached - the replacement task is in the process of failing. The instance might have no root volume attached.
        ///
        /// * failed-detached - the replacement task has failed and the instance has no root volume attached.
        public var taskState: Ec2ClientTypes.ReplaceRootVolumeTaskState?

        public init (
            completeTime: Swift.String? = nil,
            instanceId: Swift.String? = nil,
            replaceRootVolumeTaskId: Swift.String? = nil,
            startTime: Swift.String? = nil,
            tags: [Ec2ClientTypes.Tag]? = nil,
            taskState: Ec2ClientTypes.ReplaceRootVolumeTaskState? = nil
        )
        {
            self.completeTime = completeTime
            self.instanceId = instanceId
            self.replaceRootVolumeTaskId = replaceRootVolumeTaskId
            self.startTime = startTime
            self.tags = tags
            self.taskState = taskState
        }
    }

}
