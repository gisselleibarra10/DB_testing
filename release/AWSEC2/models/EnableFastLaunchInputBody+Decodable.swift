// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EnableFastLaunchInputBody: Swift.Equatable {
    let imageId: Swift.String?
    let resourceType: Swift.String?
    let snapshotConfiguration: Ec2ClientTypes.FastLaunchSnapshotConfigurationRequest?
    let launchTemplate: Ec2ClientTypes.FastLaunchLaunchTemplateSpecificationRequest?
    let maxParallelLaunches: Swift.Int?
    let dryRun: Swift.Bool?
}

extension EnableFastLaunchInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "DryRun"
        case imageId = "ImageId"
        case launchTemplate = "LaunchTemplate"
        case maxParallelLaunches = "MaxParallelLaunches"
        case resourceType = "ResourceType"
        case snapshotConfiguration = "SnapshotConfiguration"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imageId)
        imageId = imageIdDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let snapshotConfigurationDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.FastLaunchSnapshotConfigurationRequest.self, forKey: .snapshotConfiguration)
        snapshotConfiguration = snapshotConfigurationDecoded
        let launchTemplateDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.FastLaunchLaunchTemplateSpecificationRequest.self, forKey: .launchTemplate)
        launchTemplate = launchTemplateDecoded
        let maxParallelLaunchesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxParallelLaunches)
        maxParallelLaunches = maxParallelLaunchesDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
