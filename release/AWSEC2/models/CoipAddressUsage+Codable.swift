// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.CoipAddressUsage: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allocationId = "allocationId"
        case awsAccountId = "awsAccountId"
        case awsService = "awsService"
        case coIp = "coIp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let allocationId = allocationId {
            try container.encode(allocationId, forKey: ClientRuntime.Key("AllocationId"))
        }
        if let awsAccountId = awsAccountId {
            try container.encode(awsAccountId, forKey: ClientRuntime.Key("AwsAccountId"))
        }
        if let awsService = awsService {
            try container.encode(awsService, forKey: ClientRuntime.Key("AwsService"))
        }
        if let coIp = coIp {
            try container.encode(coIp, forKey: ClientRuntime.Key("CoIp"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allocationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .allocationId)
        allocationId = allocationIdDecoded
        let awsAccountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .awsAccountId)
        awsAccountId = awsAccountIdDecoded
        let awsServiceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .awsService)
        awsService = awsServiceDecoded
        let coIpDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .coIp)
        coIp = coIpDecoded
    }
}
