// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CancelSpotInstanceRequestsOutputResponseBody: Swift.Equatable {
    let cancelledSpotInstanceRequests: [EC2ClientTypes.CancelledSpotInstanceRequest]?
}

extension CancelSpotInstanceRequestsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cancelledSpotInstanceRequests = "spotInstanceRequestSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.cancelledSpotInstanceRequests) {
            struct KeyVal0{struct item{}}
            let cancelledSpotInstanceRequestsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .cancelledSpotInstanceRequests)
            if let cancelledSpotInstanceRequestsWrappedContainer = cancelledSpotInstanceRequestsWrappedContainer {
                let cancelledSpotInstanceRequestsContainer = try cancelledSpotInstanceRequestsWrappedContainer.decodeIfPresent([EC2ClientTypes.CancelledSpotInstanceRequest].self, forKey: .member)
                var cancelledSpotInstanceRequestsBuffer:[EC2ClientTypes.CancelledSpotInstanceRequest]? = nil
                if let cancelledSpotInstanceRequestsContainer = cancelledSpotInstanceRequestsContainer {
                    cancelledSpotInstanceRequestsBuffer = [EC2ClientTypes.CancelledSpotInstanceRequest]()
                    for structureContainer0 in cancelledSpotInstanceRequestsContainer {
                        cancelledSpotInstanceRequestsBuffer?.append(structureContainer0)
                    }
                }
                cancelledSpotInstanceRequests = cancelledSpotInstanceRequestsBuffer
            } else {
                cancelledSpotInstanceRequests = []
            }
        } else {
            cancelledSpotInstanceRequests = nil
        }
    }
}
