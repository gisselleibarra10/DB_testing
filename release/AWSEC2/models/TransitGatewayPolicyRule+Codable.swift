// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.TransitGatewayPolicyRule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationCidrBlock = "destinationCidrBlock"
        case destinationPortRange = "destinationPortRange"
        case metaData = "metaData"
        case `protocol` = "protocol"
        case sourceCidrBlock = "sourceCidrBlock"
        case sourcePortRange = "sourcePortRange"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let destinationCidrBlock = destinationCidrBlock {
            try container.encode(destinationCidrBlock, forKey: ClientRuntime.Key("DestinationCidrBlock"))
        }
        if let destinationPortRange = destinationPortRange {
            try container.encode(destinationPortRange, forKey: ClientRuntime.Key("DestinationPortRange"))
        }
        if let metaData = metaData {
            try container.encode(metaData, forKey: ClientRuntime.Key("MetaData"))
        }
        if let `protocol` = `protocol` {
            try container.encode(`protocol`, forKey: ClientRuntime.Key("Protocol"))
        }
        if let sourceCidrBlock = sourceCidrBlock {
            try container.encode(sourceCidrBlock, forKey: ClientRuntime.Key("SourceCidrBlock"))
        }
        if let sourcePortRange = sourcePortRange {
            try container.encode(sourcePortRange, forKey: ClientRuntime.Key("SourcePortRange"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceCidrBlockDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceCidrBlock)
        sourceCidrBlock = sourceCidrBlockDecoded
        let sourcePortRangeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourcePortRange)
        sourcePortRange = sourcePortRangeDecoded
        let destinationCidrBlockDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationCidrBlock)
        destinationCidrBlock = destinationCidrBlockDecoded
        let destinationPortRangeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationPortRange)
        destinationPortRange = destinationPortRangeDecoded
        let protocolDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .protocol)
        `protocol` = protocolDecoded
        let metaDataDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.TransitGatewayPolicyRuleMetaData.self, forKey: .metaData)
        metaData = metaDataDecoded
    }
}
