// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeHostReservationOfferingsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let offeringSet: [EC2ClientTypes.HostOffering]?
}

extension DescribeHostReservationOfferingsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case offeringSet = "offeringSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.offeringSet) {
            struct KeyVal0{struct item{}}
            let offeringSetWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .offeringSet)
            if let offeringSetWrappedContainer = offeringSetWrappedContainer {
                let offeringSetContainer = try offeringSetWrappedContainer.decodeIfPresent([EC2ClientTypes.HostOffering].self, forKey: .member)
                var offeringSetBuffer:[EC2ClientTypes.HostOffering]? = nil
                if let offeringSetContainer = offeringSetContainer {
                    offeringSetBuffer = [EC2ClientTypes.HostOffering]()
                    for structureContainer0 in offeringSetContainer {
                        offeringSetBuffer?.append(structureContainer0)
                    }
                }
                offeringSet = offeringSetBuffer
            } else {
                offeringSet = []
            }
        } else {
            offeringSet = nil
        }
    }
}
