// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeBundleTasksOutputResponseBody: Swift.Equatable {
    let bundleTasks: [Ec2ClientTypes.BundleTask]?
}

extension DescribeBundleTasksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bundleTasks = "bundleInstanceTasksSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.bundleTasks) {
            struct KeyVal0{struct item{}}
            let bundleTasksWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .bundleTasks)
            if let bundleTasksWrappedContainer = bundleTasksWrappedContainer {
                let bundleTasksContainer = try bundleTasksWrappedContainer.decodeIfPresent([Ec2ClientTypes.BundleTask].self, forKey: .member)
                var bundleTasksBuffer:[Ec2ClientTypes.BundleTask]? = nil
                if let bundleTasksContainer = bundleTasksContainer {
                    bundleTasksBuffer = [Ec2ClientTypes.BundleTask]()
                    for structureContainer0 in bundleTasksContainer {
                        bundleTasksBuffer?.append(structureContainer0)
                    }
                }
                bundleTasks = bundleTasksBuffer
            } else {
                bundleTasks = []
            }
        } else {
            bundleTasks = nil
        }
    }
}
