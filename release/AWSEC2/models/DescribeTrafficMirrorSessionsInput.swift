// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeTrafficMirrorSessionsInput: Swift.Equatable {
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// One or more filters. The possible values are:
    ///
    /// * description: The Traffic Mirror session description.
    ///
    /// * network-interface-id: The ID of the Traffic Mirror session network interface.
    ///
    /// * owner-id: The ID of the account that owns the Traffic Mirror session.
    ///
    /// * packet-length: The assigned number of packets to mirror.
    ///
    /// * session-number: The assigned session number.
    ///
    /// * traffic-mirror-filter-id: The ID of the Traffic Mirror filter.
    ///
    /// * traffic-mirror-session-id: The ID of the Traffic Mirror session.
    ///
    /// * traffic-mirror-target-id: The ID of the Traffic Mirror target.
    ///
    /// * virtual-network-id: The virtual network ID of the Traffic Mirror session.
    public var filters: [Ec2ClientTypes.Filter]?
    /// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.
    public var maxResults: Swift.Int?
    /// The token for the next page of results.
    public var nextToken: Swift.String?
    /// The ID of the Traffic Mirror session.
    public var trafficMirrorSessionIds: [Swift.String]?

    public init (
        dryRun: Swift.Bool? = nil,
        filters: [Ec2ClientTypes.Filter]? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        trafficMirrorSessionIds: [Swift.String]? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.trafficMirrorSessionIds = trafficMirrorSessionIds
    }
}
