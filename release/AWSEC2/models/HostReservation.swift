// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes {
    /// Details about the Dedicated Host Reservation and associated Dedicated Hosts.
    public struct HostReservation: Swift.Equatable {
        /// The number of Dedicated Hosts the reservation is associated with.
        public var count: Swift.Int?
        /// The currency in which the upfrontPrice and hourlyPrice amounts are specified. At this time, the only supported currency is USD.
        public var currencyCode: EC2ClientTypes.CurrencyCodeValues?
        /// The length of the reservation's term, specified in seconds. Can be 31536000 (1 year) | 94608000 (3 years).
        public var duration: Swift.Int?
        /// The date and time that the reservation ends.
        public var end: ClientRuntime.Date?
        /// The IDs of the Dedicated Hosts associated with the reservation.
        public var hostIdSet: [Swift.String]?
        /// The ID of the reservation that specifies the associated Dedicated Hosts.
        public var hostReservationId: Swift.String?
        /// The hourly price of the reservation.
        public var hourlyPrice: Swift.String?
        /// The instance family of the Dedicated Host Reservation. The instance family on the Dedicated Host must be the same in order for it to benefit from the reservation.
        public var instanceFamily: Swift.String?
        /// The ID of the reservation. This remains the same regardless of which Dedicated Hosts are associated with it.
        public var offeringId: Swift.String?
        /// The payment option selected for this reservation.
        public var paymentOption: EC2ClientTypes.PaymentOption?
        /// The date and time that the reservation started.
        public var start: ClientRuntime.Date?
        /// The state of the reservation.
        public var state: EC2ClientTypes.ReservationState?
        /// Any tags assigned to the Dedicated Host Reservation.
        public var tags: [EC2ClientTypes.Tag]?
        /// The upfront price of the reservation.
        public var upfrontPrice: Swift.String?

        public init (
            count: Swift.Int? = nil,
            currencyCode: EC2ClientTypes.CurrencyCodeValues? = nil,
            duration: Swift.Int? = nil,
            end: ClientRuntime.Date? = nil,
            hostIdSet: [Swift.String]? = nil,
            hostReservationId: Swift.String? = nil,
            hourlyPrice: Swift.String? = nil,
            instanceFamily: Swift.String? = nil,
            offeringId: Swift.String? = nil,
            paymentOption: EC2ClientTypes.PaymentOption? = nil,
            start: ClientRuntime.Date? = nil,
            state: EC2ClientTypes.ReservationState? = nil,
            tags: [EC2ClientTypes.Tag]? = nil,
            upfrontPrice: Swift.String? = nil
        )
        {
            self.count = count
            self.currencyCode = currencyCode
            self.duration = duration
            self.end = end
            self.hostIdSet = hostIdSet
            self.hostReservationId = hostReservationId
            self.hourlyPrice = hourlyPrice
            self.instanceFamily = instanceFamily
            self.offeringId = offeringId
            self.paymentOption = paymentOption
            self.start = start
            self.state = state
            self.tags = tags
            self.upfrontPrice = upfrontPrice
        }
    }

}
