// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// Describes the options for a transit gateway.
    public struct TransitGatewayOptions: Swift.Equatable {
        /// A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.
        public var amazonSideAsn: Swift.Int?
        /// The ID of the default association route table.
        public var associationDefaultRouteTableId: Swift.String?
        /// Indicates whether attachment requests are automatically accepted.
        public var autoAcceptSharedAttachments: Ec2ClientTypes.AutoAcceptSharedAttachmentsValue?
        /// Indicates whether resource attachments are automatically associated with the default association route table.
        public var defaultRouteTableAssociation: Ec2ClientTypes.DefaultRouteTableAssociationValue?
        /// Indicates whether resource attachments automatically propagate routes to the default propagation route table.
        public var defaultRouteTablePropagation: Ec2ClientTypes.DefaultRouteTablePropagationValue?
        /// Indicates whether DNS support is enabled.
        public var dnsSupport: Ec2ClientTypes.DnsSupportValue?
        /// Indicates whether multicast is enabled on the transit gateway
        public var multicastSupport: Ec2ClientTypes.MulticastSupportValue?
        /// The ID of the default propagation route table.
        public var propagationDefaultRouteTableId: Swift.String?
        /// The transit gateway CIDR blocks.
        public var transitGatewayCidrBlocks: [Swift.String]?
        /// Indicates whether Equal Cost Multipath Protocol support is enabled.
        public var vpnEcmpSupport: Ec2ClientTypes.VpnEcmpSupportValue?

        public init (
            amazonSideAsn: Swift.Int? = nil,
            associationDefaultRouteTableId: Swift.String? = nil,
            autoAcceptSharedAttachments: Ec2ClientTypes.AutoAcceptSharedAttachmentsValue? = nil,
            defaultRouteTableAssociation: Ec2ClientTypes.DefaultRouteTableAssociationValue? = nil,
            defaultRouteTablePropagation: Ec2ClientTypes.DefaultRouteTablePropagationValue? = nil,
            dnsSupport: Ec2ClientTypes.DnsSupportValue? = nil,
            multicastSupport: Ec2ClientTypes.MulticastSupportValue? = nil,
            propagationDefaultRouteTableId: Swift.String? = nil,
            transitGatewayCidrBlocks: [Swift.String]? = nil,
            vpnEcmpSupport: Ec2ClientTypes.VpnEcmpSupportValue? = nil
        )
        {
            self.amazonSideAsn = amazonSideAsn
            self.associationDefaultRouteTableId = associationDefaultRouteTableId
            self.autoAcceptSharedAttachments = autoAcceptSharedAttachments
            self.defaultRouteTableAssociation = defaultRouteTableAssociation
            self.defaultRouteTablePropagation = defaultRouteTablePropagation
            self.dnsSupport = dnsSupport
            self.multicastSupport = multicastSupport
            self.propagationDefaultRouteTableId = propagationDefaultRouteTableId
            self.transitGatewayCidrBlocks = transitGatewayCidrBlocks
            self.vpnEcmpSupport = vpnEcmpSupport
        }
    }

}
