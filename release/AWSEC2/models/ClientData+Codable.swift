// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.ClientData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case comment = "Comment"
        case uploadEnd = "UploadEnd"
        case uploadSize = "UploadSize"
        case uploadStart = "UploadStart"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let comment = comment {
            try container.encode(comment, forKey: ClientRuntime.Key("Comment"))
        }
        if let uploadEnd = uploadEnd {
            try container.encodeTimestamp(uploadEnd, format: .dateTime, forKey: ClientRuntime.Key("UploadEnd"))
        }
        if let uploadSize = uploadSize {
            try container.encode(uploadSize, forKey: ClientRuntime.Key("UploadSize"))
        }
        if let uploadStart = uploadStart {
            try container.encodeTimestamp(uploadStart, format: .dateTime, forKey: ClientRuntime.Key("UploadStart"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .comment)
        comment = commentDecoded
        let uploadEndDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .uploadEnd)
        uploadEnd = uploadEndDecoded
        let uploadSizeDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .uploadSize)
        uploadSize = uploadSizeDecoded
        let uploadStartDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .uploadStart)
        uploadStart = uploadStartDecoded
    }
}
