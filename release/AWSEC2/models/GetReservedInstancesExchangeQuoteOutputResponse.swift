// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Contains the output of GetReservedInstancesExchangeQuote.
public struct GetReservedInstancesExchangeQuoteOutputResponse: Swift.Equatable {
    /// The currency of the transaction.
    public var currencyCode: Swift.String?
    /// If true, the exchange is valid. If false, the exchange cannot be completed.
    public var isValidExchange: Swift.Bool?
    /// The new end date of the reservation term.
    public var outputReservedInstancesWillExpireAt: ClientRuntime.Date?
    /// The total true upfront charge for the exchange.
    public var paymentDue: Swift.String?
    /// The cost associated with the Reserved Instance.
    public var reservedInstanceValueRollup: Ec2ClientTypes.ReservationValue?
    /// The configuration of your Convertible Reserved Instances.
    public var reservedInstanceValueSet: [Ec2ClientTypes.ReservedInstanceReservationValue]?
    /// The cost associated with the Reserved Instance.
    public var targetConfigurationValueRollup: Ec2ClientTypes.ReservationValue?
    /// The values of the target Convertible Reserved Instances.
    public var targetConfigurationValueSet: [Ec2ClientTypes.TargetReservationValue]?
    /// Describes the reason why the exchange cannot be completed.
    public var validationFailureReason: Swift.String?

    public init (
        currencyCode: Swift.String? = nil,
        isValidExchange: Swift.Bool? = nil,
        outputReservedInstancesWillExpireAt: ClientRuntime.Date? = nil,
        paymentDue: Swift.String? = nil,
        reservedInstanceValueRollup: Ec2ClientTypes.ReservationValue? = nil,
        reservedInstanceValueSet: [Ec2ClientTypes.ReservedInstanceReservationValue]? = nil,
        targetConfigurationValueRollup: Ec2ClientTypes.ReservationValue? = nil,
        targetConfigurationValueSet: [Ec2ClientTypes.TargetReservationValue]? = nil,
        validationFailureReason: Swift.String? = nil
    )
    {
        self.currencyCode = currencyCode
        self.isValidExchange = isValidExchange
        self.outputReservedInstancesWillExpireAt = outputReservedInstancesWillExpireAt
        self.paymentDue = paymentDue
        self.reservedInstanceValueRollup = reservedInstanceValueRollup
        self.reservedInstanceValueSet = reservedInstanceValueSet
        self.targetConfigurationValueRollup = targetConfigurationValueRollup
        self.targetConfigurationValueSet = targetConfigurationValueSet
        self.validationFailureReason = validationFailureReason
    }
}
