// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDefaultSubnetInputBody: Swift.Equatable {
    let availabilityZone: Swift.String?
    let dryRun: Swift.Bool?
    let ipv6Native: Swift.Bool?
}

extension CreateDefaultSubnetInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case availabilityZone = "AvailabilityZone"
        case dryRun = "DryRun"
        case ipv6Native = "Ipv6Native"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let availabilityZoneDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .availabilityZone)
        availabilityZone = availabilityZoneDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let ipv6NativeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .ipv6Native)
        ipv6Native = ipv6NativeDecoded
    }
}
