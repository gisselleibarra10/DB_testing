// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.DestinationOptionsResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fileFormat = "fileFormat"
        case hiveCompatiblePartitions = "hiveCompatiblePartitions"
        case perHourPartition = "perHourPartition"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let fileFormat = fileFormat {
            try container.encode(fileFormat, forKey: ClientRuntime.Key("FileFormat"))
        }
        if let hiveCompatiblePartitions = hiveCompatiblePartitions {
            try container.encode(hiveCompatiblePartitions, forKey: ClientRuntime.Key("HiveCompatiblePartitions"))
        }
        if let perHourPartition = perHourPartition {
            try container.encode(perHourPartition, forKey: ClientRuntime.Key("PerHourPartition"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fileFormatDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.DestinationFileFormat.self, forKey: .fileFormat)
        fileFormat = fileFormatDecoded
        let hiveCompatiblePartitionsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .hiveCompatiblePartitions)
        hiveCompatiblePartitions = hiveCompatiblePartitionsDecoded
        let perHourPartitionDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .perHourPartition)
        perHourPartition = perHourPartitionDecoded
    }
}
