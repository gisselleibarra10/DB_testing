// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetachNetworkInterfaceInputBody: Swift.Equatable {
    let attachmentId: Swift.String?
    let dryRun: Swift.Bool?
    let force: Swift.Bool?
}

extension DetachNetworkInterfaceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attachmentId = "attachmentId"
        case dryRun = "dryRun"
        case force = "force"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attachmentId)
        attachmentId = attachmentIdDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let forceDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .force)
        force = forceDecoded
    }
}
