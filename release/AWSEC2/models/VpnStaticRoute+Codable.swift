// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.VpnStaticRoute: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationCidrBlock = "destinationCidrBlock"
        case source = "source"
        case state = "state"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let destinationCidrBlock = destinationCidrBlock {
            try container.encode(destinationCidrBlock, forKey: ClientRuntime.Key("DestinationCidrBlock"))
        }
        if let source = source {
            try container.encode(source, forKey: ClientRuntime.Key("Source"))
        }
        if let state = state {
            try container.encode(state, forKey: ClientRuntime.Key("State"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationCidrBlockDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationCidrBlock)
        destinationCidrBlock = destinationCidrBlockDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.VpnStaticRouteSource.self, forKey: .source)
        source = sourceDecoded
        let stateDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.VpnState.self, forKey: .state)
        state = stateDecoded
    }
}
