// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RunScheduledInstancesInputBody: Swift.Equatable {
    let clientToken: Swift.String?
    let dryRun: Swift.Bool?
    let instanceCount: Swift.Int?
    let launchSpecification: Ec2ClientTypes.ScheduledInstancesLaunchSpecification?
    let scheduledInstanceId: Swift.String?
}

extension RunScheduledInstancesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case dryRun = "DryRun"
        case instanceCount = "InstanceCount"
        case launchSpecification = "LaunchSpecification"
        case scheduledInstanceId = "ScheduledInstanceId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let instanceCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .instanceCount)
        instanceCount = instanceCountDecoded
        let launchSpecificationDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.ScheduledInstancesLaunchSpecification.self, forKey: .launchSpecification)
        launchSpecification = launchSpecificationDecoded
        let scheduledInstanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .scheduledInstanceId)
        scheduledInstanceId = scheduledInstanceIdDecoded
    }
}
