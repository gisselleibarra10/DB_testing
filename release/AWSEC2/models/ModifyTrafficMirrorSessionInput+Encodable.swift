// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifyTrafficMirrorSessionInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let description = description {
            try container.encode(description, forKey: ClientRuntime.Key("Description"))
        }
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let packetLength = packetLength {
            try container.encode(packetLength, forKey: ClientRuntime.Key("PacketLength"))
        }
        if let removeFields = removeFields {
            if !removeFields.isEmpty {
                for (index0, trafficmirrorsessionfield0) in removeFields.enumerated() {
                    var removeFieldsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("RemoveField.\(index0.advanced(by: 1))"))
                    try removeFieldsContainer0.encode(trafficmirrorsessionfield0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        if let sessionNumber = sessionNumber {
            try container.encode(sessionNumber, forKey: ClientRuntime.Key("SessionNumber"))
        }
        if let trafficMirrorFilterId = trafficMirrorFilterId {
            try container.encode(trafficMirrorFilterId, forKey: ClientRuntime.Key("TrafficMirrorFilterId"))
        }
        if let trafficMirrorSessionId = trafficMirrorSessionId {
            try container.encode(trafficMirrorSessionId, forKey: ClientRuntime.Key("TrafficMirrorSessionId"))
        }
        if let trafficMirrorTargetId = trafficMirrorTargetId {
            try container.encode(trafficMirrorTargetId, forKey: ClientRuntime.Key("TrafficMirrorTargetId"))
        }
        if let virtualNetworkId = virtualNetworkId {
            try container.encode(virtualNetworkId, forKey: ClientRuntime.Key("VirtualNetworkId"))
        }
        try container.encode("ModifyTrafficMirrorSession", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
