// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes {
    /// Describes the properties of the Dedicated Host.
    public struct Host: Swift.Equatable {
        /// The time that the Dedicated Host was allocated.
        public var allocationTime: ClientRuntime.Date?
        /// Indicates whether the Dedicated Host supports multiple instance types of the same instance family. If the value is on, the Dedicated Host supports multiple instance types in the instance family. If the value is off, the Dedicated Host supports a single instance type only.
        public var allowsMultipleInstanceTypes: EC2ClientTypes.AllowsMultipleInstanceTypes?
        /// Whether auto-placement is on or off.
        public var autoPlacement: EC2ClientTypes.AutoPlacement?
        /// The Availability Zone of the Dedicated Host.
        public var availabilityZone: Swift.String?
        /// The ID of the Availability Zone in which the Dedicated Host is allocated.
        public var availabilityZoneId: Swift.String?
        /// Information about the instances running on the Dedicated Host.
        public var availableCapacity: EC2ClientTypes.AvailableCapacity?
        /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [Ensuring Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
        public var clientToken: Swift.String?
        /// The ID of the Dedicated Host.
        public var hostId: Swift.String?
        /// The hardware specifications of the Dedicated Host.
        public var hostProperties: EC2ClientTypes.HostProperties?
        /// Indicates whether host recovery is enabled or disabled for the Dedicated Host.
        public var hostRecovery: EC2ClientTypes.HostRecovery?
        /// The reservation ID of the Dedicated Host. This returns a null response if the Dedicated Host doesn't have an associated reservation.
        public var hostReservationId: Swift.String?
        /// The IDs and instance type that are currently running on the Dedicated Host.
        public var instances: [EC2ClientTypes.HostInstance]?
        /// Indicates whether the Dedicated Host is in a host resource group. If memberOfServiceLinkedResourceGroup is true, the host is in a host resource group; otherwise, it is not.
        public var memberOfServiceLinkedResourceGroup: Swift.Bool?
        /// The Amazon Resource Name (ARN) of the Amazon Web Services Outpost on which the Dedicated Host is allocated.
        public var outpostArn: Swift.String?
        /// The ID of the Amazon Web Services account that owns the Dedicated Host.
        public var ownerId: Swift.String?
        /// The time that the Dedicated Host was released.
        public var releaseTime: ClientRuntime.Date?
        /// The Dedicated Host's state.
        public var state: EC2ClientTypes.AllocationState?
        /// Any tags assigned to the Dedicated Host.
        public var tags: [EC2ClientTypes.Tag]?

        public init (
            allocationTime: ClientRuntime.Date? = nil,
            allowsMultipleInstanceTypes: EC2ClientTypes.AllowsMultipleInstanceTypes? = nil,
            autoPlacement: EC2ClientTypes.AutoPlacement? = nil,
            availabilityZone: Swift.String? = nil,
            availabilityZoneId: Swift.String? = nil,
            availableCapacity: EC2ClientTypes.AvailableCapacity? = nil,
            clientToken: Swift.String? = nil,
            hostId: Swift.String? = nil,
            hostProperties: EC2ClientTypes.HostProperties? = nil,
            hostRecovery: EC2ClientTypes.HostRecovery? = nil,
            hostReservationId: Swift.String? = nil,
            instances: [EC2ClientTypes.HostInstance]? = nil,
            memberOfServiceLinkedResourceGroup: Swift.Bool? = nil,
            outpostArn: Swift.String? = nil,
            ownerId: Swift.String? = nil,
            releaseTime: ClientRuntime.Date? = nil,
            state: EC2ClientTypes.AllocationState? = nil,
            tags: [EC2ClientTypes.Tag]? = nil
        )
        {
            self.allocationTime = allocationTime
            self.allowsMultipleInstanceTypes = allowsMultipleInstanceTypes
            self.autoPlacement = autoPlacement
            self.availabilityZone = availabilityZone
            self.availabilityZoneId = availabilityZoneId
            self.availableCapacity = availableCapacity
            self.clientToken = clientToken
            self.hostId = hostId
            self.hostProperties = hostProperties
            self.hostRecovery = hostRecovery
            self.hostReservationId = hostReservationId
            self.instances = instances
            self.memberOfServiceLinkedResourceGroup = memberOfServiceLinkedResourceGroup
            self.outpostArn = outpostArn
            self.ownerId = ownerId
            self.releaseTime = releaseTime
            self.state = state
            self.tags = tags
        }
    }

}
