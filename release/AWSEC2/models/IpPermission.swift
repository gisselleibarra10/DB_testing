// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EC2ClientTypes {
    /// Describes a set of permissions for a security group rule.
    public struct IpPermission: Swift.Equatable {
        /// The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
        public var fromPort: Swift.Int?
        /// The IP protocol name (tcp, udp, icmp, icmpv6) or number (see [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)). [VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp, udp, icmp, or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp, udp, and icmp, you must specify a port range. For icmpv6, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.
        public var ipProtocol: Swift.String?
        /// The IPv4 ranges.
        public var ipRanges: [EC2ClientTypes.IpRange]?
        /// [VPC only] The IPv6 ranges.
        public var ipv6Ranges: [EC2ClientTypes.Ipv6Range]?
        /// [VPC only] The prefix list IDs.
        public var prefixListIds: [EC2ClientTypes.PrefixListId]?
        /// The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
        public var toPort: Swift.Int?
        /// The security group and Amazon Web Services account ID pairs.
        public var userIdGroupPairs: [EC2ClientTypes.UserIdGroupPair]?

        public init (
            fromPort: Swift.Int? = nil,
            ipProtocol: Swift.String? = nil,
            ipRanges: [EC2ClientTypes.IpRange]? = nil,
            ipv6Ranges: [EC2ClientTypes.Ipv6Range]? = nil,
            prefixListIds: [EC2ClientTypes.PrefixListId]? = nil,
            toPort: Swift.Int? = nil,
            userIdGroupPairs: [EC2ClientTypes.UserIdGroupPair]? = nil
        )
        {
            self.fromPort = fromPort
            self.ipProtocol = ipProtocol
            self.ipRanges = ipRanges
            self.ipv6Ranges = ipv6Ranges
            self.prefixListIds = prefixListIds
            self.toPort = toPort
            self.userIdGroupPairs = userIdGroupPairs
        }
    }

}
