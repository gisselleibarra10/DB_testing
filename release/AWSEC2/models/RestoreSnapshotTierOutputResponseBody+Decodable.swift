// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RestoreSnapshotTierOutputResponseBody: Swift.Equatable {
    let snapshotId: Swift.String?
    let restoreStartTime: ClientRuntime.Date?
    let restoreDuration: Swift.Int?
    let isPermanentRestore: Swift.Bool?
}

extension RestoreSnapshotTierOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case isPermanentRestore = "isPermanentRestore"
        case restoreDuration = "restoreDuration"
        case restoreStartTime = "restoreStartTime"
        case snapshotId = "snapshotId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let snapshotIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snapshotId)
        snapshotId = snapshotIdDecoded
        let restoreStartTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .restoreStartTime)
        var restoreStartTimeBuffer:ClientRuntime.Date? = nil
        if let restoreStartTimeDecoded = restoreStartTimeDecoded {
            restoreStartTimeBuffer = try ClientRuntime.TimestampWrapperDecoder.parseDateStringValue(restoreStartTimeDecoded, format: .dateTime)
        }
        restoreStartTime = restoreStartTimeBuffer
        let restoreDurationDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .restoreDuration)
        restoreDuration = restoreDurationDecoded
        let isPermanentRestoreDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isPermanentRestore)
        isPermanentRestore = isPermanentRestoreDecoded
    }
}
