// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.InstanceStatusDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case impairedSince = "impairedSince"
        case name = "name"
        case status = "status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let impairedSince = impairedSince {
            try container.encodeTimestamp(impairedSince, format: .dateTime, forKey: ClientRuntime.Key("ImpairedSince"))
        }
        if let name = name {
            try container.encode(name, forKey: ClientRuntime.Key("Name"))
        }
        if let status = status {
            try container.encode(status, forKey: ClientRuntime.Key("Status"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let impairedSinceDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .impairedSince)
        impairedSince = impairedSinceDecoded
        let nameDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.StatusName.self, forKey: .name)
        name = nameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.StatusType.self, forKey: .status)
        status = statusDecoded
    }
}
