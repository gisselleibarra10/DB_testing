// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// Describes an image.
    public struct Image: Swift.Equatable {
        /// The architecture of the image.
        public var architecture: Ec2ClientTypes.ArchitectureValues?
        /// Any block device mapping entries.
        public var blockDeviceMappings: [Ec2ClientTypes.BlockDeviceMapping]?
        /// The boot mode of the image. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
        public var bootMode: Ec2ClientTypes.BootModeValues?
        /// The date and time the image was created.
        public var creationDate: Swift.String?
        /// The date and time to deprecate the AMI, in UTC, in the following format: YYYY-MM-DDTHH:MM:SSZ. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute.
        public var deprecationTime: Swift.String?
        /// The description of the AMI that was provided during image creation.
        public var description: Swift.String?
        /// Specifies whether enhanced networking with ENA is enabled.
        public var enaSupport: Swift.Bool?
        /// The hypervisor type of the image.
        public var hypervisor: Ec2ClientTypes.HypervisorType?
        /// The ID of the AMI.
        public var imageId: Swift.String?
        /// The location of the AMI.
        public var imageLocation: Swift.String?
        /// The Amazon Web Services account alias (for example, amazon, self) or the Amazon Web Services account ID of the AMI owner.
        public var imageOwnerAlias: Swift.String?
        /// The type of image.
        public var imageType: Ec2ClientTypes.ImageTypeValues?
        /// The kernel associated with the image, if any. Only applicable for machine images.
        public var kernelId: Swift.String?
        /// The name of the AMI that was provided during image creation.
        public var name: Swift.String?
        /// The ID of the Amazon Web Services account that owns the image.
        public var ownerId: Swift.String?
        /// This value is set to windows for Windows AMIs; otherwise, it is blank.
        public var platform: Ec2ClientTypes.PlatformValues?
        /// The platform details associated with the billing code of the AMI. For more information, see [Understanding AMI billing](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html) in the Amazon Elastic Compute Cloud User Guide.
        public var platformDetails: Swift.String?
        /// Any product codes associated with the AMI.
        public var productCodes: [Ec2ClientTypes.ProductCode]?
        /// Indicates whether the image has public launch permissions. The value is true if this image has public launch permissions or false if it has only implicit and explicit launch permissions.
        public var `public`: Swift.Bool?
        /// The RAM disk associated with the image, if any. Only applicable for machine images.
        public var ramdiskId: Swift.String?
        /// The device name of the root device volume (for example, /dev/sda1).
        public var rootDeviceName: Swift.String?
        /// The type of root device used by the AMI. The AMI can use an Amazon EBS volume or an instance store volume.
        public var rootDeviceType: Ec2ClientTypes.DeviceType?
        /// Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
        public var sriovNetSupport: Swift.String?
        /// The current state of the AMI. If the state is available, the image is successfully registered and can be used to launch an instance.
        public var state: Ec2ClientTypes.ImageState?
        /// The reason for the state change.
        public var stateReason: Ec2ClientTypes.StateReason?
        /// Any tags assigned to the image.
        public var tags: [Ec2ClientTypes.Tag]?
        /// If the image is configured for NitroTPM support, the value is v2.0. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
        public var tpmSupport: Ec2ClientTypes.TpmSupportValues?
        /// The operation of the Amazon EC2 instance and the billing code that is associated with the AMI. usageOperation corresponds to the [lineitem/Operation](https://docs.aws.amazon.com/cur/latest/userguide/Lineitem-columns.html#Lineitem-details-O-Operation) column on your Amazon Web Services Cost and Usage Report and in the [Amazon Web Services Price List API](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/price-changes.html). You can view these fields on the Instances or AMIs pages in the Amazon EC2 console, or in the responses that are returned by the [DescribeImages](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html) command in the Amazon EC2 API, or the [describe-images](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html) command in the CLI.
        public var usageOperation: Swift.String?
        /// The type of virtualization of the AMI.
        public var virtualizationType: Ec2ClientTypes.VirtualizationType?

        public init (
            architecture: Ec2ClientTypes.ArchitectureValues? = nil,
            blockDeviceMappings: [Ec2ClientTypes.BlockDeviceMapping]? = nil,
            bootMode: Ec2ClientTypes.BootModeValues? = nil,
            creationDate: Swift.String? = nil,
            deprecationTime: Swift.String? = nil,
            description: Swift.String? = nil,
            enaSupport: Swift.Bool? = nil,
            hypervisor: Ec2ClientTypes.HypervisorType? = nil,
            imageId: Swift.String? = nil,
            imageLocation: Swift.String? = nil,
            imageOwnerAlias: Swift.String? = nil,
            imageType: Ec2ClientTypes.ImageTypeValues? = nil,
            kernelId: Swift.String? = nil,
            name: Swift.String? = nil,
            ownerId: Swift.String? = nil,
            platform: Ec2ClientTypes.PlatformValues? = nil,
            platformDetails: Swift.String? = nil,
            productCodes: [Ec2ClientTypes.ProductCode]? = nil,
            `public`: Swift.Bool? = nil,
            ramdiskId: Swift.String? = nil,
            rootDeviceName: Swift.String? = nil,
            rootDeviceType: Ec2ClientTypes.DeviceType? = nil,
            sriovNetSupport: Swift.String? = nil,
            state: Ec2ClientTypes.ImageState? = nil,
            stateReason: Ec2ClientTypes.StateReason? = nil,
            tags: [Ec2ClientTypes.Tag]? = nil,
            tpmSupport: Ec2ClientTypes.TpmSupportValues? = nil,
            usageOperation: Swift.String? = nil,
            virtualizationType: Ec2ClientTypes.VirtualizationType? = nil
        )
        {
            self.architecture = architecture
            self.blockDeviceMappings = blockDeviceMappings
            self.bootMode = bootMode
            self.creationDate = creationDate
            self.deprecationTime = deprecationTime
            self.description = description
            self.enaSupport = enaSupport
            self.hypervisor = hypervisor
            self.imageId = imageId
            self.imageLocation = imageLocation
            self.imageOwnerAlias = imageOwnerAlias
            self.imageType = imageType
            self.kernelId = kernelId
            self.name = name
            self.ownerId = ownerId
            self.platform = platform
            self.platformDetails = platformDetails
            self.productCodes = productCodes
            self.`public` = `public`
            self.ramdiskId = ramdiskId
            self.rootDeviceName = rootDeviceName
            self.rootDeviceType = rootDeviceType
            self.sriovNetSupport = sriovNetSupport
            self.state = state
            self.stateReason = stateReason
            self.tags = tags
            self.tpmSupport = tpmSupport
            self.usageOperation = usageOperation
            self.virtualizationType = virtualizationType
        }
    }

}
