// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct RevokeSecurityGroupEgressInput: Swift.Equatable {
    /// Not supported. Use a set of IP permissions to specify the CIDR.
    public var cidrIp: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// Not supported. Use a set of IP permissions to specify the port.
    public var fromPort: Swift.Int?
    /// The ID of the security group.
    /// This member is required.
    public var groupId: Swift.String?
    /// The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.
    public var ipPermissions: [Ec2ClientTypes.IpPermission]?
    /// Not supported. Use a set of IP permissions to specify the protocol name or number.
    public var ipProtocol: Swift.String?
    /// The IDs of the security group rules.
    public var securityGroupRuleIds: [Swift.String]?
    /// Not supported. Use a set of IP permissions to specify a destination security group.
    public var sourceSecurityGroupName: Swift.String?
    /// Not supported. Use a set of IP permissions to specify a destination security group.
    public var sourceSecurityGroupOwnerId: Swift.String?
    /// Not supported. Use a set of IP permissions to specify the port.
    public var toPort: Swift.Int?

    public init (
        cidrIp: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        fromPort: Swift.Int? = nil,
        groupId: Swift.String? = nil,
        ipPermissions: [Ec2ClientTypes.IpPermission]? = nil,
        ipProtocol: Swift.String? = nil,
        securityGroupRuleIds: [Swift.String]? = nil,
        sourceSecurityGroupName: Swift.String? = nil,
        sourceSecurityGroupOwnerId: Swift.String? = nil,
        toPort: Swift.Int? = nil
    )
    {
        self.cidrIp = cidrIp
        self.dryRun = dryRun
        self.fromPort = fromPort
        self.groupId = groupId
        self.ipPermissions = ipPermissions
        self.ipProtocol = ipProtocol
        self.securityGroupRuleIds = securityGroupRuleIds
        self.sourceSecurityGroupName = sourceSecurityGroupName
        self.sourceSecurityGroupOwnerId = sourceSecurityGroupOwnerId
        self.toPort = toPort
    }
}
