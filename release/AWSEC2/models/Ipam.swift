// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across Amazon Web Services Regions and accounts throughout your Amazon Web Services Organization. For more information, see [What is IPAM?](https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html) in the Amazon VPC IPAM User Guide.
    public struct Ipam: Swift.Equatable {
        /// The description for the IPAM.
        public var description: Swift.String?
        /// The ARN of the IPAM.
        public var ipamArn: Swift.String?
        /// The ID of the IPAM.
        public var ipamId: Swift.String?
        /// The Amazon Web Services Region of the IPAM.
        public var ipamRegion: Swift.String?
        /// The operating Regions for an IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions. For more information about operating Regions, see [Create an IPAM](https://docs.aws.amazon.com/vpc/latest/ipam/create-ipam.html) in the Amazon VPC IPAM User Guide.
        public var operatingRegions: [Ec2ClientTypes.IpamOperatingRegion]?
        /// The Amazon Web Services account ID of the owner of the IPAM.
        public var ownerId: Swift.String?
        /// The ID of the IPAM's default private scope.
        public var privateDefaultScopeId: Swift.String?
        /// The ID of the IPAM's default public scope.
        public var publicDefaultScopeId: Swift.String?
        /// The number of scopes in the IPAM. The scope quota is 5. For more information on quotas, see [Quotas in IPAM](https://docs.aws.amazon.com/vpc/latest/ipam/quotas-ipam.html) in the Amazon VPC IPAM User Guide.
        public var scopeCount: Swift.Int?
        /// The state of the IPAM.
        public var state: Ec2ClientTypes.IpamState?
        /// The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.
        public var tags: [Ec2ClientTypes.Tag]?

        public init (
            description: Swift.String? = nil,
            ipamArn: Swift.String? = nil,
            ipamId: Swift.String? = nil,
            ipamRegion: Swift.String? = nil,
            operatingRegions: [Ec2ClientTypes.IpamOperatingRegion]? = nil,
            ownerId: Swift.String? = nil,
            privateDefaultScopeId: Swift.String? = nil,
            publicDefaultScopeId: Swift.String? = nil,
            scopeCount: Swift.Int? = nil,
            state: Ec2ClientTypes.IpamState? = nil,
            tags: [Ec2ClientTypes.Tag]? = nil
        )
        {
            self.description = description
            self.ipamArn = ipamArn
            self.ipamId = ipamId
            self.ipamRegion = ipamRegion
            self.operatingRegions = operatingRegions
            self.ownerId = ownerId
            self.privateDefaultScopeId = privateDefaultScopeId
            self.publicDefaultScopeId = publicDefaultScopeId
            self.scopeCount = scopeCount
            self.state = state
            self.tags = tags
        }
    }

}
