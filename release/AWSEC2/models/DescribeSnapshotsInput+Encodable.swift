// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeSnapshotsInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let filters = filters {
            if !filters.isEmpty {
                for (index0, filter0) in filters.enumerated() {
                    var filtersContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Filter.\(index0.advanced(by: 1))"))
                    try filtersContainer0.encode(filter0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        if let maxResults = maxResults {
            try container.encode(maxResults, forKey: ClientRuntime.Key("MaxResults"))
        }
        if let nextToken = nextToken {
            try container.encode(nextToken, forKey: ClientRuntime.Key("NextToken"))
        }
        if let ownerIds = ownerIds {
            if !ownerIds.isEmpty {
                for (index0, string0) in ownerIds.enumerated() {
                    var ownerIdsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Owner.\(index0.advanced(by: 1))"))
                    try ownerIdsContainer0.encode(string0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        if let restorableByUserIds = restorableByUserIds {
            if !restorableByUserIds.isEmpty {
                for (index0, string0) in restorableByUserIds.enumerated() {
                    var restorableByUserIdsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("RestorableBy.\(index0.advanced(by: 1))"))
                    try restorableByUserIdsContainer0.encode(string0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        if let snapshotIds = snapshotIds {
            if !snapshotIds.isEmpty {
                for (index0, snapshotid0) in snapshotIds.enumerated() {
                    var snapshotIdsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("SnapshotId.\(index0.advanced(by: 1))"))
                    try snapshotIdsContainer0.encode(snapshotid0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        try container.encode("DescribeSnapshots", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
