// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.EbsInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ebsOptimizedInfo = "ebsOptimizedInfo"
        case ebsOptimizedSupport = "ebsOptimizedSupport"
        case encryptionSupport = "encryptionSupport"
        case nvmeSupport = "nvmeSupport"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let ebsOptimizedInfo = ebsOptimizedInfo {
            try container.encode(ebsOptimizedInfo, forKey: ClientRuntime.Key("EbsOptimizedInfo"))
        }
        if let ebsOptimizedSupport = ebsOptimizedSupport {
            try container.encode(ebsOptimizedSupport, forKey: ClientRuntime.Key("EbsOptimizedSupport"))
        }
        if let encryptionSupport = encryptionSupport {
            try container.encode(encryptionSupport, forKey: ClientRuntime.Key("EncryptionSupport"))
        }
        if let nvmeSupport = nvmeSupport {
            try container.encode(nvmeSupport, forKey: ClientRuntime.Key("NvmeSupport"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ebsOptimizedSupportDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.EbsOptimizedSupport.self, forKey: .ebsOptimizedSupport)
        ebsOptimizedSupport = ebsOptimizedSupportDecoded
        let encryptionSupportDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.EbsEncryptionSupport.self, forKey: .encryptionSupport)
        encryptionSupport = encryptionSupportDecoded
        let ebsOptimizedInfoDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.EbsOptimizedInfo.self, forKey: .ebsOptimizedInfo)
        ebsOptimizedInfo = ebsOptimizedInfoDecoded
        let nvmeSupportDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.EbsNvmeSupport.self, forKey: .nvmeSupport)
        nvmeSupport = nvmeSupportDecoded
    }
}
