// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ProvisionByoipCidrInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let cidr = cidr {
            try container.encode(cidr, forKey: ClientRuntime.Key("Cidr"))
        }
        if let cidrAuthorizationContext = cidrAuthorizationContext {
            try container.encode(cidrAuthorizationContext, forKey: ClientRuntime.Key("CidrAuthorizationContext"))
        }
        if let description = description {
            try container.encode(description, forKey: ClientRuntime.Key("Description"))
        }
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let multiRegion = multiRegion {
            try container.encode(multiRegion, forKey: ClientRuntime.Key("MultiRegion"))
        }
        if let poolTagSpecifications = poolTagSpecifications {
            if !poolTagSpecifications.isEmpty {
                for (index0, tagspecification0) in poolTagSpecifications.enumerated() {
                    var poolTagSpecificationsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("PoolTagSpecification.\(index0.advanced(by: 1))"))
                    try poolTagSpecificationsContainer0.encode(tagspecification0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var poolTagSpecificationsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("PoolTagSpecification"))
                try poolTagSpecificationsContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        if let publiclyAdvertisable = publiclyAdvertisable {
            try container.encode(publiclyAdvertisable, forKey: ClientRuntime.Key("PubliclyAdvertisable"))
        }
        try container.encode("ProvisionByoipCidr", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
