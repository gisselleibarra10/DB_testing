// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeKeyPairsInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let filters = filters {
            if !filters.isEmpty {
                for (index0, filter0) in filters.enumerated() {
                    var filtersContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Filter.\(index0.advanced(by: 1))"))
                    try filtersContainer0.encode(filter0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var filtersContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Filter"))
                try filtersContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        if let includePublicKey = includePublicKey {
            try container.encode(includePublicKey, forKey: ClientRuntime.Key("IncludePublicKey"))
        }
        if let keyNames = keyNames {
            if !keyNames.isEmpty {
                for (index0, keypairname0) in keyNames.enumerated() {
                    var keyNamesContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("KeyName.\(index0.advanced(by: 1))"))
                    try keyNamesContainer0.encode(keypairname0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var keyNamesContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("KeyName"))
                try keyNamesContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        if let keyPairIds = keyPairIds {
            if !keyPairIds.isEmpty {
                for (index0, keypairid0) in keyPairIds.enumerated() {
                    var keyPairIdsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("KeyPairId.\(index0.advanced(by: 1))"))
                    try keyPairIdsContainer0.encode(keypairid0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var keyPairIdsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("KeyPairId"))
                try keyPairIdsContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        try container.encode("DescribeKeyPairs", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
