// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.IdFormat: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deadline = "deadline"
        case resource = "resource"
        case useLongIds = "useLongIds"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let deadline = deadline {
            try container.encode(ClientRuntime.TimestampWrapper(deadline, format: .dateTime), forKey: ClientRuntime.Key("Deadline"))
        }
        if let resource = resource {
            try container.encode(resource, forKey: ClientRuntime.Key("Resource"))
        }
        if let useLongIds = useLongIds {
            try container.encode(useLongIds, forKey: ClientRuntime.Key("UseLongIds"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deadlineDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deadline)
        var deadlineBuffer:ClientRuntime.Date? = nil
        if let deadlineDecoded = deadlineDecoded {
            deadlineBuffer = try ClientRuntime.TimestampWrapperDecoder.parseDateStringValue(deadlineDecoded, format: .dateTime)
        }
        deadline = deadlineBuffer
        let resourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resource)
        resource = resourceDecoded
        let useLongIdsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .useLongIds)
        useLongIds = useLongIdsDecoded
    }
}
