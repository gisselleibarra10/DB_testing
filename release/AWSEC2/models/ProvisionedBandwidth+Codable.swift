// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.ProvisionedBandwidth: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case provisionTime = "provisionTime"
        case provisioned = "provisioned"
        case requestTime = "requestTime"
        case requested = "requested"
        case status = "status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let provisionTime = provisionTime {
            try container.encodeTimestamp(provisionTime, format: .dateTime, forKey: ClientRuntime.Key("ProvisionTime"))
        }
        if let provisioned = provisioned {
            try container.encode(provisioned, forKey: ClientRuntime.Key("Provisioned"))
        }
        if let requestTime = requestTime {
            try container.encodeTimestamp(requestTime, format: .dateTime, forKey: ClientRuntime.Key("RequestTime"))
        }
        if let requested = requested {
            try container.encode(requested, forKey: ClientRuntime.Key("Requested"))
        }
        if let status = status {
            try container.encode(status, forKey: ClientRuntime.Key("Status"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let provisionTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .provisionTime)
        provisionTime = provisionTimeDecoded
        let provisionedDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .provisioned)
        provisioned = provisionedDecoded
        let requestTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .requestTime)
        requestTime = requestTimeDecoded
        let requestedDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .requested)
        requested = requestedDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
    }
}
