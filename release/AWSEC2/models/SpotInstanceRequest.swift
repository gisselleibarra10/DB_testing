// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes {
    /// Describes a Spot Instance request.
    public struct SpotInstanceRequest: Swift.Equatable {
        /// Deprecated.
        public var actualBlockHourlyPrice: Swift.String?
        /// The Availability Zone group. If you specify the same Availability Zone group for all Spot Instance requests, all Spot Instances are launched in the same Availability Zone.
        public var availabilityZoneGroup: Swift.String?
        /// Deprecated.
        public var blockDurationMinutes: Swift.Int?
        /// The date and time when the Spot Instance request was created, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).
        public var createTime: ClientRuntime.Date?
        /// The fault codes for the Spot Instance request, if any.
        public var fault: EC2ClientTypes.SpotInstanceStateFault?
        /// The instance ID, if an instance has been launched to fulfill the Spot Instance request.
        public var instanceId: Swift.String?
        /// The behavior when a Spot Instance is interrupted.
        public var instanceInterruptionBehavior: EC2ClientTypes.InstanceInterruptionBehavior?
        /// The instance launch group. Launch groups are Spot Instances that launch together and terminate together.
        public var launchGroup: Swift.String?
        /// Additional information for launching instances.
        public var launchSpecification: EC2ClientTypes.LaunchSpecification?
        /// The Availability Zone in which the request is launched.
        public var launchedAvailabilityZone: Swift.String?
        /// The product description associated with the Spot Instance.
        public var productDescription: EC2ClientTypes.RIProductDescription?
        /// The ID of the Spot Instance request.
        public var spotInstanceRequestId: Swift.String?
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price. If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify this parameter.
        public var spotPrice: Swift.String?
        /// The state of the Spot Instance request. Spot request status information helps track your Spot Instance requests. For more information, see [Spot request status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-request-status.html) in the Amazon EC2 User Guide for Linux Instances.
        public var state: EC2ClientTypes.SpotInstanceState?
        /// The status code and status message describing the Spot Instance request.
        public var status: EC2ClientTypes.SpotInstanceStatus?
        /// Any tags assigned to the resource.
        public var tags: [EC2ClientTypes.Tag]?
        /// The Spot Instance request type.
        public var type: EC2ClientTypes.SpotInstanceType?
        /// The start date of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The request becomes active at this date and time.
        public var validFrom: ClientRuntime.Date?
        /// The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ).
        ///
        /// * For a persistent request, the request remains active until the validUntil date and time is reached. Otherwise, the request remains active until you cancel it.
        ///
        /// * For a one-time request, the request remains active until all instances launch, the request is canceled, or the validUntil date and time is reached. By default, the request is valid for 7 days from the date the request was created.
        public var validUntil: ClientRuntime.Date?

        public init (
            actualBlockHourlyPrice: Swift.String? = nil,
            availabilityZoneGroup: Swift.String? = nil,
            blockDurationMinutes: Swift.Int? = nil,
            createTime: ClientRuntime.Date? = nil,
            fault: EC2ClientTypes.SpotInstanceStateFault? = nil,
            instanceId: Swift.String? = nil,
            instanceInterruptionBehavior: EC2ClientTypes.InstanceInterruptionBehavior? = nil,
            launchGroup: Swift.String? = nil,
            launchSpecification: EC2ClientTypes.LaunchSpecification? = nil,
            launchedAvailabilityZone: Swift.String? = nil,
            productDescription: EC2ClientTypes.RIProductDescription? = nil,
            spotInstanceRequestId: Swift.String? = nil,
            spotPrice: Swift.String? = nil,
            state: EC2ClientTypes.SpotInstanceState? = nil,
            status: EC2ClientTypes.SpotInstanceStatus? = nil,
            tags: [EC2ClientTypes.Tag]? = nil,
            type: EC2ClientTypes.SpotInstanceType? = nil,
            validFrom: ClientRuntime.Date? = nil,
            validUntil: ClientRuntime.Date? = nil
        )
        {
            self.actualBlockHourlyPrice = actualBlockHourlyPrice
            self.availabilityZoneGroup = availabilityZoneGroup
            self.blockDurationMinutes = blockDurationMinutes
            self.createTime = createTime
            self.fault = fault
            self.instanceId = instanceId
            self.instanceInterruptionBehavior = instanceInterruptionBehavior
            self.launchGroup = launchGroup
            self.launchSpecification = launchSpecification
            self.launchedAvailabilityZone = launchedAvailabilityZone
            self.productDescription = productDescription
            self.spotInstanceRequestId = spotInstanceRequestId
            self.spotPrice = spotPrice
            self.state = state
            self.status = status
            self.tags = tags
            self.type = type
            self.validFrom = validFrom
            self.validUntil = validUntil
        }
    }

}
