// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAddressesOutputResponseBody: Swift.Equatable {
    let addresses: [EC2ClientTypes.Address]?
}

extension DescribeAddressesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addresses = "addressesSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.addresses) {
            struct KeyVal0{struct item{}}
            let addressesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .addresses)
            if let addressesWrappedContainer = addressesWrappedContainer {
                let addressesContainer = try addressesWrappedContainer.decodeIfPresent([EC2ClientTypes.Address].self, forKey: .member)
                var addressesBuffer:[EC2ClientTypes.Address]? = nil
                if let addressesContainer = addressesContainer {
                    addressesBuffer = [EC2ClientTypes.Address]()
                    for structureContainer0 in addressesContainer {
                        addressesBuffer?.append(structureContainer0)
                    }
                }
                addresses = addressesBuffer
            } else {
                addresses = []
            }
        } else {
            addresses = nil
        }
    }
}
