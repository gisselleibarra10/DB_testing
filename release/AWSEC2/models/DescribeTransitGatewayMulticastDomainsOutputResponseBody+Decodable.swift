// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTransitGatewayMulticastDomainsOutputResponseBody: Swift.Equatable {
    let transitGatewayMulticastDomains: [Ec2ClientTypes.TransitGatewayMulticastDomain]?
    let nextToken: Swift.String?
}

extension DescribeTransitGatewayMulticastDomainsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case transitGatewayMulticastDomains = "transitGatewayMulticastDomains"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.transitGatewayMulticastDomains) {
            struct KeyVal0{struct item{}}
            let transitGatewayMulticastDomainsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .transitGatewayMulticastDomains)
            if let transitGatewayMulticastDomainsWrappedContainer = transitGatewayMulticastDomainsWrappedContainer {
                let transitGatewayMulticastDomainsContainer = try transitGatewayMulticastDomainsWrappedContainer.decodeIfPresent([Ec2ClientTypes.TransitGatewayMulticastDomain].self, forKey: .member)
                var transitGatewayMulticastDomainsBuffer:[Ec2ClientTypes.TransitGatewayMulticastDomain]? = nil
                if let transitGatewayMulticastDomainsContainer = transitGatewayMulticastDomainsContainer {
                    transitGatewayMulticastDomainsBuffer = [Ec2ClientTypes.TransitGatewayMulticastDomain]()
                    for structureContainer0 in transitGatewayMulticastDomainsContainer {
                        transitGatewayMulticastDomainsBuffer?.append(structureContainer0)
                    }
                }
                transitGatewayMulticastDomains = transitGatewayMulticastDomainsBuffer
            } else {
                transitGatewayMulticastDomains = []
            }
        } else {
            transitGatewayMulticastDomains = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
