// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeIpamPoolsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let ipamPools: [Ec2ClientTypes.IpamPool]?
}

extension DescribeIpamPoolsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ipamPools = "ipamPoolSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.ipamPools) {
            struct KeyVal0{struct item{}}
            let ipamPoolsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .ipamPools)
            if let ipamPoolsWrappedContainer = ipamPoolsWrappedContainer {
                let ipamPoolsContainer = try ipamPoolsWrappedContainer.decodeIfPresent([Ec2ClientTypes.IpamPool].self, forKey: .member)
                var ipamPoolsBuffer:[Ec2ClientTypes.IpamPool]? = nil
                if let ipamPoolsContainer = ipamPoolsContainer {
                    ipamPoolsBuffer = [Ec2ClientTypes.IpamPool]()
                    for structureContainer0 in ipamPoolsContainer {
                        ipamPoolsBuffer?.append(structureContainer0)
                    }
                }
                ipamPools = ipamPoolsBuffer
            } else {
                ipamPools = []
            }
        } else {
            ipamPools = nil
        }
    }
}
