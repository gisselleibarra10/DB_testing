// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.LaunchTemplatePrivateDnsNameOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enableResourceNameDnsAAAARecord = "enableResourceNameDnsAAAARecord"
        case enableResourceNameDnsARecord = "enableResourceNameDnsARecord"
        case hostnameType = "hostnameType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let enableResourceNameDnsAAAARecord = enableResourceNameDnsAAAARecord {
            try container.encode(enableResourceNameDnsAAAARecord, forKey: ClientRuntime.Key("EnableResourceNameDnsAAAARecord"))
        }
        if let enableResourceNameDnsARecord = enableResourceNameDnsARecord {
            try container.encode(enableResourceNameDnsARecord, forKey: ClientRuntime.Key("EnableResourceNameDnsARecord"))
        }
        if let hostnameType = hostnameType {
            try container.encode(hostnameType, forKey: ClientRuntime.Key("HostnameType"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostnameTypeDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.HostnameType.self, forKey: .hostnameType)
        hostnameType = hostnameTypeDecoded
        let enableResourceNameDnsARecordDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableResourceNameDnsARecord)
        enableResourceNameDnsARecord = enableResourceNameDnsARecordDecoded
        let enableResourceNameDnsAAAARecordDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableResourceNameDnsAAAARecord)
        enableResourceNameDnsAAAARecord = enableResourceNameDnsAAAARecordDecoded
    }
}
