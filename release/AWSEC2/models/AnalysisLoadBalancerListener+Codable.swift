// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.AnalysisLoadBalancerListener: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case instancePort = "instancePort"
        case loadBalancerPort = "loadBalancerPort"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let instancePort = instancePort {
            try container.encode(instancePort, forKey: ClientRuntime.Key("InstancePort"))
        }
        if let loadBalancerPort = loadBalancerPort {
            try container.encode(loadBalancerPort, forKey: ClientRuntime.Key("LoadBalancerPort"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let loadBalancerPortDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .loadBalancerPort)
        loadBalancerPort = loadBalancerPortDecoded
        let instancePortDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .instancePort)
        instancePort = instancePortDecoded
    }
}
