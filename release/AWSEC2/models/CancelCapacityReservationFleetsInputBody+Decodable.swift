// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CancelCapacityReservationFleetsInputBody: Swift.Equatable {
    let dryRun: Swift.Bool?
    let capacityReservationFleetIds: [Swift.String]?
}

extension CancelCapacityReservationFleetsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case capacityReservationFleetIds = "CapacityReservationFleetId"
        case dryRun = "DryRun"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        if containerValues.contains(.capacityReservationFleetIds) {
            struct KeyVal0{struct item{}}
            let capacityReservationFleetIdsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .capacityReservationFleetIds)
            if let capacityReservationFleetIdsWrappedContainer = capacityReservationFleetIdsWrappedContainer {
                let capacityReservationFleetIdsContainer = try capacityReservationFleetIdsWrappedContainer.decodeIfPresent([Swift.String].self, forKey: .member)
                var capacityReservationFleetIdsBuffer:[Swift.String]? = nil
                if let capacityReservationFleetIdsContainer = capacityReservationFleetIdsContainer {
                    capacityReservationFleetIdsBuffer = [Swift.String]()
                    for stringContainer0 in capacityReservationFleetIdsContainer {
                        capacityReservationFleetIdsBuffer?.append(stringContainer0)
                    }
                }
                capacityReservationFleetIds = capacityReservationFleetIdsBuffer
            } else {
                capacityReservationFleetIds = []
            }
        } else {
            capacityReservationFleetIds = nil
        }
    }
}
