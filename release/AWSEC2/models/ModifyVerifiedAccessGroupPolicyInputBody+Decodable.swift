// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyVerifiedAccessGroupPolicyInputBody: Swift.Equatable {
    let verifiedAccessGroupId: Swift.String?
    let policyEnabled: Swift.Bool?
    let policyDocument: Swift.String?
    let clientToken: Swift.String?
    let dryRun: Swift.Bool?
}

extension ModifyVerifiedAccessGroupPolicyInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case dryRun = "DryRun"
        case policyDocument = "PolicyDocument"
        case policyEnabled = "PolicyEnabled"
        case verifiedAccessGroupId = "VerifiedAccessGroupId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let verifiedAccessGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .verifiedAccessGroupId)
        verifiedAccessGroupId = verifiedAccessGroupIdDecoded
        let policyEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .policyEnabled)
        policyEnabled = policyEnabledDecoded
        let policyDocumentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyDocument)
        policyDocument = policyDocumentDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
