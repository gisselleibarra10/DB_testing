// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.DiskInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case count = "count"
        case sizeInGB = "sizeInGB"
        case type = "type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let count = count {
            try container.encode(count, forKey: ClientRuntime.Key("Count"))
        }
        if let sizeInGB = sizeInGB {
            try container.encode(sizeInGB, forKey: ClientRuntime.Key("SizeInGB"))
        }
        if let type = type {
            try container.encode(type, forKey: ClientRuntime.Key("Type"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sizeInGBDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sizeInGB)
        sizeInGB = sizeInGBDecoded
        let countDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .count)
        count = countDecoded
        let typeDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.DiskType.self, forKey: .type)
        type = typeDecoded
    }
}
