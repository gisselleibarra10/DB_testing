// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifySubnetAttributeInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let assignIpv6AddressOnCreation = assignIpv6AddressOnCreation {
            try container.encode(assignIpv6AddressOnCreation, forKey: ClientRuntime.Key("AssignIpv6AddressOnCreation"))
        }
        if let customerOwnedIpv4Pool = customerOwnedIpv4Pool {
            try container.encode(customerOwnedIpv4Pool, forKey: ClientRuntime.Key("CustomerOwnedIpv4Pool"))
        }
        if let disableLniAtDeviceIndex = disableLniAtDeviceIndex {
            try container.encode(disableLniAtDeviceIndex, forKey: ClientRuntime.Key("DisableLniAtDeviceIndex"))
        }
        if let enableDns64 = enableDns64 {
            try container.encode(enableDns64, forKey: ClientRuntime.Key("EnableDns64"))
        }
        if let enableLniAtDeviceIndex = enableLniAtDeviceIndex {
            try container.encode(enableLniAtDeviceIndex, forKey: ClientRuntime.Key("EnableLniAtDeviceIndex"))
        }
        if let enableResourceNameDnsAAAARecordOnLaunch = enableResourceNameDnsAAAARecordOnLaunch {
            try container.encode(enableResourceNameDnsAAAARecordOnLaunch, forKey: ClientRuntime.Key("EnableResourceNameDnsAAAARecordOnLaunch"))
        }
        if let enableResourceNameDnsARecordOnLaunch = enableResourceNameDnsARecordOnLaunch {
            try container.encode(enableResourceNameDnsARecordOnLaunch, forKey: ClientRuntime.Key("EnableResourceNameDnsARecordOnLaunch"))
        }
        if let mapCustomerOwnedIpOnLaunch = mapCustomerOwnedIpOnLaunch {
            try container.encode(mapCustomerOwnedIpOnLaunch, forKey: ClientRuntime.Key("MapCustomerOwnedIpOnLaunch"))
        }
        if let mapPublicIpOnLaunch = mapPublicIpOnLaunch {
            try container.encode(mapPublicIpOnLaunch, forKey: ClientRuntime.Key("MapPublicIpOnLaunch"))
        }
        if let privateDnsHostnameTypeOnLaunch = privateDnsHostnameTypeOnLaunch {
            try container.encode(privateDnsHostnameTypeOnLaunch, forKey: ClientRuntime.Key("PrivateDnsHostnameTypeOnLaunch"))
        }
        if let subnetId = subnetId {
            try container.encode(subnetId, forKey: ClientRuntime.Key("SubnetId"))
        }
        try container.encode("ModifySubnetAttribute", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
