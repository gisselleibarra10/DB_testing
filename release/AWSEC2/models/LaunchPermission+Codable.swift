// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.LaunchPermission: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case group = "group"
        case organizationArn = "organizationArn"
        case organizationalUnitArn = "organizationalUnitArn"
        case userId = "userId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let group = group {
            try container.encode(group, forKey: ClientRuntime.Key("Group"))
        }
        if let organizationArn = organizationArn {
            try container.encode(organizationArn, forKey: ClientRuntime.Key("OrganizationArn"))
        }
        if let organizationalUnitArn = organizationalUnitArn {
            try container.encode(organizationalUnitArn, forKey: ClientRuntime.Key("OrganizationalUnitArn"))
        }
        if let userId = userId {
            try container.encode(userId, forKey: ClientRuntime.Key("UserId"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.PermissionGroup.self, forKey: .group)
        group = groupDecoded
        let userIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userId)
        userId = userIdDecoded
        let organizationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .organizationArn)
        organizationArn = organizationArnDecoded
        let organizationalUnitArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .organizationalUnitArn)
        organizationalUnitArn = organizationalUnitArnDecoded
    }
}
