// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// Describes a security group rule.
    public struct SecurityGroupRule: Swift.Equatable {
        /// The IPv4 CIDR range.
        public var cidrIpv4: Swift.String?
        /// The IPv6 CIDR range.
        public var cidrIpv6: Swift.String?
        /// The security group rule description.
        public var description: Swift.String?
        /// The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
        public var fromPort: Swift.Int?
        /// The ID of the security group.
        public var groupId: Swift.String?
        /// The ID of the Amazon Web Services account that owns the security group.
        public var groupOwnerId: Swift.String?
        /// The IP protocol name (tcp, udp, icmp, icmpv6) or number (see [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)). Use -1 to specify all protocols.
        public var ipProtocol: Swift.String?
        /// Indicates whether the security group rule is an outbound rule.
        public var isEgress: Swift.Bool?
        /// The ID of the prefix list.
        public var prefixListId: Swift.String?
        /// Describes the security group that is referenced in the rule.
        public var referencedGroupInfo: Ec2ClientTypes.ReferencedSecurityGroup?
        /// The ID of the security group rule.
        public var securityGroupRuleId: Swift.String?
        /// The tags applied to the security group rule.
        public var tags: [Ec2ClientTypes.Tag]?
        /// The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
        public var toPort: Swift.Int?

        public init (
            cidrIpv4: Swift.String? = nil,
            cidrIpv6: Swift.String? = nil,
            description: Swift.String? = nil,
            fromPort: Swift.Int? = nil,
            groupId: Swift.String? = nil,
            groupOwnerId: Swift.String? = nil,
            ipProtocol: Swift.String? = nil,
            isEgress: Swift.Bool? = nil,
            prefixListId: Swift.String? = nil,
            referencedGroupInfo: Ec2ClientTypes.ReferencedSecurityGroup? = nil,
            securityGroupRuleId: Swift.String? = nil,
            tags: [Ec2ClientTypes.Tag]? = nil,
            toPort: Swift.Int? = nil
        )
        {
            self.cidrIpv4 = cidrIpv4
            self.cidrIpv6 = cidrIpv6
            self.description = description
            self.fromPort = fromPort
            self.groupId = groupId
            self.groupOwnerId = groupOwnerId
            self.ipProtocol = ipProtocol
            self.isEgress = isEgress
            self.prefixListId = prefixListId
            self.referencedGroupInfo = referencedGroupInfo
            self.securityGroupRuleId = securityGroupRuleId
            self.tags = tags
            self.toPort = toPort
        }
    }

}
