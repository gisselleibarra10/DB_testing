// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeInstancesOutputResponseBody: Swift.Equatable {
    let reservations: [Ec2ClientTypes.Reservation]?
    let nextToken: Swift.String?
}

extension DescribeInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case reservations = "reservationSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.reservations) {
            struct KeyVal0{struct item{}}
            let reservationsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .reservations)
            if let reservationsWrappedContainer = reservationsWrappedContainer {
                let reservationsContainer = try reservationsWrappedContainer.decodeIfPresent([Ec2ClientTypes.Reservation].self, forKey: .member)
                var reservationsBuffer:[Ec2ClientTypes.Reservation]? = nil
                if let reservationsContainer = reservationsContainer {
                    reservationsBuffer = [Ec2ClientTypes.Reservation]()
                    for structureContainer0 in reservationsContainer {
                        reservationsBuffer?.append(structureContainer0)
                    }
                }
                reservations = reservationsBuffer
            } else {
                reservations = []
            }
        } else {
            reservations = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
