// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.VpcIpv6CidrBlockAssociation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associationId = "associationId"
        case ipv6CidrBlock = "ipv6CidrBlock"
        case ipv6CidrBlockState = "ipv6CidrBlockState"
        case ipv6Pool = "ipv6Pool"
        case networkBorderGroup = "networkBorderGroup"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let associationId = associationId {
            try container.encode(associationId, forKey: ClientRuntime.Key("AssociationId"))
        }
        if let ipv6CidrBlock = ipv6CidrBlock {
            try container.encode(ipv6CidrBlock, forKey: ClientRuntime.Key("Ipv6CidrBlock"))
        }
        if let ipv6CidrBlockState = ipv6CidrBlockState {
            try container.encode(ipv6CidrBlockState, forKey: ClientRuntime.Key("Ipv6CidrBlockState"))
        }
        if let ipv6Pool = ipv6Pool {
            try container.encode(ipv6Pool, forKey: ClientRuntime.Key("Ipv6Pool"))
        }
        if let networkBorderGroup = networkBorderGroup {
            try container.encode(networkBorderGroup, forKey: ClientRuntime.Key("NetworkBorderGroup"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let associationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .associationId)
        associationId = associationIdDecoded
        let ipv6CidrBlockDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipv6CidrBlock)
        ipv6CidrBlock = ipv6CidrBlockDecoded
        let ipv6CidrBlockStateDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.VpcCidrBlockState.self, forKey: .ipv6CidrBlockState)
        ipv6CidrBlockState = ipv6CidrBlockStateDecoded
        let networkBorderGroupDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkBorderGroup)
        networkBorderGroup = networkBorderGroupDecoded
        let ipv6PoolDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipv6Pool)
        ipv6Pool = ipv6PoolDecoded
    }
}
