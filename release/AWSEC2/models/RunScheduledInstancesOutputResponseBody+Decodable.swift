// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RunScheduledInstancesOutputResponseBody: Swift.Equatable {
    let instanceIdSet: [Swift.String]?
}

extension RunScheduledInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case instanceIdSet = "instanceIdSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.instanceIdSet) {
            struct KeyVal0{struct item{}}
            let instanceIdSetWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .instanceIdSet)
            if let instanceIdSetWrappedContainer = instanceIdSetWrappedContainer {
                let instanceIdSetContainer = try instanceIdSetWrappedContainer.decodeIfPresent([Swift.String].self, forKey: .member)
                var instanceIdSetBuffer:[Swift.String]? = nil
                if let instanceIdSetContainer = instanceIdSetContainer {
                    instanceIdSetBuffer = [Swift.String]()
                    for stringContainer0 in instanceIdSetContainer {
                        instanceIdSetBuffer?.append(stringContainer0)
                    }
                }
                instanceIdSet = instanceIdSetBuffer
            } else {
                instanceIdSet = []
            }
        } else {
            instanceIdSet = nil
        }
    }
}
