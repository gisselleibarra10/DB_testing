// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct RunInstancesInput: Swift.Equatable {
    /// Reserved.
    public var additionalInfo: Swift.String?
    /// The block device mapping, which defines the EBS volumes and instance store volumes to attach to the instance at launch. For more information, see [Block device mappings](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html) in the Amazon EC2 User Guide.
    public var blockDeviceMappings: [Ec2ClientTypes.BlockDeviceMapping]?
    /// Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to open, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
    public var capacityReservationSpecification: Ec2ClientTypes.CapacityReservationSpecification?
    /// Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency. For more information, see [Ensuring Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html). Constraints: Maximum 64 ASCII characters
    public var clientToken: Swift.String?
    /// The CPU options for the instance. For more information, see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the Amazon EC2 User Guide.
    public var cpuOptions: Ec2ClientTypes.CpuOptionsRequest?
    /// The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited. To change this attribute after launch, use [ ModifyInstanceCreditSpecification](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html). For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the Amazon EC2 User Guide. Default: standard (T2 instances) or unlimited (T3/T3a/T4g instances) For T3 instances with host tenancy, only standard is supported.
    public var creditSpecification: Ec2ClientTypes.CreditSpecificationRequest?
    /// Indicates whether an instance is enabled for stop protection. For more information, see [Stop protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
    public var disableApiStop: Swift.Bool?
    /// If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use [ModifyInstanceAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html). Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can terminate the instance by running the shutdown command from the instance. Default: false
    public var disableApiTermination: Swift.Bool?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance. Default: false
    public var ebsOptimized: Swift.Bool?
    /// An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see [Amazon EC2 Elastic GPUs](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html) in the Amazon EC2 User Guide.
    public var elasticGpuSpecification: [Ec2ClientTypes.ElasticGpuSpecification]?
    /// An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads. You cannot specify accelerators from different generations in the same request.
    public var elasticInferenceAccelerators: [Ec2ClientTypes.ElasticInferenceAccelerator]?
    /// Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see [ What is Amazon Web Services Nitro Enclaves?](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html) in the Amazon Web Services Nitro Enclaves User Guide. You can't enable Amazon Web Services Nitro Enclaves and hibernation on the same instance.
    public var enclaveOptions: Ec2ClientTypes.EnclaveOptionsRequest?
    /// Indicates whether an instance is enabled for hibernation. For more information, see [Hibernate your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the Amazon EC2 User Guide. You can't enable hibernation and Amazon Web Services Nitro Enclaves on the same instance.
    public var hibernationOptions: Ec2ClientTypes.HibernationOptionsRequest?
    /// The name or Amazon Resource Name (ARN) of an IAM instance profile.
    public var iamInstanceProfile: Ec2ClientTypes.IamInstanceProfileSpecification?
    /// The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.
    public var imageId: Swift.String?
    /// Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown). Default: stop
    public var instanceInitiatedShutdownBehavior: Ec2ClientTypes.ShutdownBehavior?
    /// The market (purchasing) option for the instances. For [RunInstances], persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop.
    public var instanceMarketOptions: Ec2ClientTypes.InstanceMarketOptionsRequest?
    /// The instance type. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the Amazon EC2 User Guide. Default: m1.small
    public var instanceType: Ec2ClientTypes.InstanceType?
    /// [EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch. You cannot specify this option and the network interfaces option in the same request.
    public var ipv6AddressCount: Swift.Int?
    /// [EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch. You cannot specify this option and the network interfaces option in the same request.
    public var ipv6Addresses: [Ec2ClientTypes.InstanceIpv6Address]?
    /// The ID of the kernel. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [PV-GRUB](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the Amazon EC2 User Guide.
    public var kernelId: Swift.String?
    /// The name of the key pair. You can create a key pair using [CreateKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or [ImportKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html). If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.
    public var keyName: Swift.String?
    /// The launch template to use to launch the instances. Any parameters that you specify in [RunInstances] override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.
    public var launchTemplate: Ec2ClientTypes.LaunchTemplateSpecification?
    /// The license configurations.
    public var licenseSpecifications: [Ec2ClientTypes.LicenseConfigurationRequest]?
    /// The maintenance and recovery options for the instance.
    public var maintenanceOptions: Ec2ClientTypes.InstanceMaintenanceOptionsRequest?
    /// The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above MinCount. Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see [How many instances can I run in Amazon EC2](http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2) in the Amazon EC2 FAQ.
    /// This member is required.
    public var maxCount: Swift.Int?
    /// The metadata options for the instance. For more information, see [Instance metadata and user data](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
    public var metadataOptions: Ec2ClientTypes.InstanceMetadataOptionsRequest?
    /// The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances. Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see [How many instances can I run in Amazon EC2](http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2) in the Amazon EC2 General FAQ.
    /// This member is required.
    public var minCount: Swift.Int?
    /// Specifies whether detailed monitoring is enabled for the instance.
    public var monitoring: Ec2ClientTypes.RunInstancesMonitoringEnabled?
    /// The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.
    public var networkInterfaces: [Ec2ClientTypes.InstanceNetworkInterfaceSpecification]?
    /// The placement for the instance.
    public var placement: Ec2ClientTypes.Placement?
    /// The options for the instance hostname. The default values are inherited from the subnet.
    public var privateDnsNameOptions: Ec2ClientTypes.PrivateDnsNameOptionsRequest?
    /// [EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet. Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request. You cannot specify this option and the network interfaces option in the same request.
    public var privateIpAddress: Swift.String?
    /// The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the Amazon Web Services Resource Center and search for the kernel ID. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [PV-GRUB](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the Amazon EC2 User Guide.
    public var ramdiskId: Swift.String?
    /// The IDs of the security groups. You can create a security group using [CreateSecurityGroup](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html). If you specify a network interface, you must specify any security groups as part of the network interface.
    public var securityGroupIds: [Swift.String]?
    /// [EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead. If you specify a network interface, you must specify any security groups as part of the network interface. Default: Amazon EC2 uses the default security group.
    public var securityGroups: [Swift.String]?
    /// [EC2-VPC] The ID of the subnet to launch the instance into. If you specify a network interface, you must specify any subnets as part of the network interface.
    public var subnetId: Swift.String?
    /// The tags to apply to the resources that are created during instance launch. You can specify tags for the following resources only:
    ///
    /// * Instances
    ///
    /// * Volumes
    ///
    /// * Elastic graphics
    ///
    /// * Spot Instance requests
    ///
    /// * Network interfaces
    ///
    ///
    /// To tag a resource after it has been created, see [CreateTags](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html).
    public var tagSpecifications: [Ec2ClientTypes.TagSpecification]?
    /// The user data script to make available to the instance. For more information, see [Run commands on your Linux instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) and [Run commands on your Windows instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-windows-user-data.html). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.
    public var userData: Swift.String?

    public init (
        additionalInfo: Swift.String? = nil,
        blockDeviceMappings: [Ec2ClientTypes.BlockDeviceMapping]? = nil,
        capacityReservationSpecification: Ec2ClientTypes.CapacityReservationSpecification? = nil,
        clientToken: Swift.String? = nil,
        cpuOptions: Ec2ClientTypes.CpuOptionsRequest? = nil,
        creditSpecification: Ec2ClientTypes.CreditSpecificationRequest? = nil,
        disableApiStop: Swift.Bool? = nil,
        disableApiTermination: Swift.Bool? = nil,
        dryRun: Swift.Bool? = nil,
        ebsOptimized: Swift.Bool? = nil,
        elasticGpuSpecification: [Ec2ClientTypes.ElasticGpuSpecification]? = nil,
        elasticInferenceAccelerators: [Ec2ClientTypes.ElasticInferenceAccelerator]? = nil,
        enclaveOptions: Ec2ClientTypes.EnclaveOptionsRequest? = nil,
        hibernationOptions: Ec2ClientTypes.HibernationOptionsRequest? = nil,
        iamInstanceProfile: Ec2ClientTypes.IamInstanceProfileSpecification? = nil,
        imageId: Swift.String? = nil,
        instanceInitiatedShutdownBehavior: Ec2ClientTypes.ShutdownBehavior? = nil,
        instanceMarketOptions: Ec2ClientTypes.InstanceMarketOptionsRequest? = nil,
        instanceType: Ec2ClientTypes.InstanceType? = nil,
        ipv6AddressCount: Swift.Int? = nil,
        ipv6Addresses: [Ec2ClientTypes.InstanceIpv6Address]? = nil,
        kernelId: Swift.String? = nil,
        keyName: Swift.String? = nil,
        launchTemplate: Ec2ClientTypes.LaunchTemplateSpecification? = nil,
        licenseSpecifications: [Ec2ClientTypes.LicenseConfigurationRequest]? = nil,
        maintenanceOptions: Ec2ClientTypes.InstanceMaintenanceOptionsRequest? = nil,
        maxCount: Swift.Int? = nil,
        metadataOptions: Ec2ClientTypes.InstanceMetadataOptionsRequest? = nil,
        minCount: Swift.Int? = nil,
        monitoring: Ec2ClientTypes.RunInstancesMonitoringEnabled? = nil,
        networkInterfaces: [Ec2ClientTypes.InstanceNetworkInterfaceSpecification]? = nil,
        placement: Ec2ClientTypes.Placement? = nil,
        privateDnsNameOptions: Ec2ClientTypes.PrivateDnsNameOptionsRequest? = nil,
        privateIpAddress: Swift.String? = nil,
        ramdiskId: Swift.String? = nil,
        securityGroupIds: [Swift.String]? = nil,
        securityGroups: [Swift.String]? = nil,
        subnetId: Swift.String? = nil,
        tagSpecifications: [Ec2ClientTypes.TagSpecification]? = nil,
        userData: Swift.String? = nil
    )
    {
        self.additionalInfo = additionalInfo
        self.blockDeviceMappings = blockDeviceMappings
        self.capacityReservationSpecification = capacityReservationSpecification
        self.clientToken = clientToken
        self.cpuOptions = cpuOptions
        self.creditSpecification = creditSpecification
        self.disableApiStop = disableApiStop
        self.disableApiTermination = disableApiTermination
        self.dryRun = dryRun
        self.ebsOptimized = ebsOptimized
        self.elasticGpuSpecification = elasticGpuSpecification
        self.elasticInferenceAccelerators = elasticInferenceAccelerators
        self.enclaveOptions = enclaveOptions
        self.hibernationOptions = hibernationOptions
        self.iamInstanceProfile = iamInstanceProfile
        self.imageId = imageId
        self.instanceInitiatedShutdownBehavior = instanceInitiatedShutdownBehavior
        self.instanceMarketOptions = instanceMarketOptions
        self.instanceType = instanceType
        self.ipv6AddressCount = ipv6AddressCount
        self.ipv6Addresses = ipv6Addresses
        self.kernelId = kernelId
        self.keyName = keyName
        self.launchTemplate = launchTemplate
        self.licenseSpecifications = licenseSpecifications
        self.maintenanceOptions = maintenanceOptions
        self.maxCount = maxCount
        self.metadataOptions = metadataOptions
        self.minCount = minCount
        self.monitoring = monitoring
        self.networkInterfaces = networkInterfaces
        self.placement = placement
        self.privateDnsNameOptions = privateDnsNameOptions
        self.privateIpAddress = privateIpAddress
        self.ramdiskId = ramdiskId
        self.securityGroupIds = securityGroupIds
        self.securityGroups = securityGroups
        self.subnetId = subnetId
        self.tagSpecifications = tagSpecifications
        self.userData = userData
    }
}
