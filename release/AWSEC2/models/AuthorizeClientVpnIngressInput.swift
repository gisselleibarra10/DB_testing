// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct AuthorizeClientVpnIngressInput: Swift.Equatable {
    /// The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group. Required if AuthorizeAllGroups is false or not specified.
    public var accessGroupId: Swift.String?
    /// Indicates whether to grant access to all clients. Specify true to grant all clients who successfully establish a VPN connection access to the network. Must be set to true if AccessGroupId is not specified.
    public var authorizeAllGroups: Swift.Bool?
    /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [How to ensure idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
    public var clientToken: Swift.String?
    /// The ID of the Client VPN endpoint.
    /// This member is required.
    public var clientVpnEndpointId: Swift.String?
    /// A brief description of the authorization rule.
    public var description: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The IPv4 address range, in CIDR notation, of the network for which access is being authorized.
    /// This member is required.
    public var targetNetworkCidr: Swift.String?

    public init (
        accessGroupId: Swift.String? = nil,
        authorizeAllGroups: Swift.Bool? = nil,
        clientToken: Swift.String? = nil,
        clientVpnEndpointId: Swift.String? = nil,
        description: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        targetNetworkCidr: Swift.String? = nil
    )
    {
        self.accessGroupId = accessGroupId
        self.authorizeAllGroups = authorizeAllGroups
        self.clientToken = clientToken
        self.clientVpnEndpointId = clientVpnEndpointId
        self.description = description
        self.dryRun = dryRun
        self.targetNetworkCidr = targetNetworkCidr
    }
}
