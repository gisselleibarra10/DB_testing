// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AllocateAddressOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: AllocateAddressOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.allocationId = output.allocationId
            self.carrierIp = output.carrierIp
            self.customerOwnedIp = output.customerOwnedIp
            self.customerOwnedIpv4Pool = output.customerOwnedIpv4Pool
            self.domain = output.domain
            self.networkBorderGroup = output.networkBorderGroup
            self.publicIp = output.publicIp
            self.publicIpv4Pool = output.publicIpv4Pool
        } else {
            self.allocationId = nil
            self.carrierIp = nil
            self.customerOwnedIp = nil
            self.customerOwnedIpv4Pool = nil
            self.domain = nil
            self.networkBorderGroup = nil
            self.publicIp = nil
            self.publicIpv4Pool = nil
        }
    }
}
