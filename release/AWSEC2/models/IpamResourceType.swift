// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EC2ClientTypes {
    public enum IpamResourceType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case eip
        case ipv6Pool
        case publicIpv4Pool
        case subnet
        case vpc
        case sdkUnknown(Swift.String)

        public static var allCases: [IpamResourceType] {
            return [
                .eip,
                .ipv6Pool,
                .publicIpv4Pool,
                .subnet,
                .vpc,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .eip: return "eip"
            case .ipv6Pool: return "ipv6-pool"
            case .publicIpv4Pool: return "public-ipv4-pool"
            case .subnet: return "subnet"
            case .vpc: return "vpc"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = IpamResourceType(rawValue: rawValue) ?? IpamResourceType.sdkUnknown(rawValue)
        }
    }
}
