// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes {
    /// Describes a Spot Fleet request.
    public struct SpotFleetRequestConfig: Swift.Equatable {
        /// The progress of the Spot Fleet request. If there is an error, the status is error. After all requests are placed, the status is pending_fulfillment. If the size of the fleet is equal to or greater than its target capacity, the status is fulfilled. If the size of the fleet is decreased, the status is pending_termination while Spot Instances are terminating.
        public var activityStatus: EC2ClientTypes.ActivityStatus?
        /// The creation date and time of the request.
        public var createTime: ClientRuntime.Date?
        /// The configuration of the Spot Fleet request.
        public var spotFleetRequestConfig: EC2ClientTypes.SpotFleetRequestConfigData?
        /// The ID of the Spot Fleet request.
        public var spotFleetRequestId: Swift.String?
        /// The state of the Spot Fleet request.
        public var spotFleetRequestState: EC2ClientTypes.BatchState?
        /// The tags for a Spot Fleet resource.
        public var tags: [EC2ClientTypes.Tag]?

        public init (
            activityStatus: EC2ClientTypes.ActivityStatus? = nil,
            createTime: ClientRuntime.Date? = nil,
            spotFleetRequestConfig: EC2ClientTypes.SpotFleetRequestConfigData? = nil,
            spotFleetRequestId: Swift.String? = nil,
            spotFleetRequestState: EC2ClientTypes.BatchState? = nil,
            tags: [EC2ClientTypes.Tag]? = nil
        )
        {
            self.activityStatus = activityStatus
            self.createTime = createTime
            self.spotFleetRequestConfig = spotFleetRequestConfig
            self.spotFleetRequestId = spotFleetRequestId
            self.spotFleetRequestState = spotFleetRequestState
            self.tags = tags
        }
    }

}
