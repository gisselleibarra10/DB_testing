// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.TargetCapacitySpecification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultTargetCapacityType = "defaultTargetCapacityType"
        case onDemandTargetCapacity = "onDemandTargetCapacity"
        case spotTargetCapacity = "spotTargetCapacity"
        case targetCapacityUnitType = "targetCapacityUnitType"
        case totalTargetCapacity = "totalTargetCapacity"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let defaultTargetCapacityType = defaultTargetCapacityType {
            try container.encode(defaultTargetCapacityType, forKey: ClientRuntime.Key("DefaultTargetCapacityType"))
        }
        if let onDemandTargetCapacity = onDemandTargetCapacity {
            try container.encode(onDemandTargetCapacity, forKey: ClientRuntime.Key("OnDemandTargetCapacity"))
        }
        if let spotTargetCapacity = spotTargetCapacity {
            try container.encode(spotTargetCapacity, forKey: ClientRuntime.Key("SpotTargetCapacity"))
        }
        if let targetCapacityUnitType = targetCapacityUnitType {
            try container.encode(targetCapacityUnitType, forKey: ClientRuntime.Key("TargetCapacityUnitType"))
        }
        if let totalTargetCapacity = totalTargetCapacity {
            try container.encode(totalTargetCapacity, forKey: ClientRuntime.Key("TotalTargetCapacity"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalTargetCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalTargetCapacity)
        totalTargetCapacity = totalTargetCapacityDecoded
        let onDemandTargetCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .onDemandTargetCapacity)
        onDemandTargetCapacity = onDemandTargetCapacityDecoded
        let spotTargetCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .spotTargetCapacity)
        spotTargetCapacity = spotTargetCapacityDecoded
        let defaultTargetCapacityTypeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.DefaultTargetCapacityType.self, forKey: .defaultTargetCapacityType)
        defaultTargetCapacityType = defaultTargetCapacityTypeDecoded
        let targetCapacityUnitTypeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.TargetCapacityUnitType.self, forKey: .targetCapacityUnitType)
        targetCapacityUnitType = targetCapacityUnitTypeDecoded
    }
}
