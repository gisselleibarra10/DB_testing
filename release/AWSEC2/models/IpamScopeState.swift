// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EC2ClientTypes {
    public enum IpamScopeState: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case createComplete
        case createFailed
        case createInProgress
        case deleteComplete
        case deleteFailed
        case deleteInProgress
        case isolateComplete
        case isolateInProgress
        case modifyComplete
        case modifyFailed
        case modifyInProgress
        case restoreInProgress
        case sdkUnknown(Swift.String)

        public static var allCases: [IpamScopeState] {
            return [
                .createComplete,
                .createFailed,
                .createInProgress,
                .deleteComplete,
                .deleteFailed,
                .deleteInProgress,
                .isolateComplete,
                .isolateInProgress,
                .modifyComplete,
                .modifyFailed,
                .modifyInProgress,
                .restoreInProgress,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .createComplete: return "create-complete"
            case .createFailed: return "create-failed"
            case .createInProgress: return "create-in-progress"
            case .deleteComplete: return "delete-complete"
            case .deleteFailed: return "delete-failed"
            case .deleteInProgress: return "delete-in-progress"
            case .isolateComplete: return "isolate-complete"
            case .isolateInProgress: return "isolate-in-progress"
            case .modifyComplete: return "modify-complete"
            case .modifyFailed: return "modify-failed"
            case .modifyInProgress: return "modify-in-progress"
            case .restoreInProgress: return "restore-in-progress"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = IpamScopeState(rawValue: rawValue) ?? IpamScopeState.sdkUnknown(rawValue)
        }
    }
}
