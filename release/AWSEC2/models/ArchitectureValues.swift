// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EC2ClientTypes {
    public enum ArchitectureValues: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case arm64
        case arm64Mac
        case i386
        case x8664
        case x8664Mac
        case sdkUnknown(Swift.String)

        public static var allCases: [ArchitectureValues] {
            return [
                .arm64,
                .arm64Mac,
                .i386,
                .x8664,
                .x8664Mac,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .arm64: return "arm64"
            case .arm64Mac: return "arm64_mac"
            case .i386: return "i386"
            case .x8664: return "x86_64"
            case .x8664Mac: return "x86_64_mac"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ArchitectureValues(rawValue: rawValue) ?? ArchitectureValues.sdkUnknown(rawValue)
        }
    }
}
