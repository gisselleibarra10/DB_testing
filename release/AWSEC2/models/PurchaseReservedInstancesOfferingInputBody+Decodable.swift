// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PurchaseReservedInstancesOfferingInputBody: Swift.Equatable {
    let instanceCount: Swift.Int?
    let reservedInstancesOfferingId: Swift.String?
    let dryRun: Swift.Bool?
    let limitPrice: Ec2ClientTypes.ReservedInstanceLimitPrice?
    let purchaseTime: ClientRuntime.Date?
}

extension PurchaseReservedInstancesOfferingInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "dryRun"
        case instanceCount = "InstanceCount"
        case limitPrice = "limitPrice"
        case purchaseTime = "PurchaseTime"
        case reservedInstancesOfferingId = "ReservedInstancesOfferingId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .instanceCount)
        instanceCount = instanceCountDecoded
        let reservedInstancesOfferingIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reservedInstancesOfferingId)
        reservedInstancesOfferingId = reservedInstancesOfferingIdDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let limitPriceDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.ReservedInstanceLimitPrice.self, forKey: .limitPrice)
        limitPrice = limitPriceDecoded
        let purchaseTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .purchaseTime)
        var purchaseTimeBuffer:ClientRuntime.Date? = nil
        if let purchaseTimeDecoded = purchaseTimeDecoded {
            purchaseTimeBuffer = try ClientRuntime.TimestampWrapperDecoder.parseDateStringValue(purchaseTimeDecoded, format: .dateTime)
        }
        purchaseTime = purchaseTimeBuffer
    }
}
