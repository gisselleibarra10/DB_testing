// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateRouteInput: Swift.Equatable {
    /// The ID of the carrier gateway. You can only use this option when the VPC contains a subnet which is associated with a Wavelength Zone.
    public var carrierGatewayId: Swift.String?
    /// The Amazon Resource Name (ARN) of the core network.
    public var coreNetworkArn: Swift.String?
    /// The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match. We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18, we modify it to 100.68.0.0/18.
    public var destinationCidrBlock: Swift.String?
    /// The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.
    public var destinationIpv6CidrBlock: Swift.String?
    /// The ID of a prefix list used for the destination match.
    public var destinationPrefixListId: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// [IPv6 traffic only] The ID of an egress-only internet gateway.
    public var egressOnlyInternetGatewayId: Swift.String?
    /// The ID of an internet gateway or virtual private gateway attached to your VPC.
    public var gatewayId: Swift.String?
    /// The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.
    public var instanceId: Swift.String?
    /// The ID of the local gateway.
    public var localGatewayId: Swift.String?
    /// [IPv4 traffic only] The ID of a NAT gateway.
    public var natGatewayId: Swift.String?
    /// The ID of a network interface.
    public var networkInterfaceId: Swift.String?
    /// The ID of the route table for the route.
    /// This member is required.
    public var routeTableId: Swift.String?
    /// The ID of a transit gateway.
    public var transitGatewayId: Swift.String?
    /// The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.
    public var vpcEndpointId: Swift.String?
    /// The ID of a VPC peering connection.
    public var vpcPeeringConnectionId: Swift.String?

    public init (
        carrierGatewayId: Swift.String? = nil,
        coreNetworkArn: Swift.String? = nil,
        destinationCidrBlock: Swift.String? = nil,
        destinationIpv6CidrBlock: Swift.String? = nil,
        destinationPrefixListId: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        egressOnlyInternetGatewayId: Swift.String? = nil,
        gatewayId: Swift.String? = nil,
        instanceId: Swift.String? = nil,
        localGatewayId: Swift.String? = nil,
        natGatewayId: Swift.String? = nil,
        networkInterfaceId: Swift.String? = nil,
        routeTableId: Swift.String? = nil,
        transitGatewayId: Swift.String? = nil,
        vpcEndpointId: Swift.String? = nil,
        vpcPeeringConnectionId: Swift.String? = nil
    )
    {
        self.carrierGatewayId = carrierGatewayId
        self.coreNetworkArn = coreNetworkArn
        self.destinationCidrBlock = destinationCidrBlock
        self.destinationIpv6CidrBlock = destinationIpv6CidrBlock
        self.destinationPrefixListId = destinationPrefixListId
        self.dryRun = dryRun
        self.egressOnlyInternetGatewayId = egressOnlyInternetGatewayId
        self.gatewayId = gatewayId
        self.instanceId = instanceId
        self.localGatewayId = localGatewayId
        self.natGatewayId = natGatewayId
        self.networkInterfaceId = networkInterfaceId
        self.routeTableId = routeTableId
        self.transitGatewayId = transitGatewayId
        self.vpcEndpointId = vpcEndpointId
        self.vpcPeeringConnectionId = vpcPeeringConnectionId
    }
}
