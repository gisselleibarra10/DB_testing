// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.TransitGatewayAttachmentPropagation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case state = "state"
        case transitGatewayRouteTableId = "transitGatewayRouteTableId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let state = state {
            try container.encode(state, forKey: ClientRuntime.Key("State"))
        }
        if let transitGatewayRouteTableId = transitGatewayRouteTableId {
            try container.encode(transitGatewayRouteTableId, forKey: ClientRuntime.Key("TransitGatewayRouteTableId"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transitGatewayRouteTableIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transitGatewayRouteTableId)
        transitGatewayRouteTableId = transitGatewayRouteTableIdDecoded
        let stateDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.TransitGatewayPropagationState.self, forKey: .state)
        state = stateDecoded
    }
}
