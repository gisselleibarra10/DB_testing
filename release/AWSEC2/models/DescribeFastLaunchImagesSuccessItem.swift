// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes {
    /// Describe details about a fast-launch enabled Windows image that meets the requested criteria. Criteria are defined by the DescribeFastLaunchImages action filters.
    public struct DescribeFastLaunchImagesSuccessItem: Swift.Equatable {
        /// The image ID that identifies the fast-launch enabled Windows image.
        public var imageId: Swift.String?
        /// The launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances from pre-provisioned snapshots.
        public var launchTemplate: EC2ClientTypes.FastLaunchLaunchTemplateSpecificationResponse?
        /// The maximum number of parallel instances that are launched for creating resources.
        public var maxParallelLaunches: Swift.Int?
        /// The owner ID for the fast-launch enabled Windows AMI.
        public var ownerId: Swift.String?
        /// The resource type that is used for pre-provisioning the Windows AMI. Supported values include: snapshot.
        public var resourceType: EC2ClientTypes.FastLaunchResourceType?
        /// A group of parameters that are used for pre-provisioning the associated Windows AMI using snapshots.
        public var snapshotConfiguration: EC2ClientTypes.FastLaunchSnapshotConfigurationResponse?
        /// The current state of faster launching for the specified Windows AMI.
        public var state: EC2ClientTypes.FastLaunchStateCode?
        /// The reason that faster launching for the Windows AMI changed to the current state.
        public var stateTransitionReason: Swift.String?
        /// The time that faster launching for the Windows AMI changed to the current state.
        public var stateTransitionTime: ClientRuntime.Date?

        public init (
            imageId: Swift.String? = nil,
            launchTemplate: EC2ClientTypes.FastLaunchLaunchTemplateSpecificationResponse? = nil,
            maxParallelLaunches: Swift.Int? = nil,
            ownerId: Swift.String? = nil,
            resourceType: EC2ClientTypes.FastLaunchResourceType? = nil,
            snapshotConfiguration: EC2ClientTypes.FastLaunchSnapshotConfigurationResponse? = nil,
            state: EC2ClientTypes.FastLaunchStateCode? = nil,
            stateTransitionReason: Swift.String? = nil,
            stateTransitionTime: ClientRuntime.Date? = nil
        )
        {
            self.imageId = imageId
            self.launchTemplate = launchTemplate
            self.maxParallelLaunches = maxParallelLaunches
            self.ownerId = ownerId
            self.resourceType = resourceType
            self.snapshotConfiguration = snapshotConfiguration
            self.state = state
            self.stateTransitionReason = stateTransitionReason
            self.stateTransitionTime = stateTransitionTime
        }
    }

}
