// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.AddressTransfer: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addressTransferStatus = "addressTransferStatus"
        case allocationId = "allocationId"
        case publicIp = "publicIp"
        case transferAccountId = "transferAccountId"
        case transferOfferAcceptedTimestamp = "transferOfferAcceptedTimestamp"
        case transferOfferExpirationTimestamp = "transferOfferExpirationTimestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let addressTransferStatus = addressTransferStatus {
            try container.encode(addressTransferStatus, forKey: ClientRuntime.Key("AddressTransferStatus"))
        }
        if let allocationId = allocationId {
            try container.encode(allocationId, forKey: ClientRuntime.Key("AllocationId"))
        }
        if let publicIp = publicIp {
            try container.encode(publicIp, forKey: ClientRuntime.Key("PublicIp"))
        }
        if let transferAccountId = transferAccountId {
            try container.encode(transferAccountId, forKey: ClientRuntime.Key("TransferAccountId"))
        }
        if let transferOfferAcceptedTimestamp = transferOfferAcceptedTimestamp {
            try container.encodeTimestamp(transferOfferAcceptedTimestamp, format: .dateTime, forKey: ClientRuntime.Key("TransferOfferAcceptedTimestamp"))
        }
        if let transferOfferExpirationTimestamp = transferOfferExpirationTimestamp {
            try container.encodeTimestamp(transferOfferExpirationTimestamp, format: .dateTime, forKey: ClientRuntime.Key("TransferOfferExpirationTimestamp"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let publicIpDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publicIp)
        publicIp = publicIpDecoded
        let allocationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .allocationId)
        allocationId = allocationIdDecoded
        let transferAccountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transferAccountId)
        transferAccountId = transferAccountIdDecoded
        let transferOfferExpirationTimestampDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .transferOfferExpirationTimestamp)
        transferOfferExpirationTimestamp = transferOfferExpirationTimestampDecoded
        let transferOfferAcceptedTimestampDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .transferOfferAcceptedTimestamp)
        transferOfferAcceptedTimestamp = transferOfferAcceptedTimestampDecoded
        let addressTransferStatusDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.AddressTransferStatus.self, forKey: .addressTransferStatus)
        addressTransferStatus = addressTransferStatusDecoded
    }
}
