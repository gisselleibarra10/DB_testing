// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.SnapshotRecycleBinInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "description"
        case recycleBinEnterTime = "recycleBinEnterTime"
        case recycleBinExitTime = "recycleBinExitTime"
        case snapshotId = "snapshotId"
        case volumeId = "volumeId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let description = description {
            try container.encode(description, forKey: ClientRuntime.Key("Description"))
        }
        if let recycleBinEnterTime = recycleBinEnterTime {
            try container.encodeTimestamp(recycleBinEnterTime, format: .dateTime, forKey: ClientRuntime.Key("RecycleBinEnterTime"))
        }
        if let recycleBinExitTime = recycleBinExitTime {
            try container.encodeTimestamp(recycleBinExitTime, format: .dateTime, forKey: ClientRuntime.Key("RecycleBinExitTime"))
        }
        if let snapshotId = snapshotId {
            try container.encode(snapshotId, forKey: ClientRuntime.Key("SnapshotId"))
        }
        if let volumeId = volumeId {
            try container.encode(volumeId, forKey: ClientRuntime.Key("VolumeId"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let snapshotIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snapshotId)
        snapshotId = snapshotIdDecoded
        let recycleBinEnterTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .recycleBinEnterTime)
        recycleBinEnterTime = recycleBinEnterTimeDecoded
        let recycleBinExitTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .recycleBinExitTime)
        recycleBinExitTime = recycleBinExitTimeDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let volumeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeId)
        volumeId = volumeIdDecoded
    }
}
