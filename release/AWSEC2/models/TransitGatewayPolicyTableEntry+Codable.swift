// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.TransitGatewayPolicyTableEntry: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case policyRule = "policyRule"
        case policyRuleNumber = "policyRuleNumber"
        case targetRouteTableId = "targetRouteTableId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let policyRule = policyRule {
            try container.encode(policyRule, forKey: ClientRuntime.Key("PolicyRule"))
        }
        if let policyRuleNumber = policyRuleNumber {
            try container.encode(policyRuleNumber, forKey: ClientRuntime.Key("PolicyRuleNumber"))
        }
        if let targetRouteTableId = targetRouteTableId {
            try container.encode(targetRouteTableId, forKey: ClientRuntime.Key("TargetRouteTableId"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyRuleNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyRuleNumber)
        policyRuleNumber = policyRuleNumberDecoded
        let policyRuleDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.TransitGatewayPolicyRule.self, forKey: .policyRule)
        policyRule = policyRuleDecoded
        let targetRouteTableIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetRouteTableId)
        targetRouteTableId = targetRouteTableIdDecoded
    }
}
