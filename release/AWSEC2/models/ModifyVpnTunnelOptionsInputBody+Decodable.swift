// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyVpnTunnelOptionsInputBody: Swift.Equatable {
    let vpnConnectionId: Swift.String?
    let vpnTunnelOutsideIpAddress: Swift.String?
    let tunnelOptions: EC2ClientTypes.ModifyVpnTunnelOptionsSpecification?
    let dryRun: Swift.Bool?
}

extension ModifyVpnTunnelOptionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "DryRun"
        case tunnelOptions = "TunnelOptions"
        case vpnConnectionId = "VpnConnectionId"
        case vpnTunnelOutsideIpAddress = "VpnTunnelOutsideIpAddress"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vpnConnectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpnConnectionId)
        vpnConnectionId = vpnConnectionIdDecoded
        let vpnTunnelOutsideIpAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpnTunnelOutsideIpAddress)
        vpnTunnelOutsideIpAddress = vpnTunnelOutsideIpAddressDecoded
        let tunnelOptionsDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.ModifyVpnTunnelOptionsSpecification.self, forKey: .tunnelOptions)
        tunnelOptions = tunnelOptionsDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
