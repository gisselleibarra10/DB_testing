// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.StoreImageTaskResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case amiId = "amiId"
        case bucket = "bucket"
        case progressPercentage = "progressPercentage"
        case s3objectKey = "s3objectKey"
        case storeTaskFailureReason = "storeTaskFailureReason"
        case storeTaskState = "storeTaskState"
        case taskStartTime = "taskStartTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let amiId = amiId {
            try container.encode(amiId, forKey: ClientRuntime.Key("AmiId"))
        }
        if let bucket = bucket {
            try container.encode(bucket, forKey: ClientRuntime.Key("Bucket"))
        }
        if let progressPercentage = progressPercentage {
            try container.encode(progressPercentage, forKey: ClientRuntime.Key("ProgressPercentage"))
        }
        if let s3objectKey = s3objectKey {
            try container.encode(s3objectKey, forKey: ClientRuntime.Key("S3objectKey"))
        }
        if let storeTaskFailureReason = storeTaskFailureReason {
            try container.encode(storeTaskFailureReason, forKey: ClientRuntime.Key("StoreTaskFailureReason"))
        }
        if let storeTaskState = storeTaskState {
            try container.encode(storeTaskState, forKey: ClientRuntime.Key("StoreTaskState"))
        }
        if let taskStartTime = taskStartTime {
            try container.encodeTimestamp(taskStartTime, format: .dateTime, forKey: ClientRuntime.Key("TaskStartTime"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let amiIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .amiId)
        amiId = amiIdDecoded
        let taskStartTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .taskStartTime)
        taskStartTime = taskStartTimeDecoded
        let bucketDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bucket)
        bucket = bucketDecoded
        let s3objectKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3objectKey)
        s3objectKey = s3objectKeyDecoded
        let progressPercentageDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .progressPercentage)
        progressPercentage = progressPercentageDecoded
        let storeTaskStateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .storeTaskState)
        storeTaskState = storeTaskStateDecoded
        let storeTaskFailureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .storeTaskFailureReason)
        storeTaskFailureReason = storeTaskFailureReasonDecoded
    }
}
