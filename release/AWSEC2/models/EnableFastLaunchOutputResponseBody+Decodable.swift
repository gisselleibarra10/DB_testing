// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EnableFastLaunchOutputResponseBody: Swift.Equatable {
    let imageId: Swift.String?
    let resourceType: EC2ClientTypes.FastLaunchResourceType?
    let snapshotConfiguration: EC2ClientTypes.FastLaunchSnapshotConfigurationResponse?
    let launchTemplate: EC2ClientTypes.FastLaunchLaunchTemplateSpecificationResponse?
    let maxParallelLaunches: Swift.Int?
    let ownerId: Swift.String?
    let state: EC2ClientTypes.FastLaunchStateCode?
    let stateTransitionReason: Swift.String?
    let stateTransitionTime: ClientRuntime.Date?
}

extension EnableFastLaunchOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case imageId = "imageId"
        case launchTemplate = "launchTemplate"
        case maxParallelLaunches = "maxParallelLaunches"
        case ownerId = "ownerId"
        case resourceType = "resourceType"
        case snapshotConfiguration = "snapshotConfiguration"
        case state = "state"
        case stateTransitionReason = "stateTransitionReason"
        case stateTransitionTime = "stateTransitionTime"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imageId)
        imageId = imageIdDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.FastLaunchResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let snapshotConfigurationDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.FastLaunchSnapshotConfigurationResponse.self, forKey: .snapshotConfiguration)
        snapshotConfiguration = snapshotConfigurationDecoded
        let launchTemplateDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.FastLaunchLaunchTemplateSpecificationResponse.self, forKey: .launchTemplate)
        launchTemplate = launchTemplateDecoded
        let maxParallelLaunchesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxParallelLaunches)
        maxParallelLaunches = maxParallelLaunchesDecoded
        let ownerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ownerId)
        ownerId = ownerIdDecoded
        let stateDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.FastLaunchStateCode.self, forKey: .state)
        state = stateDecoded
        let stateTransitionReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stateTransitionReason)
        stateTransitionReason = stateTransitionReasonDecoded
        let stateTransitionTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .stateTransitionTime)
        stateTransitionTime = stateTransitionTimeDecoded
    }
}
