// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.InstanceEventWindowTimeRangeRequest: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case endHour = "EndHour"
        case endWeekDay = "EndWeekDay"
        case startHour = "StartHour"
        case startWeekDay = "StartWeekDay"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let endHour = endHour {
            try container.encode(endHour, forKey: ClientRuntime.Key("EndHour"))
        }
        if let endWeekDay = endWeekDay {
            try container.encode(endWeekDay, forKey: ClientRuntime.Key("EndWeekDay"))
        }
        if let startHour = startHour {
            try container.encode(startHour, forKey: ClientRuntime.Key("StartHour"))
        }
        if let startWeekDay = startWeekDay {
            try container.encode(startWeekDay, forKey: ClientRuntime.Key("StartWeekDay"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startWeekDayDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.WeekDay.self, forKey: .startWeekDay)
        startWeekDay = startWeekDayDecoded
        let startHourDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .startHour)
        startHour = startHourDecoded
        let endWeekDayDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.WeekDay.self, forKey: .endWeekDay)
        endWeekDay = endWeekDayDecoded
        let endHourDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .endHour)
        endHour = endHourDecoded
    }
}
