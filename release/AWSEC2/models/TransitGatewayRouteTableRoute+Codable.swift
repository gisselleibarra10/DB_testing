// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.TransitGatewayRouteTableRoute: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attachmentId = "attachmentId"
        case destinationCidr = "destinationCidr"
        case prefixListId = "prefixListId"
        case resourceId = "resourceId"
        case resourceType = "resourceType"
        case routeOrigin = "routeOrigin"
        case state = "state"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let attachmentId = attachmentId {
            try container.encode(attachmentId, forKey: ClientRuntime.Key("AttachmentId"))
        }
        if let destinationCidr = destinationCidr {
            try container.encode(destinationCidr, forKey: ClientRuntime.Key("DestinationCidr"))
        }
        if let prefixListId = prefixListId {
            try container.encode(prefixListId, forKey: ClientRuntime.Key("PrefixListId"))
        }
        if let resourceId = resourceId {
            try container.encode(resourceId, forKey: ClientRuntime.Key("ResourceId"))
        }
        if let resourceType = resourceType {
            try container.encode(resourceType, forKey: ClientRuntime.Key("ResourceType"))
        }
        if let routeOrigin = routeOrigin {
            try container.encode(routeOrigin, forKey: ClientRuntime.Key("RouteOrigin"))
        }
        if let state = state {
            try container.encode(state, forKey: ClientRuntime.Key("State"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationCidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationCidr)
        destinationCidr = destinationCidrDecoded
        let stateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .state)
        state = stateDecoded
        let routeOriginDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .routeOrigin)
        routeOrigin = routeOriginDecoded
        let prefixListIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .prefixListId)
        prefixListId = prefixListIdDecoded
        let attachmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attachmentId)
        attachmentId = attachmentIdDecoded
        let resourceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
    }
}
