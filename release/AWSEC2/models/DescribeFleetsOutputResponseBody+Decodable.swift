// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFleetsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let fleets: [EC2ClientTypes.FleetData]?
}

extension DescribeFleetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fleets = "fleetSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.fleets) {
            struct KeyVal0{struct item{}}
            let fleetsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .fleets)
            if let fleetsWrappedContainer = fleetsWrappedContainer {
                let fleetsContainer = try fleetsWrappedContainer.decodeIfPresent([EC2ClientTypes.FleetData].self, forKey: .member)
                var fleetsBuffer:[EC2ClientTypes.FleetData]? = nil
                if let fleetsContainer = fleetsContainer {
                    fleetsBuffer = [EC2ClientTypes.FleetData]()
                    for structureContainer0 in fleetsContainer {
                        fleetsBuffer?.append(structureContainer0)
                    }
                }
                fleets = fleetsBuffer
            } else {
                fleets = []
            }
        } else {
            fleets = nil
        }
    }
}
