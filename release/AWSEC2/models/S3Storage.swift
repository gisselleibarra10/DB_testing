// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes {
    /// Describes the storage parameters for Amazon S3 and Amazon S3 buckets for an instance store-backed AMI.
    public struct S3Storage: Swift.Equatable {
        /// The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in [Best practices for managing Amazon Web Services access keys](https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html).
        public var awsAccessKeyId: Swift.String?
        /// The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.
        public var bucket: Swift.String?
        /// The beginning of the file name of the AMI.
        public var `prefix`: Swift.String?
        /// An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.
        public var uploadPolicy: ClientRuntime.Data?
        /// The signature of the JSON document.
        public var uploadPolicySignature: Swift.String?

        public init (
            awsAccessKeyId: Swift.String? = nil,
            bucket: Swift.String? = nil,
            `prefix`: Swift.String? = nil,
            uploadPolicy: ClientRuntime.Data? = nil,
            uploadPolicySignature: Swift.String? = nil
        )
        {
            self.awsAccessKeyId = awsAccessKeyId
            self.bucket = bucket
            self.`prefix` = `prefix`
            self.uploadPolicy = uploadPolicy
            self.uploadPolicySignature = uploadPolicySignature
        }
    }

}
