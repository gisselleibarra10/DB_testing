// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AttachNetworkInterfaceInputBody: Swift.Equatable {
    let deviceIndex: Swift.Int?
    let dryRun: Swift.Bool?
    let instanceId: Swift.String?
    let networkInterfaceId: Swift.String?
    let networkCardIndex: Swift.Int?
    let enaSrdSpecification: EC2ClientTypes.EnaSrdSpecification?
}

extension AttachNetworkInterfaceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceIndex = "deviceIndex"
        case dryRun = "dryRun"
        case enaSrdSpecification = "EnaSrdSpecification"
        case instanceId = "instanceId"
        case networkCardIndex = "NetworkCardIndex"
        case networkInterfaceId = "networkInterfaceId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .deviceIndex)
        deviceIndex = deviceIndexDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let instanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let networkInterfaceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkInterfaceId)
        networkInterfaceId = networkInterfaceIdDecoded
        let networkCardIndexDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .networkCardIndex)
        networkCardIndex = networkCardIndexDecoded
        let enaSrdSpecificationDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.EnaSrdSpecification.self, forKey: .enaSrdSpecification)
        enaSrdSpecification = enaSrdSpecificationDecoded
    }
}
