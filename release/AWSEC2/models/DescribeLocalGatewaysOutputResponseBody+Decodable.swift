// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLocalGatewaysOutputResponseBody: Swift.Equatable {
    let localGateways: [EC2ClientTypes.LocalGateway]?
    let nextToken: Swift.String?
}

extension DescribeLocalGatewaysOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case localGateways = "localGatewaySet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.localGateways) {
            struct KeyVal0{struct item{}}
            let localGatewaysWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .localGateways)
            if let localGatewaysWrappedContainer = localGatewaysWrappedContainer {
                let localGatewaysContainer = try localGatewaysWrappedContainer.decodeIfPresent([EC2ClientTypes.LocalGateway].self, forKey: .member)
                var localGatewaysBuffer:[EC2ClientTypes.LocalGateway]? = nil
                if let localGatewaysContainer = localGatewaysContainer {
                    localGatewaysBuffer = [EC2ClientTypes.LocalGateway]()
                    for structureContainer0 in localGatewaysContainer {
                        localGatewaysBuffer?.append(structureContainer0)
                    }
                }
                localGateways = localGatewaysBuffer
            } else {
                localGateways = []
            }
        } else {
            localGateways = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
