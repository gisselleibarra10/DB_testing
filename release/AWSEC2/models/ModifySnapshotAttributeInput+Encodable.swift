// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifySnapshotAttributeInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let attribute = attribute {
            try container.encode(attribute, forKey: ClientRuntime.Key("Attribute"))
        }
        if let createVolumePermission = createVolumePermission {
            try container.encode(createVolumePermission, forKey: ClientRuntime.Key("CreateVolumePermission"))
        }
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let groupNames = groupNames {
            if !groupNames.isEmpty {
                for (index0, securitygroupname0) in groupNames.enumerated() {
                    var groupNamesContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("UserGroup.\(index0.advanced(by: 1))"))
                    try groupNamesContainer0.encode(securitygroupname0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var groupNamesContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("UserGroup"))
                try groupNamesContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        if let operationType = operationType {
            try container.encode(operationType, forKey: ClientRuntime.Key("OperationType"))
        }
        if let snapshotId = snapshotId {
            try container.encode(snapshotId, forKey: ClientRuntime.Key("SnapshotId"))
        }
        if let userIds = userIds {
            if !userIds.isEmpty {
                for (index0, string0) in userIds.enumerated() {
                    var userIdsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("UserId.\(index0.advanced(by: 1))"))
                    try userIdsContainer0.encode(string0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var userIdsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("UserId"))
                try userIdsContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        try container.encode("ModifySnapshotAttribute", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
