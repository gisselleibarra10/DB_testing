// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFlowLogsOutputResponseBody: Swift.Equatable {
    let flowLogs: [EC2ClientTypes.FlowLog]?
    let nextToken: Swift.String?
}

extension DescribeFlowLogsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case flowLogs = "flowLogSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.flowLogs) {
            struct KeyVal0{struct item{}}
            let flowLogsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .flowLogs)
            if let flowLogsWrappedContainer = flowLogsWrappedContainer {
                let flowLogsContainer = try flowLogsWrappedContainer.decodeIfPresent([EC2ClientTypes.FlowLog].self, forKey: .member)
                var flowLogsBuffer:[EC2ClientTypes.FlowLog]? = nil
                if let flowLogsContainer = flowLogsContainer {
                    flowLogsBuffer = [EC2ClientTypes.FlowLog]()
                    for structureContainer0 in flowLogsContainer {
                        flowLogsBuffer?.append(structureContainer0)
                    }
                }
                flowLogs = flowLogsBuffer
            } else {
                flowLogs = []
            }
        } else {
            flowLogs = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
