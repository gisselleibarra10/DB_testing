// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSpotFleetRequestsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let spotFleetRequestConfigs: [Ec2ClientTypes.SpotFleetRequestConfig]?
}

extension DescribeSpotFleetRequestsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case spotFleetRequestConfigs = "spotFleetRequestConfigSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.spotFleetRequestConfigs) {
            struct KeyVal0{struct item{}}
            let spotFleetRequestConfigsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .spotFleetRequestConfigs)
            if let spotFleetRequestConfigsWrappedContainer = spotFleetRequestConfigsWrappedContainer {
                let spotFleetRequestConfigsContainer = try spotFleetRequestConfigsWrappedContainer.decodeIfPresent([Ec2ClientTypes.SpotFleetRequestConfig].self, forKey: .member)
                var spotFleetRequestConfigsBuffer:[Ec2ClientTypes.SpotFleetRequestConfig]? = nil
                if let spotFleetRequestConfigsContainer = spotFleetRequestConfigsContainer {
                    spotFleetRequestConfigsBuffer = [Ec2ClientTypes.SpotFleetRequestConfig]()
                    for structureContainer0 in spotFleetRequestConfigsContainer {
                        spotFleetRequestConfigsBuffer?.append(structureContainer0)
                    }
                }
                spotFleetRequestConfigs = spotFleetRequestConfigsBuffer
            } else {
                spotFleetRequestConfigs = []
            }
        } else {
            spotFleetRequestConfigs = nil
        }
    }
}
