// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// Describes an Elastic IP address, or a carrier IP address.
    public struct Address: Swift.Equatable {
        /// The ID representing the allocation of the address for use with EC2-VPC.
        public var allocationId: Swift.String?
        /// The ID representing the association of the address with an instance in a VPC.
        public var associationId: Swift.String?
        /// The carrier IP address associated. This option is only available for network interfaces which reside in a subnet in a Wavelength Zone (for example an EC2 instance).
        public var carrierIp: Swift.String?
        /// The customer-owned IP address.
        public var customerOwnedIp: Swift.String?
        /// The ID of the customer-owned address pool.
        public var customerOwnedIpv4Pool: Swift.String?
        /// Indicates whether this Elastic IP address is for use with instances in EC2-Classic (standard) or instances in a VPC (vpc).
        public var domain: Ec2ClientTypes.DomainType?
        /// The ID of the instance that the address is associated with (if any).
        public var instanceId: Swift.String?
        /// The name of the unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.
        public var networkBorderGroup: Swift.String?
        /// The ID of the network interface.
        public var networkInterfaceId: Swift.String?
        /// The ID of the Amazon Web Services account that owns the network interface.
        public var networkInterfaceOwnerId: Swift.String?
        /// The private IP address associated with the Elastic IP address.
        public var privateIpAddress: Swift.String?
        /// The Elastic IP address.
        public var publicIp: Swift.String?
        /// The ID of an address pool.
        public var publicIpv4Pool: Swift.String?
        /// Any tags assigned to the Elastic IP address.
        public var tags: [Ec2ClientTypes.Tag]?

        public init (
            allocationId: Swift.String? = nil,
            associationId: Swift.String? = nil,
            carrierIp: Swift.String? = nil,
            customerOwnedIp: Swift.String? = nil,
            customerOwnedIpv4Pool: Swift.String? = nil,
            domain: Ec2ClientTypes.DomainType? = nil,
            instanceId: Swift.String? = nil,
            networkBorderGroup: Swift.String? = nil,
            networkInterfaceId: Swift.String? = nil,
            networkInterfaceOwnerId: Swift.String? = nil,
            privateIpAddress: Swift.String? = nil,
            publicIp: Swift.String? = nil,
            publicIpv4Pool: Swift.String? = nil,
            tags: [Ec2ClientTypes.Tag]? = nil
        )
        {
            self.allocationId = allocationId
            self.associationId = associationId
            self.carrierIp = carrierIp
            self.customerOwnedIp = customerOwnedIp
            self.customerOwnedIpv4Pool = customerOwnedIpv4Pool
            self.domain = domain
            self.instanceId = instanceId
            self.networkBorderGroup = networkBorderGroup
            self.networkInterfaceId = networkInterfaceId
            self.networkInterfaceOwnerId = networkInterfaceOwnerId
            self.privateIpAddress = privateIpAddress
            self.publicIp = publicIp
            self.publicIpv4Pool = publicIpv4Pool
            self.tags = tags
        }
    }

}
