// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MonitorInstancesInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let instanceIds = instanceIds {
            if !instanceIds.isEmpty {
                for (index0, instanceid0) in instanceIds.enumerated() {
                    var instanceIdsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("InstanceId.\(index0.advanced(by: 1))"))
                    try instanceIdsContainer0.encode(instanceid0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var instanceIdsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("InstanceId"))
                try instanceIdsContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        try container.encode("MonitorInstances", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
