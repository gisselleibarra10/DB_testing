// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifyFleetInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let context = context {
            try container.encode(context, forKey: ClientRuntime.Key("Context"))
        }
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let excessCapacityTerminationPolicy = excessCapacityTerminationPolicy {
            try container.encode(excessCapacityTerminationPolicy, forKey: ClientRuntime.Key("ExcessCapacityTerminationPolicy"))
        }
        if let fleetId = fleetId {
            try container.encode(fleetId, forKey: ClientRuntime.Key("FleetId"))
        }
        if let launchTemplateConfigs = launchTemplateConfigs {
            if !launchTemplateConfigs.isEmpty {
                for (index0, fleetlaunchtemplateconfigrequest0) in launchTemplateConfigs.enumerated() {
                    var launchTemplateConfigsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("LaunchTemplateConfig.\(index0.advanced(by: 1))"))
                    try launchTemplateConfigsContainer0.encode(fleetlaunchtemplateconfigrequest0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var launchTemplateConfigsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("LaunchTemplateConfig"))
                try launchTemplateConfigsContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        if let targetCapacitySpecification = targetCapacitySpecification {
            try container.encode(targetCapacitySpecification, forKey: ClientRuntime.Key("TargetCapacitySpecification"))
        }
        try container.encode("ModifyFleet", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
