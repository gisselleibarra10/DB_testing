// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyPrivateDnsNameOptionsInputBody: Swift.Equatable {
    let dryRun: Swift.Bool?
    let instanceId: Swift.String?
    let privateDnsHostnameType: EC2ClientTypes.HostnameType?
    let enableResourceNameDnsARecord: Swift.Bool?
    let enableResourceNameDnsAAAARecord: Swift.Bool?
}

extension ModifyPrivateDnsNameOptionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "DryRun"
        case enableResourceNameDnsAAAARecord = "EnableResourceNameDnsAAAARecord"
        case enableResourceNameDnsARecord = "EnableResourceNameDnsARecord"
        case instanceId = "InstanceId"
        case privateDnsHostnameType = "PrivateDnsHostnameType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let instanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let privateDnsHostnameTypeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.HostnameType.self, forKey: .privateDnsHostnameType)
        privateDnsHostnameType = privateDnsHostnameTypeDecoded
        let enableResourceNameDnsARecordDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableResourceNameDnsARecord)
        enableResourceNameDnsARecord = enableResourceNameDnsARecordDecoded
        let enableResourceNameDnsAAAARecordDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableResourceNameDnsAAAARecord)
        enableResourceNameDnsAAAARecord = enableResourceNameDnsAAAARecordDecoded
    }
}
