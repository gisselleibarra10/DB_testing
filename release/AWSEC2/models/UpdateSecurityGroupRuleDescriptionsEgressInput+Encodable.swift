// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateSecurityGroupRuleDescriptionsEgressInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let groupId = groupId {
            try container.encode(groupId, forKey: ClientRuntime.Key("GroupId"))
        }
        if let groupName = groupName {
            try container.encode(groupName, forKey: ClientRuntime.Key("GroupName"))
        }
        if let ipPermissions = ipPermissions {
            if !ipPermissions.isEmpty {
                for (index0, ippermission0) in ipPermissions.enumerated() {
                    var ipPermissionsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("IpPermissions.\(index0.advanced(by: 1))"))
                    try ipPermissionsContainer0.encode(ippermission0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var ipPermissionsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("IpPermissions"))
                try ipPermissionsContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        if let securityGroupRuleDescriptions = securityGroupRuleDescriptions {
            if !securityGroupRuleDescriptions.isEmpty {
                for (index0, securitygroupruledescription0) in securityGroupRuleDescriptions.enumerated() {
                    var securityGroupRuleDescriptionsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("SecurityGroupRuleDescription.\(index0.advanced(by: 1))"))
                    try securityGroupRuleDescriptionsContainer0.encode(securitygroupruledescription0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var securityGroupRuleDescriptionsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("SecurityGroupRuleDescription"))
                try securityGroupRuleDescriptionsContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        try container.encode("UpdateSecurityGroupRuleDescriptionsEgress", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
