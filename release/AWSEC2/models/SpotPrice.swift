// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes {
    /// The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price. If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify this parameter.
    public struct SpotPrice: Swift.Equatable {
        /// The Availability Zone.
        public var availabilityZone: Swift.String?
        /// The instance type.
        public var instanceType: Ec2ClientTypes.InstanceType?
        /// A general description of the AMI.
        public var productDescription: Ec2ClientTypes.RIProductDescription?
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price. If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify this parameter.
        public var spotPrice: Swift.String?
        /// The date and time the request was created, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ).
        public var timestamp: ClientRuntime.Date?

        public init (
            availabilityZone: Swift.String? = nil,
            instanceType: Ec2ClientTypes.InstanceType? = nil,
            productDescription: Ec2ClientTypes.RIProductDescription? = nil,
            spotPrice: Swift.String? = nil,
            timestamp: ClientRuntime.Date? = nil
        )
        {
            self.availabilityZone = availabilityZone
            self.instanceType = instanceType
            self.productDescription = productDescription
            self.spotPrice = spotPrice
            self.timestamp = timestamp
        }
    }

}
