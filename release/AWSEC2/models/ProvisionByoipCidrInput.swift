// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ProvisionByoipCidrInput: Swift.Equatable {
    /// The public IPv4 or IPv6 address range, in CIDR notation. The most specific IPv4 prefix that you can specify is /24. The most specific IPv6 prefix you can specify is /56. The address range cannot overlap with another address range that you've brought to this or another Region.
    /// This member is required.
    public var cidr: Swift.String?
    /// A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP.
    public var cidrAuthorizationContext: Ec2ClientTypes.CidrAuthorizationContext?
    /// A description for the address range and the address pool.
    public var description: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// Reserved.
    public var multiRegion: Swift.Bool?
    /// The tags to apply to the address pool.
    public var poolTagSpecifications: [Ec2ClientTypes.TagSpecification]?
    /// (IPv6 only) Indicate whether the address range will be publicly advertised to the internet. Default: true
    public var publiclyAdvertisable: Swift.Bool?

    public init (
        cidr: Swift.String? = nil,
        cidrAuthorizationContext: Ec2ClientTypes.CidrAuthorizationContext? = nil,
        description: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        multiRegion: Swift.Bool? = nil,
        poolTagSpecifications: [Ec2ClientTypes.TagSpecification]? = nil,
        publiclyAdvertisable: Swift.Bool? = nil
    )
    {
        self.cidr = cidr
        self.cidrAuthorizationContext = cidrAuthorizationContext
        self.description = description
        self.dryRun = dryRun
        self.multiRegion = multiRegion
        self.poolTagSpecifications = poolTagSpecifications
        self.publiclyAdvertisable = publiclyAdvertisable
    }
}
