// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTransitGatewayPeeringAttachmentsOutputResponseBody: Swift.Equatable {
    let transitGatewayPeeringAttachments: [Ec2ClientTypes.TransitGatewayPeeringAttachment]?
    let nextToken: Swift.String?
}

extension DescribeTransitGatewayPeeringAttachmentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case transitGatewayPeeringAttachments = "transitGatewayPeeringAttachments"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.transitGatewayPeeringAttachments) {
            struct KeyVal0{struct item{}}
            let transitGatewayPeeringAttachmentsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .transitGatewayPeeringAttachments)
            if let transitGatewayPeeringAttachmentsWrappedContainer = transitGatewayPeeringAttachmentsWrappedContainer {
                let transitGatewayPeeringAttachmentsContainer = try transitGatewayPeeringAttachmentsWrappedContainer.decodeIfPresent([Ec2ClientTypes.TransitGatewayPeeringAttachment].self, forKey: .member)
                var transitGatewayPeeringAttachmentsBuffer:[Ec2ClientTypes.TransitGatewayPeeringAttachment]? = nil
                if let transitGatewayPeeringAttachmentsContainer = transitGatewayPeeringAttachmentsContainer {
                    transitGatewayPeeringAttachmentsBuffer = [Ec2ClientTypes.TransitGatewayPeeringAttachment]()
                    for structureContainer0 in transitGatewayPeeringAttachmentsContainer {
                        transitGatewayPeeringAttachmentsBuffer?.append(structureContainer0)
                    }
                }
                transitGatewayPeeringAttachments = transitGatewayPeeringAttachmentsBuffer
            } else {
                transitGatewayPeeringAttachments = []
            }
        } else {
            transitGatewayPeeringAttachments = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
