// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Contains the parameters for DescribeScheduledInstanceAvailability.
public struct DescribeScheduledInstanceAvailabilityInput: Swift.Equatable {
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The filters.
    ///
    /// * availability-zone - The Availability Zone (for example, us-west-2a).
    ///
    /// * instance-type - The instance type (for example, c4.large).
    ///
    /// * network-platform - The network platform (EC2-Classic or EC2-VPC).
    ///
    /// * platform - The platform (Linux/UNIX or Windows).
    public var filters: [EC2ClientTypes.Filter]?
    /// The time period for the first schedule to start.
    /// This member is required.
    public var firstSlotStartTimeRange: EC2ClientTypes.SlotDateTimeRangeRequest?
    /// The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned NextToken value.
    public var maxResults: Swift.Int?
    /// The maximum available duration, in hours. This value must be greater than MinSlotDurationInHours and less than 1,720.
    public var maxSlotDurationInHours: Swift.Int?
    /// The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.
    public var minSlotDurationInHours: Swift.Int?
    /// The token for the next set of results.
    public var nextToken: Swift.String?
    /// The schedule recurrence.
    /// This member is required.
    public var recurrence: EC2ClientTypes.ScheduledInstanceRecurrenceRequest?

    public init (
        dryRun: Swift.Bool? = nil,
        filters: [EC2ClientTypes.Filter]? = nil,
        firstSlotStartTimeRange: EC2ClientTypes.SlotDateTimeRangeRequest? = nil,
        maxResults: Swift.Int? = nil,
        maxSlotDurationInHours: Swift.Int? = nil,
        minSlotDurationInHours: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        recurrence: EC2ClientTypes.ScheduledInstanceRecurrenceRequest? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.firstSlotStartTimeRange = firstSlotStartTimeRange
        self.maxResults = maxResults
        self.maxSlotDurationInHours = maxSlotDurationInHours
        self.minSlotDurationInHours = minSlotDurationInHours
        self.nextToken = nextToken
        self.recurrence = recurrence
    }
}
