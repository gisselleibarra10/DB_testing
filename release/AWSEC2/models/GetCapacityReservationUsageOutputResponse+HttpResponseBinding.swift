// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetCapacityReservationUsageOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: GetCapacityReservationUsageOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.availableInstanceCount = output.availableInstanceCount
            self.capacityReservationId = output.capacityReservationId
            self.instanceType = output.instanceType
            self.instanceUsages = output.instanceUsages
            self.nextToken = output.nextToken
            self.state = output.state
            self.totalInstanceCount = output.totalInstanceCount
        } else {
            self.availableInstanceCount = nil
            self.capacityReservationId = nil
            self.instanceType = nil
            self.instanceUsages = nil
            self.nextToken = nil
            self.state = nil
            self.totalInstanceCount = nil
        }
    }
}
