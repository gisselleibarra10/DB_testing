// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ModifyCapacityReservationFleetInput: Swift.Equatable {
    /// The ID of the Capacity Reservation Fleet to modify.
    /// This member is required.
    public var capacityReservationFleetId: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The date and time at which the Capacity Reservation Fleet expires. When the Capacity Reservation Fleet expires, its state changes to expired and all of the Capacity Reservations in the Fleet expire. The Capacity Reservation Fleet expires within an hour after the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation Fleet is guaranteed to expire between 13:30:55 and 14:30:55 on 5/31/2019. You can't specify EndDate and RemoveEndDate in the same request.
    public var endDate: ClientRuntime.Date?
    /// Indicates whether to remove the end date from the Capacity Reservation Fleet. If you remove the end date, the Capacity Reservation Fleet does not expire and it remains active until you explicitly cancel it using the CancelCapacityReservationFleet action. You can't specify RemoveEndDate and EndDate in the same request.
    public var removeEndDate: Swift.Bool?
    /// The total number of capacity units to be reserved by the Capacity Reservation Fleet. This value, together with the instance type weights that you assign to each instance type used by the Fleet determine the number of instances for which the Fleet reserves capacity. Both values are based on units that make sense for your workload. For more information, see [Total target capacity](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html#target-capacity) in the Amazon EC2 User Guide.
    public var totalTargetCapacity: Swift.Int?

    public init (
        capacityReservationFleetId: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        endDate: ClientRuntime.Date? = nil,
        removeEndDate: Swift.Bool? = nil,
        totalTargetCapacity: Swift.Int? = nil
    )
    {
        self.capacityReservationFleetId = capacityReservationFleetId
        self.dryRun = dryRun
        self.endDate = endDate
        self.removeEndDate = removeEndDate
        self.totalTargetCapacity = totalTargetCapacity
    }
}
