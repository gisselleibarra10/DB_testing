// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTransitGatewayRouteTablePropagationsOutputResponseBody: Swift.Equatable {
    let transitGatewayRouteTablePropagations: [Ec2ClientTypes.TransitGatewayRouteTablePropagation]?
    let nextToken: Swift.String?
}

extension GetTransitGatewayRouteTablePropagationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case transitGatewayRouteTablePropagations = "transitGatewayRouteTablePropagations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.transitGatewayRouteTablePropagations) {
            struct KeyVal0{struct item{}}
            let transitGatewayRouteTablePropagationsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .transitGatewayRouteTablePropagations)
            if let transitGatewayRouteTablePropagationsWrappedContainer = transitGatewayRouteTablePropagationsWrappedContainer {
                let transitGatewayRouteTablePropagationsContainer = try transitGatewayRouteTablePropagationsWrappedContainer.decodeIfPresent([Ec2ClientTypes.TransitGatewayRouteTablePropagation].self, forKey: .member)
                var transitGatewayRouteTablePropagationsBuffer:[Ec2ClientTypes.TransitGatewayRouteTablePropagation]? = nil
                if let transitGatewayRouteTablePropagationsContainer = transitGatewayRouteTablePropagationsContainer {
                    transitGatewayRouteTablePropagationsBuffer = [Ec2ClientTypes.TransitGatewayRouteTablePropagation]()
                    for structureContainer0 in transitGatewayRouteTablePropagationsContainer {
                        transitGatewayRouteTablePropagationsBuffer?.append(structureContainer0)
                    }
                }
                transitGatewayRouteTablePropagations = transitGatewayRouteTablePropagationsBuffer
            } else {
                transitGatewayRouteTablePropagations = []
            }
        } else {
            transitGatewayRouteTablePropagations = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
