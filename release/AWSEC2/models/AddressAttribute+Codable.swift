// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.AddressAttribute: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allocationId = "allocationId"
        case ptrRecord = "ptrRecord"
        case ptrRecordUpdate = "ptrRecordUpdate"
        case publicIp = "publicIp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let allocationId = allocationId {
            try container.encode(allocationId, forKey: ClientRuntime.Key("AllocationId"))
        }
        if let ptrRecord = ptrRecord {
            try container.encode(ptrRecord, forKey: ClientRuntime.Key("PtrRecord"))
        }
        if let ptrRecordUpdate = ptrRecordUpdate {
            try container.encode(ptrRecordUpdate, forKey: ClientRuntime.Key("PtrRecordUpdate"))
        }
        if let publicIp = publicIp {
            try container.encode(publicIp, forKey: ClientRuntime.Key("PublicIp"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let publicIpDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publicIp)
        publicIp = publicIpDecoded
        let allocationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .allocationId)
        allocationId = allocationIdDecoded
        let ptrRecordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ptrRecord)
        ptrRecord = ptrRecordDecoded
        let ptrRecordUpdateDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.PtrUpdateStatus.self, forKey: .ptrRecordUpdate)
        ptrRecordUpdate = ptrRecordUpdateDecoded
    }
}
