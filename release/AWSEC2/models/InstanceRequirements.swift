// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes. When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values. You must specify VCpuCount and MemoryMiB. All other attributes are optional. Any unspecified optional attribute is set to its default. For more information, see [Attribute-based instance type selection for EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html), [Attribute-based instance type selection for Spot Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html), and [Spot placement score](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html) in the Amazon EC2 User Guide.
    public struct InstanceRequirements: Swift.Equatable {
        /// The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance. To exclude accelerator-enabled instance types, set Max to 0. Default: No minimum or maximum limits
        public var acceleratorCount: Ec2ClientTypes.AcceleratorCount?
        /// Indicates whether instance types must have accelerators by specific manufacturers.
        ///
        /// * For instance types with NVIDIA devices, specify nvidia.
        ///
        /// * For instance types with AMD devices, specify amd.
        ///
        /// * For instance types with Amazon Web Services devices, specify amazon-web-services.
        ///
        /// * For instance types with Xilinx devices, specify xilinx.
        ///
        ///
        /// Default: Any manufacturer
        public var acceleratorManufacturers: [Ec2ClientTypes.AcceleratorManufacturer]?
        /// The accelerators that must be on the instance type.
        ///
        /// * For instance types with NVIDIA A100 GPUs, specify a100.
        ///
        /// * For instance types with NVIDIA V100 GPUs, specify v100.
        ///
        /// * For instance types with NVIDIA K80 GPUs, specify k80.
        ///
        /// * For instance types with NVIDIA T4 GPUs, specify t4.
        ///
        /// * For instance types with NVIDIA M60 GPUs, specify m60.
        ///
        /// * For instance types with AMD Radeon Pro V520 GPUs, specify radeon-pro-v520.
        ///
        /// * For instance types with Xilinx VU9P FPGAs, specify vu9p.
        ///
        /// * For instance types with Amazon Web Services Inferentia chips, specify inferentia.
        ///
        /// * For instance types with NVIDIA GRID K520 GPUs, specify k520.
        ///
        ///
        /// Default: Any accelerator
        public var acceleratorNames: [Ec2ClientTypes.AcceleratorName]?
        /// The minimum and maximum amount of total accelerator memory, in MiB. Default: No minimum or maximum limits
        public var acceleratorTotalMemoryMiB: Ec2ClientTypes.AcceleratorTotalMemoryMiB?
        /// The accelerator types that must be on the instance type.
        ///
        /// * For instance types with GPU accelerators, specify gpu.
        ///
        /// * For instance types with FPGA accelerators, specify fpga.
        ///
        /// * For instance types with inference accelerators, specify inference.
        ///
        ///
        /// Default: Any accelerator type
        public var acceleratorTypes: [Ec2ClientTypes.AcceleratorType]?
        /// Indicates whether bare metal instance types must be included, excluded, or required.
        ///
        /// * To include bare metal instance types, specify included.
        ///
        /// * To require only bare metal instance types, specify required.
        ///
        /// * To exclude bare metal instance types, specify excluded.
        ///
        ///
        /// Default: excluded
        public var bareMetal: Ec2ClientTypes.BareMetal?
        /// The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see [Amazon EBS–optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the Amazon EC2 User Guide. Default: No minimum or maximum limits
        public var baselineEbsBandwidthMbps: Ec2ClientTypes.BaselineEbsBandwidthMbps?
        /// Indicates whether burstable performance T instance types are included, excluded, or required. For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html).
        ///
        /// * To include burstable performance instance types, specify included.
        ///
        /// * To require only burstable performance instance types, specify required.
        ///
        /// * To exclude burstable performance instance types, specify excluded.
        ///
        ///
        /// Default: excluded
        public var burstablePerformance: Ec2ClientTypes.BurstablePerformance?
        /// The CPU manufacturers to include.
        ///
        /// * For instance types with Intel CPUs, specify intel.
        ///
        /// * For instance types with AMD CPUs, specify amd.
        ///
        /// * For instance types with Amazon Web Services CPUs, specify amazon-web-services.
        ///
        ///
        /// Don't confuse the CPU manufacturer with the CPU architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template. Default: Any manufacturer
        public var cpuManufacturers: [Ec2ClientTypes.CpuManufacturer]?
        /// The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types. Default: No excluded instance types
        public var excludedInstanceTypes: [Swift.String]?
        /// Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Current generation instance types are typically the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the Amazon EC2 User Guide. For current generation instance types, specify current. For previous generation instance types, specify previous. Default: Current and previous generation instance types
        public var instanceGenerations: [Ec2ClientTypes.InstanceGeneration]?
        /// Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the Amazon EC2 User Guide.
        ///
        /// * To include instance types with instance store volumes, specify included.
        ///
        /// * To require only instance types with instance store volumes, specify required.
        ///
        /// * To exclude instance types with instance store volumes, specify excluded.
        ///
        ///
        /// Default: included
        public var localStorage: Ec2ClientTypes.LocalStorage?
        /// The type of local storage that is required.
        ///
        /// * For instance types with hard disk drive (HDD) storage, specify hdd.
        ///
        /// * For instance types with solid state drive (SSD) storage, specify ssd.
        ///
        ///
        /// Default: hdd and ssd
        public var localStorageTypes: [Ec2ClientTypes.LocalStorageType]?
        /// The minimum and maximum amount of memory per vCPU, in GiB. Default: No minimum or maximum limits
        public var memoryGiBPerVCpu: Ec2ClientTypes.MemoryGiBPerVCpu?
        /// The minimum and maximum amount of memory, in MiB.
        public var memoryMiB: Ec2ClientTypes.MemoryMiB?
        /// The minimum and maximum number of network interfaces. Default: No minimum or maximum limits
        public var networkInterfaceCount: Ec2ClientTypes.NetworkInterfaceCount?
        /// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage above the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold. The parameter accepts an integer, which Amazon EC2 interprets as a percentage. To turn off price protection, specify a high value, such as 999999. This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html). If you set TargetCapacityUnitType to vcpu or memory-mib, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price. Default: 20
        public var onDemandMaxPricePercentageOverLowestPrice: Swift.Int?
        /// Indicates whether instance types must support hibernation for On-Demand Instances. This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html). Default: false
        public var requireHibernateSupport: Swift.Bool?
        /// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage above the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold. The parameter accepts an integer, which Amazon EC2 interprets as a percentage. To turn off price protection, specify a high value, such as 999999. This parameter is not supported for [GetSpotPlacementScores](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html) and [GetInstanceTypesFromInstanceRequirements](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html). If you set TargetCapacityUnitType to vcpu or memory-mib, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price. Default: 100
        public var spotMaxPricePercentageOverLowestPrice: Swift.Int?
        /// The minimum and maximum amount of total local storage, in GB. Default: No minimum or maximum limits
        public var totalLocalStorageGB: Ec2ClientTypes.TotalLocalStorageGB?
        /// The minimum and maximum number of vCPUs.
        public var vCpuCount: Ec2ClientTypes.VCpuCountRange?

        public init (
            acceleratorCount: Ec2ClientTypes.AcceleratorCount? = nil,
            acceleratorManufacturers: [Ec2ClientTypes.AcceleratorManufacturer]? = nil,
            acceleratorNames: [Ec2ClientTypes.AcceleratorName]? = nil,
            acceleratorTotalMemoryMiB: Ec2ClientTypes.AcceleratorTotalMemoryMiB? = nil,
            acceleratorTypes: [Ec2ClientTypes.AcceleratorType]? = nil,
            bareMetal: Ec2ClientTypes.BareMetal? = nil,
            baselineEbsBandwidthMbps: Ec2ClientTypes.BaselineEbsBandwidthMbps? = nil,
            burstablePerformance: Ec2ClientTypes.BurstablePerformance? = nil,
            cpuManufacturers: [Ec2ClientTypes.CpuManufacturer]? = nil,
            excludedInstanceTypes: [Swift.String]? = nil,
            instanceGenerations: [Ec2ClientTypes.InstanceGeneration]? = nil,
            localStorage: Ec2ClientTypes.LocalStorage? = nil,
            localStorageTypes: [Ec2ClientTypes.LocalStorageType]? = nil,
            memoryGiBPerVCpu: Ec2ClientTypes.MemoryGiBPerVCpu? = nil,
            memoryMiB: Ec2ClientTypes.MemoryMiB? = nil,
            networkInterfaceCount: Ec2ClientTypes.NetworkInterfaceCount? = nil,
            onDemandMaxPricePercentageOverLowestPrice: Swift.Int? = nil,
            requireHibernateSupport: Swift.Bool? = nil,
            spotMaxPricePercentageOverLowestPrice: Swift.Int? = nil,
            totalLocalStorageGB: Ec2ClientTypes.TotalLocalStorageGB? = nil,
            vCpuCount: Ec2ClientTypes.VCpuCountRange? = nil
        )
        {
            self.acceleratorCount = acceleratorCount
            self.acceleratorManufacturers = acceleratorManufacturers
            self.acceleratorNames = acceleratorNames
            self.acceleratorTotalMemoryMiB = acceleratorTotalMemoryMiB
            self.acceleratorTypes = acceleratorTypes
            self.bareMetal = bareMetal
            self.baselineEbsBandwidthMbps = baselineEbsBandwidthMbps
            self.burstablePerformance = burstablePerformance
            self.cpuManufacturers = cpuManufacturers
            self.excludedInstanceTypes = excludedInstanceTypes
            self.instanceGenerations = instanceGenerations
            self.localStorage = localStorage
            self.localStorageTypes = localStorageTypes
            self.memoryGiBPerVCpu = memoryGiBPerVCpu
            self.memoryMiB = memoryMiB
            self.networkInterfaceCount = networkInterfaceCount
            self.onDemandMaxPricePercentageOverLowestPrice = onDemandMaxPricePercentageOverLowestPrice
            self.requireHibernateSupport = requireHibernateSupport
            self.spotMaxPricePercentageOverLowestPrice = spotMaxPricePercentageOverLowestPrice
            self.totalLocalStorageGB = totalLocalStorageGB
            self.vCpuCount = vCpuCount
        }
    }

}
