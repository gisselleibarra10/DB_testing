// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.TransitGatewayAttachmentBgpConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bgpStatus = "bgpStatus"
        case peerAddress = "peerAddress"
        case peerAsn = "peerAsn"
        case transitGatewayAddress = "transitGatewayAddress"
        case transitGatewayAsn = "transitGatewayAsn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let bgpStatus = bgpStatus {
            try container.encode(bgpStatus, forKey: ClientRuntime.Key("BgpStatus"))
        }
        if let peerAddress = peerAddress {
            try container.encode(peerAddress, forKey: ClientRuntime.Key("PeerAddress"))
        }
        if let peerAsn = peerAsn {
            try container.encode(peerAsn, forKey: ClientRuntime.Key("PeerAsn"))
        }
        if let transitGatewayAddress = transitGatewayAddress {
            try container.encode(transitGatewayAddress, forKey: ClientRuntime.Key("TransitGatewayAddress"))
        }
        if let transitGatewayAsn = transitGatewayAsn {
            try container.encode(transitGatewayAsn, forKey: ClientRuntime.Key("TransitGatewayAsn"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transitGatewayAsnDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .transitGatewayAsn)
        transitGatewayAsn = transitGatewayAsnDecoded
        let peerAsnDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .peerAsn)
        peerAsn = peerAsnDecoded
        let transitGatewayAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .transitGatewayAddress)
        transitGatewayAddress = transitGatewayAddressDecoded
        let peerAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .peerAddress)
        peerAddress = peerAddressDecoded
        let bgpStatusDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.BgpStatus.self, forKey: .bgpStatus)
        bgpStatus = bgpStatusDecoded
    }
}
