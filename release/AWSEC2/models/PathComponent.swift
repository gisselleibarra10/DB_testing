// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// Describes a path component.
    public struct PathComponent: Swift.Equatable {
        /// The network ACL rule.
        public var aclRule: Ec2ClientTypes.AnalysisAclRule?
        /// The additional details.
        public var additionalDetails: [Ec2ClientTypes.AdditionalDetail]?
        /// The resource to which the path component is attached.
        public var attachedTo: Ec2ClientTypes.AnalysisComponent?
        /// The component.
        public var component: Ec2ClientTypes.AnalysisComponent?
        /// The destination VPC.
        public var destinationVpc: Ec2ClientTypes.AnalysisComponent?
        /// The load balancer listener.
        public var elasticLoadBalancerListener: Ec2ClientTypes.AnalysisComponent?
        /// The explanation codes.
        public var explanations: [Ec2ClientTypes.Explanation]?
        /// The inbound header.
        public var inboundHeader: Ec2ClientTypes.AnalysisPacketHeader?
        /// The outbound header.
        public var outboundHeader: Ec2ClientTypes.AnalysisPacketHeader?
        /// The route table route.
        public var routeTableRoute: Ec2ClientTypes.AnalysisRouteTableRoute?
        /// The security group rule.
        public var securityGroupRule: Ec2ClientTypes.AnalysisSecurityGroupRule?
        /// The sequence number.
        public var sequenceNumber: Swift.Int?
        /// The source VPC.
        public var sourceVpc: Ec2ClientTypes.AnalysisComponent?
        /// The subnet.
        public var subnet: Ec2ClientTypes.AnalysisComponent?
        /// The transit gateway.
        public var transitGateway: Ec2ClientTypes.AnalysisComponent?
        /// The route in a transit gateway route table.
        public var transitGatewayRouteTableRoute: Ec2ClientTypes.TransitGatewayRouteTableRoute?
        /// The component VPC.
        public var vpc: Ec2ClientTypes.AnalysisComponent?

        public init (
            aclRule: Ec2ClientTypes.AnalysisAclRule? = nil,
            additionalDetails: [Ec2ClientTypes.AdditionalDetail]? = nil,
            attachedTo: Ec2ClientTypes.AnalysisComponent? = nil,
            component: Ec2ClientTypes.AnalysisComponent? = nil,
            destinationVpc: Ec2ClientTypes.AnalysisComponent? = nil,
            elasticLoadBalancerListener: Ec2ClientTypes.AnalysisComponent? = nil,
            explanations: [Ec2ClientTypes.Explanation]? = nil,
            inboundHeader: Ec2ClientTypes.AnalysisPacketHeader? = nil,
            outboundHeader: Ec2ClientTypes.AnalysisPacketHeader? = nil,
            routeTableRoute: Ec2ClientTypes.AnalysisRouteTableRoute? = nil,
            securityGroupRule: Ec2ClientTypes.AnalysisSecurityGroupRule? = nil,
            sequenceNumber: Swift.Int? = nil,
            sourceVpc: Ec2ClientTypes.AnalysisComponent? = nil,
            subnet: Ec2ClientTypes.AnalysisComponent? = nil,
            transitGateway: Ec2ClientTypes.AnalysisComponent? = nil,
            transitGatewayRouteTableRoute: Ec2ClientTypes.TransitGatewayRouteTableRoute? = nil,
            vpc: Ec2ClientTypes.AnalysisComponent? = nil
        )
        {
            self.aclRule = aclRule
            self.additionalDetails = additionalDetails
            self.attachedTo = attachedTo
            self.component = component
            self.destinationVpc = destinationVpc
            self.elasticLoadBalancerListener = elasticLoadBalancerListener
            self.explanations = explanations
            self.inboundHeader = inboundHeader
            self.outboundHeader = outboundHeader
            self.routeTableRoute = routeTableRoute
            self.securityGroupRule = securityGroupRule
            self.sequenceNumber = sequenceNumber
            self.sourceVpc = sourceVpc
            self.subnet = subnet
            self.transitGateway = transitGateway
            self.transitGatewayRouteTableRoute = transitGatewayRouteTableRoute
            self.vpc = vpc
        }
    }

}
