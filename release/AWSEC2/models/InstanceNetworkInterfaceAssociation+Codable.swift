// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.InstanceNetworkInterfaceAssociation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case carrierIp = "carrierIp"
        case customerOwnedIp = "customerOwnedIp"
        case ipOwnerId = "ipOwnerId"
        case publicDnsName = "publicDnsName"
        case publicIp = "publicIp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let carrierIp = carrierIp {
            try container.encode(carrierIp, forKey: ClientRuntime.Key("CarrierIp"))
        }
        if let customerOwnedIp = customerOwnedIp {
            try container.encode(customerOwnedIp, forKey: ClientRuntime.Key("CustomerOwnedIp"))
        }
        if let ipOwnerId = ipOwnerId {
            try container.encode(ipOwnerId, forKey: ClientRuntime.Key("IpOwnerId"))
        }
        if let publicDnsName = publicDnsName {
            try container.encode(publicDnsName, forKey: ClientRuntime.Key("PublicDnsName"))
        }
        if let publicIp = publicIp {
            try container.encode(publicIp, forKey: ClientRuntime.Key("PublicIp"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let carrierIpDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .carrierIp)
        carrierIp = carrierIpDecoded
        let customerOwnedIpDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customerOwnedIp)
        customerOwnedIp = customerOwnedIpDecoded
        let ipOwnerIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipOwnerId)
        ipOwnerId = ipOwnerIdDecoded
        let publicDnsNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publicDnsName)
        publicDnsName = publicDnsNameDecoded
        let publicIpDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .publicIp)
        publicIp = publicIpDecoded
    }
}
