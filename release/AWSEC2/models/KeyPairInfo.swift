// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes {
    /// Describes a key pair.
    public struct KeyPairInfo: Swift.Equatable {
        /// If you used Amazon EC2 to create the key pair, this is the date and time when the key was created, in [ISO 8601 date-time format](https://www.iso.org/iso-8601-date-and-time-format.html), in the UTC time zone. If you imported an existing key pair to Amazon EC2, this is the date and time the key was imported, in [ISO 8601 date-time format](https://www.iso.org/iso-8601-date-and-time-format.html), in the UTC time zone.
        public var createTime: ClientRuntime.Date?
        /// If you used [CreateKeyPair] to create the key pair:
        ///
        /// * For RSA key pairs, the key fingerprint is the SHA-1 digest of the DER encoded private key.
        ///
        /// * For ED25519 key pairs, the key fingerprint is the base64-encoded SHA-256 digest, which is the default for OpenSSH, starting with [OpenSSH 6.8](http://www.openssh.com/txt/release-6.8).
        ///
        ///
        /// If you used [ImportKeyPair] to provide Amazon Web Services the public key:
        ///
        /// * For RSA key pairs, the key fingerprint is the MD5 public key fingerprint as specified in section 4 of RFC4716.
        ///
        /// * For ED25519 key pairs, the key fingerprint is the base64-encoded SHA-256 digest, which is the default for OpenSSH, starting with [OpenSSH 6.8](http://www.openssh.com/txt/release-6.8).
        public var keyFingerprint: Swift.String?
        /// The name of the key pair.
        public var keyName: Swift.String?
        /// The ID of the key pair.
        public var keyPairId: Swift.String?
        /// The type of key pair.
        public var keyType: Ec2ClientTypes.KeyType?
        /// The public key material.
        public var publicKey: Swift.String?
        /// Any tags applied to the key pair.
        public var tags: [Ec2ClientTypes.Tag]?

        public init (
            createTime: ClientRuntime.Date? = nil,
            keyFingerprint: Swift.String? = nil,
            keyName: Swift.String? = nil,
            keyPairId: Swift.String? = nil,
            keyType: Ec2ClientTypes.KeyType? = nil,
            publicKey: Swift.String? = nil,
            tags: [Ec2ClientTypes.Tag]? = nil
        )
        {
            self.createTime = createTime
            self.keyFingerprint = keyFingerprint
            self.keyName = keyName
            self.keyPairId = keyPairId
            self.keyType = keyType
            self.publicKey = publicKey
            self.tags = tags
        }
    }

}
