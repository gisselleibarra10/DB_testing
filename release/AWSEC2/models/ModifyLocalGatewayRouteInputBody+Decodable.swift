// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyLocalGatewayRouteInputBody: Swift.Equatable {
    let destinationCidrBlock: Swift.String?
    let localGatewayRouteTableId: Swift.String?
    let localGatewayVirtualInterfaceGroupId: Swift.String?
    let networkInterfaceId: Swift.String?
    let dryRun: Swift.Bool?
}

extension ModifyLocalGatewayRouteInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationCidrBlock = "DestinationCidrBlock"
        case dryRun = "DryRun"
        case localGatewayRouteTableId = "LocalGatewayRouteTableId"
        case localGatewayVirtualInterfaceGroupId = "LocalGatewayVirtualInterfaceGroupId"
        case networkInterfaceId = "NetworkInterfaceId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationCidrBlockDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationCidrBlock)
        destinationCidrBlock = destinationCidrBlockDecoded
        let localGatewayRouteTableIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .localGatewayRouteTableId)
        localGatewayRouteTableId = localGatewayRouteTableIdDecoded
        let localGatewayVirtualInterfaceGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .localGatewayVirtualInterfaceGroupId)
        localGatewayVirtualInterfaceGroupId = localGatewayVirtualInterfaceGroupIdDecoded
        let networkInterfaceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkInterfaceId)
        networkInterfaceId = networkInterfaceIdDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
