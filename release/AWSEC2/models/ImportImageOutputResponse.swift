// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ImportImageOutputResponse: Swift.Equatable {
    /// The architecture of the virtual machine.
    public var architecture: Swift.String?
    /// A description of the import task.
    public var description: Swift.String?
    /// Indicates whether the AMI is encrypted.
    public var encrypted: Swift.Bool?
    /// The target hypervisor of the import task.
    public var hypervisor: Swift.String?
    /// The ID of the Amazon Machine Image (AMI) created by the import task.
    public var imageId: Swift.String?
    /// The task ID of the import image task.
    public var importTaskId: Swift.String?
    /// The identifier for the symmetric KMS key that was used to create the encrypted AMI.
    public var kmsKeyId: Swift.String?
    /// The ARNs of the license configurations.
    public var licenseSpecifications: [Ec2ClientTypes.ImportImageLicenseConfigurationResponse]?
    /// The license type of the virtual machine.
    public var licenseType: Swift.String?
    /// The operating system of the virtual machine.
    public var platform: Swift.String?
    /// The progress of the task.
    public var progress: Swift.String?
    /// Information about the snapshots.
    public var snapshotDetails: [Ec2ClientTypes.SnapshotDetail]?
    /// A brief status of the task.
    public var status: Swift.String?
    /// A detailed status message of the import task.
    public var statusMessage: Swift.String?
    /// Any tags assigned to the import image task.
    public var tags: [Ec2ClientTypes.Tag]?
    /// The usage operation value.
    public var usageOperation: Swift.String?

    public init (
        architecture: Swift.String? = nil,
        description: Swift.String? = nil,
        encrypted: Swift.Bool? = nil,
        hypervisor: Swift.String? = nil,
        imageId: Swift.String? = nil,
        importTaskId: Swift.String? = nil,
        kmsKeyId: Swift.String? = nil,
        licenseSpecifications: [Ec2ClientTypes.ImportImageLicenseConfigurationResponse]? = nil,
        licenseType: Swift.String? = nil,
        platform: Swift.String? = nil,
        progress: Swift.String? = nil,
        snapshotDetails: [Ec2ClientTypes.SnapshotDetail]? = nil,
        status: Swift.String? = nil,
        statusMessage: Swift.String? = nil,
        tags: [Ec2ClientTypes.Tag]? = nil,
        usageOperation: Swift.String? = nil
    )
    {
        self.architecture = architecture
        self.description = description
        self.encrypted = encrypted
        self.hypervisor = hypervisor
        self.imageId = imageId
        self.importTaskId = importTaskId
        self.kmsKeyId = kmsKeyId
        self.licenseSpecifications = licenseSpecifications
        self.licenseType = licenseType
        self.platform = platform
        self.progress = progress
        self.snapshotDetails = snapshotDetails
        self.status = status
        self.statusMessage = statusMessage
        self.tags = tags
        self.usageOperation = usageOperation
    }
}
