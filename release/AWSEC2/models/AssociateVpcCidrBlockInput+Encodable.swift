// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AssociateVpcCidrBlockInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let amazonProvidedIpv6CidrBlock = amazonProvidedIpv6CidrBlock {
            try container.encode(amazonProvidedIpv6CidrBlock, forKey: ClientRuntime.Key("AmazonProvidedIpv6CidrBlock"))
        }
        if let cidrBlock = cidrBlock {
            try container.encode(cidrBlock, forKey: ClientRuntime.Key("CidrBlock"))
        }
        if let ipv4IpamPoolId = ipv4IpamPoolId {
            try container.encode(ipv4IpamPoolId, forKey: ClientRuntime.Key("Ipv4IpamPoolId"))
        }
        if let ipv4NetmaskLength = ipv4NetmaskLength {
            try container.encode(ipv4NetmaskLength, forKey: ClientRuntime.Key("Ipv4NetmaskLength"))
        }
        if let ipv6CidrBlock = ipv6CidrBlock {
            try container.encode(ipv6CidrBlock, forKey: ClientRuntime.Key("Ipv6CidrBlock"))
        }
        if let ipv6CidrBlockNetworkBorderGroup = ipv6CidrBlockNetworkBorderGroup {
            try container.encode(ipv6CidrBlockNetworkBorderGroup, forKey: ClientRuntime.Key("Ipv6CidrBlockNetworkBorderGroup"))
        }
        if let ipv6IpamPoolId = ipv6IpamPoolId {
            try container.encode(ipv6IpamPoolId, forKey: ClientRuntime.Key("Ipv6IpamPoolId"))
        }
        if let ipv6NetmaskLength = ipv6NetmaskLength {
            try container.encode(ipv6NetmaskLength, forKey: ClientRuntime.Key("Ipv6NetmaskLength"))
        }
        if let ipv6Pool = ipv6Pool {
            try container.encode(ipv6Pool, forKey: ClientRuntime.Key("Ipv6Pool"))
        }
        if let vpcId = vpcId {
            try container.encode(vpcId, forKey: ClientRuntime.Key("VpcId"))
        }
        try container.encode("AssociateVpcCidrBlock", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
