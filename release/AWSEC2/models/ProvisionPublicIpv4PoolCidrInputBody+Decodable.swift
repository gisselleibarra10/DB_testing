// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ProvisionPublicIpv4PoolCidrInputBody: Swift.Equatable {
    let dryRun: Swift.Bool?
    let ipamPoolId: Swift.String?
    let poolId: Swift.String?
    let netmaskLength: Swift.Int?
}

extension ProvisionPublicIpv4PoolCidrInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "DryRun"
        case ipamPoolId = "IpamPoolId"
        case netmaskLength = "NetmaskLength"
        case poolId = "PoolId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let ipamPoolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ipamPoolId)
        ipamPoolId = ipamPoolIdDecoded
        let poolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .poolId)
        poolId = poolIdDecoded
        let netmaskLengthDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .netmaskLength)
        netmaskLength = netmaskLengthDecoded
    }
}
