// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.VerifiedAccessLogCloudWatchLogsDestination: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deliveryStatus = "deliveryStatus"
        case enabled = "enabled"
        case logGroup = "logGroup"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let deliveryStatus = deliveryStatus {
            try container.encode(deliveryStatus, forKey: ClientRuntime.Key("DeliveryStatus"))
        }
        if let enabled = enabled {
            try container.encode(enabled, forKey: ClientRuntime.Key("Enabled"))
        }
        if let logGroup = logGroup {
            try container.encode(logGroup, forKey: ClientRuntime.Key("LogGroup"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let deliveryStatusDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.VerifiedAccessLogDeliveryStatus.self, forKey: .deliveryStatus)
        deliveryStatus = deliveryStatusDecoded
        let logGroupDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .logGroup)
        logGroup = logGroupDecoded
    }
}
