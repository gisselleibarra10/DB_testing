// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes {
    /// Describes a VPC endpoint.
    public struct VpcEndpoint: Swift.Equatable {
        /// The date and time that the endpoint was created.
        public var creationTimestamp: ClientRuntime.Date?
        /// (Interface endpoint) The DNS entries for the endpoint.
        public var dnsEntries: [EC2ClientTypes.DnsEntry]?
        /// The DNS options for the endpoint.
        public var dnsOptions: EC2ClientTypes.DnsOptions?
        /// (Interface endpoint) Information about the security groups that are associated with the network interface.
        public var groups: [EC2ClientTypes.SecurityGroupIdentifier]?
        /// The IP address type for the endpoint.
        public var ipAddressType: EC2ClientTypes.IpAddressType?
        /// The last error that occurred for endpoint.
        public var lastError: EC2ClientTypes.LastError?
        /// (Interface endpoint) One or more network interfaces for the endpoint.
        public var networkInterfaceIds: [Swift.String]?
        /// The ID of the Amazon Web Services account that owns the endpoint.
        public var ownerId: Swift.String?
        /// The policy document associated with the endpoint, if applicable.
        public var policyDocument: Swift.String?
        /// (Interface endpoint) Indicates whether the VPC is associated with a private hosted zone.
        public var privateDnsEnabled: Swift.Bool?
        /// Indicates whether the endpoint is being managed by its service.
        public var requesterManaged: Swift.Bool?
        /// (Gateway endpoint) One or more route tables associated with the endpoint.
        public var routeTableIds: [Swift.String]?
        /// The name of the service to which the endpoint is associated.
        public var serviceName: Swift.String?
        /// The state of the endpoint.
        public var state: EC2ClientTypes.State?
        /// (Interface endpoint) The subnets for the endpoint.
        public var subnetIds: [Swift.String]?
        /// Any tags assigned to the endpoint.
        public var tags: [EC2ClientTypes.Tag]?
        /// The ID of the endpoint.
        public var vpcEndpointId: Swift.String?
        /// The type of endpoint.
        public var vpcEndpointType: EC2ClientTypes.VpcEndpointType?
        /// The ID of the VPC to which the endpoint is associated.
        public var vpcId: Swift.String?

        public init (
            creationTimestamp: ClientRuntime.Date? = nil,
            dnsEntries: [EC2ClientTypes.DnsEntry]? = nil,
            dnsOptions: EC2ClientTypes.DnsOptions? = nil,
            groups: [EC2ClientTypes.SecurityGroupIdentifier]? = nil,
            ipAddressType: EC2ClientTypes.IpAddressType? = nil,
            lastError: EC2ClientTypes.LastError? = nil,
            networkInterfaceIds: [Swift.String]? = nil,
            ownerId: Swift.String? = nil,
            policyDocument: Swift.String? = nil,
            privateDnsEnabled: Swift.Bool? = nil,
            requesterManaged: Swift.Bool? = nil,
            routeTableIds: [Swift.String]? = nil,
            serviceName: Swift.String? = nil,
            state: EC2ClientTypes.State? = nil,
            subnetIds: [Swift.String]? = nil,
            tags: [EC2ClientTypes.Tag]? = nil,
            vpcEndpointId: Swift.String? = nil,
            vpcEndpointType: EC2ClientTypes.VpcEndpointType? = nil,
            vpcId: Swift.String? = nil
        )
        {
            self.creationTimestamp = creationTimestamp
            self.dnsEntries = dnsEntries
            self.dnsOptions = dnsOptions
            self.groups = groups
            self.ipAddressType = ipAddressType
            self.lastError = lastError
            self.networkInterfaceIds = networkInterfaceIds
            self.ownerId = ownerId
            self.policyDocument = policyDocument
            self.privateDnsEnabled = privateDnsEnabled
            self.requesterManaged = requesterManaged
            self.routeTableIds = routeTableIds
            self.serviceName = serviceName
            self.state = state
            self.subnetIds = subnetIds
            self.tags = tags
            self.vpcEndpointId = vpcEndpointId
            self.vpcEndpointType = vpcEndpointType
            self.vpcId = vpcId
        }
    }

}
