// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    public enum TransitGatewayMulitcastDomainAssociationState: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case associated
        case associating
        case disassociated
        case disassociating
        case failed
        case pendingacceptance
        case rejected
        case sdkUnknown(Swift.String)

        public static var allCases: [TransitGatewayMulitcastDomainAssociationState] {
            return [
                .associated,
                .associating,
                .disassociated,
                .disassociating,
                .failed,
                .pendingacceptance,
                .rejected,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .associated: return "associated"
            case .associating: return "associating"
            case .disassociated: return "disassociated"
            case .disassociating: return "disassociating"
            case .failed: return "failed"
            case .pendingacceptance: return "pendingAcceptance"
            case .rejected: return "rejected"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = TransitGatewayMulitcastDomainAssociationState(rawValue: rawValue) ?? TransitGatewayMulitcastDomainAssociationState.sdkUnknown(rawValue)
        }
    }
}
