// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes {
    /// Describes a Reserved Instance listing.
    public struct ReservedInstancesListing: Swift.Equatable {
        /// A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see [Ensuring Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
        public var clientToken: Swift.String?
        /// The time the listing was created.
        public var createDate: ClientRuntime.Date?
        /// The number of instances in this state.
        public var instanceCounts: [Ec2ClientTypes.InstanceCount]?
        /// The price of the Reserved Instance listing.
        public var priceSchedules: [Ec2ClientTypes.PriceSchedule]?
        /// The ID of the Reserved Instance.
        public var reservedInstancesId: Swift.String?
        /// The ID of the Reserved Instance listing.
        public var reservedInstancesListingId: Swift.String?
        /// The status of the Reserved Instance listing.
        public var status: Ec2ClientTypes.ListingStatus?
        /// The reason for the current status of the Reserved Instance listing. The response can be blank.
        public var statusMessage: Swift.String?
        /// Any tags assigned to the resource.
        public var tags: [Ec2ClientTypes.Tag]?
        /// The last modified timestamp of the listing.
        public var updateDate: ClientRuntime.Date?

        public init (
            clientToken: Swift.String? = nil,
            createDate: ClientRuntime.Date? = nil,
            instanceCounts: [Ec2ClientTypes.InstanceCount]? = nil,
            priceSchedules: [Ec2ClientTypes.PriceSchedule]? = nil,
            reservedInstancesId: Swift.String? = nil,
            reservedInstancesListingId: Swift.String? = nil,
            status: Ec2ClientTypes.ListingStatus? = nil,
            statusMessage: Swift.String? = nil,
            tags: [Ec2ClientTypes.Tag]? = nil,
            updateDate: ClientRuntime.Date? = nil
        )
        {
            self.clientToken = clientToken
            self.createDate = createDate
            self.instanceCounts = instanceCounts
            self.priceSchedules = priceSchedules
            self.reservedInstancesId = reservedInstancesId
            self.reservedInstancesListingId = reservedInstancesListingId
            self.status = status
            self.statusMessage = statusMessage
            self.tags = tags
            self.updateDate = updateDate
        }
    }

}
