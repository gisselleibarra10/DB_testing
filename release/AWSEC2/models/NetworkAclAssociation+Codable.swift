// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.NetworkAclAssociation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case networkAclAssociationId = "networkAclAssociationId"
        case networkAclId = "networkAclId"
        case subnetId = "subnetId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let networkAclAssociationId = networkAclAssociationId {
            try container.encode(networkAclAssociationId, forKey: ClientRuntime.Key("NetworkAclAssociationId"))
        }
        if let networkAclId = networkAclId {
            try container.encode(networkAclId, forKey: ClientRuntime.Key("NetworkAclId"))
        }
        if let subnetId = subnetId {
            try container.encode(subnetId, forKey: ClientRuntime.Key("SubnetId"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let networkAclAssociationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkAclAssociationId)
        networkAclAssociationId = networkAclAssociationIdDecoded
        let networkAclIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkAclId)
        networkAclId = networkAclIdDecoded
        let subnetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subnetId)
        subnetId = subnetIdDecoded
    }
}
