// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AssociateTrunkInterfaceInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let branchInterfaceId = branchInterfaceId {
            try container.encode(branchInterfaceId, forKey: ClientRuntime.Key("BranchInterfaceId"))
        }
        if let clientToken = clientToken {
            try container.encode(clientToken, forKey: ClientRuntime.Key("ClientToken"))
        }
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let greKey = greKey {
            try container.encode(greKey, forKey: ClientRuntime.Key("GreKey"))
        }
        if let trunkInterfaceId = trunkInterfaceId {
            try container.encode(trunkInterfaceId, forKey: ClientRuntime.Key("TrunkInterfaceId"))
        }
        if let vlanId = vlanId {
            try container.encode(vlanId, forKey: ClientRuntime.Key("VlanId"))
        }
        try container.encode("AssociateTrunkInterface", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
