// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifyTransitGatewayVpcAttachmentInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let addSubnetIds = addSubnetIds {
            if !addSubnetIds.isEmpty {
                for (index0, subnetid0) in addSubnetIds.enumerated() {
                    var addSubnetIdsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("AddSubnetIds.\(index0.advanced(by: 1))"))
                    try addSubnetIdsContainer0.encode(subnetid0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var addSubnetIdsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("AddSubnetIds"))
                try addSubnetIdsContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let options = options {
            try container.encode(options, forKey: ClientRuntime.Key("Options"))
        }
        if let removeSubnetIds = removeSubnetIds {
            if !removeSubnetIds.isEmpty {
                for (index0, subnetid0) in removeSubnetIds.enumerated() {
                    var removeSubnetIdsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("RemoveSubnetIds.\(index0.advanced(by: 1))"))
                    try removeSubnetIdsContainer0.encode(subnetid0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var removeSubnetIdsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("RemoveSubnetIds"))
                try removeSubnetIdsContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        if let transitGatewayAttachmentId = transitGatewayAttachmentId {
            try container.encode(transitGatewayAttachmentId, forKey: ClientRuntime.Key("TransitGatewayAttachmentId"))
        }
        try container.encode("ModifyTransitGatewayVpcAttachment", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
