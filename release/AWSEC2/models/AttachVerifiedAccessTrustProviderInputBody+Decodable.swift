// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AttachVerifiedAccessTrustProviderInputBody: Swift.Equatable {
    let verifiedAccessInstanceId: Swift.String?
    let verifiedAccessTrustProviderId: Swift.String?
    let clientToken: Swift.String?
    let dryRun: Swift.Bool?
}

extension AttachVerifiedAccessTrustProviderInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case dryRun = "DryRun"
        case verifiedAccessInstanceId = "VerifiedAccessInstanceId"
        case verifiedAccessTrustProviderId = "VerifiedAccessTrustProviderId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let verifiedAccessInstanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .verifiedAccessInstanceId)
        verifiedAccessInstanceId = verifiedAccessInstanceIdDecoded
        let verifiedAccessTrustProviderIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .verifiedAccessTrustProviderId)
        verifiedAccessTrustProviderId = verifiedAccessTrustProviderIdDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
