// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct RestoreSnapshotFromRecycleBinOutputResponse: Swift.Equatable {
    /// The description for the snapshot.
    public var description: Swift.String?
    /// Indicates whether the snapshot is encrypted.
    public var encrypted: Swift.Bool?
    /// The ARN of the Outpost on which the snapshot is stored. For more information, see [Amazon EBS local snapshots on Outposts](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html) in the Amazon Elastic Compute Cloud User Guide.
    public var outpostArn: Swift.String?
    /// The ID of the Amazon Web Services account that owns the EBS snapshot.
    public var ownerId: Swift.String?
    /// The progress of the snapshot, as a percentage.
    public var progress: Swift.String?
    /// The ID of the snapshot.
    public var snapshotId: Swift.String?
    /// The time stamp when the snapshot was initiated.
    public var startTime: ClientRuntime.Date?
    /// The state of the snapshot.
    public var state: Ec2ClientTypes.SnapshotState?
    /// The ID of the volume that was used to create the snapshot.
    public var volumeId: Swift.String?
    /// The size of the volume, in GiB.
    public var volumeSize: Swift.Int?

    public init (
        description: Swift.String? = nil,
        encrypted: Swift.Bool? = nil,
        outpostArn: Swift.String? = nil,
        ownerId: Swift.String? = nil,
        progress: Swift.String? = nil,
        snapshotId: Swift.String? = nil,
        startTime: ClientRuntime.Date? = nil,
        state: Ec2ClientTypes.SnapshotState? = nil,
        volumeId: Swift.String? = nil,
        volumeSize: Swift.Int? = nil
    )
    {
        self.description = description
        self.encrypted = encrypted
        self.outpostArn = outpostArn
        self.ownerId = ownerId
        self.progress = progress
        self.snapshotId = snapshotId
        self.startTime = startTime
        self.state = state
        self.volumeId = volumeId
        self.volumeSize = volumeSize
    }
}
