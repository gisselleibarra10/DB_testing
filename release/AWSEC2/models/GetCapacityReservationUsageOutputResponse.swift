// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetCapacityReservationUsageOutputResponse: Swift.Equatable {
    /// The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.
    public var availableInstanceCount: Swift.Int?
    /// The ID of the Capacity Reservation.
    public var capacityReservationId: Swift.String?
    /// The type of instance for which the Capacity Reservation reserves capacity.
    public var instanceType: Swift.String?
    /// Information about the Capacity Reservation usage.
    public var instanceUsages: [EC2ClientTypes.InstanceUsage]?
    /// The token to use to retrieve the next page of results. This value is null when there are no more results to return.
    public var nextToken: Swift.String?
    /// The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:
    ///
    /// * active - The Capacity Reservation is active and the capacity is available for your use.
    ///
    /// * expired - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.
    ///
    /// * cancelled - The Capacity Reservation was cancelled. The reserved capacity is no longer available for your use.
    ///
    /// * pending - The Capacity Reservation request was successful but the capacity provisioning is still pending.
    ///
    /// * failed - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.
    public var state: EC2ClientTypes.CapacityReservationState?
    /// The number of instances for which the Capacity Reservation reserves capacity.
    public var totalInstanceCount: Swift.Int?

    public init (
        availableInstanceCount: Swift.Int? = nil,
        capacityReservationId: Swift.String? = nil,
        instanceType: Swift.String? = nil,
        instanceUsages: [EC2ClientTypes.InstanceUsage]? = nil,
        nextToken: Swift.String? = nil,
        state: EC2ClientTypes.CapacityReservationState? = nil,
        totalInstanceCount: Swift.Int? = nil
    )
    {
        self.availableInstanceCount = availableInstanceCount
        self.capacityReservationId = capacityReservationId
        self.instanceType = instanceType
        self.instanceUsages = instanceUsages
        self.nextToken = nextToken
        self.state = state
        self.totalInstanceCount = totalInstanceCount
    }
}
