// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AttachClassicLinkVpcInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let groups = groups {
            if !groups.isEmpty {
                for (index0, securitygroupid0) in groups.enumerated() {
                    var groupsContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("SecurityGroupId.\(index0.advanced(by: 1))"))
                    try groupsContainer0.encode(securitygroupid0, forKey: ClientRuntime.Key(""))
                }
            }
        }
        if let instanceId = instanceId {
            try container.encode(instanceId, forKey: ClientRuntime.Key("InstanceId"))
        }
        if let vpcId = vpcId {
            try container.encode(vpcId, forKey: ClientRuntime.Key("VpcId"))
        }
        try container.encode("AttachClassicLinkVpc", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
