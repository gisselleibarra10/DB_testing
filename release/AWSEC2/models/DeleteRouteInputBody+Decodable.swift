// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteRouteInputBody: Swift.Equatable {
    let destinationCidrBlock: Swift.String?
    let destinationIpv6CidrBlock: Swift.String?
    let destinationPrefixListId: Swift.String?
    let dryRun: Swift.Bool?
    let routeTableId: Swift.String?
}

extension DeleteRouteInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationCidrBlock = "destinationCidrBlock"
        case destinationIpv6CidrBlock = "destinationIpv6CidrBlock"
        case destinationPrefixListId = "DestinationPrefixListId"
        case dryRun = "dryRun"
        case routeTableId = "routeTableId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationCidrBlockDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationCidrBlock)
        destinationCidrBlock = destinationCidrBlockDecoded
        let destinationIpv6CidrBlockDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationIpv6CidrBlock)
        destinationIpv6CidrBlock = destinationIpv6CidrBlockDecoded
        let destinationPrefixListIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationPrefixListId)
        destinationPrefixListId = destinationPrefixListIdDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let routeTableIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .routeTableId)
        routeTableId = routeTableIdDecoded
    }
}
