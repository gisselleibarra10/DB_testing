// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes {
    /// Describes a Network Access Scope analysis.
    public struct NetworkInsightsAccessScopeAnalysis: Swift.Equatable {
        /// The number of network interfaces analyzed.
        public var analyzedEniCount: Swift.Int?
        /// The analysis end date.
        public var endDate: ClientRuntime.Date?
        /// Indicates whether there are findings.
        public var findingsFound: Ec2ClientTypes.FindingsFound?
        /// The Amazon Resource Name (ARN) of the Network Access Scope analysis.
        public var networkInsightsAccessScopeAnalysisArn: Swift.String?
        /// The ID of the Network Access Scope analysis.
        public var networkInsightsAccessScopeAnalysisId: Swift.String?
        /// The ID of the Network Access Scope.
        public var networkInsightsAccessScopeId: Swift.String?
        /// The analysis start date.
        public var startDate: ClientRuntime.Date?
        /// The status.
        public var status: Ec2ClientTypes.AnalysisStatus?
        /// The status message.
        public var statusMessage: Swift.String?
        /// The tags.
        public var tags: [Ec2ClientTypes.Tag]?
        /// The warning message.
        public var warningMessage: Swift.String?

        public init (
            analyzedEniCount: Swift.Int? = nil,
            endDate: ClientRuntime.Date? = nil,
            findingsFound: Ec2ClientTypes.FindingsFound? = nil,
            networkInsightsAccessScopeAnalysisArn: Swift.String? = nil,
            networkInsightsAccessScopeAnalysisId: Swift.String? = nil,
            networkInsightsAccessScopeId: Swift.String? = nil,
            startDate: ClientRuntime.Date? = nil,
            status: Ec2ClientTypes.AnalysisStatus? = nil,
            statusMessage: Swift.String? = nil,
            tags: [Ec2ClientTypes.Tag]? = nil,
            warningMessage: Swift.String? = nil
        )
        {
            self.analyzedEniCount = analyzedEniCount
            self.endDate = endDate
            self.findingsFound = findingsFound
            self.networkInsightsAccessScopeAnalysisArn = networkInsightsAccessScopeAnalysisArn
            self.networkInsightsAccessScopeAnalysisId = networkInsightsAccessScopeAnalysisId
            self.networkInsightsAccessScopeId = networkInsightsAccessScopeId
            self.startDate = startDate
            self.status = status
            self.statusMessage = statusMessage
            self.tags = tags
            self.warningMessage = warningMessage
        }
    }

}
