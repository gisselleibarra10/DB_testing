// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.VerifiedAccessLogOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cloudWatchLogs = "CloudWatchLogs"
        case kinesisDataFirehose = "KinesisDataFirehose"
        case s3 = "S3"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let cloudWatchLogs = cloudWatchLogs {
            try container.encode(cloudWatchLogs, forKey: ClientRuntime.Key("CloudWatchLogs"))
        }
        if let kinesisDataFirehose = kinesisDataFirehose {
            try container.encode(kinesisDataFirehose, forKey: ClientRuntime.Key("KinesisDataFirehose"))
        }
        if let s3 = s3 {
            try container.encode(s3, forKey: ClientRuntime.Key("S3"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3Decoded = try containerValues.decodeIfPresent(EC2ClientTypes.VerifiedAccessLogS3DestinationOptions.self, forKey: .s3)
        s3 = s3Decoded
        let cloudWatchLogsDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.VerifiedAccessLogCloudWatchLogsDestinationOptions.self, forKey: .cloudWatchLogs)
        cloudWatchLogs = cloudWatchLogsDecoded
        let kinesisDataFirehoseDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.VerifiedAccessLogKinesisDataFirehoseDestinationOptions.self, forKey: .kinesisDataFirehose)
        kinesisDataFirehose = kinesisDataFirehoseDecoded
    }
}
