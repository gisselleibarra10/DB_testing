// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// Information about a Client VPN endpoint route.
    public struct ClientVpnRoute: Swift.Equatable {
        /// The ID of the Client VPN endpoint with which the route is associated.
        public var clientVpnEndpointId: Swift.String?
        /// A brief description of the route.
        public var description: Swift.String?
        /// The IPv4 address range, in CIDR notation, of the route destination.
        public var destinationCidr: Swift.String?
        /// Indicates how the route was associated with the Client VPN endpoint. associate indicates that the route was automatically added when the target network was associated with the Client VPN endpoint. add-route indicates that the route was manually added using the CreateClientVpnRoute action.
        public var origin: Swift.String?
        /// The current state of the route.
        public var status: Ec2ClientTypes.ClientVpnRouteStatus?
        /// The ID of the subnet through which traffic is routed.
        public var targetSubnet: Swift.String?
        /// The route type.
        public var type: Swift.String?

        public init (
            clientVpnEndpointId: Swift.String? = nil,
            description: Swift.String? = nil,
            destinationCidr: Swift.String? = nil,
            origin: Swift.String? = nil,
            status: Ec2ClientTypes.ClientVpnRouteStatus? = nil,
            targetSubnet: Swift.String? = nil,
            type: Swift.String? = nil
        )
        {
            self.clientVpnEndpointId = clientVpnEndpointId
            self.description = description
            self.destinationCidr = destinationCidr
            self.origin = origin
            self.status = status
            self.targetSubnet = targetSubnet
            self.type = type
        }
    }

}
