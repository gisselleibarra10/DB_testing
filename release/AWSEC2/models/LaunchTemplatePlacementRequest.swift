// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// Describes the placement of an instance.
    public struct LaunchTemplatePlacementRequest: Swift.Equatable {
        /// The affinity setting for an instance on a Dedicated Host.
        public var affinity: Swift.String?
        /// The Availability Zone for the instance.
        public var availabilityZone: Swift.String?
        /// The name of the placement group for the instance.
        public var groupName: Swift.String?
        /// The ID of the Dedicated Host for the instance.
        public var hostId: Swift.String?
        /// The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host.
        public var hostResourceGroupArn: Swift.String?
        /// The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
        public var partitionNumber: Swift.Int?
        /// Reserved for future use.
        public var spreadDomain: Swift.String?
        /// The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.
        public var tenancy: Ec2ClientTypes.Tenancy?

        public init (
            affinity: Swift.String? = nil,
            availabilityZone: Swift.String? = nil,
            groupName: Swift.String? = nil,
            hostId: Swift.String? = nil,
            hostResourceGroupArn: Swift.String? = nil,
            partitionNumber: Swift.Int? = nil,
            spreadDomain: Swift.String? = nil,
            tenancy: Ec2ClientTypes.Tenancy? = nil
        )
        {
            self.affinity = affinity
            self.availabilityZone = availabilityZone
            self.groupName = groupName
            self.hostId = hostId
            self.hostResourceGroupArn = hostResourceGroupArn
            self.partitionNumber = partitionNumber
            self.spreadDomain = spreadDomain
            self.tenancy = tenancy
        }
    }

}
