// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.ImageRecycleBinInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "description"
        case imageId = "imageId"
        case name = "name"
        case recycleBinEnterTime = "recycleBinEnterTime"
        case recycleBinExitTime = "recycleBinExitTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let description = description {
            try container.encode(description, forKey: ClientRuntime.Key("Description"))
        }
        if let imageId = imageId {
            try container.encode(imageId, forKey: ClientRuntime.Key("ImageId"))
        }
        if let name = name {
            try container.encode(name, forKey: ClientRuntime.Key("Name"))
        }
        if let recycleBinEnterTime = recycleBinEnterTime {
            try container.encodeTimestamp(recycleBinEnterTime, format: .dateTime, forKey: ClientRuntime.Key("RecycleBinEnterTime"))
        }
        if let recycleBinExitTime = recycleBinExitTime {
            try container.encodeTimestamp(recycleBinExitTime, format: .dateTime, forKey: ClientRuntime.Key("RecycleBinExitTime"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imageId)
        imageId = imageIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let recycleBinEnterTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .recycleBinEnterTime)
        recycleBinEnterTime = recycleBinEnterTimeDecoded
        let recycleBinExitTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .recycleBinExitTime)
        recycleBinExitTime = recycleBinExitTimeDecoded
    }
}
