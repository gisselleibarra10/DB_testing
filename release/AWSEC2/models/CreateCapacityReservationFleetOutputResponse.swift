// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateCapacityReservationFleetOutputResponse: Swift.Equatable {
    /// The allocation strategy used by the Capacity Reservation Fleet.
    public var allocationStrategy: Swift.String?
    /// The ID of the Capacity Reservation Fleet.
    public var capacityReservationFleetId: Swift.String?
    /// The date and time at which the Capacity Reservation Fleet was created.
    public var createTime: ClientRuntime.Date?
    /// The date and time at which the Capacity Reservation Fleet expires.
    public var endDate: ClientRuntime.Date?
    /// Information about the individual Capacity Reservations in the Capacity Reservation Fleet.
    public var fleetCapacityReservations: [Ec2ClientTypes.FleetCapacityReservation]?
    /// The instance matching criteria for the Capacity Reservation Fleet.
    public var instanceMatchCriteria: Ec2ClientTypes.FleetInstanceMatchCriteria?
    /// The status of the Capacity Reservation Fleet.
    public var state: Ec2ClientTypes.CapacityReservationFleetState?
    /// The tags assigned to the Capacity Reservation Fleet.
    public var tags: [Ec2ClientTypes.Tag]?
    /// Indicates the tenancy of Capacity Reservation Fleet.
    public var tenancy: Ec2ClientTypes.FleetCapacityReservationTenancy?
    /// The requested capacity units that have been successfully reserved.
    public var totalFulfilledCapacity: Swift.Double?
    /// The total number of capacity units for which the Capacity Reservation Fleet reserves capacity.
    public var totalTargetCapacity: Swift.Int?

    public init (
        allocationStrategy: Swift.String? = nil,
        capacityReservationFleetId: Swift.String? = nil,
        createTime: ClientRuntime.Date? = nil,
        endDate: ClientRuntime.Date? = nil,
        fleetCapacityReservations: [Ec2ClientTypes.FleetCapacityReservation]? = nil,
        instanceMatchCriteria: Ec2ClientTypes.FleetInstanceMatchCriteria? = nil,
        state: Ec2ClientTypes.CapacityReservationFleetState? = nil,
        tags: [Ec2ClientTypes.Tag]? = nil,
        tenancy: Ec2ClientTypes.FleetCapacityReservationTenancy? = nil,
        totalFulfilledCapacity: Swift.Double? = nil,
        totalTargetCapacity: Swift.Int? = nil
    )
    {
        self.allocationStrategy = allocationStrategy
        self.capacityReservationFleetId = capacityReservationFleetId
        self.createTime = createTime
        self.endDate = endDate
        self.fleetCapacityReservations = fleetCapacityReservations
        self.instanceMatchCriteria = instanceMatchCriteria
        self.state = state
        self.tags = tags
        self.tenancy = tenancy
        self.totalFulfilledCapacity = totalFulfilledCapacity
        self.totalTargetCapacity = totalTargetCapacity
    }
}
