// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetVpnConnectionDeviceSampleConfigurationInputBody: Swift.Equatable {
    let vpnConnectionId: Swift.String?
    let vpnConnectionDeviceTypeId: Swift.String?
    let internetKeyExchangeVersion: Swift.String?
    let dryRun: Swift.Bool?
}

extension GetVpnConnectionDeviceSampleConfigurationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "DryRun"
        case internetKeyExchangeVersion = "InternetKeyExchangeVersion"
        case vpnConnectionDeviceTypeId = "VpnConnectionDeviceTypeId"
        case vpnConnectionId = "VpnConnectionId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vpnConnectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpnConnectionId)
        vpnConnectionId = vpnConnectionIdDecoded
        let vpnConnectionDeviceTypeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpnConnectionDeviceTypeId)
        vpnConnectionDeviceTypeId = vpnConnectionDeviceTypeIdDecoded
        let internetKeyExchangeVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .internetKeyExchangeVersion)
        internetKeyExchangeVersion = internetKeyExchangeVersionDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
