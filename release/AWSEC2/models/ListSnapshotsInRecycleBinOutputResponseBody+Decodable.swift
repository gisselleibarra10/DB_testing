// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSnapshotsInRecycleBinOutputResponseBody: Swift.Equatable {
    let snapshots: [EC2ClientTypes.SnapshotRecycleBinInfo]?
    let nextToken: Swift.String?
}

extension ListSnapshotsInRecycleBinOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case snapshots = "snapshotSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.snapshots) {
            struct KeyVal0{struct item{}}
            let snapshotsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .snapshots)
            if let snapshotsWrappedContainer = snapshotsWrappedContainer {
                let snapshotsContainer = try snapshotsWrappedContainer.decodeIfPresent([EC2ClientTypes.SnapshotRecycleBinInfo].self, forKey: .member)
                var snapshotsBuffer:[EC2ClientTypes.SnapshotRecycleBinInfo]? = nil
                if let snapshotsContainer = snapshotsContainer {
                    snapshotsBuffer = [EC2ClientTypes.SnapshotRecycleBinInfo]()
                    for structureContainer0 in snapshotsContainer {
                        snapshotsBuffer?.append(structureContainer0)
                    }
                }
                snapshots = snapshotsBuffer
            } else {
                snapshots = []
            }
        } else {
            snapshots = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
