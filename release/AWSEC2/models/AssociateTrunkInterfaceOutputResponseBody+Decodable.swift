// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateTrunkInterfaceOutputResponseBody: Swift.Equatable {
    let interfaceAssociation: EC2ClientTypes.TrunkInterfaceAssociation?
    let clientToken: Swift.String?
}

extension AssociateTrunkInterfaceOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "clientToken"
        case interfaceAssociation = "interfaceAssociation"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let interfaceAssociationDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.TrunkInterfaceAssociation.self, forKey: .interfaceAssociation)
        interfaceAssociation = interfaceAssociationDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
