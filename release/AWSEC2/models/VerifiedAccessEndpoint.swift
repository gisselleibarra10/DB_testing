// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EC2ClientTypes {
    /// An Amazon Web Services Verified Access endpoint specifies the application that Amazon Web Services Verified Access provides access to. It must be attached to an Amazon Web Services Verified Access group. An Amazon Web Services Verified Access endpoint must also have an attached access policy before you attached it to a group.
    public struct VerifiedAccessEndpoint: Swift.Equatable {
        /// The DNS name for users to reach your application.
        public var applicationDomain: Swift.String?
        /// The type of attachment used to provide connectivity between the Amazon Web Services Verified Access endpoint and the application.
        public var attachmentType: EC2ClientTypes.VerifiedAccessEndpointAttachmentType?
        /// The creation time.
        public var creationTime: Swift.String?
        /// The deletion time.
        public var deletionTime: Swift.String?
        /// A description for the Amazon Web Services Verified Access endpoint.
        public var description: Swift.String?
        /// Returned if endpoint has a device trust provider attached.
        public var deviceValidationDomain: Swift.String?
        /// The ARN of a public TLS/SSL certificate imported into or created with ACM.
        public var domainCertificateArn: Swift.String?
        /// A DNS name that is generated for the endpoint.
        public var endpointDomain: Swift.String?
        /// The type of Amazon Web Services Verified Access endpoint. Incoming application requests will be sent to an IP address, load balancer or a network interface depending on the endpoint type specified.
        public var endpointType: EC2ClientTypes.VerifiedAccessEndpointType?
        /// The last updated time.
        public var lastUpdatedTime: Swift.String?
        /// The load balancer details if creating the Amazon Web Services Verified Access endpoint as load-balancertype.
        public var loadBalancerOptions: EC2ClientTypes.VerifiedAccessEndpointLoadBalancerOptions?
        /// The options for network-interface type endpoint.
        public var networkInterfaceOptions: EC2ClientTypes.VerifiedAccessEndpointEniOptions?
        /// The IDs of the security groups for the endpoint.
        public var securityGroupIds: [Swift.String]?
        /// The endpoint status.
        public var status: EC2ClientTypes.VerifiedAccessEndpointStatus?
        /// The tags.
        public var tags: [EC2ClientTypes.Tag]?
        /// The ID of the Amazon Web Services Verified Access endpoint.
        public var verifiedAccessEndpointId: Swift.String?
        /// The ID of the Amazon Web Services Verified Access group.
        public var verifiedAccessGroupId: Swift.String?
        /// The ID of the Amazon Web Services Verified Access instance.
        public var verifiedAccessInstanceId: Swift.String?

        public init (
            applicationDomain: Swift.String? = nil,
            attachmentType: EC2ClientTypes.VerifiedAccessEndpointAttachmentType? = nil,
            creationTime: Swift.String? = nil,
            deletionTime: Swift.String? = nil,
            description: Swift.String? = nil,
            deviceValidationDomain: Swift.String? = nil,
            domainCertificateArn: Swift.String? = nil,
            endpointDomain: Swift.String? = nil,
            endpointType: EC2ClientTypes.VerifiedAccessEndpointType? = nil,
            lastUpdatedTime: Swift.String? = nil,
            loadBalancerOptions: EC2ClientTypes.VerifiedAccessEndpointLoadBalancerOptions? = nil,
            networkInterfaceOptions: EC2ClientTypes.VerifiedAccessEndpointEniOptions? = nil,
            securityGroupIds: [Swift.String]? = nil,
            status: EC2ClientTypes.VerifiedAccessEndpointStatus? = nil,
            tags: [EC2ClientTypes.Tag]? = nil,
            verifiedAccessEndpointId: Swift.String? = nil,
            verifiedAccessGroupId: Swift.String? = nil,
            verifiedAccessInstanceId: Swift.String? = nil
        )
        {
            self.applicationDomain = applicationDomain
            self.attachmentType = attachmentType
            self.creationTime = creationTime
            self.deletionTime = deletionTime
            self.description = description
            self.deviceValidationDomain = deviceValidationDomain
            self.domainCertificateArn = domainCertificateArn
            self.endpointDomain = endpointDomain
            self.endpointType = endpointType
            self.lastUpdatedTime = lastUpdatedTime
            self.loadBalancerOptions = loadBalancerOptions
            self.networkInterfaceOptions = networkInterfaceOptions
            self.securityGroupIds = securityGroupIds
            self.status = status
            self.tags = tags
            self.verifiedAccessEndpointId = verifiedAccessEndpointId
            self.verifiedAccessGroupId = verifiedAccessGroupId
            self.verifiedAccessInstanceId = verifiedAccessInstanceId
        }
    }

}
