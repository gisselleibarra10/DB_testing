// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.ReservationValue: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hourlyPrice = "hourlyPrice"
        case remainingTotalValue = "remainingTotalValue"
        case remainingUpfrontValue = "remainingUpfrontValue"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let hourlyPrice = hourlyPrice {
            try container.encode(hourlyPrice, forKey: ClientRuntime.Key("HourlyPrice"))
        }
        if let remainingTotalValue = remainingTotalValue {
            try container.encode(remainingTotalValue, forKey: ClientRuntime.Key("RemainingTotalValue"))
        }
        if let remainingUpfrontValue = remainingUpfrontValue {
            try container.encode(remainingUpfrontValue, forKey: ClientRuntime.Key("RemainingUpfrontValue"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hourlyPriceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hourlyPrice)
        hourlyPrice = hourlyPriceDecoded
        let remainingTotalValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .remainingTotalValue)
        remainingTotalValue = remainingTotalValueDecoded
        let remainingUpfrontValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .remainingUpfrontValue)
        remainingUpfrontValue = remainingUpfrontValueDecoded
    }
}
