// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeNetworkInsightsAnalysesInput: Swift.Equatable {
    /// The time when the network insights analyses ended.
    public var analysisEndTime: ClientRuntime.Date?
    /// The time when the network insights analyses started.
    public var analysisStartTime: ClientRuntime.Date?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The filters. The following are the possible values:
    ///
    /// * path-found - A Boolean value that indicates whether a feasible path is found.
    ///
    /// * status - The status of the analysis (running | succeeded | failed).
    public var filters: [EC2ClientTypes.Filter]?
    /// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.
    public var maxResults: Swift.Int?
    /// The ID of the network insights analyses. You must specify either analysis IDs or a path ID.
    public var networkInsightsAnalysisIds: [Swift.String]?
    /// The ID of the path. You must specify either a path ID or analysis IDs.
    public var networkInsightsPathId: Swift.String?
    /// The token for the next page of results.
    public var nextToken: Swift.String?

    public init (
        analysisEndTime: ClientRuntime.Date? = nil,
        analysisStartTime: ClientRuntime.Date? = nil,
        dryRun: Swift.Bool? = nil,
        filters: [EC2ClientTypes.Filter]? = nil,
        maxResults: Swift.Int? = nil,
        networkInsightsAnalysisIds: [Swift.String]? = nil,
        networkInsightsPathId: Swift.String? = nil,
        nextToken: Swift.String? = nil
    )
    {
        self.analysisEndTime = analysisEndTime
        self.analysisStartTime = analysisStartTime
        self.dryRun = dryRun
        self.filters = filters
        self.maxResults = maxResults
        self.networkInsightsAnalysisIds = networkInsightsAnalysisIds
        self.networkInsightsPathId = networkInsightsPathId
        self.nextToken = nextToken
    }
}
