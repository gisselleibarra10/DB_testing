// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteVpcEndpointServiceConfigurationsInputBody: Swift.Equatable {
    let dryRun: Swift.Bool?
    let serviceIds: [Swift.String]?
}

extension DeleteVpcEndpointServiceConfigurationsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dryRun = "DryRun"
        case serviceIds = "ServiceId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        if containerValues.contains(.serviceIds) {
            struct KeyVal0{struct item{}}
            let serviceIdsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .serviceIds)
            if let serviceIdsWrappedContainer = serviceIdsWrappedContainer {
                let serviceIdsContainer = try serviceIdsWrappedContainer.decodeIfPresent([Swift.String].self, forKey: .member)
                var serviceIdsBuffer:[Swift.String]? = nil
                if let serviceIdsContainer = serviceIdsContainer {
                    serviceIdsBuffer = [Swift.String]()
                    for stringContainer0 in serviceIdsContainer {
                        serviceIdsBuffer?.append(stringContainer0)
                    }
                }
                serviceIds = serviceIdsBuffer
            } else {
                serviceIds = []
            }
        } else {
            serviceIds = nil
        }
    }
}
