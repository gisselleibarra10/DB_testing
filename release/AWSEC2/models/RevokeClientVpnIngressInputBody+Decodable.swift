// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RevokeClientVpnIngressInputBody: Swift.Equatable {
    let clientVpnEndpointId: Swift.String?
    let targetNetworkCidr: Swift.String?
    let accessGroupId: Swift.String?
    let revokeAllGroups: Swift.Bool?
    let dryRun: Swift.Bool?
}

extension RevokeClientVpnIngressInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessGroupId = "AccessGroupId"
        case clientVpnEndpointId = "ClientVpnEndpointId"
        case dryRun = "DryRun"
        case revokeAllGroups = "RevokeAllGroups"
        case targetNetworkCidr = "TargetNetworkCidr"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientVpnEndpointIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientVpnEndpointId)
        clientVpnEndpointId = clientVpnEndpointIdDecoded
        let targetNetworkCidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetNetworkCidr)
        targetNetworkCidr = targetNetworkCidrDecoded
        let accessGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accessGroupId)
        accessGroupId = accessGroupIdDecoded
        let revokeAllGroupsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .revokeAllGroups)
        revokeAllGroups = revokeAllGroupsDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
