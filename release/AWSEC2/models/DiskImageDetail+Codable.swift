// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.DiskImageDetail: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bytes = "bytes"
        case format = "format"
        case importManifestUrl = "importManifestUrl"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let bytes = bytes {
            try container.encode(bytes, forKey: ClientRuntime.Key("Bytes"))
        }
        if let format = format {
            try container.encode(format, forKey: ClientRuntime.Key("Format"))
        }
        if let importManifestUrl = importManifestUrl {
            try container.encode(importManifestUrl, forKey: ClientRuntime.Key("ImportManifestUrl"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .bytes)
        bytes = bytesDecoded
        let formatDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.DiskImageFormat.self, forKey: .format)
        format = formatDecoded
        let importManifestUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .importManifestUrl)
        importManifestUrl = importManifestUrlDecoded
    }
}
