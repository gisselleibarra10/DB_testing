// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateSubnetInput: Swift.Equatable {
    /// The Availability Zone or Local Zone for the subnet. Default: Amazon Web Services selects one for you. If you create more than one subnet in your VPC, we do not necessarily select a different zone for each subnet. To create a subnet in a Local Zone, set this value to the Local Zone ID, for example us-west-2-lax-1a. For information about the Regions that support Local Zones, see [Available Regions](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions) in the Amazon Elastic Compute Cloud User Guide. To create a subnet in an Outpost, set this value to the Availability Zone for the Outpost and specify the Outpost ARN.
    public var availabilityZone: Swift.String?
    /// The AZ ID or the Local Zone ID of the subnet.
    public var availabilityZoneId: Swift.String?
    /// The IPv4 network range for the subnet, in CIDR notation. For example, 10.0.0.0/24. We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18, we modify it to 100.68.0.0/18. This parameter is not supported for an IPv6 only subnet.
    public var cidrBlock: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length. This parameter is required for an IPv6 only subnet.
    public var ipv6CidrBlock: Swift.String?
    /// Indicates whether to create an IPv6 only subnet.
    public var ipv6Native: Swift.Bool?
    /// The Amazon Resource Name (ARN) of the Outpost. If you specify an Outpost ARN, you must also specify the Availability Zone of the Outpost subnet.
    public var outpostArn: Swift.String?
    /// The tags to assign to the subnet.
    public var tagSpecifications: [EC2ClientTypes.TagSpecification]?
    /// The ID of the VPC.
    /// This member is required.
    public var vpcId: Swift.String?

    public init (
        availabilityZone: Swift.String? = nil,
        availabilityZoneId: Swift.String? = nil,
        cidrBlock: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        ipv6CidrBlock: Swift.String? = nil,
        ipv6Native: Swift.Bool? = nil,
        outpostArn: Swift.String? = nil,
        tagSpecifications: [EC2ClientTypes.TagSpecification]? = nil,
        vpcId: Swift.String? = nil
    )
    {
        self.availabilityZone = availabilityZone
        self.availabilityZoneId = availabilityZoneId
        self.cidrBlock = cidrBlock
        self.dryRun = dryRun
        self.ipv6CidrBlock = ipv6CidrBlock
        self.ipv6Native = ipv6Native
        self.outpostArn = outpostArn
        self.tagSpecifications = tagSpecifications
        self.vpcId = vpcId
    }
}
