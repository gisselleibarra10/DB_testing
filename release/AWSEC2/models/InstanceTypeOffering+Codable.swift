// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ec2ClientTypes.InstanceTypeOffering: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case instanceType = "instanceType"
        case location = "location"
        case locationType = "locationType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let instanceType = instanceType {
            try container.encode(instanceType, forKey: ClientRuntime.Key("InstanceType"))
        }
        if let location = location {
            try container.encode(location, forKey: ClientRuntime.Key("Location"))
        }
        if let locationType = locationType {
            try container.encode(locationType, forKey: ClientRuntime.Key("LocationType"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceTypeDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.InstanceType.self, forKey: .instanceType)
        instanceType = instanceTypeDecoded
        let locationTypeDecoded = try containerValues.decodeIfPresent(Ec2ClientTypes.LocationType.self, forKey: .locationType)
        locationType = locationTypeDecoded
        let locationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .location)
        location = locationDecoded
    }
}
