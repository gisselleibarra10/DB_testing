// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetHostReservationPurchasePreviewInputBody: Swift.Equatable {
    let hostIdSet: [Swift.String]?
    let offeringId: Swift.String?
}

extension GetHostReservationPurchasePreviewInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hostIdSet = "HostIdSet"
        case offeringId = "OfferingId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.hostIdSet) {
            struct KeyVal0{struct item{}}
            let hostIdSetWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .hostIdSet)
            if let hostIdSetWrappedContainer = hostIdSetWrappedContainer {
                let hostIdSetContainer = try hostIdSetWrappedContainer.decodeIfPresent([Swift.String].self, forKey: .member)
                var hostIdSetBuffer:[Swift.String]? = nil
                if let hostIdSetContainer = hostIdSetContainer {
                    hostIdSetBuffer = [Swift.String]()
                    for stringContainer0 in hostIdSetContainer {
                        hostIdSetBuffer?.append(stringContainer0)
                    }
                }
                hostIdSet = hostIdSetBuffer
            } else {
                hostIdSet = []
            }
        } else {
            hostIdSet = nil
        }
        let offeringIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .offeringId)
        offeringId = offeringIdDecoded
    }
}
