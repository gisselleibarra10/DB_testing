// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    public enum TransitGatewayAttachmentState: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case available
        case deleted
        case deleting
        case failed
        case failing
        case initiating
        case initiatingrequest
        case modifying
        case pending
        case pendingacceptance
        case rejected
        case rejecting
        case rollingback
        case sdkUnknown(Swift.String)

        public static var allCases: [TransitGatewayAttachmentState] {
            return [
                .available,
                .deleted,
                .deleting,
                .failed,
                .failing,
                .initiating,
                .initiatingrequest,
                .modifying,
                .pending,
                .pendingacceptance,
                .rejected,
                .rejecting,
                .rollingback,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .available: return "available"
            case .deleted: return "deleted"
            case .deleting: return "deleting"
            case .failed: return "failed"
            case .failing: return "failing"
            case .initiating: return "initiating"
            case .initiatingrequest: return "initiatingRequest"
            case .modifying: return "modifying"
            case .pending: return "pending"
            case .pendingacceptance: return "pendingAcceptance"
            case .rejected: return "rejected"
            case .rejecting: return "rejecting"
            case .rollingback: return "rollingBack"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = TransitGatewayAttachmentState(rawValue: rawValue) ?? TransitGatewayAttachmentState.sdkUnknown(rawValue)
        }
    }
}
