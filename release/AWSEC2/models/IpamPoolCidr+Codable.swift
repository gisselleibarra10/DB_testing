// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.IpamPoolCidr: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cidr = "cidr"
        case failureReason = "failureReason"
        case state = "state"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let cidr = cidr {
            try container.encode(cidr, forKey: ClientRuntime.Key("Cidr"))
        }
        if let failureReason = failureReason {
            try container.encode(failureReason, forKey: ClientRuntime.Key("FailureReason"))
        }
        if let state = state {
            try container.encode(state, forKey: ClientRuntime.Key("State"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cidr)
        cidr = cidrDecoded
        let stateDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.IpamPoolCidrState.self, forKey: .state)
        state = stateDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.IpamPoolCidrFailureReason.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
    }
}
