// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EC2ClientTypes {
    /// The information to include in the launch template. You must specify at least one parameter for the launch template data.
    public struct RequestLaunchTemplateData: Swift.Equatable {
        /// The block device mapping.
        public var blockDeviceMappings: [EC2ClientTypes.LaunchTemplateBlockDeviceMappingRequest]?
        /// The Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to open, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
        public var capacityReservationSpecification: EC2ClientTypes.LaunchTemplateCapacityReservationSpecificationRequest?
        /// The CPU options for the instance. For more information, see [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the Amazon Elastic Compute Cloud User Guide.
        public var cpuOptions: EC2ClientTypes.LaunchTemplateCpuOptionsRequest?
        /// The credit option for CPU usage of the instance. Valid only for T instances.
        public var creditSpecification: EC2ClientTypes.CreditSpecificationRequest?
        /// Indicates whether to enable the instance for stop protection. For more information, see [Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
        public var disableApiStop: Swift.Bool?
        /// If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use [ModifyInstanceAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html). Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can terminate the instance by running the shutdown command from the instance.
        public var disableApiTermination: Swift.Bool?
        /// Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.
        public var ebsOptimized: Swift.Bool?
        /// An elastic GPU to associate with the instance.
        public var elasticGpuSpecifications: [EC2ClientTypes.ElasticGpuSpecification]?
        /// The elastic inference accelerator for the instance.
        public var elasticInferenceAccelerators: [EC2ClientTypes.LaunchTemplateElasticInferenceAccelerator]?
        /// Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see [ What is Amazon Web Services Nitro Enclaves?](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html) in the Amazon Web Services Nitro Enclaves User Guide. You can't enable Amazon Web Services Nitro Enclaves and hibernation on the same instance.
        public var enclaveOptions: EC2ClientTypes.LaunchTemplateEnclaveOptionsRequest?
        /// Indicates whether an instance is enabled for hibernation. This parameter is valid only if the instance meets the [hibernation prerequisites](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-prerequisites.html). For more information, see [Hibernate your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the Amazon Elastic Compute Cloud User Guide.
        public var hibernationOptions: EC2ClientTypes.LaunchTemplateHibernationOptionsRequest?
        /// The name or Amazon Resource Name (ARN) of an IAM instance profile.
        public var iamInstanceProfile: EC2ClientTypes.LaunchTemplateIamInstanceProfileSpecificationRequest?
        /// The ID of the AMI.
        public var imageId: Swift.String?
        /// Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown). Default: stop
        public var instanceInitiatedShutdownBehavior: EC2ClientTypes.ShutdownBehavior?
        /// The market (purchasing) option for the instances.
        public var instanceMarketOptions: EC2ClientTypes.LaunchTemplateInstanceMarketOptionsRequest?
        /// The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes. If you specify InstanceRequirements, you can't specify InstanceType.
        public var instanceRequirements: EC2ClientTypes.InstanceRequirementsRequest?
        /// The instance type. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the Amazon Elastic Compute Cloud User Guide. If you specify InstanceType, you can't specify InstanceRequirements.
        public var instanceType: EC2ClientTypes.InstanceType?
        /// The ID of the kernel. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [User provided kernels](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the Amazon Elastic Compute Cloud User Guide.
        public var kernelId: Swift.String?
        /// The name of the key pair. You can create a key pair using [CreateKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or [ImportKeyPair](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html). If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.
        public var keyName: Swift.String?
        /// The license configurations.
        public var licenseSpecifications: [EC2ClientTypes.LaunchTemplateLicenseConfigurationRequest]?
        /// The maintenance options for the instance.
        public var maintenanceOptions: EC2ClientTypes.LaunchTemplateInstanceMaintenanceOptionsRequest?
        /// The metadata options for the instance. For more information, see [Instance metadata and user data](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) in the Amazon Elastic Compute Cloud User Guide.
        public var metadataOptions: EC2ClientTypes.LaunchTemplateInstanceMetadataOptionsRequest?
        /// The monitoring for the instance.
        public var monitoring: EC2ClientTypes.LaunchTemplatesMonitoringRequest?
        /// One or more network interfaces. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.
        public var networkInterfaces: [EC2ClientTypes.LaunchTemplateInstanceNetworkInterfaceSpecificationRequest]?
        /// The placement for the instance.
        public var placement: EC2ClientTypes.LaunchTemplatePlacementRequest?
        /// The options for the instance hostname. The default values are inherited from the subnet.
        public var privateDnsNameOptions: EC2ClientTypes.LaunchTemplatePrivateDnsNameOptionsRequest?
        /// The ID of the RAM disk. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [User provided kernels](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the Amazon Elastic Compute Cloud User Guide.
        public var ramDiskId: Swift.String?
        /// One or more security group IDs. You can create a security group using [CreateSecurityGroup](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html). You cannot specify both a security group ID and security name in the same request.
        public var securityGroupIds: [Swift.String]?
        /// One or more security group names. For a nondefault VPC, you must use security group IDs instead. You cannot specify both a security group ID and security name in the same request.
        public var securityGroups: [Swift.String]?
        /// The tags to apply to the resources that are created during instance launch. You can specify tags for the following resources only:
        ///
        /// * Instances
        ///
        /// * Volumes
        ///
        /// * Elastic graphics
        ///
        /// * Spot Instance requests
        ///
        /// * Network interfaces
        ///
        ///
        /// To tag a resource after it has been created, see [CreateTags](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html). To tag the launch template itself, you must use the [TagSpecification](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html) parameter.
        public var tagSpecifications: [EC2ClientTypes.LaunchTemplateTagSpecificationRequest]?
        /// The user data to make available to the instance. You must provide base64-encoded text. User data is limited to 16 KB. For more information, see [Run commands on your Linux instance at launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) (Linux) or [Work with instance user data](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/instancedata-add-user-data.html) (Windows) in the Amazon Elastic Compute Cloud User Guide. If you are creating the launch template for use with Batch, the user data must be provided in the [ MIME multi-part archive format](https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive). For more information, see [Amazon EC2 user data in launch templates](https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html) in the Batch User Guide.
        public var userData: Swift.String?

        public init (
            blockDeviceMappings: [EC2ClientTypes.LaunchTemplateBlockDeviceMappingRequest]? = nil,
            capacityReservationSpecification: EC2ClientTypes.LaunchTemplateCapacityReservationSpecificationRequest? = nil,
            cpuOptions: EC2ClientTypes.LaunchTemplateCpuOptionsRequest? = nil,
            creditSpecification: EC2ClientTypes.CreditSpecificationRequest? = nil,
            disableApiStop: Swift.Bool? = nil,
            disableApiTermination: Swift.Bool? = nil,
            ebsOptimized: Swift.Bool? = nil,
            elasticGpuSpecifications: [EC2ClientTypes.ElasticGpuSpecification]? = nil,
            elasticInferenceAccelerators: [EC2ClientTypes.LaunchTemplateElasticInferenceAccelerator]? = nil,
            enclaveOptions: EC2ClientTypes.LaunchTemplateEnclaveOptionsRequest? = nil,
            hibernationOptions: EC2ClientTypes.LaunchTemplateHibernationOptionsRequest? = nil,
            iamInstanceProfile: EC2ClientTypes.LaunchTemplateIamInstanceProfileSpecificationRequest? = nil,
            imageId: Swift.String? = nil,
            instanceInitiatedShutdownBehavior: EC2ClientTypes.ShutdownBehavior? = nil,
            instanceMarketOptions: EC2ClientTypes.LaunchTemplateInstanceMarketOptionsRequest? = nil,
            instanceRequirements: EC2ClientTypes.InstanceRequirementsRequest? = nil,
            instanceType: EC2ClientTypes.InstanceType? = nil,
            kernelId: Swift.String? = nil,
            keyName: Swift.String? = nil,
            licenseSpecifications: [EC2ClientTypes.LaunchTemplateLicenseConfigurationRequest]? = nil,
            maintenanceOptions: EC2ClientTypes.LaunchTemplateInstanceMaintenanceOptionsRequest? = nil,
            metadataOptions: EC2ClientTypes.LaunchTemplateInstanceMetadataOptionsRequest? = nil,
            monitoring: EC2ClientTypes.LaunchTemplatesMonitoringRequest? = nil,
            networkInterfaces: [EC2ClientTypes.LaunchTemplateInstanceNetworkInterfaceSpecificationRequest]? = nil,
            placement: EC2ClientTypes.LaunchTemplatePlacementRequest? = nil,
            privateDnsNameOptions: EC2ClientTypes.LaunchTemplatePrivateDnsNameOptionsRequest? = nil,
            ramDiskId: Swift.String? = nil,
            securityGroupIds: [Swift.String]? = nil,
            securityGroups: [Swift.String]? = nil,
            tagSpecifications: [EC2ClientTypes.LaunchTemplateTagSpecificationRequest]? = nil,
            userData: Swift.String? = nil
        )
        {
            self.blockDeviceMappings = blockDeviceMappings
            self.capacityReservationSpecification = capacityReservationSpecification
            self.cpuOptions = cpuOptions
            self.creditSpecification = creditSpecification
            self.disableApiStop = disableApiStop
            self.disableApiTermination = disableApiTermination
            self.ebsOptimized = ebsOptimized
            self.elasticGpuSpecifications = elasticGpuSpecifications
            self.elasticInferenceAccelerators = elasticInferenceAccelerators
            self.enclaveOptions = enclaveOptions
            self.hibernationOptions = hibernationOptions
            self.iamInstanceProfile = iamInstanceProfile
            self.imageId = imageId
            self.instanceInitiatedShutdownBehavior = instanceInitiatedShutdownBehavior
            self.instanceMarketOptions = instanceMarketOptions
            self.instanceRequirements = instanceRequirements
            self.instanceType = instanceType
            self.kernelId = kernelId
            self.keyName = keyName
            self.licenseSpecifications = licenseSpecifications
            self.maintenanceOptions = maintenanceOptions
            self.metadataOptions = metadataOptions
            self.monitoring = monitoring
            self.networkInterfaces = networkInterfaces
            self.placement = placement
            self.privateDnsNameOptions = privateDnsNameOptions
            self.ramDiskId = ramDiskId
            self.securityGroupIds = securityGroupIds
            self.securityGroups = securityGroups
            self.tagSpecifications = tagSpecifications
            self.userData = userData
        }
    }

}
