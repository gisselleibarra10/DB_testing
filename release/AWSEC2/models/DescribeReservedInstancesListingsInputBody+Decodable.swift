// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReservedInstancesListingsInputBody: Swift.Equatable {
    let filters: [EC2ClientTypes.Filter]?
    let reservedInstancesId: Swift.String?
    let reservedInstancesListingId: Swift.String?
}

extension DescribeReservedInstancesListingsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filters = "Filter"
        case reservedInstancesId = "reservedInstancesId"
        case reservedInstancesListingId = "reservedInstancesListingId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.filters) {
            struct KeyVal0{struct Filter{}}
            let filtersWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.Filter>.CodingKeys.self, forKey: .filters)
            if let filtersWrappedContainer = filtersWrappedContainer {
                let filtersContainer = try filtersWrappedContainer.decodeIfPresent([EC2ClientTypes.Filter].self, forKey: .member)
                var filtersBuffer:[EC2ClientTypes.Filter]? = nil
                if let filtersContainer = filtersContainer {
                    filtersBuffer = [EC2ClientTypes.Filter]()
                    for structureContainer0 in filtersContainer {
                        filtersBuffer?.append(structureContainer0)
                    }
                }
                filters = filtersBuffer
            } else {
                filters = []
            }
        } else {
            filters = nil
        }
        let reservedInstancesIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reservedInstancesId)
        reservedInstancesId = reservedInstancesIdDecoded
        let reservedInstancesListingIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reservedInstancesListingId)
        reservedInstancesListingId = reservedInstancesListingIdDecoded
    }
}
