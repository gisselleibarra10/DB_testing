// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CopyImageInputBody: Swift.Equatable {
    let clientToken: Swift.String?
    let description: Swift.String?
    let encrypted: Swift.Bool?
    let kmsKeyId: Swift.String?
    let name: Swift.String?
    let sourceImageId: Swift.String?
    let sourceRegion: Swift.String?
    let destinationOutpostArn: Swift.String?
    let dryRun: Swift.Bool?
    let copyImageTags: Swift.Bool?
}

extension CopyImageInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case copyImageTags = "CopyImageTags"
        case description = "Description"
        case destinationOutpostArn = "DestinationOutpostArn"
        case dryRun = "dryRun"
        case encrypted = "encrypted"
        case kmsKeyId = "kmsKeyId"
        case name = "Name"
        case sourceImageId = "SourceImageId"
        case sourceRegion = "SourceRegion"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let encryptedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .encrypted)
        encrypted = encryptedDecoded
        let kmsKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyId)
        kmsKeyId = kmsKeyIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let sourceImageIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceImageId)
        sourceImageId = sourceImageIdDecoded
        let sourceRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceRegion)
        sourceRegion = sourceRegionDecoded
        let destinationOutpostArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationOutpostArn)
        destinationOutpostArn = destinationOutpostArnDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let copyImageTagsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .copyImageTags)
        copyImageTags = copyImageTagsDecoded
    }
}
