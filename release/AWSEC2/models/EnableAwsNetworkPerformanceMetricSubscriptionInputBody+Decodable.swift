// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EnableAwsNetworkPerformanceMetricSubscriptionInputBody: Swift.Equatable {
    let source: Swift.String?
    let destination: Swift.String?
    let metric: EC2ClientTypes.MetricType?
    let statistic: EC2ClientTypes.StatisticType?
    let dryRun: Swift.Bool?
}

extension EnableAwsNetworkPerformanceMetricSubscriptionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destination = "Destination"
        case dryRun = "DryRun"
        case metric = "Metric"
        case source = "Source"
        case statistic = "Statistic"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .source)
        source = sourceDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destination)
        destination = destinationDecoded
        let metricDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.MetricType.self, forKey: .metric)
        metric = metricDecoded
        let statisticDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.StatisticType.self, forKey: .statistic)
        statistic = statisticDecoded
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
