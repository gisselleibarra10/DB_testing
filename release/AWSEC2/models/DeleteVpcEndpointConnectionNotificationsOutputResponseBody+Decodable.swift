// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteVpcEndpointConnectionNotificationsOutputResponseBody: Swift.Equatable {
    let unsuccessful: [Ec2ClientTypes.UnsuccessfulItem]?
}

extension DeleteVpcEndpointConnectionNotificationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case unsuccessful = "unsuccessful"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.unsuccessful) {
            struct KeyVal0{struct item{}}
            let unsuccessfulWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .unsuccessful)
            if let unsuccessfulWrappedContainer = unsuccessfulWrappedContainer {
                let unsuccessfulContainer = try unsuccessfulWrappedContainer.decodeIfPresent([Ec2ClientTypes.UnsuccessfulItem].self, forKey: .member)
                var unsuccessfulBuffer:[Ec2ClientTypes.UnsuccessfulItem]? = nil
                if let unsuccessfulContainer = unsuccessfulContainer {
                    unsuccessfulBuffer = [Ec2ClientTypes.UnsuccessfulItem]()
                    for structureContainer0 in unsuccessfulContainer {
                        unsuccessfulBuffer?.append(structureContainer0)
                    }
                }
                unsuccessful = unsuccessfulBuffer
            } else {
                unsuccessful = []
            }
        } else {
            unsuccessful = nil
        }
    }
}
