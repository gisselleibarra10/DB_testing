// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteLaunchTemplateVersionsOutputResponseBody: Swift.Equatable {
    let successfullyDeletedLaunchTemplateVersions: [Ec2ClientTypes.DeleteLaunchTemplateVersionsResponseSuccessItem]?
    let unsuccessfullyDeletedLaunchTemplateVersions: [Ec2ClientTypes.DeleteLaunchTemplateVersionsResponseErrorItem]?
}

extension DeleteLaunchTemplateVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case successfullyDeletedLaunchTemplateVersions = "successfullyDeletedLaunchTemplateVersionSet"
        case unsuccessfullyDeletedLaunchTemplateVersions = "unsuccessfullyDeletedLaunchTemplateVersionSet"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.successfullyDeletedLaunchTemplateVersions) {
            struct KeyVal0{struct item{}}
            let successfullyDeletedLaunchTemplateVersionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .successfullyDeletedLaunchTemplateVersions)
            if let successfullyDeletedLaunchTemplateVersionsWrappedContainer = successfullyDeletedLaunchTemplateVersionsWrappedContainer {
                let successfullyDeletedLaunchTemplateVersionsContainer = try successfullyDeletedLaunchTemplateVersionsWrappedContainer.decodeIfPresent([Ec2ClientTypes.DeleteLaunchTemplateVersionsResponseSuccessItem].self, forKey: .member)
                var successfullyDeletedLaunchTemplateVersionsBuffer:[Ec2ClientTypes.DeleteLaunchTemplateVersionsResponseSuccessItem]? = nil
                if let successfullyDeletedLaunchTemplateVersionsContainer = successfullyDeletedLaunchTemplateVersionsContainer {
                    successfullyDeletedLaunchTemplateVersionsBuffer = [Ec2ClientTypes.DeleteLaunchTemplateVersionsResponseSuccessItem]()
                    for structureContainer0 in successfullyDeletedLaunchTemplateVersionsContainer {
                        successfullyDeletedLaunchTemplateVersionsBuffer?.append(structureContainer0)
                    }
                }
                successfullyDeletedLaunchTemplateVersions = successfullyDeletedLaunchTemplateVersionsBuffer
            } else {
                successfullyDeletedLaunchTemplateVersions = []
            }
        } else {
            successfullyDeletedLaunchTemplateVersions = nil
        }
        if containerValues.contains(.unsuccessfullyDeletedLaunchTemplateVersions) {
            struct KeyVal0{struct item{}}
            let unsuccessfullyDeletedLaunchTemplateVersionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .unsuccessfullyDeletedLaunchTemplateVersions)
            if let unsuccessfullyDeletedLaunchTemplateVersionsWrappedContainer = unsuccessfullyDeletedLaunchTemplateVersionsWrappedContainer {
                let unsuccessfullyDeletedLaunchTemplateVersionsContainer = try unsuccessfullyDeletedLaunchTemplateVersionsWrappedContainer.decodeIfPresent([Ec2ClientTypes.DeleteLaunchTemplateVersionsResponseErrorItem].self, forKey: .member)
                var unsuccessfullyDeletedLaunchTemplateVersionsBuffer:[Ec2ClientTypes.DeleteLaunchTemplateVersionsResponseErrorItem]? = nil
                if let unsuccessfullyDeletedLaunchTemplateVersionsContainer = unsuccessfullyDeletedLaunchTemplateVersionsContainer {
                    unsuccessfullyDeletedLaunchTemplateVersionsBuffer = [Ec2ClientTypes.DeleteLaunchTemplateVersionsResponseErrorItem]()
                    for structureContainer0 in unsuccessfullyDeletedLaunchTemplateVersionsContainer {
                        unsuccessfullyDeletedLaunchTemplateVersionsBuffer?.append(structureContainer0)
                    }
                }
                unsuccessfullyDeletedLaunchTemplateVersions = unsuccessfullyDeletedLaunchTemplateVersionsBuffer
            } else {
                unsuccessfullyDeletedLaunchTemplateVersions = []
            }
        } else {
            unsuccessfullyDeletedLaunchTemplateVersions = nil
        }
    }
}
