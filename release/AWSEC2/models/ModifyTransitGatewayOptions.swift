// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Ec2ClientTypes {
    /// The transit gateway options.
    public struct ModifyTransitGatewayOptions: Swift.Equatable {
        /// Adds IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
        public var addTransitGatewayCidrBlocks: [Swift.String]?
        /// A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. The modify ASN operation is not allowed on a transit gateway with active BGP sessions. You must first delete all transit gateway attachments that have BGP configured prior to modifying the ASN on the transit gateway.
        public var amazonSideAsn: Swift.Int?
        /// The ID of the default association route table.
        public var associationDefaultRouteTableId: Swift.String?
        /// Enable or disable automatic acceptance of attachment requests.
        public var autoAcceptSharedAttachments: Ec2ClientTypes.AutoAcceptSharedAttachmentsValue?
        /// Enable or disable automatic association with the default association route table.
        public var defaultRouteTableAssociation: Ec2ClientTypes.DefaultRouteTableAssociationValue?
        /// Enable or disable automatic propagation of routes to the default propagation route table.
        public var defaultRouteTablePropagation: Ec2ClientTypes.DefaultRouteTablePropagationValue?
        /// Enable or disable DNS support.
        public var dnsSupport: Ec2ClientTypes.DnsSupportValue?
        /// The ID of the default propagation route table.
        public var propagationDefaultRouteTableId: Swift.String?
        /// Removes CIDR blocks for the transit gateway.
        public var removeTransitGatewayCidrBlocks: [Swift.String]?
        /// Enable or disable Equal Cost Multipath Protocol support.
        public var vpnEcmpSupport: Ec2ClientTypes.VpnEcmpSupportValue?

        public init (
            addTransitGatewayCidrBlocks: [Swift.String]? = nil,
            amazonSideAsn: Swift.Int? = nil,
            associationDefaultRouteTableId: Swift.String? = nil,
            autoAcceptSharedAttachments: Ec2ClientTypes.AutoAcceptSharedAttachmentsValue? = nil,
            defaultRouteTableAssociation: Ec2ClientTypes.DefaultRouteTableAssociationValue? = nil,
            defaultRouteTablePropagation: Ec2ClientTypes.DefaultRouteTablePropagationValue? = nil,
            dnsSupport: Ec2ClientTypes.DnsSupportValue? = nil,
            propagationDefaultRouteTableId: Swift.String? = nil,
            removeTransitGatewayCidrBlocks: [Swift.String]? = nil,
            vpnEcmpSupport: Ec2ClientTypes.VpnEcmpSupportValue? = nil
        )
        {
            self.addTransitGatewayCidrBlocks = addTransitGatewayCidrBlocks
            self.amazonSideAsn = amazonSideAsn
            self.associationDefaultRouteTableId = associationDefaultRouteTableId
            self.autoAcceptSharedAttachments = autoAcceptSharedAttachments
            self.defaultRouteTableAssociation = defaultRouteTableAssociation
            self.defaultRouteTablePropagation = defaultRouteTablePropagation
            self.dnsSupport = dnsSupport
            self.propagationDefaultRouteTableId = propagationDefaultRouteTableId
            self.removeTransitGatewayCidrBlocks = removeTransitGatewayCidrBlocks
            self.vpnEcmpSupport = vpnEcmpSupport
        }
    }

}
