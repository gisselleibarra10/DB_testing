// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.HistoryRecordEntry: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventInformation = "eventInformation"
        case eventType = "eventType"
        case timestamp = "timestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let eventInformation = eventInformation {
            try container.encode(eventInformation, forKey: ClientRuntime.Key("EventInformation"))
        }
        if let eventType = eventType {
            try container.encode(eventType, forKey: ClientRuntime.Key("EventType"))
        }
        if let timestamp = timestamp {
            try container.encodeTimestamp(timestamp, format: .dateTime, forKey: ClientRuntime.Key("Timestamp"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventInformationDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.EventInformation.self, forKey: .eventInformation)
        eventInformation = eventInformationDecoded
        let eventTypeDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.FleetEventType.self, forKey: .eventType)
        eventType = eventTypeDecoded
        let timestampDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .timestamp)
        timestamp = timestampDecoded
    }
}
