// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImportInstanceInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let description = description {
            try container.encode(description, forKey: ClientRuntime.Key("Description"))
        }
        if let diskImages = diskImages {
            if !diskImages.isEmpty {
                for (index0, diskimage0) in diskImages.enumerated() {
                    var diskImagesContainer0 = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("DiskImage.\(index0.advanced(by: 1))"))
                    try diskImagesContainer0.encode(diskimage0, forKey: ClientRuntime.Key(""))
                }
            }
            else {
                var diskImagesContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("DiskImage"))
                try diskImagesContainer.encode("", forKey: ClientRuntime.Key(""))
            }
        }
        if let dryRun = dryRun {
            try container.encode(dryRun, forKey: ClientRuntime.Key("DryRun"))
        }
        if let launchSpecification = launchSpecification {
            try container.encode(launchSpecification, forKey: ClientRuntime.Key("LaunchSpecification"))
        }
        if let platform = platform {
            try container.encode(platform, forKey: ClientRuntime.Key("Platform"))
        }
        try container.encode("ImportInstance", forKey:ClientRuntime.Key("Action"))
        try container.encode("2016-11-15", forKey:ClientRuntime.Key("Version"))
    }
}
