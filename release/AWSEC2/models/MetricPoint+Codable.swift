// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.MetricPoint: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case endDate = "endDate"
        case startDate = "startDate"
        case status = "status"
        case value = "value"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let endDate = endDate {
            try container.encodeTimestamp(endDate, format: .dateTime, forKey: ClientRuntime.Key("EndDate"))
        }
        if let startDate = startDate {
            try container.encodeTimestamp(startDate, format: .dateTime, forKey: ClientRuntime.Key("StartDate"))
        }
        if let status = status {
            try container.encode(status, forKey: ClientRuntime.Key("Status"))
        }
        if let value = value {
            try container.encode(value, forKey: ClientRuntime.Key("Value"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startDateDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .startDate)
        startDate = startDateDecoded
        let endDateDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .endDate)
        endDate = endDateDecoded
        let valueDecoded = try containerValues.decodeIfPresent(Swift.Float.self, forKey: .value)
        value = valueDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
    }
}
