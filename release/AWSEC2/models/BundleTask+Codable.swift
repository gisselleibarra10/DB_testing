// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ClientTypes.BundleTask: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bundleId = "bundleId"
        case bundleTaskError = "error"
        case instanceId = "instanceId"
        case progress = "progress"
        case startTime = "startTime"
        case state = "state"
        case storage = "storage"
        case updateTime = "updateTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let bundleId = bundleId {
            try container.encode(bundleId, forKey: ClientRuntime.Key("BundleId"))
        }
        if let bundleTaskError = bundleTaskError {
            try container.encode(bundleTaskError, forKey: ClientRuntime.Key("Error"))
        }
        if let instanceId = instanceId {
            try container.encode(instanceId, forKey: ClientRuntime.Key("InstanceId"))
        }
        if let progress = progress {
            try container.encode(progress, forKey: ClientRuntime.Key("Progress"))
        }
        if let startTime = startTime {
            try container.encodeTimestamp(startTime, format: .dateTime, forKey: ClientRuntime.Key("StartTime"))
        }
        if let state = state {
            try container.encode(state, forKey: ClientRuntime.Key("State"))
        }
        if let storage = storage {
            try container.encode(storage, forKey: ClientRuntime.Key("Storage"))
        }
        if let updateTime = updateTime {
            try container.encodeTimestamp(updateTime, format: .dateTime, forKey: ClientRuntime.Key("UpdateTime"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bundleIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bundleId)
        bundleId = bundleIdDecoded
        let bundleTaskErrorDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.BundleTaskError.self, forKey: .bundleTaskError)
        bundleTaskError = bundleTaskErrorDecoded
        let instanceIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let progressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .progress)
        progress = progressDecoded
        let startTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .startTime)
        startTime = startTimeDecoded
        let stateDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.BundleTaskState.self, forKey: .state)
        state = stateDecoded
        let storageDecoded = try containerValues.decodeIfPresent(EC2ClientTypes.Storage.self, forKey: .storage)
        storage = storageDecoded
        let updateTimeDecoded = try containerValues.decodeTimestampIfPresent(.dateTime, forKey: .updateTime)
        updateTime = updateTimeDecoded
    }
}
