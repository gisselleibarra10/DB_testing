// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EC2ClientTypes {
    /// Describes a route table route.
    public struct AnalysisRouteTableRoute: Swift.Equatable {
        /// The destination IPv4 address, in CIDR notation.
        public var destinationCidr: Swift.String?
        /// The prefix of the Amazon Web Service.
        public var destinationPrefixListId: Swift.String?
        /// The ID of an egress-only internet gateway.
        public var egressOnlyInternetGatewayId: Swift.String?
        /// The ID of the gateway, such as an internet gateway or virtual private gateway.
        public var gatewayId: Swift.String?
        /// The ID of the instance, such as a NAT instance.
        public var instanceId: Swift.String?
        /// The ID of a NAT gateway.
        public var natGatewayId: Swift.String?
        /// The ID of a network interface.
        public var networkInterfaceId: Swift.String?
        /// Describes how the route was created. The following are the possible values:
        ///
        /// * CreateRouteTable - The route was automatically created when the route table was created.
        ///
        /// * CreateRoute - The route was manually added to the route table.
        ///
        /// * EnableVgwRoutePropagation - The route was propagated by route propagation.
        public var origin: Swift.String?
        /// The state. The following are the possible values:
        ///
        /// * active
        ///
        /// * blackhole
        public var state: Swift.String?
        /// The ID of a transit gateway.
        public var transitGatewayId: Swift.String?
        /// The ID of a VPC peering connection.
        public var vpcPeeringConnectionId: Swift.String?

        public init (
            destinationCidr: Swift.String? = nil,
            destinationPrefixListId: Swift.String? = nil,
            egressOnlyInternetGatewayId: Swift.String? = nil,
            gatewayId: Swift.String? = nil,
            instanceId: Swift.String? = nil,
            natGatewayId: Swift.String? = nil,
            networkInterfaceId: Swift.String? = nil,
            origin: Swift.String? = nil,
            state: Swift.String? = nil,
            transitGatewayId: Swift.String? = nil,
            vpcPeeringConnectionId: Swift.String? = nil
        )
        {
            self.destinationCidr = destinationCidr
            self.destinationPrefixListId = destinationPrefixListId
            self.egressOnlyInternetGatewayId = egressOnlyInternetGatewayId
            self.gatewayId = gatewayId
            self.instanceId = instanceId
            self.natGatewayId = natGatewayId
            self.networkInterfaceId = networkInterfaceId
            self.origin = origin
            self.state = state
            self.transitGatewayId = transitGatewayId
            self.vpcPeeringConnectionId = vpcPeeringConnectionId
        }
    }

}
