// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppMeshClientTypes.MeshSpec: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case egressFilter
        case serviceDiscovery
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let egressFilter = self.egressFilter {
            try encodeContainer.encode(egressFilter, forKey: .egressFilter)
        }
        if let serviceDiscovery = self.serviceDiscovery {
            try encodeContainer.encode(serviceDiscovery, forKey: .serviceDiscovery)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let egressFilterDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.EgressFilter.self, forKey: .egressFilter)
        egressFilter = egressFilterDecoded
        let serviceDiscoveryDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.MeshServiceDiscovery.self, forKey: .serviceDiscovery)
        serviceDiscovery = serviceDiscoveryDecoded
    }
}
