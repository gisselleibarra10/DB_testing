// Code generated by smithy-swift-codegen. DO NOT EDIT!



///
public struct CreateMeshInput: Swift.Equatable {
    /// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.
    public var clientToken: Swift.String?
    /// The name to use for the service mesh.
    /// This member is required.
    public var meshName: Swift.String?
    /// The service mesh specification to apply.
    public var spec: AppMeshClientTypes.MeshSpec?
    /// Optional metadata that you can apply to the service mesh to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
    public var tags: [AppMeshClientTypes.TagRef]?

    public init (
        clientToken: Swift.String? = nil,
        meshName: Swift.String? = nil,
        spec: AppMeshClientTypes.MeshSpec? = nil,
        tags: [AppMeshClientTypes.TagRef]? = nil
    )
    {
        self.clientToken = clientToken
        self.meshName = meshName
        self.spec = spec
        self.tags = tags
    }
}
