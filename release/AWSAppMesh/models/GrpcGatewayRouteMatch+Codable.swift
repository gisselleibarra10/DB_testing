// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppMeshClientTypes.GrpcGatewayRouteMatch: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hostname
        case metadata
        case port
        case serviceName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hostname = self.hostname {
            try encodeContainer.encode(hostname, forKey: .hostname)
        }
        if let metadata = metadata {
            var metadataContainer = encodeContainer.nestedUnkeyedContainer(forKey: .metadata)
            for grpcgatewayroutemetadatalist0 in metadata {
                try metadataContainer.encode(grpcgatewayroutemetadatalist0)
            }
        }
        if let port = self.port {
            try encodeContainer.encode(port, forKey: .port)
        }
        if let serviceName = self.serviceName {
            try encodeContainer.encode(serviceName, forKey: .serviceName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serviceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .serviceName)
        serviceName = serviceNameDecoded
        let hostnameDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.GatewayRouteHostnameMatch.self, forKey: .hostname)
        hostname = hostnameDecoded
        let metadataContainer = try containerValues.decodeIfPresent([AppMeshClientTypes.GrpcGatewayRouteMetadata?].self, forKey: .metadata)
        var metadataDecoded0:[AppMeshClientTypes.GrpcGatewayRouteMetadata]? = nil
        if let metadataContainer = metadataContainer {
            metadataDecoded0 = [AppMeshClientTypes.GrpcGatewayRouteMetadata]()
            for structure0 in metadataContainer {
                if let structure0 = structure0 {
                    metadataDecoded0?.append(structure0)
                }
            }
        }
        metadata = metadataDecoded0
        let portDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .port)
        port = portDecoded
    }
}
