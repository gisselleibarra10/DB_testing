// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppMeshClientTypes.HttpGatewayRouteHeader: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case invert
        case match
        case name
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let invert = self.invert {
            try encodeContainer.encode(invert, forKey: .invert)
        }
        if let match = self.match {
            try encodeContainer.encode(match, forKey: .match)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let invertDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .invert)
        invert = invertDecoded
        let matchDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.HeaderMatchMethod.self, forKey: .match)
        match = matchDecoded
    }
}
