// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMeshesOutputResponseBody: Swift.Equatable {
    let meshes: [AppMeshClientTypes.MeshRef]?
    let nextToken: Swift.String?
}

extension ListMeshesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case meshes
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let meshesContainer = try containerValues.decodeIfPresent([AppMeshClientTypes.MeshRef?].self, forKey: .meshes)
        var meshesDecoded0:[AppMeshClientTypes.MeshRef]? = nil
        if let meshesContainer = meshesContainer {
            meshesDecoded0 = [AppMeshClientTypes.MeshRef]()
            for structure0 in meshesContainer {
                if let structure0 = structure0 {
                    meshesDecoded0?.append(structure0)
                }
            }
        }
        meshes = meshesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
