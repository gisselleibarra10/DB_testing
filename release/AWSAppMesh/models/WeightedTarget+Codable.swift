// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppMeshClientTypes.WeightedTarget: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case port
        case virtualNode
        case weight
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let port = self.port {
            try encodeContainer.encode(port, forKey: .port)
        }
        if let virtualNode = self.virtualNode {
            try encodeContainer.encode(virtualNode, forKey: .virtualNode)
        }
        if weight != 0 {
            try encodeContainer.encode(weight, forKey: .weight)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let virtualNodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .virtualNode)
        virtualNode = virtualNodeDecoded
        let weightDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .weight) ?? 0
        weight = weightDecoded
        let portDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .port)
        port = portDecoded
    }
}
