// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppMeshClientTypes.TcpRoute: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case action
        case match
        case timeout
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let action = self.action {
            try encodeContainer.encode(action, forKey: .action)
        }
        if let match = self.match {
            try encodeContainer.encode(match, forKey: .match)
        }
        if let timeout = self.timeout {
            try encodeContainer.encode(timeout, forKey: .timeout)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.TcpRouteAction.self, forKey: .action)
        action = actionDecoded
        let timeoutDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.TcpTimeout.self, forKey: .timeout)
        timeout = timeoutDecoded
        let matchDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.TcpRouteMatch.self, forKey: .match)
        match = matchDecoded
    }
}
