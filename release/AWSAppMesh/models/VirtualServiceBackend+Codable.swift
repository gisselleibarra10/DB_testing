// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppMeshClientTypes.VirtualServiceBackend: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientPolicy
        case virtualServiceName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientPolicy = self.clientPolicy {
            try encodeContainer.encode(clientPolicy, forKey: .clientPolicy)
        }
        if let virtualServiceName = self.virtualServiceName {
            try encodeContainer.encode(virtualServiceName, forKey: .virtualServiceName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let virtualServiceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .virtualServiceName)
        virtualServiceName = virtualServiceNameDecoded
        let clientPolicyDecoded = try containerValues.decodeIfPresent(AppMeshClientTypes.ClientPolicy.self, forKey: .clientPolicy)
        clientPolicy = clientPolicyDecoded
    }
}
