// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComputeOptimizerClientTypes {
    /// Describes an Auto Scaling group recommendation.
    public struct AutoScalingGroupRecommendation: Swift.Equatable {
        /// The Amazon Web Services account ID of the Auto Scaling group.
        public var accountId: Swift.String?
        /// The Amazon Resource Name (ARN) of the Auto Scaling group.
        public var autoScalingGroupArn: Swift.String?
        /// The name of the Auto Scaling group.
        public var autoScalingGroupName: Swift.String?
        /// An array of objects that describe the current configuration of the Auto Scaling group.
        public var currentConfiguration: ComputeOptimizerClientTypes.AutoScalingGroupConfiguration?
        /// The risk of the current Auto Scaling group not meeting the performance needs of its workloads. The higher the risk, the more likely the current Auto Scaling group configuration has insufficient capacity and cannot meet workload requirements.
        public var currentPerformanceRisk: ComputeOptimizerClientTypes.CurrentPerformanceRisk?
        /// An object that describes the effective recommendation preferences for the Auto Scaling group.
        public var effectiveRecommendationPreferences: ComputeOptimizerClientTypes.EffectiveRecommendationPreferences?
        /// The finding classification of the Auto Scaling group. Findings for Auto Scaling groups include:
        ///
        /// * NotOptimized —An Auto Scaling group is considered not optimized when Compute Optimizer identifies a recommendation that can provide better performance for your workload.
        ///
        /// * Optimized —An Auto Scaling group is considered optimized when Compute Optimizer determines that the group is correctly provisioned to run your workload based on the chosen instance type. For optimized resources, Compute Optimizer might recommend a new generation instance type.
        public var finding: ComputeOptimizerClientTypes.Finding?
        /// The applications that might be running on the instances in the Auto Scaling group as inferred by Compute Optimizer. Compute Optimizer can infer if one of the following applications might be running on the instances:
        ///
        /// * AmazonEmr - Infers that Amazon EMR might be running on the instances.
        ///
        /// * ApacheCassandra - Infers that Apache Cassandra might be running on the instances.
        ///
        /// * ApacheHadoop - Infers that Apache Hadoop might be running on the instances.
        ///
        /// * Memcached - Infers that Memcached might be running on the instances.
        ///
        /// * NGINX - Infers that NGINX might be running on the instances.
        ///
        /// * PostgreSql - Infers that PostgreSQL might be running on the instances.
        ///
        /// * Redis - Infers that Redis might be running on the instances.
        public var inferredWorkloadTypes: [ComputeOptimizerClientTypes.InferredWorkloadType]?
        /// The timestamp of when the Auto Scaling group recommendation was last generated.
        public var lastRefreshTimestamp: ClientRuntime.Date?
        /// The number of days for which utilization metrics were analyzed for the Auto Scaling group.
        public var lookBackPeriodInDays: Swift.Double
        /// An array of objects that describe the recommendation options for the Auto Scaling group.
        public var recommendationOptions: [ComputeOptimizerClientTypes.AutoScalingGroupRecommendationOption]?
        /// An array of objects that describe the utilization metrics of the Auto Scaling group.
        public var utilizationMetrics: [ComputeOptimizerClientTypes.UtilizationMetric]?

        public init (
            accountId: Swift.String? = nil,
            autoScalingGroupArn: Swift.String? = nil,
            autoScalingGroupName: Swift.String? = nil,
            currentConfiguration: ComputeOptimizerClientTypes.AutoScalingGroupConfiguration? = nil,
            currentPerformanceRisk: ComputeOptimizerClientTypes.CurrentPerformanceRisk? = nil,
            effectiveRecommendationPreferences: ComputeOptimizerClientTypes.EffectiveRecommendationPreferences? = nil,
            finding: ComputeOptimizerClientTypes.Finding? = nil,
            inferredWorkloadTypes: [ComputeOptimizerClientTypes.InferredWorkloadType]? = nil,
            lastRefreshTimestamp: ClientRuntime.Date? = nil,
            lookBackPeriodInDays: Swift.Double = 0.0,
            recommendationOptions: [ComputeOptimizerClientTypes.AutoScalingGroupRecommendationOption]? = nil,
            utilizationMetrics: [ComputeOptimizerClientTypes.UtilizationMetric]? = nil
        )
        {
            self.accountId = accountId
            self.autoScalingGroupArn = autoScalingGroupArn
            self.autoScalingGroupName = autoScalingGroupName
            self.currentConfiguration = currentConfiguration
            self.currentPerformanceRisk = currentPerformanceRisk
            self.effectiveRecommendationPreferences = effectiveRecommendationPreferences
            self.finding = finding
            self.inferredWorkloadTypes = inferredWorkloadTypes
            self.lastRefreshTimestamp = lastRefreshTimestamp
            self.lookBackPeriodInDays = lookBackPeriodInDays
            self.recommendationOptions = recommendationOptions
            self.utilizationMetrics = utilizationMetrics
        }
    }

}
