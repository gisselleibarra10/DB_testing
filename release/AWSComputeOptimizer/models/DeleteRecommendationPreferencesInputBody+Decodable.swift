// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteRecommendationPreferencesInputBody: Swift.Equatable {
    let resourceType: ComputeOptimizerClientTypes.ResourceType?
    let scope: ComputeOptimizerClientTypes.Scope?
    let recommendationPreferenceNames: [ComputeOptimizerClientTypes.RecommendationPreferenceName]?
}

extension DeleteRecommendationPreferencesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case recommendationPreferenceNames
        case resourceType
        case scope
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceTypeDecoded = try containerValues.decodeIfPresent(ComputeOptimizerClientTypes.ResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let scopeDecoded = try containerValues.decodeIfPresent(ComputeOptimizerClientTypes.Scope.self, forKey: .scope)
        scope = scopeDecoded
        let recommendationPreferenceNamesContainer = try containerValues.decodeIfPresent([ComputeOptimizerClientTypes.RecommendationPreferenceName?].self, forKey: .recommendationPreferenceNames)
        var recommendationPreferenceNamesDecoded0:[ComputeOptimizerClientTypes.RecommendationPreferenceName]? = nil
        if let recommendationPreferenceNamesContainer = recommendationPreferenceNamesContainer {
            recommendationPreferenceNamesDecoded0 = [ComputeOptimizerClientTypes.RecommendationPreferenceName]()
            for string0 in recommendationPreferenceNamesContainer {
                if let string0 = string0 {
                    recommendationPreferenceNamesDecoded0?.append(string0)
                }
            }
        }
        recommendationPreferenceNames = recommendationPreferenceNamesDecoded0
    }
}
