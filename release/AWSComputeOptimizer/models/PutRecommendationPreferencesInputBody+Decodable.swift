// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutRecommendationPreferencesInputBody: Swift.Equatable {
    let resourceType: ComputeOptimizerClientTypes.ResourceType?
    let scope: ComputeOptimizerClientTypes.Scope?
    let enhancedInfrastructureMetrics: ComputeOptimizerClientTypes.EnhancedInfrastructureMetrics?
    let inferredWorkloadTypes: ComputeOptimizerClientTypes.InferredWorkloadTypesPreference?
}

extension PutRecommendationPreferencesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enhancedInfrastructureMetrics
        case inferredWorkloadTypes
        case resourceType
        case scope
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceTypeDecoded = try containerValues.decodeIfPresent(ComputeOptimizerClientTypes.ResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let scopeDecoded = try containerValues.decodeIfPresent(ComputeOptimizerClientTypes.Scope.self, forKey: .scope)
        scope = scopeDecoded
        let enhancedInfrastructureMetricsDecoded = try containerValues.decodeIfPresent(ComputeOptimizerClientTypes.EnhancedInfrastructureMetrics.self, forKey: .enhancedInfrastructureMetrics)
        enhancedInfrastructureMetrics = enhancedInfrastructureMetricsDecoded
        let inferredWorkloadTypesDecoded = try containerValues.decodeIfPresent(ComputeOptimizerClientTypes.InferredWorkloadTypesPreference.self, forKey: .inferredWorkloadTypes)
        inferredWorkloadTypes = inferredWorkloadTypesDecoded
    }
}
