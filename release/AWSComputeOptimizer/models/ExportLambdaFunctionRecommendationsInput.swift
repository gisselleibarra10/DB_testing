// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ExportLambdaFunctionRecommendationsInput: Swift.Equatable {
    /// The IDs of the Amazon Web Services accounts for which to export Lambda function recommendations. If your account is the management account of an organization, use this parameter to specify the member account for which you want to export recommendations. This parameter cannot be specified together with the include member accounts parameter. The parameters are mutually exclusive. Recommendations for member accounts are not included in the export if this parameter, or the include member accounts parameter, is omitted. You can specify multiple account IDs per request.
    public var accountIds: [Swift.String]?
    /// The recommendations data to include in the export file. For more information about the fields that can be exported, see [Exported files](https://docs.aws.amazon.com/compute-optimizer/latest/ug/exporting-recommendations.html#exported-files) in the Compute Optimizer User Guide.
    public var fieldsToExport: [ComputeOptimizerClientTypes.ExportableLambdaFunctionField]?
    /// The format of the export file. The only export file format currently supported is Csv.
    public var fileFormat: ComputeOptimizerClientTypes.FileFormat?
    /// An array of objects to specify a filter that exports a more specific set of Lambda function recommendations.
    public var filters: [ComputeOptimizerClientTypes.LambdaFunctionRecommendationFilter]?
    /// Indicates whether to include recommendations for resources in all member accounts of the organization if your account is the management account of an organization. The member accounts must also be opted in to Compute Optimizer, and trusted access for Compute Optimizer must be enabled in the organization account. For more information, see [Compute Optimizer and Amazon Web Services Organizations trusted access](https://docs.aws.amazon.com/compute-optimizer/latest/ug/security-iam.html#trusted-service-access) in the Compute Optimizer User Guide. Recommendations for member accounts of the organization are not included in the export file if this parameter is omitted. This parameter cannot be specified together with the account IDs parameter. The parameters are mutually exclusive. Recommendations for member accounts are not included in the export if this parameter, or the account IDs parameter, is omitted.
    public var includeMemberAccounts: Swift.Bool
    /// Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for a recommendations export job. You must create the destination Amazon S3 bucket for your recommendations export before you create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the export file to it. If you plan to specify an object prefix when you create the export job, you must include the object prefix in the policy that you add to the S3 bucket. For more information, see [Amazon S3 Bucket Policy for Compute Optimizer](https://docs.aws.amazon.com/compute-optimizer/latest/ug/create-s3-bucket-policy-for-compute-optimizer.html) in the Compute Optimizer User Guide.
    /// This member is required.
    public var s3DestinationConfig: ComputeOptimizerClientTypes.S3DestinationConfig?

    public init (
        accountIds: [Swift.String]? = nil,
        fieldsToExport: [ComputeOptimizerClientTypes.ExportableLambdaFunctionField]? = nil,
        fileFormat: ComputeOptimizerClientTypes.FileFormat? = nil,
        filters: [ComputeOptimizerClientTypes.LambdaFunctionRecommendationFilter]? = nil,
        includeMemberAccounts: Swift.Bool = false,
        s3DestinationConfig: ComputeOptimizerClientTypes.S3DestinationConfig? = nil
    )
    {
        self.accountIds = accountIds
        self.fieldsToExport = fieldsToExport
        self.fileFormat = fileFormat
        self.filters = filters
        self.includeMemberAccounts = includeMemberAccounts
        self.s3DestinationConfig = s3DestinationConfig
    }
}
