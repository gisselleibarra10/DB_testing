// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRecommendationSummariesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let recommendationSummaries: [ComputeOptimizerClientTypes.RecommendationSummary]?
}

extension GetRecommendationSummariesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case recommendationSummaries
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let recommendationSummariesContainer = try containerValues.decodeIfPresent([ComputeOptimizerClientTypes.RecommendationSummary?].self, forKey: .recommendationSummaries)
        var recommendationSummariesDecoded0:[ComputeOptimizerClientTypes.RecommendationSummary]? = nil
        if let recommendationSummariesContainer = recommendationSummariesContainer {
            recommendationSummariesDecoded0 = [ComputeOptimizerClientTypes.RecommendationSummary]()
            for structure0 in recommendationSummariesContainer {
                if let structure0 = structure0 {
                    recommendationSummariesDecoded0?.append(structure0)
                }
            }
        }
        recommendationSummaries = recommendationSummariesDecoded0
    }
}
