// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ComputeOptimizerClientTypes {
    public enum InferredWorkloadType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case amazonEmr
        case apacheCassandra
        case apacheHadoop
        case memcached
        case nginx
        case postgreSql
        case redis
        case sdkUnknown(Swift.String)

        public static var allCases: [InferredWorkloadType] {
            return [
                .amazonEmr,
                .apacheCassandra,
                .apacheHadoop,
                .memcached,
                .nginx,
                .postgreSql,
                .redis,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .amazonEmr: return "AmazonEmr"
            case .apacheCassandra: return "ApacheCassandra"
            case .apacheHadoop: return "ApacheHadoop"
            case .memcached: return "Memcached"
            case .nginx: return "Nginx"
            case .postgreSql: return "PostgreSql"
            case .redis: return "Redis"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = InferredWorkloadType(rawValue: rawValue) ?? InferredWorkloadType.sdkUnknown(rawValue)
        }
    }
}
