// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComputeOptimizerClientTypes.SavingsOpportunity: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case estimatedMonthlySavings
        case savingsOpportunityPercentage
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let estimatedMonthlySavings = self.estimatedMonthlySavings {
            try encodeContainer.encode(estimatedMonthlySavings, forKey: .estimatedMonthlySavings)
        }
        if savingsOpportunityPercentage != 0.0 {
            try encodeContainer.encode(savingsOpportunityPercentage, forKey: .savingsOpportunityPercentage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let savingsOpportunityPercentageDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .savingsOpportunityPercentage) ?? 0.0
        savingsOpportunityPercentage = savingsOpportunityPercentageDecoded
        let estimatedMonthlySavingsDecoded = try containerValues.decodeIfPresent(ComputeOptimizerClientTypes.EstimatedMonthlySavings.self, forKey: .estimatedMonthlySavings)
        estimatedMonthlySavings = estimatedMonthlySavingsDecoded
    }
}
