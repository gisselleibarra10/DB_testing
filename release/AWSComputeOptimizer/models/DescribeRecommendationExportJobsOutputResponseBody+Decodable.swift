// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRecommendationExportJobsOutputResponseBody: Swift.Equatable {
    let recommendationExportJobs: [ComputeOptimizerClientTypes.RecommendationExportJob]?
    let nextToken: Swift.String?
}

extension DescribeRecommendationExportJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case recommendationExportJobs
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recommendationExportJobsContainer = try containerValues.decodeIfPresent([ComputeOptimizerClientTypes.RecommendationExportJob?].self, forKey: .recommendationExportJobs)
        var recommendationExportJobsDecoded0:[ComputeOptimizerClientTypes.RecommendationExportJob]? = nil
        if let recommendationExportJobsContainer = recommendationExportJobsContainer {
            recommendationExportJobsDecoded0 = [ComputeOptimizerClientTypes.RecommendationExportJob]()
            for structure0 in recommendationExportJobsContainer {
                if let structure0 = structure0 {
                    recommendationExportJobsDecoded0?.append(structure0)
                }
            }
        }
        recommendationExportJobs = recommendationExportJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
