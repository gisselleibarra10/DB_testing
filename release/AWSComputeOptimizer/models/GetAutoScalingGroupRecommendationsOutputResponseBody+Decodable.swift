// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAutoScalingGroupRecommendationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let autoScalingGroupRecommendations: [ComputeOptimizerClientTypes.AutoScalingGroupRecommendation]?
    let errors: [ComputeOptimizerClientTypes.GetRecommendationError]?
}

extension GetAutoScalingGroupRecommendationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case autoScalingGroupRecommendations
        case errors
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let autoScalingGroupRecommendationsContainer = try containerValues.decodeIfPresent([ComputeOptimizerClientTypes.AutoScalingGroupRecommendation?].self, forKey: .autoScalingGroupRecommendations)
        var autoScalingGroupRecommendationsDecoded0:[ComputeOptimizerClientTypes.AutoScalingGroupRecommendation]? = nil
        if let autoScalingGroupRecommendationsContainer = autoScalingGroupRecommendationsContainer {
            autoScalingGroupRecommendationsDecoded0 = [ComputeOptimizerClientTypes.AutoScalingGroupRecommendation]()
            for structure0 in autoScalingGroupRecommendationsContainer {
                if let structure0 = structure0 {
                    autoScalingGroupRecommendationsDecoded0?.append(structure0)
                }
            }
        }
        autoScalingGroupRecommendations = autoScalingGroupRecommendationsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([ComputeOptimizerClientTypes.GetRecommendationError?].self, forKey: .errors)
        var errorsDecoded0:[ComputeOptimizerClientTypes.GetRecommendationError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [ComputeOptimizerClientTypes.GetRecommendationError]()
            for structure0 in errorsContainer {
                if let structure0 = structure0 {
                    errorsDecoded0?.append(structure0)
                }
            }
        }
        errors = errorsDecoded0
    }
}
