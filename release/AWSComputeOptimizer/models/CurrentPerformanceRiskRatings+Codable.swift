// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComputeOptimizerClientTypes.CurrentPerformanceRiskRatings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case high
        case low
        case medium
        case veryLow
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if high != 0 {
            try encodeContainer.encode(high, forKey: .high)
        }
        if low != 0 {
            try encodeContainer.encode(low, forKey: .low)
        }
        if medium != 0 {
            try encodeContainer.encode(medium, forKey: .medium)
        }
        if veryLow != 0 {
            try encodeContainer.encode(veryLow, forKey: .veryLow)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let highDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .high) ?? 0
        high = highDecoded
        let mediumDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .medium) ?? 0
        medium = mediumDecoded
        let lowDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .low) ?? 0
        low = lowDecoded
        let veryLowDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .veryLow) ?? 0
        veryLow = veryLowDecoded
    }
}
