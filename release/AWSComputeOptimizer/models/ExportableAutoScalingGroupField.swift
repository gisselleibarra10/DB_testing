// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ComputeOptimizerClientTypes {
    public enum ExportableAutoScalingGroupField: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case accountId
        case autoScalingGroupArn
        case autoScalingGroupName
        case currentConfigurationDesiredCapacity
        case currentConfigurationInstanceType
        case currentConfigurationMaxSize
        case currentConfigurationMinSize
        case currentMemory
        case currentNetwork
        case currentOnDemandPrice
        case currentPerformanceRisk
        case currentStandardOneYearNoUpfrontReservedPrice
        case currentStandardThreeYearNoUpfrontReservedPrice
        case currentStorage
        case currentVcpus
        case effectiveRecommendationPreferencesCpuVendorArchitectures
        case effectiveRecommendationPreferencesEnhancedInfrastructureMetrics
        case effectiveRecommendationPreferencesInferredWorkloadTypes
        case finding
        case inferredWorkloadTypes
        case lastRefreshTimestamp
        case lookbackPeriodInDays
        case recommendationOptionsConfigurationDesiredCapacity
        case recommendationOptionsConfigurationInstanceType
        case recommendationOptionsConfigurationMaxSize
        case recommendationOptionsConfigurationMinSize
        case recommendationOptionsEstimatedMonthlySavingsCurrency
        case recommendationOptionsEstimatedMonthlySavingsValue
        case recommendationOptionsMemory
        case recommendationOptionsMigrationEffort
        case recommendationOptionsNetwork
        case recommendationOptionsOnDemandPrice
        case recommendationOptionsPerformanceRisk
        case recommendationOptionsProjectedUtilizationMetricsCpuMaximum
        case recommendationOptionsProjectedUtilizationMetricsMemoryMaximum
        case recommendationOptionsSavingsOpportunityPercentage
        case recommendationOptionsStandardOneYearNoUpfrontReservedPrice
        case recommendationOptionsStandardThreeYearNoUpfrontReservedPrice
        case recommendationOptionsStorage
        case recommendationOptionsVcpus
        case utilizationMetricsCpuMaximum
        case utilizationMetricsDiskReadBytesPerSecondMaximum
        case utilizationMetricsDiskReadOpsPerSecondMaximum
        case utilizationMetricsDiskWriteBytesPerSecondMaximum
        case utilizationMetricsDiskWriteOpsPerSecondMaximum
        case utilizationMetricsEbsReadBytesPerSecondMaximum
        case utilizationMetricsEbsReadOpsPerSecondMaximum
        case utilizationMetricsEbsWriteBytesPerSecondMaximum
        case utilizationMetricsEbsWriteOpsPerSecondMaximum
        case utilizationMetricsMemoryMaximum
        case utilizationMetricsNetworkInBytesPerSecondMaximum
        case utilizationMetricsNetworkOutBytesPerSecondMaximum
        case utilizationMetricsNetworkPacketsInPerSecondMaximum
        case utilizationMetricsNetworkPacketsOutPerSecondMaximum
        case sdkUnknown(Swift.String)

        public static var allCases: [ExportableAutoScalingGroupField] {
            return [
                .accountId,
                .autoScalingGroupArn,
                .autoScalingGroupName,
                .currentConfigurationDesiredCapacity,
                .currentConfigurationInstanceType,
                .currentConfigurationMaxSize,
                .currentConfigurationMinSize,
                .currentMemory,
                .currentNetwork,
                .currentOnDemandPrice,
                .currentPerformanceRisk,
                .currentStandardOneYearNoUpfrontReservedPrice,
                .currentStandardThreeYearNoUpfrontReservedPrice,
                .currentStorage,
                .currentVcpus,
                .effectiveRecommendationPreferencesCpuVendorArchitectures,
                .effectiveRecommendationPreferencesEnhancedInfrastructureMetrics,
                .effectiveRecommendationPreferencesInferredWorkloadTypes,
                .finding,
                .inferredWorkloadTypes,
                .lastRefreshTimestamp,
                .lookbackPeriodInDays,
                .recommendationOptionsConfigurationDesiredCapacity,
                .recommendationOptionsConfigurationInstanceType,
                .recommendationOptionsConfigurationMaxSize,
                .recommendationOptionsConfigurationMinSize,
                .recommendationOptionsEstimatedMonthlySavingsCurrency,
                .recommendationOptionsEstimatedMonthlySavingsValue,
                .recommendationOptionsMemory,
                .recommendationOptionsMigrationEffort,
                .recommendationOptionsNetwork,
                .recommendationOptionsOnDemandPrice,
                .recommendationOptionsPerformanceRisk,
                .recommendationOptionsProjectedUtilizationMetricsCpuMaximum,
                .recommendationOptionsProjectedUtilizationMetricsMemoryMaximum,
                .recommendationOptionsSavingsOpportunityPercentage,
                .recommendationOptionsStandardOneYearNoUpfrontReservedPrice,
                .recommendationOptionsStandardThreeYearNoUpfrontReservedPrice,
                .recommendationOptionsStorage,
                .recommendationOptionsVcpus,
                .utilizationMetricsCpuMaximum,
                .utilizationMetricsDiskReadBytesPerSecondMaximum,
                .utilizationMetricsDiskReadOpsPerSecondMaximum,
                .utilizationMetricsDiskWriteBytesPerSecondMaximum,
                .utilizationMetricsDiskWriteOpsPerSecondMaximum,
                .utilizationMetricsEbsReadBytesPerSecondMaximum,
                .utilizationMetricsEbsReadOpsPerSecondMaximum,
                .utilizationMetricsEbsWriteBytesPerSecondMaximum,
                .utilizationMetricsEbsWriteOpsPerSecondMaximum,
                .utilizationMetricsMemoryMaximum,
                .utilizationMetricsNetworkInBytesPerSecondMaximum,
                .utilizationMetricsNetworkOutBytesPerSecondMaximum,
                .utilizationMetricsNetworkPacketsInPerSecondMaximum,
                .utilizationMetricsNetworkPacketsOutPerSecondMaximum,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .accountId: return "AccountId"
            case .autoScalingGroupArn: return "AutoScalingGroupArn"
            case .autoScalingGroupName: return "AutoScalingGroupName"
            case .currentConfigurationDesiredCapacity: return "CurrentConfigurationDesiredCapacity"
            case .currentConfigurationInstanceType: return "CurrentConfigurationInstanceType"
            case .currentConfigurationMaxSize: return "CurrentConfigurationMaxSize"
            case .currentConfigurationMinSize: return "CurrentConfigurationMinSize"
            case .currentMemory: return "CurrentMemory"
            case .currentNetwork: return "CurrentNetwork"
            case .currentOnDemandPrice: return "CurrentOnDemandPrice"
            case .currentPerformanceRisk: return "CurrentPerformanceRisk"
            case .currentStandardOneYearNoUpfrontReservedPrice: return "CurrentStandardOneYearNoUpfrontReservedPrice"
            case .currentStandardThreeYearNoUpfrontReservedPrice: return "CurrentStandardThreeYearNoUpfrontReservedPrice"
            case .currentStorage: return "CurrentStorage"
            case .currentVcpus: return "CurrentVCpus"
            case .effectiveRecommendationPreferencesCpuVendorArchitectures: return "EffectiveRecommendationPreferencesCpuVendorArchitectures"
            case .effectiveRecommendationPreferencesEnhancedInfrastructureMetrics: return "EffectiveRecommendationPreferencesEnhancedInfrastructureMetrics"
            case .effectiveRecommendationPreferencesInferredWorkloadTypes: return "EffectiveRecommendationPreferencesInferredWorkloadTypes"
            case .finding: return "Finding"
            case .inferredWorkloadTypes: return "InferredWorkloadTypes"
            case .lastRefreshTimestamp: return "LastRefreshTimestamp"
            case .lookbackPeriodInDays: return "LookbackPeriodInDays"
            case .recommendationOptionsConfigurationDesiredCapacity: return "RecommendationOptionsConfigurationDesiredCapacity"
            case .recommendationOptionsConfigurationInstanceType: return "RecommendationOptionsConfigurationInstanceType"
            case .recommendationOptionsConfigurationMaxSize: return "RecommendationOptionsConfigurationMaxSize"
            case .recommendationOptionsConfigurationMinSize: return "RecommendationOptionsConfigurationMinSize"
            case .recommendationOptionsEstimatedMonthlySavingsCurrency: return "RecommendationOptionsEstimatedMonthlySavingsCurrency"
            case .recommendationOptionsEstimatedMonthlySavingsValue: return "RecommendationOptionsEstimatedMonthlySavingsValue"
            case .recommendationOptionsMemory: return "RecommendationOptionsMemory"
            case .recommendationOptionsMigrationEffort: return "RecommendationOptionsMigrationEffort"
            case .recommendationOptionsNetwork: return "RecommendationOptionsNetwork"
            case .recommendationOptionsOnDemandPrice: return "RecommendationOptionsOnDemandPrice"
            case .recommendationOptionsPerformanceRisk: return "RecommendationOptionsPerformanceRisk"
            case .recommendationOptionsProjectedUtilizationMetricsCpuMaximum: return "RecommendationOptionsProjectedUtilizationMetricsCpuMaximum"
            case .recommendationOptionsProjectedUtilizationMetricsMemoryMaximum: return "RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum"
            case .recommendationOptionsSavingsOpportunityPercentage: return "RecommendationOptionsSavingsOpportunityPercentage"
            case .recommendationOptionsStandardOneYearNoUpfrontReservedPrice: return "RecommendationOptionsStandardOneYearNoUpfrontReservedPrice"
            case .recommendationOptionsStandardThreeYearNoUpfrontReservedPrice: return "RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice"
            case .recommendationOptionsStorage: return "RecommendationOptionsStorage"
            case .recommendationOptionsVcpus: return "RecommendationOptionsVcpus"
            case .utilizationMetricsCpuMaximum: return "UtilizationMetricsCpuMaximum"
            case .utilizationMetricsDiskReadBytesPerSecondMaximum: return "UtilizationMetricsDiskReadBytesPerSecondMaximum"
            case .utilizationMetricsDiskReadOpsPerSecondMaximum: return "UtilizationMetricsDiskReadOpsPerSecondMaximum"
            case .utilizationMetricsDiskWriteBytesPerSecondMaximum: return "UtilizationMetricsDiskWriteBytesPerSecondMaximum"
            case .utilizationMetricsDiskWriteOpsPerSecondMaximum: return "UtilizationMetricsDiskWriteOpsPerSecondMaximum"
            case .utilizationMetricsEbsReadBytesPerSecondMaximum: return "UtilizationMetricsEbsReadBytesPerSecondMaximum"
            case .utilizationMetricsEbsReadOpsPerSecondMaximum: return "UtilizationMetricsEbsReadOpsPerSecondMaximum"
            case .utilizationMetricsEbsWriteBytesPerSecondMaximum: return "UtilizationMetricsEbsWriteBytesPerSecondMaximum"
            case .utilizationMetricsEbsWriteOpsPerSecondMaximum: return "UtilizationMetricsEbsWriteOpsPerSecondMaximum"
            case .utilizationMetricsMemoryMaximum: return "UtilizationMetricsMemoryMaximum"
            case .utilizationMetricsNetworkInBytesPerSecondMaximum: return "UtilizationMetricsNetworkInBytesPerSecondMaximum"
            case .utilizationMetricsNetworkOutBytesPerSecondMaximum: return "UtilizationMetricsNetworkOutBytesPerSecondMaximum"
            case .utilizationMetricsNetworkPacketsInPerSecondMaximum: return "UtilizationMetricsNetworkPacketsInPerSecondMaximum"
            case .utilizationMetricsNetworkPacketsOutPerSecondMaximum: return "UtilizationMetricsNetworkPacketsOutPerSecondMaximum"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ExportableAutoScalingGroupField(rawValue: rawValue) ?? ExportableAutoScalingGroupField.sdkUnknown(rawValue)
        }
    }
}
