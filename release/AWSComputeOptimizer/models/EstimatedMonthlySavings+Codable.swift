// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComputeOptimizerClientTypes.EstimatedMonthlySavings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case currency
        case value
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let currency = self.currency {
            try encodeContainer.encode(currency.rawValue, forKey: .currency)
        }
        if value != 0.0 {
            try encodeContainer.encode(value, forKey: .value)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let currencyDecoded = try containerValues.decodeIfPresent(ComputeOptimizerClientTypes.Currency.self, forKey: .currency)
        currency = currencyDecoded
        let valueDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .value) ?? 0.0
        value = valueDecoded
    }
}
