// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetEBSVolumeRecommendationsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let volumeRecommendations: [ComputeOptimizerClientTypes.VolumeRecommendation]?
    let errors: [ComputeOptimizerClientTypes.GetRecommendationError]?
}

extension GetEBSVolumeRecommendationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errors
        case nextToken
        case volumeRecommendations
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let volumeRecommendationsContainer = try containerValues.decodeIfPresent([ComputeOptimizerClientTypes.VolumeRecommendation?].self, forKey: .volumeRecommendations)
        var volumeRecommendationsDecoded0:[ComputeOptimizerClientTypes.VolumeRecommendation]? = nil
        if let volumeRecommendationsContainer = volumeRecommendationsContainer {
            volumeRecommendationsDecoded0 = [ComputeOptimizerClientTypes.VolumeRecommendation]()
            for structure0 in volumeRecommendationsContainer {
                if let structure0 = structure0 {
                    volumeRecommendationsDecoded0?.append(structure0)
                }
            }
        }
        volumeRecommendations = volumeRecommendationsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([ComputeOptimizerClientTypes.GetRecommendationError?].self, forKey: .errors)
        var errorsDecoded0:[ComputeOptimizerClientTypes.GetRecommendationError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [ComputeOptimizerClientTypes.GetRecommendationError]()
            for structure0 in errorsContainer {
                if let structure0 = structure0 {
                    errorsDecoded0?.append(structure0)
                }
            }
        }
        errors = errorsDecoded0
    }
}
