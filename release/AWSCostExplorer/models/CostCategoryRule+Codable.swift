// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CostExplorerClientTypes.CostCategoryRule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inheritedValue = "InheritedValue"
        case rule = "Rule"
        case type = "Type"
        case value = "Value"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inheritedValue = self.inheritedValue {
            try encodeContainer.encode(inheritedValue, forKey: .inheritedValue)
        }
        if let rule = self.rule {
            try encodeContainer.encode(rule, forKey: .rule)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
        if let value = self.value {
            try encodeContainer.encode(value, forKey: .value)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let valueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .value)
        value = valueDecoded
        let ruleDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.Expression.self, forKey: .rule)
        rule = ruleDecoded
        let inheritedValueDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.CostCategoryInheritedValueDimension.self, forKey: .inheritedValue)
        inheritedValue = inheritedValueDecoded
        let typeDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.CostCategoryRuleType.self, forKey: .type)
        type = typeDecoded
    }
}
