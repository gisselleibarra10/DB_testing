// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CostExplorerClientTypes.InstanceDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eC2InstanceDetails = "EC2InstanceDetails"
        case eSInstanceDetails = "ESInstanceDetails"
        case elastiCacheInstanceDetails = "ElastiCacheInstanceDetails"
        case rDSInstanceDetails = "RDSInstanceDetails"
        case redshiftInstanceDetails = "RedshiftInstanceDetails"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let eC2InstanceDetails = self.eC2InstanceDetails {
            try encodeContainer.encode(eC2InstanceDetails, forKey: .eC2InstanceDetails)
        }
        if let eSInstanceDetails = self.eSInstanceDetails {
            try encodeContainer.encode(eSInstanceDetails, forKey: .eSInstanceDetails)
        }
        if let elastiCacheInstanceDetails = self.elastiCacheInstanceDetails {
            try encodeContainer.encode(elastiCacheInstanceDetails, forKey: .elastiCacheInstanceDetails)
        }
        if let rDSInstanceDetails = self.rDSInstanceDetails {
            try encodeContainer.encode(rDSInstanceDetails, forKey: .rDSInstanceDetails)
        }
        if let redshiftInstanceDetails = self.redshiftInstanceDetails {
            try encodeContainer.encode(redshiftInstanceDetails, forKey: .redshiftInstanceDetails)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eC2InstanceDetailsDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.EC2InstanceDetails.self, forKey: .eC2InstanceDetails)
        eC2InstanceDetails = eC2InstanceDetailsDecoded
        let rDSInstanceDetailsDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.RDSInstanceDetails.self, forKey: .rDSInstanceDetails)
        rDSInstanceDetails = rDSInstanceDetailsDecoded
        let redshiftInstanceDetailsDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.RedshiftInstanceDetails.self, forKey: .redshiftInstanceDetails)
        redshiftInstanceDetails = redshiftInstanceDetailsDecoded
        let elastiCacheInstanceDetailsDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.ElastiCacheInstanceDetails.self, forKey: .elastiCacheInstanceDetails)
        elastiCacheInstanceDetails = elastiCacheInstanceDetailsDecoded
        let eSInstanceDetailsDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.ESInstanceDetails.self, forKey: .eSInstanceDetails)
        eSInstanceDetails = eSInstanceDetailsDecoded
    }
}
