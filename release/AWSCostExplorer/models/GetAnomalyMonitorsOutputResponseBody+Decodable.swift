// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAnomalyMonitorsOutputResponseBody: Swift.Equatable {
    let anomalyMonitors: [CostExplorerClientTypes.AnomalyMonitor]?
    let nextPageToken: Swift.String?
}

extension GetAnomalyMonitorsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomalyMonitors = "AnomalyMonitors"
        case nextPageToken = "NextPageToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyMonitorsContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.AnomalyMonitor?].self, forKey: .anomalyMonitors)
        var anomalyMonitorsDecoded0:[CostExplorerClientTypes.AnomalyMonitor]? = nil
        if let anomalyMonitorsContainer = anomalyMonitorsContainer {
            anomalyMonitorsDecoded0 = [CostExplorerClientTypes.AnomalyMonitor]()
            for structure0 in anomalyMonitorsContainer {
                if let structure0 = structure0 {
                    anomalyMonitorsDecoded0?.append(structure0)
                }
            }
        }
        anomalyMonitors = anomalyMonitorsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
