// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSavingsPlansUtilizationDetailsOutputResponseBody: Swift.Equatable {
    let savingsPlansUtilizationDetails: [CostExplorerClientTypes.SavingsPlansUtilizationDetail]?
    let total: CostExplorerClientTypes.SavingsPlansUtilizationAggregates?
    let timePeriod: CostExplorerClientTypes.DateInterval?
    let nextToken: Swift.String?
}

extension GetSavingsPlansUtilizationDetailsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case savingsPlansUtilizationDetails = "SavingsPlansUtilizationDetails"
        case timePeriod = "TimePeriod"
        case total = "Total"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let savingsPlansUtilizationDetailsContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.SavingsPlansUtilizationDetail?].self, forKey: .savingsPlansUtilizationDetails)
        var savingsPlansUtilizationDetailsDecoded0:[CostExplorerClientTypes.SavingsPlansUtilizationDetail]? = nil
        if let savingsPlansUtilizationDetailsContainer = savingsPlansUtilizationDetailsContainer {
            savingsPlansUtilizationDetailsDecoded0 = [CostExplorerClientTypes.SavingsPlansUtilizationDetail]()
            for structure0 in savingsPlansUtilizationDetailsContainer {
                if let structure0 = structure0 {
                    savingsPlansUtilizationDetailsDecoded0?.append(structure0)
                }
            }
        }
        savingsPlansUtilizationDetails = savingsPlansUtilizationDetailsDecoded0
        let totalDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.SavingsPlansUtilizationAggregates.self, forKey: .total)
        total = totalDecoded
        let timePeriodDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.DateInterval.self, forKey: .timePeriod)
        timePeriod = timePeriodDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
