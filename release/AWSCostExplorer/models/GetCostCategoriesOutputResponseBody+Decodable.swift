// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCostCategoriesOutputResponseBody: Swift.Equatable {
    let nextPageToken: Swift.String?
    let costCategoryNames: [Swift.String]?
    let costCategoryValues: [Swift.String]?
    let returnSize: Swift.Int?
    let totalSize: Swift.Int?
}

extension GetCostCategoriesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case costCategoryNames = "CostCategoryNames"
        case costCategoryValues = "CostCategoryValues"
        case nextPageToken = "NextPageToken"
        case returnSize = "ReturnSize"
        case totalSize = "TotalSize"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
        let costCategoryNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .costCategoryNames)
        var costCategoryNamesDecoded0:[Swift.String]? = nil
        if let costCategoryNamesContainer = costCategoryNamesContainer {
            costCategoryNamesDecoded0 = [Swift.String]()
            for string0 in costCategoryNamesContainer {
                if let string0 = string0 {
                    costCategoryNamesDecoded0?.append(string0)
                }
            }
        }
        costCategoryNames = costCategoryNamesDecoded0
        let costCategoryValuesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .costCategoryValues)
        var costCategoryValuesDecoded0:[Swift.String]? = nil
        if let costCategoryValuesContainer = costCategoryValuesContainer {
            costCategoryValuesDecoded0 = [Swift.String]()
            for string0 in costCategoryValuesContainer {
                if let string0 = string0 {
                    costCategoryValuesDecoded0?.append(string0)
                }
            }
        }
        costCategoryValues = costCategoryValuesDecoded0
        let returnSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .returnSize)
        returnSize = returnSizeDecoded
        let totalSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalSize)
        totalSize = totalSizeDecoded
    }
}
