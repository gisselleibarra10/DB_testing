// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSavingsPlansCoverageOutputResponseBody: Swift.Equatable {
    let savingsPlansCoverages: [CostExplorerClientTypes.SavingsPlansCoverage]?
    let nextToken: Swift.String?
}

extension GetSavingsPlansCoverageOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case savingsPlansCoverages = "SavingsPlansCoverages"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let savingsPlansCoveragesContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.SavingsPlansCoverage?].self, forKey: .savingsPlansCoverages)
        var savingsPlansCoveragesDecoded0:[CostExplorerClientTypes.SavingsPlansCoverage]? = nil
        if let savingsPlansCoveragesContainer = savingsPlansCoveragesContainer {
            savingsPlansCoveragesDecoded0 = [CostExplorerClientTypes.SavingsPlansCoverage]()
            for structure0 in savingsPlansCoveragesContainer {
                if let structure0 = structure0 {
                    savingsPlansCoveragesDecoded0?.append(structure0)
                }
            }
        }
        savingsPlansCoverages = savingsPlansCoveragesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
