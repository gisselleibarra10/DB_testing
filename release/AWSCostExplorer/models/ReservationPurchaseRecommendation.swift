// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CostExplorerClientTypes {
    /// A specific reservation that Amazon Web Services recommends for purchase.
    public struct ReservationPurchaseRecommendation: Swift.Equatable {
        /// The account scope that Amazon Web Services recommends that you purchase this instance for. For example, you can purchase this reservation for an entire organization in Amazon Web Services Organizations.
        public var accountScope: CostExplorerClientTypes.AccountScope?
        /// How many days of previous usage that Amazon Web Services considers when making this recommendation.
        public var lookbackPeriodInDays: CostExplorerClientTypes.LookbackPeriodInDays?
        /// The payment option for the reservation (for example, AllUpfront or NoUpfront).
        public var paymentOption: CostExplorerClientTypes.PaymentOption?
        /// Details about the recommended purchases.
        public var recommendationDetails: [CostExplorerClientTypes.ReservationPurchaseRecommendationDetail]?
        /// A summary about the recommended purchase.
        public var recommendationSummary: CostExplorerClientTypes.ReservationPurchaseRecommendationSummary?
        /// Hardware specifications for the service that you want recommendations for.
        public var serviceSpecification: CostExplorerClientTypes.ServiceSpecification?
        /// The term of the reservation that you want recommendations for, in years.
        public var termInYears: CostExplorerClientTypes.TermInYears?

        public init (
            accountScope: CostExplorerClientTypes.AccountScope? = nil,
            lookbackPeriodInDays: CostExplorerClientTypes.LookbackPeriodInDays? = nil,
            paymentOption: CostExplorerClientTypes.PaymentOption? = nil,
            recommendationDetails: [CostExplorerClientTypes.ReservationPurchaseRecommendationDetail]? = nil,
            recommendationSummary: CostExplorerClientTypes.ReservationPurchaseRecommendationSummary? = nil,
            serviceSpecification: CostExplorerClientTypes.ServiceSpecification? = nil,
            termInYears: CostExplorerClientTypes.TermInYears? = nil
        )
        {
            self.accountScope = accountScope
            self.lookbackPeriodInDays = lookbackPeriodInDays
            self.paymentOption = paymentOption
            self.recommendationDetails = recommendationDetails
            self.recommendationSummary = recommendationSummary
            self.serviceSpecification = serviceSpecification
            self.termInYears = termInYears
        }
    }

}
