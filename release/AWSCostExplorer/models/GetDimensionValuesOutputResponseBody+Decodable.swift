// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDimensionValuesOutputResponseBody: Swift.Equatable {
    let dimensionValues: [CostExplorerClientTypes.DimensionValuesWithAttributes]?
    let returnSize: Swift.Int?
    let totalSize: Swift.Int?
    let nextPageToken: Swift.String?
}

extension GetDimensionValuesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dimensionValues = "DimensionValues"
        case nextPageToken = "NextPageToken"
        case returnSize = "ReturnSize"
        case totalSize = "TotalSize"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dimensionValuesContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.DimensionValuesWithAttributes?].self, forKey: .dimensionValues)
        var dimensionValuesDecoded0:[CostExplorerClientTypes.DimensionValuesWithAttributes]? = nil
        if let dimensionValuesContainer = dimensionValuesContainer {
            dimensionValuesDecoded0 = [CostExplorerClientTypes.DimensionValuesWithAttributes]()
            for structure0 in dimensionValuesContainer {
                if let structure0 = structure0 {
                    dimensionValuesDecoded0?.append(structure0)
                }
            }
        }
        dimensionValues = dimensionValuesDecoded0
        let returnSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .returnSize)
        returnSize = returnSizeDecoded
        let totalSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalSize)
        totalSize = totalSizeDecoded
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
