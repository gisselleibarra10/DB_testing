// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UntagResourceInputBody: Swift.Equatable {
    let resourceArn: Swift.String?
    let resourceTagKeys: [Swift.String]?
}

extension UntagResourceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceArn = "ResourceArn"
        case resourceTagKeys = "ResourceTagKeys"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let resourceTagKeysContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .resourceTagKeys)
        var resourceTagKeysDecoded0:[Swift.String]? = nil
        if let resourceTagKeysContainer = resourceTagKeysContainer {
            resourceTagKeysDecoded0 = [Swift.String]()
            for string0 in resourceTagKeysContainer {
                if let string0 = string0 {
                    resourceTagKeysDecoded0?.append(string0)
                }
            }
        }
        resourceTagKeys = resourceTagKeysDecoded0
    }
}
