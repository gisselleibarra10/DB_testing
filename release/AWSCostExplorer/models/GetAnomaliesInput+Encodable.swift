// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetAnomaliesInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dateInterval = "DateInterval"
        case feedback = "Feedback"
        case maxResults = "MaxResults"
        case monitorArn = "MonitorArn"
        case nextPageToken = "NextPageToken"
        case totalImpact = "TotalImpact"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dateInterval = self.dateInterval {
            try encodeContainer.encode(dateInterval, forKey: .dateInterval)
        }
        if let feedback = self.feedback {
            try encodeContainer.encode(feedback.rawValue, forKey: .feedback)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let monitorArn = self.monitorArn {
            try encodeContainer.encode(monitorArn, forKey: .monitorArn)
        }
        if let nextPageToken = self.nextPageToken {
            try encodeContainer.encode(nextPageToken, forKey: .nextPageToken)
        }
        if let totalImpact = self.totalImpact {
            try encodeContainer.encode(totalImpact, forKey: .totalImpact)
        }
    }
}
