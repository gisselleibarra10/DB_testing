// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateAnomalyMonitorInputBody: Swift.Equatable {
    let anomalyMonitor: CostExplorerClientTypes.AnomalyMonitor?
    let resourceTags: [CostExplorerClientTypes.ResourceTag]?
}

extension CreateAnomalyMonitorInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomalyMonitor = "AnomalyMonitor"
        case resourceTags = "ResourceTags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyMonitorDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.AnomalyMonitor.self, forKey: .anomalyMonitor)
        anomalyMonitor = anomalyMonitorDecoded
        let resourceTagsContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.ResourceTag?].self, forKey: .resourceTags)
        var resourceTagsDecoded0:[CostExplorerClientTypes.ResourceTag]? = nil
        if let resourceTagsContainer = resourceTagsContainer {
            resourceTagsDecoded0 = [CostExplorerClientTypes.ResourceTag]()
            for structure0 in resourceTagsContainer {
                if let structure0 = structure0 {
                    resourceTagsDecoded0?.append(structure0)
                }
            }
        }
        resourceTags = resourceTagsDecoded0
    }
}
