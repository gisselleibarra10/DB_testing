// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CostExplorerClientTypes {
    /// A reference to a Cost Category containing only enough information to identify the Cost Category. You can use this information to retrieve the full Cost Category information using DescribeCostCategory.
    public struct CostCategoryReference: Swift.Equatable {
        /// The unique identifier for your Cost Category.
        public var costCategoryArn: Swift.String?
        /// The default value for the cost category.
        public var defaultValue: Swift.String?
        /// The Cost Category's effective end date.
        public var effectiveEnd: Swift.String?
        /// The Cost Category's effective start date.
        public var effectiveStart: Swift.String?
        /// The unique name of the Cost Category.
        public var name: Swift.String?
        /// The number of rules that are associated with a specific Cost Category.
        public var numberOfRules: Swift.Int
        /// The list of processing statuses for Cost Management products for a specific cost category.
        public var processingStatus: [CostExplorerClientTypes.CostCategoryProcessingStatus]?
        /// A list of unique cost category values in a specific cost category.
        public var values: [Swift.String]?

        public init (
            costCategoryArn: Swift.String? = nil,
            defaultValue: Swift.String? = nil,
            effectiveEnd: Swift.String? = nil,
            effectiveStart: Swift.String? = nil,
            name: Swift.String? = nil,
            numberOfRules: Swift.Int = 0,
            processingStatus: [CostExplorerClientTypes.CostCategoryProcessingStatus]? = nil,
            values: [Swift.String]? = nil
        )
        {
            self.costCategoryArn = costCategoryArn
            self.defaultValue = defaultValue
            self.effectiveEnd = effectiveEnd
            self.effectiveStart = effectiveStart
            self.name = name
            self.numberOfRules = numberOfRules
            self.processingStatus = processingStatus
            self.values = values
        }
    }

}
