// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CostExplorerClientTypes {
    /// Details about your recommended reservation purchase.
    public struct ReservationPurchaseRecommendationDetail: Swift.Equatable {
        /// The account that this Reserved Instance (RI) recommendation is for.
        public var accountId: Swift.String?
        /// The average number of normalized units that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.
        public var averageNormalizedUnitsUsedPerHour: Swift.String?
        /// The average number of instances that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.
        public var averageNumberOfInstancesUsedPerHour: Swift.String?
        /// The average utilization of your instances. Amazon Web Services uses this to calculate your recommended reservation purchases.
        public var averageUtilization: Swift.String?
        /// The currency code that Amazon Web Services used to calculate the costs for this instance.
        public var currencyCode: Swift.String?
        /// How long Amazon Web Services estimates that it takes for this instance to start saving you money, in months.
        public var estimatedBreakEvenInMonths: Swift.String?
        /// How much Amazon Web Services estimates that you spend on On-Demand Instances in a month.
        public var estimatedMonthlyOnDemandCost: Swift.String?
        /// How much Amazon Web Services estimates that this specific recommendation might save you in a month.
        public var estimatedMonthlySavingsAmount: Swift.String?
        /// How much Amazon Web Services estimates that this specific recommendation might save you in a month, as a percentage of your overall costs.
        public var estimatedMonthlySavingsPercentage: Swift.String?
        /// How much Amazon Web Services estimates that you might spend for all usage during the specified historical period if you had a reservation.
        public var estimatedReservationCostForLookbackPeriod: Swift.String?
        /// Details about the instances that Amazon Web Services recommends that you purchase.
        public var instanceDetails: CostExplorerClientTypes.InstanceDetails?
        /// The maximum number of normalized units that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.
        public var maximumNormalizedUnitsUsedPerHour: Swift.String?
        /// The maximum number of instances that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.
        public var maximumNumberOfInstancesUsedPerHour: Swift.String?
        /// The minimum number of normalized units that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.
        public var minimumNormalizedUnitsUsedPerHour: Swift.String?
        /// The minimum number of instances that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.
        public var minimumNumberOfInstancesUsedPerHour: Swift.String?
        /// The number of normalized units that Amazon Web Services recommends that you purchase.
        public var recommendedNormalizedUnitsToPurchase: Swift.String?
        /// The number of instances that Amazon Web Services recommends that you purchase.
        public var recommendedNumberOfInstancesToPurchase: Swift.String?
        /// How much purchasing this instance costs you on a monthly basis.
        public var recurringStandardMonthlyCost: Swift.String?
        /// How much purchasing this instance costs you upfront.
        public var upfrontCost: Swift.String?

        public init (
            accountId: Swift.String? = nil,
            averageNormalizedUnitsUsedPerHour: Swift.String? = nil,
            averageNumberOfInstancesUsedPerHour: Swift.String? = nil,
            averageUtilization: Swift.String? = nil,
            currencyCode: Swift.String? = nil,
            estimatedBreakEvenInMonths: Swift.String? = nil,
            estimatedMonthlyOnDemandCost: Swift.String? = nil,
            estimatedMonthlySavingsAmount: Swift.String? = nil,
            estimatedMonthlySavingsPercentage: Swift.String? = nil,
            estimatedReservationCostForLookbackPeriod: Swift.String? = nil,
            instanceDetails: CostExplorerClientTypes.InstanceDetails? = nil,
            maximumNormalizedUnitsUsedPerHour: Swift.String? = nil,
            maximumNumberOfInstancesUsedPerHour: Swift.String? = nil,
            minimumNormalizedUnitsUsedPerHour: Swift.String? = nil,
            minimumNumberOfInstancesUsedPerHour: Swift.String? = nil,
            recommendedNormalizedUnitsToPurchase: Swift.String? = nil,
            recommendedNumberOfInstancesToPurchase: Swift.String? = nil,
            recurringStandardMonthlyCost: Swift.String? = nil,
            upfrontCost: Swift.String? = nil
        )
        {
            self.accountId = accountId
            self.averageNormalizedUnitsUsedPerHour = averageNormalizedUnitsUsedPerHour
            self.averageNumberOfInstancesUsedPerHour = averageNumberOfInstancesUsedPerHour
            self.averageUtilization = averageUtilization
            self.currencyCode = currencyCode
            self.estimatedBreakEvenInMonths = estimatedBreakEvenInMonths
            self.estimatedMonthlyOnDemandCost = estimatedMonthlyOnDemandCost
            self.estimatedMonthlySavingsAmount = estimatedMonthlySavingsAmount
            self.estimatedMonthlySavingsPercentage = estimatedMonthlySavingsPercentage
            self.estimatedReservationCostForLookbackPeriod = estimatedReservationCostForLookbackPeriod
            self.instanceDetails = instanceDetails
            self.maximumNormalizedUnitsUsedPerHour = maximumNormalizedUnitsUsedPerHour
            self.maximumNumberOfInstancesUsedPerHour = maximumNumberOfInstancesUsedPerHour
            self.minimumNormalizedUnitsUsedPerHour = minimumNormalizedUnitsUsedPerHour
            self.minimumNumberOfInstancesUsedPerHour = minimumNumberOfInstancesUsedPerHour
            self.recommendedNormalizedUnitsToPurchase = recommendedNormalizedUnitsToPurchase
            self.recommendedNumberOfInstancesToPurchase = recommendedNumberOfInstancesToPurchase
            self.recurringStandardMonthlyCost = recurringStandardMonthlyCost
            self.upfrontCost = upfrontCost
        }
    }

}
