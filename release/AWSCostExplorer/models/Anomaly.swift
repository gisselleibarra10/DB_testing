// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CostExplorerClientTypes {
    /// An unusual cost pattern. This consists of the detailed metadata and the current status of the anomaly object.
    public struct Anomaly: Swift.Equatable {
        /// The last day the anomaly is detected.
        public var anomalyEndDate: Swift.String?
        /// The unique identifier for the anomaly.
        /// This member is required.
        public var anomalyId: Swift.String?
        /// The latest and maximum score for the anomaly.
        /// This member is required.
        public var anomalyScore: CostExplorerClientTypes.AnomalyScore?
        /// The first day the anomaly is detected.
        public var anomalyStartDate: Swift.String?
        /// The dimension for the anomaly (for example, an Amazon Web Service in a service monitor).
        public var dimensionValue: Swift.String?
        /// The feedback value.
        public var feedback: CostExplorerClientTypes.AnomalyFeedbackType?
        /// The dollar impact for the anomaly.
        /// This member is required.
        public var impact: CostExplorerClientTypes.Impact?
        /// The Amazon Resource Name (ARN) for the cost monitor that generated this anomaly.
        /// This member is required.
        public var monitorArn: Swift.String?
        /// The list of identified root causes for the anomaly.
        public var rootCauses: [CostExplorerClientTypes.RootCause]?

        public init (
            anomalyEndDate: Swift.String? = nil,
            anomalyId: Swift.String? = nil,
            anomalyScore: CostExplorerClientTypes.AnomalyScore? = nil,
            anomalyStartDate: Swift.String? = nil,
            dimensionValue: Swift.String? = nil,
            feedback: CostExplorerClientTypes.AnomalyFeedbackType? = nil,
            impact: CostExplorerClientTypes.Impact? = nil,
            monitorArn: Swift.String? = nil,
            rootCauses: [CostExplorerClientTypes.RootCause]? = nil
        )
        {
            self.anomalyEndDate = anomalyEndDate
            self.anomalyId = anomalyId
            self.anomalyScore = anomalyScore
            self.anomalyStartDate = anomalyStartDate
            self.dimensionValue = dimensionValue
            self.feedback = feedback
            self.impact = impact
            self.monitorArn = monitorArn
            self.rootCauses = rootCauses
        }
    }

}
