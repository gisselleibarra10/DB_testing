// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetReservationCoverageOutputResponseBody: Swift.Equatable {
    let coveragesByTime: [CostExplorerClientTypes.CoverageByTime]?
    let total: CostExplorerClientTypes.Coverage?
    let nextPageToken: Swift.String?
}

extension GetReservationCoverageOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case coveragesByTime = "CoveragesByTime"
        case nextPageToken = "NextPageToken"
        case total = "Total"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let coveragesByTimeContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.CoverageByTime?].self, forKey: .coveragesByTime)
        var coveragesByTimeDecoded0:[CostExplorerClientTypes.CoverageByTime]? = nil
        if let coveragesByTimeContainer = coveragesByTimeContainer {
            coveragesByTimeDecoded0 = [CostExplorerClientTypes.CoverageByTime]()
            for structure0 in coveragesByTimeContainer {
                if let structure0 = structure0 {
                    coveragesByTimeDecoded0?.append(structure0)
                }
            }
        }
        coveragesByTime = coveragesByTimeDecoded0
        let totalDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.Coverage.self, forKey: .total)
        total = totalDecoded
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
