// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRightsizingRecommendationOutputResponseBody: Swift.Equatable {
    let metadata: CostExplorerClientTypes.RightsizingRecommendationMetadata?
    let summary: CostExplorerClientTypes.RightsizingRecommendationSummary?
    let rightsizingRecommendations: [CostExplorerClientTypes.RightsizingRecommendation]?
    let nextPageToken: Swift.String?
    let configuration: CostExplorerClientTypes.RightsizingRecommendationConfiguration?
}

extension GetRightsizingRecommendationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configuration = "Configuration"
        case metadata = "Metadata"
        case nextPageToken = "NextPageToken"
        case rightsizingRecommendations = "RightsizingRecommendations"
        case summary = "Summary"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metadataDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.RightsizingRecommendationMetadata.self, forKey: .metadata)
        metadata = metadataDecoded
        let summaryDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.RightsizingRecommendationSummary.self, forKey: .summary)
        summary = summaryDecoded
        let rightsizingRecommendationsContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.RightsizingRecommendation?].self, forKey: .rightsizingRecommendations)
        var rightsizingRecommendationsDecoded0:[CostExplorerClientTypes.RightsizingRecommendation]? = nil
        if let rightsizingRecommendationsContainer = rightsizingRecommendationsContainer {
            rightsizingRecommendationsDecoded0 = [CostExplorerClientTypes.RightsizingRecommendation]()
            for structure0 in rightsizingRecommendationsContainer {
                if let structure0 = structure0 {
                    rightsizingRecommendationsDecoded0?.append(structure0)
                }
            }
        }
        rightsizingRecommendations = rightsizingRecommendationsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
        let configurationDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.RightsizingRecommendationConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
    }
}
