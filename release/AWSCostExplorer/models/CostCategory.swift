// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CostExplorerClientTypes {
    /// The structure of Cost Categories. This includes detailed metadata and the set of rules for the CostCategory object.
    public struct CostCategory: Swift.Equatable {
        /// The unique identifier for your Cost Category.
        /// This member is required.
        public var costCategoryArn: Swift.String?
        /// The default value for the cost category.
        public var defaultValue: Swift.String?
        /// The effective end date of your Cost Category.
        public var effectiveEnd: Swift.String?
        /// The effective start date of your Cost Category.
        /// This member is required.
        public var effectiveStart: Swift.String?
        /// The unique name of the Cost Category.
        /// This member is required.
        public var name: Swift.String?
        /// The list of processing statuses for Cost Management products for a specific cost category.
        public var processingStatus: [CostExplorerClientTypes.CostCategoryProcessingStatus]?
        /// The rule schema version in this particular Cost Category.
        /// This member is required.
        public var ruleVersion: CostExplorerClientTypes.CostCategoryRuleVersion?
        /// The rules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value.
        /// This member is required.
        public var rules: [CostExplorerClientTypes.CostCategoryRule]?
        /// The split charge rules that are used to allocate your charges between your Cost Category values.
        public var splitChargeRules: [CostExplorerClientTypes.CostCategorySplitChargeRule]?

        public init (
            costCategoryArn: Swift.String? = nil,
            defaultValue: Swift.String? = nil,
            effectiveEnd: Swift.String? = nil,
            effectiveStart: Swift.String? = nil,
            name: Swift.String? = nil,
            processingStatus: [CostExplorerClientTypes.CostCategoryProcessingStatus]? = nil,
            ruleVersion: CostExplorerClientTypes.CostCategoryRuleVersion? = nil,
            rules: [CostExplorerClientTypes.CostCategoryRule]? = nil,
            splitChargeRules: [CostExplorerClientTypes.CostCategorySplitChargeRule]? = nil
        )
        {
            self.costCategoryArn = costCategoryArn
            self.defaultValue = defaultValue
            self.effectiveEnd = effectiveEnd
            self.effectiveStart = effectiveStart
            self.name = name
            self.processingStatus = processingStatus
            self.ruleVersion = ruleVersion
            self.rules = rules
            self.splitChargeRules = splitChargeRules
        }
    }

}
