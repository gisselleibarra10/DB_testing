// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetSavingsPlansCoverageInput: Swift.Equatable {
    /// Filters Savings Plans coverage data by dimensions. You can filter data for Savings Plans usage with the following dimensions:
    ///
    /// * LINKED_ACCOUNT
    ///
    /// * REGION
    ///
    /// * SERVICE
    ///
    /// * INSTANCE_FAMILY
    ///
    ///
    /// GetSavingsPlansCoverage uses the same [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object as the other operations, but only AND is supported among each dimension. If there are multiple values for a dimension, they are OR'd together. Cost category is also supported.
    public var filter: CostExplorerClientTypes.Expression?
    /// The granularity of the Amazon Web Services cost data for your Savings Plans. Granularity can't be set if GroupBy is set. The GetSavingsPlansCoverage operation supports only DAILY and MONTHLY granularities.
    public var granularity: CostExplorerClientTypes.Granularity?
    /// You can group the data using the attributes INSTANCE_FAMILY, REGION, or SERVICE.
    public var groupBy: [CostExplorerClientTypes.GroupDefinition]?
    /// The number of items to be returned in a response. The default is 20, with a minimum value of 1.
    public var maxResults: Swift.Int?
    /// The measurement that you want your Savings Plans coverage reported in. The only valid value is SpendCoveredBySavingsPlans.
    public var metrics: [Swift.String]?
    /// The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.
    public var nextToken: Swift.String?
    /// The value that you want to sort the data by. The following values are supported for Key:
    ///
    /// * SpendCoveredBySavingsPlan
    ///
    /// * OnDemandCost
    ///
    /// * CoveragePercentage
    ///
    /// * TotalCost
    ///
    /// * InstanceFamily
    ///
    /// * Region
    ///
    /// * Service
    ///
    ///
    /// The supported values for SortOrder are ASCENDING and DESCENDING.
    public var sortBy: CostExplorerClientTypes.SortDefinition?
    /// The time period that you want the usage and costs for. The Start date must be within 13 months. The End date must be after the Start date, and before the current date. Future dates can't be used as an End date.
    /// This member is required.
    public var timePeriod: CostExplorerClientTypes.DateInterval?

    public init (
        filter: CostExplorerClientTypes.Expression? = nil,
        granularity: CostExplorerClientTypes.Granularity? = nil,
        groupBy: [CostExplorerClientTypes.GroupDefinition]? = nil,
        maxResults: Swift.Int? = nil,
        metrics: [Swift.String]? = nil,
        nextToken: Swift.String? = nil,
        sortBy: CostExplorerClientTypes.SortDefinition? = nil,
        timePeriod: CostExplorerClientTypes.DateInterval? = nil
    )
    {
        self.filter = filter
        self.granularity = granularity
        self.groupBy = groupBy
        self.maxResults = maxResults
        self.metrics = metrics
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.timePeriod = timePeriod
    }
}
