// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetReservationUtilizationOutputResponseBody: Swift.Equatable {
    let utilizationsByTime: [CostExplorerClientTypes.UtilizationByTime]?
    let total: CostExplorerClientTypes.ReservationAggregates?
    let nextPageToken: Swift.String?
}

extension GetReservationUtilizationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextPageToken = "NextPageToken"
        case total = "Total"
        case utilizationsByTime = "UtilizationsByTime"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let utilizationsByTimeContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.UtilizationByTime?].self, forKey: .utilizationsByTime)
        var utilizationsByTimeDecoded0:[CostExplorerClientTypes.UtilizationByTime]? = nil
        if let utilizationsByTimeContainer = utilizationsByTimeContainer {
            utilizationsByTimeDecoded0 = [CostExplorerClientTypes.UtilizationByTime]()
            for structure0 in utilizationsByTimeContainer {
                if let structure0 = structure0 {
                    utilizationsByTimeDecoded0?.append(structure0)
                }
            }
        }
        utilizationsByTime = utilizationsByTimeDecoded0
        let totalDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.ReservationAggregates.self, forKey: .total)
        total = totalDecoded
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
