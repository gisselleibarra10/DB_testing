// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCostAllocationTagsOutputResponseBody: Swift.Equatable {
    let costAllocationTags: [CostExplorerClientTypes.CostAllocationTag]?
    let nextToken: Swift.String?
}

extension ListCostAllocationTagsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case costAllocationTags = "CostAllocationTags"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let costAllocationTagsContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.CostAllocationTag?].self, forKey: .costAllocationTags)
        var costAllocationTagsDecoded0:[CostExplorerClientTypes.CostAllocationTag]? = nil
        if let costAllocationTagsContainer = costAllocationTagsContainer {
            costAllocationTagsDecoded0 = [CostExplorerClientTypes.CostAllocationTag]()
            for structure0 in costAllocationTagsContainer {
                if let structure0 = structure0 {
                    costAllocationTagsDecoded0?.append(structure0)
                }
            }
        }
        costAllocationTags = costAllocationTagsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
