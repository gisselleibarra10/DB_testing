// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CostExplorerClientTypes {
    /// The amount of Savings Plans utilization (in hours).
    public struct SavingsPlansUtilizationByTime: Swift.Equatable {
        /// The total amortized commitment for a Savings Plans. This includes the sum of the upfront and recurring Savings Plans fees.
        public var amortizedCommitment: CostExplorerClientTypes.SavingsPlansAmortizedCommitment?
        /// The amount that's saved by using existing Savings Plans. Savings returns both net savings from Savings Plans and also the onDemandCostEquivalent of the Savings Plans when considering the utilization rate.
        public var savings: CostExplorerClientTypes.SavingsPlansSavings?
        /// The time period of the request.
        /// This member is required.
        public var timePeriod: CostExplorerClientTypes.DateInterval?
        /// A ratio of your effectiveness of using existing Savings Plans to apply to workloads that are Savings Plans eligible.
        /// This member is required.
        public var utilization: CostExplorerClientTypes.SavingsPlansUtilization?

        public init (
            amortizedCommitment: CostExplorerClientTypes.SavingsPlansAmortizedCommitment? = nil,
            savings: CostExplorerClientTypes.SavingsPlansSavings? = nil,
            timePeriod: CostExplorerClientTypes.DateInterval? = nil,
            utilization: CostExplorerClientTypes.SavingsPlansUtilization? = nil
        )
        {
            self.amortizedCommitment = amortizedCommitment
            self.savings = savings
            self.timePeriod = timePeriod
            self.utilization = utilization
        }
    }

}
