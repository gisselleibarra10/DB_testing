// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUsageForecastOutputResponseBody: Swift.Equatable {
    let total: CostExplorerClientTypes.MetricValue?
    let forecastResultsByTime: [CostExplorerClientTypes.ForecastResult]?
}

extension GetUsageForecastOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case forecastResultsByTime = "ForecastResultsByTime"
        case total = "Total"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.MetricValue.self, forKey: .total)
        total = totalDecoded
        let forecastResultsByTimeContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.ForecastResult?].self, forKey: .forecastResultsByTime)
        var forecastResultsByTimeDecoded0:[CostExplorerClientTypes.ForecastResult]? = nil
        if let forecastResultsByTimeContainer = forecastResultsByTimeContainer {
            forecastResultsByTimeDecoded0 = [CostExplorerClientTypes.ForecastResult]()
            for structure0 in forecastResultsByTimeContainer {
                if let structure0 = structure0 {
                    forecastResultsByTimeDecoded0?.append(structure0)
                }
            }
        }
        forecastResultsByTime = forecastResultsByTimeDecoded0
    }
}
