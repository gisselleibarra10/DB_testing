// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetAnomalySubscriptionsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxResults = "MaxResults"
        case monitorArn = "MonitorArn"
        case nextPageToken = "NextPageToken"
        case subscriptionArnList = "SubscriptionArnList"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let monitorArn = self.monitorArn {
            try encodeContainer.encode(monitorArn, forKey: .monitorArn)
        }
        if let nextPageToken = self.nextPageToken {
            try encodeContainer.encode(nextPageToken, forKey: .nextPageToken)
        }
        if let subscriptionArnList = subscriptionArnList {
            var subscriptionArnListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .subscriptionArnList)
            for values0 in subscriptionArnList {
                try subscriptionArnListContainer.encode(values0)
            }
        }
    }
}
