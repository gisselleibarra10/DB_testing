// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCostCategoryDefinitionsOutputResponseBody: Swift.Equatable {
    let costCategoryReferences: [CostExplorerClientTypes.CostCategoryReference]?
    let nextToken: Swift.String?
}

extension ListCostCategoryDefinitionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case costCategoryReferences = "CostCategoryReferences"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let costCategoryReferencesContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.CostCategoryReference?].self, forKey: .costCategoryReferences)
        var costCategoryReferencesDecoded0:[CostExplorerClientTypes.CostCategoryReference]? = nil
        if let costCategoryReferencesContainer = costCategoryReferencesContainer {
            costCategoryReferencesDecoded0 = [CostExplorerClientTypes.CostCategoryReference]()
            for structure0 in costCategoryReferencesContainer {
                if let structure0 = structure0 {
                    costCategoryReferencesDecoded0?.append(structure0)
                }
            }
        }
        costCategoryReferences = costCategoryReferencesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
