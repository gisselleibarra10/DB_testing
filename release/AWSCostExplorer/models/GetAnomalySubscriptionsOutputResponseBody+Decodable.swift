// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAnomalySubscriptionsOutputResponseBody: Swift.Equatable {
    let anomalySubscriptions: [CostExplorerClientTypes.AnomalySubscription]?
    let nextPageToken: Swift.String?
}

extension GetAnomalySubscriptionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomalySubscriptions = "AnomalySubscriptions"
        case nextPageToken = "NextPageToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalySubscriptionsContainer = try containerValues.decodeIfPresent([CostExplorerClientTypes.AnomalySubscription?].self, forKey: .anomalySubscriptions)
        var anomalySubscriptionsDecoded0:[CostExplorerClientTypes.AnomalySubscription]? = nil
        if let anomalySubscriptionsContainer = anomalySubscriptionsContainer {
            anomalySubscriptionsDecoded0 = [CostExplorerClientTypes.AnomalySubscription]()
            for structure0 in anomalySubscriptionsContainer {
                if let structure0 = structure0 {
                    anomalySubscriptionsDecoded0?.append(structure0)
                }
            }
        }
        anomalySubscriptions = anomalySubscriptionsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
