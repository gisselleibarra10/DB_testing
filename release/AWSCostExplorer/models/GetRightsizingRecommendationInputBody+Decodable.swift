// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRightsizingRecommendationInputBody: Swift.Equatable {
    let filter: CostExplorerClientTypes.Expression?
    let configuration: CostExplorerClientTypes.RightsizingRecommendationConfiguration?
    let service: Swift.String?
    let pageSize: Swift.Int
    let nextPageToken: Swift.String?
}

extension GetRightsizingRecommendationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configuration = "Configuration"
        case filter = "Filter"
        case nextPageToken = "NextPageToken"
        case pageSize = "PageSize"
        case service = "Service"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.Expression.self, forKey: .filter)
        filter = filterDecoded
        let configurationDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.RightsizingRecommendationConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
        let serviceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .service)
        service = serviceDecoded
        let pageSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .pageSize) ?? 0
        pageSize = pageSizeDecoded
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
