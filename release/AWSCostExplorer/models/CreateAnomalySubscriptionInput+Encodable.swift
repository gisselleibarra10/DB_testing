// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateAnomalySubscriptionInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anomalySubscription = "AnomalySubscription"
        case resourceTags = "ResourceTags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let anomalySubscription = self.anomalySubscription {
            try encodeContainer.encode(anomalySubscription, forKey: .anomalySubscription)
        }
        if let resourceTags = resourceTags {
            var resourceTagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .resourceTags)
            for resourcetaglist0 in resourceTags {
                try resourceTagsContainer.encode(resourcetaglist0)
            }
        }
    }
}
