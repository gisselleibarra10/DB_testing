// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CostExplorerClientTypes.RedshiftInstanceDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case currentGeneration = "CurrentGeneration"
        case family = "Family"
        case nodeType = "NodeType"
        case region = "Region"
        case sizeFlexEligible = "SizeFlexEligible"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if currentGeneration != false {
            try encodeContainer.encode(currentGeneration, forKey: .currentGeneration)
        }
        if let family = self.family {
            try encodeContainer.encode(family, forKey: .family)
        }
        if let nodeType = self.nodeType {
            try encodeContainer.encode(nodeType, forKey: .nodeType)
        }
        if let region = self.region {
            try encodeContainer.encode(region, forKey: .region)
        }
        if sizeFlexEligible != false {
            try encodeContainer.encode(sizeFlexEligible, forKey: .sizeFlexEligible)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let familyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .family)
        family = familyDecoded
        let nodeTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nodeType)
        nodeType = nodeTypeDecoded
        let regionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .region)
        region = regionDecoded
        let currentGenerationDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .currentGeneration) ?? false
        currentGeneration = currentGenerationDecoded
        let sizeFlexEligibleDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .sizeFlexEligible) ?? false
        sizeFlexEligible = sizeFlexEligibleDecoded
    }
}
