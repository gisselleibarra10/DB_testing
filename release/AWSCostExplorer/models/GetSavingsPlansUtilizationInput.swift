// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetSavingsPlansUtilizationInput: Swift.Equatable {
    /// Filters Savings Plans utilization coverage data for active Savings Plans dimensions. You can filter data with the following dimensions:
    ///
    /// * LINKED_ACCOUNT
    ///
    /// * SAVINGS_PLAN_ARN
    ///
    /// * SAVINGS_PLANS_TYPE
    ///
    /// * REGION
    ///
    /// * PAYMENT_OPTION
    ///
    /// * INSTANCE_TYPE_FAMILY
    ///
    ///
    /// GetSavingsPlansUtilization uses the same [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object as the other operations, but only AND is supported among each dimension.
    public var filter: CostExplorerClientTypes.Expression?
    /// The granularity of the Amazon Web Services utillization data for your Savings Plans. The GetSavingsPlansUtilization operation supports only DAILY and MONTHLY granularities.
    public var granularity: CostExplorerClientTypes.Granularity?
    /// The value that you want to sort the data by. The following values are supported for Key:
    ///
    /// * UtilizationPercentage
    ///
    /// * TotalCommitment
    ///
    /// * UsedCommitment
    ///
    /// * UnusedCommitment
    ///
    /// * NetSavings
    ///
    ///
    /// The supported values for SortOrder are ASCENDING and DESCENDING.
    public var sortBy: CostExplorerClientTypes.SortDefinition?
    /// The time period that you want the usage and costs for. The Start date must be within 13 months. The End date must be after the Start date, and before the current date. Future dates can't be used as an End date.
    /// This member is required.
    public var timePeriod: CostExplorerClientTypes.DateInterval?

    public init (
        filter: CostExplorerClientTypes.Expression? = nil,
        granularity: CostExplorerClientTypes.Granularity? = nil,
        sortBy: CostExplorerClientTypes.SortDefinition? = nil,
        timePeriod: CostExplorerClientTypes.DateInterval? = nil
    )
    {
        self.filter = filter
        self.granularity = granularity
        self.sortBy = sortBy
        self.timePeriod = timePeriod
    }
}
