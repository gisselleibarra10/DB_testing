// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSavingsPlansUtilizationInputBody: Swift.Equatable {
    let timePeriod: CostExplorerClientTypes.DateInterval?
    let granularity: CostExplorerClientTypes.Granularity?
    let filter: CostExplorerClientTypes.Expression?
    let sortBy: CostExplorerClientTypes.SortDefinition?
}

extension GetSavingsPlansUtilizationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filter = "Filter"
        case granularity = "Granularity"
        case sortBy = "SortBy"
        case timePeriod = "TimePeriod"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timePeriodDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.DateInterval.self, forKey: .timePeriod)
        timePeriod = timePeriodDecoded
        let granularityDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.Granularity.self, forKey: .granularity)
        granularity = granularityDecoded
        let filterDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.Expression.self, forKey: .filter)
        filter = filterDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(CostExplorerClientTypes.SortDefinition.self, forKey: .sortBy)
        sortBy = sortByDecoded
    }
}
