// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CostExplorerClientTypes {
    /// Details for your recommended Savings Plans.
    public struct SavingsPlansPurchaseRecommendationDetail: Swift.Equatable {
        /// The AccountID the recommendation is generated for.
        public var accountId: Swift.String?
        /// The currency code that Amazon Web Services used to generate the recommendations and present potential savings.
        public var currencyCode: Swift.String?
        /// The average value of hourly On-Demand spend over the lookback period of the applicable usage type.
        public var currentAverageHourlyOnDemandSpend: Swift.String?
        /// The highest value of hourly On-Demand spend over the lookback period of the applicable usage type.
        public var currentMaximumHourlyOnDemandSpend: Swift.String?
        /// The lowest value of hourly On-Demand spend over the lookback period of the applicable usage type.
        public var currentMinimumHourlyOnDemandSpend: Swift.String?
        /// The estimated utilization of the recommended Savings Plans.
        public var estimatedAverageUtilization: Swift.String?
        /// The estimated monthly savings amount based on the recommended Savings Plans.
        public var estimatedMonthlySavingsAmount: Swift.String?
        /// The remaining On-Demand cost estimated to not be covered by the recommended Savings Plans, over the length of the lookback period.
        public var estimatedOnDemandCost: Swift.String?
        /// The estimated On-Demand costs you expect with no additional commitment, based on your usage of the selected time period and the Savings Plans you own.
        public var estimatedOnDemandCostWithCurrentCommitment: Swift.String?
        /// The estimated return on investment that's based on the recommended Savings Plans that you purchased. This is calculated as estimatedSavingsAmount/ estimatedSPCost*100.
        public var estimatedROI: Swift.String?
        /// The cost of the recommended Savings Plans over the length of the lookback period.
        public var estimatedSPCost: Swift.String?
        /// The estimated savings amount that's based on the recommended Savings Plans over the length of the lookback period.
        public var estimatedSavingsAmount: Swift.String?
        /// The estimated savings percentage relative to the total cost of applicable On-Demand usage over the lookback period.
        public var estimatedSavingsPercentage: Swift.String?
        /// The recommended hourly commitment level for the Savings Plans type and the configuration that's based on the usage during the lookback period.
        public var hourlyCommitmentToPurchase: Swift.String?
        /// Details for your recommended Savings Plans.
        public var savingsPlansDetails: CostExplorerClientTypes.SavingsPlansDetails?
        /// The upfront cost of the recommended Savings Plans, based on the selected payment option.
        public var upfrontCost: Swift.String?

        public init (
            accountId: Swift.String? = nil,
            currencyCode: Swift.String? = nil,
            currentAverageHourlyOnDemandSpend: Swift.String? = nil,
            currentMaximumHourlyOnDemandSpend: Swift.String? = nil,
            currentMinimumHourlyOnDemandSpend: Swift.String? = nil,
            estimatedAverageUtilization: Swift.String? = nil,
            estimatedMonthlySavingsAmount: Swift.String? = nil,
            estimatedOnDemandCost: Swift.String? = nil,
            estimatedOnDemandCostWithCurrentCommitment: Swift.String? = nil,
            estimatedROI: Swift.String? = nil,
            estimatedSPCost: Swift.String? = nil,
            estimatedSavingsAmount: Swift.String? = nil,
            estimatedSavingsPercentage: Swift.String? = nil,
            hourlyCommitmentToPurchase: Swift.String? = nil,
            savingsPlansDetails: CostExplorerClientTypes.SavingsPlansDetails? = nil,
            upfrontCost: Swift.String? = nil
        )
        {
            self.accountId = accountId
            self.currencyCode = currencyCode
            self.currentAverageHourlyOnDemandSpend = currentAverageHourlyOnDemandSpend
            self.currentMaximumHourlyOnDemandSpend = currentMaximumHourlyOnDemandSpend
            self.currentMinimumHourlyOnDemandSpend = currentMinimumHourlyOnDemandSpend
            self.estimatedAverageUtilization = estimatedAverageUtilization
            self.estimatedMonthlySavingsAmount = estimatedMonthlySavingsAmount
            self.estimatedOnDemandCost = estimatedOnDemandCost
            self.estimatedOnDemandCostWithCurrentCommitment = estimatedOnDemandCostWithCurrentCommitment
            self.estimatedROI = estimatedROI
            self.estimatedSPCost = estimatedSPCost
            self.estimatedSavingsAmount = estimatedSavingsAmount
            self.estimatedSavingsPercentage = estimatedSavingsPercentage
            self.hourlyCommitmentToPurchase = hourlyCommitmentToPurchase
            self.savingsPlansDetails = savingsPlansDetails
            self.upfrontCost = upfrontCost
        }
    }

}
