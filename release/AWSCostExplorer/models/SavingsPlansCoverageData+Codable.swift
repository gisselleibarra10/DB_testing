// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CostExplorerClientTypes.SavingsPlansCoverageData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case coveragePercentage = "CoveragePercentage"
        case onDemandCost = "OnDemandCost"
        case spendCoveredBySavingsPlans = "SpendCoveredBySavingsPlans"
        case totalCost = "TotalCost"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let coveragePercentage = self.coveragePercentage {
            try encodeContainer.encode(coveragePercentage, forKey: .coveragePercentage)
        }
        if let onDemandCost = self.onDemandCost {
            try encodeContainer.encode(onDemandCost, forKey: .onDemandCost)
        }
        if let spendCoveredBySavingsPlans = self.spendCoveredBySavingsPlans {
            try encodeContainer.encode(spendCoveredBySavingsPlans, forKey: .spendCoveredBySavingsPlans)
        }
        if let totalCost = self.totalCost {
            try encodeContainer.encode(totalCost, forKey: .totalCost)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let spendCoveredBySavingsPlansDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .spendCoveredBySavingsPlans)
        spendCoveredBySavingsPlans = spendCoveredBySavingsPlansDecoded
        let onDemandCostDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .onDemandCost)
        onDemandCost = onDemandCostDecoded
        let totalCostDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .totalCost)
        totalCost = totalCostDecoded
        let coveragePercentageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .coveragePercentage)
        coveragePercentage = coveragePercentageDecoded
    }
}
