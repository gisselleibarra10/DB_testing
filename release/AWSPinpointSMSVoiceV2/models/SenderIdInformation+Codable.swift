// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PinpointSmsVoiceV2ClientTypes.SenderIdInformation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case isoCountryCode = "IsoCountryCode"
        case messageTypes = "MessageTypes"
        case monthlyLeasingPrice = "MonthlyLeasingPrice"
        case senderId = "SenderId"
        case senderIdArn = "SenderIdArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let isoCountryCode = self.isoCountryCode {
            try encodeContainer.encode(isoCountryCode, forKey: .isoCountryCode)
        }
        if let messageTypes = messageTypes {
            var messageTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .messageTypes)
            for messagetypelist0 in messageTypes {
                try messageTypesContainer.encode(messagetypelist0.rawValue)
            }
        }
        if let monthlyLeasingPrice = self.monthlyLeasingPrice {
            try encodeContainer.encode(monthlyLeasingPrice, forKey: .monthlyLeasingPrice)
        }
        if let senderId = self.senderId {
            try encodeContainer.encode(senderId, forKey: .senderId)
        }
        if let senderIdArn = self.senderIdArn {
            try encodeContainer.encode(senderIdArn, forKey: .senderIdArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let senderIdArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .senderIdArn)
        senderIdArn = senderIdArnDecoded
        let senderIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .senderId)
        senderId = senderIdDecoded
        let isoCountryCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .isoCountryCode)
        isoCountryCode = isoCountryCodeDecoded
        let messageTypesContainer = try containerValues.decodeIfPresent([PinpointSmsVoiceV2ClientTypes.MessageType?].self, forKey: .messageTypes)
        var messageTypesDecoded0:[PinpointSmsVoiceV2ClientTypes.MessageType]? = nil
        if let messageTypesContainer = messageTypesContainer {
            messageTypesDecoded0 = [PinpointSmsVoiceV2ClientTypes.MessageType]()
            for string0 in messageTypesContainer {
                if let string0 = string0 {
                    messageTypesDecoded0?.append(string0)
                }
            }
        }
        messageTypes = messageTypesDecoded0
        let monthlyLeasingPriceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .monthlyLeasingPrice)
        monthlyLeasingPrice = monthlyLeasingPriceDecoded
    }
}
