// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendVoiceMessageInputBody: Swift.Equatable {
    let destinationPhoneNumber: Swift.String?
    let originationIdentity: Swift.String?
    let messageBody: Swift.String?
    let messageBodyTextType: PinpointSmsVoiceV2ClientTypes.VoiceMessageBodyTextType?
    let voiceId: PinpointSmsVoiceV2ClientTypes.VoiceId?
    let configurationSetName: Swift.String?
    let maxPricePerMinute: Swift.String?
    let timeToLive: Swift.Int?
    let context: [Swift.String:Swift.String]?
    let dryRun: Swift.Bool
}

extension SendVoiceMessageInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationSetName = "ConfigurationSetName"
        case context = "Context"
        case destinationPhoneNumber = "DestinationPhoneNumber"
        case dryRun = "DryRun"
        case maxPricePerMinute = "MaxPricePerMinute"
        case messageBody = "MessageBody"
        case messageBodyTextType = "MessageBodyTextType"
        case originationIdentity = "OriginationIdentity"
        case timeToLive = "TimeToLive"
        case voiceId = "VoiceId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationPhoneNumberDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationPhoneNumber)
        destinationPhoneNumber = destinationPhoneNumberDecoded
        let originationIdentityDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .originationIdentity)
        originationIdentity = originationIdentityDecoded
        let messageBodyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .messageBody)
        messageBody = messageBodyDecoded
        let messageBodyTextTypeDecoded = try containerValues.decodeIfPresent(PinpointSmsVoiceV2ClientTypes.VoiceMessageBodyTextType.self, forKey: .messageBodyTextType)
        messageBodyTextType = messageBodyTextTypeDecoded
        let voiceIdDecoded = try containerValues.decodeIfPresent(PinpointSmsVoiceV2ClientTypes.VoiceId.self, forKey: .voiceId)
        voiceId = voiceIdDecoded
        let configurationSetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .configurationSetName)
        configurationSetName = configurationSetNameDecoded
        let maxPricePerMinuteDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .maxPricePerMinute)
        maxPricePerMinute = maxPricePerMinuteDecoded
        let timeToLiveDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .timeToLive)
        timeToLive = timeToLiveDecoded
        let contextContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .context)
        var contextDecoded0: [Swift.String:Swift.String]? = nil
        if let contextContainer = contextContainer {
            contextDecoded0 = [Swift.String:Swift.String]()
            for (key0, contextvalue0) in contextContainer {
                if let contextvalue0 = contextvalue0 {
                    contextDecoded0?[key0] = contextvalue0
                }
            }
        }
        context = contextDecoded0
        let dryRunDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .dryRun) ?? false
        dryRun = dryRunDecoded
    }
}
