// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeKeywordsOutputResponseBody: Swift.Equatable {
    let originationIdentityArn: Swift.String?
    let originationIdentity: Swift.String?
    let keywords: [PinpointSmsVoiceV2ClientTypes.KeywordInformation]?
    let nextToken: Swift.String?
}

extension DescribeKeywordsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case keywords = "Keywords"
        case nextToken = "NextToken"
        case originationIdentity = "OriginationIdentity"
        case originationIdentityArn = "OriginationIdentityArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let originationIdentityArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .originationIdentityArn)
        originationIdentityArn = originationIdentityArnDecoded
        let originationIdentityDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .originationIdentity)
        originationIdentity = originationIdentityDecoded
        let keywordsContainer = try containerValues.decodeIfPresent([PinpointSmsVoiceV2ClientTypes.KeywordInformation?].self, forKey: .keywords)
        var keywordsDecoded0:[PinpointSmsVoiceV2ClientTypes.KeywordInformation]? = nil
        if let keywordsContainer = keywordsContainer {
            keywordsDecoded0 = [PinpointSmsVoiceV2ClientTypes.KeywordInformation]()
            for structure0 in keywordsContainer {
                if let structure0 = structure0 {
                    keywordsDecoded0?.append(structure0)
                }
            }
        }
        keywords = keywordsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
