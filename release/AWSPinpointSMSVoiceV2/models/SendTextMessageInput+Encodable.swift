// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SendTextMessageInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationSetName = "ConfigurationSetName"
        case context = "Context"
        case destinationCountryParameters = "DestinationCountryParameters"
        case destinationPhoneNumber = "DestinationPhoneNumber"
        case dryRun = "DryRun"
        case keyword = "Keyword"
        case maxPrice = "MaxPrice"
        case messageBody = "MessageBody"
        case messageType = "MessageType"
        case originationIdentity = "OriginationIdentity"
        case timeToLive = "TimeToLive"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configurationSetName = self.configurationSetName {
            try encodeContainer.encode(configurationSetName, forKey: .configurationSetName)
        }
        if let context = context {
            var contextContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .context)
            for (dictKey0, contextmap0) in context {
                try contextContainer.encode(contextmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let destinationCountryParameters = destinationCountryParameters {
            var destinationCountryParametersContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .destinationCountryParameters)
            for (dictKey0, destinationcountryparameters0) in destinationCountryParameters {
                try destinationCountryParametersContainer.encode(destinationcountryparameters0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let destinationPhoneNumber = self.destinationPhoneNumber {
            try encodeContainer.encode(destinationPhoneNumber, forKey: .destinationPhoneNumber)
        }
        if dryRun != false {
            try encodeContainer.encode(dryRun, forKey: .dryRun)
        }
        if let keyword = self.keyword {
            try encodeContainer.encode(keyword, forKey: .keyword)
        }
        if let maxPrice = self.maxPrice {
            try encodeContainer.encode(maxPrice, forKey: .maxPrice)
        }
        if let messageBody = self.messageBody {
            try encodeContainer.encode(messageBody, forKey: .messageBody)
        }
        if let messageType = self.messageType {
            try encodeContainer.encode(messageType.rawValue, forKey: .messageType)
        }
        if let originationIdentity = self.originationIdentity {
            try encodeContainer.encode(originationIdentity, forKey: .originationIdentity)
        }
        if let timeToLive = self.timeToLive {
            try encodeContainer.encode(timeToLive, forKey: .timeToLive)
        }
    }
}
