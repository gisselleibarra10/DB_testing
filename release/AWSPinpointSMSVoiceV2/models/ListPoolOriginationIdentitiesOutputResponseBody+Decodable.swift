// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPoolOriginationIdentitiesOutputResponseBody: Swift.Equatable {
    let poolArn: Swift.String?
    let poolId: Swift.String?
    let originationIdentities: [PinpointSmsVoiceV2ClientTypes.OriginationIdentityMetadata]?
    let nextToken: Swift.String?
}

extension ListPoolOriginationIdentitiesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case originationIdentities = "OriginationIdentities"
        case poolArn = "PoolArn"
        case poolId = "PoolId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let poolArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .poolArn)
        poolArn = poolArnDecoded
        let poolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .poolId)
        poolId = poolIdDecoded
        let originationIdentitiesContainer = try containerValues.decodeIfPresent([PinpointSmsVoiceV2ClientTypes.OriginationIdentityMetadata?].self, forKey: .originationIdentities)
        var originationIdentitiesDecoded0:[PinpointSmsVoiceV2ClientTypes.OriginationIdentityMetadata]? = nil
        if let originationIdentitiesContainer = originationIdentitiesContainer {
            originationIdentitiesDecoded0 = [PinpointSmsVoiceV2ClientTypes.OriginationIdentityMetadata]()
            for structure0 in originationIdentitiesContainer {
                if let structure0 = structure0 {
                    originationIdentitiesDecoded0?.append(structure0)
                }
            }
        }
        originationIdentities = originationIdentitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
