// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension PinpointSmsVoiceV2ClientTypes {
    public enum ServiceQuotaExceededExceptionReason: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case configurationSetsPerAccount
        case dailyDestinationCallLimit
        case eventDestinationsPerConfigurationSet
        case keywordsPerPhoneNumber
        case keywordsPerPool
        case monthlySpendLimitReachedForText
        case monthlySpendLimitReachedForVoice
        case optOutListsPerAccount
        case originationIdentitiesPerPool
        case phoneNumbersPerAccount
        case phoneNumbersPerRegistration
        case poolsPerAccount
        case tagsPerResource
        case sdkUnknown(Swift.String)

        public static var allCases: [ServiceQuotaExceededExceptionReason] {
            return [
                .configurationSetsPerAccount,
                .dailyDestinationCallLimit,
                .eventDestinationsPerConfigurationSet,
                .keywordsPerPhoneNumber,
                .keywordsPerPool,
                .monthlySpendLimitReachedForText,
                .monthlySpendLimitReachedForVoice,
                .optOutListsPerAccount,
                .originationIdentitiesPerPool,
                .phoneNumbersPerAccount,
                .phoneNumbersPerRegistration,
                .poolsPerAccount,
                .tagsPerResource,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .configurationSetsPerAccount: return "CONFIGURATION_SETS_PER_ACCOUNT"
            case .dailyDestinationCallLimit: return "DAILY_DESTINATION_CALL_LIMIT"
            case .eventDestinationsPerConfigurationSet: return "EVENT_DESTINATIONS_PER_CONFIGURATION_SET"
            case .keywordsPerPhoneNumber: return "KEYWORDS_PER_PHONE_NUMBER"
            case .keywordsPerPool: return "KEYWORDS_PER_POOL"
            case .monthlySpendLimitReachedForText: return "MONTHLY_SPEND_LIMIT_REACHED_FOR_TEXT"
            case .monthlySpendLimitReachedForVoice: return "MONTHLY_SPEND_LIMIT_REACHED_FOR_VOICE"
            case .optOutListsPerAccount: return "OPT_OUT_LISTS_PER_ACCOUNT"
            case .originationIdentitiesPerPool: return "ORIGINATION_IDENTITIES_PER_POOL"
            case .phoneNumbersPerAccount: return "PHONE_NUMBERS_PER_ACCOUNT"
            case .phoneNumbersPerRegistration: return "PHONE_NUMBERS_PER_REGISTRATION"
            case .poolsPerAccount: return "POOLS_PER_ACCOUNT"
            case .tagsPerResource: return "TAGS_PER_RESOURCE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ServiceQuotaExceededExceptionReason(rawValue: rawValue) ?? ServiceQuotaExceededExceptionReason.sdkUnknown(rawValue)
        }
    }
}
