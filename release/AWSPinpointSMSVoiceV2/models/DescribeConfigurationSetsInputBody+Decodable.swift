// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConfigurationSetsInputBody: Swift.Equatable {
    let configurationSetNames: [Swift.String]?
    let filters: [PinpointSmsVoiceV2ClientTypes.ConfigurationSetFilter]?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension DescribeConfigurationSetsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationSetNames = "ConfigurationSetNames"
        case filters = "Filters"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationSetNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .configurationSetNames)
        var configurationSetNamesDecoded0:[Swift.String]? = nil
        if let configurationSetNamesContainer = configurationSetNamesContainer {
            configurationSetNamesDecoded0 = [Swift.String]()
            for string0 in configurationSetNamesContainer {
                if let string0 = string0 {
                    configurationSetNamesDecoded0?.append(string0)
                }
            }
        }
        configurationSetNames = configurationSetNamesDecoded0
        let filtersContainer = try containerValues.decodeIfPresent([PinpointSmsVoiceV2ClientTypes.ConfigurationSetFilter?].self, forKey: .filters)
        var filtersDecoded0:[PinpointSmsVoiceV2ClientTypes.ConfigurationSetFilter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [PinpointSmsVoiceV2ClientTypes.ConfigurationSetFilter]()
            for structure0 in filtersContainer {
                if let structure0 = structure0 {
                    filtersDecoded0?.append(structure0)
                }
            }
        }
        filters = filtersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
