// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdatePoolOutputResponseBody: Swift.Equatable {
    let poolArn: Swift.String?
    let poolId: Swift.String?
    let status: PinpointSmsVoiceV2ClientTypes.PoolStatus?
    let messageType: PinpointSmsVoiceV2ClientTypes.MessageType?
    let twoWayEnabled: Swift.Bool
    let twoWayChannelArn: Swift.String?
    let selfManagedOptOutsEnabled: Swift.Bool
    let optOutListName: Swift.String?
    let sharedRoutesEnabled: Swift.Bool
    let deletionProtectionEnabled: Swift.Bool
    let createdTimestamp: ClientRuntime.Date?
}

extension UpdatePoolOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdTimestamp = "CreatedTimestamp"
        case deletionProtectionEnabled = "DeletionProtectionEnabled"
        case messageType = "MessageType"
        case optOutListName = "OptOutListName"
        case poolArn = "PoolArn"
        case poolId = "PoolId"
        case selfManagedOptOutsEnabled = "SelfManagedOptOutsEnabled"
        case sharedRoutesEnabled = "SharedRoutesEnabled"
        case status = "Status"
        case twoWayChannelArn = "TwoWayChannelArn"
        case twoWayEnabled = "TwoWayEnabled"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let poolArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .poolArn)
        poolArn = poolArnDecoded
        let poolIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .poolId)
        poolId = poolIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(PinpointSmsVoiceV2ClientTypes.PoolStatus.self, forKey: .status)
        status = statusDecoded
        let messageTypeDecoded = try containerValues.decodeIfPresent(PinpointSmsVoiceV2ClientTypes.MessageType.self, forKey: .messageType)
        messageType = messageTypeDecoded
        let twoWayEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .twoWayEnabled) ?? false
        twoWayEnabled = twoWayEnabledDecoded
        let twoWayChannelArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .twoWayChannelArn)
        twoWayChannelArn = twoWayChannelArnDecoded
        let selfManagedOptOutsEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .selfManagedOptOutsEnabled) ?? false
        selfManagedOptOutsEnabled = selfManagedOptOutsEnabledDecoded
        let optOutListNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .optOutListName)
        optOutListName = optOutListNameDecoded
        let sharedRoutesEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .sharedRoutesEnabled) ?? false
        sharedRoutesEnabled = sharedRoutesEnabledDecoded
        let deletionProtectionEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .deletionProtectionEnabled) ?? false
        deletionProtectionEnabled = deletionProtectionEnabledDecoded
        let createdTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdTimestamp)
        createdTimestamp = createdTimestampDecoded
    }
}
