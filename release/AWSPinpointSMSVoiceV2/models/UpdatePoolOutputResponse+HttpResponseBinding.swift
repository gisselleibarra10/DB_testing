// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdatePoolOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: UpdatePoolOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.createdTimestamp = output.createdTimestamp
            self.deletionProtectionEnabled = output.deletionProtectionEnabled
            self.messageType = output.messageType
            self.optOutListName = output.optOutListName
            self.poolArn = output.poolArn
            self.poolId = output.poolId
            self.selfManagedOptOutsEnabled = output.selfManagedOptOutsEnabled
            self.sharedRoutesEnabled = output.sharedRoutesEnabled
            self.status = output.status
            self.twoWayChannelArn = output.twoWayChannelArn
            self.twoWayEnabled = output.twoWayEnabled
        } else {
            self.createdTimestamp = nil
            self.deletionProtectionEnabled = false
            self.messageType = nil
            self.optOutListName = nil
            self.poolArn = nil
            self.poolId = nil
            self.selfManagedOptOutsEnabled = false
            self.sharedRoutesEnabled = false
            self.status = nil
            self.twoWayChannelArn = nil
            self.twoWayEnabled = false
        }
    }
}
