// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateCanaryInputBody: Swift.Equatable {
    let name: Swift.String?
    let code: SyntheticsClientTypes.CanaryCodeInput?
    let artifactS3Location: Swift.String?
    let executionRoleArn: Swift.String?
    let schedule: SyntheticsClientTypes.CanaryScheduleInput?
    let runConfig: SyntheticsClientTypes.CanaryRunConfigInput?
    let successRetentionPeriodInDays: Swift.Int?
    let failureRetentionPeriodInDays: Swift.Int?
    let runtimeVersion: Swift.String?
    let vpcConfig: SyntheticsClientTypes.VpcConfigInput?
    let tags: [Swift.String:Swift.String]?
    let artifactConfig: SyntheticsClientTypes.ArtifactConfigInput?
}

extension CreateCanaryInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case artifactConfig = "ArtifactConfig"
        case artifactS3Location = "ArtifactS3Location"
        case code = "Code"
        case executionRoleArn = "ExecutionRoleArn"
        case failureRetentionPeriodInDays = "FailureRetentionPeriodInDays"
        case name = "Name"
        case runConfig = "RunConfig"
        case runtimeVersion = "RuntimeVersion"
        case schedule = "Schedule"
        case successRetentionPeriodInDays = "SuccessRetentionPeriodInDays"
        case tags = "Tags"
        case vpcConfig = "VpcConfig"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let codeDecoded = try containerValues.decodeIfPresent(SyntheticsClientTypes.CanaryCodeInput.self, forKey: .code)
        code = codeDecoded
        let artifactS3LocationDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .artifactS3Location)
        artifactS3Location = artifactS3LocationDecoded
        let executionRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executionRoleArn)
        executionRoleArn = executionRoleArnDecoded
        let scheduleDecoded = try containerValues.decodeIfPresent(SyntheticsClientTypes.CanaryScheduleInput.self, forKey: .schedule)
        schedule = scheduleDecoded
        let runConfigDecoded = try containerValues.decodeIfPresent(SyntheticsClientTypes.CanaryRunConfigInput.self, forKey: .runConfig)
        runConfig = runConfigDecoded
        let successRetentionPeriodInDaysDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .successRetentionPeriodInDays)
        successRetentionPeriodInDays = successRetentionPeriodInDaysDecoded
        let failureRetentionPeriodInDaysDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failureRetentionPeriodInDays)
        failureRetentionPeriodInDays = failureRetentionPeriodInDaysDecoded
        let runtimeVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .runtimeVersion)
        runtimeVersion = runtimeVersionDecoded
        let vpcConfigDecoded = try containerValues.decodeIfPresent(SyntheticsClientTypes.VpcConfigInput.self, forKey: .vpcConfig)
        vpcConfig = vpcConfigDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .tags)
        var tagsDecoded0: [Swift.String:Swift.String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Swift.String:Swift.String]()
            for (key0, tagvalue0) in tagsContainer {
                if let tagvalue0 = tagvalue0 {
                    tagsDecoded0?[key0] = tagvalue0
                }
            }
        }
        tags = tagsDecoded0
        let artifactConfigDecoded = try containerValues.decodeIfPresent(SyntheticsClientTypes.ArtifactConfigInput.self, forKey: .artifactConfig)
        artifactConfig = artifactConfigDecoded
    }
}
