// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SyntheticsClientTypes.RuntimeVersion: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deprecationDate = "DeprecationDate"
        case description = "Description"
        case releaseDate = "ReleaseDate"
        case versionName = "VersionName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deprecationDate = self.deprecationDate {
            try encodeContainer.encode(deprecationDate.timeIntervalSince1970, forKey: .deprecationDate)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let releaseDate = self.releaseDate {
            try encodeContainer.encode(releaseDate.timeIntervalSince1970, forKey: .releaseDate)
        }
        if let versionName = self.versionName {
            try encodeContainer.encode(versionName, forKey: .versionName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let versionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .versionName)
        versionName = versionNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let releaseDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .releaseDate)
        releaseDate = releaseDateDecoded
        let deprecationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .deprecationDate)
        deprecationDate = deprecationDateDecoded
    }
}
