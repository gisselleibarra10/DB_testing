// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRuntimeVersionsOutputResponseBody: Swift.Equatable {
    let runtimeVersions: [SyntheticsClientTypes.RuntimeVersion]?
    let nextToken: Swift.String?
}

extension DescribeRuntimeVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case runtimeVersions = "RuntimeVersions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let runtimeVersionsContainer = try containerValues.decodeIfPresent([SyntheticsClientTypes.RuntimeVersion?].self, forKey: .runtimeVersions)
        var runtimeVersionsDecoded0:[SyntheticsClientTypes.RuntimeVersion]? = nil
        if let runtimeVersionsContainer = runtimeVersionsContainer {
            runtimeVersionsDecoded0 = [SyntheticsClientTypes.RuntimeVersion]()
            for structure0 in runtimeVersionsContainer {
                if let structure0 = structure0 {
                    runtimeVersionsDecoded0?.append(structure0)
                }
            }
        }
        runtimeVersions = runtimeVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
