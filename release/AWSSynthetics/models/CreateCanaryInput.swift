// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateCanaryInput: Swift.Equatable {
    /// A structure that contains the configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3.
    public var artifactConfig: SyntheticsClientTypes.ArtifactConfigInput?
    /// The location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary. Artifacts include the log file, screenshots, and HAR files. The name of the S3 bucket can't include a period (.).
    /// This member is required.
    public var artifactS3Location: Swift.String?
    /// A structure that includes the entry point from which the canary should start running your script. If the script is stored in an S3 bucket, the bucket name, key, and version are also included.
    /// This member is required.
    public var code: SyntheticsClientTypes.CanaryCodeInput?
    /// The ARN of the IAM role to be used to run the canary. This role must already exist, and must include lambda.amazonaws.com as a principal in the trust policy. The role must also have the following permissions:
    ///
    /// * s3:PutObject
    ///
    /// * s3:GetBucketLocation
    ///
    /// * s3:ListAllMyBuckets
    ///
    /// * cloudwatch:PutMetricData
    ///
    /// * logs:CreateLogGroup
    ///
    /// * logs:CreateLogStream
    ///
    /// * logs:PutLogEvents
    /// This member is required.
    public var executionRoleArn: Swift.String?
    /// The number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
    public var failureRetentionPeriodInDays: Swift.Int?
    /// The name for this canary. Be sure to give it a descriptive name that distinguishes it from other canaries in your account. Do not include secrets or proprietary information in your canary names. The canary name makes up part of the canary ARN, and the ARN is included in outbound calls over the internet. For more information, see [Security Considerations for Synthetics Canaries](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html).
    /// This member is required.
    public var name: Swift.String?
    /// A structure that contains the configuration for individual canary runs, such as timeout value and environment variables. The environment variables keys and values are not encrypted. Do not store sensitive information in this field.
    public var runConfig: SyntheticsClientTypes.CanaryRunConfigInput?
    /// Specifies the runtime version to use for the canary. For a list of valid runtime versions and more information about runtime versions, see [ Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
    /// This member is required.
    public var runtimeVersion: Swift.String?
    /// A structure that contains information about how often the canary is to run and when these test runs are to stop.
    /// This member is required.
    public var schedule: SyntheticsClientTypes.CanaryScheduleInput?
    /// The number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
    public var successRetentionPeriodInDays: Swift.Int?
    /// A list of key-value pairs to associate with the canary. You can associate as many as 50 tags with a canary. Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only the resources that have certain tag values.
    public var tags: [Swift.String:Swift.String]?
    /// If this canary is to test an endpoint in a VPC, this structure contains information about the subnet and security groups of the VPC endpoint. For more information, see [ Running a Canary in a VPC](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html).
    public var vpcConfig: SyntheticsClientTypes.VpcConfigInput?

    public init (
        artifactConfig: SyntheticsClientTypes.ArtifactConfigInput? = nil,
        artifactS3Location: Swift.String? = nil,
        code: SyntheticsClientTypes.CanaryCodeInput? = nil,
        executionRoleArn: Swift.String? = nil,
        failureRetentionPeriodInDays: Swift.Int? = nil,
        name: Swift.String? = nil,
        runConfig: SyntheticsClientTypes.CanaryRunConfigInput? = nil,
        runtimeVersion: Swift.String? = nil,
        schedule: SyntheticsClientTypes.CanaryScheduleInput? = nil,
        successRetentionPeriodInDays: Swift.Int? = nil,
        tags: [Swift.String:Swift.String]? = nil,
        vpcConfig: SyntheticsClientTypes.VpcConfigInput? = nil
    )
    {
        self.artifactConfig = artifactConfig
        self.artifactS3Location = artifactS3Location
        self.code = code
        self.executionRoleArn = executionRoleArn
        self.failureRetentionPeriodInDays = failureRetentionPeriodInDays
        self.name = name
        self.runConfig = runConfig
        self.runtimeVersion = runtimeVersion
        self.schedule = schedule
        self.successRetentionPeriodInDays = successRetentionPeriodInDays
        self.tags = tags
        self.vpcConfig = vpcConfig
    }
}
