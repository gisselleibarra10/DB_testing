// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SyntheticsClientTypes.BaseScreenshot: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ignoreCoordinates = "IgnoreCoordinates"
        case screenshotName = "ScreenshotName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ignoreCoordinates = ignoreCoordinates {
            var ignoreCoordinatesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ignoreCoordinates)
            for basescreenshotignorecoordinates0 in ignoreCoordinates {
                try ignoreCoordinatesContainer.encode(basescreenshotignorecoordinates0)
            }
        }
        if let screenshotName = self.screenshotName {
            try encodeContainer.encode(screenshotName, forKey: .screenshotName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let screenshotNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .screenshotName)
        screenshotName = screenshotNameDecoded
        let ignoreCoordinatesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .ignoreCoordinates)
        var ignoreCoordinatesDecoded0:[Swift.String]? = nil
        if let ignoreCoordinatesContainer = ignoreCoordinatesContainer {
            ignoreCoordinatesDecoded0 = [Swift.String]()
            for string0 in ignoreCoordinatesContainer {
                if let string0 = string0 {
                    ignoreCoordinatesDecoded0?.append(string0)
                }
            }
        }
        ignoreCoordinates = ignoreCoordinatesDecoded0
    }
}
