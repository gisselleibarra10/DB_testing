// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LicenseManagerClientTypes.ReportFrequency: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case period
        case value
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let period = self.period {
            try encodeContainer.encode(period.rawValue, forKey: .period)
        }
        if let value = self.value {
            try encodeContainer.encode(value, forKey: .value)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let valueDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .value)
        value = valueDecoded
        let periodDecoded = try containerValues.decodeIfPresent(LicenseManagerClientTypes.ReportFrequencyType.self, forKey: .period)
        period = periodDecoded
    }
}
