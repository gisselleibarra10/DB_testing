// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLicenseConversionTaskOutputResponseBody: Swift.Equatable {
    let licenseConversionTaskId: Swift.String?
    let resourceArn: Swift.String?
    let sourceLicenseContext: LicenseManagerClientTypes.LicenseConversionContext?
    let destinationLicenseContext: LicenseManagerClientTypes.LicenseConversionContext?
    let statusMessage: Swift.String?
    let status: LicenseManagerClientTypes.LicenseConversionTaskStatus?
    let startTime: ClientRuntime.Date?
    let licenseConversionTime: ClientRuntime.Date?
    let endTime: ClientRuntime.Date?
}

extension GetLicenseConversionTaskOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationLicenseContext = "DestinationLicenseContext"
        case endTime = "EndTime"
        case licenseConversionTaskId = "LicenseConversionTaskId"
        case licenseConversionTime = "LicenseConversionTime"
        case resourceArn = "ResourceArn"
        case sourceLicenseContext = "SourceLicenseContext"
        case startTime = "StartTime"
        case status = "Status"
        case statusMessage = "StatusMessage"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let licenseConversionTaskIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .licenseConversionTaskId)
        licenseConversionTaskId = licenseConversionTaskIdDecoded
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let sourceLicenseContextDecoded = try containerValues.decodeIfPresent(LicenseManagerClientTypes.LicenseConversionContext.self, forKey: .sourceLicenseContext)
        sourceLicenseContext = sourceLicenseContextDecoded
        let destinationLicenseContextDecoded = try containerValues.decodeIfPresent(LicenseManagerClientTypes.LicenseConversionContext.self, forKey: .destinationLicenseContext)
        destinationLicenseContext = destinationLicenseContextDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let statusDecoded = try containerValues.decodeIfPresent(LicenseManagerClientTypes.LicenseConversionTaskStatus.self, forKey: .status)
        status = statusDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let licenseConversionTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .licenseConversionTime)
        licenseConversionTime = licenseConversionTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endTime)
        endTime = endTimeDecoded
    }
}
