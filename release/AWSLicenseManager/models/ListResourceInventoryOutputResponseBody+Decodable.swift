// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourceInventoryOutputResponseBody: Swift.Equatable {
    let resourceInventoryList: [LicenseManagerClientTypes.ResourceInventory]?
    let nextToken: Swift.String?
}

extension ListResourceInventoryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case resourceInventoryList = "ResourceInventoryList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceInventoryListContainer = try containerValues.decodeIfPresent([LicenseManagerClientTypes.ResourceInventory?].self, forKey: .resourceInventoryList)
        var resourceInventoryListDecoded0:[LicenseManagerClientTypes.ResourceInventory]? = nil
        if let resourceInventoryListContainer = resourceInventoryListContainer {
            resourceInventoryListDecoded0 = [LicenseManagerClientTypes.ResourceInventory]()
            for structure0 in resourceInventoryListContainer {
                if let structure0 = structure0 {
                    resourceInventoryListDecoded0?.append(structure0)
                }
            }
        }
        resourceInventoryList = resourceInventoryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
