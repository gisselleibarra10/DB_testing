// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateLicenseSpecificationsForResourceInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addLicenseSpecifications = "AddLicenseSpecifications"
        case removeLicenseSpecifications = "RemoveLicenseSpecifications"
        case resourceArn = "ResourceArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let addLicenseSpecifications = addLicenseSpecifications {
            var addLicenseSpecificationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .addLicenseSpecifications)
            for licensespecifications0 in addLicenseSpecifications {
                try addLicenseSpecificationsContainer.encode(licensespecifications0)
            }
        }
        if let removeLicenseSpecifications = removeLicenseSpecifications {
            var removeLicenseSpecificationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .removeLicenseSpecifications)
            for licensespecifications0 in removeLicenseSpecifications {
                try removeLicenseSpecificationsContainer.encode(licensespecifications0)
            }
        }
        if let resourceArn = self.resourceArn {
            try encodeContainer.encode(resourceArn, forKey: .resourceArn)
        }
    }
}
