// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LicenseManagerClientTypes.LicenseSpecification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case amiAssociationScope = "AmiAssociationScope"
        case licenseConfigurationArn = "LicenseConfigurationArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let amiAssociationScope = self.amiAssociationScope {
            try encodeContainer.encode(amiAssociationScope, forKey: .amiAssociationScope)
        }
        if let licenseConfigurationArn = self.licenseConfigurationArn {
            try encodeContainer.encode(licenseConfigurationArn, forKey: .licenseConfigurationArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let licenseConfigurationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .licenseConfigurationArn)
        licenseConfigurationArn = licenseConfigurationArnDecoded
        let amiAssociationScopeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .amiAssociationScope)
        amiAssociationScope = amiAssociationScopeDecoded
    }
}
