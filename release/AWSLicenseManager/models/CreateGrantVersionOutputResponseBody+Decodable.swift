// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateGrantVersionOutputResponseBody: Swift.Equatable {
    let grantArn: Swift.String?
    let status: LicenseManagerClientTypes.GrantStatus?
    let version: Swift.String?
}

extension CreateGrantVersionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case grantArn = "GrantArn"
        case status = "Status"
        case version = "Version"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let grantArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .grantArn)
        grantArn = grantArnDecoded
        let statusDecoded = try containerValues.decodeIfPresent(LicenseManagerClientTypes.GrantStatus.self, forKey: .status)
        status = statusDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .version)
        version = versionDecoded
    }
}
