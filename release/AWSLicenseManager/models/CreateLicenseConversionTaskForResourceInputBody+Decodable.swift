// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLicenseConversionTaskForResourceInputBody: Swift.Equatable {
    let resourceArn: Swift.String?
    let sourceLicenseContext: LicenseManagerClientTypes.LicenseConversionContext?
    let destinationLicenseContext: LicenseManagerClientTypes.LicenseConversionContext?
}

extension CreateLicenseConversionTaskForResourceInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationLicenseContext = "DestinationLicenseContext"
        case resourceArn = "ResourceArn"
        case sourceLicenseContext = "SourceLicenseContext"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let sourceLicenseContextDecoded = try containerValues.decodeIfPresent(LicenseManagerClientTypes.LicenseConversionContext.self, forKey: .sourceLicenseContext)
        sourceLicenseContext = sourceLicenseContextDecoded
        let destinationLicenseContextDecoded = try containerValues.decodeIfPresent(LicenseManagerClientTypes.LicenseConversionContext.self, forKey: .destinationLicenseContext)
        destinationLicenseContext = destinationLicenseContextDecoded
    }
}
