// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension LicenseManagerClientTypes {
    /// Describes a license that is granted to a grantee.
    public struct GrantedLicense: Swift.Equatable {
        /// Granted license beneficiary.
        public var beneficiary: Swift.String?
        /// Configuration for consumption of the license.
        public var consumptionConfiguration: LicenseManagerClientTypes.ConsumptionConfiguration?
        /// Creation time of the granted license.
        public var createTime: Swift.String?
        /// License entitlements.
        public var entitlements: [LicenseManagerClientTypes.Entitlement]?
        /// Home Region of the granted license.
        public var homeRegion: Swift.String?
        /// Granted license issuer.
        public var issuer: LicenseManagerClientTypes.IssuerDetails?
        /// Amazon Resource Name (ARN) of the license.
        public var licenseArn: Swift.String?
        /// Granted license metadata.
        public var licenseMetadata: [LicenseManagerClientTypes.Metadata]?
        /// License name.
        public var licenseName: Swift.String?
        /// Product name.
        public var productName: Swift.String?
        /// Product SKU.
        public var productSKU: Swift.String?
        /// Granted license received metadata.
        public var receivedMetadata: LicenseManagerClientTypes.ReceivedMetadata?
        /// Granted license status.
        public var status: LicenseManagerClientTypes.LicenseStatus?
        /// Date and time range during which the granted license is valid, in ISO8601-UTC format.
        public var validity: LicenseManagerClientTypes.DatetimeRange?
        /// Version of the granted license.
        public var version: Swift.String?

        public init (
            beneficiary: Swift.String? = nil,
            consumptionConfiguration: LicenseManagerClientTypes.ConsumptionConfiguration? = nil,
            createTime: Swift.String? = nil,
            entitlements: [LicenseManagerClientTypes.Entitlement]? = nil,
            homeRegion: Swift.String? = nil,
            issuer: LicenseManagerClientTypes.IssuerDetails? = nil,
            licenseArn: Swift.String? = nil,
            licenseMetadata: [LicenseManagerClientTypes.Metadata]? = nil,
            licenseName: Swift.String? = nil,
            productName: Swift.String? = nil,
            productSKU: Swift.String? = nil,
            receivedMetadata: LicenseManagerClientTypes.ReceivedMetadata? = nil,
            status: LicenseManagerClientTypes.LicenseStatus? = nil,
            validity: LicenseManagerClientTypes.DatetimeRange? = nil,
            version: Swift.String? = nil
        )
        {
            self.beneficiary = beneficiary
            self.consumptionConfiguration = consumptionConfiguration
            self.createTime = createTime
            self.entitlements = entitlements
            self.homeRegion = homeRegion
            self.issuer = issuer
            self.licenseArn = licenseArn
            self.licenseMetadata = licenseMetadata
            self.licenseName = licenseName
            self.productName = productName
            self.productSKU = productSKU
            self.receivedMetadata = receivedMetadata
            self.status = status
            self.validity = validity
            self.version = version
        }
    }

}
