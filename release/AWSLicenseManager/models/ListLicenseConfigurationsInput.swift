// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListLicenseConfigurationsInput: Swift.Equatable {
    /// Filters to scope the results. The following filters and logical operators are supported:
    ///
    /// * licenseCountingType - The dimension for which licenses are counted. Possible values are vCPU | Instance | Core | Socket. Logical operators are EQUALS | NOT_EQUALS.
    ///
    /// * enforceLicenseCount - A Boolean value that indicates whether hard license enforcement is used. Logical operators are EQUALS | NOT_EQUALS.
    ///
    /// * usagelimitExceeded - A Boolean value that indicates whether the available licenses have been exceeded. Logical operators are EQUALS | NOT_EQUALS.
    public var filters: [LicenseManagerClientTypes.Filter]?
    /// Amazon Resource Names (ARN) of the license configurations.
    public var licenseConfigurationArns: [Swift.String]?
    /// Maximum number of results to return in a single call.
    public var maxResults: Swift.Int?
    /// Token for the next set of results.
    public var nextToken: Swift.String?

    public init (
        filters: [LicenseManagerClientTypes.Filter]? = nil,
        licenseConfigurationArns: [Swift.String]? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil
    )
    {
        self.filters = filters
        self.licenseConfigurationArns = licenseConfigurationArns
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
