// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetLicenseConversionTaskOutputResponse: Swift.Equatable {
    /// Information about the license type converted to.
    public var destinationLicenseContext: LicenseManagerClientTypes.LicenseConversionContext?
    /// Time at which the license type conversion task was completed.
    public var endTime: ClientRuntime.Date?
    /// ID of the license type conversion task.
    public var licenseConversionTaskId: Swift.String?
    /// Amount of time to complete the license type conversion.
    public var licenseConversionTime: ClientRuntime.Date?
    /// Amazon Resource Names (ARN) of the resources the license conversion task is associated with.
    public var resourceArn: Swift.String?
    /// Information about the license type converted from.
    public var sourceLicenseContext: LicenseManagerClientTypes.LicenseConversionContext?
    /// Time at which the license type conversion task was started .
    public var startTime: ClientRuntime.Date?
    /// Status of the license type conversion task.
    public var status: LicenseManagerClientTypes.LicenseConversionTaskStatus?
    /// The status message for the conversion task.
    public var statusMessage: Swift.String?

    public init (
        destinationLicenseContext: LicenseManagerClientTypes.LicenseConversionContext? = nil,
        endTime: ClientRuntime.Date? = nil,
        licenseConversionTaskId: Swift.String? = nil,
        licenseConversionTime: ClientRuntime.Date? = nil,
        resourceArn: Swift.String? = nil,
        sourceLicenseContext: LicenseManagerClientTypes.LicenseConversionContext? = nil,
        startTime: ClientRuntime.Date? = nil,
        status: LicenseManagerClientTypes.LicenseConversionTaskStatus? = nil,
        statusMessage: Swift.String? = nil
    )
    {
        self.destinationLicenseContext = destinationLicenseContext
        self.endTime = endTime
        self.licenseConversionTaskId = licenseConversionTaskId
        self.licenseConversionTime = licenseConversionTime
        self.resourceArn = resourceArn
        self.sourceLicenseContext = sourceLicenseContext
        self.startTime = startTime
        self.status = status
        self.statusMessage = statusMessage
    }
}
