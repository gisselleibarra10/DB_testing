// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LicenseManagerClientTypes.ProductInformation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case productInformationFilterList = "ProductInformationFilterList"
        case resourceType = "ResourceType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let productInformationFilterList = productInformationFilterList {
            var productInformationFilterListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .productInformationFilterList)
            for productinformationfilterlist0 in productInformationFilterList {
                try productInformationFilterListContainer.encode(productinformationfilterlist0)
            }
        }
        if let resourceType = self.resourceType {
            try encodeContainer.encode(resourceType, forKey: .resourceType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let productInformationFilterListContainer = try containerValues.decodeIfPresent([LicenseManagerClientTypes.ProductInformationFilter?].self, forKey: .productInformationFilterList)
        var productInformationFilterListDecoded0:[LicenseManagerClientTypes.ProductInformationFilter]? = nil
        if let productInformationFilterListContainer = productInformationFilterListContainer {
            productInformationFilterListDecoded0 = [LicenseManagerClientTypes.ProductInformationFilter]()
            for structure0 in productInformationFilterListContainer {
                if let structure0 = structure0 {
                    productInformationFilterListDecoded0?.append(structure0)
                }
            }
        }
        productInformationFilterList = productInformationFilterListDecoded0
    }
}
