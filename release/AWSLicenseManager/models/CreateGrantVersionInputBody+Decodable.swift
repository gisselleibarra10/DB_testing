// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateGrantVersionInputBody: Swift.Equatable {
    let clientToken: Swift.String?
    let grantArn: Swift.String?
    let grantName: Swift.String?
    let allowedOperations: [LicenseManagerClientTypes.AllowedOperation]?
    let status: LicenseManagerClientTypes.GrantStatus?
    let statusReason: Swift.String?
    let sourceVersion: Swift.String?
}

extension CreateGrantVersionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowedOperations = "AllowedOperations"
        case clientToken = "ClientToken"
        case grantArn = "GrantArn"
        case grantName = "GrantName"
        case sourceVersion = "SourceVersion"
        case status = "Status"
        case statusReason = "StatusReason"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let grantArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .grantArn)
        grantArn = grantArnDecoded
        let grantNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .grantName)
        grantName = grantNameDecoded
        let allowedOperationsContainer = try containerValues.decodeIfPresent([LicenseManagerClientTypes.AllowedOperation?].self, forKey: .allowedOperations)
        var allowedOperationsDecoded0:[LicenseManagerClientTypes.AllowedOperation]? = nil
        if let allowedOperationsContainer = allowedOperationsContainer {
            allowedOperationsDecoded0 = [LicenseManagerClientTypes.AllowedOperation]()
            for string0 in allowedOperationsContainer {
                if let string0 = string0 {
                    allowedOperationsDecoded0?.append(string0)
                }
            }
        }
        allowedOperations = allowedOperationsDecoded0
        let statusDecoded = try containerValues.decodeIfPresent(LicenseManagerClientTypes.GrantStatus.self, forKey: .status)
        status = statusDecoded
        let statusReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusReason)
        statusReason = statusReasonDecoded
        let sourceVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceVersion)
        sourceVersion = sourceVersionDecoded
    }
}
