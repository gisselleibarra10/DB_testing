// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LicenseManagerClientTypes {
    /// Information about a license type conversion task.
    public struct LicenseConversionTask: Swift.Equatable {
        /// Information about the license type this conversion task converted to.
        public var destinationLicenseContext: LicenseManagerClientTypes.LicenseConversionContext?
        /// The time the conversion task was completed.
        public var endTime: ClientRuntime.Date?
        /// The ID of the license type conversion task.
        public var licenseConversionTaskId: Swift.String?
        /// The time the usage operation value of the resource was changed.
        public var licenseConversionTime: ClientRuntime.Date?
        /// The Amazon Resource Name (ARN) of the resource associated with the license type conversion task.
        public var resourceArn: Swift.String?
        /// Information about the license type this conversion task converted from.
        public var sourceLicenseContext: LicenseManagerClientTypes.LicenseConversionContext?
        /// The time the conversion task was started at.
        public var startTime: ClientRuntime.Date?
        /// The status of the conversion task.
        public var status: LicenseManagerClientTypes.LicenseConversionTaskStatus?
        /// The status message for the conversion task.
        public var statusMessage: Swift.String?

        public init (
            destinationLicenseContext: LicenseManagerClientTypes.LicenseConversionContext? = nil,
            endTime: ClientRuntime.Date? = nil,
            licenseConversionTaskId: Swift.String? = nil,
            licenseConversionTime: ClientRuntime.Date? = nil,
            resourceArn: Swift.String? = nil,
            sourceLicenseContext: LicenseManagerClientTypes.LicenseConversionContext? = nil,
            startTime: ClientRuntime.Date? = nil,
            status: LicenseManagerClientTypes.LicenseConversionTaskStatus? = nil,
            statusMessage: Swift.String? = nil
        )
        {
            self.destinationLicenseContext = destinationLicenseContext
            self.endTime = endTime
            self.licenseConversionTaskId = licenseConversionTaskId
            self.licenseConversionTime = licenseConversionTime
            self.resourceArn = resourceArn
            self.sourceLicenseContext = sourceLicenseContext
            self.startTime = startTime
            self.status = status
            self.statusMessage = statusMessage
        }
    }

}
