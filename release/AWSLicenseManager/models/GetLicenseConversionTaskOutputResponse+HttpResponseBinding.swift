// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetLicenseConversionTaskOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: GetLicenseConversionTaskOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.destinationLicenseContext = output.destinationLicenseContext
            self.endTime = output.endTime
            self.licenseConversionTaskId = output.licenseConversionTaskId
            self.licenseConversionTime = output.licenseConversionTime
            self.resourceArn = output.resourceArn
            self.sourceLicenseContext = output.sourceLicenseContext
            self.startTime = output.startTime
            self.status = output.status
            self.statusMessage = output.statusMessage
        } else {
            self.destinationLicenseContext = nil
            self.endTime = nil
            self.licenseConversionTaskId = nil
            self.licenseConversionTime = nil
            self.resourceArn = nil
            self.sourceLicenseContext = nil
            self.startTime = nil
            self.status = nil
            self.statusMessage = nil
        }
    }
}
