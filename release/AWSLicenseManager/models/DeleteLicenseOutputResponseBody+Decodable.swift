// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteLicenseOutputResponseBody: Swift.Equatable {
    let status: LicenseManagerClientTypes.LicenseDeletionStatus?
    let deletionDate: Swift.String?
}

extension DeleteLicenseOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deletionDate = "DeletionDate"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(LicenseManagerClientTypes.LicenseDeletionStatus.self, forKey: .status)
        status = statusDecoded
        let deletionDateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deletionDate)
        deletionDate = deletionDateDecoded
    }
}
