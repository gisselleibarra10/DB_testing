// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FirehoseClientTypes.EncryptionConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case kMSEncryptionConfig = "KMSEncryptionConfig"
        case noEncryptionConfig = "NoEncryptionConfig"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kMSEncryptionConfig = self.kMSEncryptionConfig {
            try encodeContainer.encode(kMSEncryptionConfig, forKey: .kMSEncryptionConfig)
        }
        if let noEncryptionConfig = self.noEncryptionConfig {
            try encodeContainer.encode(noEncryptionConfig.rawValue, forKey: .noEncryptionConfig)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let noEncryptionConfigDecoded = try containerValues.decodeIfPresent(FirehoseClientTypes.NoEncryptionConfig.self, forKey: .noEncryptionConfig)
        noEncryptionConfig = noEncryptionConfigDecoded
        let kMSEncryptionConfigDecoded = try containerValues.decodeIfPresent(FirehoseClientTypes.KMSEncryptionConfig.self, forKey: .kMSEncryptionConfig)
        kMSEncryptionConfig = kMSEncryptionConfigDecoded
    }
}
