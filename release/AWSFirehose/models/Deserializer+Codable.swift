// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FirehoseClientTypes.Deserializer: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hiveJsonSerDe = "HiveJsonSerDe"
        case openXJsonSerDe = "OpenXJsonSerDe"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hiveJsonSerDe = self.hiveJsonSerDe {
            try encodeContainer.encode(hiveJsonSerDe, forKey: .hiveJsonSerDe)
        }
        if let openXJsonSerDe = self.openXJsonSerDe {
            try encodeContainer.encode(openXJsonSerDe, forKey: .openXJsonSerDe)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let openXJsonSerDeDecoded = try containerValues.decodeIfPresent(FirehoseClientTypes.OpenXJsonSerDe.self, forKey: .openXJsonSerDe)
        openXJsonSerDe = openXJsonSerDeDecoded
        let hiveJsonSerDeDecoded = try containerValues.decodeIfPresent(FirehoseClientTypes.HiveJsonSerDe.self, forKey: .hiveJsonSerDe)
        hiveJsonSerDe = hiveJsonSerDeDecoded
    }
}
