// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeliveryStreamsInputBody: Swift.Equatable {
    let limit: Swift.Int?
    let deliveryStreamType: FirehoseClientTypes.DeliveryStreamType?
    let exclusiveStartDeliveryStreamName: Swift.String?
}

extension ListDeliveryStreamsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deliveryStreamType = "DeliveryStreamType"
        case exclusiveStartDeliveryStreamName = "ExclusiveStartDeliveryStreamName"
        case limit = "Limit"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let deliveryStreamTypeDecoded = try containerValues.decodeIfPresent(FirehoseClientTypes.DeliveryStreamType.self, forKey: .deliveryStreamType)
        deliveryStreamType = deliveryStreamTypeDecoded
        let exclusiveStartDeliveryStreamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exclusiveStartDeliveryStreamName)
        exclusiveStartDeliveryStreamName = exclusiveStartDeliveryStreamNameDecoded
    }
}
