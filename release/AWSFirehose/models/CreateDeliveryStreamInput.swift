// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDeliveryStreamInput: Swift.Equatable {
    public var amazonopensearchserviceDestinationConfiguration: FirehoseClientTypes.AmazonopensearchserviceDestinationConfiguration?
    /// Used to specify the type and Amazon Resource Name (ARN) of the KMS key needed for Server-Side Encryption (SSE).
    public var deliveryStreamEncryptionConfigurationInput: FirehoseClientTypes.DeliveryStreamEncryptionConfigurationInput?
    /// The name of the delivery stream. This name must be unique per AWS account in the same AWS Region. If the delivery streams are in different accounts or different Regions, you can have multiple delivery streams with the same name.
    /// This member is required.
    public var deliveryStreamName: Swift.String?
    /// The delivery stream type. This parameter can be one of the following values:
    ///
    /// * DirectPut: Provider applications access the delivery stream directly.
    ///
    /// * KinesisStreamAsSource: The delivery stream uses a Kinesis data stream as a source.
    public var deliveryStreamType: FirehoseClientTypes.DeliveryStreamType?
    /// The destination in Amazon ES. You can specify only one destination.
    public var elasticsearchDestinationConfiguration: FirehoseClientTypes.ElasticsearchDestinationConfiguration?
    /// The destination in Amazon S3. You can specify only one destination.
    public var extendedS3DestinationConfiguration: FirehoseClientTypes.ExtendedS3DestinationConfiguration?
    /// Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination. You can specify only one destination.
    public var httpEndpointDestinationConfiguration: FirehoseClientTypes.HttpEndpointDestinationConfiguration?
    /// When a Kinesis data stream is used as the source for the delivery stream, a [KinesisStreamSourceConfiguration] containing the Kinesis data stream Amazon Resource Name (ARN) and the role ARN for the source stream.
    public var kinesisStreamSourceConfiguration: FirehoseClientTypes.KinesisStreamSourceConfiguration?
    /// The destination in Amazon Redshift. You can specify only one destination.
    public var redshiftDestinationConfiguration: FirehoseClientTypes.RedshiftDestinationConfiguration?
    /// [Deprecated] The destination in Amazon S3. You can specify only one destination.
    @available(*, deprecated)
    public var s3DestinationConfiguration: FirehoseClientTypes.S3DestinationConfiguration?
    /// The destination in Splunk. You can specify only one destination.
    public var splunkDestinationConfiguration: FirehoseClientTypes.SplunkDestinationConfiguration?
    /// A set of tags to assign to the delivery stream. A tag is a key-value pair that you can define and assign to AWS resources. Tags are metadata. For example, you can add friendly names and descriptions or other types of information that can help you distinguish the delivery stream. For more information about tags, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide. You can specify up to 50 tags when creating a delivery stream.
    public var tags: [FirehoseClientTypes.Tag]?

    public init (
        amazonopensearchserviceDestinationConfiguration: FirehoseClientTypes.AmazonopensearchserviceDestinationConfiguration? = nil,
        deliveryStreamEncryptionConfigurationInput: FirehoseClientTypes.DeliveryStreamEncryptionConfigurationInput? = nil,
        deliveryStreamName: Swift.String? = nil,
        deliveryStreamType: FirehoseClientTypes.DeliveryStreamType? = nil,
        elasticsearchDestinationConfiguration: FirehoseClientTypes.ElasticsearchDestinationConfiguration? = nil,
        extendedS3DestinationConfiguration: FirehoseClientTypes.ExtendedS3DestinationConfiguration? = nil,
        httpEndpointDestinationConfiguration: FirehoseClientTypes.HttpEndpointDestinationConfiguration? = nil,
        kinesisStreamSourceConfiguration: FirehoseClientTypes.KinesisStreamSourceConfiguration? = nil,
        redshiftDestinationConfiguration: FirehoseClientTypes.RedshiftDestinationConfiguration? = nil,
        s3DestinationConfiguration: FirehoseClientTypes.S3DestinationConfiguration? = nil,
        splunkDestinationConfiguration: FirehoseClientTypes.SplunkDestinationConfiguration? = nil,
        tags: [FirehoseClientTypes.Tag]? = nil
    )
    {
        self.amazonopensearchserviceDestinationConfiguration = amazonopensearchserviceDestinationConfiguration
        self.deliveryStreamEncryptionConfigurationInput = deliveryStreamEncryptionConfigurationInput
        self.deliveryStreamName = deliveryStreamName
        self.deliveryStreamType = deliveryStreamType
        self.elasticsearchDestinationConfiguration = elasticsearchDestinationConfiguration
        self.extendedS3DestinationConfiguration = extendedS3DestinationConfiguration
        self.httpEndpointDestinationConfiguration = httpEndpointDestinationConfiguration
        self.kinesisStreamSourceConfiguration = kinesisStreamSourceConfiguration
        self.redshiftDestinationConfiguration = redshiftDestinationConfiguration
        self.s3DestinationConfiguration = s3DestinationConfiguration
        self.splunkDestinationConfiguration = splunkDestinationConfiguration
        self.tags = tags
    }
}
