// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FirehoseClientTypes {
    /// Describes a destination in Amazon Redshift.
    public struct RedshiftDestinationDescription: Swift.Equatable {
        /// The Amazon CloudWatch logging options for your delivery stream.
        public var cloudWatchLoggingOptions: FirehoseClientTypes.CloudWatchLoggingOptions?
        /// The database connection string.
        /// This member is required.
        public var clusterJDBCURL: Swift.String?
        /// The COPY command.
        /// This member is required.
        public var copyCommand: FirehoseClientTypes.CopyCommand?
        /// The data processing configuration.
        public var processingConfiguration: FirehoseClientTypes.ProcessingConfiguration?
        /// The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
        public var retryOptions: FirehoseClientTypes.RedshiftRetryOptions?
        /// The Amazon Resource Name (ARN) of the AWS credentials. For more information, see [Amazon Resource Names (ARNs) and AWS Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).
        /// This member is required.
        public var roleARN: Swift.String?
        /// The configuration for backup in Amazon S3.
        public var s3BackupDescription: FirehoseClientTypes.S3DestinationDescription?
        /// The Amazon S3 backup mode.
        public var s3BackupMode: FirehoseClientTypes.RedshiftS3BackupMode?
        /// The Amazon S3 destination.
        /// This member is required.
        public var s3DestinationDescription: FirehoseClientTypes.S3DestinationDescription?
        /// The name of the user.
        /// This member is required.
        public var username: Swift.String?

        public init (
            cloudWatchLoggingOptions: FirehoseClientTypes.CloudWatchLoggingOptions? = nil,
            clusterJDBCURL: Swift.String? = nil,
            copyCommand: FirehoseClientTypes.CopyCommand? = nil,
            processingConfiguration: FirehoseClientTypes.ProcessingConfiguration? = nil,
            retryOptions: FirehoseClientTypes.RedshiftRetryOptions? = nil,
            roleARN: Swift.String? = nil,
            s3BackupDescription: FirehoseClientTypes.S3DestinationDescription? = nil,
            s3BackupMode: FirehoseClientTypes.RedshiftS3BackupMode? = nil,
            s3DestinationDescription: FirehoseClientTypes.S3DestinationDescription? = nil,
            username: Swift.String? = nil
        )
        {
            self.cloudWatchLoggingOptions = cloudWatchLoggingOptions
            self.clusterJDBCURL = clusterJDBCURL
            self.copyCommand = copyCommand
            self.processingConfiguration = processingConfiguration
            self.retryOptions = retryOptions
            self.roleARN = roleARN
            self.s3BackupDescription = s3BackupDescription
            self.s3BackupMode = s3BackupMode
            self.s3DestinationDescription = s3DestinationDescription
            self.username = username
        }
    }

}
