// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FirehoseClientTypes {
    /// Specifies the schema to which you want Kinesis Data Firehose to configure your data before it writes it to Amazon S3. This parameter is required if Enabled is set to true.
    public struct SchemaConfiguration: Swift.Equatable {
        /// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
        public var catalogId: Swift.String?
        /// Specifies the name of the AWS Glue database that contains the schema for the output data. If the SchemaConfiguration request parameter is used as part of invoking the CreateDeliveryStream API, then the DatabaseName property is required and its value must be specified.
        public var databaseName: Swift.String?
        /// If you don't specify an AWS Region, the default is the current Region.
        public var region: Swift.String?
        /// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed. If the SchemaConfiguration request parameter is used as part of invoking the CreateDeliveryStream API, then the RoleARN property is required and its value must be specified.
        public var roleARN: Swift.String?
        /// Specifies the AWS Glue table that contains the column information that constitutes your data schema. If the SchemaConfiguration request parameter is used as part of invoking the CreateDeliveryStream API, then the TableName property is required and its value must be specified.
        public var tableName: Swift.String?
        /// Specifies the table version for the output data schema. If you don't specify this version ID, or if you set it to LATEST, Kinesis Data Firehose uses the most recent version. This means that any updates to the table are automatically picked up.
        public var versionId: Swift.String?

        public init (
            catalogId: Swift.String? = nil,
            databaseName: Swift.String? = nil,
            region: Swift.String? = nil,
            roleARN: Swift.String? = nil,
            tableName: Swift.String? = nil,
            versionId: Swift.String? = nil
        )
        {
            self.catalogId = catalogId
            self.databaseName = databaseName
            self.region = region
            self.roleARN = roleARN
            self.tableName = tableName
            self.versionId = versionId
        }
    }

}
