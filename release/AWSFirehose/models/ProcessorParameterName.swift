// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FirehoseClientTypes {
    public enum ProcessorParameterName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case bufferIntervalInSeconds
        case bufferSizeInMb
        case delimiter
        case jsonParsingEngine
        case lambdaArn
        case lambdaNumberOfRetries
        case metadataExtractionQuery
        case roleArn
        case subRecordType
        case sdkUnknown(Swift.String)

        public static var allCases: [ProcessorParameterName] {
            return [
                .bufferIntervalInSeconds,
                .bufferSizeInMb,
                .delimiter,
                .jsonParsingEngine,
                .lambdaArn,
                .lambdaNumberOfRetries,
                .metadataExtractionQuery,
                .roleArn,
                .subRecordType,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .bufferIntervalInSeconds: return "BufferIntervalInSeconds"
            case .bufferSizeInMb: return "BufferSizeInMBs"
            case .delimiter: return "Delimiter"
            case .jsonParsingEngine: return "JsonParsingEngine"
            case .lambdaArn: return "LambdaArn"
            case .lambdaNumberOfRetries: return "NumberOfRetries"
            case .metadataExtractionQuery: return "MetadataExtractionQuery"
            case .roleArn: return "RoleArn"
            case .subRecordType: return "SubRecordType"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ProcessorParameterName(rawValue: rawValue) ?? ProcessorParameterName.sdkUnknown(rawValue)
        }
    }
}
