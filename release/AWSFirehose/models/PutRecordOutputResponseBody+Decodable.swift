// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutRecordOutputResponseBody: Swift.Equatable {
    let recordId: Swift.String?
    let encrypted: Swift.Bool?
}

extension PutRecordOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case encrypted = "Encrypted"
        case recordId = "RecordId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recordIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recordId)
        recordId = recordIdDecoded
        let encryptedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .encrypted)
        encrypted = encryptedDecoded
    }
}
