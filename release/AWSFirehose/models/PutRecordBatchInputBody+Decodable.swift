// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutRecordBatchInputBody: Swift.Equatable {
    let deliveryStreamName: Swift.String?
    let records: [FirehoseClientTypes.Record]?
}

extension PutRecordBatchInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deliveryStreamName = "DeliveryStreamName"
        case records = "Records"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliveryStreamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deliveryStreamName)
        deliveryStreamName = deliveryStreamNameDecoded
        let recordsContainer = try containerValues.decodeIfPresent([FirehoseClientTypes.Record?].self, forKey: .records)
        var recordsDecoded0:[FirehoseClientTypes.Record]? = nil
        if let recordsContainer = recordsContainer {
            recordsDecoded0 = [FirehoseClientTypes.Record]()
            for structure0 in recordsContainer {
                if let structure0 = structure0 {
                    recordsDecoded0?.append(structure0)
                }
            }
        }
        records = recordsDecoded0
    }
}
