// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension FirehoseClientTypes {
    /// Updates the specified HTTP endpoint destination.
    public struct HttpEndpointDestinationUpdate: Swift.Equatable {
        /// Describes buffering options that can be applied to the data before it is delivered to the HTTPS endpoint destination. Kinesis Data Firehose teats these options as hints, and it might choose to use more optimal values. The SizeInMBs and IntervalInSeconds parameters are optional. However, if specify a value for one of them, you must also provide a value for the other.
        public var bufferingHints: FirehoseClientTypes.HttpEndpointBufferingHints?
        /// Describes the Amazon CloudWatch logging options for your delivery stream.
        public var cloudWatchLoggingOptions: FirehoseClientTypes.CloudWatchLoggingOptions?
        /// Describes the configuration of the HTTP endpoint destination.
        public var endpointConfiguration: FirehoseClientTypes.HttpEndpointConfiguration?
        /// Describes a data processing configuration.
        public var processingConfiguration: FirehoseClientTypes.ProcessingConfiguration?
        /// The configuration of the request sent to the HTTP endpoint specified as the destination.
        public var requestConfiguration: FirehoseClientTypes.HttpEndpointRequestConfiguration?
        /// Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment of receipt from the specified HTTP endpoint destination.
        public var retryOptions: FirehoseClientTypes.HttpEndpointRetryOptions?
        /// Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs.
        public var roleARN: Swift.String?
        /// Describes the S3 bucket backup options for the data that Kinesis Firehose delivers to the HTTP endpoint destination. You can back up all documents (AllData) or only the documents that Kinesis Data Firehose could not deliver to the specified HTTP endpoint destination (FailedDataOnly).
        public var s3BackupMode: FirehoseClientTypes.HttpEndpointS3BackupMode?
        /// Describes an update for a destination in Amazon S3.
        public var s3Update: FirehoseClientTypes.S3DestinationUpdate?

        public init (
            bufferingHints: FirehoseClientTypes.HttpEndpointBufferingHints? = nil,
            cloudWatchLoggingOptions: FirehoseClientTypes.CloudWatchLoggingOptions? = nil,
            endpointConfiguration: FirehoseClientTypes.HttpEndpointConfiguration? = nil,
            processingConfiguration: FirehoseClientTypes.ProcessingConfiguration? = nil,
            requestConfiguration: FirehoseClientTypes.HttpEndpointRequestConfiguration? = nil,
            retryOptions: FirehoseClientTypes.HttpEndpointRetryOptions? = nil,
            roleARN: Swift.String? = nil,
            s3BackupMode: FirehoseClientTypes.HttpEndpointS3BackupMode? = nil,
            s3Update: FirehoseClientTypes.S3DestinationUpdate? = nil
        )
        {
            self.bufferingHints = bufferingHints
            self.cloudWatchLoggingOptions = cloudWatchLoggingOptions
            self.endpointConfiguration = endpointConfiguration
            self.processingConfiguration = processingConfiguration
            self.requestConfiguration = requestConfiguration
            self.retryOptions = retryOptions
            self.roleARN = roleARN
            self.s3BackupMode = s3BackupMode
            self.s3Update = s3Update
        }
    }

}
