// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeliveryStreamsOutputResponseBody: Swift.Equatable {
    let deliveryStreamNames: [Swift.String]?
    let hasMoreDeliveryStreams: Swift.Bool?
}

extension ListDeliveryStreamsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deliveryStreamNames = "DeliveryStreamNames"
        case hasMoreDeliveryStreams = "HasMoreDeliveryStreams"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliveryStreamNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .deliveryStreamNames)
        var deliveryStreamNamesDecoded0:[Swift.String]? = nil
        if let deliveryStreamNamesContainer = deliveryStreamNamesContainer {
            deliveryStreamNamesDecoded0 = [Swift.String]()
            for string0 in deliveryStreamNamesContainer {
                if let string0 = string0 {
                    deliveryStreamNamesDecoded0?.append(string0)
                }
            }
        }
        deliveryStreamNames = deliveryStreamNamesDecoded0
        let hasMoreDeliveryStreamsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .hasMoreDeliveryStreams)
        hasMoreDeliveryStreams = hasMoreDeliveryStreamsDecoded
    }
}
