// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDeliveryStreamInputBody: Swift.Equatable {
    let deliveryStreamName: Swift.String?
    let limit: Swift.Int?
    let exclusiveStartDestinationId: Swift.String?
}

extension DescribeDeliveryStreamInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deliveryStreamName = "DeliveryStreamName"
        case exclusiveStartDestinationId = "ExclusiveStartDestinationId"
        case limit = "Limit"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliveryStreamNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deliveryStreamName)
        deliveryStreamName = deliveryStreamNameDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let exclusiveStartDestinationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exclusiveStartDestinationId)
        exclusiveStartDestinationId = exclusiveStartDestinationIdDecoded
    }
}
