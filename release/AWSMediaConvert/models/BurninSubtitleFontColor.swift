// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Specify the color of the burned-in captions text. Leave Font color (FontColor) blank and set Style passthrough (StylePassthrough) to enabled to use the font color data from your input captions, if present.
    public enum BurninSubtitleFontColor: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case auto
        case black
        case blue
        case green
        case hex
        case red
        case white
        case yellow
        case sdkUnknown(Swift.String)

        public static var allCases: [BurninSubtitleFontColor] {
            return [
                .auto,
                .black,
                .blue,
                .green,
                .hex,
                .red,
                .white,
                .yellow,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .auto: return "AUTO"
            case .black: return "BLACK"
            case .blue: return "BLUE"
            case .green: return "GREEN"
            case .hex: return "HEX"
            case .red: return "RED"
            case .white: return "WHITE"
            case .yellow: return "YELLOW"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = BurninSubtitleFontColor(rawValue: rawValue) ?? BurninSubtitleFontColor.sdkUnknown(rawValue)
        }
    }
}
