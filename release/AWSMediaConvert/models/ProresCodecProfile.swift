// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Use Profile (ProResCodecProfile) to specify the type of Apple ProRes codec to use for this output.
    public enum ProresCodecProfile: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case appleProres422
        case appleProres422Hq
        case appleProres422Lt
        case appleProres422Proxy
        case appleProres4444
        case appleProres4444Xq
        case sdkUnknown(Swift.String)

        public static var allCases: [ProresCodecProfile] {
            return [
                .appleProres422,
                .appleProres422Hq,
                .appleProres422Lt,
                .appleProres422Proxy,
                .appleProres4444,
                .appleProres4444Xq,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .appleProres422: return "APPLE_PRORES_422"
            case .appleProres422Hq: return "APPLE_PRORES_422_HQ"
            case .appleProres422Lt: return "APPLE_PRORES_422_LT"
            case .appleProres422Proxy: return "APPLE_PRORES_422_PROXY"
            case .appleProres4444: return "APPLE_PRORES_4444"
            case .appleProres4444Xq: return "APPLE_PRORES_4444_XQ"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ProresCodecProfile(rawValue: rawValue) ?? ProresCodecProfile.sdkUnknown(rawValue)
        }
    }
}
