// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Video codec settings, (CodecSettings) under (VideoDescription), contains the group of settings related to video encoding. The settings in this group vary depending on the value that you choose for Video codec (Codec). For each codec enum that you choose, define the corresponding settings object. The following lists the codec enum, settings object pairs. * AV1, Av1Settings * AVC_INTRA, AvcIntraSettings * FRAME_CAPTURE, FrameCaptureSettings * H_264, H264Settings * H_265, H265Settings * MPEG2, Mpeg2Settings * PRORES, ProresSettings * VC3, Vc3Settings * VP8, Vp8Settings * VP9, Vp9Settings * XAVC, XavcSettings
    public struct VideoCodecSettings: Swift.Equatable {
        /// Required when you set Codec, under VideoDescription>CodecSettings to the value AV1.
        public var av1Settings: MediaConvertClientTypes.Av1Settings?
        /// Required when you choose AVC-Intra for your output video codec. For more information about the AVC-Intra settings, see the relevant specification. For detailed information about SD and HD in AVC-Intra, see https://ieeexplore.ieee.org/document/7290936. For information about 4K/2K in AVC-Intra, see https://pro-av.panasonic.net/en/avc-ultra/AVC-ULTRAoverview.pdf.
        public var avcIntraSettings: MediaConvertClientTypes.AvcIntraSettings?
        /// Specifies the video codec. This must be equal to one of the enum values defined by the object VideoCodec.
        public var codec: MediaConvertClientTypes.VideoCodec?
        /// Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value FRAME_CAPTURE.
        public var frameCaptureSettings: MediaConvertClientTypes.FrameCaptureSettings?
        /// Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value H_264.
        public var h264Settings: MediaConvertClientTypes.H264Settings?
        /// Settings for H265 codec
        public var h265Settings: MediaConvertClientTypes.H265Settings?
        /// Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value MPEG2.
        public var mpeg2Settings: MediaConvertClientTypes.Mpeg2Settings?
        /// Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value PRORES.
        public var proresSettings: MediaConvertClientTypes.ProresSettings?
        /// Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value VC3
        public var vc3Settings: MediaConvertClientTypes.Vc3Settings?
        /// Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value VP8.
        public var vp8Settings: MediaConvertClientTypes.Vp8Settings?
        /// Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value VP9.
        public var vp9Settings: MediaConvertClientTypes.Vp9Settings?
        /// Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value XAVC.
        public var xavcSettings: MediaConvertClientTypes.XavcSettings?

        public init (
            av1Settings: MediaConvertClientTypes.Av1Settings? = nil,
            avcIntraSettings: MediaConvertClientTypes.AvcIntraSettings? = nil,
            codec: MediaConvertClientTypes.VideoCodec? = nil,
            frameCaptureSettings: MediaConvertClientTypes.FrameCaptureSettings? = nil,
            h264Settings: MediaConvertClientTypes.H264Settings? = nil,
            h265Settings: MediaConvertClientTypes.H265Settings? = nil,
            mpeg2Settings: MediaConvertClientTypes.Mpeg2Settings? = nil,
            proresSettings: MediaConvertClientTypes.ProresSettings? = nil,
            vc3Settings: MediaConvertClientTypes.Vc3Settings? = nil,
            vp8Settings: MediaConvertClientTypes.Vp8Settings? = nil,
            vp9Settings: MediaConvertClientTypes.Vp9Settings? = nil,
            xavcSettings: MediaConvertClientTypes.XavcSettings? = nil
        )
        {
            self.av1Settings = av1Settings
            self.avcIntraSettings = avcIntraSettings
            self.codec = codec
            self.frameCaptureSettings = frameCaptureSettings
            self.h264Settings = h264Settings
            self.h265Settings = h265Settings
            self.mpeg2Settings = mpeg2Settings
            self.proresSettings = proresSettings
            self.vc3Settings = vc3Settings
            self.vp8Settings = vp8Settings
            self.vp9Settings = vp9Settings
            self.xavcSettings = xavcSettings
        }
    }

}
