// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.Mp4Settings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case audioDuration = "audioDuration"
        case cslgAtom = "cslgAtom"
        case cttsVersion = "cttsVersion"
        case freeSpaceBox = "freeSpaceBox"
        case moovPlacement = "moovPlacement"
        case mp4MajorBrand = "mp4MajorBrand"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let audioDuration = self.audioDuration {
            try encodeContainer.encode(audioDuration.rawValue, forKey: .audioDuration)
        }
        if let cslgAtom = self.cslgAtom {
            try encodeContainer.encode(cslgAtom.rawValue, forKey: .cslgAtom)
        }
        if let cttsVersion = self.cttsVersion {
            try encodeContainer.encode(cttsVersion, forKey: .cttsVersion)
        }
        if let freeSpaceBox = self.freeSpaceBox {
            try encodeContainer.encode(freeSpaceBox.rawValue, forKey: .freeSpaceBox)
        }
        if let moovPlacement = self.moovPlacement {
            try encodeContainer.encode(moovPlacement.rawValue, forKey: .moovPlacement)
        }
        if let mp4MajorBrand = self.mp4MajorBrand {
            try encodeContainer.encode(mp4MajorBrand, forKey: .mp4MajorBrand)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let audioDurationDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.CmfcAudioDuration.self, forKey: .audioDuration)
        audioDuration = audioDurationDecoded
        let cslgAtomDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.Mp4CslgAtom.self, forKey: .cslgAtom)
        cslgAtom = cslgAtomDecoded
        let cttsVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .cttsVersion)
        cttsVersion = cttsVersionDecoded
        let freeSpaceBoxDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.Mp4FreeSpaceBox.self, forKey: .freeSpaceBox)
        freeSpaceBox = freeSpaceBoxDecoded
        let moovPlacementDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.Mp4MoovPlacement.self, forKey: .moovPlacement)
        moovPlacement = moovPlacementDecoded
        let mp4MajorBrandDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mp4MajorBrand)
        mp4MajorBrand = mp4MajorBrandDecoded
    }
}
