// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Container for this output. Some containers require a container settings object. If not specified, the default object will be created.
    public enum ContainerType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case cmfc
        case f4v
        case ismv
        case m2ts
        case m3u8
        case mov
        case mp4
        case mpd
        case mxf
        case raw
        case webm
        case sdkUnknown(Swift.String)

        public static var allCases: [ContainerType] {
            return [
                .cmfc,
                .f4v,
                .ismv,
                .m2ts,
                .m3u8,
                .mov,
                .mp4,
                .mpd,
                .mxf,
                .raw,
                .webm,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .cmfc: return "CMFC"
            case .f4v: return "F4V"
            case .ismv: return "ISMV"
            case .m2ts: return "M2TS"
            case .m3u8: return "M3U8"
            case .mov: return "MOV"
            case .mp4: return "MP4"
            case .mpd: return "MPD"
            case .mxf: return "MXF"
            case .raw: return "RAW"
            case .webm: return "WEBM"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ContainerType(rawValue: rawValue) ?? ContainerType.sdkUnknown(rawValue)
        }
    }
}
