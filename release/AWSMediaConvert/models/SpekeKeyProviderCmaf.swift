// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// If your output group type is CMAF, use these settings when doing DRM encryption with a SPEKE-compliant key provider. If your output group type is HLS, DASH, or Microsoft Smooth, use the SpekeKeyProvider settings instead.
    public struct SpekeKeyProviderCmaf: Swift.Equatable {
        /// If you want your key provider to encrypt the content keys that it provides to MediaConvert, set up a certificate with a master key using AWS Certificate Manager. Specify the certificate's Amazon Resource Name (ARN) here.
        public var certificateArn: Swift.String?
        /// Specify the DRM system IDs that you want signaled in the DASH manifest that MediaConvert creates as part of this CMAF package. The DASH manifest can currently signal up to three system IDs. For more information, see https://dashif.org/identifiers/content_protection/.
        public var dashSignaledSystemIds: [Swift.String]?
        /// Specify the DRM system ID that you want signaled in the HLS manifest that MediaConvert creates as part of this CMAF package. The HLS manifest can currently signal only one system ID. For more information, see https://dashif.org/identifiers/content_protection/.
        public var hlsSignaledSystemIds: [Swift.String]?
        /// Specify the resource ID that your SPEKE-compliant key provider uses to identify this content.
        public var resourceId: Swift.String?
        /// Specify the URL to the key server that your SPEKE-compliant DRM key provider uses to provide keys for encrypting your content.
        public var url: Swift.String?

        public init (
            certificateArn: Swift.String? = nil,
            dashSignaledSystemIds: [Swift.String]? = nil,
            hlsSignaledSystemIds: [Swift.String]? = nil,
            resourceId: Swift.String? = nil,
            url: Swift.String? = nil
        )
        {
            self.certificateArn = certificateArn
            self.dashSignaledSystemIds = dashSignaledSystemIds
            self.hlsSignaledSystemIds = hlsSignaledSystemIds
            self.resourceId = resourceId
            self.url = url
        }
    }

}
