// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.H264QvbrSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxAverageBitrate = "maxAverageBitrate"
        case qvbrQualityLevel = "qvbrQualityLevel"
        case qvbrQualityLevelFineTune = "qvbrQualityLevelFineTune"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxAverageBitrate = self.maxAverageBitrate {
            try encodeContainer.encode(maxAverageBitrate, forKey: .maxAverageBitrate)
        }
        if let qvbrQualityLevel = self.qvbrQualityLevel {
            try encodeContainer.encode(qvbrQualityLevel, forKey: .qvbrQualityLevel)
        }
        if let qvbrQualityLevelFineTune = self.qvbrQualityLevelFineTune {
            try encodeContainer.encode(qvbrQualityLevelFineTune, forKey: .qvbrQualityLevelFineTune)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maxAverageBitrateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxAverageBitrate)
        maxAverageBitrate = maxAverageBitrateDecoded
        let qvbrQualityLevelDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .qvbrQualityLevel)
        qvbrQualityLevel = qvbrQualityLevelDecoded
        let qvbrQualityLevelFineTuneDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .qvbrQualityLevelFineTune)
        qvbrQualityLevelFineTune = qvbrQualityLevelFineTuneDecoded
    }
}
