// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.Timing: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case finishTime = "finishTime"
        case startTime = "startTime"
        case submitTime = "submitTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let finishTime = self.finishTime {
            try encodeContainer.encode(finishTime.timeIntervalSince1970, forKey: .finishTime)
        }
        if let startTime = self.startTime {
            try encodeContainer.encode(startTime.timeIntervalSince1970, forKey: .startTime)
        }
        if let submitTime = self.submitTime {
            try encodeContainer.encode(submitTime.timeIntervalSince1970, forKey: .submitTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let finishTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .finishTime)
        finishTime = finishTimeDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let submitTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .submitTime)
        submitTime = submitTimeDecoded
    }
}
