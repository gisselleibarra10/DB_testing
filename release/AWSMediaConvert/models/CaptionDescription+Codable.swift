// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.CaptionDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case captionSelectorName = "captionSelectorName"
        case customLanguageCode = "customLanguageCode"
        case destinationSettings = "destinationSettings"
        case languageCode = "languageCode"
        case languageDescription = "languageDescription"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let captionSelectorName = self.captionSelectorName {
            try encodeContainer.encode(captionSelectorName, forKey: .captionSelectorName)
        }
        if let customLanguageCode = self.customLanguageCode {
            try encodeContainer.encode(customLanguageCode, forKey: .customLanguageCode)
        }
        if let destinationSettings = self.destinationSettings {
            try encodeContainer.encode(destinationSettings, forKey: .destinationSettings)
        }
        if let languageCode = self.languageCode {
            try encodeContainer.encode(languageCode.rawValue, forKey: .languageCode)
        }
        if let languageDescription = self.languageDescription {
            try encodeContainer.encode(languageDescription, forKey: .languageDescription)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let captionSelectorNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .captionSelectorName)
        captionSelectorName = captionSelectorNameDecoded
        let customLanguageCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customLanguageCode)
        customLanguageCode = customLanguageCodeDecoded
        let destinationSettingsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.CaptionDestinationSettings.self, forKey: .destinationSettings)
        destinationSettings = destinationSettingsDecoded
        let languageCodeDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.LanguageCode.self, forKey: .languageCode)
        languageCode = languageCodeDecoded
        let languageDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .languageDescription)
        languageDescription = languageDescriptionDecoded
    }
}
