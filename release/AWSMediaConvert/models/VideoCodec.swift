// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Type of video codec
    public enum VideoCodec: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case av1
        case avcIntra
        case frameCapture
        case h264
        case h265
        case mpeg2
        case prores
        case vc3
        case vp8
        case vp9
        case xavc
        case sdkUnknown(Swift.String)

        public static var allCases: [VideoCodec] {
            return [
                .av1,
                .avcIntra,
                .frameCapture,
                .h264,
                .h265,
                .mpeg2,
                .prores,
                .vc3,
                .vp8,
                .vp9,
                .xavc,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .av1: return "AV1"
            case .avcIntra: return "AVC_INTRA"
            case .frameCapture: return "FRAME_CAPTURE"
            case .h264: return "H_264"
            case .h265: return "H_265"
            case .mpeg2: return "MPEG2"
            case .prores: return "PRORES"
            case .vc3: return "VC3"
            case .vp8: return "VP8"
            case .vp9: return "VP9"
            case .xavc: return "XAVC"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = VideoCodec(rawValue: rawValue) ?? VideoCodec.sdkUnknown(rawValue)
        }
    }
}
