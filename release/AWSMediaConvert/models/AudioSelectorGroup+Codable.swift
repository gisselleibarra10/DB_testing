// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.AudioSelectorGroup: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case audioSelectorNames = "audioSelectorNames"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let audioSelectorNames = audioSelectorNames {
            var audioSelectorNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .audioSelectorNames)
            for __listof__stringmin10 in audioSelectorNames {
                try audioSelectorNamesContainer.encode(__listof__stringmin10)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let audioSelectorNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .audioSelectorNames)
        var audioSelectorNamesDecoded0:[Swift.String]? = nil
        if let audioSelectorNamesContainer = audioSelectorNamesContainer {
            audioSelectorNamesDecoded0 = [Swift.String]()
            for string0 in audioSelectorNamesContainer {
                if let string0 = string0 {
                    audioSelectorNamesDecoded0?.append(string0)
                }
            }
        }
        audioSelectorNames = audioSelectorNamesDecoded0
    }
}
