// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.DashIsoEncryptionSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case playbackDeviceCompatibility = "playbackDeviceCompatibility"
        case spekeKeyProvider = "spekeKeyProvider"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let playbackDeviceCompatibility = self.playbackDeviceCompatibility {
            try encodeContainer.encode(playbackDeviceCompatibility.rawValue, forKey: .playbackDeviceCompatibility)
        }
        if let spekeKeyProvider = self.spekeKeyProvider {
            try encodeContainer.encode(spekeKeyProvider, forKey: .spekeKeyProvider)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let playbackDeviceCompatibilityDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.DashIsoPlaybackDeviceCompatibility.self, forKey: .playbackDeviceCompatibility)
        playbackDeviceCompatibility = playbackDeviceCompatibilityDecoded
        let spekeKeyProviderDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.SpekeKeyProvider.self, forKey: .spekeKeyProvider)
        spekeKeyProvider = spekeKeyProviderDecoded
    }
}
