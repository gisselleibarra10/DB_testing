// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.MpdSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessibilityCaptionHints = "accessibilityCaptionHints"
        case audioDuration = "audioDuration"
        case captionContainerType = "captionContainerType"
        case klvMetadata = "klvMetadata"
        case scte35Esam = "scte35Esam"
        case scte35Source = "scte35Source"
        case timedMetadata = "timedMetadata"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessibilityCaptionHints = self.accessibilityCaptionHints {
            try encodeContainer.encode(accessibilityCaptionHints.rawValue, forKey: .accessibilityCaptionHints)
        }
        if let audioDuration = self.audioDuration {
            try encodeContainer.encode(audioDuration.rawValue, forKey: .audioDuration)
        }
        if let captionContainerType = self.captionContainerType {
            try encodeContainer.encode(captionContainerType.rawValue, forKey: .captionContainerType)
        }
        if let klvMetadata = self.klvMetadata {
            try encodeContainer.encode(klvMetadata.rawValue, forKey: .klvMetadata)
        }
        if let scte35Esam = self.scte35Esam {
            try encodeContainer.encode(scte35Esam.rawValue, forKey: .scte35Esam)
        }
        if let scte35Source = self.scte35Source {
            try encodeContainer.encode(scte35Source.rawValue, forKey: .scte35Source)
        }
        if let timedMetadata = self.timedMetadata {
            try encodeContainer.encode(timedMetadata.rawValue, forKey: .timedMetadata)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessibilityCaptionHintsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MpdAccessibilityCaptionHints.self, forKey: .accessibilityCaptionHints)
        accessibilityCaptionHints = accessibilityCaptionHintsDecoded
        let audioDurationDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MpdAudioDuration.self, forKey: .audioDuration)
        audioDuration = audioDurationDecoded
        let captionContainerTypeDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MpdCaptionContainerType.self, forKey: .captionContainerType)
        captionContainerType = captionContainerTypeDecoded
        let klvMetadataDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MpdKlvMetadata.self, forKey: .klvMetadata)
        klvMetadata = klvMetadataDecoded
        let scte35EsamDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MpdScte35Esam.self, forKey: .scte35Esam)
        scte35Esam = scte35EsamDecoded
        let scte35SourceDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MpdScte35Source.self, forKey: .scte35Source)
        scte35Source = scte35SourceDecoded
        let timedMetadataDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MpdTimedMetadata.self, forKey: .timedMetadata)
        timedMetadata = timedMetadataDecoded
    }
}
