// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Settings related to one captions tab on the MediaConvert console. In your job JSON, an instance of captions DestinationSettings is equivalent to one captions tab in the console. Usually, one captions tab corresponds to one output captions track. Depending on your output captions format, one tab might correspond to a set of output captions tracks. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/including-captions.html.
    public struct CaptionDestinationSettings: Swift.Equatable {
        /// Burn-in is a captions delivery method, rather than a captions format. Burn-in writes the captions directly on your video frames, replacing pixels of video content with the captions. Set up burn-in captions in the same output as your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/burn-in-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to BURN_IN.
        public var burninDestinationSettings: MediaConvertClientTypes.BurninDestinationSettings?
        /// Specify the format for this set of captions on this output. The default format is embedded without SCTE-20. Note that your choice of video output container constrains your choice of output captions format. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/captions-support-tables.html. If you are using SCTE-20 and you want to create an output that complies with the SCTE-43 spec, choose SCTE-20 plus embedded (SCTE20_PLUS_EMBEDDED). To create a non-compliant output where the embedded captions come first, choose Embedded plus SCTE-20 (EMBEDDED_PLUS_SCTE20).
        public var destinationType: MediaConvertClientTypes.CaptionDestinationType?
        /// Settings related to DVB-Sub captions. Set up DVB-Sub captions in the same output as your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/dvb-sub-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to DVB_SUB.
        public var dvbSubDestinationSettings: MediaConvertClientTypes.DvbSubDestinationSettings?
        /// Settings related to CEA/EIA-608 and CEA/EIA-708 (also called embedded or ancillary) captions. Set up embedded captions in the same output as your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/embedded-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to EMBEDDED, EMBEDDED_PLUS_SCTE20, or SCTE20_PLUS_EMBEDDED.
        public var embeddedDestinationSettings: MediaConvertClientTypes.EmbeddedDestinationSettings?
        /// Settings related to IMSC captions. IMSC is a sidecar format that holds captions in a file that is separate from the video container. Set up sidecar captions in the same output group, but different output from your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/ttml-and-webvtt-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to IMSC.
        public var imscDestinationSettings: MediaConvertClientTypes.ImscDestinationSettings?
        /// Settings related to SCC captions. SCC is a sidecar format that holds captions in a file that is separate from the video container. Set up sidecar captions in the same output group, but different output from your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/scc-srt-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to SCC.
        public var sccDestinationSettings: MediaConvertClientTypes.SccDestinationSettings?
        /// Settings related to SRT captions. SRT is a sidecar format that holds captions in a file that is separate from the video container. Set up sidecar captions in the same output group, but different output from your video. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to SRT.
        public var srtDestinationSettings: MediaConvertClientTypes.SrtDestinationSettings?
        /// Settings related to teletext captions. Set up teletext captions in the same output as your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/teletext-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to TELETEXT.
        public var teletextDestinationSettings: MediaConvertClientTypes.TeletextDestinationSettings?
        /// Settings related to TTML captions. TTML is a sidecar format that holds captions in a file that is separate from the video container. Set up sidecar captions in the same output group, but different output from your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/ttml-and-webvtt-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to TTML.
        public var ttmlDestinationSettings: MediaConvertClientTypes.TtmlDestinationSettings?
        /// Settings related to WebVTT captions. WebVTT is a sidecar format that holds captions in a file that is separate from the video container. Set up sidecar captions in the same output group, but different output from your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/ttml-and-webvtt-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to WebVTT.
        public var webvttDestinationSettings: MediaConvertClientTypes.WebvttDestinationSettings?

        public init (
            burninDestinationSettings: MediaConvertClientTypes.BurninDestinationSettings? = nil,
            destinationType: MediaConvertClientTypes.CaptionDestinationType? = nil,
            dvbSubDestinationSettings: MediaConvertClientTypes.DvbSubDestinationSettings? = nil,
            embeddedDestinationSettings: MediaConvertClientTypes.EmbeddedDestinationSettings? = nil,
            imscDestinationSettings: MediaConvertClientTypes.ImscDestinationSettings? = nil,
            sccDestinationSettings: MediaConvertClientTypes.SccDestinationSettings? = nil,
            srtDestinationSettings: MediaConvertClientTypes.SrtDestinationSettings? = nil,
            teletextDestinationSettings: MediaConvertClientTypes.TeletextDestinationSettings? = nil,
            ttmlDestinationSettings: MediaConvertClientTypes.TtmlDestinationSettings? = nil,
            webvttDestinationSettings: MediaConvertClientTypes.WebvttDestinationSettings? = nil
        )
        {
            self.burninDestinationSettings = burninDestinationSettings
            self.destinationType = destinationType
            self.dvbSubDestinationSettings = dvbSubDestinationSettings
            self.embeddedDestinationSettings = embeddedDestinationSettings
            self.imscDestinationSettings = imscDestinationSettings
            self.sccDestinationSettings = sccDestinationSettings
            self.srtDestinationSettings = srtDestinationSettings
            self.teletextDestinationSettings = teletextDestinationSettings
            self.ttmlDestinationSettings = ttmlDestinationSettings
            self.webvttDestinationSettings = webvttDestinationSettings
        }
    }

}
