// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Specify the XAVC profile for this output. For more information, see the Sony documentation at https://www.xavc-info.org/. Note that MediaConvert doesn't support the interlaced video XAVC operating points for XAVC_HD_INTRA_CBG. To create an interlaced XAVC output, choose the profile XAVC_HD.
    public enum XavcProfile: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case xavc4k
        case xavc4kIntraCbg
        case xavc4kIntraVbr
        case xavcHd
        case xavcHdIntraCbg
        case sdkUnknown(Swift.String)

        public static var allCases: [XavcProfile] {
            return [
                .xavc4k,
                .xavc4kIntraCbg,
                .xavc4kIntraVbr,
                .xavcHd,
                .xavcHdIntraCbg,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .xavc4k: return "XAVC_4K"
            case .xavc4kIntraCbg: return "XAVC_4K_INTRA_CBG"
            case .xavc4kIntraVbr: return "XAVC_4K_INTRA_VBR"
            case .xavcHd: return "XAVC_HD"
            case .xavcHdIntraCbg: return "XAVC_HD_INTRA_CBG"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = XavcProfile(rawValue: rawValue) ?? XavcProfile.sdkUnknown(rawValue)
        }
    }
}
