// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.WavSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bitDepth = "bitDepth"
        case channels = "channels"
        case format = "format"
        case sampleRate = "sampleRate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bitDepth = self.bitDepth {
            try encodeContainer.encode(bitDepth, forKey: .bitDepth)
        }
        if let channels = self.channels {
            try encodeContainer.encode(channels, forKey: .channels)
        }
        if let format = self.format {
            try encodeContainer.encode(format.rawValue, forKey: .format)
        }
        if let sampleRate = self.sampleRate {
            try encodeContainer.encode(sampleRate, forKey: .sampleRate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bitDepthDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .bitDepth)
        bitDepth = bitDepthDecoded
        let channelsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .channels)
        channels = channelsDecoded
        let formatDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.WavFormat.self, forKey: .format)
        format = formatDecoded
        let sampleRateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sampleRate)
        sampleRate = sampleRateDecoded
    }
}
