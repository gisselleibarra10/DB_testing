// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.ChannelMapping: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case outputChannels = "outputChannels"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let outputChannels = outputChannels {
            var outputChannelsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .outputChannels)
            for __listofoutputchannelmapping0 in outputChannels {
                try outputChannelsContainer.encode(__listofoutputchannelmapping0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outputChannelsContainer = try containerValues.decodeIfPresent([MediaConvertClientTypes.OutputChannelMapping?].self, forKey: .outputChannels)
        var outputChannelsDecoded0:[MediaConvertClientTypes.OutputChannelMapping]? = nil
        if let outputChannelsContainer = outputChannelsContainer {
            outputChannelsDecoded0 = [MediaConvertClientTypes.OutputChannelMapping]()
            for structure0 in outputChannelsContainer {
                if let structure0 = structure0 {
                    outputChannelsDecoded0?.append(structure0)
                }
            }
        }
        outputChannels = outputChannelsDecoded0
    }
}
