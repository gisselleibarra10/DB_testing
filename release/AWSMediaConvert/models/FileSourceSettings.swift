// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// If your input captions are SCC, SMI, SRT, STL, TTML, WebVTT, or IMSC 1.1 in an xml file, specify the URI of the input caption source file. If your caption source is IMSC in an IMF package, use TrackSourceSettings instead of FileSoureSettings.
    public struct FileSourceSettings: Swift.Equatable {
        /// Specify whether this set of input captions appears in your outputs in both 608 and 708 format. If you choose Upconvert (UPCONVERT), MediaConvert includes the captions data in two ways: it passes the 608 data through using the 608 compatibility bytes fields of the 708 wrapper, and it also translates the 608 data into 708.
        public var convert608To708: MediaConvertClientTypes.FileSourceConvert608To708?
        /// Ignore this setting unless your input captions format is SCC. To have the service compensate for differing frame rates between your input captions and input video, specify the frame rate of the captions file. Specify this value as a fraction. When you work directly in your JSON job specification, use the settings framerateNumerator and framerateDenominator. For example, you might specify 24 / 1 for 24 fps, 25 / 1 for 25 fps, 24000 / 1001 for 23.976 fps, or 30000 / 1001 for 29.97 fps.
        public var framerate: MediaConvertClientTypes.CaptionSourceFramerate?
        /// External caption file used for loading captions. Accepted file extensions are 'scc', 'ttml', 'dfxp', 'stl', 'srt', 'xml', 'smi', 'webvtt', and 'vtt'.
        public var sourceFile: Swift.String?
        /// Optional. Use this setting when you need to adjust the sync between your sidecar captions and your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/time-delta-use-cases.html. Enter a positive or negative number to modify the times in the captions file. For example, type 15 to add 15 seconds to all the times in the captions file. Type -5 to subtract 5 seconds from the times in the captions file. You can optionally specify your time delta in milliseconds instead of seconds. When you do so, set the related setting, Time delta units (TimeDeltaUnits) to Milliseconds (MILLISECONDS). Note that, when you specify a time delta for timecode-based caption sources, such as SCC and STL, and your time delta isn't a multiple of the input frame rate, MediaConvert snaps the captions to the nearest frame. For example, when your input video frame rate is 25 fps and you specify 1010ms for time delta, MediaConvert delays your captions by 1000 ms.
        public var timeDelta: Swift.Int?
        /// When you use the setting Time delta (TimeDelta) to adjust the sync between your sidecar captions and your video, use this setting to specify the units for the delta that you specify. When you don't specify a value for Time delta units (TimeDeltaUnits), MediaConvert uses seconds by default.
        public var timeDeltaUnits: MediaConvertClientTypes.FileSourceTimeDeltaUnits?

        public init (
            convert608To708: MediaConvertClientTypes.FileSourceConvert608To708? = nil,
            framerate: MediaConvertClientTypes.CaptionSourceFramerate? = nil,
            sourceFile: Swift.String? = nil,
            timeDelta: Swift.Int? = nil,
            timeDeltaUnits: MediaConvertClientTypes.FileSourceTimeDeltaUnits? = nil
        )
        {
            self.convert608To708 = convert608To708
            self.framerate = framerate
            self.sourceFile = sourceFile
            self.timeDelta = timeDelta
            self.timeDeltaUnits = timeDeltaUnits
        }
    }

}
