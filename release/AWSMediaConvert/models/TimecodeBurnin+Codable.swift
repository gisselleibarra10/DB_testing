// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.TimecodeBurnin: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fontSize = "fontSize"
        case position = "position"
        case `prefix` = "prefix"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fontSize = self.fontSize {
            try encodeContainer.encode(fontSize, forKey: .fontSize)
        }
        if let position = self.position {
            try encodeContainer.encode(position.rawValue, forKey: .position)
        }
        if let `prefix` = self.`prefix` {
            try encodeContainer.encode(`prefix`, forKey: .`prefix`)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fontSizeDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .fontSize)
        fontSize = fontSizeDecoded
        let positionDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.TimecodeBurninPosition.self, forKey: .position)
        position = positionDecoded
        let prefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .prefix)
        `prefix` = prefixDecoded
    }
}
