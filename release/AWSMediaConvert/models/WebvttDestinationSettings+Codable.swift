// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.WebvttDestinationSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessibility = "accessibility"
        case stylePassthrough = "stylePassthrough"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessibility = self.accessibility {
            try encodeContainer.encode(accessibility.rawValue, forKey: .accessibility)
        }
        if let stylePassthrough = self.stylePassthrough {
            try encodeContainer.encode(stylePassthrough.rawValue, forKey: .stylePassthrough)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessibilityDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.WebvttAccessibilitySubs.self, forKey: .accessibility)
        accessibility = accessibilityDecoded
        let stylePassthroughDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.WebvttStylePassthrough.self, forKey: .stylePassthrough)
        stylePassthrough = stylePassthroughDecoded
    }
}
