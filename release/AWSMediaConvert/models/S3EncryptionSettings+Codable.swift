// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.S3EncryptionSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case encryptionType = "encryptionType"
        case kmsEncryptionContext = "kmsEncryptionContext"
        case kmsKeyArn = "kmsKeyArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let encryptionType = self.encryptionType {
            try encodeContainer.encode(encryptionType.rawValue, forKey: .encryptionType)
        }
        if let kmsEncryptionContext = self.kmsEncryptionContext {
            try encodeContainer.encode(kmsEncryptionContext, forKey: .kmsEncryptionContext)
        }
        if let kmsKeyArn = self.kmsKeyArn {
            try encodeContainer.encode(kmsKeyArn, forKey: .kmsKeyArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let encryptionTypeDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.S3ServerSideEncryptionType.self, forKey: .encryptionType)
        encryptionType = encryptionTypeDecoded
        let kmsEncryptionContextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsEncryptionContext)
        kmsEncryptionContext = kmsEncryptionContextDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
    }
}
