// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.QueueTransition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationQueue = "destinationQueue"
        case sourceQueue = "sourceQueue"
        case timestamp = "timestamp"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destinationQueue = self.destinationQueue {
            try encodeContainer.encode(destinationQueue, forKey: .destinationQueue)
        }
        if let sourceQueue = self.sourceQueue {
            try encodeContainer.encode(sourceQueue, forKey: .sourceQueue)
        }
        if let timestamp = self.timestamp {
            try encodeContainer.encode(timestamp.timeIntervalSince1970, forKey: .timestamp)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationQueueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationQueue)
        destinationQueue = destinationQueueDecoded
        let sourceQueueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceQueue)
        sourceQueue = sourceQueueDecoded
        let timestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .timestamp)
        timestamp = timestampDecoded
    }
}
