// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.MovSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clapAtom = "clapAtom"
        case cslgAtom = "cslgAtom"
        case mpeg2FourCCControl = "mpeg2FourCCControl"
        case paddingControl = "paddingControl"
        case reference = "reference"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clapAtom = self.clapAtom {
            try encodeContainer.encode(clapAtom.rawValue, forKey: .clapAtom)
        }
        if let cslgAtom = self.cslgAtom {
            try encodeContainer.encode(cslgAtom.rawValue, forKey: .cslgAtom)
        }
        if let mpeg2FourCCControl = self.mpeg2FourCCControl {
            try encodeContainer.encode(mpeg2FourCCControl.rawValue, forKey: .mpeg2FourCCControl)
        }
        if let paddingControl = self.paddingControl {
            try encodeContainer.encode(paddingControl.rawValue, forKey: .paddingControl)
        }
        if let reference = self.reference {
            try encodeContainer.encode(reference.rawValue, forKey: .reference)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clapAtomDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MovClapAtom.self, forKey: .clapAtom)
        clapAtom = clapAtomDecoded
        let cslgAtomDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MovCslgAtom.self, forKey: .cslgAtom)
        cslgAtom = cslgAtomDecoded
        let mpeg2FourCCControlDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MovMpeg2FourCCControl.self, forKey: .mpeg2FourCCControl)
        mpeg2FourCCControl = mpeg2FourCCControlDecoded
        let paddingControlDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MovPaddingControl.self, forKey: .paddingControl)
        paddingControl = paddingControlDecoded
        let referenceDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MovReference.self, forKey: .reference)
        reference = referenceDecoded
    }
}
