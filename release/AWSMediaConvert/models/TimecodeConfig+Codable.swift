// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.TimecodeConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case anchor = "anchor"
        case source = "source"
        case start = "start"
        case timestampOffset = "timestampOffset"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let anchor = self.anchor {
            try encodeContainer.encode(anchor, forKey: .anchor)
        }
        if let source = self.source {
            try encodeContainer.encode(source.rawValue, forKey: .source)
        }
        if let start = self.start {
            try encodeContainer.encode(start, forKey: .start)
        }
        if let timestampOffset = self.timestampOffset {
            try encodeContainer.encode(timestampOffset, forKey: .timestampOffset)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anchorDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .anchor)
        anchor = anchorDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.TimecodeSource.self, forKey: .source)
        source = sourceDecoded
        let startDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .start)
        start = startDecoded
        let timestampOffsetDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .timestampOffset)
        timestampOffset = timestampOffsetDecoded
    }
}
