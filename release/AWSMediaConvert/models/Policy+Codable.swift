// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.Policy: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case httpInputs = "httpInputs"
        case httpsInputs = "httpsInputs"
        case s3Inputs = "s3Inputs"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let httpInputs = self.httpInputs {
            try encodeContainer.encode(httpInputs.rawValue, forKey: .httpInputs)
        }
        if let httpsInputs = self.httpsInputs {
            try encodeContainer.encode(httpsInputs.rawValue, forKey: .httpsInputs)
        }
        if let s3Inputs = self.s3Inputs {
            try encodeContainer.encode(s3Inputs.rawValue, forKey: .s3Inputs)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let httpInputsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.InputPolicy.self, forKey: .httpInputs)
        httpInputs = httpInputsDecoded
        let httpsInputsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.InputPolicy.self, forKey: .httpsInputs)
        httpsInputs = httpsInputsDecoded
        let s3InputsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.InputPolicy.self, forKey: .s3Inputs)
        s3Inputs = s3InputsDecoded
    }
}
