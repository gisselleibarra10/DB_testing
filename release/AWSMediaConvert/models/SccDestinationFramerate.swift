// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Set Framerate (SccDestinationFramerate) to make sure that the captions and the video are synchronized in the output. Specify a frame rate that matches the frame rate of the associated video. If the video frame rate is 29.97, choose 29.97 dropframe (FRAMERATE_29_97_DROPFRAME) only if the video has video_insertion=true and drop_frame_timecode=true; otherwise, choose 29.97 non-dropframe (FRAMERATE_29_97_NON_DROPFRAME).
    public enum SccDestinationFramerate: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case framerate2397
        case framerate24
        case framerate25
        case framerate2997Dropframe
        case framerate2997NonDropframe
        case sdkUnknown(Swift.String)

        public static var allCases: [SccDestinationFramerate] {
            return [
                .framerate2397,
                .framerate24,
                .framerate25,
                .framerate2997Dropframe,
                .framerate2997NonDropframe,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .framerate2397: return "FRAMERATE_23_97"
            case .framerate24: return "FRAMERATE_24"
            case .framerate25: return "FRAMERATE_25"
            case .framerate2997Dropframe: return "FRAMERATE_29_97_DROPFRAME"
            case .framerate2997NonDropframe: return "FRAMERATE_29_97_NON_DROPFRAME"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SccDestinationFramerate(rawValue: rawValue) ?? SccDestinationFramerate.sdkUnknown(rawValue)
        }
    }
}
