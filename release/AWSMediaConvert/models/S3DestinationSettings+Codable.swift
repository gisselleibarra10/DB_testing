// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.S3DestinationSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessControl = "accessControl"
        case encryption = "encryption"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessControl = self.accessControl {
            try encodeContainer.encode(accessControl, forKey: .accessControl)
        }
        if let encryption = self.encryption {
            try encodeContainer.encode(encryption, forKey: .encryption)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessControlDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.S3DestinationAccessControl.self, forKey: .accessControl)
        accessControl = accessControlDecoded
        let encryptionDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.S3EncryptionSettings.self, forKey: .encryption)
        encryption = encryptionDecoded
    }
}
