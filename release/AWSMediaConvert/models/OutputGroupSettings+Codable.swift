// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.OutputGroupSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cmafGroupSettings = "cmafGroupSettings"
        case dashIsoGroupSettings = "dashIsoGroupSettings"
        case fileGroupSettings = "fileGroupSettings"
        case hlsGroupSettings = "hlsGroupSettings"
        case msSmoothGroupSettings = "msSmoothGroupSettings"
        case type = "type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cmafGroupSettings = self.cmafGroupSettings {
            try encodeContainer.encode(cmafGroupSettings, forKey: .cmafGroupSettings)
        }
        if let dashIsoGroupSettings = self.dashIsoGroupSettings {
            try encodeContainer.encode(dashIsoGroupSettings, forKey: .dashIsoGroupSettings)
        }
        if let fileGroupSettings = self.fileGroupSettings {
            try encodeContainer.encode(fileGroupSettings, forKey: .fileGroupSettings)
        }
        if let hlsGroupSettings = self.hlsGroupSettings {
            try encodeContainer.encode(hlsGroupSettings, forKey: .hlsGroupSettings)
        }
        if let msSmoothGroupSettings = self.msSmoothGroupSettings {
            try encodeContainer.encode(msSmoothGroupSettings, forKey: .msSmoothGroupSettings)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cmafGroupSettingsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.CmafGroupSettings.self, forKey: .cmafGroupSettings)
        cmafGroupSettings = cmafGroupSettingsDecoded
        let dashIsoGroupSettingsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.DashIsoGroupSettings.self, forKey: .dashIsoGroupSettings)
        dashIsoGroupSettings = dashIsoGroupSettingsDecoded
        let fileGroupSettingsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.FileGroupSettings.self, forKey: .fileGroupSettings)
        fileGroupSettings = fileGroupSettingsDecoded
        let hlsGroupSettingsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.HlsGroupSettings.self, forKey: .hlsGroupSettings)
        hlsGroupSettings = hlsGroupSettingsDecoded
        let msSmoothGroupSettingsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.MsSmoothGroupSettings.self, forKey: .msSmoothGroupSettings)
        msSmoothGroupSettings = msSmoothGroupSettingsDecoded
        let typeDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.OutputGroupType.self, forKey: .type)
        type = typeDecoded
    }
}
