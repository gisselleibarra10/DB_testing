// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Choose the type of Nielsen watermarks that you want in your outputs. When you choose NAES 2 and NW (NAES2_AND_NW), you must provide a value for the setting SID (sourceId). When you choose CBET (CBET), you must provide a value for the setting CSID (cbetSourceId). When you choose NAES 2, NW, and CBET (NAES2_AND_NW_AND_CBET), you must provide values for both of these settings.
    public enum NielsenActiveWatermarkProcessType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case cbet
        case naes2AndNw
        case naes2AndNwAndCbet
        case sdkUnknown(Swift.String)

        public static var allCases: [NielsenActiveWatermarkProcessType] {
            return [
                .cbet,
                .naes2AndNw,
                .naes2AndNwAndCbet,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .cbet: return "CBET"
            case .naes2AndNw: return "NAES2_AND_NW"
            case .naes2AndNwAndCbet: return "NAES2_AND_NW_AND_CBET"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = NielsenActiveWatermarkProcessType(rawValue: rawValue) ?? NielsenActiveWatermarkProcessType.sdkUnknown(rawValue)
        }
    }
}
