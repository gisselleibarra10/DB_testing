// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobTemplatesOutputResponseBody: Swift.Equatable {
    let jobTemplates: [MediaConvertClientTypes.JobTemplate]?
    let nextToken: Swift.String?
}

extension ListJobTemplatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jobTemplates = "jobTemplates"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobTemplatesContainer = try containerValues.decodeIfPresent([MediaConvertClientTypes.JobTemplate?].self, forKey: .jobTemplates)
        var jobTemplatesDecoded0:[MediaConvertClientTypes.JobTemplate]? = nil
        if let jobTemplatesContainer = jobTemplatesContainer {
            jobTemplatesDecoded0 = [MediaConvertClientTypes.JobTemplate]()
            for structure0 in jobTemplatesContainer {
                if let structure0 = structure0 {
                    jobTemplatesDecoded0?.append(structure0)
                }
            }
        }
        jobTemplates = jobTemplatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
