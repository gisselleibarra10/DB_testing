// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Choose how the service does stereo downmixing. Default value: Not indicated (ATMOS_STORAGE_DDP_DMIXMOD_NOT_INDICATED) Related setting: To have MediaConvert use this value, keep the default value, Custom (SPECIFIED) for the setting Downmix control (DownmixControl). Otherwise, MediaConvert ignores Stereo downmix (StereoDownmix).
    public enum Eac3AtmosStereoDownmix: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case dpl2
        case notIndicated
        case stereo
        case surround
        case sdkUnknown(Swift.String)

        public static var allCases: [Eac3AtmosStereoDownmix] {
            return [
                .dpl2,
                .notIndicated,
                .stereo,
                .surround,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .dpl2: return "DPL2"
            case .notIndicated: return "NOT_INDICATED"
            case .stereo: return "STEREO"
            case .surround: return "SURROUND"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = Eac3AtmosStereoDownmix(rawValue: rawValue) ?? Eac3AtmosStereoDownmix.sdkUnknown(rawValue)
        }
    }
}
