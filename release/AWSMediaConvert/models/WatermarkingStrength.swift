// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// Optional. Ignore this setting unless Nagra support directs you to specify a value. When you don't specify a value here, the Nagra NexGuard library uses its default value.
    public enum WatermarkingStrength: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case `default`
        case lighter
        case lightest
        case stronger
        case strongest
        case sdkUnknown(Swift.String)

        public static var allCases: [WatermarkingStrength] {
            return [
                .default,
                .lighter,
                .lightest,
                .stronger,
                .strongest,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .default: return "DEFAULT"
            case .lighter: return "LIGHTER"
            case .lightest: return "LIGHTEST"
            case .stronger: return "STRONGER"
            case .strongest: return "STRONGEST"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = WatermarkingStrength(rawValue: rawValue) ?? WatermarkingStrength.sdkUnknown(rawValue)
        }
    }
}
