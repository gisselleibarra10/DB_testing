// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension MediaConvertClientTypes {
    /// This setting can improve the compatibility of your output with video players on obsolete devices. It applies only to DASH H.264 outputs with DRM encryption. Choose Unencrypted SEI (UNENCRYPTED_SEI) only to correct problems with playback on older devices. Otherwise, keep the default setting CENC v1 (CENC_V1). If you choose Unencrypted SEI, for that output, the service will exclude the access unit delimiter and will leave the SEI NAL units unencrypted.
    public enum DashIsoPlaybackDeviceCompatibility: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case cencV1
        case unencryptedSei
        case sdkUnknown(Swift.String)

        public static var allCases: [DashIsoPlaybackDeviceCompatibility] {
            return [
                .cencV1,
                .unencryptedSei,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .cencV1: return "CENC_V1"
            case .unencryptedSei: return "UNENCRYPTED_SEI"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = DashIsoPlaybackDeviceCompatibility(rawValue: rawValue) ?? DashIsoPlaybackDeviceCompatibility.sdkUnknown(rawValue)
        }
    }
}
