// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.OutputChannelMapping: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inputChannels = "inputChannels"
        case inputChannelsFineTune = "inputChannelsFineTune"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inputChannels = inputChannels {
            var inputChannelsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .inputChannels)
            for __listof__integerminnegative60max60 in inputChannels {
                try inputChannelsContainer.encode(__listof__integerminnegative60max60)
            }
        }
        if let inputChannelsFineTune = inputChannelsFineTune {
            var inputChannelsFineTuneContainer = encodeContainer.nestedUnkeyedContainer(forKey: .inputChannelsFineTune)
            for __listof__doubleminnegative60max60 in inputChannelsFineTune {
                try inputChannelsFineTuneContainer.encode(__listof__doubleminnegative60max60)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputChannelsContainer = try containerValues.decodeIfPresent([Swift.Int?].self, forKey: .inputChannels)
        var inputChannelsDecoded0:[Swift.Int]? = nil
        if let inputChannelsContainer = inputChannelsContainer {
            inputChannelsDecoded0 = [Swift.Int]()
            for integer0 in inputChannelsContainer {
                if let integer0 = integer0 {
                    inputChannelsDecoded0?.append(integer0)
                }
            }
        }
        inputChannels = inputChannelsDecoded0
        let inputChannelsFineTuneContainer = try containerValues.decodeIfPresent([Swift.Double?].self, forKey: .inputChannelsFineTune)
        var inputChannelsFineTuneDecoded0:[Swift.Double]? = nil
        if let inputChannelsFineTuneContainer = inputChannelsFineTuneContainer {
            inputChannelsFineTuneDecoded0 = [Swift.Double]()
            for double0 in inputChannelsFineTuneContainer {
                if let double0 = double0 {
                    inputChannelsFineTuneDecoded0?.append(double0)
                }
            }
        }
        inputChannelsFineTune = inputChannelsFineTuneDecoded0
    }
}
