// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes {
    /// A preset is a collection of preconfigured media conversion settings that you want MediaConvert to apply to the output during the conversion process.
    public struct Preset: Swift.Equatable {
        /// An identifier for this resource that is unique within all of AWS.
        public var arn: Swift.String?
        /// An optional category you create to organize your presets.
        public var category: Swift.String?
        /// The timestamp in epoch seconds for preset creation.
        public var createdAt: ClientRuntime.Date?
        /// An optional description you create for each preset.
        public var description: Swift.String?
        /// The timestamp in epoch seconds when the preset was last updated.
        public var lastUpdated: ClientRuntime.Date?
        /// A name you create for each preset. Each name must be unique within your account.
        /// This member is required.
        public var name: Swift.String?
        /// Settings for preset
        /// This member is required.
        public var settings: MediaConvertClientTypes.PresetSettings?
        /// A preset can be of two types: system or custom. System or built-in preset can't be modified or deleted by the user.
        public var type: MediaConvertClientTypes.ModelType?

        public init (
            arn: Swift.String? = nil,
            category: Swift.String? = nil,
            createdAt: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            lastUpdated: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            settings: MediaConvertClientTypes.PresetSettings? = nil,
            type: MediaConvertClientTypes.ModelType? = nil
        )
        {
            self.arn = arn
            self.category = category
            self.createdAt = createdAt
            self.description = description
            self.lastUpdated = lastUpdated
            self.name = name
            self.settings = settings
            self.type = type
        }
    }

}
