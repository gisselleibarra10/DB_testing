// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.FileSourceSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case convert608To708 = "convert608To708"
        case framerate = "framerate"
        case sourceFile = "sourceFile"
        case timeDelta = "timeDelta"
        case timeDeltaUnits = "timeDeltaUnits"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let convert608To708 = self.convert608To708 {
            try encodeContainer.encode(convert608To708.rawValue, forKey: .convert608To708)
        }
        if let framerate = self.framerate {
            try encodeContainer.encode(framerate, forKey: .framerate)
        }
        if let sourceFile = self.sourceFile {
            try encodeContainer.encode(sourceFile, forKey: .sourceFile)
        }
        if let timeDelta = self.timeDelta {
            try encodeContainer.encode(timeDelta, forKey: .timeDelta)
        }
        if let timeDeltaUnits = self.timeDeltaUnits {
            try encodeContainer.encode(timeDeltaUnits.rawValue, forKey: .timeDeltaUnits)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let convert608To708Decoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.FileSourceConvert608To708.self, forKey: .convert608To708)
        convert608To708 = convert608To708Decoded
        let framerateDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.CaptionSourceFramerate.self, forKey: .framerate)
        framerate = framerateDecoded
        let sourceFileDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceFile)
        sourceFile = sourceFileDecoded
        let timeDeltaDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .timeDelta)
        timeDelta = timeDeltaDecoded
        let timeDeltaUnitsDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.FileSourceTimeDeltaUnits.self, forKey: .timeDeltaUnits)
        timeDeltaUnits = timeDeltaUnitsDecoded
    }
}
