// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MediaConvertClientTypes.HlsImageBasedTrickPlaySettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case intervalCadence = "intervalCadence"
        case thumbnailHeight = "thumbnailHeight"
        case thumbnailInterval = "thumbnailInterval"
        case thumbnailWidth = "thumbnailWidth"
        case tileHeight = "tileHeight"
        case tileWidth = "tileWidth"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let intervalCadence = self.intervalCadence {
            try encodeContainer.encode(intervalCadence.rawValue, forKey: .intervalCadence)
        }
        if let thumbnailHeight = self.thumbnailHeight {
            try encodeContainer.encode(thumbnailHeight, forKey: .thumbnailHeight)
        }
        if let thumbnailInterval = self.thumbnailInterval {
            try encodeContainer.encode(thumbnailInterval, forKey: .thumbnailInterval)
        }
        if let thumbnailWidth = self.thumbnailWidth {
            try encodeContainer.encode(thumbnailWidth, forKey: .thumbnailWidth)
        }
        if let tileHeight = self.tileHeight {
            try encodeContainer.encode(tileHeight, forKey: .tileHeight)
        }
        if let tileWidth = self.tileWidth {
            try encodeContainer.encode(tileWidth, forKey: .tileWidth)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let intervalCadenceDecoded = try containerValues.decodeIfPresent(MediaConvertClientTypes.HlsIntervalCadence.self, forKey: .intervalCadence)
        intervalCadence = intervalCadenceDecoded
        let thumbnailHeightDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .thumbnailHeight)
        thumbnailHeight = thumbnailHeightDecoded
        let thumbnailIntervalDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .thumbnailInterval)
        thumbnailInterval = thumbnailIntervalDecoded
        let thumbnailWidthDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .thumbnailWidth)
        thumbnailWidth = thumbnailWidthDecoded
        let tileHeightDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .tileHeight)
        tileHeight = tileHeightDecoded
        let tileWidthDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .tileWidth)
        tileWidth = tileWidthDecoded
    }
}
