// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateQueueInput: Swift.Equatable {
    /// Optional. A description of the queue that you are creating.
    public var description: Swift.String?
    /// The name of the queue that you are creating.
    /// This member is required.
    public var name: Swift.String?
    /// Specifies whether the pricing plan for the queue is on-demand or reserved. For on-demand, you pay per minute, billed in increments of .01 minute. For reserved, you pay for the transcoding capacity of the entire queue, regardless of how much or how little you use it. Reserved pricing requires a 12-month commitment. When you use the API to create a queue, the default is on-demand.
    public var pricingPlan: MediaConvertClientTypes.PricingPlan?
    /// Details about the pricing plan for your reserved queue. Required for reserved queues and not applicable to on-demand queues.
    public var reservationPlanSettings: MediaConvertClientTypes.ReservationPlanSettings?
    /// Initial state of the queue. If you create a paused queue, then jobs in that queue won't begin.
    public var status: MediaConvertClientTypes.QueueStatus?
    /// The tags that you want to add to the resource. You can tag resources with a key-value pair or with only a key.
    public var tags: [Swift.String:Swift.String]?

    public init (
        description: Swift.String? = nil,
        name: Swift.String? = nil,
        pricingPlan: MediaConvertClientTypes.PricingPlan? = nil,
        reservationPlanSettings: MediaConvertClientTypes.ReservationPlanSettings? = nil,
        status: MediaConvertClientTypes.QueueStatus? = nil,
        tags: [Swift.String:Swift.String]? = nil
    )
    {
        self.description = description
        self.name = name
        self.pricingPlan = pricingPlan
        self.reservationPlanSettings = reservationPlanSettings
        self.status = status
        self.tags = tags
    }
}
