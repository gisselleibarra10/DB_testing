// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDeviceMethodsOutputResponseBody: Swift.Equatable {
    let deviceMethods: [Iot1ClickDevicesClientTypes.DeviceMethod]?
}

extension GetDeviceMethodsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceMethods = "deviceMethods"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceMethodsContainer = try containerValues.decodeIfPresent([Iot1ClickDevicesClientTypes.DeviceMethod?].self, forKey: .deviceMethods)
        var deviceMethodsDecoded0:[Iot1ClickDevicesClientTypes.DeviceMethod]? = nil
        if let deviceMethodsContainer = deviceMethodsContainer {
            deviceMethodsDecoded0 = [Iot1ClickDevicesClientTypes.DeviceMethod]()
            for structure0 in deviceMethodsContainer {
                if let structure0 = structure0 {
                    deviceMethodsDecoded0?.append(structure0)
                }
            }
        }
        deviceMethods = deviceMethodsDecoded0
    }
}
