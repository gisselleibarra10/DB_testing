// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchAcknowledgeAlarmInputBody: Swift.Equatable {
    let acknowledgeActionRequests: [IotEventsDataClientTypes.AcknowledgeAlarmActionRequest]?
}

extension BatchAcknowledgeAlarmInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acknowledgeActionRequests
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acknowledgeActionRequestsContainer = try containerValues.decodeIfPresent([IotEventsDataClientTypes.AcknowledgeAlarmActionRequest?].self, forKey: .acknowledgeActionRequests)
        var acknowledgeActionRequestsDecoded0:[IotEventsDataClientTypes.AcknowledgeAlarmActionRequest]? = nil
        if let acknowledgeActionRequestsContainer = acknowledgeActionRequestsContainer {
            acknowledgeActionRequestsDecoded0 = [IotEventsDataClientTypes.AcknowledgeAlarmActionRequest]()
            for structure0 in acknowledgeActionRequestsContainer {
                if let structure0 = structure0 {
                    acknowledgeActionRequestsDecoded0?.append(structure0)
                }
            }
        }
        acknowledgeActionRequests = acknowledgeActionRequestsDecoded0
    }
}
