// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotEventsDataClientTypes {
    public enum CustomerActionName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case acknowledge
        case disable
        case enable
        case reset
        case snooze
        case sdkUnknown(Swift.String)

        public static var allCases: [CustomerActionName] {
            return [
                .acknowledge,
                .disable,
                .enable,
                .reset,
                .snooze,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .acknowledge: return "ACKNOWLEDGE"
            case .disable: return "DISABLE"
            case .enable: return "ENABLE"
            case .reset: return "RESET"
            case .snooze: return "SNOOZE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = CustomerActionName(rawValue: rawValue) ?? CustomerActionName.sdkUnknown(rawValue)
        }
    }
}
