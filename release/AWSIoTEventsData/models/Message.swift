// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotEventsDataClientTypes {
    /// Information about a message.
    public struct Message: Swift.Equatable {
        /// The name of the input into which the message payload is transformed.
        /// This member is required.
        public var inputName: Swift.String?
        /// The ID to assign to the message. Within each batch sent, each "messageId" must be unique.
        /// This member is required.
        public var messageId: Swift.String?
        /// The payload of the message. This can be a JSON string or a Base-64-encoded string representing binary data (in which case you must decode it).
        /// This member is required.
        public var payload: ClientRuntime.Data?
        /// The timestamp associated with the message.
        public var timestamp: IotEventsDataClientTypes.TimestampValue?

        public init (
            inputName: Swift.String? = nil,
            messageId: Swift.String? = nil,
            payload: ClientRuntime.Data? = nil,
            timestamp: IotEventsDataClientTypes.TimestampValue? = nil
        )
        {
            self.inputName = inputName
            self.messageId = messageId
            self.payload = payload
            self.timestamp = timestamp
        }
    }

}
