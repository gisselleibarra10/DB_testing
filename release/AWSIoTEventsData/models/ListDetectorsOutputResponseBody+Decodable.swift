// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDetectorsOutputResponseBody: Swift.Equatable {
    let detectorSummaries: [IotEventsDataClientTypes.DetectorSummary]?
    let nextToken: Swift.String?
}

extension ListDetectorsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case detectorSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detectorSummariesContainer = try containerValues.decodeIfPresent([IotEventsDataClientTypes.DetectorSummary?].self, forKey: .detectorSummaries)
        var detectorSummariesDecoded0:[IotEventsDataClientTypes.DetectorSummary]? = nil
        if let detectorSummariesContainer = detectorSummariesContainer {
            detectorSummariesDecoded0 = [IotEventsDataClientTypes.DetectorSummary]()
            for structure0 in detectorSummariesContainer {
                if let structure0 = structure0 {
                    detectorSummariesDecoded0?.append(structure0)
                }
            }
        }
        detectorSummaries = detectorSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
