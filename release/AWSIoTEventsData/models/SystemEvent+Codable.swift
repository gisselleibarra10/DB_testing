// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotEventsDataClientTypes.SystemEvent: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case eventType
        case stateChangeConfiguration
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let eventType = self.eventType {
            try encodeContainer.encode(eventType.rawValue, forKey: .eventType)
        }
        if let stateChangeConfiguration = self.stateChangeConfiguration {
            try encodeContainer.encode(stateChangeConfiguration, forKey: .stateChangeConfiguration)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventTypeDecoded = try containerValues.decodeIfPresent(IotEventsDataClientTypes.EventType.self, forKey: .eventType)
        eventType = eventTypeDecoded
        let stateChangeConfigurationDecoded = try containerValues.decodeIfPresent(IotEventsDataClientTypes.StateChangeConfiguration.self, forKey: .stateChangeConfiguration)
        stateChangeConfiguration = stateChangeConfigurationDecoded
    }
}
