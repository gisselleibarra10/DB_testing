// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotEventsDataClientTypes {
    public enum AlarmStateName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case acknowledged
        case active
        case disabled
        case latched
        case normal
        case snoozeDisabled
        case sdkUnknown(Swift.String)

        public static var allCases: [AlarmStateName] {
            return [
                .acknowledged,
                .active,
                .disabled,
                .latched,
                .normal,
                .snoozeDisabled,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .acknowledged: return "ACKNOWLEDGED"
            case .active: return "ACTIVE"
            case .disabled: return "DISABLED"
            case .latched: return "LATCHED"
            case .normal: return "NORMAL"
            case .snoozeDisabled: return "SNOOZE_DISABLED"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = AlarmStateName(rawValue: rawValue) ?? AlarmStateName.sdkUnknown(rawValue)
        }
    }
}
