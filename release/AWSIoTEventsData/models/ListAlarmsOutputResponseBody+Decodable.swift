// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAlarmsOutputResponseBody: Swift.Equatable {
    let alarmSummaries: [IotEventsDataClientTypes.AlarmSummary]?
    let nextToken: Swift.String?
}

extension ListAlarmsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarmSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmSummariesContainer = try containerValues.decodeIfPresent([IotEventsDataClientTypes.AlarmSummary?].self, forKey: .alarmSummaries)
        var alarmSummariesDecoded0:[IotEventsDataClientTypes.AlarmSummary]? = nil
        if let alarmSummariesContainer = alarmSummariesContainer {
            alarmSummariesDecoded0 = [IotEventsDataClientTypes.AlarmSummary]()
            for structure0 in alarmSummariesContainer {
                if let structure0 = structure0 {
                    alarmSummariesDecoded0?.append(structure0)
                }
            }
        }
        alarmSummaries = alarmSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
