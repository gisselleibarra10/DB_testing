// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SnowballClientTypes {
    /// Contains metadata about a specific cluster.
    public struct ClusterMetadata: Swift.Equatable {
        /// The automatically generated ID for a specific address.
        public var addressId: Swift.String?
        /// The automatically generated ID for a cluster.
        public var clusterId: Swift.String?
        /// The current status of the cluster.
        public var clusterState: SnowballClientTypes.ClusterState?
        /// The creation date for this cluster.
        public var creationDate: ClientRuntime.Date?
        /// The optional description of the cluster.
        public var description: Swift.String?
        /// The ID of the address that you want a cluster shipped to, after it will be shipped to its primary address. This field is not supported in most regions.
        public var forwardingAddressId: Swift.String?
        /// The type of job for this cluster. Currently, the only job type supported for clusters is LOCAL_USE.
        public var jobType: SnowballClientTypes.JobType?
        /// The KmsKeyARN Amazon Resource Name (ARN) associated with this cluster. This ARN was created using the [CreateKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html) API action in Key Management Service (KMS.
        public var kmsKeyARN: Swift.String?
        /// The Amazon Simple Notification Service (Amazon SNS) notification settings for this cluster.
        public var notification: SnowballClientTypes.Notification?
        /// Represents metadata and configuration settings for services on an Amazon Web Services Snow Family device.
        public var onDeviceServiceConfiguration: SnowballClientTypes.OnDeviceServiceConfiguration?
        /// The arrays of [JobResource] objects that can include updated [S3Resource] objects or [LambdaResource] objects.
        public var resources: SnowballClientTypes.JobResource?
        /// The role ARN associated with this cluster. This ARN was created using the [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) API action in Identity and Access Management (IAM).
        public var roleARN: Swift.String?
        /// The shipping speed for each node in this cluster. This speed doesn't dictate how soon you'll get each device, rather it represents how quickly each device moves to its destination while in transit. Regional shipping speeds are as follows:
        ///
        /// * In Australia, you have access to express shipping. Typically, devices shipped express are delivered in about a day.
        ///
        /// * In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.
        ///
        /// * In India, Snow devices are delivered in one to seven days.
        ///
        /// * In the US, you have access to one-day shipping and two-day shipping.
        public var shippingOption: SnowballClientTypes.ShippingOption?
        /// The type of Snowcone device to use for this cluster. For cluster jobs, Amazon Web Services Snow Family currently supports only the EDGE device type.
        public var snowballType: SnowballClientTypes.SnowballType?
        /// The tax documents required in your Amazon Web Services Region.
        public var taxDocuments: SnowballClientTypes.TaxDocuments?

        public init (
            addressId: Swift.String? = nil,
            clusterId: Swift.String? = nil,
            clusterState: SnowballClientTypes.ClusterState? = nil,
            creationDate: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            forwardingAddressId: Swift.String? = nil,
            jobType: SnowballClientTypes.JobType? = nil,
            kmsKeyARN: Swift.String? = nil,
            notification: SnowballClientTypes.Notification? = nil,
            onDeviceServiceConfiguration: SnowballClientTypes.OnDeviceServiceConfiguration? = nil,
            resources: SnowballClientTypes.JobResource? = nil,
            roleARN: Swift.String? = nil,
            shippingOption: SnowballClientTypes.ShippingOption? = nil,
            snowballType: SnowballClientTypes.SnowballType? = nil,
            taxDocuments: SnowballClientTypes.TaxDocuments? = nil
        )
        {
            self.addressId = addressId
            self.clusterId = clusterId
            self.clusterState = clusterState
            self.creationDate = creationDate
            self.description = description
            self.forwardingAddressId = forwardingAddressId
            self.jobType = jobType
            self.kmsKeyARN = kmsKeyARN
            self.notification = notification
            self.onDeviceServiceConfiguration = onDeviceServiceConfiguration
            self.resources = resources
            self.roleARN = roleARN
            self.shippingOption = shippingOption
            self.snowballType = snowballType
            self.taxDocuments = taxDocuments
        }
    }

}
