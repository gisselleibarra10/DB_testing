// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SnowballClientTypes {
    public enum SnowballCapacity: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case noPreference
        case t100
        case t14
        case t42
        case t50
        case t8
        case t80
        case t98
        case sdkUnknown(Swift.String)

        public static var allCases: [SnowballCapacity] {
            return [
                .noPreference,
                .t100,
                .t14,
                .t42,
                .t50,
                .t8,
                .t80,
                .t98,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .noPreference: return "NoPreference"
            case .t100: return "T100"
            case .t14: return "T14"
            case .t42: return "T42"
            case .t50: return "T50"
            case .t8: return "T8"
            case .t80: return "T80"
            case .t98: return "T98"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SnowballCapacity(rawValue: rawValue) ?? SnowballCapacity.sdkUnknown(rawValue)
        }
    }
}
