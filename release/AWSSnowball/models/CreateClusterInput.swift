// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateClusterInput: Swift.Equatable {
    /// The ID for the address that you want the cluster shipped to.
    /// This member is required.
    public var addressId: Swift.String?
    /// An optional description of this specific cluster, for example Environmental Data Cluster-01.
    public var description: Swift.String?
    /// The forwarding address ID for a cluster. This field is not supported in most regions.
    public var forwardingAddressId: Swift.String?
    /// The type of job for this cluster. Currently, the only job type supported for clusters is LOCAL_USE. For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the Snowcone User Guide or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the Snowcone User Guide.
    /// This member is required.
    public var jobType: SnowballClientTypes.JobType?
    /// The KmsKeyARN value that you want to associate with this cluster. KmsKeyARN values are created by using the [CreateKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html) API action in Key Management Service (KMS).
    public var kmsKeyARN: Swift.String?
    /// The Amazon Simple Notification Service (Amazon SNS) notification settings for this cluster.
    public var notification: SnowballClientTypes.Notification?
    /// Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family device clusters support Amazon S3 and NFS (Network File System).
    public var onDeviceServiceConfiguration: SnowballClientTypes.OnDeviceServiceConfiguration?
    /// Allows you to securely operate and manage Snow devices in a cluster remotely from outside of your internal network. When set to INSTALLED_AUTOSTART, remote management will automatically be available when the device arrives at your location. Otherwise, you need to use the Snowball Client to manage the device.
    public var remoteManagement: SnowballClientTypes.RemoteManagement?
    /// The resources associated with the cluster job. These resources include Amazon S3 buckets and optional Lambda functions written in the Python language.
    /// This member is required.
    public var resources: SnowballClientTypes.JobResource?
    /// The RoleARN that you want to associate with this cluster. RoleArn values are created by using the [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) API action in Identity and Access Management (IAM).
    /// This member is required.
    public var roleARN: Swift.String?
    /// The shipping speed for each node in this cluster. This speed doesn't dictate how soon you'll get each Snowball Edge device, rather it represents how quickly each device moves to its destination while in transit. Regional shipping speeds are as follows:
    ///
    /// * In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.
    ///
    /// * In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.
    ///
    /// * In India, Snow devices are delivered in one to seven days.
    ///
    /// * In the United States of America (US), you have access to one-day shipping and two-day shipping.
    ///
    ///
    ///
    ///
    /// * In Australia, you have access to express shipping. Typically, devices shipped express are delivered in about a day.
    ///
    /// * In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.
    ///
    /// * In India, Snow devices are delivered in one to seven days.
    ///
    /// * In the US, you have access to one-day shipping and two-day shipping.
    /// This member is required.
    public var shippingOption: SnowballClientTypes.ShippingOption?
    /// The type of Snow Family Devices to use for this cluster. For cluster jobs, Amazon Web Services Snow Family currently supports only the EDGE device type. For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the Snowcone User Guide or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the Snowcone User Guide.
    /// This member is required.
    public var snowballType: SnowballClientTypes.SnowballType?
    /// The tax documents required in your Amazon Web Services Region.
    public var taxDocuments: SnowballClientTypes.TaxDocuments?

    public init (
        addressId: Swift.String? = nil,
        description: Swift.String? = nil,
        forwardingAddressId: Swift.String? = nil,
        jobType: SnowballClientTypes.JobType? = nil,
        kmsKeyARN: Swift.String? = nil,
        notification: SnowballClientTypes.Notification? = nil,
        onDeviceServiceConfiguration: SnowballClientTypes.OnDeviceServiceConfiguration? = nil,
        remoteManagement: SnowballClientTypes.RemoteManagement? = nil,
        resources: SnowballClientTypes.JobResource? = nil,
        roleARN: Swift.String? = nil,
        shippingOption: SnowballClientTypes.ShippingOption? = nil,
        snowballType: SnowballClientTypes.SnowballType? = nil,
        taxDocuments: SnowballClientTypes.TaxDocuments? = nil
    )
    {
        self.addressId = addressId
        self.description = description
        self.forwardingAddressId = forwardingAddressId
        self.jobType = jobType
        self.kmsKeyARN = kmsKeyARN
        self.notification = notification
        self.onDeviceServiceConfiguration = onDeviceServiceConfiguration
        self.remoteManagement = remoteManagement
        self.resources = resources
        self.roleARN = roleARN
        self.shippingOption = shippingOption
        self.snowballType = snowballType
        self.taxDocuments = taxDocuments
    }
}
