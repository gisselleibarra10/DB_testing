// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SnowballClientTypes.DataTransfer: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bytesTransferred = "BytesTransferred"
        case objectsTransferred = "ObjectsTransferred"
        case totalBytes = "TotalBytes"
        case totalObjects = "TotalObjects"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if bytesTransferred != 0 {
            try encodeContainer.encode(bytesTransferred, forKey: .bytesTransferred)
        }
        if objectsTransferred != 0 {
            try encodeContainer.encode(objectsTransferred, forKey: .objectsTransferred)
        }
        if totalBytes != 0 {
            try encodeContainer.encode(totalBytes, forKey: .totalBytes)
        }
        if totalObjects != 0 {
            try encodeContainer.encode(totalObjects, forKey: .totalObjects)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bytesTransferredDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .bytesTransferred) ?? 0
        bytesTransferred = bytesTransferredDecoded
        let objectsTransferredDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .objectsTransferred) ?? 0
        objectsTransferred = objectsTransferredDecoded
        let totalBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalBytes) ?? 0
        totalBytes = totalBytesDecoded
        let totalObjectsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalObjects) ?? 0
        totalObjects = totalObjectsDecoded
    }
}
