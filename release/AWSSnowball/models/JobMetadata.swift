// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SnowballClientTypes {
    /// Contains information about a specific job including shipping information, job status, and other important metadata. This information is returned as a part of the response syntax of the DescribeJob action.
    public struct JobMetadata: Swift.Equatable {
        /// The ID for the address that you want the Snow device shipped to.
        public var addressId: Swift.String?
        /// The 39-character ID for the cluster, for example CID123e4567-e89b-12d3-a456-426655440000.
        public var clusterId: Swift.String?
        /// The creation date for this job.
        public var creationDate: ClientRuntime.Date?
        /// A value that defines the real-time status of a Snow device's data transfer while the device is at Amazon Web Services. This data is only available while a job has a JobState value of InProgress, for both import and export jobs.
        public var dataTransferProgress: SnowballClientTypes.DataTransfer?
        /// The description of the job, provided at job creation.
        public var description: Swift.String?
        /// The container for SnowconeDeviceConfiguration.
        public var deviceConfiguration: SnowballClientTypes.DeviceConfiguration?
        /// The ID of the address that you want a job shipped to, after it will be shipped to its primary address. This field is not supported in most regions.
        public var forwardingAddressId: Swift.String?
        /// The automatically generated ID for a job, for example JID123e4567-e89b-12d3-a456-426655440000.
        public var jobId: Swift.String?
        /// Links to Amazon S3 presigned URLs for the job report and logs. For import jobs, the PDF job report becomes available at the end of the import process. For export jobs, your job report typically becomes available while the Snow device for your job part is being delivered to you.
        public var jobLogInfo: SnowballClientTypes.JobLogs?
        /// The current status of the jobs.
        public var jobState: SnowballClientTypes.JobState?
        /// The type of job.
        public var jobType: SnowballClientTypes.JobType?
        /// The Amazon Resource Name (ARN) for the Key Management Service (KMS) key associated with this job. This ARN was created using the [CreateKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html) API action in KMS.
        public var kmsKeyARN: Swift.String?
        /// The ID of the long-term pricing type for the device.
        public var longTermPricingId: Swift.String?
        /// The Amazon Simple Notification Service (Amazon SNS) notification settings associated with a specific job. The Notification object is returned as a part of the response syntax of the DescribeJob action in the JobMetadata data type.
        public var notification: SnowballClientTypes.Notification?
        /// Represents metadata and configuration settings for services on an Amazon Web Services Snow Family device.
        public var onDeviceServiceConfiguration: SnowballClientTypes.OnDeviceServiceConfiguration?
        /// Allows you to securely operate and manage Snowcone devices remotely from outside of your internal network. When set to INSTALLED_AUTOSTART, remote management will automatically be available when the device arrives at your location. Otherwise, you need to use the Snowball Client to manage the device.
        public var remoteManagement: SnowballClientTypes.RemoteManagement?
        /// An array of S3Resource objects. Each S3Resource object represents an Amazon S3 bucket that your transferred data will be exported from or imported into.
        public var resources: SnowballClientTypes.JobResource?
        /// The role ARN associated with this job. This ARN was created using the [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) API action in Identity and Access Management.
        public var roleARN: Swift.String?
        /// A job's shipping information, including inbound and outbound tracking numbers and shipping speed options.
        public var shippingDetails: SnowballClientTypes.ShippingDetails?
        /// The Snow device capacity preference for this job, specified at job creation. In US regions, you can choose between 50 TB and 80 TB Snowballs. All other regions use 80 TB capacity Snowballs. For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the Snowcone User Guide or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the Snowcone User Guide.
        public var snowballCapacityPreference: SnowballClientTypes.SnowballCapacity?
        /// The type of device used with this job.
        public var snowballType: SnowballClientTypes.SnowballType?
        /// The metadata associated with the tax documents required in your Amazon Web Services Region.
        public var taxDocuments: SnowballClientTypes.TaxDocuments?

        public init (
            addressId: Swift.String? = nil,
            clusterId: Swift.String? = nil,
            creationDate: ClientRuntime.Date? = nil,
            dataTransferProgress: SnowballClientTypes.DataTransfer? = nil,
            description: Swift.String? = nil,
            deviceConfiguration: SnowballClientTypes.DeviceConfiguration? = nil,
            forwardingAddressId: Swift.String? = nil,
            jobId: Swift.String? = nil,
            jobLogInfo: SnowballClientTypes.JobLogs? = nil,
            jobState: SnowballClientTypes.JobState? = nil,
            jobType: SnowballClientTypes.JobType? = nil,
            kmsKeyARN: Swift.String? = nil,
            longTermPricingId: Swift.String? = nil,
            notification: SnowballClientTypes.Notification? = nil,
            onDeviceServiceConfiguration: SnowballClientTypes.OnDeviceServiceConfiguration? = nil,
            remoteManagement: SnowballClientTypes.RemoteManagement? = nil,
            resources: SnowballClientTypes.JobResource? = nil,
            roleARN: Swift.String? = nil,
            shippingDetails: SnowballClientTypes.ShippingDetails? = nil,
            snowballCapacityPreference: SnowballClientTypes.SnowballCapacity? = nil,
            snowballType: SnowballClientTypes.SnowballType? = nil,
            taxDocuments: SnowballClientTypes.TaxDocuments? = nil
        )
        {
            self.addressId = addressId
            self.clusterId = clusterId
            self.creationDate = creationDate
            self.dataTransferProgress = dataTransferProgress
            self.description = description
            self.deviceConfiguration = deviceConfiguration
            self.forwardingAddressId = forwardingAddressId
            self.jobId = jobId
            self.jobLogInfo = jobLogInfo
            self.jobState = jobState
            self.jobType = jobType
            self.kmsKeyARN = kmsKeyARN
            self.longTermPricingId = longTermPricingId
            self.notification = notification
            self.onDeviceServiceConfiguration = onDeviceServiceConfiguration
            self.remoteManagement = remoteManagement
            self.resources = resources
            self.roleARN = roleARN
            self.shippingDetails = shippingDetails
            self.snowballCapacityPreference = snowballCapacityPreference
            self.snowballType = snowballType
            self.taxDocuments = taxDocuments
        }
    }

}
