// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SnowballClientTypes.OnDeviceServiceConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nFSOnDeviceService = "NFSOnDeviceService"
        case tGWOnDeviceService = "TGWOnDeviceService"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let nFSOnDeviceService = self.nFSOnDeviceService {
            try encodeContainer.encode(nFSOnDeviceService, forKey: .nFSOnDeviceService)
        }
        if let tGWOnDeviceService = self.tGWOnDeviceService {
            try encodeContainer.encode(tGWOnDeviceService, forKey: .tGWOnDeviceService)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nFSOnDeviceServiceDecoded = try containerValues.decodeIfPresent(SnowballClientTypes.NFSOnDeviceServiceConfiguration.self, forKey: .nFSOnDeviceService)
        nFSOnDeviceService = nFSOnDeviceServiceDecoded
        let tGWOnDeviceServiceDecoded = try containerValues.decodeIfPresent(SnowballClientTypes.TGWOnDeviceServiceConfiguration.self, forKey: .tGWOnDeviceService)
        tGWOnDeviceService = tGWOnDeviceServiceDecoded
    }
}
