// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SnowballClientTypes.TargetOnDeviceService: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case serviceName = "ServiceName"
        case transferOption = "TransferOption"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let serviceName = self.serviceName {
            try encodeContainer.encode(serviceName.rawValue, forKey: .serviceName)
        }
        if let transferOption = self.transferOption {
            try encodeContainer.encode(transferOption.rawValue, forKey: .transferOption)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serviceNameDecoded = try containerValues.decodeIfPresent(SnowballClientTypes.DeviceServiceName.self, forKey: .serviceName)
        serviceName = serviceNameDecoded
        let transferOptionDecoded = try containerValues.decodeIfPresent(SnowballClientTypes.TransferOption.self, forKey: .transferOption)
        transferOption = transferOptionDecoded
    }
}
