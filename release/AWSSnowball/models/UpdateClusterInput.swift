// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateClusterInput: Swift.Equatable {
    /// The ID of the updated [Address] object.
    public var addressId: Swift.String?
    /// The cluster ID of the cluster that you want to update, for example CID123e4567-e89b-12d3-a456-426655440000.
    /// This member is required.
    public var clusterId: Swift.String?
    /// The updated description of this cluster.
    public var description: Swift.String?
    /// The updated ID for the forwarding address for a cluster. This field is not supported in most regions.
    public var forwardingAddressId: Swift.String?
    /// The new or updated [Notification] object.
    public var notification: SnowballClientTypes.Notification?
    /// Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family device clusters support Amazon S3 and NFS (Network File System).
    public var onDeviceServiceConfiguration: SnowballClientTypes.OnDeviceServiceConfiguration?
    /// The updated arrays of [JobResource] objects that can include updated [S3Resource] objects or [LambdaResource] objects.
    public var resources: SnowballClientTypes.JobResource?
    /// The new role Amazon Resource Name (ARN) that you want to associate with this cluster. To create a role ARN, use the [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) API action in Identity and Access Management (IAM).
    public var roleARN: Swift.String?
    /// The updated shipping option value of this cluster's [ShippingDetails] object.
    public var shippingOption: SnowballClientTypes.ShippingOption?

    public init (
        addressId: Swift.String? = nil,
        clusterId: Swift.String? = nil,
        description: Swift.String? = nil,
        forwardingAddressId: Swift.String? = nil,
        notification: SnowballClientTypes.Notification? = nil,
        onDeviceServiceConfiguration: SnowballClientTypes.OnDeviceServiceConfiguration? = nil,
        resources: SnowballClientTypes.JobResource? = nil,
        roleARN: Swift.String? = nil,
        shippingOption: SnowballClientTypes.ShippingOption? = nil
    )
    {
        self.addressId = addressId
        self.clusterId = clusterId
        self.description = description
        self.forwardingAddressId = forwardingAddressId
        self.notification = notification
        self.onDeviceServiceConfiguration = onDeviceServiceConfiguration
        self.resources = resources
        self.roleARN = roleARN
        self.shippingOption = shippingOption
    }
}
