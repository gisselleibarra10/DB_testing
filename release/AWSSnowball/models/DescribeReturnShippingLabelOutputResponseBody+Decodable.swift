// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReturnShippingLabelOutputResponseBody: Swift.Equatable {
    let status: SnowballClientTypes.ShippingLabelStatus?
    let expirationDate: ClientRuntime.Date?
    let returnShippingLabelURI: Swift.String?
}

extension DescribeReturnShippingLabelOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case expirationDate = "ExpirationDate"
        case returnShippingLabelURI = "ReturnShippingLabelURI"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(SnowballClientTypes.ShippingLabelStatus.self, forKey: .status)
        status = statusDecoded
        let expirationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .expirationDate)
        expirationDate = expirationDateDecoded
        let returnShippingLabelURIDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .returnShippingLabelURI)
        returnShippingLabelURI = returnShippingLabelURIDecoded
    }
}
