// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SnowballClientTypes {
    public enum DeviceServiceName: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case nfsOnDeviceService
        case s3OnDeviceService
        case sdkUnknown(Swift.String)

        public static var allCases: [DeviceServiceName] {
            return [
                .nfsOnDeviceService,
                .s3OnDeviceService,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .nfsOnDeviceService: return "NFS_ON_DEVICE_SERVICE"
            case .s3OnDeviceService: return "S3_ON_DEVICE_SERVICE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = DeviceServiceName(rawValue: rawValue) ?? DeviceServiceName.sdkUnknown(rawValue)
        }
    }
}
