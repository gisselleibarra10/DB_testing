// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SnowballClientTypes.S3Resource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bucketArn = "BucketArn"
        case keyRange = "KeyRange"
        case targetOnDeviceServices = "TargetOnDeviceServices"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bucketArn = self.bucketArn {
            try encodeContainer.encode(bucketArn, forKey: .bucketArn)
        }
        if let keyRange = self.keyRange {
            try encodeContainer.encode(keyRange, forKey: .keyRange)
        }
        if let targetOnDeviceServices = targetOnDeviceServices {
            var targetOnDeviceServicesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .targetOnDeviceServices)
            for targetondeviceservicelist0 in targetOnDeviceServices {
                try targetOnDeviceServicesContainer.encode(targetondeviceservicelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bucketArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bucketArn)
        bucketArn = bucketArnDecoded
        let keyRangeDecoded = try containerValues.decodeIfPresent(SnowballClientTypes.KeyRange.self, forKey: .keyRange)
        keyRange = keyRangeDecoded
        let targetOnDeviceServicesContainer = try containerValues.decodeIfPresent([SnowballClientTypes.TargetOnDeviceService?].self, forKey: .targetOnDeviceServices)
        var targetOnDeviceServicesDecoded0:[SnowballClientTypes.TargetOnDeviceService]? = nil
        if let targetOnDeviceServicesContainer = targetOnDeviceServicesContainer {
            targetOnDeviceServicesDecoded0 = [SnowballClientTypes.TargetOnDeviceService]()
            for structure0 in targetOnDeviceServicesContainer {
                if let structure0 = structure0 {
                    targetOnDeviceServicesDecoded0?.append(structure0)
                }
            }
        }
        targetOnDeviceServices = targetOnDeviceServicesDecoded0
    }
}
