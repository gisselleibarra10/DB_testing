// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLongTermPricingInputBody: Swift.Equatable {
    let longTermPricingType: SnowballClientTypes.LongTermPricingType?
    let isLongTermPricingAutoRenew: Swift.Bool?
    let snowballType: SnowballClientTypes.SnowballType?
}

extension CreateLongTermPricingInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case isLongTermPricingAutoRenew = "IsLongTermPricingAutoRenew"
        case longTermPricingType = "LongTermPricingType"
        case snowballType = "SnowballType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let longTermPricingTypeDecoded = try containerValues.decodeIfPresent(SnowballClientTypes.LongTermPricingType.self, forKey: .longTermPricingType)
        longTermPricingType = longTermPricingTypeDecoded
        let isLongTermPricingAutoRenewDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isLongTermPricingAutoRenew)
        isLongTermPricingAutoRenew = isLongTermPricingAutoRenewDecoded
        let snowballTypeDecoded = try containerValues.decodeIfPresent(SnowballClientTypes.SnowballType.self, forKey: .snowballType)
        snowballType = snowballTypeDecoded
    }
}
