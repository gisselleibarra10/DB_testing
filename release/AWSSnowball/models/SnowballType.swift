// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SnowballClientTypes {
    public enum SnowballType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case edge
        case edgeC
        case edgeCg
        case edgeS
        case snc1Hdd
        case snc1Ssd
        case standard
        case sdkUnknown(Swift.String)

        public static var allCases: [SnowballType] {
            return [
                .edge,
                .edgeC,
                .edgeCg,
                .edgeS,
                .snc1Hdd,
                .snc1Ssd,
                .standard,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .edge: return "EDGE"
            case .edgeC: return "EDGE_C"
            case .edgeCg: return "EDGE_CG"
            case .edgeS: return "EDGE_S"
            case .snc1Hdd: return "SNC1_HDD"
            case .snc1Ssd: return "SNC1_SSD"
            case .standard: return "STANDARD"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SnowballType(rawValue: rawValue) ?? SnowballType.sdkUnknown(rawValue)
        }
    }
}
