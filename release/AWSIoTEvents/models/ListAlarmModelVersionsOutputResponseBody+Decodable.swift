// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAlarmModelVersionsOutputResponseBody: Swift.Equatable {
    let alarmModelVersionSummaries: [IotEventsClientTypes.AlarmModelVersionSummary]?
    let nextToken: Swift.String?
}

extension ListAlarmModelVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarmModelVersionSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmModelVersionSummariesContainer = try containerValues.decodeIfPresent([IotEventsClientTypes.AlarmModelVersionSummary?].self, forKey: .alarmModelVersionSummaries)
        var alarmModelVersionSummariesDecoded0:[IotEventsClientTypes.AlarmModelVersionSummary]? = nil
        if let alarmModelVersionSummariesContainer = alarmModelVersionSummariesContainer {
            alarmModelVersionSummariesDecoded0 = [IotEventsClientTypes.AlarmModelVersionSummary]()
            for structure0 in alarmModelVersionSummariesContainer {
                if let structure0 = structure0 {
                    alarmModelVersionSummariesDecoded0?.append(structure0)
                }
            }
        }
        alarmModelVersionSummaries = alarmModelVersionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
