// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDetectorModelVersionsOutputResponseBody: Swift.Equatable {
    let detectorModelVersionSummaries: [IotEventsClientTypes.DetectorModelVersionSummary]?
    let nextToken: Swift.String?
}

extension ListDetectorModelVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case detectorModelVersionSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detectorModelVersionSummariesContainer = try containerValues.decodeIfPresent([IotEventsClientTypes.DetectorModelVersionSummary?].self, forKey: .detectorModelVersionSummaries)
        var detectorModelVersionSummariesDecoded0:[IotEventsClientTypes.DetectorModelVersionSummary]? = nil
        if let detectorModelVersionSummariesContainer = detectorModelVersionSummariesContainer {
            detectorModelVersionSummariesDecoded0 = [IotEventsClientTypes.DetectorModelVersionSummary]()
            for structure0 in detectorModelVersionSummariesContainer {
                if let structure0 = structure0 {
                    detectorModelVersionSummariesDecoded0?.append(structure0)
                }
            }
        }
        detectorModelVersionSummaries = detectorModelVersionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
