// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotEventsClientTypes.AlarmNotification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case notificationActions
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let notificationActions = notificationActions {
            var notificationActionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .notificationActions)
            for notificationactions0 in notificationActions {
                try notificationActionsContainer.encode(notificationactions0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let notificationActionsContainer = try containerValues.decodeIfPresent([IotEventsClientTypes.NotificationAction?].self, forKey: .notificationActions)
        var notificationActionsDecoded0:[IotEventsClientTypes.NotificationAction]? = nil
        if let notificationActionsContainer = notificationActionsContainer {
            notificationActionsDecoded0 = [IotEventsClientTypes.NotificationAction]()
            for structure0 in notificationActionsContainer {
                if let structure0 = structure0 {
                    notificationActionsDecoded0?.append(structure0)
                }
            }
        }
        notificationActions = notificationActionsDecoded0
    }
}
