// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAlarmModelOutputResponseBody: Swift.Equatable {
    let creationTime: ClientRuntime.Date?
    let alarmModelArn: Swift.String?
    let alarmModelVersion: Swift.String?
    let lastUpdateTime: ClientRuntime.Date?
    let status: IotEventsClientTypes.AlarmModelVersionStatus?
    let statusMessage: Swift.String?
    let alarmModelName: Swift.String?
    let alarmModelDescription: Swift.String?
    let roleArn: Swift.String?
    let key: Swift.String?
    let severity: Swift.Int?
    let alarmRule: IotEventsClientTypes.AlarmRule?
    let alarmNotification: IotEventsClientTypes.AlarmNotification?
    let alarmEventActions: IotEventsClientTypes.AlarmEventActions?
    let alarmCapabilities: IotEventsClientTypes.AlarmCapabilities?
}

extension DescribeAlarmModelOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarmCapabilities
        case alarmEventActions
        case alarmModelArn
        case alarmModelDescription
        case alarmModelName
        case alarmModelVersion
        case alarmNotification
        case alarmRule
        case creationTime
        case key
        case lastUpdateTime
        case roleArn
        case severity
        case status
        case statusMessage
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let alarmModelArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alarmModelArn)
        alarmModelArn = alarmModelArnDecoded
        let alarmModelVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alarmModelVersion)
        alarmModelVersion = alarmModelVersionDecoded
        let lastUpdateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdateTime)
        lastUpdateTime = lastUpdateTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IotEventsClientTypes.AlarmModelVersionStatus.self, forKey: .status)
        status = statusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let alarmModelNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alarmModelName)
        alarmModelName = alarmModelNameDecoded
        let alarmModelDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alarmModelDescription)
        alarmModelDescription = alarmModelDescriptionDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let keyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .key)
        key = keyDecoded
        let severityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .severity)
        severity = severityDecoded
        let alarmRuleDecoded = try containerValues.decodeIfPresent(IotEventsClientTypes.AlarmRule.self, forKey: .alarmRule)
        alarmRule = alarmRuleDecoded
        let alarmNotificationDecoded = try containerValues.decodeIfPresent(IotEventsClientTypes.AlarmNotification.self, forKey: .alarmNotification)
        alarmNotification = alarmNotificationDecoded
        let alarmEventActionsDecoded = try containerValues.decodeIfPresent(IotEventsClientTypes.AlarmEventActions.self, forKey: .alarmEventActions)
        alarmEventActions = alarmEventActionsDecoded
        let alarmCapabilitiesDecoded = try containerValues.decodeIfPresent(IotEventsClientTypes.AlarmCapabilities.self, forKey: .alarmCapabilities)
        alarmCapabilities = alarmCapabilitiesDecoded
    }
}
