// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotEventsClientTypes.Input: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inputConfiguration
        case inputDefinition
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inputConfiguration = self.inputConfiguration {
            try encodeContainer.encode(inputConfiguration, forKey: .inputConfiguration)
        }
        if let inputDefinition = self.inputDefinition {
            try encodeContainer.encode(inputDefinition, forKey: .inputDefinition)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputConfigurationDecoded = try containerValues.decodeIfPresent(IotEventsClientTypes.InputConfiguration.self, forKey: .inputConfiguration)
        inputConfiguration = inputConfigurationDecoded
        let inputDefinitionDecoded = try containerValues.decodeIfPresent(IotEventsClientTypes.InputDefinition.self, forKey: .inputDefinition)
        inputDefinition = inputDefinitionDecoded
    }
}
