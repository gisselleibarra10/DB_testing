// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotEventsClientTypes {
    /// Information needed to set the timer.
    public struct SetTimerAction: Swift.Equatable {
        /// The duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.), and input values ($input..) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.
        public var durationExpression: Swift.String?
        /// The number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.
        @available(*, deprecated, message: "seconds is deprecated. You can use durationExpression for SetTimerAction. The value of seconds can be used as a string expression for durationExpression.")
        public var seconds: Swift.Int?
        /// The name of the timer.
        /// This member is required.
        public var timerName: Swift.String?

        public init (
            durationExpression: Swift.String? = nil,
            seconds: Swift.Int? = nil,
            timerName: Swift.String? = nil
        )
        {
            self.durationExpression = durationExpression
            self.seconds = seconds
            self.timerName = timerName
        }
    }

}
