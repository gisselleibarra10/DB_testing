// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotEventsClientTypes {
    /// A structure that contains an asset property value. For more information, see [Variant](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html) in the AWS IoT SiteWise API Reference. You must use expressions for all parameters in AssetPropertyVariant. The expressions accept literals, operators, functions, references, and substitution templates. Examples
    ///
    /// * For literal values, the expressions must contain single quotes. For example, the value for the integerValue parameter can be '100'.
    ///
    /// * For references, you must specify either variables or parameters. For example, the value for the booleanValue parameter can be $variable.offline.
    ///
    /// * For a substitution template, you must use ${}, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the doubleValue parameter uses a substitution template. '${$input.TemperatureInput.sensorData.temperature * 6 / 5 + 32}'
    ///
    ///
    /// For more information, see [Expressions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html) in the AWS IoT Events Developer Guide. You must specify one of the following value types, depending on the dataType of the specified asset property. For more information, see [AssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetProperty.html) in the AWS IoT SiteWise API Reference.
    public struct AssetPropertyVariant: Swift.Equatable {
        /// The asset property value is a Boolean value that must be 'TRUE' or 'FALSE'. You must use an expression, and the evaluated result should be a Boolean value.
        public var booleanValue: Swift.String?
        /// The asset property value is a double. You must use an expression, and the evaluated result should be a double.
        public var doubleValue: Swift.String?
        /// The asset property value is an integer. You must use an expression, and the evaluated result should be an integer.
        public var integerValue: Swift.String?
        /// The asset property value is a string. You must use an expression, and the evaluated result should be a string.
        public var stringValue: Swift.String?

        public init (
            booleanValue: Swift.String? = nil,
            doubleValue: Swift.String? = nil,
            integerValue: Swift.String? = nil,
            stringValue: Swift.String? = nil
        )
        {
            self.booleanValue = booleanValue
            self.doubleValue = doubleValue
            self.integerValue = integerValue
            self.stringValue = stringValue
        }
    }

}
