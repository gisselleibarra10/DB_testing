// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeAlarmModelOutputResponse: Swift.Equatable {
    /// Contains the configuration information of alarm state changes.
    public var alarmCapabilities: IotEventsClientTypes.AlarmCapabilities?
    /// Contains information about one or more alarm actions.
    public var alarmEventActions: IotEventsClientTypes.AlarmEventActions?
    /// The ARN of the alarm model. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the AWS General Reference.
    public var alarmModelArn: Swift.String?
    /// The description of the alarm model.
    public var alarmModelDescription: Swift.String?
    /// The name of the alarm model.
    public var alarmModelName: Swift.String?
    /// The version of the alarm model.
    public var alarmModelVersion: Swift.String?
    /// Contains information about one or more notification actions.
    public var alarmNotification: IotEventsClientTypes.AlarmNotification?
    /// Defines when your alarm is invoked.
    public var alarmRule: IotEventsClientTypes.AlarmRule?
    /// The time the alarm model was created, in the Unix epoch format.
    public var creationTime: ClientRuntime.Date?
    /// An input attribute used as a key to create an alarm. AWS IoT Events routes [inputs](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html) associated with this key to the alarm.
    public var key: Swift.String?
    /// The time the alarm model was last updated, in the Unix epoch format.
    public var lastUpdateTime: ClientRuntime.Date?
    /// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the AWS General Reference.
    public var roleArn: Swift.String?
    /// A non-negative integer that reflects the severity level of the alarm.
    public var severity: Swift.Int?
    /// The status of the alarm model. The status can be one of the following values:
    ///
    /// * ACTIVE - The alarm model is active and it's ready to evaluate data.
    ///
    /// * ACTIVATING - AWS IoT Events is activating your alarm model. Activating an alarm model can take up to a few minutes.
    ///
    /// * INACTIVE - The alarm model is inactive, so it isn't ready to evaluate data. Check your alarm model information and update the alarm model.
    ///
    /// * FAILED - You couldn't create or update the alarm model. Check your alarm model information and try again.
    public var status: IotEventsClientTypes.AlarmModelVersionStatus?
    /// Contains information about the status of the alarm model.
    public var statusMessage: Swift.String?

    public init (
        alarmCapabilities: IotEventsClientTypes.AlarmCapabilities? = nil,
        alarmEventActions: IotEventsClientTypes.AlarmEventActions? = nil,
        alarmModelArn: Swift.String? = nil,
        alarmModelDescription: Swift.String? = nil,
        alarmModelName: Swift.String? = nil,
        alarmModelVersion: Swift.String? = nil,
        alarmNotification: IotEventsClientTypes.AlarmNotification? = nil,
        alarmRule: IotEventsClientTypes.AlarmRule? = nil,
        creationTime: ClientRuntime.Date? = nil,
        key: Swift.String? = nil,
        lastUpdateTime: ClientRuntime.Date? = nil,
        roleArn: Swift.String? = nil,
        severity: Swift.Int? = nil,
        status: IotEventsClientTypes.AlarmModelVersionStatus? = nil,
        statusMessage: Swift.String? = nil
    )
    {
        self.alarmCapabilities = alarmCapabilities
        self.alarmEventActions = alarmEventActions
        self.alarmModelArn = alarmModelArn
        self.alarmModelDescription = alarmModelDescription
        self.alarmModelName = alarmModelName
        self.alarmModelVersion = alarmModelVersion
        self.alarmNotification = alarmNotification
        self.alarmRule = alarmRule
        self.creationTime = creationTime
        self.key = key
        self.lastUpdateTime = lastUpdateTime
        self.roleArn = roleArn
        self.severity = severity
        self.status = status
        self.statusMessage = statusMessage
    }
}
