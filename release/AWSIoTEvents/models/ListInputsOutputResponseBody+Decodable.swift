// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListInputsOutputResponseBody: Swift.Equatable {
    let inputSummaries: [IotEventsClientTypes.InputSummary]?
    let nextToken: Swift.String?
}

extension ListInputsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inputSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputSummariesContainer = try containerValues.decodeIfPresent([IotEventsClientTypes.InputSummary?].self, forKey: .inputSummaries)
        var inputSummariesDecoded0:[IotEventsClientTypes.InputSummary]? = nil
        if let inputSummariesContainer = inputSummariesContainer {
            inputSummariesDecoded0 = [IotEventsClientTypes.InputSummary]()
            for structure0 in inputSummariesContainer {
                if let structure0 = structure0 {
                    inputSummariesDecoded0?.append(structure0)
                }
            }
        }
        inputSummaries = inputSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
