// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotEventsClientTypes.AlarmEventActions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarmActions
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let alarmActions = alarmActions {
            var alarmActionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .alarmActions)
            for alarmactions0 in alarmActions {
                try alarmActionsContainer.encode(alarmactions0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmActionsContainer = try containerValues.decodeIfPresent([IotEventsClientTypes.AlarmAction?].self, forKey: .alarmActions)
        var alarmActionsDecoded0:[IotEventsClientTypes.AlarmAction]? = nil
        if let alarmActionsContainer = alarmActionsContainer {
            alarmActionsDecoded0 = [IotEventsClientTypes.AlarmAction]()
            for structure0 in alarmActionsContainer {
                if let structure0 = structure0 {
                    alarmActionsDecoded0?.append(structure0)
                }
            }
        }
        alarmActions = alarmActionsDecoded0
    }
}
