// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAlarmModelsOutputResponseBody: Swift.Equatable {
    let alarmModelSummaries: [IotEventsClientTypes.AlarmModelSummary]?
    let nextToken: Swift.String?
}

extension ListAlarmModelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarmModelSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmModelSummariesContainer = try containerValues.decodeIfPresent([IotEventsClientTypes.AlarmModelSummary?].self, forKey: .alarmModelSummaries)
        var alarmModelSummariesDecoded0:[IotEventsClientTypes.AlarmModelSummary]? = nil
        if let alarmModelSummariesContainer = alarmModelSummariesContainer {
            alarmModelSummariesDecoded0 = [IotEventsClientTypes.AlarmModelSummary]()
            for structure0 in alarmModelSummariesContainer {
                if let structure0 = structure0 {
                    alarmModelSummariesDecoded0?.append(structure0)
                }
            }
        }
        alarmModelSummaries = alarmModelSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
