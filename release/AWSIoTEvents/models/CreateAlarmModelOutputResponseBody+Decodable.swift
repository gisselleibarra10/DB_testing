// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateAlarmModelOutputResponseBody: Swift.Equatable {
    let creationTime: ClientRuntime.Date?
    let alarmModelArn: Swift.String?
    let alarmModelVersion: Swift.String?
    let lastUpdateTime: ClientRuntime.Date?
    let status: IotEventsClientTypes.AlarmModelVersionStatus?
}

extension CreateAlarmModelOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alarmModelArn
        case alarmModelVersion
        case creationTime
        case lastUpdateTime
        case status
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let alarmModelArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alarmModelArn)
        alarmModelArn = alarmModelArnDecoded
        let alarmModelVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .alarmModelVersion)
        alarmModelVersion = alarmModelVersionDecoded
        let lastUpdateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdateTime)
        lastUpdateTime = lastUpdateTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IotEventsClientTypes.AlarmModelVersionStatus.self, forKey: .status)
        status = statusDecoded
    }
}
