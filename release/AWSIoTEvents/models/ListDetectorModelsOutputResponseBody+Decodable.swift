// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDetectorModelsOutputResponseBody: Swift.Equatable {
    let detectorModelSummaries: [IotEventsClientTypes.DetectorModelSummary]?
    let nextToken: Swift.String?
}

extension ListDetectorModelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case detectorModelSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detectorModelSummariesContainer = try containerValues.decodeIfPresent([IotEventsClientTypes.DetectorModelSummary?].self, forKey: .detectorModelSummaries)
        var detectorModelSummariesDecoded0:[IotEventsClientTypes.DetectorModelSummary]? = nil
        if let detectorModelSummariesContainer = detectorModelSummariesContainer {
            detectorModelSummariesDecoded0 = [IotEventsClientTypes.DetectorModelSummary]()
            for structure0 in detectorModelSummariesContainer {
                if let structure0 = structure0 {
                    detectorModelSummariesDecoded0?.append(structure0)
                }
            }
        }
        detectorModelSummaries = detectorModelSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
