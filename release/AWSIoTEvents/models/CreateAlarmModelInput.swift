// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAlarmModelInput: Swift.Equatable {
    /// Contains the configuration information of alarm state changes.
    public var alarmCapabilities: IotEventsClientTypes.AlarmCapabilities?
    /// Contains information about one or more alarm actions.
    public var alarmEventActions: IotEventsClientTypes.AlarmEventActions?
    /// A description that tells you what the alarm model detects.
    public var alarmModelDescription: Swift.String?
    /// A unique name that helps you identify the alarm model. You can't change this name after you create the alarm model.
    /// This member is required.
    public var alarmModelName: Swift.String?
    /// Contains information about one or more notification actions.
    public var alarmNotification: IotEventsClientTypes.AlarmNotification?
    /// Defines when your alarm is invoked.
    /// This member is required.
    public var alarmRule: IotEventsClientTypes.AlarmRule?
    /// An input attribute used as a key to create an alarm. AWS IoT Events routes [inputs](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html) associated with this key to the alarm.
    public var key: Swift.String?
    /// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the AWS General Reference.
    /// This member is required.
    public var roleArn: Swift.String?
    /// A non-negative integer that reflects the severity level of the alarm.
    public var severity: Swift.Int?
    /// A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your AWS IoT Events resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the AWS IoT Events Developer Guide. You can create up to 50 tags for one alarm model.
    public var tags: [IotEventsClientTypes.Tag]?

    public init (
        alarmCapabilities: IotEventsClientTypes.AlarmCapabilities? = nil,
        alarmEventActions: IotEventsClientTypes.AlarmEventActions? = nil,
        alarmModelDescription: Swift.String? = nil,
        alarmModelName: Swift.String? = nil,
        alarmNotification: IotEventsClientTypes.AlarmNotification? = nil,
        alarmRule: IotEventsClientTypes.AlarmRule? = nil,
        key: Swift.String? = nil,
        roleArn: Swift.String? = nil,
        severity: Swift.Int? = nil,
        tags: [IotEventsClientTypes.Tag]? = nil
    )
    {
        self.alarmCapabilities = alarmCapabilities
        self.alarmEventActions = alarmEventActions
        self.alarmModelDescription = alarmModelDescription
        self.alarmModelName = alarmModelName
        self.alarmNotification = alarmNotification
        self.alarmRule = alarmRule
        self.key = key
        self.roleArn = roleArn
        self.severity = severity
        self.tags = tags
    }
}
