// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotEventsClientTypes.DetectorModelDefinition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case initialStateName
        case states
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let initialStateName = self.initialStateName {
            try encodeContainer.encode(initialStateName, forKey: .initialStateName)
        }
        if let states = states {
            var statesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .states)
            for states0 in states {
                try statesContainer.encode(states0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statesContainer = try containerValues.decodeIfPresent([IotEventsClientTypes.State?].self, forKey: .states)
        var statesDecoded0:[IotEventsClientTypes.State]? = nil
        if let statesContainer = statesContainer {
            statesDecoded0 = [IotEventsClientTypes.State]()
            for structure0 in statesContainer {
                if let structure0 = structure0 {
                    statesDecoded0?.append(structure0)
                }
            }
        }
        states = statesDecoded0
        let initialStateNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .initialStateName)
        initialStateName = initialStateNameDecoded
    }
}
