// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTemplateStepGroupsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let templateStepGroupSummary: [MigrationHubOrchestratorClientTypes.TemplateStepGroupSummary]?
}

extension ListTemplateStepGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case templateStepGroupSummary
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let templateStepGroupSummaryContainer = try containerValues.decodeIfPresent([MigrationHubOrchestratorClientTypes.TemplateStepGroupSummary?].self, forKey: .templateStepGroupSummary)
        var templateStepGroupSummaryDecoded0:[MigrationHubOrchestratorClientTypes.TemplateStepGroupSummary]? = nil
        if let templateStepGroupSummaryContainer = templateStepGroupSummaryContainer {
            templateStepGroupSummaryDecoded0 = [MigrationHubOrchestratorClientTypes.TemplateStepGroupSummary]()
            for structure0 in templateStepGroupSummaryContainer {
                if let structure0 = structure0 {
                    templateStepGroupSummaryDecoded0?.append(structure0)
                }
            }
        }
        templateStepGroupSummary = templateStepGroupSummaryDecoded0
    }
}
