// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPluginsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let plugins: [MigrationHubOrchestratorClientTypes.PluginSummary]?
}

extension ListPluginsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case plugins
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let pluginsContainer = try containerValues.decodeIfPresent([MigrationHubOrchestratorClientTypes.PluginSummary?].self, forKey: .plugins)
        var pluginsDecoded0:[MigrationHubOrchestratorClientTypes.PluginSummary]? = nil
        if let pluginsContainer = pluginsContainer {
            pluginsDecoded0 = [MigrationHubOrchestratorClientTypes.PluginSummary]()
            for structure0 in pluginsContainer {
                if let structure0 = structure0 {
                    pluginsDecoded0?.append(structure0)
                }
            }
        }
        plugins = pluginsDecoded0
    }
}
