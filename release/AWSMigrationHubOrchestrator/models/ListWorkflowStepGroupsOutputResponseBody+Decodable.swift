// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorkflowStepGroupsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let workflowStepGroupsSummary: [MigrationHubOrchestratorClientTypes.WorkflowStepGroupSummary]?
}

extension ListWorkflowStepGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case workflowStepGroupsSummary
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let workflowStepGroupsSummaryContainer = try containerValues.decodeIfPresent([MigrationHubOrchestratorClientTypes.WorkflowStepGroupSummary?].self, forKey: .workflowStepGroupsSummary)
        var workflowStepGroupsSummaryDecoded0:[MigrationHubOrchestratorClientTypes.WorkflowStepGroupSummary]? = nil
        if let workflowStepGroupsSummaryContainer = workflowStepGroupsSummaryContainer {
            workflowStepGroupsSummaryDecoded0 = [MigrationHubOrchestratorClientTypes.WorkflowStepGroupSummary]()
            for structure0 in workflowStepGroupsSummaryContainer {
                if let structure0 = structure0 {
                    workflowStepGroupsSummaryDecoded0?.append(structure0)
                }
            }
        }
        workflowStepGroupsSummary = workflowStepGroupsSummaryDecoded0
    }
}
