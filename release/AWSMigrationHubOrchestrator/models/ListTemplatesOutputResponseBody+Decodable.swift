// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTemplatesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let templateSummary: [MigrationHubOrchestratorClientTypes.TemplateSummary]?
}

extension ListTemplatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case templateSummary
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let templateSummaryContainer = try containerValues.decodeIfPresent([MigrationHubOrchestratorClientTypes.TemplateSummary?].self, forKey: .templateSummary)
        var templateSummaryDecoded0:[MigrationHubOrchestratorClientTypes.TemplateSummary]? = nil
        if let templateSummaryContainer = templateSummaryContainer {
            templateSummaryDecoded0 = [MigrationHubOrchestratorClientTypes.TemplateSummary]()
            for structure0 in templateSummaryContainer {
                if let structure0 = structure0 {
                    templateSummaryDecoded0?.append(structure0)
                }
            }
        }
        templateSummary = templateSummaryDecoded0
    }
}
