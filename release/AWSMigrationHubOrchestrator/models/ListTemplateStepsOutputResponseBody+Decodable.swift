// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTemplateStepsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let templateStepSummaryList: [MigrationHubOrchestratorClientTypes.TemplateStepSummary]?
}

extension ListTemplateStepsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case templateStepSummaryList
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let templateStepSummaryListContainer = try containerValues.decodeIfPresent([MigrationHubOrchestratorClientTypes.TemplateStepSummary?].self, forKey: .templateStepSummaryList)
        var templateStepSummaryListDecoded0:[MigrationHubOrchestratorClientTypes.TemplateStepSummary]? = nil
        if let templateStepSummaryListContainer = templateStepSummaryListContainer {
            templateStepSummaryListDecoded0 = [MigrationHubOrchestratorClientTypes.TemplateStepSummary]()
            for structure0 in templateStepSummaryListContainer {
                if let structure0 = structure0 {
                    templateStepSummaryListDecoded0?.append(structure0)
                }
            }
        }
        templateStepSummaryList = templateStepSummaryListDecoded0
    }
}
