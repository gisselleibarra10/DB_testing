// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateWorkflowStepGroupInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description
        case name
        case next
        case previous
        case workflowId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let next = next {
            var nextContainer = encodeContainer.nestedUnkeyedContainer(forKey: .next)
            for stringlist0 in next {
                try nextContainer.encode(stringlist0)
            }
        }
        if let previous = previous {
            var previousContainer = encodeContainer.nestedUnkeyedContainer(forKey: .previous)
            for stringlist0 in previous {
                try previousContainer.encode(stringlist0)
            }
        }
        if let workflowId = self.workflowId {
            try encodeContainer.encode(workflowId, forKey: .workflowId)
        }
    }
}
