// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53RecoveryControlConfigClientTypes.Rule: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aSSERTION = "ASSERTION"
        case gATING = "GATING"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aSSERTION = self.aSSERTION {
            try encodeContainer.encode(aSSERTION, forKey: .aSSERTION)
        }
        if let gATING = self.gATING {
            try encodeContainer.encode(gATING, forKey: .gATING)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aSSERTIONDecoded = try containerValues.decodeIfPresent(Route53RecoveryControlConfigClientTypes.AssertionRule.self, forKey: .aSSERTION)
        aSSERTION = aSSERTIONDecoded
        let gATINGDecoded = try containerValues.decodeIfPresent(Route53RecoveryControlConfigClientTypes.GatingRule.self, forKey: .gATING)
        gATING = gATINGDecoded
    }
}
