// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRoutingControlsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let routingControls: [Route53RecoveryControlConfigClientTypes.RoutingControl]?
}

extension ListRoutingControlsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case routingControls = "RoutingControls"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let routingControlsContainer = try containerValues.decodeIfPresent([Route53RecoveryControlConfigClientTypes.RoutingControl?].self, forKey: .routingControls)
        var routingControlsDecoded0:[Route53RecoveryControlConfigClientTypes.RoutingControl]? = nil
        if let routingControlsContainer = routingControlsContainer {
            routingControlsDecoded0 = [Route53RecoveryControlConfigClientTypes.RoutingControl]()
            for structure0 in routingControlsContainer {
                if let structure0 = structure0 {
                    routingControlsDecoded0?.append(structure0)
                }
            }
        }
        routingControls = routingControlsDecoded0
    }
}
