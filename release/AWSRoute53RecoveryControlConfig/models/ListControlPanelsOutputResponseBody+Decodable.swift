// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListControlPanelsOutputResponseBody: Swift.Equatable {
    let controlPanels: [Route53RecoveryControlConfigClientTypes.ControlPanel]?
    let nextToken: Swift.String?
}

extension ListControlPanelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case controlPanels = "ControlPanels"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let controlPanelsContainer = try containerValues.decodeIfPresent([Route53RecoveryControlConfigClientTypes.ControlPanel?].self, forKey: .controlPanels)
        var controlPanelsDecoded0:[Route53RecoveryControlConfigClientTypes.ControlPanel]? = nil
        if let controlPanelsContainer = controlPanelsContainer {
            controlPanelsDecoded0 = [Route53RecoveryControlConfigClientTypes.ControlPanel]()
            for structure0 in controlPanelsContainer {
                if let structure0 = structure0 {
                    controlPanelsDecoded0?.append(structure0)
                }
            }
        }
        controlPanels = controlPanelsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
