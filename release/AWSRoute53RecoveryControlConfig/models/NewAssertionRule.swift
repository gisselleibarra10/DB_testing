// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension Route53RecoveryControlConfigClientTypes {
    /// A new assertion rule for a control panel.
    public struct NewAssertionRule: Swift.Equatable {
        /// The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.
        /// This member is required.
        public var assertedControls: [Swift.String]?
        /// The Amazon Resource Name (ARN) for the control panel.
        /// This member is required.
        public var controlPanelArn: Swift.String?
        /// The name of the assertion rule. You can use any non-white space character in the name.
        /// This member is required.
        public var name: Swift.String?
        /// The criteria that you set for specific assertion controls (routing controls) that designate how many control states must be ON as the result of a transaction. For example, if you have three assertion controls, you might specify ATLEAST 2for your rule configuration. This means that at least two assertion controls must be ON, so that at least two Amazon Web Services Regions have traffic flowing to them.
        /// This member is required.
        public var ruleConfig: Route53RecoveryControlConfigClientTypes.RuleConfig?
        /// An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.
        /// This member is required.
        public var waitPeriodMs: Swift.Int

        public init (
            assertedControls: [Swift.String]? = nil,
            controlPanelArn: Swift.String? = nil,
            name: Swift.String? = nil,
            ruleConfig: Route53RecoveryControlConfigClientTypes.RuleConfig? = nil,
            waitPeriodMs: Swift.Int = 0
        )
        {
            self.assertedControls = assertedControls
            self.controlPanelArn = controlPanelArn
            self.name = name
            self.ruleConfig = ruleConfig
            self.waitPeriodMs = waitPeriodMs
        }
    }

}
