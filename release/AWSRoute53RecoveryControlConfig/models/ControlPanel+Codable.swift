// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53RecoveryControlConfigClientTypes.ControlPanel: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusterArn = "ClusterArn"
        case controlPanelArn = "ControlPanelArn"
        case defaultControlPanel = "DefaultControlPanel"
        case name = "Name"
        case routingControlCount = "RoutingControlCount"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clusterArn = self.clusterArn {
            try encodeContainer.encode(clusterArn, forKey: .clusterArn)
        }
        if let controlPanelArn = self.controlPanelArn {
            try encodeContainer.encode(controlPanelArn, forKey: .controlPanelArn)
        }
        if defaultControlPanel != false {
            try encodeContainer.encode(defaultControlPanel, forKey: .defaultControlPanel)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if routingControlCount != 0 {
            try encodeContainer.encode(routingControlCount, forKey: .routingControlCount)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterArn)
        clusterArn = clusterArnDecoded
        let controlPanelArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .controlPanelArn)
        controlPanelArn = controlPanelArnDecoded
        let defaultControlPanelDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .defaultControlPanel) ?? false
        defaultControlPanel = defaultControlPanelDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let routingControlCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .routingControlCount) ?? 0
        routingControlCount = routingControlCountDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Route53RecoveryControlConfigClientTypes.Status.self, forKey: .status)
        status = statusDecoded
    }
}
