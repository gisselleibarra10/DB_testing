// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53RecoveryControlConfigClientTypes.Cluster: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusterArn = "ClusterArn"
        case clusterEndpoints = "ClusterEndpoints"
        case name = "Name"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clusterArn = self.clusterArn {
            try encodeContainer.encode(clusterArn, forKey: .clusterArn)
        }
        if let clusterEndpoints = clusterEndpoints {
            var clusterEndpointsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .clusterEndpoints)
            for __listofclusterendpoint0 in clusterEndpoints {
                try clusterEndpointsContainer.encode(__listofclusterendpoint0)
            }
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterArn)
        clusterArn = clusterArnDecoded
        let clusterEndpointsContainer = try containerValues.decodeIfPresent([Route53RecoveryControlConfigClientTypes.ClusterEndpoint?].self, forKey: .clusterEndpoints)
        var clusterEndpointsDecoded0:[Route53RecoveryControlConfigClientTypes.ClusterEndpoint]? = nil
        if let clusterEndpointsContainer = clusterEndpointsContainer {
            clusterEndpointsDecoded0 = [Route53RecoveryControlConfigClientTypes.ClusterEndpoint]()
            for structure0 in clusterEndpointsContainer {
                if let structure0 = structure0 {
                    clusterEndpointsDecoded0?.append(structure0)
                }
            }
        }
        clusterEndpoints = clusterEndpointsDecoded0
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Route53RecoveryControlConfigClientTypes.Status.self, forKey: .status)
        status = statusDecoded
    }
}
