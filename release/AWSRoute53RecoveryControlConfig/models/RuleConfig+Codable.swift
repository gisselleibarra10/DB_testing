// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Route53RecoveryControlConfigClientTypes.RuleConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inverted = "Inverted"
        case threshold = "Threshold"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if inverted != false {
            try encodeContainer.encode(inverted, forKey: .inverted)
        }
        if threshold != 0 {
            try encodeContainer.encode(threshold, forKey: .threshold)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let invertedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .inverted) ?? false
        inverted = invertedDecoded
        let thresholdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .threshold) ?? 0
        threshold = thresholdDecoded
        let typeDecoded = try containerValues.decodeIfPresent(Route53RecoveryControlConfigClientTypes.RuleType.self, forKey: .type)
        type = typeDecoded
    }
}
