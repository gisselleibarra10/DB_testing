// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AppflowClientTypes {
    public enum PrivateConnectionProvisioningFailureCause: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case accessDenied
        case connectorAuthentication
        case connectorServer
        case internalServer
        case validation
        case sdkUnknown(Swift.String)

        public static var allCases: [PrivateConnectionProvisioningFailureCause] {
            return [
                .accessDenied,
                .connectorAuthentication,
                .connectorServer,
                .internalServer,
                .validation,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .accessDenied: return "ACCESS_DENIED"
            case .connectorAuthentication: return "CONNECTOR_AUTHENTICATION"
            case .connectorServer: return "CONNECTOR_SERVER"
            case .internalServer: return "INTERNAL_SERVER"
            case .validation: return "VALIDATION"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = PrivateConnectionProvisioningFailureCause(rawValue: rawValue) ?? PrivateConnectionProvisioningFailureCause.sdkUnknown(rawValue)
        }
    }
}
