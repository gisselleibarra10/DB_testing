// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppflowClientTypes.AuthenticationConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customAuthConfigs
        case isApiKeyAuthSupported
        case isBasicAuthSupported
        case isCustomAuthSupported
        case isOAuth2Supported
        case oAuth2Defaults
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customAuthConfigs = customAuthConfigs {
            var customAuthConfigsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .customAuthConfigs)
            for customauthconfiglist0 in customAuthConfigs {
                try customAuthConfigsContainer.encode(customauthconfiglist0)
            }
        }
        if isApiKeyAuthSupported != false {
            try encodeContainer.encode(isApiKeyAuthSupported, forKey: .isApiKeyAuthSupported)
        }
        if isBasicAuthSupported != false {
            try encodeContainer.encode(isBasicAuthSupported, forKey: .isBasicAuthSupported)
        }
        if isCustomAuthSupported != false {
            try encodeContainer.encode(isCustomAuthSupported, forKey: .isCustomAuthSupported)
        }
        if isOAuth2Supported != false {
            try encodeContainer.encode(isOAuth2Supported, forKey: .isOAuth2Supported)
        }
        if let oAuth2Defaults = self.oAuth2Defaults {
            try encodeContainer.encode(oAuth2Defaults, forKey: .oAuth2Defaults)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let isBasicAuthSupportedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isBasicAuthSupported) ?? false
        isBasicAuthSupported = isBasicAuthSupportedDecoded
        let isApiKeyAuthSupportedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isApiKeyAuthSupported) ?? false
        isApiKeyAuthSupported = isApiKeyAuthSupportedDecoded
        let isOAuth2SupportedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isOAuth2Supported) ?? false
        isOAuth2Supported = isOAuth2SupportedDecoded
        let isCustomAuthSupportedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isCustomAuthSupported) ?? false
        isCustomAuthSupported = isCustomAuthSupportedDecoded
        let oAuth2DefaultsDecoded = try containerValues.decodeIfPresent(AppflowClientTypes.OAuth2Defaults.self, forKey: .oAuth2Defaults)
        oAuth2Defaults = oAuth2DefaultsDecoded
        let customAuthConfigsContainer = try containerValues.decodeIfPresent([AppflowClientTypes.CustomAuthConfig?].self, forKey: .customAuthConfigs)
        var customAuthConfigsDecoded0:[AppflowClientTypes.CustomAuthConfig]? = nil
        if let customAuthConfigsContainer = customAuthConfigsContainer {
            customAuthConfigsDecoded0 = [AppflowClientTypes.CustomAuthConfig]()
            for structure0 in customAuthConfigsContainer {
                if let structure0 = structure0 {
                    customAuthConfigsDecoded0?.append(structure0)
                }
            }
        }
        customAuthConfigs = customAuthConfigsDecoded0
    }
}
