// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppflowClientTypes.CustomConnectorSourceProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customProperties
        case entityName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customProperties = customProperties {
            var customPropertiesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .customProperties)
            for (dictKey0, customproperties0) in customProperties {
                try customPropertiesContainer.encode(customproperties0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let entityName = self.entityName {
            try encodeContainer.encode(entityName, forKey: .entityName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entityNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .entityName)
        entityName = entityNameDecoded
        let customPropertiesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .customProperties)
        var customPropertiesDecoded0: [Swift.String:Swift.String]? = nil
        if let customPropertiesContainer = customPropertiesContainer {
            customPropertiesDecoded0 = [Swift.String:Swift.String]()
            for (key0, custompropertyvalue0) in customPropertiesContainer {
                if let custompropertyvalue0 = custompropertyvalue0 {
                    customPropertiesDecoded0?[key0] = custompropertyvalue0
                }
            }
        }
        customProperties = customPropertiesDecoded0
    }
}
