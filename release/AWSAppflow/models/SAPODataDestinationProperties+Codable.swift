// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppflowClientTypes.SAPODataDestinationProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errorHandlingConfig
        case idFieldNames
        case objectPath
        case successResponseHandlingConfig
        case writeOperationType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errorHandlingConfig = self.errorHandlingConfig {
            try encodeContainer.encode(errorHandlingConfig, forKey: .errorHandlingConfig)
        }
        if let idFieldNames = idFieldNames {
            var idFieldNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .idFieldNames)
            for idfieldnamelist0 in idFieldNames {
                try idFieldNamesContainer.encode(idfieldnamelist0)
            }
        }
        if let objectPath = self.objectPath {
            try encodeContainer.encode(objectPath, forKey: .objectPath)
        }
        if let successResponseHandlingConfig = self.successResponseHandlingConfig {
            try encodeContainer.encode(successResponseHandlingConfig, forKey: .successResponseHandlingConfig)
        }
        if let writeOperationType = self.writeOperationType {
            try encodeContainer.encode(writeOperationType.rawValue, forKey: .writeOperationType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let objectPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .objectPath)
        objectPath = objectPathDecoded
        let successResponseHandlingConfigDecoded = try containerValues.decodeIfPresent(AppflowClientTypes.SuccessResponseHandlingConfig.self, forKey: .successResponseHandlingConfig)
        successResponseHandlingConfig = successResponseHandlingConfigDecoded
        let idFieldNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .idFieldNames)
        var idFieldNamesDecoded0:[Swift.String]? = nil
        if let idFieldNamesContainer = idFieldNamesContainer {
            idFieldNamesDecoded0 = [Swift.String]()
            for string0 in idFieldNamesContainer {
                if let string0 = string0 {
                    idFieldNamesDecoded0?.append(string0)
                }
            }
        }
        idFieldNames = idFieldNamesDecoded0
        let errorHandlingConfigDecoded = try containerValues.decodeIfPresent(AppflowClientTypes.ErrorHandlingConfig.self, forKey: .errorHandlingConfig)
        errorHandlingConfig = errorHandlingConfigDecoded
        let writeOperationTypeDecoded = try containerValues.decodeIfPresent(AppflowClientTypes.WriteOperationType.self, forKey: .writeOperationType)
        writeOperationType = writeOperationTypeDecoded
    }
}
