// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppflowClientTypes.PrivateConnectionProvisioningState: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failureCause
        case failureMessage
        case status
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let failureCause = self.failureCause {
            try encodeContainer.encode(failureCause.rawValue, forKey: .failureCause)
        }
        if let failureMessage = self.failureMessage {
            try encodeContainer.encode(failureMessage, forKey: .failureMessage)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(AppflowClientTypes.PrivateConnectionProvisioningStatus.self, forKey: .status)
        status = statusDecoded
        let failureMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureMessage)
        failureMessage = failureMessageDecoded
        let failureCauseDecoded = try containerValues.decodeIfPresent(AppflowClientTypes.PrivateConnectionProvisioningFailureCause.self, forKey: .failureCause)
        failureCause = failureCauseDecoded
    }
}
