// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterConnectorInputBody: Swift.Equatable {
    let connectorLabel: Swift.String?
    let description: Swift.String?
    let connectorProvisioningType: AppflowClientTypes.ConnectorProvisioningType?
    let connectorProvisioningConfig: AppflowClientTypes.ConnectorProvisioningConfig?
}

extension RegisterConnectorInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case connectorLabel
        case connectorProvisioningConfig
        case connectorProvisioningType
        case description
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectorLabelDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .connectorLabel)
        connectorLabel = connectorLabelDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let connectorProvisioningTypeDecoded = try containerValues.decodeIfPresent(AppflowClientTypes.ConnectorProvisioningType.self, forKey: .connectorProvisioningType)
        connectorProvisioningType = connectorProvisioningTypeDecoded
        let connectorProvisioningConfigDecoded = try containerValues.decodeIfPresent(AppflowClientTypes.ConnectorProvisioningConfig.self, forKey: .connectorProvisioningConfig)
        connectorProvisioningConfig = connectorProvisioningConfigDecoded
    }
}
