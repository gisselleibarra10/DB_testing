// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFlowsOutputResponseBody: Swift.Equatable {
    let flows: [AppflowClientTypes.FlowDefinition]?
    let nextToken: Swift.String?
}

extension ListFlowsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case flows
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowsContainer = try containerValues.decodeIfPresent([AppflowClientTypes.FlowDefinition?].self, forKey: .flows)
        var flowsDecoded0:[AppflowClientTypes.FlowDefinition]? = nil
        if let flowsContainer = flowsContainer {
            flowsDecoded0 = [AppflowClientTypes.FlowDefinition]()
            for structure0 in flowsContainer {
                if let structure0 = structure0 {
                    flowsDecoded0?.append(structure0)
                }
            }
        }
        flows = flowsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
