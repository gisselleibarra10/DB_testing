// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AppflowClientTypes {
    /// The configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination.
    public struct S3OutputFormatConfig: Swift.Equatable {
        /// The aggregation settings that you can use to customize the output format of your flow data.
        public var aggregationConfig: AppflowClientTypes.AggregationConfig?
        /// Indicates the file type that Amazon AppFlow places in the Amazon S3 bucket.
        public var fileType: AppflowClientTypes.FileType?
        /// Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date.
        public var prefixConfig: AppflowClientTypes.PrefixConfig?
        /// If your file output format is Parquet, use this parameter to set whether Amazon AppFlow preserves the data types in your source data when it writes the output to Amazon S3.
        ///
        /// * true: Amazon AppFlow preserves the data types when it writes to Amazon S3. For example, an integer or 1 in your source data is still an integer in your output.
        ///
        /// * false: Amazon AppFlow converts all of the source data into strings when it writes to Amazon S3. For example, an integer of 1 in your source data becomes the string "1" in the output.
        public var preserveSourceDataTyping: Swift.Bool?

        public init (
            aggregationConfig: AppflowClientTypes.AggregationConfig? = nil,
            fileType: AppflowClientTypes.FileType? = nil,
            prefixConfig: AppflowClientTypes.PrefixConfig? = nil,
            preserveSourceDataTyping: Swift.Bool? = nil
        )
        {
            self.aggregationConfig = aggregationConfig
            self.fileType = fileType
            self.prefixConfig = prefixConfig
            self.preserveSourceDataTyping = preserveSourceDataTyping
        }
    }

}
