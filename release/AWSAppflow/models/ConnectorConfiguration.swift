// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppflowClientTypes {
    /// The configuration settings related to a given connector.
    public struct ConnectorConfiguration: Swift.Equatable {
        /// The authentication config required for the connector.
        public var authenticationConfig: AppflowClientTypes.AuthenticationConfig?
        /// Specifies whether the connector can be used as a destination.
        public var canUseAsDestination: Swift.Bool
        /// Specifies whether the connector can be used as a source.
        public var canUseAsSource: Swift.Bool
        /// The Amazon Resource Name (ARN) for the registered connector.
        public var connectorArn: Swift.String?
        /// A description about the connector.
        public var connectorDescription: Swift.String?
        /// The label used for registering the connector.
        public var connectorLabel: Swift.String?
        /// Specifies connector-specific metadata such as oAuthScopes, supportedRegions, privateLinkServiceUrl, and so on.
        public var connectorMetadata: AppflowClientTypes.ConnectorMetadata?
        /// The connection modes that the connector supports.
        public var connectorModes: [Swift.String]?
        /// The connector name.
        public var connectorName: Swift.String?
        /// The owner who developed the connector.
        public var connectorOwner: Swift.String?
        /// The configuration required for registering the connector.
        public var connectorProvisioningConfig: AppflowClientTypes.ConnectorProvisioningConfig?
        /// The provisioning type used to register the connector.
        public var connectorProvisioningType: AppflowClientTypes.ConnectorProvisioningType?
        /// The required connector runtime settings.
        public var connectorRuntimeSettings: [AppflowClientTypes.ConnectorRuntimeSetting]?
        /// The connector type.
        public var connectorType: AppflowClientTypes.ConnectorType?
        /// The connector version.
        public var connectorVersion: Swift.String?
        /// Specifies if PrivateLink is enabled for that connector.
        public var isPrivateLinkEnabled: Swift.Bool
        /// Specifies if a PrivateLink endpoint URL is required.
        public var isPrivateLinkEndpointUrlRequired: Swift.Bool
        /// Logo URL of the connector.
        public var logoURL: Swift.String?
        /// The date on which the connector was registered.
        public var registeredAt: ClientRuntime.Date?
        /// Information about who registered the connector.
        public var registeredBy: Swift.String?
        /// A list of API versions that are supported by the connector.
        public var supportedApiVersions: [Swift.String]?
        /// Lists the connectors that are available for use as destinations.
        public var supportedDestinationConnectors: [AppflowClientTypes.ConnectorType]?
        /// A list of operators supported by the connector.
        public var supportedOperators: [AppflowClientTypes.Operators]?
        /// Specifies the supported flow frequency for that connector.
        public var supportedSchedulingFrequencies: [AppflowClientTypes.ScheduleFrequencyType]?
        /// Specifies the supported trigger types for the flow.
        public var supportedTriggerTypes: [AppflowClientTypes.TriggerType]?
        /// A list of write operations supported by the connector.
        public var supportedWriteOperations: [AppflowClientTypes.WriteOperationType]?

        public init (
            authenticationConfig: AppflowClientTypes.AuthenticationConfig? = nil,
            canUseAsDestination: Swift.Bool = false,
            canUseAsSource: Swift.Bool = false,
            connectorArn: Swift.String? = nil,
            connectorDescription: Swift.String? = nil,
            connectorLabel: Swift.String? = nil,
            connectorMetadata: AppflowClientTypes.ConnectorMetadata? = nil,
            connectorModes: [Swift.String]? = nil,
            connectorName: Swift.String? = nil,
            connectorOwner: Swift.String? = nil,
            connectorProvisioningConfig: AppflowClientTypes.ConnectorProvisioningConfig? = nil,
            connectorProvisioningType: AppflowClientTypes.ConnectorProvisioningType? = nil,
            connectorRuntimeSettings: [AppflowClientTypes.ConnectorRuntimeSetting]? = nil,
            connectorType: AppflowClientTypes.ConnectorType? = nil,
            connectorVersion: Swift.String? = nil,
            isPrivateLinkEnabled: Swift.Bool = false,
            isPrivateLinkEndpointUrlRequired: Swift.Bool = false,
            logoURL: Swift.String? = nil,
            registeredAt: ClientRuntime.Date? = nil,
            registeredBy: Swift.String? = nil,
            supportedApiVersions: [Swift.String]? = nil,
            supportedDestinationConnectors: [AppflowClientTypes.ConnectorType]? = nil,
            supportedOperators: [AppflowClientTypes.Operators]? = nil,
            supportedSchedulingFrequencies: [AppflowClientTypes.ScheduleFrequencyType]? = nil,
            supportedTriggerTypes: [AppflowClientTypes.TriggerType]? = nil,
            supportedWriteOperations: [AppflowClientTypes.WriteOperationType]? = nil
        )
        {
            self.authenticationConfig = authenticationConfig
            self.canUseAsDestination = canUseAsDestination
            self.canUseAsSource = canUseAsSource
            self.connectorArn = connectorArn
            self.connectorDescription = connectorDescription
            self.connectorLabel = connectorLabel
            self.connectorMetadata = connectorMetadata
            self.connectorModes = connectorModes
            self.connectorName = connectorName
            self.connectorOwner = connectorOwner
            self.connectorProvisioningConfig = connectorProvisioningConfig
            self.connectorProvisioningType = connectorProvisioningType
            self.connectorRuntimeSettings = connectorRuntimeSettings
            self.connectorType = connectorType
            self.connectorVersion = connectorVersion
            self.isPrivateLinkEnabled = isPrivateLinkEnabled
            self.isPrivateLinkEndpointUrlRequired = isPrivateLinkEndpointUrlRequired
            self.logoURL = logoURL
            self.registeredAt = registeredAt
            self.registeredBy = registeredBy
            self.supportedApiVersions = supportedApiVersions
            self.supportedDestinationConnectors = supportedDestinationConnectors
            self.supportedOperators = supportedOperators
            self.supportedSchedulingFrequencies = supportedSchedulingFrequencies
            self.supportedTriggerTypes = supportedTriggerTypes
            self.supportedWriteOperations = supportedWriteOperations
        }
    }

}
