// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppflowClientTypes.RedshiftDestinationProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bucketPrefix
        case errorHandlingConfig
        case intermediateBucketName
        case object
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bucketPrefix = self.bucketPrefix {
            try encodeContainer.encode(bucketPrefix, forKey: .bucketPrefix)
        }
        if let errorHandlingConfig = self.errorHandlingConfig {
            try encodeContainer.encode(errorHandlingConfig, forKey: .errorHandlingConfig)
        }
        if let intermediateBucketName = self.intermediateBucketName {
            try encodeContainer.encode(intermediateBucketName, forKey: .intermediateBucketName)
        }
        if let object = self.object {
            try encodeContainer.encode(object, forKey: .object)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let objectDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .object)
        object = objectDecoded
        let intermediateBucketNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .intermediateBucketName)
        intermediateBucketName = intermediateBucketNameDecoded
        let bucketPrefixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bucketPrefix)
        bucketPrefix = bucketPrefixDecoded
        let errorHandlingConfigDecoded = try containerValues.decodeIfPresent(AppflowClientTypes.ErrorHandlingConfig.self, forKey: .errorHandlingConfig)
        errorHandlingConfig = errorHandlingConfigDecoded
    }
}
