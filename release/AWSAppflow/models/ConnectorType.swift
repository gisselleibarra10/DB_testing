// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AppflowClientTypes {
    public enum ConnectorType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case amplitude
        case customconnector
        case customerprofiles
        case datadog
        case dynatrace
        case eventbridge
        case googleanalytics
        case honeycode
        case infornexus
        case lookoutmetrics
        case marketo
        case redshift
        case s3
        case salesforce
        case sapodata
        case servicenow
        case singular
        case slack
        case snowflake
        case trendmicro
        case upsolver
        case veeva
        case zendesk
        case sdkUnknown(Swift.String)

        public static var allCases: [ConnectorType] {
            return [
                .amplitude,
                .customconnector,
                .customerprofiles,
                .datadog,
                .dynatrace,
                .eventbridge,
                .googleanalytics,
                .honeycode,
                .infornexus,
                .lookoutmetrics,
                .marketo,
                .redshift,
                .s3,
                .salesforce,
                .sapodata,
                .servicenow,
                .singular,
                .slack,
                .snowflake,
                .trendmicro,
                .upsolver,
                .veeva,
                .zendesk,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .amplitude: return "Amplitude"
            case .customconnector: return "CustomConnector"
            case .customerprofiles: return "CustomerProfiles"
            case .datadog: return "Datadog"
            case .dynatrace: return "Dynatrace"
            case .eventbridge: return "EventBridge"
            case .googleanalytics: return "Googleanalytics"
            case .honeycode: return "Honeycode"
            case .infornexus: return "Infornexus"
            case .lookoutmetrics: return "LookoutMetrics"
            case .marketo: return "Marketo"
            case .redshift: return "Redshift"
            case .s3: return "S3"
            case .salesforce: return "Salesforce"
            case .sapodata: return "SAPOData"
            case .servicenow: return "Servicenow"
            case .singular: return "Singular"
            case .slack: return "Slack"
            case .snowflake: return "Snowflake"
            case .trendmicro: return "Trendmicro"
            case .upsolver: return "Upsolver"
            case .veeva: return "Veeva"
            case .zendesk: return "Zendesk"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ConnectorType(rawValue: rawValue) ?? ConnectorType.sdkUnknown(rawValue)
        }
    }
}
