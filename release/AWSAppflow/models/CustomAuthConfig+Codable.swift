// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AppflowClientTypes.CustomAuthConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authParameters
        case customAuthenticationType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let authParameters = authParameters {
            var authParametersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .authParameters)
            for authparameterlist0 in authParameters {
                try authParametersContainer.encode(authparameterlist0)
            }
        }
        if let customAuthenticationType = self.customAuthenticationType {
            try encodeContainer.encode(customAuthenticationType, forKey: .customAuthenticationType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customAuthenticationTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .customAuthenticationType)
        customAuthenticationType = customAuthenticationTypeDecoded
        let authParametersContainer = try containerValues.decodeIfPresent([AppflowClientTypes.AuthParameter?].self, forKey: .authParameters)
        var authParametersDecoded0:[AppflowClientTypes.AuthParameter]? = nil
        if let authParametersContainer = authParametersContainer {
            authParametersDecoded0 = [AppflowClientTypes.AuthParameter]()
            for structure0 in authParametersContainer {
                if let structure0 = structure0 {
                    authParametersDecoded0?.append(structure0)
                }
            }
        }
        authParameters = authParametersDecoded0
    }
}
