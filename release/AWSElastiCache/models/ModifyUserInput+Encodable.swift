// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifyUserInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let accessString = accessString {
            try container.encode(accessString, forKey: ClientRuntime.Key("AccessString"))
        }
        if let appendAccessString = appendAccessString {
            try container.encode(appendAccessString, forKey: ClientRuntime.Key("AppendAccessString"))
        }
        if let noPasswordRequired = noPasswordRequired {
            try container.encode(noPasswordRequired, forKey: ClientRuntime.Key("NoPasswordRequired"))
        }
        if let passwords = passwords {
            var passwordsContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("Passwords"))
            for (index0, string0) in passwords.enumerated() {
                try passwordsContainer.encode(string0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let userId = userId {
            try container.encode(userId, forKey: ClientRuntime.Key("UserId"))
        }
        try container.encode("ModifyUser", forKey:ClientRuntime.Key("Action"))
        try container.encode("2015-02-02", forKey:ClientRuntime.Key("Version"))
    }
}
