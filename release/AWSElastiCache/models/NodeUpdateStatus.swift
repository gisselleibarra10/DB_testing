// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ElastiCacheClientTypes {
    public enum NodeUpdateStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case complete
        case inProgress
        case notApplied
        case stopped
        case stopping
        case waitingToStart
        case sdkUnknown(Swift.String)

        public static var allCases: [NodeUpdateStatus] {
            return [
                .complete,
                .inProgress,
                .notApplied,
                .stopped,
                .stopping,
                .waitingToStart,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .complete: return "complete"
            case .inProgress: return "in-progress"
            case .notApplied: return "not-applied"
            case .stopped: return "stopped"
            case .stopping: return "stopping"
            case .waitingToStart: return "waiting-to-start"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = NodeUpdateStatus(rawValue: rawValue) ?? NodeUpdateStatus.sdkUnknown(rawValue)
        }
    }
}
