// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ElastiCacheClientTypes {
    /// A group of settings that are applied to the cluster in the future, or that are currently being applied.
    public struct PendingModifiedValues: Swift.Equatable {
        /// The auth token status
        public var authTokenStatus: ElastiCacheClientTypes.AuthTokenUpdateStatus?
        /// A list of cache node IDs that are being removed (or will be removed) from the cluster. A node ID is a 4-digit numeric identifier (0001, 0002, etc.).
        public var cacheNodeIdsToRemove: [Swift.String]?
        /// The cache node type that this cluster or replication group is scaled to.
        public var cacheNodeType: Swift.String?
        /// The new cache engine version that the cluster runs.
        public var engineVersion: Swift.String?
        /// The log delivery configurations being modified
        public var logDeliveryConfigurations: [ElastiCacheClientTypes.PendingLogDeliveryConfiguration]?
        /// The new number of cache nodes for the cluster. For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40.
        public var numCacheNodes: Swift.Int?

        public init (
            authTokenStatus: ElastiCacheClientTypes.AuthTokenUpdateStatus? = nil,
            cacheNodeIdsToRemove: [Swift.String]? = nil,
            cacheNodeType: Swift.String? = nil,
            engineVersion: Swift.String? = nil,
            logDeliveryConfigurations: [ElastiCacheClientTypes.PendingLogDeliveryConfiguration]? = nil,
            numCacheNodes: Swift.Int? = nil
        )
        {
            self.authTokenStatus = authTokenStatus
            self.cacheNodeIdsToRemove = cacheNodeIdsToRemove
            self.cacheNodeType = cacheNodeType
            self.engineVersion = engineVersion
            self.logDeliveryConfigurations = logDeliveryConfigurations
            self.numCacheNodes = numCacheNodes
        }
    }

}
