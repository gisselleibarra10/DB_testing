// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyGlobalReplicationGroupInput: Swift.Equatable {
    /// This parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible. Modifications to Global Replication Groups cannot be requested to be applied in PreferredMaintenceWindow.
    /// This member is required.
    public var applyImmediately: Swift.Bool
    /// Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure.
    public var automaticFailoverEnabled: Swift.Bool?
    /// A valid cache node type that you want to scale this Global datastore to.
    public var cacheNodeType: Swift.String?
    /// The name of the cache parameter group to use with the Global datastore. It must be compatible with the major engine version used by the Global datastore.
    public var cacheParameterGroupName: Swift.String?
    /// The upgraded version of the cache engine to be run on the clusters in the Global datastore.
    public var engineVersion: Swift.String?
    /// A description of the Global datastore
    public var globalReplicationGroupDescription: Swift.String?
    /// The name of the Global datastore
    /// This member is required.
    public var globalReplicationGroupId: Swift.String?

    public init (
        applyImmediately: Swift.Bool = false,
        automaticFailoverEnabled: Swift.Bool? = nil,
        cacheNodeType: Swift.String? = nil,
        cacheParameterGroupName: Swift.String? = nil,
        engineVersion: Swift.String? = nil,
        globalReplicationGroupDescription: Swift.String? = nil,
        globalReplicationGroupId: Swift.String? = nil
    )
    {
        self.applyImmediately = applyImmediately
        self.automaticFailoverEnabled = automaticFailoverEnabled
        self.cacheNodeType = cacheNodeType
        self.cacheParameterGroupName = cacheParameterGroupName
        self.engineVersion = engineVersion
        self.globalReplicationGroupDescription = globalReplicationGroupDescription
        self.globalReplicationGroupId = globalReplicationGroupId
    }
}
