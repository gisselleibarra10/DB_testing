// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ElastiCacheClientTypes {
    /// Contains all of the attributes of a specific Redis replication group.
    public struct ReplicationGroup: Swift.Equatable {
        /// The ARN (Amazon Resource Name) of the replication group.
        public var aRN: Swift.String?
        /// A flag that enables encryption at-rest when set to true. You cannot modify the value of AtRestEncryptionEnabled after the cluster is created. To enable encryption at-rest on a cluster you must set AtRestEncryptionEnabled to true when you create a cluster. Required: Only available when creating a replication group in an Amazon VPC using redis version 3.2.6, 4.x or later. Default: false
        public var atRestEncryptionEnabled: Swift.Bool?
        /// A flag that enables using an AuthToken (password) when issuing Redis commands. Default: false
        public var authTokenEnabled: Swift.Bool?
        /// The date the auth token was last modified
        public var authTokenLastModifiedDate: ClientRuntime.Date?
        ///  If you are running Redis engine version 6.0 or later, set this parameter to yes if you want to opt-in to the next auto minor version upgrade campaign. This parameter is disabled for previous versions.
        public var autoMinorVersionUpgrade: Swift.Bool
        /// Indicates the status of automatic failover for this Redis replication group.
        public var automaticFailover: ElastiCacheClientTypes.AutomaticFailoverStatus?
        /// The name of the compute and memory capacity node type for each node in the replication group.
        public var cacheNodeType: Swift.String?
        /// A flag indicating whether or not this replication group is cluster enabled; i.e., whether its data can be partitioned across multiple shards (API/CLI: node groups). Valid values: true | false
        public var clusterEnabled: Swift.Bool?
        /// The configuration endpoint for this replication group. Use the configuration endpoint to connect to this replication group.
        public var configurationEndpoint: ElastiCacheClientTypes.Endpoint?
        /// Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to true when using r6gd nodes. For more information, see [Data tiering](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/data-tiering.html).
        public var dataTiering: ElastiCacheClientTypes.DataTieringStatus?
        /// The user supplied description of the replication group.
        public var description: Swift.String?
        /// The name of the Global datastore and role of this replication group in the Global datastore.
        public var globalReplicationGroupInfo: ElastiCacheClientTypes.GlobalReplicationGroupInfo?
        /// The ID of the KMS key used to encrypt the disk in the cluster.
        public var kmsKeyId: Swift.String?
        /// Returns the destination, format and type of the logs.
        public var logDeliveryConfigurations: [ElastiCacheClientTypes.LogDeliveryConfiguration]?
        /// The names of all the cache clusters that are part of this replication group.
        public var memberClusters: [Swift.String]?
        /// The outpost ARNs of the replication group's member clusters.
        public var memberClustersOutpostArns: [Swift.String]?
        /// A flag indicating if you have Multi-AZ enabled to enhance fault tolerance. For more information, see [Minimizing Downtime: Multi-AZ](http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html)
        public var multiAZ: ElastiCacheClientTypes.MultiAZStatus?
        /// A list of node groups in this replication group. For Redis (cluster mode disabled) replication groups, this is a single-element list. For Redis (cluster mode enabled) replication groups, the list contains an entry for each node group (shard).
        public var nodeGroups: [ElastiCacheClientTypes.NodeGroup]?
        /// A group of settings to be applied to the replication group, either immediately or during the next maintenance window.
        public var pendingModifiedValues: ElastiCacheClientTypes.ReplicationGroupPendingModifiedValues?
        /// The date and time when the cluster was created.
        public var replicationGroupCreateTime: ClientRuntime.Date?
        /// The identifier for the replication group.
        public var replicationGroupId: Swift.String?
        /// The number of days for which ElastiCache retains automatic cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.
        public var snapshotRetentionLimit: Swift.Int?
        /// The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard). Example: 05:00-09:00 If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range. This parameter is only valid if the Engine parameter is redis.
        public var snapshotWindow: Swift.String?
        /// The cluster ID that is used as the daily snapshot source for the replication group.
        public var snapshottingClusterId: Swift.String?
        /// The current state of this replication group - creating, available, modifying, deleting, create-failed, snapshotting.
        public var status: Swift.String?
        /// A flag that enables in-transit encryption when set to true. You cannot modify the value of TransitEncryptionEnabled after the cluster is created. To enable in-transit encryption on a cluster you must set TransitEncryptionEnabled to true when you create a cluster. Required: Only available when creating a replication group in an Amazon VPC using redis version 3.2.6, 4.x or later. Default: false
        public var transitEncryptionEnabled: Swift.Bool?
        /// The ID of the user group associated to the replication group.
        public var userGroupIds: [Swift.String]?

        public init (
            aRN: Swift.String? = nil,
            atRestEncryptionEnabled: Swift.Bool? = nil,
            authTokenEnabled: Swift.Bool? = nil,
            authTokenLastModifiedDate: ClientRuntime.Date? = nil,
            autoMinorVersionUpgrade: Swift.Bool = false,
            automaticFailover: ElastiCacheClientTypes.AutomaticFailoverStatus? = nil,
            cacheNodeType: Swift.String? = nil,
            clusterEnabled: Swift.Bool? = nil,
            configurationEndpoint: ElastiCacheClientTypes.Endpoint? = nil,
            dataTiering: ElastiCacheClientTypes.DataTieringStatus? = nil,
            description: Swift.String? = nil,
            globalReplicationGroupInfo: ElastiCacheClientTypes.GlobalReplicationGroupInfo? = nil,
            kmsKeyId: Swift.String? = nil,
            logDeliveryConfigurations: [ElastiCacheClientTypes.LogDeliveryConfiguration]? = nil,
            memberClusters: [Swift.String]? = nil,
            memberClustersOutpostArns: [Swift.String]? = nil,
            multiAZ: ElastiCacheClientTypes.MultiAZStatus? = nil,
            nodeGroups: [ElastiCacheClientTypes.NodeGroup]? = nil,
            pendingModifiedValues: ElastiCacheClientTypes.ReplicationGroupPendingModifiedValues? = nil,
            replicationGroupCreateTime: ClientRuntime.Date? = nil,
            replicationGroupId: Swift.String? = nil,
            snapshotRetentionLimit: Swift.Int? = nil,
            snapshotWindow: Swift.String? = nil,
            snapshottingClusterId: Swift.String? = nil,
            status: Swift.String? = nil,
            transitEncryptionEnabled: Swift.Bool? = nil,
            userGroupIds: [Swift.String]? = nil
        )
        {
            self.aRN = aRN
            self.atRestEncryptionEnabled = atRestEncryptionEnabled
            self.authTokenEnabled = authTokenEnabled
            self.authTokenLastModifiedDate = authTokenLastModifiedDate
            self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
            self.automaticFailover = automaticFailover
            self.cacheNodeType = cacheNodeType
            self.clusterEnabled = clusterEnabled
            self.configurationEndpoint = configurationEndpoint
            self.dataTiering = dataTiering
            self.description = description
            self.globalReplicationGroupInfo = globalReplicationGroupInfo
            self.kmsKeyId = kmsKeyId
            self.logDeliveryConfigurations = logDeliveryConfigurations
            self.memberClusters = memberClusters
            self.memberClustersOutpostArns = memberClustersOutpostArns
            self.multiAZ = multiAZ
            self.nodeGroups = nodeGroups
            self.pendingModifiedValues = pendingModifiedValues
            self.replicationGroupCreateTime = replicationGroupCreateTime
            self.replicationGroupId = replicationGroupId
            self.snapshotRetentionLimit = snapshotRetentionLimit
            self.snapshotWindow = snapshotWindow
            self.snapshottingClusterId = snapshottingClusterId
            self.status = status
            self.transitEncryptionEnabled = transitEncryptionEnabled
            self.userGroupIds = userGroupIds
        }
    }

}
