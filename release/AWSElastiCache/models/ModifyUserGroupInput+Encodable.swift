// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifyUserGroupInput: Swift.Encodable {
    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let userGroupId = userGroupId {
            try container.encode(userGroupId, forKey: ClientRuntime.Key("UserGroupId"))
        }
        if let userIdsToAdd = userIdsToAdd {
            var userIdsToAddContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("UserIdsToAdd"))
            for (index0, userid0) in userIdsToAdd.enumerated() {
                try userIdsToAddContainer.encode(userid0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let userIdsToRemove = userIdsToRemove {
            var userIdsToRemoveContainer = container.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: ClientRuntime.Key("UserIdsToRemove"))
            for (index0, userid0) in userIdsToRemove.enumerated() {
                try userIdsToRemoveContainer.encode(userid0, forKey: ClientRuntime.Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("ModifyUserGroup", forKey:ClientRuntime.Key("Action"))
        try container.encode("2015-02-02", forKey:ClientRuntime.Key("Version"))
    }
}
