// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ElastiCacheClientTypes {
    public enum SourceType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case cacheCluster
        case cacheParameterGroup
        case cacheSecurityGroup
        case cacheSubnetGroup
        case replicationGroup
        case user
        case userGroup
        case sdkUnknown(Swift.String)

        public static var allCases: [SourceType] {
            return [
                .cacheCluster,
                .cacheParameterGroup,
                .cacheSecurityGroup,
                .cacheSubnetGroup,
                .replicationGroup,
                .user,
                .userGroup,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .cacheCluster: return "cache-cluster"
            case .cacheParameterGroup: return "cache-parameter-group"
            case .cacheSecurityGroup: return "cache-security-group"
            case .cacheSubnetGroup: return "cache-subnet-group"
            case .replicationGroup: return "replication-group"
            case .user: return "user"
            case .userGroup: return "user-group"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = SourceType(rawValue: rawValue) ?? SourceType.sdkUnknown(rawValue)
        }
    }
}
