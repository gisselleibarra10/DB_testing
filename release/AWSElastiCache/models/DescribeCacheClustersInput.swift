// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input of a DescribeCacheClusters operation.
public struct DescribeCacheClustersInput: Swift.Equatable {
    /// The user-supplied cluster identifier. If this parameter is specified, only information about that specific cluster is returned. This parameter isn't case sensitive.
    public var cacheClusterId: Swift.String?
    /// An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
    public var marker: Swift.String?
    /// The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a marker is included in the response so that the remaining results can be retrieved. Default: 100 Constraints: minimum 20; maximum 100.
    public var maxRecords: Swift.Int?
    /// An optional flag that can be included in the DescribeCacheCluster request to show only nodes (API/CLI: clusters) that are not members of a replication group. In practice, this mean Memcached and single node Redis clusters.
    public var showCacheClustersNotInReplicationGroups: Swift.Bool?
    /// An optional flag that can be included in the DescribeCacheCluster request to retrieve information about the individual cache nodes.
    public var showCacheNodeInfo: Swift.Bool?

    public init (
        cacheClusterId: Swift.String? = nil,
        marker: Swift.String? = nil,
        maxRecords: Swift.Int? = nil,
        showCacheClustersNotInReplicationGroups: Swift.Bool? = nil,
        showCacheNodeInfo: Swift.Bool? = nil
    )
    {
        self.cacheClusterId = cacheClusterId
        self.marker = marker
        self.maxRecords = maxRecords
        self.showCacheClustersNotInReplicationGroups = showCacheClustersNotInReplicationGroups
        self.showCacheNodeInfo = showCacheNodeInfo
    }
}
