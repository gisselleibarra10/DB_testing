// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct IncreaseNodeGroupsInGlobalReplicationGroupInputBody: Swift.Equatable {
    let globalReplicationGroupId: Swift.String?
    let nodeGroupCount: Swift.Int
    let regionalConfigurations: [ElastiCacheClientTypes.RegionalConfiguration]?
    let applyImmediately: Swift.Bool
}

extension IncreaseNodeGroupsInGlobalReplicationGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case applyImmediately = "ApplyImmediately"
        case globalReplicationGroupId = "GlobalReplicationGroupId"
        case nodeGroupCount = "NodeGroupCount"
        case regionalConfigurations = "RegionalConfigurations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let globalReplicationGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .globalReplicationGroupId)
        globalReplicationGroupId = globalReplicationGroupIdDecoded
        let nodeGroupCountDecoded = try containerValues.decode(Swift.Int.self, forKey: .nodeGroupCount)
        nodeGroupCount = nodeGroupCountDecoded
        if containerValues.contains(.regionalConfigurations) {
            struct KeyVal0{struct RegionalConfiguration{}}
            let regionalConfigurationsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.RegionalConfiguration>.CodingKeys.self, forKey: .regionalConfigurations)
            if let regionalConfigurationsWrappedContainer = regionalConfigurationsWrappedContainer {
                let regionalConfigurationsContainer = try regionalConfigurationsWrappedContainer.decodeIfPresent([ElastiCacheClientTypes.RegionalConfiguration].self, forKey: .member)
                var regionalConfigurationsBuffer:[ElastiCacheClientTypes.RegionalConfiguration]? = nil
                if let regionalConfigurationsContainer = regionalConfigurationsContainer {
                    regionalConfigurationsBuffer = [ElastiCacheClientTypes.RegionalConfiguration]()
                    for structureContainer0 in regionalConfigurationsContainer {
                        regionalConfigurationsBuffer?.append(structureContainer0)
                    }
                }
                regionalConfigurations = regionalConfigurationsBuffer
            } else {
                regionalConfigurations = []
            }
        } else {
            regionalConfigurations = nil
        }
        let applyImmediatelyDecoded = try containerValues.decode(Swift.Bool.self, forKey: .applyImmediately)
        applyImmediately = applyImmediatelyDecoded
    }
}
