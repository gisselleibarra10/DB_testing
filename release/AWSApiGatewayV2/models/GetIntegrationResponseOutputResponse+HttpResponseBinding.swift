// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetIntegrationResponseOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: GetIntegrationResponseOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.contentHandlingStrategy = output.contentHandlingStrategy
            self.integrationResponseId = output.integrationResponseId
            self.integrationResponseKey = output.integrationResponseKey
            self.responseParameters = output.responseParameters
            self.responseTemplates = output.responseTemplates
            self.templateSelectionExpression = output.templateSelectionExpression
        } else {
            self.contentHandlingStrategy = nil
            self.integrationResponseId = nil
            self.integrationResponseKey = nil
            self.responseParameters = nil
            self.responseTemplates = nil
            self.templateSelectionExpression = nil
        }
    }
}
