// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateRouteResponseOutputResponseBody: Swift.Equatable {
    let modelSelectionExpression: Swift.String?
    let responseModels: [Swift.String:Swift.String]?
    let responseParameters: [Swift.String:ApiGatewayV2ClientTypes.ParameterConstraints]?
    let routeResponseId: Swift.String?
    let routeResponseKey: Swift.String?
}

extension CreateRouteResponseOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case modelSelectionExpression = "modelSelectionExpression"
        case responseModels = "responseModels"
        case responseParameters = "responseParameters"
        case routeResponseId = "routeResponseId"
        case routeResponseKey = "routeResponseKey"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelSelectionExpressionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelSelectionExpression)
        modelSelectionExpression = modelSelectionExpressionDecoded
        let responseModelsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .responseModels)
        var responseModelsDecoded0: [Swift.String:Swift.String]? = nil
        if let responseModelsContainer = responseModelsContainer {
            responseModelsDecoded0 = [Swift.String:Swift.String]()
            for (key0, stringwithlengthbetween1and1280) in responseModelsContainer {
                if let stringwithlengthbetween1and1280 = stringwithlengthbetween1and1280 {
                    responseModelsDecoded0?[key0] = stringwithlengthbetween1and1280
                }
            }
        }
        responseModels = responseModelsDecoded0
        let responseParametersContainer = try containerValues.decodeIfPresent([Swift.String: ApiGatewayV2ClientTypes.ParameterConstraints?].self, forKey: .responseParameters)
        var responseParametersDecoded0: [Swift.String:ApiGatewayV2ClientTypes.ParameterConstraints]? = nil
        if let responseParametersContainer = responseParametersContainer {
            responseParametersDecoded0 = [Swift.String:ApiGatewayV2ClientTypes.ParameterConstraints]()
            for (key0, parameterconstraints0) in responseParametersContainer {
                if let parameterconstraints0 = parameterconstraints0 {
                    responseParametersDecoded0?[key0] = parameterconstraints0
                }
            }
        }
        responseParameters = responseParametersDecoded0
        let routeResponseIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .routeResponseId)
        routeResponseId = routeResponseIdDecoded
        let routeResponseKeyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .routeResponseKey)
        routeResponseKey = routeResponseKeyDecoded
    }
}
