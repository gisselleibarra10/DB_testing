// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlobalAcceleratorClientTypes.EndpointDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientIPPreservationEnabled = "ClientIPPreservationEnabled"
        case endpointId = "EndpointId"
        case healthReason = "HealthReason"
        case healthState = "HealthState"
        case weight = "Weight"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientIPPreservationEnabled = self.clientIPPreservationEnabled {
            try encodeContainer.encode(clientIPPreservationEnabled, forKey: .clientIPPreservationEnabled)
        }
        if let endpointId = self.endpointId {
            try encodeContainer.encode(endpointId, forKey: .endpointId)
        }
        if let healthReason = self.healthReason {
            try encodeContainer.encode(healthReason, forKey: .healthReason)
        }
        if let healthState = self.healthState {
            try encodeContainer.encode(healthState.rawValue, forKey: .healthState)
        }
        if let weight = self.weight {
            try encodeContainer.encode(weight, forKey: .weight)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endpointId)
        endpointId = endpointIdDecoded
        let weightDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .weight)
        weight = weightDecoded
        let healthStateDecoded = try containerValues.decodeIfPresent(GlobalAcceleratorClientTypes.HealthState.self, forKey: .healthState)
        healthState = healthStateDecoded
        let healthReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .healthReason)
        healthReason = healthReasonDecoded
        let clientIPPreservationEnabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .clientIPPreservationEnabled)
        clientIPPreservationEnabled = clientIPPreservationEnabledDecoded
    }
}
