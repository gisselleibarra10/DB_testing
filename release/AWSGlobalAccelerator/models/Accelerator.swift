// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlobalAcceleratorClientTypes {
    /// An accelerator is a complex type that includes one or more listeners that process inbound connections and then direct traffic to one or more endpoint groups, each of which includes endpoints, such as load balancers.
    public struct Accelerator: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the accelerator.
        public var acceleratorArn: Swift.String?
        /// The date and time that the accelerator was created.
        public var createdTime: ClientRuntime.Date?
        /// The Domain Name System (DNS) name that Global Accelerator creates that points to an accelerator's static IPv4 addresses. The naming convention for the DNS name for an accelerator is the following: A lowercase letter a, followed by a 16-bit random hex string, followed by .awsglobalaccelerator.com. For example: a1234567890abcdef.awsglobalaccelerator.com. If you have a dual-stack accelerator, you also have a second DNS name, DualStackDnsName, that points to both the A record and the AAAA record for all four static addresses for the accelerator (two IPv4 addresses and two IPv6 addresses). For more information about the default DNS name, see [ Support for DNS Addressing in Global Accelerator](https://docs.aws.amazon.com/global-accelerator/latest/dg/dns-addressing-custom-domains.dns-addressing.html) in the Global Accelerator Developer Guide.
        public var dnsName: Swift.String?
        /// The Domain Name System (DNS) name that Global Accelerator creates that points to a dual-stack accelerator's four static IP addresses: two IPv4 addresses and two IPv6 addresses. The naming convention for the dual-stack DNS name is the following: A lowercase letter a, followed by a 16-bit random hex string, followed by .dualstack.awsglobalaccelerator.com. For example: a1234567890abcdef.dualstack.awsglobalaccelerator.com. Note: Global Accelerator also assigns a default DNS name, DnsName, to your accelerator that points just to the static IPv4 addresses. For more information, see [ Support for DNS Addressing in Global Accelerator](https://docs.aws.amazon.com/global-accelerator/latest/dg/about-accelerators.html#about-accelerators.dns-addressing) in the Global Accelerator Developer Guide.
        public var dualStackDnsName: Swift.String?
        /// Indicates whether the accelerator is enabled. The value is true or false. The default value is true. If the value is set to true, the accelerator cannot be deleted. If set to false, accelerator can be deleted.
        public var enabled: Swift.Bool?
        /// A history of changes that you make to an accelerator in Global Accelerator.
        public var events: [GlobalAcceleratorClientTypes.AcceleratorEvent]?
        /// The IP address type that an accelerator supports. For a standard accelerator, the value can be IPV4 or DUAL_STACK.
        public var ipAddressType: GlobalAcceleratorClientTypes.IpAddressType?
        /// The static IP addresses that Global Accelerator associates with the accelerator.
        public var ipSets: [GlobalAcceleratorClientTypes.IpSet]?
        /// The date and time that the accelerator was last modified.
        public var lastModifiedTime: ClientRuntime.Date?
        /// The name of the accelerator. The name must contain only alphanumeric characters or hyphens (-), and must not begin or end with a hyphen.
        public var name: Swift.String?
        /// Describes the deployment status of the accelerator.
        public var status: GlobalAcceleratorClientTypes.AcceleratorStatus?

        public init (
            acceleratorArn: Swift.String? = nil,
            createdTime: ClientRuntime.Date? = nil,
            dnsName: Swift.String? = nil,
            dualStackDnsName: Swift.String? = nil,
            enabled: Swift.Bool? = nil,
            events: [GlobalAcceleratorClientTypes.AcceleratorEvent]? = nil,
            ipAddressType: GlobalAcceleratorClientTypes.IpAddressType? = nil,
            ipSets: [GlobalAcceleratorClientTypes.IpSet]? = nil,
            lastModifiedTime: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            status: GlobalAcceleratorClientTypes.AcceleratorStatus? = nil
        )
        {
            self.acceleratorArn = acceleratorArn
            self.createdTime = createdTime
            self.dnsName = dnsName
            self.dualStackDnsName = dualStackDnsName
            self.enabled = enabled
            self.events = events
            self.ipAddressType = ipAddressType
            self.ipSets = ipSets
            self.lastModifiedTime = lastModifiedTime
            self.name = name
            self.status = status
        }
    }

}
