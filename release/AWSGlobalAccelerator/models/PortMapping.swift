// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GlobalAcceleratorClientTypes {
    /// Returns the ports and associated IP addresses and ports of Amazon EC2 instances in your virtual private cloud (VPC) subnets. Custom routing is a port mapping protocol in Global Accelerator that statically associates port ranges with VPC subnets, which allows Global Accelerator to route to specific instances and ports within one or more subnets.
    public struct PortMapping: Swift.Equatable {
        /// The accelerator port.
        public var acceleratorPort: Swift.Int?
        /// The EC2 instance IP address and port number in the virtual private cloud (VPC) subnet.
        public var destinationSocketAddress: GlobalAcceleratorClientTypes.SocketAddress?
        /// Indicates whether or not a port mapping destination can receive traffic. The value is either ALLOW, if traffic is allowed to the destination, or DENY, if traffic is not allowed to the destination.
        public var destinationTrafficState: GlobalAcceleratorClientTypes.CustomRoutingDestinationTrafficState?
        /// The Amazon Resource Name (ARN) of the endpoint group.
        public var endpointGroupArn: Swift.String?
        /// The IP address of the VPC subnet (the subnet ID).
        public var endpointId: Swift.String?
        /// The protocols supported by the endpoint group.
        public var protocols: [GlobalAcceleratorClientTypes.CustomRoutingProtocol]?

        public init (
            acceleratorPort: Swift.Int? = nil,
            destinationSocketAddress: GlobalAcceleratorClientTypes.SocketAddress? = nil,
            destinationTrafficState: GlobalAcceleratorClientTypes.CustomRoutingDestinationTrafficState? = nil,
            endpointGroupArn: Swift.String? = nil,
            endpointId: Swift.String? = nil,
            protocols: [GlobalAcceleratorClientTypes.CustomRoutingProtocol]? = nil
        )
        {
            self.acceleratorPort = acceleratorPort
            self.destinationSocketAddress = destinationSocketAddress
            self.destinationTrafficState = destinationTrafficState
            self.endpointGroupArn = endpointGroupArn
            self.endpointId = endpointId
            self.protocols = protocols
        }
    }

}
