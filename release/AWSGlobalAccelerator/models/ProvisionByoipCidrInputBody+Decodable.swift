// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ProvisionByoipCidrInputBody: Swift.Equatable {
    let cidr: Swift.String?
    let cidrAuthorizationContext: GlobalAcceleratorClientTypes.CidrAuthorizationContext?
}

extension ProvisionByoipCidrInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cidr = "Cidr"
        case cidrAuthorizationContext = "CidrAuthorizationContext"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cidrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .cidr)
        cidr = cidrDecoded
        let cidrAuthorizationContextDecoded = try containerValues.decodeIfPresent(GlobalAcceleratorClientTypes.CidrAuthorizationContext.self, forKey: .cidrAuthorizationContext)
        cidrAuthorizationContext = cidrAuthorizationContextDecoded
    }
}
