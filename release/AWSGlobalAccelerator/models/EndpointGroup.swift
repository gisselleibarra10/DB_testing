// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension GlobalAcceleratorClientTypes {
    /// A complex type for the endpoint group. An Amazon Web Services Region can have only one endpoint group for a specific listener.
    public struct EndpointGroup: Swift.Equatable {
        /// The list of endpoint objects.
        public var endpointDescriptions: [GlobalAcceleratorClientTypes.EndpointDescription]?
        /// The Amazon Resource Name (ARN) of the endpoint group.
        public var endpointGroupArn: Swift.String?
        /// The Amazon Web Services Region where the endpoint group is located.
        public var endpointGroupRegion: Swift.String?
        /// The time—10 seconds or 30 seconds—between health checks for each endpoint. The default value is 30.
        public var healthCheckIntervalSeconds: Swift.Int?
        /// If the protocol is HTTP/S, then this value provides the ping path that Global Accelerator uses for the destination on the endpoints for health checks. The default is slash (/).
        public var healthCheckPath: Swift.String?
        /// The port that Global Accelerator uses to perform health checks on endpoints that are part of this endpoint group. The default port is the port for the listener that this endpoint group is associated with. If the listener port is a list, Global Accelerator uses the first specified port in the list of ports.
        public var healthCheckPort: Swift.Int?
        /// The protocol that Global Accelerator uses to perform health checks on endpoints that are part of this endpoint group. The default value is TCP.
        public var healthCheckProtocol: GlobalAcceleratorClientTypes.HealthCheckProtocol?
        /// Allows you to override the destination ports used to route traffic to an endpoint. Using a port override lets you map a list of external destination ports (that your users send traffic to) to a list of internal destination ports that you want an application endpoint to receive traffic on.
        public var portOverrides: [GlobalAcceleratorClientTypes.PortOverride]?
        /// The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy. The default value is 3.
        public var thresholdCount: Swift.Int?
        /// The percentage of traffic to send to an Amazon Web Services Region. Additional traffic is distributed to other endpoint groups for this listener. Use this action to increase (dial up) or decrease (dial down) traffic to a specific Region. The percentage is applied to the traffic that would otherwise have been routed to the Region based on optimal routing. The default value is 100.
        public var trafficDialPercentage: Swift.Float?

        public init (
            endpointDescriptions: [GlobalAcceleratorClientTypes.EndpointDescription]? = nil,
            endpointGroupArn: Swift.String? = nil,
            endpointGroupRegion: Swift.String? = nil,
            healthCheckIntervalSeconds: Swift.Int? = nil,
            healthCheckPath: Swift.String? = nil,
            healthCheckPort: Swift.Int? = nil,
            healthCheckProtocol: GlobalAcceleratorClientTypes.HealthCheckProtocol? = nil,
            portOverrides: [GlobalAcceleratorClientTypes.PortOverride]? = nil,
            thresholdCount: Swift.Int? = nil,
            trafficDialPercentage: Swift.Float? = nil
        )
        {
            self.endpointDescriptions = endpointDescriptions
            self.endpointGroupArn = endpointGroupArn
            self.endpointGroupRegion = endpointGroupRegion
            self.healthCheckIntervalSeconds = healthCheckIntervalSeconds
            self.healthCheckPath = healthCheckPath
            self.healthCheckPort = healthCheckPort
            self.healthCheckProtocol = healthCheckProtocol
            self.portOverrides = portOverrides
            self.thresholdCount = thresholdCount
            self.trafficDialPercentage = trafficDialPercentage
        }
    }

}
