// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateEndpointGroupInput: Swift.Equatable {
    /// The list of endpoint objects.
    public var endpointConfigurations: [GlobalAcceleratorClientTypes.EndpointConfiguration]?
    /// The Amazon Web Services Region where the endpoint group is located. A listener can have only one endpoint group in a specific Region.
    /// This member is required.
    public var endpointGroupRegion: Swift.String?
    /// The time—10 seconds or 30 seconds—between each health check for an endpoint. The default value is 30.
    public var healthCheckIntervalSeconds: Swift.Int?
    /// If the protocol is HTTP/S, then this specifies the path that is the destination for health check targets. The default value is slash (/).
    public var healthCheckPath: Swift.String?
    /// The port that Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default port is the listener port that this endpoint group is associated with. If listener port is a list of ports, Global Accelerator uses the first port in the list.
    public var healthCheckPort: Swift.Int?
    /// The protocol that Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default value is TCP.
    public var healthCheckProtocol: GlobalAcceleratorClientTypes.HealthCheckProtocol?
    /// A unique, case-sensitive identifier that you provide to ensure the idempotency—that is, the uniqueness—of the request.
    /// This member is required.
    public var idempotencyToken: Swift.String?
    /// The Amazon Resource Name (ARN) of the listener.
    /// This member is required.
    public var listenerArn: Swift.String?
    /// Override specific listener ports used to route traffic to endpoints that are part of this endpoint group. For example, you can create a port override in which the listener receives user traffic on ports 80 and 443, but your accelerator routes that traffic to ports 1080 and 1443, respectively, on the endpoints. For more information, see [ Overriding listener ports](https://docs.aws.amazon.com/global-accelerator/latest/dg/about-endpoint-groups-port-override.html) in the Global Accelerator Developer Guide.
    public var portOverrides: [GlobalAcceleratorClientTypes.PortOverride]?
    /// The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy. The default value is 3.
    public var thresholdCount: Swift.Int?
    /// The percentage of traffic to send to an Amazon Web Services Region. Additional traffic is distributed to other endpoint groups for this listener. Use this action to increase (dial up) or decrease (dial down) traffic to a specific Region. The percentage is applied to the traffic that would otherwise have been routed to the Region based on optimal routing. The default value is 100.
    public var trafficDialPercentage: Swift.Float?

    public init (
        endpointConfigurations: [GlobalAcceleratorClientTypes.EndpointConfiguration]? = nil,
        endpointGroupRegion: Swift.String? = nil,
        healthCheckIntervalSeconds: Swift.Int? = nil,
        healthCheckPath: Swift.String? = nil,
        healthCheckPort: Swift.Int? = nil,
        healthCheckProtocol: GlobalAcceleratorClientTypes.HealthCheckProtocol? = nil,
        idempotencyToken: Swift.String? = nil,
        listenerArn: Swift.String? = nil,
        portOverrides: [GlobalAcceleratorClientTypes.PortOverride]? = nil,
        thresholdCount: Swift.Int? = nil,
        trafficDialPercentage: Swift.Float? = nil
    )
    {
        self.endpointConfigurations = endpointConfigurations
        self.endpointGroupRegion = endpointGroupRegion
        self.healthCheckIntervalSeconds = healthCheckIntervalSeconds
        self.healthCheckPath = healthCheckPath
        self.healthCheckPort = healthCheckPort
        self.healthCheckProtocol = healthCheckProtocol
        self.idempotencyToken = idempotencyToken
        self.listenerArn = listenerArn
        self.portOverrides = portOverrides
        self.thresholdCount = thresholdCount
        self.trafficDialPercentage = trafficDialPercentage
    }
}
