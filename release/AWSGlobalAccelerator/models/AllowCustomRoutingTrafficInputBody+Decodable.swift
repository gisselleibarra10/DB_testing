// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AllowCustomRoutingTrafficInputBody: Swift.Equatable {
    let endpointGroupArn: Swift.String?
    let endpointId: Swift.String?
    let destinationAddresses: [Swift.String]?
    let destinationPorts: [Swift.Int]?
    let allowAllTrafficToEndpoint: Swift.Bool?
}

extension AllowCustomRoutingTrafficInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowAllTrafficToEndpoint = "AllowAllTrafficToEndpoint"
        case destinationAddresses = "DestinationAddresses"
        case destinationPorts = "DestinationPorts"
        case endpointGroupArn = "EndpointGroupArn"
        case endpointId = "EndpointId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endpointGroupArn)
        endpointGroupArn = endpointGroupArnDecoded
        let endpointIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endpointId)
        endpointId = endpointIdDecoded
        let destinationAddressesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .destinationAddresses)
        var destinationAddressesDecoded0:[Swift.String]? = nil
        if let destinationAddressesContainer = destinationAddressesContainer {
            destinationAddressesDecoded0 = [Swift.String]()
            for string0 in destinationAddressesContainer {
                if let string0 = string0 {
                    destinationAddressesDecoded0?.append(string0)
                }
            }
        }
        destinationAddresses = destinationAddressesDecoded0
        let destinationPortsContainer = try containerValues.decodeIfPresent([Swift.Int?].self, forKey: .destinationPorts)
        var destinationPortsDecoded0:[Swift.Int]? = nil
        if let destinationPortsContainer = destinationPortsContainer {
            destinationPortsDecoded0 = [Swift.Int]()
            for integer0 in destinationPortsContainer {
                if let integer0 = integer0 {
                    destinationPortsDecoded0?.append(integer0)
                }
            }
        }
        destinationPorts = destinationPortsDecoded0
        let allowAllTrafficToEndpointDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .allowAllTrafficToEndpoint)
        allowAllTrafficToEndpoint = allowAllTrafficToEndpointDecoded
    }
}
