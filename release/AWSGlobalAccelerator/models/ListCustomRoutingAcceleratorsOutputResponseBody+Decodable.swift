// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCustomRoutingAcceleratorsOutputResponseBody: Swift.Equatable {
    let accelerators: [GlobalAcceleratorClientTypes.CustomRoutingAccelerator]?
    let nextToken: Swift.String?
}

extension ListCustomRoutingAcceleratorsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accelerators = "Accelerators"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceleratorsContainer = try containerValues.decodeIfPresent([GlobalAcceleratorClientTypes.CustomRoutingAccelerator?].self, forKey: .accelerators)
        var acceleratorsDecoded0:[GlobalAcceleratorClientTypes.CustomRoutingAccelerator]? = nil
        if let acceleratorsContainer = acceleratorsContainer {
            acceleratorsDecoded0 = [GlobalAcceleratorClientTypes.CustomRoutingAccelerator]()
            for structure0 in acceleratorsContainer {
                if let structure0 = structure0 {
                    acceleratorsDecoded0?.append(structure0)
                }
            }
        }
        accelerators = acceleratorsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
