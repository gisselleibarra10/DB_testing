// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListByoipCidrsOutputResponseBody: Swift.Equatable {
    let byoipCidrs: [GlobalAcceleratorClientTypes.ByoipCidr]?
    let nextToken: Swift.String?
}

extension ListByoipCidrsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case byoipCidrs = "ByoipCidrs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let byoipCidrsContainer = try containerValues.decodeIfPresent([GlobalAcceleratorClientTypes.ByoipCidr?].self, forKey: .byoipCidrs)
        var byoipCidrsDecoded0:[GlobalAcceleratorClientTypes.ByoipCidr]? = nil
        if let byoipCidrsContainer = byoipCidrsContainer {
            byoipCidrsDecoded0 = [GlobalAcceleratorClientTypes.ByoipCidr]()
            for structure0 in byoipCidrsContainer {
                if let structure0 = structure0 {
                    byoipCidrsDecoded0?.append(structure0)
                }
            }
        }
        byoipCidrs = byoipCidrsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
