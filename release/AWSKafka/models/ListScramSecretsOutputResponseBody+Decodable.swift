// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListScramSecretsOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let secretArnList: [Swift.String]?
}

extension ListScramSecretsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case secretArnList = "secretArnList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let secretArnListContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .secretArnList)
        var secretArnListDecoded0:[Swift.String]? = nil
        if let secretArnListContainer = secretArnListContainer {
            secretArnListDecoded0 = [Swift.String]()
            for string0 in secretArnListContainer {
                if let string0 = string0 {
                    secretArnListDecoded0?.append(string0)
                }
            }
        }
        secretArnList = secretArnListDecoded0
    }
}
