// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KafkaClientTypes {
    /// Returns information about a cluster.
    public struct Cluster: Swift.Equatable {
        /// The Amazon Resource Name (ARN) that uniquely identifies a cluster operation.
        public var activeOperationArn: Swift.String?
        /// The Amazon Resource Name (ARN) that uniquely identifies the cluster.
        public var clusterArn: Swift.String?
        /// The name of the cluster.
        public var clusterName: Swift.String?
        /// Cluster Type.
        public var clusterType: KafkaClientTypes.ClusterType?
        /// The time when the cluster was created.
        public var creationTime: ClientRuntime.Date?
        /// The current version of the MSK cluster.
        public var currentVersion: Swift.String?
        /// Information about the provisioned cluster.
        public var provisioned: KafkaClientTypes.Provisioned?
        /// Information about the serverless cluster.
        public var serverless: KafkaClientTypes.Serverless?
        /// The state of the cluster. The possible states are ACTIVE, CREATING, DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.
        public var state: KafkaClientTypes.ClusterState?
        /// State Info for the Amazon MSK cluster.
        public var stateInfo: KafkaClientTypes.StateInfo?
        /// Tags attached to the cluster.
        public var tags: [Swift.String:Swift.String]?

        public init (
            activeOperationArn: Swift.String? = nil,
            clusterArn: Swift.String? = nil,
            clusterName: Swift.String? = nil,
            clusterType: KafkaClientTypes.ClusterType? = nil,
            creationTime: ClientRuntime.Date? = nil,
            currentVersion: Swift.String? = nil,
            provisioned: KafkaClientTypes.Provisioned? = nil,
            serverless: KafkaClientTypes.Serverless? = nil,
            state: KafkaClientTypes.ClusterState? = nil,
            stateInfo: KafkaClientTypes.StateInfo? = nil,
            tags: [Swift.String:Swift.String]? = nil
        )
        {
            self.activeOperationArn = activeOperationArn
            self.clusterArn = clusterArn
            self.clusterName = clusterName
            self.clusterType = clusterType
            self.creationTime = creationTime
            self.currentVersion = currentVersion
            self.provisioned = provisioned
            self.serverless = serverless
            self.state = state
            self.stateInfo = stateInfo
            self.tags = tags
        }
    }

}
