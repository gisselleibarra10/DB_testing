// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KafkaClientTypes.ZookeeperNodeInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attachedENIId = "attachedENIId"
        case clientVpcIpAddress = "clientVpcIpAddress"
        case endpoints = "endpoints"
        case zookeeperId = "zookeeperId"
        case zookeeperVersion = "zookeeperVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attachedENIId = self.attachedENIId {
            try encodeContainer.encode(attachedENIId, forKey: .attachedENIId)
        }
        if let clientVpcIpAddress = self.clientVpcIpAddress {
            try encodeContainer.encode(clientVpcIpAddress, forKey: .clientVpcIpAddress)
        }
        if let endpoints = endpoints {
            var endpointsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .endpoints)
            for __listof__string0 in endpoints {
                try endpointsContainer.encode(__listof__string0)
            }
        }
        if let zookeeperId = self.zookeeperId {
            try encodeContainer.encode(zookeeperId, forKey: .zookeeperId)
        }
        if let zookeeperVersion = self.zookeeperVersion {
            try encodeContainer.encode(zookeeperVersion, forKey: .zookeeperVersion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachedENIIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attachedENIId)
        attachedENIId = attachedENIIdDecoded
        let clientVpcIpAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientVpcIpAddress)
        clientVpcIpAddress = clientVpcIpAddressDecoded
        let endpointsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .endpoints)
        var endpointsDecoded0:[Swift.String]? = nil
        if let endpointsContainer = endpointsContainer {
            endpointsDecoded0 = [Swift.String]()
            for string0 in endpointsContainer {
                if let string0 = string0 {
                    endpointsDecoded0?.append(string0)
                }
            }
        }
        endpoints = endpointsDecoded0
        let zookeeperIdDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .zookeeperId)
        zookeeperId = zookeeperIdDecoded
        let zookeeperVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .zookeeperVersion)
        zookeeperVersion = zookeeperVersionDecoded
    }
}
