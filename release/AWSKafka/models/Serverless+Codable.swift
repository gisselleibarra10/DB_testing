// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KafkaClientTypes.Serverless: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientAuthentication = "clientAuthentication"
        case vpcConfigs = "vpcConfigs"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientAuthentication = self.clientAuthentication {
            try encodeContainer.encode(clientAuthentication, forKey: .clientAuthentication)
        }
        if let vpcConfigs = vpcConfigs {
            var vpcConfigsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .vpcConfigs)
            for __listofvpcconfig0 in vpcConfigs {
                try vpcConfigsContainer.encode(__listofvpcconfig0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vpcConfigsContainer = try containerValues.decodeIfPresent([KafkaClientTypes.VpcConfig?].self, forKey: .vpcConfigs)
        var vpcConfigsDecoded0:[KafkaClientTypes.VpcConfig]? = nil
        if let vpcConfigsContainer = vpcConfigsContainer {
            vpcConfigsDecoded0 = [KafkaClientTypes.VpcConfig]()
            for structure0 in vpcConfigsContainer {
                if let structure0 = structure0 {
                    vpcConfigsDecoded0?.append(structure0)
                }
            }
        }
        vpcConfigs = vpcConfigsDecoded0
        let clientAuthenticationDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.ServerlessClientAuthentication.self, forKey: .clientAuthentication)
        clientAuthentication = clientAuthenticationDecoded
    }
}
