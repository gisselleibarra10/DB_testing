// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConfigurationOutputResponseBody: Swift.Equatable {
    let arn: Swift.String?
    let creationTime: ClientRuntime.Date?
    let description: Swift.String?
    let kafkaVersions: [Swift.String]?
    let latestRevision: KafkaClientTypes.ConfigurationRevision?
    let name: Swift.String?
    let state: KafkaClientTypes.ConfigurationState?
}

extension DescribeConfigurationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn = "arn"
        case creationTime = "creationTime"
        case description = "description"
        case kafkaVersions = "kafkaVersions"
        case latestRevision = "latestRevision"
        case name = "name"
        case state = "state"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let kafkaVersionsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .kafkaVersions)
        var kafkaVersionsDecoded0:[Swift.String]? = nil
        if let kafkaVersionsContainer = kafkaVersionsContainer {
            kafkaVersionsDecoded0 = [Swift.String]()
            for string0 in kafkaVersionsContainer {
                if let string0 = string0 {
                    kafkaVersionsDecoded0?.append(string0)
                }
            }
        }
        kafkaVersions = kafkaVersionsDecoded0
        let latestRevisionDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.ConfigurationRevision.self, forKey: .latestRevision)
        latestRevision = latestRevisionDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let stateDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.ConfigurationState.self, forKey: .state)
        state = stateDecoded
    }
}
