// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KafkaClientTypes.EncryptionInTransit: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientBroker = "clientBroker"
        case inCluster = "inCluster"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientBroker = self.clientBroker {
            try encodeContainer.encode(clientBroker.rawValue, forKey: .clientBroker)
        }
        if let inCluster = self.inCluster {
            try encodeContainer.encode(inCluster, forKey: .inCluster)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientBrokerDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.ClientBroker.self, forKey: .clientBroker)
        clientBroker = clientBrokerDecoded
        let inClusterDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .inCluster)
        inCluster = inClusterDecoded
    }
}
