// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KafkaClientTypes {
    /// Represents an MSK Configuration.
    public struct Configuration: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the configuration.
        /// This member is required.
        public var arn: Swift.String?
        /// The time when the configuration was created.
        /// This member is required.
        public var creationTime: ClientRuntime.Date?
        /// The description of the configuration.
        /// This member is required.
        public var description: Swift.String?
        /// An array of the versions of Apache Kafka with which you can use this MSK configuration. You can use this configuration for an MSK cluster only if the Apache Kafka version specified for the cluster appears in this array.
        /// This member is required.
        public var kafkaVersions: [Swift.String]?
        /// Latest revision of the configuration.
        /// This member is required.
        public var latestRevision: KafkaClientTypes.ConfigurationRevision?
        /// The name of the configuration.
        /// This member is required.
        public var name: Swift.String?
        /// The state of the configuration. The possible states are ACTIVE, DELETING, and DELETE_FAILED.
        /// This member is required.
        public var state: KafkaClientTypes.ConfigurationState?

        public init (
            arn: Swift.String? = nil,
            creationTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            kafkaVersions: [Swift.String]? = nil,
            latestRevision: KafkaClientTypes.ConfigurationRevision? = nil,
            name: Swift.String? = nil,
            state: KafkaClientTypes.ConfigurationState? = nil
        )
        {
            self.arn = arn
            self.creationTime = creationTime
            self.description = description
            self.kafkaVersions = kafkaVersions
            self.latestRevision = latestRevision
            self.name = name
            self.state = state
        }
    }

}
