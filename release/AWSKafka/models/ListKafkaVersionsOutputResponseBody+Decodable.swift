// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListKafkaVersionsOutputResponseBody: Swift.Equatable {
    let kafkaVersions: [KafkaClientTypes.KafkaVersion]?
    let nextToken: Swift.String?
}

extension ListKafkaVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case kafkaVersions = "kafkaVersions"
        case nextToken = "nextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let kafkaVersionsContainer = try containerValues.decodeIfPresent([KafkaClientTypes.KafkaVersion?].self, forKey: .kafkaVersions)
        var kafkaVersionsDecoded0:[KafkaClientTypes.KafkaVersion]? = nil
        if let kafkaVersionsContainer = kafkaVersionsContainer {
            kafkaVersionsDecoded0 = [KafkaClientTypes.KafkaVersion]()
            for structure0 in kafkaVersionsContainer {
                if let structure0 = structure0 {
                    kafkaVersionsDecoded0?.append(structure0)
                }
            }
        }
        kafkaVersions = kafkaVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
