// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNodesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let nodeInfoList: [KafkaClientTypes.NodeInfo]?
}

extension ListNodesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "nextToken"
        case nodeInfoList = "nodeInfoList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let nodeInfoListContainer = try containerValues.decodeIfPresent([KafkaClientTypes.NodeInfo?].self, forKey: .nodeInfoList)
        var nodeInfoListDecoded0:[KafkaClientTypes.NodeInfo]? = nil
        if let nodeInfoListContainer = nodeInfoListContainer {
            nodeInfoListDecoded0 = [KafkaClientTypes.NodeInfo]()
            for structure0 in nodeInfoListContainer {
                if let structure0 = structure0 {
                    nodeInfoListDecoded0?.append(structure0)
                }
            }
        }
        nodeInfoList = nodeInfoListDecoded0
    }
}
