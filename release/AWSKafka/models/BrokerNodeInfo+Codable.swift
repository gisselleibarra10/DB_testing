// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KafkaClientTypes.BrokerNodeInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attachedENIId = "attachedENIId"
        case brokerId = "brokerId"
        case clientSubnet = "clientSubnet"
        case clientVpcIpAddress = "clientVpcIpAddress"
        case currentBrokerSoftwareInfo = "currentBrokerSoftwareInfo"
        case endpoints = "endpoints"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attachedENIId = self.attachedENIId {
            try encodeContainer.encode(attachedENIId, forKey: .attachedENIId)
        }
        if let brokerId = self.brokerId {
            try encodeContainer.encode(brokerId, forKey: .brokerId)
        }
        if let clientSubnet = self.clientSubnet {
            try encodeContainer.encode(clientSubnet, forKey: .clientSubnet)
        }
        if let clientVpcIpAddress = self.clientVpcIpAddress {
            try encodeContainer.encode(clientVpcIpAddress, forKey: .clientVpcIpAddress)
        }
        if let currentBrokerSoftwareInfo = self.currentBrokerSoftwareInfo {
            try encodeContainer.encode(currentBrokerSoftwareInfo, forKey: .currentBrokerSoftwareInfo)
        }
        if let endpoints = endpoints {
            var endpointsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .endpoints)
            for __listof__string0 in endpoints {
                try endpointsContainer.encode(__listof__string0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachedENIIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attachedENIId)
        attachedENIId = attachedENIIdDecoded
        let brokerIdDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .brokerId)
        brokerId = brokerIdDecoded
        let clientSubnetDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientSubnet)
        clientSubnet = clientSubnetDecoded
        let clientVpcIpAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientVpcIpAddress)
        clientVpcIpAddress = clientVpcIpAddressDecoded
        let currentBrokerSoftwareInfoDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.BrokerSoftwareInfo.self, forKey: .currentBrokerSoftwareInfo)
        currentBrokerSoftwareInfo = currentBrokerSoftwareInfoDecoded
        let endpointsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .endpoints)
        var endpointsDecoded0:[Swift.String]? = nil
        if let endpointsContainer = endpointsContainer {
            endpointsDecoded0 = [Swift.String]()
            for string0 in endpointsContainer {
                if let string0 = string0 {
                    endpointsDecoded0?.append(string0)
                }
            }
        }
        endpoints = endpointsDecoded0
    }
}
