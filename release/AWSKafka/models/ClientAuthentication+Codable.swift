// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KafkaClientTypes.ClientAuthentication: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case sasl = "sasl"
        case tls = "tls"
        case unauthenticated = "unauthenticated"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sasl = self.sasl {
            try encodeContainer.encode(sasl, forKey: .sasl)
        }
        if let tls = self.tls {
            try encodeContainer.encode(tls, forKey: .tls)
        }
        if let unauthenticated = self.unauthenticated {
            try encodeContainer.encode(unauthenticated, forKey: .unauthenticated)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let saslDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.Sasl.self, forKey: .sasl)
        sasl = saslDecoded
        let tlsDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.Tls.self, forKey: .tls)
        tls = tlsDecoded
        let unauthenticatedDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.Unauthenticated.self, forKey: .unauthenticated)
        unauthenticated = unauthenticatedDecoded
    }
}
