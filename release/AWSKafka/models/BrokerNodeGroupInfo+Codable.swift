// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KafkaClientTypes.BrokerNodeGroupInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case brokerAZDistribution = "brokerAZDistribution"
        case clientSubnets = "clientSubnets"
        case connectivityInfo = "connectivityInfo"
        case instanceType = "instanceType"
        case securityGroups = "securityGroups"
        case storageInfo = "storageInfo"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let brokerAZDistribution = self.brokerAZDistribution {
            try encodeContainer.encode(brokerAZDistribution.rawValue, forKey: .brokerAZDistribution)
        }
        if let clientSubnets = clientSubnets {
            var clientSubnetsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .clientSubnets)
            for __listof__string0 in clientSubnets {
                try clientSubnetsContainer.encode(__listof__string0)
            }
        }
        if let connectivityInfo = self.connectivityInfo {
            try encodeContainer.encode(connectivityInfo, forKey: .connectivityInfo)
        }
        if let instanceType = self.instanceType {
            try encodeContainer.encode(instanceType, forKey: .instanceType)
        }
        if let securityGroups = securityGroups {
            var securityGroupsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .securityGroups)
            for __listof__string0 in securityGroups {
                try securityGroupsContainer.encode(__listof__string0)
            }
        }
        if let storageInfo = self.storageInfo {
            try encodeContainer.encode(storageInfo, forKey: .storageInfo)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let brokerAZDistributionDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.BrokerAZDistribution.self, forKey: .brokerAZDistribution)
        brokerAZDistribution = brokerAZDistributionDecoded
        let clientSubnetsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .clientSubnets)
        var clientSubnetsDecoded0:[Swift.String]? = nil
        if let clientSubnetsContainer = clientSubnetsContainer {
            clientSubnetsDecoded0 = [Swift.String]()
            for string0 in clientSubnetsContainer {
                if let string0 = string0 {
                    clientSubnetsDecoded0?.append(string0)
                }
            }
        }
        clientSubnets = clientSubnetsDecoded0
        let instanceTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceType)
        instanceType = instanceTypeDecoded
        let securityGroupsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .securityGroups)
        var securityGroupsDecoded0:[Swift.String]? = nil
        if let securityGroupsContainer = securityGroupsContainer {
            securityGroupsDecoded0 = [Swift.String]()
            for string0 in securityGroupsContainer {
                if let string0 = string0 {
                    securityGroupsDecoded0?.append(string0)
                }
            }
        }
        securityGroups = securityGroupsDecoded0
        let storageInfoDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.StorageInfo.self, forKey: .storageInfo)
        storageInfo = storageInfoDecoded
        let connectivityInfoDecoded = try containerValues.decodeIfPresent(KafkaClientTypes.ConnectivityInfo.self, forKey: .connectivityInfo)
        connectivityInfo = connectivityInfoDecoded
    }
}
