// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension KafkaClientTypes {
    /// Provisioned cluster.
    public struct Provisioned: Swift.Equatable {
        /// Information about the brokers.
        /// This member is required.
        public var brokerNodeGroupInfo: KafkaClientTypes.BrokerNodeGroupInfo?
        /// Includes all client authentication information.
        public var clientAuthentication: KafkaClientTypes.ClientAuthentication?
        /// Information about the Apache Kafka version deployed on the brokers.
        public var currentBrokerSoftwareInfo: KafkaClientTypes.BrokerSoftwareInfo?
        /// Includes all encryption-related information.
        public var encryptionInfo: KafkaClientTypes.EncryptionInfo?
        /// Specifies the level of monitoring for the MSK cluster. The possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.
        public var enhancedMonitoring: KafkaClientTypes.EnhancedMonitoring?
        /// Log delivery information for the cluster.
        public var loggingInfo: KafkaClientTypes.LoggingInfo?
        /// The number of broker nodes in the cluster.
        /// This member is required.
        public var numberOfBrokerNodes: Swift.Int?
        /// The settings for open monitoring.
        public var openMonitoring: KafkaClientTypes.OpenMonitoringInfo?
        /// The connection string to use to connect to the Apache ZooKeeper cluster.
        public var zookeeperConnectString: Swift.String?
        /// The connection string to use to connect to the Apache ZooKeeper cluster on a TLS port.
        public var zookeeperConnectStringTls: Swift.String?

        public init (
            brokerNodeGroupInfo: KafkaClientTypes.BrokerNodeGroupInfo? = nil,
            clientAuthentication: KafkaClientTypes.ClientAuthentication? = nil,
            currentBrokerSoftwareInfo: KafkaClientTypes.BrokerSoftwareInfo? = nil,
            encryptionInfo: KafkaClientTypes.EncryptionInfo? = nil,
            enhancedMonitoring: KafkaClientTypes.EnhancedMonitoring? = nil,
            loggingInfo: KafkaClientTypes.LoggingInfo? = nil,
            numberOfBrokerNodes: Swift.Int? = nil,
            openMonitoring: KafkaClientTypes.OpenMonitoringInfo? = nil,
            zookeeperConnectString: Swift.String? = nil,
            zookeeperConnectStringTls: Swift.String? = nil
        )
        {
            self.brokerNodeGroupInfo = brokerNodeGroupInfo
            self.clientAuthentication = clientAuthentication
            self.currentBrokerSoftwareInfo = currentBrokerSoftwareInfo
            self.encryptionInfo = encryptionInfo
            self.enhancedMonitoring = enhancedMonitoring
            self.loggingInfo = loggingInfo
            self.numberOfBrokerNodes = numberOfBrokerNodes
            self.openMonitoring = openMonitoring
            self.zookeeperConnectString = zookeeperConnectString
            self.zookeeperConnectStringTls = zookeeperConnectStringTls
        }
    }

}
