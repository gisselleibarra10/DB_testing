// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAttributeValuesOutputResponseBody: Swift.Equatable {
    let attributeValues: [PricingClientTypes.AttributeValue]?
    let nextToken: Swift.String?
}

extension GetAttributeValuesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributeValues = "AttributeValues"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributeValuesContainer = try containerValues.decodeIfPresent([PricingClientTypes.AttributeValue?].self, forKey: .attributeValues)
        var attributeValuesDecoded0:[PricingClientTypes.AttributeValue]? = nil
        if let attributeValuesContainer = attributeValuesContainer {
            attributeValuesDecoded0 = [PricingClientTypes.AttributeValue]()
            for structure0 in attributeValuesContainer {
                if let structure0 = structure0 {
                    attributeValuesDecoded0?.append(structure0)
                }
            }
        }
        attributeValues = attributeValuesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
