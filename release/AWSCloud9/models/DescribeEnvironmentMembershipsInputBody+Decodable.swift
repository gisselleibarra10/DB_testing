// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEnvironmentMembershipsInputBody: Swift.Equatable {
    let userArn: Swift.String?
    let environmentId: Swift.String?
    let permissions: [Cloud9ClientTypes.Permissions]?
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension DescribeEnvironmentMembershipsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case environmentId
        case maxResults
        case nextToken
        case permissions
        case userArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userArn)
        userArn = userArnDecoded
        let environmentIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .environmentId)
        environmentId = environmentIdDecoded
        let permissionsContainer = try containerValues.decodeIfPresent([Cloud9ClientTypes.Permissions?].self, forKey: .permissions)
        var permissionsDecoded0:[Cloud9ClientTypes.Permissions]? = nil
        if let permissionsContainer = permissionsContainer {
            permissionsDecoded0 = [Cloud9ClientTypes.Permissions]()
            for string0 in permissionsContainer {
                if let string0 = string0 {
                    permissionsDecoded0?.append(string0)
                }
            }
        }
        permissions = permissionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
