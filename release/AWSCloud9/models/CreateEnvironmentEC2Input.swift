// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateEnvironmentEC2Input: Swift.Equatable {
    /// The number of minutes until the running instance is shut down after the environment has last been used.
    public var automaticStopTimeMinutes: Swift.Int?
    /// A unique, case-sensitive string that helps Cloud9 to ensure this operation completes no more than one time. For more information, see [Client Tokens](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html) in the Amazon EC2 API Reference.
    public var clientRequestToken: Swift.String?
    /// The connection type used for connecting to an Amazon EC2 environment. Valid values are CONNECT_SSH (default) and CONNECT_SSM (connected through Amazon EC2 Systems Manager). For more information, see [Accessing no-ingress EC2 instances with Amazon EC2 Systems Manager](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html) in the Cloud9 User Guide.
    public var connectionType: Cloud9ClientTypes.ConnectionType?
    /// The description of the environment to create.
    public var description: Swift.String?
    /// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    public var dryRun: Swift.Bool?
    /// The identifier for the Amazon Machine Image (AMI) that's used to create the EC2 instance. To choose an AMI for the instance, you must specify a valid AMI alias or a valid Amazon EC2 Systems Manager (SSM) path. The default AMI is used if the parameter isn't explicitly assigned a value in the request. Because Amazon Linux AMI has ended standard support as of December 31, 2020, we recommend you choose Amazon Linux 2, which includes long term support through 2023. AMI aliases
    ///
    /// * Amazon Linux (default): amazonlinux-1-x86_64
    ///
    /// * Amazon Linux 2: amazonlinux-2-x86_64
    ///
    /// * Ubuntu 18.04: ubuntu-18.04-x86_64
    ///
    ///
    /// SSM paths
    ///
    /// * Amazon Linux (default): resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64
    ///
    /// * Amazon Linux 2: resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64
    ///
    /// * Ubuntu 18.04: resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64
    public var imageId: Swift.String?
    /// The type of instance to connect to the environment (for example, t2.micro).
    /// This member is required.
    public var instanceType: Swift.String?
    /// The name of the environment to create. This name is visible to other IAM users in the same Amazon Web Services account.
    /// This member is required.
    public var name: Swift.String?
    /// The Amazon Resource Name (ARN) of the environment owner. This ARN can be the ARN of any IAM principal. If this value is not specified, the ARN defaults to this environment's creator.
    public var ownerArn: Swift.String?
    /// The ID of the subnet in Amazon VPC that Cloud9 will use to communicate with the Amazon EC2 instance.
    public var subnetId: Swift.String?
    /// An array of key-value pairs that will be associated with the new Cloud9 development environment.
    public var tags: [Cloud9ClientTypes.Tag]?

    public init (
        automaticStopTimeMinutes: Swift.Int? = nil,
        clientRequestToken: Swift.String? = nil,
        connectionType: Cloud9ClientTypes.ConnectionType? = nil,
        description: Swift.String? = nil,
        dryRun: Swift.Bool? = nil,
        imageId: Swift.String? = nil,
        instanceType: Swift.String? = nil,
        name: Swift.String? = nil,
        ownerArn: Swift.String? = nil,
        subnetId: Swift.String? = nil,
        tags: [Cloud9ClientTypes.Tag]? = nil
    )
    {
        self.automaticStopTimeMinutes = automaticStopTimeMinutes
        self.clientRequestToken = clientRequestToken
        self.connectionType = connectionType
        self.description = description
        self.dryRun = dryRun
        self.imageId = imageId
        self.instanceType = instanceType
        self.name = name
        self.ownerArn = ownerArn
        self.subnetId = subnetId
        self.tags = tags
    }
}
