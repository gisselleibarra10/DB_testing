// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Cloud9ClientTypes.Environment: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case arn
        case connectionType
        case description
        case id
        case lifecycle
        case managedCredentialsStatus
        case name
        case ownerArn
        case type
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let connectionType = self.connectionType {
            try encodeContainer.encode(connectionType.rawValue, forKey: .connectionType)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let lifecycle = self.lifecycle {
            try encodeContainer.encode(lifecycle, forKey: .lifecycle)
        }
        if let managedCredentialsStatus = self.managedCredentialsStatus {
            try encodeContainer.encode(managedCredentialsStatus.rawValue, forKey: .managedCredentialsStatus)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let ownerArn = self.ownerArn {
            try encodeContainer.encode(ownerArn, forKey: .ownerArn)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let typeDecoded = try containerValues.decodeIfPresent(Cloud9ClientTypes.EnvironmentType.self, forKey: .type)
        type = typeDecoded
        let connectionTypeDecoded = try containerValues.decodeIfPresent(Cloud9ClientTypes.ConnectionType.self, forKey: .connectionType)
        connectionType = connectionTypeDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let ownerArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ownerArn)
        ownerArn = ownerArnDecoded
        let lifecycleDecoded = try containerValues.decodeIfPresent(Cloud9ClientTypes.EnvironmentLifecycle.self, forKey: .lifecycle)
        lifecycle = lifecycleDecoded
        let managedCredentialsStatusDecoded = try containerValues.decodeIfPresent(Cloud9ClientTypes.ManagedCredentialsStatus.self, forKey: .managedCredentialsStatus)
        managedCredentialsStatus = managedCredentialsStatusDecoded
    }
}
