// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListFeatureGroupsInput: Swift.Equatable {
    /// Use this parameter to search for FeatureGroupss created after a specific date and time.
    public var creationTimeAfter: ClientRuntime.Date?
    /// Use this parameter to search for FeatureGroupss created before a specific date and time.
    public var creationTimeBefore: ClientRuntime.Date?
    /// A FeatureGroup status. Filters by FeatureGroup status.
    public var featureGroupStatusEquals: SageMakerClientTypes.FeatureGroupStatus?
    /// The maximum number of results returned by ListFeatureGroups.
    public var maxResults: Swift.Int?
    /// A string that partially matches one or more FeatureGroups names. Filters FeatureGroups by name.
    public var nameContains: Swift.String?
    /// A token to resume pagination of ListFeatureGroups results.
    public var nextToken: Swift.String?
    /// An OfflineStore status. Filters by OfflineStore status.
    public var offlineStoreStatusEquals: SageMakerClientTypes.OfflineStoreStatusValue?
    /// The value on which the feature group list is sorted.
    public var sortBy: SageMakerClientTypes.FeatureGroupSortBy?
    /// The order in which feature groups are listed.
    public var sortOrder: SageMakerClientTypes.FeatureGroupSortOrder?

    public init (
        creationTimeAfter: ClientRuntime.Date? = nil,
        creationTimeBefore: ClientRuntime.Date? = nil,
        featureGroupStatusEquals: SageMakerClientTypes.FeatureGroupStatus? = nil,
        maxResults: Swift.Int? = nil,
        nameContains: Swift.String? = nil,
        nextToken: Swift.String? = nil,
        offlineStoreStatusEquals: SageMakerClientTypes.OfflineStoreStatusValue? = nil,
        sortBy: SageMakerClientTypes.FeatureGroupSortBy? = nil,
        sortOrder: SageMakerClientTypes.FeatureGroupSortOrder? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.featureGroupStatusEquals = featureGroupStatusEquals
        self.maxResults = maxResults
        self.nameContains = nameContains
        self.nextToken = nextToken
        self.offlineStoreStatusEquals = offlineStoreStatusEquals
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
