// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListMonitoringSchedulesInput: Swift.Equatable {
    /// A filter that returns only monitoring schedules created after a specified time.
    public var creationTimeAfter: ClientRuntime.Date?
    /// A filter that returns only monitoring schedules created before a specified time.
    public var creationTimeBefore: ClientRuntime.Date?
    /// Name of a specific endpoint to fetch schedules for.
    public var endpointName: Swift.String?
    /// A filter that returns only monitoring schedules modified after a specified time.
    public var lastModifiedTimeAfter: ClientRuntime.Date?
    /// A filter that returns only monitoring schedules modified before a specified time.
    public var lastModifiedTimeBefore: ClientRuntime.Date?
    /// The maximum number of jobs to return in the response. The default value is 10.
    public var maxResults: Swift.Int?
    /// Gets a list of the monitoring schedules for the specified monitoring job definition.
    public var monitoringJobDefinitionName: Swift.String?
    /// A filter that returns only the monitoring schedules for the specified monitoring type.
    public var monitoringTypeEquals: SageMakerClientTypes.MonitoringType?
    /// Filter for monitoring schedules whose name contains a specified string.
    public var nameContains: Swift.String?
    /// The token returned if the response is truncated. To retrieve the next set of job executions, use it in the next request.
    public var nextToken: Swift.String?
    /// Whether to sort results by Status, CreationTime, ScheduledTime field. The default is CreationTime.
    public var sortBy: SageMakerClientTypes.MonitoringScheduleSortKey?
    /// Whether to sort the results in Ascending or Descending order. The default is Descending.
    public var sortOrder: SageMakerClientTypes.SortOrder?
    /// A filter that returns only monitoring schedules modified before a specified time.
    public var statusEquals: SageMakerClientTypes.ScheduleStatus?

    public init (
        creationTimeAfter: ClientRuntime.Date? = nil,
        creationTimeBefore: ClientRuntime.Date? = nil,
        endpointName: Swift.String? = nil,
        lastModifiedTimeAfter: ClientRuntime.Date? = nil,
        lastModifiedTimeBefore: ClientRuntime.Date? = nil,
        maxResults: Swift.Int? = nil,
        monitoringJobDefinitionName: Swift.String? = nil,
        monitoringTypeEquals: SageMakerClientTypes.MonitoringType? = nil,
        nameContains: Swift.String? = nil,
        nextToken: Swift.String? = nil,
        sortBy: SageMakerClientTypes.MonitoringScheduleSortKey? = nil,
        sortOrder: SageMakerClientTypes.SortOrder? = nil,
        statusEquals: SageMakerClientTypes.ScheduleStatus? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.endpointName = endpointName
        self.lastModifiedTimeAfter = lastModifiedTimeAfter
        self.lastModifiedTimeBefore = lastModifiedTimeBefore
        self.maxResults = maxResults
        self.monitoringJobDefinitionName = monitoringJobDefinitionName
        self.monitoringTypeEquals = monitoringTypeEquals
        self.nameContains = nameContains
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
        self.statusEquals = statusEquals
    }
}
