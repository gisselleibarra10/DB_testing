// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateEdgeDeploymentStageInputBody: Swift.Equatable {
    let edgeDeploymentPlanName: Swift.String?
    let stages: [SageMakerClientTypes.DeploymentStage]?
}

extension CreateEdgeDeploymentStageInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case edgeDeploymentPlanName = "EdgeDeploymentPlanName"
        case stages = "Stages"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let edgeDeploymentPlanNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .edgeDeploymentPlanName)
        edgeDeploymentPlanName = edgeDeploymentPlanNameDecoded
        let stagesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.DeploymentStage?].self, forKey: .stages)
        var stagesDecoded0:[SageMakerClientTypes.DeploymentStage]? = nil
        if let stagesContainer = stagesContainer {
            stagesDecoded0 = [SageMakerClientTypes.DeploymentStage]()
            for structure0 in stagesContainer {
                if let structure0 = structure0 {
                    stagesDecoded0?.append(structure0)
                }
            }
        }
        stages = stagesDecoded0
    }
}
