// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.WarmPoolStatus: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case resourceRetainedBillableTimeInSeconds = "ResourceRetainedBillableTimeInSeconds"
        case reusedByJob = "ReusedByJob"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourceRetainedBillableTimeInSeconds = self.resourceRetainedBillableTimeInSeconds {
            try encodeContainer.encode(resourceRetainedBillableTimeInSeconds, forKey: .resourceRetainedBillableTimeInSeconds)
        }
        if let reusedByJob = self.reusedByJob {
            try encodeContainer.encode(reusedByJob, forKey: .reusedByJob)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.WarmPoolResourceStatus.self, forKey: .status)
        status = statusDecoded
        let resourceRetainedBillableTimeInSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .resourceRetainedBillableTimeInSeconds)
        resourceRetainedBillableTimeInSeconds = resourceRetainedBillableTimeInSecondsDecoded
        let reusedByJobDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .reusedByJob)
        reusedByJob = reusedByJobDecoded
    }
}
