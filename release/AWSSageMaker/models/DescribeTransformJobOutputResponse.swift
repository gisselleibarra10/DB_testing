// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeTransformJobOutputResponse: Swift.Equatable {
    /// The Amazon Resource Name (ARN) of the AutoML transform job.
    public var autoMLJobArn: Swift.String?
    /// Specifies the number of records to include in a mini-batch for an HTTP inference request. A record is a single unit of input data that inference can be made on. For example, a single line in a CSV file is a record. To enable the batch strategy, you must set SplitType to Line, RecordIO, or TFRecord.
    public var batchStrategy: SageMakerClientTypes.BatchStrategy?
    /// A timestamp that shows when the transform Job was created.
    /// This member is required.
    public var creationTime: ClientRuntime.Date?
    /// The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see [Associate Prediction Results with their Corresponding Input Records](https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html).
    public var dataProcessing: SageMakerClientTypes.DataProcessing?
    /// The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
    public var environment: [Swift.String:Swift.String]?
    /// Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs:
    ///
    /// * [CreateProcessingJob]
    ///
    /// * [CreateTrainingJob]
    ///
    /// * [CreateTransformJob]
    public var experimentConfig: SageMakerClientTypes.ExperimentConfig?
    /// If the transform job failed, FailureReason describes why it failed. A transform job creates a log file, which includes error messages, and stores it as an Amazon S3 object. For more information, see [Log Amazon SageMaker Events with Amazon CloudWatch](https://docs.aws.amazon.com/sagemaker/latest/dg/logging-cloudwatch.html).
    public var failureReason: Swift.String?
    /// The Amazon Resource Name (ARN) of the Amazon SageMaker Ground Truth labeling job that created the transform or training job.
    public var labelingJobArn: Swift.String?
    /// The maximum number of parallel requests on each instance node that can be launched in a transform job. The default value is 1.
    public var maxConcurrentTransforms: Swift.Int?
    /// The maximum payload size, in MB, used in the transform job.
    public var maxPayloadInMB: Swift.Int?
    /// The timeout and maximum number of retries for processing a transform job invocation.
    public var modelClientConfig: SageMakerClientTypes.ModelClientConfig?
    /// The name of the model used in the transform job.
    /// This member is required.
    public var modelName: Swift.String?
    /// Indicates when the transform job has been completed, or has stopped or failed. You are billed for the time interval between this time and the value of TransformStartTime.
    public var transformEndTime: ClientRuntime.Date?
    /// Describes the dataset to be transformed and the Amazon S3 location where it is stored.
    /// This member is required.
    public var transformInput: SageMakerClientTypes.TransformInput?
    /// The Amazon Resource Name (ARN) of the transform job.
    /// This member is required.
    public var transformJobArn: Swift.String?
    /// The name of the transform job.
    /// This member is required.
    public var transformJobName: Swift.String?
    /// The status of the transform job. If the transform job failed, the reason is returned in the FailureReason field.
    /// This member is required.
    public var transformJobStatus: SageMakerClientTypes.TransformJobStatus?
    /// Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.
    public var transformOutput: SageMakerClientTypes.TransformOutput?
    /// Describes the resources, including ML instance types and ML instance count, to use for the transform job.
    /// This member is required.
    public var transformResources: SageMakerClientTypes.TransformResources?
    /// Indicates when the transform job starts on ML instances. You are billed for the time interval between this time and the value of TransformEndTime.
    public var transformStartTime: ClientRuntime.Date?

    public init (
        autoMLJobArn: Swift.String? = nil,
        batchStrategy: SageMakerClientTypes.BatchStrategy? = nil,
        creationTime: ClientRuntime.Date? = nil,
        dataProcessing: SageMakerClientTypes.DataProcessing? = nil,
        environment: [Swift.String:Swift.String]? = nil,
        experimentConfig: SageMakerClientTypes.ExperimentConfig? = nil,
        failureReason: Swift.String? = nil,
        labelingJobArn: Swift.String? = nil,
        maxConcurrentTransforms: Swift.Int? = nil,
        maxPayloadInMB: Swift.Int? = nil,
        modelClientConfig: SageMakerClientTypes.ModelClientConfig? = nil,
        modelName: Swift.String? = nil,
        transformEndTime: ClientRuntime.Date? = nil,
        transformInput: SageMakerClientTypes.TransformInput? = nil,
        transformJobArn: Swift.String? = nil,
        transformJobName: Swift.String? = nil,
        transformJobStatus: SageMakerClientTypes.TransformJobStatus? = nil,
        transformOutput: SageMakerClientTypes.TransformOutput? = nil,
        transformResources: SageMakerClientTypes.TransformResources? = nil,
        transformStartTime: ClientRuntime.Date? = nil
    )
    {
        self.autoMLJobArn = autoMLJobArn
        self.batchStrategy = batchStrategy
        self.creationTime = creationTime
        self.dataProcessing = dataProcessing
        self.environment = environment
        self.experimentConfig = experimentConfig
        self.failureReason = failureReason
        self.labelingJobArn = labelingJobArn
        self.maxConcurrentTransforms = maxConcurrentTransforms
        self.maxPayloadInMB = maxPayloadInMB
        self.modelClientConfig = modelClientConfig
        self.modelName = modelName
        self.transformEndTime = transformEndTime
        self.transformInput = transformInput
        self.transformJobArn = transformJobArn
        self.transformJobName = transformJobName
        self.transformJobStatus = transformJobStatus
        self.transformOutput = transformOutput
        self.transformResources = transformResources
        self.transformStartTime = transformStartTime
    }
}
