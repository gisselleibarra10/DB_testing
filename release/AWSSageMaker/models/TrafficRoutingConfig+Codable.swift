// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.TrafficRoutingConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case canarySize = "CanarySize"
        case linearStepSize = "LinearStepSize"
        case type = "Type"
        case waitIntervalInSeconds = "WaitIntervalInSeconds"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let canarySize = self.canarySize {
            try encodeContainer.encode(canarySize, forKey: .canarySize)
        }
        if let linearStepSize = self.linearStepSize {
            try encodeContainer.encode(linearStepSize, forKey: .linearStepSize)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
        if let waitIntervalInSeconds = self.waitIntervalInSeconds {
            try encodeContainer.encode(waitIntervalInSeconds, forKey: .waitIntervalInSeconds)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.TrafficRoutingConfigType.self, forKey: .type)
        type = typeDecoded
        let waitIntervalInSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .waitIntervalInSeconds)
        waitIntervalInSeconds = waitIntervalInSecondsDecoded
        let canarySizeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.CapacitySize.self, forKey: .canarySize)
        canarySize = canarySizeDecoded
        let linearStepSizeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.CapacitySize.self, forKey: .linearStepSize)
        linearStepSize = linearStepSizeDecoded
    }
}
