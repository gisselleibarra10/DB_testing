// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProcessingJobsOutputResponseBody: Swift.Equatable {
    let processingJobSummaries: [SageMakerClientTypes.ProcessingJobSummary]?
    let nextToken: Swift.String?
}

extension ListProcessingJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case processingJobSummaries = "ProcessingJobSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let processingJobSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.ProcessingJobSummary?].self, forKey: .processingJobSummaries)
        var processingJobSummariesDecoded0:[SageMakerClientTypes.ProcessingJobSummary]? = nil
        if let processingJobSummariesContainer = processingJobSummariesContainer {
            processingJobSummariesDecoded0 = [SageMakerClientTypes.ProcessingJobSummary]()
            for structure0 in processingJobSummariesContainer {
                if let structure0 = structure0 {
                    processingJobSummariesDecoded0?.append(structure0)
                }
            }
        }
        processingJobSummaries = processingJobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
