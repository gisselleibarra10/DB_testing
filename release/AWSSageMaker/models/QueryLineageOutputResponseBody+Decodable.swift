// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct QueryLineageOutputResponseBody: Swift.Equatable {
    let vertices: [SageMakerClientTypes.Vertex]?
    let edges: [SageMakerClientTypes.Edge]?
    let nextToken: Swift.String?
}

extension QueryLineageOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case edges = "Edges"
        case nextToken = "NextToken"
        case vertices = "Vertices"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let verticesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Vertex?].self, forKey: .vertices)
        var verticesDecoded0:[SageMakerClientTypes.Vertex]? = nil
        if let verticesContainer = verticesContainer {
            verticesDecoded0 = [SageMakerClientTypes.Vertex]()
            for structure0 in verticesContainer {
                if let structure0 = structure0 {
                    verticesDecoded0?.append(structure0)
                }
            }
        }
        vertices = verticesDecoded0
        let edgesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Edge?].self, forKey: .edges)
        var edgesDecoded0:[SageMakerClientTypes.Edge]? = nil
        if let edgesContainer = edgesContainer {
            edgesDecoded0 = [SageMakerClientTypes.Edge]()
            for structure0 in edgesContainer {
                if let structure0 = structure0 {
                    edgesDecoded0?.append(structure0)
                }
            }
        }
        edges = edgesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
