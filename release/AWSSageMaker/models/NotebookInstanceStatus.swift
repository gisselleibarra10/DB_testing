// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    public enum NotebookInstanceStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case deleting
        case failed
        case inservice
        case pending
        case stopped
        case stopping
        case updating
        case sdkUnknown(Swift.String)

        public static var allCases: [NotebookInstanceStatus] {
            return [
                .deleting,
                .failed,
                .inservice,
                .pending,
                .stopped,
                .stopping,
                .updating,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .deleting: return "Deleting"
            case .failed: return "Failed"
            case .inservice: return "InService"
            case .pending: return "Pending"
            case .stopped: return "Stopped"
            case .stopping: return "Stopping"
            case .updating: return "Updating"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = NotebookInstanceStatus(rawValue: rawValue) ?? NotebookInstanceStatus.sdkUnknown(rawValue)
        }
    }
}
