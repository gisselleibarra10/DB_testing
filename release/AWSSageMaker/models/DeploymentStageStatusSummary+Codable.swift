// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.DeploymentStageStatusSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deploymentConfig = "DeploymentConfig"
        case deploymentStatus = "DeploymentStatus"
        case deviceSelectionConfig = "DeviceSelectionConfig"
        case stageName = "StageName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deploymentConfig = self.deploymentConfig {
            try encodeContainer.encode(deploymentConfig, forKey: .deploymentConfig)
        }
        if let deploymentStatus = self.deploymentStatus {
            try encodeContainer.encode(deploymentStatus, forKey: .deploymentStatus)
        }
        if let deviceSelectionConfig = self.deviceSelectionConfig {
            try encodeContainer.encode(deviceSelectionConfig, forKey: .deviceSelectionConfig)
        }
        if let stageName = self.stageName {
            try encodeContainer.encode(stageName, forKey: .stageName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stageNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stageName)
        stageName = stageNameDecoded
        let deviceSelectionConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.DeviceSelectionConfig.self, forKey: .deviceSelectionConfig)
        deviceSelectionConfig = deviceSelectionConfigDecoded
        let deploymentConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.EdgeDeploymentConfig.self, forKey: .deploymentConfig)
        deploymentConfig = deploymentConfigDecoded
        let deploymentStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.EdgeDeploymentStatus.self, forKey: .deploymentStatus)
        deploymentStatus = deploymentStatusDecoded
    }
}
