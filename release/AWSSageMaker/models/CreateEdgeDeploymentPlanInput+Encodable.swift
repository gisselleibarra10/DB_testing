// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateEdgeDeploymentPlanInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceFleetName = "DeviceFleetName"
        case edgeDeploymentPlanName = "EdgeDeploymentPlanName"
        case modelConfigs = "ModelConfigs"
        case stages = "Stages"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deviceFleetName = self.deviceFleetName {
            try encodeContainer.encode(deviceFleetName, forKey: .deviceFleetName)
        }
        if let edgeDeploymentPlanName = self.edgeDeploymentPlanName {
            try encodeContainer.encode(edgeDeploymentPlanName, forKey: .edgeDeploymentPlanName)
        }
        if let modelConfigs = modelConfigs {
            var modelConfigsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .modelConfigs)
            for edgedeploymentmodelconfigs0 in modelConfigs {
                try modelConfigsContainer.encode(edgedeploymentmodelconfigs0)
            }
        }
        if let stages = stages {
            var stagesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .stages)
            for deploymentstages0 in stages {
                try stagesContainer.encode(deploymentstages0)
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
