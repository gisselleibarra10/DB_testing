// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeModelPackageOutputResponse: Swift.Equatable {
    /// An array of additional Inference Specification objects. Each additional Inference Specification specifies artifacts based on this model package that can be used on inference endpoints. Generally used with SageMaker Neo to store the compiled artifacts.
    public var additionalInferenceSpecifications: [SageMakerClientTypes.AdditionalInferenceSpecificationDefinition]?
    /// A description provided for the model approval.
    public var approvalDescription: Swift.String?
    /// Whether the model package is certified for listing on Amazon Web Services Marketplace.
    public var certifyForMarketplace: Swift.Bool
    /// Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.
    public var createdBy: SageMakerClientTypes.UserContext?
    /// A timestamp specifying when the model package was created.
    /// This member is required.
    public var creationTime: ClientRuntime.Date?
    /// The metadata properties associated with the model package versions.
    public var customerMetadataProperties: [Swift.String:Swift.String]?
    /// The machine learning domain of the model package you specified. Common machine learning domains include computer vision and natural language processing.
    public var domain: Swift.String?
    /// Represents the drift check baselines that can be used when the model monitor is set using the model package. For more information, see the topic on [Drift Detection against Previous Baselines in SageMaker Pipelines](https://docs.aws.amazon.com/sagemaker/latest/dg/pipelines-quality-clarify-baseline-lifecycle.html#pipelines-quality-clarify-baseline-drift-detection) in the Amazon SageMaker Developer Guide.
    public var driftCheckBaselines: SageMakerClientTypes.DriftCheckBaselines?
    /// Details about inference jobs that can be run with models based on this model package.
    public var inferenceSpecification: SageMakerClientTypes.InferenceSpecification?
    /// Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.
    public var lastModifiedBy: SageMakerClientTypes.UserContext?
    /// The last time that the model package was modified.
    public var lastModifiedTime: ClientRuntime.Date?
    /// Metadata properties of the tracking entity, trial, or trial component.
    public var metadataProperties: SageMakerClientTypes.MetadataProperties?
    /// The approval status of the model package.
    public var modelApprovalStatus: SageMakerClientTypes.ModelApprovalStatus?
    /// Metrics for the model.
    public var modelMetrics: SageMakerClientTypes.ModelMetrics?
    /// The Amazon Resource Name (ARN) of the model package.
    /// This member is required.
    public var modelPackageArn: Swift.String?
    /// A brief summary of the model package.
    public var modelPackageDescription: Swift.String?
    /// If the model is a versioned model, the name of the model group that the versioned model belongs to.
    public var modelPackageGroupName: Swift.String?
    /// The name of the model package being described.
    /// This member is required.
    public var modelPackageName: Swift.String?
    /// The current status of the model package.
    /// This member is required.
    public var modelPackageStatus: SageMakerClientTypes.ModelPackageStatus?
    /// Details about the current status of the model package.
    /// This member is required.
    public var modelPackageStatusDetails: SageMakerClientTypes.ModelPackageStatusDetails?
    /// The version of the model package.
    public var modelPackageVersion: Swift.Int?
    /// The Amazon Simple Storage Service (Amazon S3) path where the sample payload are stored. This path points to a single gzip compressed tar archive (.tar.gz suffix).
    public var samplePayloadUrl: Swift.String?
    /// Details about the algorithm that was used to create the model package.
    public var sourceAlgorithmSpecification: SageMakerClientTypes.SourceAlgorithmSpecification?
    /// The machine learning task you specified that your model package accomplishes. Common machine learning tasks include object detection and image classification.
    public var task: Swift.String?
    /// Configurations for one or more transform jobs that SageMaker runs to test the model package.
    public var validationSpecification: SageMakerClientTypes.ModelPackageValidationSpecification?

    public init (
        additionalInferenceSpecifications: [SageMakerClientTypes.AdditionalInferenceSpecificationDefinition]? = nil,
        approvalDescription: Swift.String? = nil,
        certifyForMarketplace: Swift.Bool = false,
        createdBy: SageMakerClientTypes.UserContext? = nil,
        creationTime: ClientRuntime.Date? = nil,
        customerMetadataProperties: [Swift.String:Swift.String]? = nil,
        domain: Swift.String? = nil,
        driftCheckBaselines: SageMakerClientTypes.DriftCheckBaselines? = nil,
        inferenceSpecification: SageMakerClientTypes.InferenceSpecification? = nil,
        lastModifiedBy: SageMakerClientTypes.UserContext? = nil,
        lastModifiedTime: ClientRuntime.Date? = nil,
        metadataProperties: SageMakerClientTypes.MetadataProperties? = nil,
        modelApprovalStatus: SageMakerClientTypes.ModelApprovalStatus? = nil,
        modelMetrics: SageMakerClientTypes.ModelMetrics? = nil,
        modelPackageArn: Swift.String? = nil,
        modelPackageDescription: Swift.String? = nil,
        modelPackageGroupName: Swift.String? = nil,
        modelPackageName: Swift.String? = nil,
        modelPackageStatus: SageMakerClientTypes.ModelPackageStatus? = nil,
        modelPackageStatusDetails: SageMakerClientTypes.ModelPackageStatusDetails? = nil,
        modelPackageVersion: Swift.Int? = nil,
        samplePayloadUrl: Swift.String? = nil,
        sourceAlgorithmSpecification: SageMakerClientTypes.SourceAlgorithmSpecification? = nil,
        task: Swift.String? = nil,
        validationSpecification: SageMakerClientTypes.ModelPackageValidationSpecification? = nil
    )
    {
        self.additionalInferenceSpecifications = additionalInferenceSpecifications
        self.approvalDescription = approvalDescription
        self.certifyForMarketplace = certifyForMarketplace
        self.createdBy = createdBy
        self.creationTime = creationTime
        self.customerMetadataProperties = customerMetadataProperties
        self.domain = domain
        self.driftCheckBaselines = driftCheckBaselines
        self.inferenceSpecification = inferenceSpecification
        self.lastModifiedBy = lastModifiedBy
        self.lastModifiedTime = lastModifiedTime
        self.metadataProperties = metadataProperties
        self.modelApprovalStatus = modelApprovalStatus
        self.modelMetrics = modelMetrics
        self.modelPackageArn = modelPackageArn
        self.modelPackageDescription = modelPackageDescription
        self.modelPackageGroupName = modelPackageGroupName
        self.modelPackageName = modelPackageName
        self.modelPackageStatus = modelPackageStatus
        self.modelPackageStatusDetails = modelPackageStatusDetails
        self.modelPackageVersion = modelPackageVersion
        self.samplePayloadUrl = samplePayloadUrl
        self.sourceAlgorithmSpecification = sourceAlgorithmSpecification
        self.task = task
        self.validationSpecification = validationSpecification
    }
}
