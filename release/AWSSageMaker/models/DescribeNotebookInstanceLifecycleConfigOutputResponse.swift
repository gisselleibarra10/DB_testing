// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeNotebookInstanceLifecycleConfigOutputResponse: Swift.Equatable {
    /// A timestamp that tells when the lifecycle configuration was created.
    public var creationTime: ClientRuntime.Date?
    /// A timestamp that tells when the lifecycle configuration was last modified.
    public var lastModifiedTime: ClientRuntime.Date?
    /// The Amazon Resource Name (ARN) of the lifecycle configuration.
    public var notebookInstanceLifecycleConfigArn: Swift.String?
    /// The name of the lifecycle configuration.
    public var notebookInstanceLifecycleConfigName: Swift.String?
    /// The shell script that runs only once, when you create a notebook instance.
    public var onCreate: [SageMakerClientTypes.NotebookInstanceLifecycleHook]?
    /// The shell script that runs every time you start a notebook instance, including when you create the notebook instance.
    public var onStart: [SageMakerClientTypes.NotebookInstanceLifecycleHook]?

    public init (
        creationTime: ClientRuntime.Date? = nil,
        lastModifiedTime: ClientRuntime.Date? = nil,
        notebookInstanceLifecycleConfigArn: Swift.String? = nil,
        notebookInstanceLifecycleConfigName: Swift.String? = nil,
        onCreate: [SageMakerClientTypes.NotebookInstanceLifecycleHook]? = nil,
        onStart: [SageMakerClientTypes.NotebookInstanceLifecycleHook]? = nil
    )
    {
        self.creationTime = creationTime
        self.lastModifiedTime = lastModifiedTime
        self.notebookInstanceLifecycleConfigArn = notebookInstanceLifecycleConfigArn
        self.notebookInstanceLifecycleConfigName = notebookInstanceLifecycleConfigName
        self.onCreate = onCreate
        self.onStart = onStart
    }
}
