// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.InputConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataInputConfig = "DataInputConfig"
        case framework = "Framework"
        case frameworkVersion = "FrameworkVersion"
        case s3Uri = "S3Uri"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataInputConfig = self.dataInputConfig {
            try encodeContainer.encode(dataInputConfig, forKey: .dataInputConfig)
        }
        if let framework = self.framework {
            try encodeContainer.encode(framework.rawValue, forKey: .framework)
        }
        if let frameworkVersion = self.frameworkVersion {
            try encodeContainer.encode(frameworkVersion, forKey: .frameworkVersion)
        }
        if let s3Uri = self.s3Uri {
            try encodeContainer.encode(s3Uri, forKey: .s3Uri)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3UriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3Uri)
        s3Uri = s3UriDecoded
        let dataInputConfigDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataInputConfig)
        dataInputConfig = dataInputConfigDecoded
        let frameworkDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.Framework.self, forKey: .framework)
        framework = frameworkDecoded
        let frameworkVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .frameworkVersion)
        frameworkVersion = frameworkVersionDecoded
    }
}
