// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAppOutputResponseBody: Swift.Equatable {
    let appArn: Swift.String?
    let appType: SageMakerClientTypes.AppType?
    let appName: Swift.String?
    let domainId: Swift.String?
    let userProfileName: Swift.String?
    let status: SageMakerClientTypes.AppStatus?
    let lastHealthCheckTimestamp: ClientRuntime.Date?
    let lastUserActivityTimestamp: ClientRuntime.Date?
    let creationTime: ClientRuntime.Date?
    let failureReason: Swift.String?
    let resourceSpec: SageMakerClientTypes.ResourceSpec?
}

extension DescribeAppOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appArn = "AppArn"
        case appName = "AppName"
        case appType = "AppType"
        case creationTime = "CreationTime"
        case domainId = "DomainId"
        case failureReason = "FailureReason"
        case lastHealthCheckTimestamp = "LastHealthCheckTimestamp"
        case lastUserActivityTimestamp = "LastUserActivityTimestamp"
        case resourceSpec = "ResourceSpec"
        case status = "Status"
        case userProfileName = "UserProfileName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appArn)
        appArn = appArnDecoded
        let appTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.AppType.self, forKey: .appType)
        appType = appTypeDecoded
        let appNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .appName)
        appName = appNameDecoded
        let domainIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainId)
        domainId = domainIdDecoded
        let userProfileNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userProfileName)
        userProfileName = userProfileNameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.AppStatus.self, forKey: .status)
        status = statusDecoded
        let lastHealthCheckTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastHealthCheckTimestamp)
        lastHealthCheckTimestamp = lastHealthCheckTimestampDecoded
        let lastUserActivityTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUserActivityTimestamp)
        lastUserActivityTimestamp = lastUserActivityTimestampDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let resourceSpecDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ResourceSpec.self, forKey: .resourceSpec)
        resourceSpec = resourceSpecDecoded
    }
}
