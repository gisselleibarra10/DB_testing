// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    /// A channel is a named input source that training algorithms can consume. The validation dataset size is limited to less than 2 GB. The training dataset size must be less than 100 GB. For more information, see . A validation dataset must contain the same headers as the training dataset.
    public struct AutoMLChannel: Swift.Equatable {
        /// The channel type (optional) is an enum string. The default value is training. Channels for training and validation must share the same ContentType and TargetAttributeName. For information on specifying training and validation channel types, see [How to specify training and validation datasets](https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-datasets-problem-types.html#autopilot-data-sources-training-or-validation).
        public var channelType: SageMakerClientTypes.AutoMLChannelType?
        /// You can use Gzip or None. The default value is None.
        public var compressionType: SageMakerClientTypes.CompressionType?
        /// The content type of the data from the input source. You can use text/csv;header=present or x-application/vnd.amazon+parquet. The default value is text/csv;header=present.
        public var contentType: Swift.String?
        /// The data source for an AutoML channel.
        /// This member is required.
        public var dataSource: SageMakerClientTypes.AutoMLDataSource?
        /// The name of the target variable in supervised learning, usually represented by 'y'.
        /// This member is required.
        public var targetAttributeName: Swift.String?

        public init (
            channelType: SageMakerClientTypes.AutoMLChannelType? = nil,
            compressionType: SageMakerClientTypes.CompressionType? = nil,
            contentType: Swift.String? = nil,
            dataSource: SageMakerClientTypes.AutoMLDataSource? = nil,
            targetAttributeName: Swift.String? = nil
        )
        {
            self.channelType = channelType
            self.compressionType = compressionType
            self.contentType = contentType
            self.dataSource = dataSource
            self.targetAttributeName = targetAttributeName
        }
    }

}
