// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImagesOutputResponseBody: Swift.Equatable {
    let images: [SageMakerClientTypes.Image]?
    let nextToken: Swift.String?
}

extension ListImagesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case images = "Images"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imagesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Image?].self, forKey: .images)
        var imagesDecoded0:[SageMakerClientTypes.Image]? = nil
        if let imagesContainer = imagesContainer {
            imagesDecoded0 = [SageMakerClientTypes.Image]()
            for structure0 in imagesContainer {
                if let structure0 = structure0 {
                    imagesDecoded0?.append(structure0)
                }
            }
        }
        images = imagesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
