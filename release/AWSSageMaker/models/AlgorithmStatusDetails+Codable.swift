// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.AlgorithmStatusDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case imageScanStatuses = "ImageScanStatuses"
        case validationStatuses = "ValidationStatuses"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let imageScanStatuses = imageScanStatuses {
            var imageScanStatusesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .imageScanStatuses)
            for algorithmstatusitemlist0 in imageScanStatuses {
                try imageScanStatusesContainer.encode(algorithmstatusitemlist0)
            }
        }
        if let validationStatuses = validationStatuses {
            var validationStatusesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .validationStatuses)
            for algorithmstatusitemlist0 in validationStatuses {
                try validationStatusesContainer.encode(algorithmstatusitemlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let validationStatusesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.AlgorithmStatusItem?].self, forKey: .validationStatuses)
        var validationStatusesDecoded0:[SageMakerClientTypes.AlgorithmStatusItem]? = nil
        if let validationStatusesContainer = validationStatusesContainer {
            validationStatusesDecoded0 = [SageMakerClientTypes.AlgorithmStatusItem]()
            for structure0 in validationStatusesContainer {
                if let structure0 = structure0 {
                    validationStatusesDecoded0?.append(structure0)
                }
            }
        }
        validationStatuses = validationStatusesDecoded0
        let imageScanStatusesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.AlgorithmStatusItem?].self, forKey: .imageScanStatuses)
        var imageScanStatusesDecoded0:[SageMakerClientTypes.AlgorithmStatusItem]? = nil
        if let imageScanStatusesContainer = imageScanStatusesContainer {
            imageScanStatusesDecoded0 = [SageMakerClientTypes.AlgorithmStatusItem]()
            for structure0 in imageScanStatusesContainer {
                if let structure0 = structure0 {
                    imageScanStatusesDecoded0?.append(structure0)
                }
            }
        }
        imageScanStatuses = imageScanStatusesDecoded0
    }
}
