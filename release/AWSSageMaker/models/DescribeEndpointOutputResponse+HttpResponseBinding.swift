// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeEndpointOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: DescribeEndpointOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.asyncInferenceConfig = output.asyncInferenceConfig
            self.creationTime = output.creationTime
            self.dataCaptureConfig = output.dataCaptureConfig
            self.endpointArn = output.endpointArn
            self.endpointConfigName = output.endpointConfigName
            self.endpointName = output.endpointName
            self.endpointStatus = output.endpointStatus
            self.failureReason = output.failureReason
            self.lastDeploymentConfig = output.lastDeploymentConfig
            self.lastModifiedTime = output.lastModifiedTime
            self.pendingDeploymentSummary = output.pendingDeploymentSummary
            self.productionVariants = output.productionVariants
        } else {
            self.asyncInferenceConfig = nil
            self.creationTime = nil
            self.dataCaptureConfig = nil
            self.endpointArn = nil
            self.endpointConfigName = nil
            self.endpointName = nil
            self.endpointStatus = nil
            self.failureReason = nil
            self.lastDeploymentConfig = nil
            self.lastModifiedTime = nil
            self.pendingDeploymentSummary = nil
            self.productionVariants = nil
        }
    }
}
