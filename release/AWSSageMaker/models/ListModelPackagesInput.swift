// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListModelPackagesInput: Swift.Equatable {
    /// A filter that returns only model packages created after the specified time (timestamp).
    public var creationTimeAfter: ClientRuntime.Date?
    /// A filter that returns only model packages created before the specified time (timestamp).
    public var creationTimeBefore: ClientRuntime.Date?
    /// The maximum number of model packages to return in the response.
    public var maxResults: Swift.Int?
    /// A filter that returns only the model packages with the specified approval status.
    public var modelApprovalStatus: SageMakerClientTypes.ModelApprovalStatus?
    /// A filter that returns only model versions that belong to the specified model group.
    public var modelPackageGroupName: Swift.String?
    /// A filter that returns only the model packages of the specified type. This can be one of the following values.
    ///
    /// * UNVERSIONED - List only unversioined models. This is the default value if no ModelPackageType is specified.
    ///
    /// * VERSIONED - List only versioned models.
    ///
    /// * BOTH - List both versioned and unversioned models.
    public var modelPackageType: SageMakerClientTypes.ModelPackageType?
    /// A string in the model package name. This filter returns only model packages whose name contains the specified string.
    public var nameContains: Swift.String?
    /// If the response to a previous ListModelPackages request was truncated, the response includes a NextToken. To retrieve the next set of model packages, use the token in the next request.
    public var nextToken: Swift.String?
    /// The parameter by which to sort the results. The default is CreationTime.
    public var sortBy: SageMakerClientTypes.ModelPackageSortBy?
    /// The sort order for the results. The default is Ascending.
    public var sortOrder: SageMakerClientTypes.SortOrder?

    public init (
        creationTimeAfter: ClientRuntime.Date? = nil,
        creationTimeBefore: ClientRuntime.Date? = nil,
        maxResults: Swift.Int? = nil,
        modelApprovalStatus: SageMakerClientTypes.ModelApprovalStatus? = nil,
        modelPackageGroupName: Swift.String? = nil,
        modelPackageType: SageMakerClientTypes.ModelPackageType? = nil,
        nameContains: Swift.String? = nil,
        nextToken: Swift.String? = nil,
        sortBy: SageMakerClientTypes.ModelPackageSortBy? = nil,
        sortOrder: SageMakerClientTypes.SortOrder? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.maxResults = maxResults
        self.modelApprovalStatus = modelApprovalStatus
        self.modelPackageGroupName = modelPackageGroupName
        self.modelPackageType = modelPackageType
        self.nameContains = nameContains
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
