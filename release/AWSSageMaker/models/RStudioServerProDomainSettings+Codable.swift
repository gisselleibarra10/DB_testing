// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.RStudioServerProDomainSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultResourceSpec = "DefaultResourceSpec"
        case domainExecutionRoleArn = "DomainExecutionRoleArn"
        case rStudioConnectUrl = "RStudioConnectUrl"
        case rStudioPackageManagerUrl = "RStudioPackageManagerUrl"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultResourceSpec = self.defaultResourceSpec {
            try encodeContainer.encode(defaultResourceSpec, forKey: .defaultResourceSpec)
        }
        if let domainExecutionRoleArn = self.domainExecutionRoleArn {
            try encodeContainer.encode(domainExecutionRoleArn, forKey: .domainExecutionRoleArn)
        }
        if let rStudioConnectUrl = self.rStudioConnectUrl {
            try encodeContainer.encode(rStudioConnectUrl, forKey: .rStudioConnectUrl)
        }
        if let rStudioPackageManagerUrl = self.rStudioPackageManagerUrl {
            try encodeContainer.encode(rStudioPackageManagerUrl, forKey: .rStudioPackageManagerUrl)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainExecutionRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainExecutionRoleArn)
        domainExecutionRoleArn = domainExecutionRoleArnDecoded
        let rStudioConnectUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rStudioConnectUrl)
        rStudioConnectUrl = rStudioConnectUrlDecoded
        let rStudioPackageManagerUrlDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rStudioPackageManagerUrl)
        rStudioPackageManagerUrl = rStudioPackageManagerUrlDecoded
        let defaultResourceSpecDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ResourceSpec.self, forKey: .defaultResourceSpec)
        defaultResourceSpec = defaultResourceSpecDecoded
    }
}
