// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateFlowDefinitionInputBody: Swift.Equatable {
    let flowDefinitionName: Swift.String?
    let humanLoopRequestSource: SageMakerClientTypes.HumanLoopRequestSource?
    let humanLoopActivationConfig: SageMakerClientTypes.HumanLoopActivationConfig?
    let humanLoopConfig: SageMakerClientTypes.HumanLoopConfig?
    let outputConfig: SageMakerClientTypes.FlowDefinitionOutputConfig?
    let roleArn: Swift.String?
    let tags: [SageMakerClientTypes.Tag]?
}

extension CreateFlowDefinitionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case flowDefinitionName = "FlowDefinitionName"
        case humanLoopActivationConfig = "HumanLoopActivationConfig"
        case humanLoopConfig = "HumanLoopConfig"
        case humanLoopRequestSource = "HumanLoopRequestSource"
        case outputConfig = "OutputConfig"
        case roleArn = "RoleArn"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowDefinitionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .flowDefinitionName)
        flowDefinitionName = flowDefinitionNameDecoded
        let humanLoopRequestSourceDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.HumanLoopRequestSource.self, forKey: .humanLoopRequestSource)
        humanLoopRequestSource = humanLoopRequestSourceDecoded
        let humanLoopActivationConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.HumanLoopActivationConfig.self, forKey: .humanLoopActivationConfig)
        humanLoopActivationConfig = humanLoopActivationConfigDecoded
        let humanLoopConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.HumanLoopConfig.self, forKey: .humanLoopConfig)
        humanLoopConfig = humanLoopConfigDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.FlowDefinitionOutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let tagsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[SageMakerClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [SageMakerClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
