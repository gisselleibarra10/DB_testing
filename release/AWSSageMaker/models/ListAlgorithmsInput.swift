// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListAlgorithmsInput: Swift.Equatable {
    /// A filter that returns only algorithms created after the specified time (timestamp).
    public var creationTimeAfter: ClientRuntime.Date?
    /// A filter that returns only algorithms created before the specified time (timestamp).
    public var creationTimeBefore: ClientRuntime.Date?
    /// The maximum number of algorithms to return in the response.
    public var maxResults: Swift.Int?
    /// A string in the algorithm name. This filter returns only algorithms whose name contains the specified string.
    public var nameContains: Swift.String?
    /// If the response to a previous ListAlgorithms request was truncated, the response includes a NextToken. To retrieve the next set of algorithms, use the token in the next request.
    public var nextToken: Swift.String?
    /// The parameter by which to sort the results. The default is CreationTime.
    public var sortBy: SageMakerClientTypes.AlgorithmSortBy?
    /// The sort order for the results. The default is Ascending.
    public var sortOrder: SageMakerClientTypes.SortOrder?

    public init (
        creationTimeAfter: ClientRuntime.Date? = nil,
        creationTimeBefore: ClientRuntime.Date? = nil,
        maxResults: Swift.Int? = nil,
        nameContains: Swift.String? = nil,
        nextToken: Swift.String? = nil,
        sortBy: SageMakerClientTypes.AlgorithmSortBy? = nil,
        sortOrder: SageMakerClientTypes.SortOrder? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.maxResults = maxResults
        self.nameContains = nameContains
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
