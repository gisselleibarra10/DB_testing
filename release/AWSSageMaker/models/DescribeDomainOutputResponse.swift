// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDomainOutputResponse: Swift.Equatable {
    /// Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly.
    ///
    /// * PublicInternetOnly - Non-EFS traffic is through a VPC managed by Amazon SageMaker, which allows direct internet access
    ///
    /// * VpcOnly - All Studio traffic is through the specified VPC and subnets
    public var appNetworkAccessType: SageMakerClientTypes.AppNetworkAccessType?
    /// The entity that creates and manages the required security groups for inter-app communication in VPCOnly mode. Required when CreateDomain.AppNetworkAccessType is VPCOnly and DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn is provided.
    public var appSecurityGroupManagement: SageMakerClientTypes.AppSecurityGroupManagement?
    /// The domain's authentication mode.
    public var authMode: SageMakerClientTypes.AuthMode?
    /// The creation time.
    public var creationTime: ClientRuntime.Date?
    /// Settings which are applied to UserProfiles in this domain if settings are not explicitly specified in a given UserProfile.
    public var defaultUserSettings: SageMakerClientTypes.UserSettings?
    /// The domain's Amazon Resource Name (ARN).
    public var domainArn: Swift.String?
    /// The domain ID.
    public var domainId: Swift.String?
    /// The domain name.
    public var domainName: Swift.String?
    /// A collection of Domain settings.
    public var domainSettings: SageMakerClientTypes.DomainSettings?
    /// The failure reason.
    public var failureReason: Swift.String?
    /// The ID of the Amazon Elastic File System (EFS) managed by this Domain.
    public var homeEfsFileSystemId: Swift.String?
    /// Use KmsKeyId.
    @available(*, deprecated, message: "This property is deprecated, use KmsKeyId instead.")
    public var homeEfsFileSystemKmsKeyId: Swift.String?
    /// The Amazon Web Services KMS customer managed key used to encrypt the EFS volume attached to the domain.
    public var kmsKeyId: Swift.String?
    /// The last modified time.
    public var lastModifiedTime: ClientRuntime.Date?
    /// The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
    public var securityGroupIdForDomainBoundary: Swift.String?
    /// The IAM Identity Center managed application instance ID.
    public var singleSignOnManagedApplicationInstanceId: Swift.String?
    /// The status.
    public var status: SageMakerClientTypes.DomainStatus?
    /// The VPC subnets that Studio uses for communication.
    public var subnetIds: [Swift.String]?
    /// The domain's URL.
    public var url: Swift.String?
    /// The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
    public var vpcId: Swift.String?

    public init (
        appNetworkAccessType: SageMakerClientTypes.AppNetworkAccessType? = nil,
        appSecurityGroupManagement: SageMakerClientTypes.AppSecurityGroupManagement? = nil,
        authMode: SageMakerClientTypes.AuthMode? = nil,
        creationTime: ClientRuntime.Date? = nil,
        defaultUserSettings: SageMakerClientTypes.UserSettings? = nil,
        domainArn: Swift.String? = nil,
        domainId: Swift.String? = nil,
        domainName: Swift.String? = nil,
        domainSettings: SageMakerClientTypes.DomainSettings? = nil,
        failureReason: Swift.String? = nil,
        homeEfsFileSystemId: Swift.String? = nil,
        homeEfsFileSystemKmsKeyId: Swift.String? = nil,
        kmsKeyId: Swift.String? = nil,
        lastModifiedTime: ClientRuntime.Date? = nil,
        securityGroupIdForDomainBoundary: Swift.String? = nil,
        singleSignOnManagedApplicationInstanceId: Swift.String? = nil,
        status: SageMakerClientTypes.DomainStatus? = nil,
        subnetIds: [Swift.String]? = nil,
        url: Swift.String? = nil,
        vpcId: Swift.String? = nil
    )
    {
        self.appNetworkAccessType = appNetworkAccessType
        self.appSecurityGroupManagement = appSecurityGroupManagement
        self.authMode = authMode
        self.creationTime = creationTime
        self.defaultUserSettings = defaultUserSettings
        self.domainArn = domainArn
        self.domainId = domainId
        self.domainName = domainName
        self.domainSettings = domainSettings
        self.failureReason = failureReason
        self.homeEfsFileSystemId = homeEfsFileSystemId
        self.homeEfsFileSystemKmsKeyId = homeEfsFileSystemKmsKeyId
        self.kmsKeyId = kmsKeyId
        self.lastModifiedTime = lastModifiedTime
        self.securityGroupIdForDomainBoundary = securityGroupIdForDomainBoundary
        self.singleSignOnManagedApplicationInstanceId = singleSignOnManagedApplicationInstanceId
        self.status = status
        self.subnetIds = subnetIds
        self.url = url
        self.vpcId = vpcId
    }
}
