// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAlgorithmsOutputResponseBody: Swift.Equatable {
    let algorithmSummaryList: [SageMakerClientTypes.AlgorithmSummary]?
    let nextToken: Swift.String?
}

extension ListAlgorithmsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case algorithmSummaryList = "AlgorithmSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let algorithmSummaryListContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.AlgorithmSummary?].self, forKey: .algorithmSummaryList)
        var algorithmSummaryListDecoded0:[SageMakerClientTypes.AlgorithmSummary]? = nil
        if let algorithmSummaryListContainer = algorithmSummaryListContainer {
            algorithmSummaryListDecoded0 = [SageMakerClientTypes.AlgorithmSummary]()
            for structure0 in algorithmSummaryListContainer {
                if let structure0 = structure0 {
                    algorithmSummaryListDecoded0?.append(structure0)
                }
            }
        }
        algorithmSummaryList = algorithmSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
