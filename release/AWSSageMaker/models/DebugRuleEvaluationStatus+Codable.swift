// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.DebugRuleEvaluationStatus: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastModifiedTime = "LastModifiedTime"
        case ruleConfigurationName = "RuleConfigurationName"
        case ruleEvaluationJobArn = "RuleEvaluationJobArn"
        case ruleEvaluationStatus = "RuleEvaluationStatus"
        case statusDetails = "StatusDetails"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lastModifiedTime = self.lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
        if let ruleConfigurationName = self.ruleConfigurationName {
            try encodeContainer.encode(ruleConfigurationName, forKey: .ruleConfigurationName)
        }
        if let ruleEvaluationJobArn = self.ruleEvaluationJobArn {
            try encodeContainer.encode(ruleEvaluationJobArn, forKey: .ruleEvaluationJobArn)
        }
        if let ruleEvaluationStatus = self.ruleEvaluationStatus {
            try encodeContainer.encode(ruleEvaluationStatus.rawValue, forKey: .ruleEvaluationStatus)
        }
        if let statusDetails = self.statusDetails {
            try encodeContainer.encode(statusDetails, forKey: .statusDetails)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleConfigurationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ruleConfigurationName)
        ruleConfigurationName = ruleConfigurationNameDecoded
        let ruleEvaluationJobArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ruleEvaluationJobArn)
        ruleEvaluationJobArn = ruleEvaluationJobArnDecoded
        let ruleEvaluationStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.RuleEvaluationStatus.self, forKey: .ruleEvaluationStatus)
        ruleEvaluationStatus = ruleEvaluationStatusDecoded
        let statusDetailsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusDetails)
        statusDetails = statusDetailsDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
    }
}
