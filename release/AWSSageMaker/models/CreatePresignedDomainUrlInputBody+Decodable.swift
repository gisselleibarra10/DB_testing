// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreatePresignedDomainUrlInputBody: Swift.Equatable {
    let domainId: Swift.String?
    let userProfileName: Swift.String?
    let sessionExpirationDurationInSeconds: Swift.Int?
    let expiresInSeconds: Swift.Int?
}

extension CreatePresignedDomainUrlInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainId = "DomainId"
        case expiresInSeconds = "ExpiresInSeconds"
        case sessionExpirationDurationInSeconds = "SessionExpirationDurationInSeconds"
        case userProfileName = "UserProfileName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainId)
        domainId = domainIdDecoded
        let userProfileNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userProfileName)
        userProfileName = userProfileNameDecoded
        let sessionExpirationDurationInSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .sessionExpirationDurationInSeconds)
        sessionExpirationDurationInSeconds = sessionExpirationDurationInSecondsDecoded
        let expiresInSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .expiresInSeconds)
        expiresInSeconds = expiresInSecondsDecoded
    }
}
