// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdatePipelineInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case parallelismConfiguration = "ParallelismConfiguration"
        case pipelineDefinition = "PipelineDefinition"
        case pipelineDefinitionS3Location = "PipelineDefinitionS3Location"
        case pipelineDescription = "PipelineDescription"
        case pipelineDisplayName = "PipelineDisplayName"
        case pipelineName = "PipelineName"
        case roleArn = "RoleArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let parallelismConfiguration = self.parallelismConfiguration {
            try encodeContainer.encode(parallelismConfiguration, forKey: .parallelismConfiguration)
        }
        if let pipelineDefinition = self.pipelineDefinition {
            try encodeContainer.encode(pipelineDefinition, forKey: .pipelineDefinition)
        }
        if let pipelineDefinitionS3Location = self.pipelineDefinitionS3Location {
            try encodeContainer.encode(pipelineDefinitionS3Location, forKey: .pipelineDefinitionS3Location)
        }
        if let pipelineDescription = self.pipelineDescription {
            try encodeContainer.encode(pipelineDescription, forKey: .pipelineDescription)
        }
        if let pipelineDisplayName = self.pipelineDisplayName {
            try encodeContainer.encode(pipelineDisplayName, forKey: .pipelineDisplayName)
        }
        if let pipelineName = self.pipelineName {
            try encodeContainer.encode(pipelineName, forKey: .pipelineName)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }
}
