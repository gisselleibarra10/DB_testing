// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.ArtifactSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case artifactArn = "ArtifactArn"
        case artifactName = "ArtifactName"
        case artifactType = "ArtifactType"
        case creationTime = "CreationTime"
        case lastModifiedTime = "LastModifiedTime"
        case source = "Source"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let artifactArn = self.artifactArn {
            try encodeContainer.encode(artifactArn, forKey: .artifactArn)
        }
        if let artifactName = self.artifactName {
            try encodeContainer.encode(artifactName, forKey: .artifactName)
        }
        if let artifactType = self.artifactType {
            try encodeContainer.encode(artifactType, forKey: .artifactType)
        }
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let lastModifiedTime = self.lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
        if let source = self.source {
            try encodeContainer.encode(source, forKey: .source)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .artifactArn)
        artifactArn = artifactArnDecoded
        let artifactNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .artifactName)
        artifactName = artifactNameDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ArtifactSource.self, forKey: .source)
        source = sourceDecoded
        let artifactTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .artifactType)
        artifactType = artifactTypeDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
    }
}
