// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.AsyncInferenceNotificationConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errorTopic = "ErrorTopic"
        case successTopic = "SuccessTopic"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errorTopic = self.errorTopic {
            try encodeContainer.encode(errorTopic, forKey: .errorTopic)
        }
        if let successTopic = self.successTopic {
            try encodeContainer.encode(successTopic, forKey: .successTopic)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successTopicDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .successTopic)
        successTopic = successTopicDecoded
        let errorTopicDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorTopic)
        errorTopic = errorTopicDecoded
    }
}
