// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeviceFleetsOutputResponseBody: Swift.Equatable {
    let deviceFleetSummaries: [SageMakerClientTypes.DeviceFleetSummary]?
    let nextToken: Swift.String?
}

extension ListDeviceFleetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceFleetSummaries = "DeviceFleetSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceFleetSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.DeviceFleetSummary?].self, forKey: .deviceFleetSummaries)
        var deviceFleetSummariesDecoded0:[SageMakerClientTypes.DeviceFleetSummary]? = nil
        if let deviceFleetSummariesContainer = deviceFleetSummariesContainer {
            deviceFleetSummariesDecoded0 = [SageMakerClientTypes.DeviceFleetSummary]()
            for structure0 in deviceFleetSummariesContainer {
                if let structure0 = structure0 {
                    deviceFleetSummariesDecoded0?.append(structure0)
                }
            }
        }
        deviceFleetSummaries = deviceFleetSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
