// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateTrialInputBody: Swift.Equatable {
    let trialName: Swift.String?
    let displayName: Swift.String?
    let experimentName: Swift.String?
    let metadataProperties: SageMakerClientTypes.MetadataProperties?
    let tags: [SageMakerClientTypes.Tag]?
}

extension CreateTrialInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case displayName = "DisplayName"
        case experimentName = "ExperimentName"
        case metadataProperties = "MetadataProperties"
        case tags = "Tags"
        case trialName = "TrialName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trialNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trialName)
        trialName = trialNameDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let experimentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .experimentName)
        experimentName = experimentNameDecoded
        let metadataPropertiesDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MetadataProperties.self, forKey: .metadataProperties)
        metadataProperties = metadataPropertiesDecoded
        let tagsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[SageMakerClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [SageMakerClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
