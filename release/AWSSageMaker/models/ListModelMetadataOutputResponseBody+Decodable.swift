// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListModelMetadataOutputResponseBody: Swift.Equatable {
    let modelMetadataSummaries: [SageMakerClientTypes.ModelMetadataSummary]?
    let nextToken: Swift.String?
}

extension ListModelMetadataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case modelMetadataSummaries = "ModelMetadataSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelMetadataSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.ModelMetadataSummary?].self, forKey: .modelMetadataSummaries)
        var modelMetadataSummariesDecoded0:[SageMakerClientTypes.ModelMetadataSummary]? = nil
        if let modelMetadataSummariesContainer = modelMetadataSummariesContainer {
            modelMetadataSummariesDecoded0 = [SageMakerClientTypes.ModelMetadataSummary]()
            for structure0 in modelMetadataSummariesContainer {
                if let structure0 = structure0 {
                    modelMetadataSummariesDecoded0?.append(structure0)
                }
            }
        }
        modelMetadataSummaries = modelMetadataSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
