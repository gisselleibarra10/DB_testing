// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAutoMLJobInput: Swift.Equatable {
    /// A collection of settings used to configure an AutoML job.
    public var autoMLJobConfig: SageMakerClientTypes.AutoMLJobConfig?
    /// Identifies an Autopilot job. The name must be unique to your account and is case-insensitive.
    /// This member is required.
    public var autoMLJobName: Swift.String?
    /// Defines the objective metric used to measure the predictive quality of an AutoML job. You provide an [AutoMLJobObjective$MetricName] and Autopilot infers whether to minimize or maximize it.
    public var autoMLJobObjective: SageMakerClientTypes.AutoMLJobObjective?
    /// Generates possible candidates without training the models. A candidate is a combination of data preprocessors, algorithms, and algorithm parameter settings.
    public var generateCandidateDefinitionsOnly: Swift.Bool
    /// An array of channel objects that describes the input data and its location. Each channel is a named input source. Similar to InputDataConfig supported by . Format(s) supported: CSV, Parquet. A minimum of 500 rows is required for the training dataset. There is not a minimum number of rows required for the validation dataset.
    /// This member is required.
    public var inputDataConfig: [SageMakerClientTypes.AutoMLChannel]?
    /// Specifies how to generate the endpoint name for an automatic one-click Autopilot model deployment.
    public var modelDeployConfig: SageMakerClientTypes.ModelDeployConfig?
    /// Provides information about encryption and the Amazon S3 output path needed to store artifacts from an AutoML job. Format(s) supported: CSV.
    /// This member is required.
    public var outputDataConfig: SageMakerClientTypes.AutoMLOutputDataConfig?
    /// Defines the type of supervised learning available for the candidates. For more information, see [ Amazon SageMaker Autopilot problem types and algorithm support](https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-automate-model-development-problem-types.html).
    public var problemType: SageMakerClientTypes.ProblemType?
    /// The ARN of the role that is used to access the data.
    /// This member is required.
    public var roleArn: Swift.String?
    /// Each tag consists of a key and an optional value. Tag keys must be unique per resource.
    public var tags: [SageMakerClientTypes.Tag]?

    public init (
        autoMLJobConfig: SageMakerClientTypes.AutoMLJobConfig? = nil,
        autoMLJobName: Swift.String? = nil,
        autoMLJobObjective: SageMakerClientTypes.AutoMLJobObjective? = nil,
        generateCandidateDefinitionsOnly: Swift.Bool = false,
        inputDataConfig: [SageMakerClientTypes.AutoMLChannel]? = nil,
        modelDeployConfig: SageMakerClientTypes.ModelDeployConfig? = nil,
        outputDataConfig: SageMakerClientTypes.AutoMLOutputDataConfig? = nil,
        problemType: SageMakerClientTypes.ProblemType? = nil,
        roleArn: Swift.String? = nil,
        tags: [SageMakerClientTypes.Tag]? = nil
    )
    {
        self.autoMLJobConfig = autoMLJobConfig
        self.autoMLJobName = autoMLJobName
        self.autoMLJobObjective = autoMLJobObjective
        self.generateCandidateDefinitionsOnly = generateCandidateDefinitionsOnly
        self.inputDataConfig = inputDataConfig
        self.modelDeployConfig = modelDeployConfig
        self.outputDataConfig = outputDataConfig
        self.problemType = problemType
        self.roleArn = roleArn
        self.tags = tags
    }
}
