// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateEndpointConfigInput: Swift.Equatable {
    /// Specifies configuration for how an endpoint performs asynchronous inference. This is a required field in order for your Endpoint to be invoked using [InvokeEndpointAsync](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_runtime_InvokeEndpointAsync.html).
    public var asyncInferenceConfig: SageMakerClientTypes.AsyncInferenceConfig?
    /// Configuration to control how SageMaker captures inference data.
    public var dataCaptureConfig: SageMakerClientTypes.DataCaptureConfig?
    /// The name of the endpoint configuration. You specify this name in a [CreateEndpoint] request.
    /// This member is required.
    public var endpointConfigName: Swift.String?
    /// The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service key that SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint. The KmsKeyId can be any of the following formats:
    ///
    /// * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab
    ///
    /// * Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
    ///
    /// * Alias name: alias/ExampleAlias
    ///
    /// * Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias
    ///
    ///
    /// The KMS key policy must grant permission to the IAM role that you specify in your CreateEndpoint, UpdateEndpoint requests. For more information, refer to the Amazon Web Services Key Management Service section[ Using Key Policies in Amazon Web Services KMS ](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html) Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can't request a KmsKeyId when using an instance type with local storage. If any of the models that you specify in the ProductionVariants parameter use nitro-based instances with local storage, do not specify a value for the KmsKeyId parameter. If you specify a value for KmsKeyId when using any nitro-based instances with local storage, the call to CreateEndpointConfig fails. For a list of instance types that support local instance storage, see [Instance Store Volumes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes). For more information about local instance storage encryption, see [SSD Instance Store Volumes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html).
    public var kmsKeyId: Swift.String?
    /// An list of ProductionVariant objects, one for each model that you want to host at this endpoint.
    /// This member is required.
    public var productionVariants: [SageMakerClientTypes.ProductionVariant]?
    /// An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see [Tagging Amazon Web Services Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
    public var tags: [SageMakerClientTypes.Tag]?

    public init (
        asyncInferenceConfig: SageMakerClientTypes.AsyncInferenceConfig? = nil,
        dataCaptureConfig: SageMakerClientTypes.DataCaptureConfig? = nil,
        endpointConfigName: Swift.String? = nil,
        kmsKeyId: Swift.String? = nil,
        productionVariants: [SageMakerClientTypes.ProductionVariant]? = nil,
        tags: [SageMakerClientTypes.Tag]? = nil
    )
    {
        self.asyncInferenceConfig = asyncInferenceConfig
        self.dataCaptureConfig = dataCaptureConfig
        self.endpointConfigName = endpointConfigName
        self.kmsKeyId = kmsKeyId
        self.productionVariants = productionVariants
        self.tags = tags
    }
}
