// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEdgePackagingJobsOutputResponseBody: Swift.Equatable {
    let edgePackagingJobSummaries: [SageMakerClientTypes.EdgePackagingJobSummary]?
    let nextToken: Swift.String?
}

extension ListEdgePackagingJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case edgePackagingJobSummaries = "EdgePackagingJobSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let edgePackagingJobSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.EdgePackagingJobSummary?].self, forKey: .edgePackagingJobSummaries)
        var edgePackagingJobSummariesDecoded0:[SageMakerClientTypes.EdgePackagingJobSummary]? = nil
        if let edgePackagingJobSummariesContainer = edgePackagingJobSummariesContainer {
            edgePackagingJobSummariesDecoded0 = [SageMakerClientTypes.EdgePackagingJobSummary]()
            for structure0 in edgePackagingJobSummariesContainer {
                if let structure0 = structure0 {
                    edgePackagingJobSummariesDecoded0?.append(structure0)
                }
            }
        }
        edgePackagingJobSummaries = edgePackagingJobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
