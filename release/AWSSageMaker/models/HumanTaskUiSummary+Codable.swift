// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.HumanTaskUiSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case humanTaskUiArn = "HumanTaskUiArn"
        case humanTaskUiName = "HumanTaskUiName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let humanTaskUiArn = self.humanTaskUiArn {
            try encodeContainer.encode(humanTaskUiArn, forKey: .humanTaskUiArn)
        }
        if let humanTaskUiName = self.humanTaskUiName {
            try encodeContainer.encode(humanTaskUiName, forKey: .humanTaskUiName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let humanTaskUiNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .humanTaskUiName)
        humanTaskUiName = humanTaskUiNameDecoded
        let humanTaskUiArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .humanTaskUiArn)
        humanTaskUiArn = humanTaskUiArnDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
    }
}
