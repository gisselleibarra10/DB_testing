// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCompilationJobsOutputResponseBody: Swift.Equatable {
    let compilationJobSummaries: [SageMakerClientTypes.CompilationJobSummary]?
    let nextToken: Swift.String?
}

extension ListCompilationJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case compilationJobSummaries = "CompilationJobSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let compilationJobSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.CompilationJobSummary?].self, forKey: .compilationJobSummaries)
        var compilationJobSummariesDecoded0:[SageMakerClientTypes.CompilationJobSummary]? = nil
        if let compilationJobSummariesContainer = compilationJobSummariesContainer {
            compilationJobSummariesDecoded0 = [SageMakerClientTypes.CompilationJobSummary]()
            for structure0 in compilationJobSummariesContainer {
                if let structure0 = structure0 {
                    compilationJobSummariesDecoded0?.append(structure0)
                }
            }
        }
        compilationJobSummaries = compilationJobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
