// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStageDevicesOutputResponseBody: Swift.Equatable {
    let deviceDeploymentSummaries: [SageMakerClientTypes.DeviceDeploymentSummary]?
    let nextToken: Swift.String?
}

extension ListStageDevicesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceDeploymentSummaries = "DeviceDeploymentSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceDeploymentSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.DeviceDeploymentSummary?].self, forKey: .deviceDeploymentSummaries)
        var deviceDeploymentSummariesDecoded0:[SageMakerClientTypes.DeviceDeploymentSummary]? = nil
        if let deviceDeploymentSummariesContainer = deviceDeploymentSummariesContainer {
            deviceDeploymentSummariesDecoded0 = [SageMakerClientTypes.DeviceDeploymentSummary]()
            for structure0 in deviceDeploymentSummariesContainer {
                if let structure0 = structure0 {
                    deviceDeploymentSummariesDecoded0?.append(structure0)
                }
            }
        }
        deviceDeploymentSummaries = deviceDeploymentSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
