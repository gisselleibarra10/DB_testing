// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.ProductionVariantServerlessConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxConcurrency = "MaxConcurrency"
        case memorySizeInMB = "MemorySizeInMB"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxConcurrency = self.maxConcurrency {
            try encodeContainer.encode(maxConcurrency, forKey: .maxConcurrency)
        }
        if let memorySizeInMB = self.memorySizeInMB {
            try encodeContainer.encode(memorySizeInMB, forKey: .memorySizeInMB)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let memorySizeInMBDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .memorySizeInMB)
        memorySizeInMB = memorySizeInMBDecoded
        let maxConcurrencyDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxConcurrency)
        maxConcurrency = maxConcurrencyDecoded
    }
}
