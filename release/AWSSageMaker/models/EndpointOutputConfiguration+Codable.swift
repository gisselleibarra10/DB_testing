// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.EndpointOutputConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case endpointName = "EndpointName"
        case initialInstanceCount = "InitialInstanceCount"
        case instanceType = "InstanceType"
        case variantName = "VariantName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let endpointName = self.endpointName {
            try encodeContainer.encode(endpointName, forKey: .endpointName)
        }
        if initialInstanceCount != 0 {
            try encodeContainer.encode(initialInstanceCount, forKey: .initialInstanceCount)
        }
        if let instanceType = self.instanceType {
            try encodeContainer.encode(instanceType.rawValue, forKey: .instanceType)
        }
        if let variantName = self.variantName {
            try encodeContainer.encode(variantName, forKey: .variantName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endpointName)
        endpointName = endpointNameDecoded
        let variantNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .variantName)
        variantName = variantNameDecoded
        let instanceTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ProductionVariantInstanceType.self, forKey: .instanceType)
        instanceType = instanceTypeDecoded
        let initialInstanceCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .initialInstanceCount) ?? 0
        initialInstanceCount = initialInstanceCountDecoded
    }
}
