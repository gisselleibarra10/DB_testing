// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.AlgorithmValidationSpecification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case validationProfiles = "ValidationProfiles"
        case validationRole = "ValidationRole"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let validationProfiles = validationProfiles {
            var validationProfilesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .validationProfiles)
            for algorithmvalidationprofiles0 in validationProfiles {
                try validationProfilesContainer.encode(algorithmvalidationprofiles0)
            }
        }
        if let validationRole = self.validationRole {
            try encodeContainer.encode(validationRole, forKey: .validationRole)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let validationRoleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .validationRole)
        validationRole = validationRoleDecoded
        let validationProfilesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.AlgorithmValidationProfile?].self, forKey: .validationProfiles)
        var validationProfilesDecoded0:[SageMakerClientTypes.AlgorithmValidationProfile]? = nil
        if let validationProfilesContainer = validationProfilesContainer {
            validationProfilesDecoded0 = [SageMakerClientTypes.AlgorithmValidationProfile]()
            for structure0 in validationProfilesContainer {
                if let structure0 = structure0 {
                    validationProfilesDecoded0?.append(structure0)
                }
            }
        }
        validationProfiles = validationProfilesDecoded0
    }
}
