// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListTrialComponentsInput: Swift.Equatable {
    /// A filter that returns only components created after the specified time.
    public var createdAfter: ClientRuntime.Date?
    /// A filter that returns only components created before the specified time.
    public var createdBefore: ClientRuntime.Date?
    /// A filter that returns only components that are part of the specified experiment. If you specify ExperimentName, you can't filter by SourceArn or TrialName.
    public var experimentName: Swift.String?
    /// The maximum number of components to return in the response. The default value is 10.
    public var maxResults: Swift.Int?
    /// If the previous call to ListTrialComponents didn't return the full set of components, the call returns a token for getting the next set of components.
    public var nextToken: Swift.String?
    /// The property used to sort results. The default value is CreationTime.
    public var sortBy: SageMakerClientTypes.SortTrialComponentsBy?
    /// The sort order. The default value is Descending.
    public var sortOrder: SageMakerClientTypes.SortOrder?
    /// A filter that returns only components that have the specified source Amazon Resource Name (ARN). If you specify SourceArn, you can't filter by ExperimentName or TrialName.
    public var sourceArn: Swift.String?
    /// A filter that returns only components that are part of the specified trial. If you specify TrialName, you can't filter by ExperimentName or SourceArn.
    public var trialName: Swift.String?

    public init (
        createdAfter: ClientRuntime.Date? = nil,
        createdBefore: ClientRuntime.Date? = nil,
        experimentName: Swift.String? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        sortBy: SageMakerClientTypes.SortTrialComponentsBy? = nil,
        sortOrder: SageMakerClientTypes.SortOrder? = nil,
        sourceArn: Swift.String? = nil,
        trialName: Swift.String? = nil
    )
    {
        self.createdAfter = createdAfter
        self.createdBefore = createdBefore
        self.experimentName = experimentName
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
        self.sourceArn = sourceArn
        self.trialName = trialName
    }
}
