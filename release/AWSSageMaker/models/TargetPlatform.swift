// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    /// Contains information about a target platform that you want your model to run on, such as OS, architecture, and accelerators. It is an alternative of TargetDevice.
    public struct TargetPlatform: Swift.Equatable {
        /// Specifies a target platform accelerator (optional).
        ///
        /// * NVIDIA: Nvidia graphics processing unit. It also requires gpu-code, trt-ver, cuda-ver compiler options
        ///
        /// * MALI: ARM Mali graphics processor
        ///
        /// * INTEL_GRAPHICS: Integrated Intel graphics
        public var accelerator: SageMakerClientTypes.TargetPlatformAccelerator?
        /// Specifies a target platform architecture.
        ///
        /// * X86_64: 64-bit version of the x86 instruction set.
        ///
        /// * X86: 32-bit version of the x86 instruction set.
        ///
        /// * ARM64: ARMv8 64-bit CPU.
        ///
        /// * ARM_EABIHF: ARMv7 32-bit, Hard Float.
        ///
        /// * ARM_EABI: ARMv7 32-bit, Soft Float. Used by Android 32-bit ARM platform.
        /// This member is required.
        public var arch: SageMakerClientTypes.TargetPlatformArch?
        /// Specifies a target platform OS.
        ///
        /// * LINUX: Linux-based operating systems.
        ///
        /// * ANDROID: Android operating systems. Android API level can be specified using the ANDROID_PLATFORM compiler option. For example, "CompilerOptions": {'ANDROID_PLATFORM': 28}
        /// This member is required.
        public var os: SageMakerClientTypes.TargetPlatformOs?

        public init (
            accelerator: SageMakerClientTypes.TargetPlatformAccelerator? = nil,
            arch: SageMakerClientTypes.TargetPlatformArch? = nil,
            os: SageMakerClientTypes.TargetPlatformOs? = nil
        )
        {
            self.accelerator = accelerator
            self.arch = arch
            self.os = os
        }
    }

}
