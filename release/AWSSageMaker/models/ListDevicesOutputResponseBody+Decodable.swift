// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDevicesOutputResponseBody: Swift.Equatable {
    let deviceSummaries: [SageMakerClientTypes.DeviceSummary]?
    let nextToken: Swift.String?
}

extension ListDevicesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceSummaries = "DeviceSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.DeviceSummary?].self, forKey: .deviceSummaries)
        var deviceSummariesDecoded0:[SageMakerClientTypes.DeviceSummary]? = nil
        if let deviceSummariesContainer = deviceSummariesContainer {
            deviceSummariesDecoded0 = [SageMakerClientTypes.DeviceSummary]()
            for structure0 in deviceSummariesContainer {
                if let structure0 = structure0 {
                    deviceSummariesDecoded0?.append(structure0)
                }
            }
        }
        deviceSummaries = deviceSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
