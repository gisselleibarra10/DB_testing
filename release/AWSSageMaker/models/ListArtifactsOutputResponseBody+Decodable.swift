// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListArtifactsOutputResponseBody: Swift.Equatable {
    let artifactSummaries: [SageMakerClientTypes.ArtifactSummary]?
    let nextToken: Swift.String?
}

extension ListArtifactsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case artifactSummaries = "ArtifactSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.ArtifactSummary?].self, forKey: .artifactSummaries)
        var artifactSummariesDecoded0:[SageMakerClientTypes.ArtifactSummary]? = nil
        if let artifactSummariesContainer = artifactSummariesContainer {
            artifactSummariesDecoded0 = [SageMakerClientTypes.ArtifactSummary]()
            for structure0 in artifactSummariesContainer {
                if let structure0 = structure0 {
                    artifactSummariesDecoded0?.append(structure0)
                }
            }
        }
        artifactSummaries = artifactSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
