// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.SourceAlgorithmSpecification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case sourceAlgorithms = "SourceAlgorithms"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sourceAlgorithms = sourceAlgorithms {
            var sourceAlgorithmsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .sourceAlgorithms)
            for sourcealgorithmlist0 in sourceAlgorithms {
                try sourceAlgorithmsContainer.encode(sourcealgorithmlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceAlgorithmsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.SourceAlgorithm?].self, forKey: .sourceAlgorithms)
        var sourceAlgorithmsDecoded0:[SageMakerClientTypes.SourceAlgorithm]? = nil
        if let sourceAlgorithmsContainer = sourceAlgorithmsContainer {
            sourceAlgorithmsDecoded0 = [SageMakerClientTypes.SourceAlgorithm]()
            for structure0 in sourceAlgorithmsContainer {
                if let structure0 = structure0 {
                    sourceAlgorithmsDecoded0?.append(structure0)
                }
            }
        }
        sourceAlgorithms = sourceAlgorithmsDecoded0
    }
}
