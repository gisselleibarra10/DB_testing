// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeModelOutputResponse: Swift.Equatable {
    /// The containers in the inference pipeline.
    public var containers: [SageMakerClientTypes.ContainerDefinition]?
    /// A timestamp that shows when the model was created.
    /// This member is required.
    public var creationTime: ClientRuntime.Date?
    /// If True, no inbound or outbound network calls can be made to or from the model container.
    public var enableNetworkIsolation: Swift.Bool
    /// The Amazon Resource Name (ARN) of the IAM role that you specified for the model.
    /// This member is required.
    public var executionRoleArn: Swift.String?
    /// Specifies details of how containers in a multi-container endpoint are called.
    public var inferenceExecutionConfig: SageMakerClientTypes.InferenceExecutionConfig?
    /// The Amazon Resource Name (ARN) of the model.
    /// This member is required.
    public var modelArn: Swift.String?
    /// Name of the SageMaker model.
    /// This member is required.
    public var modelName: Swift.String?
    /// The location of the primary inference code, associated artifacts, and custom environment map that the inference code uses when it is deployed in production.
    public var primaryContainer: SageMakerClientTypes.ContainerDefinition?
    /// A [VpcConfig] object that specifies the VPC that this model has access to. For more information, see [Protect Endpoints by Using an Amazon Virtual Private Cloud](https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html)
    public var vpcConfig: SageMakerClientTypes.VpcConfig?

    public init (
        containers: [SageMakerClientTypes.ContainerDefinition]? = nil,
        creationTime: ClientRuntime.Date? = nil,
        enableNetworkIsolation: Swift.Bool = false,
        executionRoleArn: Swift.String? = nil,
        inferenceExecutionConfig: SageMakerClientTypes.InferenceExecutionConfig? = nil,
        modelArn: Swift.String? = nil,
        modelName: Swift.String? = nil,
        primaryContainer: SageMakerClientTypes.ContainerDefinition? = nil,
        vpcConfig: SageMakerClientTypes.VpcConfig? = nil
    )
    {
        self.containers = containers
        self.creationTime = creationTime
        self.enableNetworkIsolation = enableNetworkIsolation
        self.executionRoleArn = executionRoleArn
        self.inferenceExecutionConfig = inferenceExecutionConfig
        self.modelArn = modelArn
        self.modelName = modelName
        self.primaryContainer = primaryContainer
        self.vpcConfig = vpcConfig
    }
}
