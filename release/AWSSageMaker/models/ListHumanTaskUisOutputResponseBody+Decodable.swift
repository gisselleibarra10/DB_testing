// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListHumanTaskUisOutputResponseBody: Swift.Equatable {
    let humanTaskUiSummaries: [SageMakerClientTypes.HumanTaskUiSummary]?
    let nextToken: Swift.String?
}

extension ListHumanTaskUisOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case humanTaskUiSummaries = "HumanTaskUiSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let humanTaskUiSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.HumanTaskUiSummary?].self, forKey: .humanTaskUiSummaries)
        var humanTaskUiSummariesDecoded0:[SageMakerClientTypes.HumanTaskUiSummary]? = nil
        if let humanTaskUiSummariesContainer = humanTaskUiSummariesContainer {
            humanTaskUiSummariesDecoded0 = [SageMakerClientTypes.HumanTaskUiSummary]()
            for structure0 in humanTaskUiSummariesContainer {
                if let structure0 = structure0 {
                    humanTaskUiSummariesDecoded0?.append(structure0)
                }
            }
        }
        humanTaskUiSummaries = humanTaskUiSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
