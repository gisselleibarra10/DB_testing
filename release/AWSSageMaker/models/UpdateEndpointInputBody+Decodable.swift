// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateEndpointInputBody: Swift.Equatable {
    let endpointName: Swift.String?
    let endpointConfigName: Swift.String?
    let retainAllVariantProperties: Swift.Bool
    let excludeRetainedVariantProperties: [SageMakerClientTypes.VariantProperty]?
    let deploymentConfig: SageMakerClientTypes.DeploymentConfig?
    let retainDeploymentConfig: Swift.Bool
}

extension UpdateEndpointInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deploymentConfig = "DeploymentConfig"
        case endpointConfigName = "EndpointConfigName"
        case endpointName = "EndpointName"
        case excludeRetainedVariantProperties = "ExcludeRetainedVariantProperties"
        case retainAllVariantProperties = "RetainAllVariantProperties"
        case retainDeploymentConfig = "RetainDeploymentConfig"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endpointName)
        endpointName = endpointNameDecoded
        let endpointConfigNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endpointConfigName)
        endpointConfigName = endpointConfigNameDecoded
        let retainAllVariantPropertiesDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .retainAllVariantProperties) ?? false
        retainAllVariantProperties = retainAllVariantPropertiesDecoded
        let excludeRetainedVariantPropertiesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.VariantProperty?].self, forKey: .excludeRetainedVariantProperties)
        var excludeRetainedVariantPropertiesDecoded0:[SageMakerClientTypes.VariantProperty]? = nil
        if let excludeRetainedVariantPropertiesContainer = excludeRetainedVariantPropertiesContainer {
            excludeRetainedVariantPropertiesDecoded0 = [SageMakerClientTypes.VariantProperty]()
            for structure0 in excludeRetainedVariantPropertiesContainer {
                if let structure0 = structure0 {
                    excludeRetainedVariantPropertiesDecoded0?.append(structure0)
                }
            }
        }
        excludeRetainedVariantProperties = excludeRetainedVariantPropertiesDecoded0
        let deploymentConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.DeploymentConfig.self, forKey: .deploymentConfig)
        deploymentConfig = deploymentConfigDecoded
        let retainDeploymentConfigDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .retainDeploymentConfig) ?? false
        retainDeploymentConfig = retainDeploymentConfigDecoded
    }
}
