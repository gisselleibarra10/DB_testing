// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeLabelingJobOutputResponse: Swift.Equatable {
    /// The date and time that the labeling job was created.
    /// This member is required.
    public var creationTime: ClientRuntime.Date?
    /// If the job failed, the reason that it failed.
    public var failureReason: Swift.String?
    /// Configuration information required for human workers to complete a labeling task.
    /// This member is required.
    public var humanTaskConfig: SageMakerClientTypes.HumanTaskConfig?
    /// Input configuration information for the labeling job, such as the Amazon S3 location of the data objects and the location of the manifest file that describes the data objects.
    /// This member is required.
    public var inputConfig: SageMakerClientTypes.LabelingJobInputConfig?
    /// A unique identifier for work done as part of a labeling job.
    /// This member is required.
    public var jobReferenceCode: Swift.String?
    /// The attribute used as the label in the output manifest file.
    public var labelAttributeName: Swift.String?
    /// The S3 location of the JSON file that defines the categories used to label data objects. Please note the following label-category limits:
    ///
    /// * Semantic segmentation labeling jobs using automated labeling: 20 labels
    ///
    /// * Box bounding labeling jobs (all): 10 labels
    ///
    ///
    /// The file is a JSON structure in the following format: {
    ///     "document-version": "2018-11-28"
    ///
    ///
    ///     "labels": [
    ///
    ///
    ///     {
    ///
    ///
    ///     "label": "label 1"
    ///
    ///
    ///     },
    ///
    ///
    ///     {
    ///
    ///
    ///     "label": "label 2"
    ///
    ///
    ///     },
    ///
    ///
    ///     ...
    ///
    ///
    ///     {
    ///
    ///
    ///     "label": "label n"
    ///
    ///
    ///     }
    ///
    ///
    ///     ]
    ///
    ///
    ///     }
    public var labelCategoryConfigS3Uri: Swift.String?
    /// Provides a breakdown of the number of data objects labeled by humans, the number of objects labeled by machine, the number of objects than couldn't be labeled, and the total number of objects labeled.
    /// This member is required.
    public var labelCounters: SageMakerClientTypes.LabelCounters?
    /// Configuration information for automated data labeling.
    public var labelingJobAlgorithmsConfig: SageMakerClientTypes.LabelingJobAlgorithmsConfig?
    /// The Amazon Resource Name (ARN) of the labeling job.
    /// This member is required.
    public var labelingJobArn: Swift.String?
    /// The name assigned to the labeling job when it was created.
    /// This member is required.
    public var labelingJobName: Swift.String?
    /// The location of the output produced by the labeling job.
    public var labelingJobOutput: SageMakerClientTypes.LabelingJobOutput?
    /// The processing status of the labeling job.
    /// This member is required.
    public var labelingJobStatus: SageMakerClientTypes.LabelingJobStatus?
    /// The date and time that the labeling job was last updated.
    /// This member is required.
    public var lastModifiedTime: ClientRuntime.Date?
    /// The location of the job's output data and the Amazon Web Services Key Management Service key ID for the key used to encrypt the output data, if any.
    /// This member is required.
    public var outputConfig: SageMakerClientTypes.LabelingJobOutputConfig?
    /// The Amazon Resource Name (ARN) that SageMaker assumes to perform tasks on your behalf during data labeling.
    /// This member is required.
    public var roleArn: Swift.String?
    /// A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped.
    public var stoppingConditions: SageMakerClientTypes.LabelingJobStoppingConditions?
    /// An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see [Tagging Amazon Web Services Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
    public var tags: [SageMakerClientTypes.Tag]?

    public init (
        creationTime: ClientRuntime.Date? = nil,
        failureReason: Swift.String? = nil,
        humanTaskConfig: SageMakerClientTypes.HumanTaskConfig? = nil,
        inputConfig: SageMakerClientTypes.LabelingJobInputConfig? = nil,
        jobReferenceCode: Swift.String? = nil,
        labelAttributeName: Swift.String? = nil,
        labelCategoryConfigS3Uri: Swift.String? = nil,
        labelCounters: SageMakerClientTypes.LabelCounters? = nil,
        labelingJobAlgorithmsConfig: SageMakerClientTypes.LabelingJobAlgorithmsConfig? = nil,
        labelingJobArn: Swift.String? = nil,
        labelingJobName: Swift.String? = nil,
        labelingJobOutput: SageMakerClientTypes.LabelingJobOutput? = nil,
        labelingJobStatus: SageMakerClientTypes.LabelingJobStatus? = nil,
        lastModifiedTime: ClientRuntime.Date? = nil,
        outputConfig: SageMakerClientTypes.LabelingJobOutputConfig? = nil,
        roleArn: Swift.String? = nil,
        stoppingConditions: SageMakerClientTypes.LabelingJobStoppingConditions? = nil,
        tags: [SageMakerClientTypes.Tag]? = nil
    )
    {
        self.creationTime = creationTime
        self.failureReason = failureReason
        self.humanTaskConfig = humanTaskConfig
        self.inputConfig = inputConfig
        self.jobReferenceCode = jobReferenceCode
        self.labelAttributeName = labelAttributeName
        self.labelCategoryConfigS3Uri = labelCategoryConfigS3Uri
        self.labelCounters = labelCounters
        self.labelingJobAlgorithmsConfig = labelingJobAlgorithmsConfig
        self.labelingJobArn = labelingJobArn
        self.labelingJobName = labelingJobName
        self.labelingJobOutput = labelingJobOutput
        self.labelingJobStatus = labelingJobStatus
        self.lastModifiedTime = lastModifiedTime
        self.outputConfig = outputConfig
        self.roleArn = roleArn
        self.stoppingConditions = stoppingConditions
        self.tags = tags
    }
}
