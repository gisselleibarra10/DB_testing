// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateUserProfileInput: Swift.Equatable {
    /// The ID of the associated Domain.
    /// This member is required.
    public var domainId: Swift.String?
    /// A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is "UserName". If the Domain's AuthMode is IAM Identity Center, this field is required. If the Domain's AuthMode is not IAM Identity Center, this field cannot be specified.
    public var singleSignOnUserIdentifier: Swift.String?
    /// The username of the associated Amazon Web Services Single Sign-On User for this UserProfile. If the Domain's AuthMode is IAM Identity Center, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not IAM Identity Center, this field cannot be specified.
    public var singleSignOnUserValue: Swift.String?
    /// Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags that you specify for the User Profile are also added to all Apps that the User Profile launches.
    public var tags: [SageMakerClientTypes.Tag]?
    /// A name for the UserProfile. This value is not case sensitive.
    /// This member is required.
    public var userProfileName: Swift.String?
    /// A collection of settings.
    public var userSettings: SageMakerClientTypes.UserSettings?

    public init (
        domainId: Swift.String? = nil,
        singleSignOnUserIdentifier: Swift.String? = nil,
        singleSignOnUserValue: Swift.String? = nil,
        tags: [SageMakerClientTypes.Tag]? = nil,
        userProfileName: Swift.String? = nil,
        userSettings: SageMakerClientTypes.UserSettings? = nil
    )
    {
        self.domainId = domainId
        self.singleSignOnUserIdentifier = singleSignOnUserIdentifier
        self.singleSignOnUserValue = singleSignOnUserValue
        self.tags = tags
        self.userProfileName = userProfileName
        self.userSettings = userSettings
    }
}
