// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAlgorithmInput: Swift.Equatable {
    /// A description of the algorithm.
    public var algorithmDescription: Swift.String?
    /// The name of the algorithm.
    /// This member is required.
    public var algorithmName: Swift.String?
    /// Whether to certify the algorithm so that it can be listed in Amazon Web Services Marketplace.
    public var certifyForMarketplace: Swift.Bool
    /// Specifies details about inference jobs that the algorithm runs, including the following:
    ///
    /// * The Amazon ECR paths of containers that contain the inference code and model artifacts.
    ///
    /// * The instance types that the algorithm supports for transform jobs and real-time endpoints used for inference.
    ///
    /// * The input and output content formats that the algorithm supports for inference.
    public var inferenceSpecification: SageMakerClientTypes.InferenceSpecification?
    /// An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see [Tagging Amazon Web Services Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
    public var tags: [SageMakerClientTypes.Tag]?
    /// Specifies details about training jobs run by this algorithm, including the following:
    ///
    /// * The Amazon ECR path of the container and the version digest of the algorithm.
    ///
    /// * The hyperparameters that the algorithm supports.
    ///
    /// * The instance types that the algorithm supports for training.
    ///
    /// * Whether the algorithm supports distributed training.
    ///
    /// * The metrics that the algorithm emits to Amazon CloudWatch.
    ///
    /// * Which metrics that the algorithm emits can be used as the objective metric for hyperparameter tuning jobs.
    ///
    /// * The input channels that the algorithm supports for training data. For example, an algorithm might support train, validation, and test channels.
    /// This member is required.
    public var trainingSpecification: SageMakerClientTypes.TrainingSpecification?
    /// Specifies configurations for one or more training jobs and that SageMaker runs to test the algorithm's training code and, optionally, one or more batch transform jobs that SageMaker runs to test the algorithm's inference code.
    public var validationSpecification: SageMakerClientTypes.AlgorithmValidationSpecification?

    public init (
        algorithmDescription: Swift.String? = nil,
        algorithmName: Swift.String? = nil,
        certifyForMarketplace: Swift.Bool = false,
        inferenceSpecification: SageMakerClientTypes.InferenceSpecification? = nil,
        tags: [SageMakerClientTypes.Tag]? = nil,
        trainingSpecification: SageMakerClientTypes.TrainingSpecification? = nil,
        validationSpecification: SageMakerClientTypes.AlgorithmValidationSpecification? = nil
    )
    {
        self.algorithmDescription = algorithmDescription
        self.algorithmName = algorithmName
        self.certifyForMarketplace = certifyForMarketplace
        self.inferenceSpecification = inferenceSpecification
        self.tags = tags
        self.trainingSpecification = trainingSpecification
        self.validationSpecification = validationSpecification
    }
}
