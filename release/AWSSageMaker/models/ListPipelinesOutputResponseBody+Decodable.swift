// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelinesOutputResponseBody: Swift.Equatable {
    let pipelineSummaries: [SageMakerClientTypes.PipelineSummary]?
    let nextToken: Swift.String?
}

extension ListPipelinesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case pipelineSummaries = "PipelineSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.PipelineSummary?].self, forKey: .pipelineSummaries)
        var pipelineSummariesDecoded0:[SageMakerClientTypes.PipelineSummary]? = nil
        if let pipelineSummariesContainer = pipelineSummariesContainer {
            pipelineSummariesDecoded0 = [SageMakerClientTypes.PipelineSummary]()
            for structure0 in pipelineSummariesContainer {
                if let structure0 = structure0 {
                    pipelineSummariesDecoded0?.append(structure0)
                }
            }
        }
        pipelineSummaries = pipelineSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
