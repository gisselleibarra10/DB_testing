// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.ModelConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case environmentParameters = "EnvironmentParameters"
        case inferenceSpecificationName = "InferenceSpecificationName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let environmentParameters = environmentParameters {
            var environmentParametersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .environmentParameters)
            for environmentparameters0 in environmentParameters {
                try environmentParametersContainer.encode(environmentparameters0)
            }
        }
        if let inferenceSpecificationName = self.inferenceSpecificationName {
            try encodeContainer.encode(inferenceSpecificationName, forKey: .inferenceSpecificationName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inferenceSpecificationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .inferenceSpecificationName)
        inferenceSpecificationName = inferenceSpecificationNameDecoded
        let environmentParametersContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.EnvironmentParameter?].self, forKey: .environmentParameters)
        var environmentParametersDecoded0:[SageMakerClientTypes.EnvironmentParameter]? = nil
        if let environmentParametersContainer = environmentParametersContainer {
            environmentParametersDecoded0 = [SageMakerClientTypes.EnvironmentParameter]()
            for structure0 in environmentParametersContainer {
                if let structure0 = structure0 {
                    environmentParametersDecoded0?.append(structure0)
                }
            }
        }
        environmentParameters = environmentParametersDecoded0
    }
}
