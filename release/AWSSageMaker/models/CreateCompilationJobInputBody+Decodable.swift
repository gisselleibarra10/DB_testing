// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateCompilationJobInputBody: Swift.Equatable {
    let compilationJobName: Swift.String?
    let roleArn: Swift.String?
    let modelPackageVersionArn: Swift.String?
    let inputConfig: SageMakerClientTypes.InputConfig?
    let outputConfig: SageMakerClientTypes.OutputConfig?
    let vpcConfig: SageMakerClientTypes.NeoVpcConfig?
    let stoppingCondition: SageMakerClientTypes.StoppingCondition?
    let tags: [SageMakerClientTypes.Tag]?
}

extension CreateCompilationJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case compilationJobName = "CompilationJobName"
        case inputConfig = "InputConfig"
        case modelPackageVersionArn = "ModelPackageVersionArn"
        case outputConfig = "OutputConfig"
        case roleArn = "RoleArn"
        case stoppingCondition = "StoppingCondition"
        case tags = "Tags"
        case vpcConfig = "VpcConfig"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let compilationJobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .compilationJobName)
        compilationJobName = compilationJobNameDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let modelPackageVersionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelPackageVersionArn)
        modelPackageVersionArn = modelPackageVersionArnDecoded
        let inputConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.InputConfig.self, forKey: .inputConfig)
        inputConfig = inputConfigDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.OutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let vpcConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.NeoVpcConfig.self, forKey: .vpcConfig)
        vpcConfig = vpcConfigDecoded
        let stoppingConditionDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.StoppingCondition.self, forKey: .stoppingCondition)
        stoppingCondition = stoppingConditionDecoded
        let tagsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[SageMakerClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [SageMakerClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
