// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.HyperParameterTuningJobWarmStartConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case parentHyperParameterTuningJobs = "ParentHyperParameterTuningJobs"
        case warmStartType = "WarmStartType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let parentHyperParameterTuningJobs = parentHyperParameterTuningJobs {
            var parentHyperParameterTuningJobsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .parentHyperParameterTuningJobs)
            for parenthyperparametertuningjobs0 in parentHyperParameterTuningJobs {
                try parentHyperParameterTuningJobsContainer.encode(parenthyperparametertuningjobs0)
            }
        }
        if let warmStartType = self.warmStartType {
            try encodeContainer.encode(warmStartType.rawValue, forKey: .warmStartType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let parentHyperParameterTuningJobsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.ParentHyperParameterTuningJob?].self, forKey: .parentHyperParameterTuningJobs)
        var parentHyperParameterTuningJobsDecoded0:[SageMakerClientTypes.ParentHyperParameterTuningJob]? = nil
        if let parentHyperParameterTuningJobsContainer = parentHyperParameterTuningJobsContainer {
            parentHyperParameterTuningJobsDecoded0 = [SageMakerClientTypes.ParentHyperParameterTuningJob]()
            for structure0 in parentHyperParameterTuningJobsContainer {
                if let structure0 = structure0 {
                    parentHyperParameterTuningJobsDecoded0?.append(structure0)
                }
            }
        }
        parentHyperParameterTuningJobs = parentHyperParameterTuningJobsDecoded0
        let warmStartTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.HyperParameterTuningJobWarmStartType.self, forKey: .warmStartType)
        warmStartType = warmStartTypeDecoded
    }
}
