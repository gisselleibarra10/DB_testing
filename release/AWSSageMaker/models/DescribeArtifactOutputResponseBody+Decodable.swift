// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeArtifactOutputResponseBody: Swift.Equatable {
    let artifactName: Swift.String?
    let artifactArn: Swift.String?
    let source: SageMakerClientTypes.ArtifactSource?
    let artifactType: Swift.String?
    let properties: [Swift.String:Swift.String]?
    let creationTime: ClientRuntime.Date?
    let createdBy: SageMakerClientTypes.UserContext?
    let lastModifiedTime: ClientRuntime.Date?
    let lastModifiedBy: SageMakerClientTypes.UserContext?
    let metadataProperties: SageMakerClientTypes.MetadataProperties?
    let lineageGroupArn: Swift.String?
}

extension DescribeArtifactOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case artifactArn = "ArtifactArn"
        case artifactName = "ArtifactName"
        case artifactType = "ArtifactType"
        case createdBy = "CreatedBy"
        case creationTime = "CreationTime"
        case lastModifiedBy = "LastModifiedBy"
        case lastModifiedTime = "LastModifiedTime"
        case lineageGroupArn = "LineageGroupArn"
        case metadataProperties = "MetadataProperties"
        case properties = "Properties"
        case source = "Source"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .artifactName)
        artifactName = artifactNameDecoded
        let artifactArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .artifactArn)
        artifactArn = artifactArnDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ArtifactSource.self, forKey: .source)
        source = sourceDecoded
        let artifactTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .artifactType)
        artifactType = artifactTypeDecoded
        let propertiesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .properties)
        var propertiesDecoded0: [Swift.String:Swift.String]? = nil
        if let propertiesContainer = propertiesContainer {
            propertiesDecoded0 = [Swift.String:Swift.String]()
            for (key0, stringparametervalue0) in propertiesContainer {
                if let stringparametervalue0 = stringparametervalue0 {
                    propertiesDecoded0?[key0] = stringparametervalue0
                }
            }
        }
        properties = propertiesDecoded0
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let createdByDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.UserContext.self, forKey: .createdBy)
        createdBy = createdByDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let lastModifiedByDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.UserContext.self, forKey: .lastModifiedBy)
        lastModifiedBy = lastModifiedByDecoded
        let metadataPropertiesDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MetadataProperties.self, forKey: .metadataProperties)
        metadataProperties = metadataPropertiesDecoded
        let lineageGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lineageGroupArn)
        lineageGroupArn = lineageGroupArnDecoded
    }
}
