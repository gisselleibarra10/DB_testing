// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.HyperParameterTuningResourceConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allocationStrategy = "AllocationStrategy"
        case instanceConfigs = "InstanceConfigs"
        case instanceCount = "InstanceCount"
        case instanceType = "InstanceType"
        case volumeKmsKeyId = "VolumeKmsKeyId"
        case volumeSizeInGB = "VolumeSizeInGB"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allocationStrategy = self.allocationStrategy {
            try encodeContainer.encode(allocationStrategy.rawValue, forKey: .allocationStrategy)
        }
        if let instanceConfigs = instanceConfigs {
            var instanceConfigsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .instanceConfigs)
            for hyperparametertuninginstanceconfigs0 in instanceConfigs {
                try instanceConfigsContainer.encode(hyperparametertuninginstanceconfigs0)
            }
        }
        if instanceCount != 0 {
            try encodeContainer.encode(instanceCount, forKey: .instanceCount)
        }
        if let instanceType = self.instanceType {
            try encodeContainer.encode(instanceType.rawValue, forKey: .instanceType)
        }
        if let volumeKmsKeyId = self.volumeKmsKeyId {
            try encodeContainer.encode(volumeKmsKeyId, forKey: .volumeKmsKeyId)
        }
        if volumeSizeInGB != 0 {
            try encodeContainer.encode(volumeSizeInGB, forKey: .volumeSizeInGB)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.TrainingInstanceType.self, forKey: .instanceType)
        instanceType = instanceTypeDecoded
        let instanceCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .instanceCount) ?? 0
        instanceCount = instanceCountDecoded
        let volumeSizeInGBDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .volumeSizeInGB) ?? 0
        volumeSizeInGB = volumeSizeInGBDecoded
        let volumeKmsKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .volumeKmsKeyId)
        volumeKmsKeyId = volumeKmsKeyIdDecoded
        let allocationStrategyDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.HyperParameterTuningAllocationStrategy.self, forKey: .allocationStrategy)
        allocationStrategy = allocationStrategyDecoded
        let instanceConfigsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.HyperParameterTuningInstanceConfig?].self, forKey: .instanceConfigs)
        var instanceConfigsDecoded0:[SageMakerClientTypes.HyperParameterTuningInstanceConfig]? = nil
        if let instanceConfigsContainer = instanceConfigsContainer {
            instanceConfigsDecoded0 = [SageMakerClientTypes.HyperParameterTuningInstanceConfig]()
            for structure0 in instanceConfigsContainer {
                if let structure0 = structure0 {
                    instanceConfigsDecoded0?.append(structure0)
                }
            }
        }
        instanceConfigs = instanceConfigsDecoded0
    }
}
