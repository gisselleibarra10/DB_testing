// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RenderUiTemplateOutputResponseBody: Swift.Equatable {
    let renderedContent: Swift.String?
    let errors: [SageMakerClientTypes.RenderingError]?
}

extension RenderUiTemplateOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errors = "Errors"
        case renderedContent = "RenderedContent"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let renderedContentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .renderedContent)
        renderedContent = renderedContentDecoded
        let errorsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.RenderingError?].self, forKey: .errors)
        var errorsDecoded0:[SageMakerClientTypes.RenderingError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [SageMakerClientTypes.RenderingError]()
            for structure0 in errorsContainer {
                if let structure0 = structure0 {
                    errorsDecoded0?.append(structure0)
                }
            }
        }
        errors = errorsDecoded0
    }
}
