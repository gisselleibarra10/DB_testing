// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFeatureGroupOutputResponseBody: Swift.Equatable {
    let featureGroupArn: Swift.String?
    let featureGroupName: Swift.String?
    let recordIdentifierFeatureName: Swift.String?
    let eventTimeFeatureName: Swift.String?
    let featureDefinitions: [SageMakerClientTypes.FeatureDefinition]?
    let creationTime: ClientRuntime.Date?
    let lastModifiedTime: ClientRuntime.Date?
    let onlineStoreConfig: SageMakerClientTypes.OnlineStoreConfig?
    let offlineStoreConfig: SageMakerClientTypes.OfflineStoreConfig?
    let roleArn: Swift.String?
    let featureGroupStatus: SageMakerClientTypes.FeatureGroupStatus?
    let offlineStoreStatus: SageMakerClientTypes.OfflineStoreStatus?
    let lastUpdateStatus: SageMakerClientTypes.LastUpdateStatus?
    let failureReason: Swift.String?
    let description: Swift.String?
    let nextToken: Swift.String?
    let onlineStoreTotalSizeBytes: Swift.Int?
}

extension DescribeFeatureGroupOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case description = "Description"
        case eventTimeFeatureName = "EventTimeFeatureName"
        case failureReason = "FailureReason"
        case featureDefinitions = "FeatureDefinitions"
        case featureGroupArn = "FeatureGroupArn"
        case featureGroupName = "FeatureGroupName"
        case featureGroupStatus = "FeatureGroupStatus"
        case lastModifiedTime = "LastModifiedTime"
        case lastUpdateStatus = "LastUpdateStatus"
        case nextToken = "NextToken"
        case offlineStoreConfig = "OfflineStoreConfig"
        case offlineStoreStatus = "OfflineStoreStatus"
        case onlineStoreConfig = "OnlineStoreConfig"
        case onlineStoreTotalSizeBytes = "OnlineStoreTotalSizeBytes"
        case recordIdentifierFeatureName = "RecordIdentifierFeatureName"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let featureGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .featureGroupArn)
        featureGroupArn = featureGroupArnDecoded
        let featureGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .featureGroupName)
        featureGroupName = featureGroupNameDecoded
        let recordIdentifierFeatureNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recordIdentifierFeatureName)
        recordIdentifierFeatureName = recordIdentifierFeatureNameDecoded
        let eventTimeFeatureNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventTimeFeatureName)
        eventTimeFeatureName = eventTimeFeatureNameDecoded
        let featureDefinitionsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.FeatureDefinition?].self, forKey: .featureDefinitions)
        var featureDefinitionsDecoded0:[SageMakerClientTypes.FeatureDefinition]? = nil
        if let featureDefinitionsContainer = featureDefinitionsContainer {
            featureDefinitionsDecoded0 = [SageMakerClientTypes.FeatureDefinition]()
            for structure0 in featureDefinitionsContainer {
                if let structure0 = structure0 {
                    featureDefinitionsDecoded0?.append(structure0)
                }
            }
        }
        featureDefinitions = featureDefinitionsDecoded0
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let onlineStoreConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.OnlineStoreConfig.self, forKey: .onlineStoreConfig)
        onlineStoreConfig = onlineStoreConfigDecoded
        let offlineStoreConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.OfflineStoreConfig.self, forKey: .offlineStoreConfig)
        offlineStoreConfig = offlineStoreConfigDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let featureGroupStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.FeatureGroupStatus.self, forKey: .featureGroupStatus)
        featureGroupStatus = featureGroupStatusDecoded
        let offlineStoreStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.OfflineStoreStatus.self, forKey: .offlineStoreStatus)
        offlineStoreStatus = offlineStoreStatusDecoded
        let lastUpdateStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.LastUpdateStatus.self, forKey: .lastUpdateStatus)
        lastUpdateStatus = lastUpdateStatusDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let onlineStoreTotalSizeBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .onlineStoreTotalSizeBytes)
        onlineStoreTotalSizeBytes = onlineStoreTotalSizeBytesDecoded
    }
}
