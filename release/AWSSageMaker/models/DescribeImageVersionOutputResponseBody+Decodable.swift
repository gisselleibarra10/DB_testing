// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeImageVersionOutputResponseBody: Swift.Equatable {
    let baseImage: Swift.String?
    let containerImage: Swift.String?
    let creationTime: ClientRuntime.Date?
    let failureReason: Swift.String?
    let imageArn: Swift.String?
    let imageVersionArn: Swift.String?
    let imageVersionStatus: SageMakerClientTypes.ImageVersionStatus?
    let lastModifiedTime: ClientRuntime.Date?
    let version: Swift.Int?
}

extension DescribeImageVersionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case baseImage = "BaseImage"
        case containerImage = "ContainerImage"
        case creationTime = "CreationTime"
        case failureReason = "FailureReason"
        case imageArn = "ImageArn"
        case imageVersionArn = "ImageVersionArn"
        case imageVersionStatus = "ImageVersionStatus"
        case lastModifiedTime = "LastModifiedTime"
        case version = "Version"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let baseImageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .baseImage)
        baseImage = baseImageDecoded
        let containerImageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .containerImage)
        containerImage = containerImageDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let imageArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imageArn)
        imageArn = imageArnDecoded
        let imageVersionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imageVersionArn)
        imageVersionArn = imageVersionArnDecoded
        let imageVersionStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ImageVersionStatus.self, forKey: .imageVersionStatus)
        imageVersionStatus = imageVersionStatusDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .version)
        version = versionDecoded
    }
}
