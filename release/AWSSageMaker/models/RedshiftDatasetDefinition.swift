// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    /// Configuration for Redshift Dataset Definition input.
    public struct RedshiftDatasetDefinition: Swift.Equatable {
        /// The Redshift cluster Identifier.
        /// This member is required.
        public var clusterId: Swift.String?
        /// The IAM role attached to your Redshift cluster that Amazon SageMaker uses to generate datasets.
        /// This member is required.
        public var clusterRoleArn: Swift.String?
        /// The name of the Redshift database used in Redshift query execution.
        /// This member is required.
        public var database: Swift.String?
        /// The database user name used in Redshift query execution.
        /// This member is required.
        public var dbUser: Swift.String?
        /// The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data from a Redshift execution.
        public var kmsKeyId: Swift.String?
        /// The compression used for Redshift query results.
        public var outputCompression: SageMakerClientTypes.RedshiftResultCompressionType?
        /// The data storage format for Redshift query results.
        /// This member is required.
        public var outputFormat: SageMakerClientTypes.RedshiftResultFormat?
        /// The location in Amazon S3 where the Redshift query results are stored.
        /// This member is required.
        public var outputS3Uri: Swift.String?
        /// The SQL query statements to be executed.
        /// This member is required.
        public var queryString: Swift.String?

        public init (
            clusterId: Swift.String? = nil,
            clusterRoleArn: Swift.String? = nil,
            database: Swift.String? = nil,
            dbUser: Swift.String? = nil,
            kmsKeyId: Swift.String? = nil,
            outputCompression: SageMakerClientTypes.RedshiftResultCompressionType? = nil,
            outputFormat: SageMakerClientTypes.RedshiftResultFormat? = nil,
            outputS3Uri: Swift.String? = nil,
            queryString: Swift.String? = nil
        )
        {
            self.clusterId = clusterId
            self.clusterRoleArn = clusterRoleArn
            self.database = database
            self.dbUser = dbUser
            self.kmsKeyId = kmsKeyId
            self.outputCompression = outputCompression
            self.outputFormat = outputFormat
            self.outputS3Uri = outputS3Uri
            self.queryString = queryString
        }
    }

}
