// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateFeatureGroupInputBody: Swift.Equatable {
    let featureGroupName: Swift.String?
    let recordIdentifierFeatureName: Swift.String?
    let eventTimeFeatureName: Swift.String?
    let featureDefinitions: [SageMakerClientTypes.FeatureDefinition]?
    let onlineStoreConfig: SageMakerClientTypes.OnlineStoreConfig?
    let offlineStoreConfig: SageMakerClientTypes.OfflineStoreConfig?
    let roleArn: Swift.String?
    let description: Swift.String?
    let tags: [SageMakerClientTypes.Tag]?
}

extension CreateFeatureGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case eventTimeFeatureName = "EventTimeFeatureName"
        case featureDefinitions = "FeatureDefinitions"
        case featureGroupName = "FeatureGroupName"
        case offlineStoreConfig = "OfflineStoreConfig"
        case onlineStoreConfig = "OnlineStoreConfig"
        case recordIdentifierFeatureName = "RecordIdentifierFeatureName"
        case roleArn = "RoleArn"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let featureGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .featureGroupName)
        featureGroupName = featureGroupNameDecoded
        let recordIdentifierFeatureNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .recordIdentifierFeatureName)
        recordIdentifierFeatureName = recordIdentifierFeatureNameDecoded
        let eventTimeFeatureNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventTimeFeatureName)
        eventTimeFeatureName = eventTimeFeatureNameDecoded
        let featureDefinitionsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.FeatureDefinition?].self, forKey: .featureDefinitions)
        var featureDefinitionsDecoded0:[SageMakerClientTypes.FeatureDefinition]? = nil
        if let featureDefinitionsContainer = featureDefinitionsContainer {
            featureDefinitionsDecoded0 = [SageMakerClientTypes.FeatureDefinition]()
            for structure0 in featureDefinitionsContainer {
                if let structure0 = structure0 {
                    featureDefinitionsDecoded0?.append(structure0)
                }
            }
        }
        featureDefinitions = featureDefinitionsDecoded0
        let onlineStoreConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.OnlineStoreConfig.self, forKey: .onlineStoreConfig)
        onlineStoreConfig = onlineStoreConfigDecoded
        let offlineStoreConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.OfflineStoreConfig.self, forKey: .offlineStoreConfig)
        offlineStoreConfig = offlineStoreConfigDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let tagsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[SageMakerClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [SageMakerClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
