// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    /// Defines a named input source, called a channel, to be used by an algorithm.
    public struct ChannelSpecification: Swift.Equatable {
        /// A brief description of the channel.
        public var description: Swift.String?
        /// Indicates whether the channel is required by the algorithm.
        public var isRequired: Swift.Bool
        /// The name of the channel.
        /// This member is required.
        public var name: Swift.String?
        /// The allowed compression types, if data compression is used.
        public var supportedCompressionTypes: [SageMakerClientTypes.CompressionType]?
        /// The supported MIME types for the data.
        /// This member is required.
        public var supportedContentTypes: [Swift.String]?
        /// The allowed input mode, either FILE or PIPE. In FILE mode, Amazon SageMaker copies the data from the input source onto the local Amazon Elastic Block Store (Amazon EBS) volumes before starting your training algorithm. This is the most commonly used input mode. In PIPE mode, Amazon SageMaker streams input data from the source directly to your algorithm without using the EBS volume.
        /// This member is required.
        public var supportedInputModes: [SageMakerClientTypes.TrainingInputMode]?

        public init (
            description: Swift.String? = nil,
            isRequired: Swift.Bool = false,
            name: Swift.String? = nil,
            supportedCompressionTypes: [SageMakerClientTypes.CompressionType]? = nil,
            supportedContentTypes: [Swift.String]? = nil,
            supportedInputModes: [SageMakerClientTypes.TrainingInputMode]? = nil
        )
        {
            self.description = description
            self.isRequired = isRequired
            self.name = name
            self.supportedCompressionTypes = supportedCompressionTypes
            self.supportedContentTypes = supportedContentTypes
            self.supportedInputModes = supportedInputModes
        }
    }

}
