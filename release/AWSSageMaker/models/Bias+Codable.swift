// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.Bias: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case postTrainingReport = "PostTrainingReport"
        case preTrainingReport = "PreTrainingReport"
        case report = "Report"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let postTrainingReport = self.postTrainingReport {
            try encodeContainer.encode(postTrainingReport, forKey: .postTrainingReport)
        }
        if let preTrainingReport = self.preTrainingReport {
            try encodeContainer.encode(preTrainingReport, forKey: .preTrainingReport)
        }
        if let report = self.report {
            try encodeContainer.encode(report, forKey: .report)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reportDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MetricsSource.self, forKey: .report)
        report = reportDecoded
        let preTrainingReportDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MetricsSource.self, forKey: .preTrainingReport)
        preTrainingReport = preTrainingReportDecoded
        let postTrainingReportDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MetricsSource.self, forKey: .postTrainingReport)
        postTrainingReport = postTrainingReportDecoded
    }
}
