// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListModelPackageGroupsOutputResponseBody: Swift.Equatable {
    let modelPackageGroupSummaryList: [SageMakerClientTypes.ModelPackageGroupSummary]?
    let nextToken: Swift.String?
}

extension ListModelPackageGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case modelPackageGroupSummaryList = "ModelPackageGroupSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelPackageGroupSummaryListContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.ModelPackageGroupSummary?].self, forKey: .modelPackageGroupSummaryList)
        var modelPackageGroupSummaryListDecoded0:[SageMakerClientTypes.ModelPackageGroupSummary]? = nil
        if let modelPackageGroupSummaryListContainer = modelPackageGroupSummaryListContainer {
            modelPackageGroupSummaryListDecoded0 = [SageMakerClientTypes.ModelPackageGroupSummary]()
            for structure0 in modelPackageGroupSummaryListContainer {
                if let structure0 = structure0 {
                    modelPackageGroupSummaryListDecoded0?.append(structure0)
                }
            }
        }
        modelPackageGroupSummaryList = modelPackageGroupSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
