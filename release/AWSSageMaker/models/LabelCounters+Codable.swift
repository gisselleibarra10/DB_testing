// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.LabelCounters: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failedNonRetryableError = "FailedNonRetryableError"
        case humanLabeled = "HumanLabeled"
        case machineLabeled = "MachineLabeled"
        case totalLabeled = "TotalLabeled"
        case unlabeled = "Unlabeled"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if failedNonRetryableError != 0 {
            try encodeContainer.encode(failedNonRetryableError, forKey: .failedNonRetryableError)
        }
        if humanLabeled != 0 {
            try encodeContainer.encode(humanLabeled, forKey: .humanLabeled)
        }
        if machineLabeled != 0 {
            try encodeContainer.encode(machineLabeled, forKey: .machineLabeled)
        }
        if totalLabeled != 0 {
            try encodeContainer.encode(totalLabeled, forKey: .totalLabeled)
        }
        if unlabeled != 0 {
            try encodeContainer.encode(unlabeled, forKey: .unlabeled)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalLabeledDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalLabeled) ?? 0
        totalLabeled = totalLabeledDecoded
        let humanLabeledDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .humanLabeled) ?? 0
        humanLabeled = humanLabeledDecoded
        let machineLabeledDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .machineLabeled) ?? 0
        machineLabeled = machineLabeledDecoded
        let failedNonRetryableErrorDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failedNonRetryableError) ?? 0
        failedNonRetryableError = failedNonRetryableErrorDecoded
        let unlabeledDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .unlabeled) ?? 0
        unlabeled = unlabeledDecoded
    }
}
