// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartPipelineExecutionInputBody: Swift.Equatable {
    let pipelineName: Swift.String?
    let pipelineExecutionDisplayName: Swift.String?
    let pipelineParameters: [SageMakerClientTypes.Parameter]?
    let pipelineExecutionDescription: Swift.String?
    let clientRequestToken: Swift.String?
    let parallelismConfiguration: SageMakerClientTypes.ParallelismConfiguration?
}

extension StartPipelineExecutionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case parallelismConfiguration = "ParallelismConfiguration"
        case pipelineExecutionDescription = "PipelineExecutionDescription"
        case pipelineExecutionDisplayName = "PipelineExecutionDisplayName"
        case pipelineName = "PipelineName"
        case pipelineParameters = "PipelineParameters"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineName)
        pipelineName = pipelineNameDecoded
        let pipelineExecutionDisplayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineExecutionDisplayName)
        pipelineExecutionDisplayName = pipelineExecutionDisplayNameDecoded
        let pipelineParametersContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Parameter?].self, forKey: .pipelineParameters)
        var pipelineParametersDecoded0:[SageMakerClientTypes.Parameter]? = nil
        if let pipelineParametersContainer = pipelineParametersContainer {
            pipelineParametersDecoded0 = [SageMakerClientTypes.Parameter]()
            for structure0 in pipelineParametersContainer {
                if let structure0 = structure0 {
                    pipelineParametersDecoded0?.append(structure0)
                }
            }
        }
        pipelineParameters = pipelineParametersDecoded0
        let pipelineExecutionDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineExecutionDescription)
        pipelineExecutionDescription = pipelineExecutionDescriptionDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let parallelismConfigurationDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ParallelismConfiguration.self, forKey: .parallelismConfiguration)
        parallelismConfiguration = parallelismConfigurationDecoded
    }
}
