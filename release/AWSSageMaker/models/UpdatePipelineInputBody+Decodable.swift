// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdatePipelineInputBody: Swift.Equatable {
    let pipelineName: Swift.String?
    let pipelineDisplayName: Swift.String?
    let pipelineDefinition: Swift.String?
    let pipelineDefinitionS3Location: SageMakerClientTypes.PipelineDefinitionS3Location?
    let pipelineDescription: Swift.String?
    let roleArn: Swift.String?
    let parallelismConfiguration: SageMakerClientTypes.ParallelismConfiguration?
}

extension UpdatePipelineInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case parallelismConfiguration = "ParallelismConfiguration"
        case pipelineDefinition = "PipelineDefinition"
        case pipelineDefinitionS3Location = "PipelineDefinitionS3Location"
        case pipelineDescription = "PipelineDescription"
        case pipelineDisplayName = "PipelineDisplayName"
        case pipelineName = "PipelineName"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineName)
        pipelineName = pipelineNameDecoded
        let pipelineDisplayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineDisplayName)
        pipelineDisplayName = pipelineDisplayNameDecoded
        let pipelineDefinitionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineDefinition)
        pipelineDefinition = pipelineDefinitionDecoded
        let pipelineDefinitionS3LocationDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.PipelineDefinitionS3Location.self, forKey: .pipelineDefinitionS3Location)
        pipelineDefinitionS3Location = pipelineDefinitionS3LocationDecoded
        let pipelineDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineDescription)
        pipelineDescription = pipelineDescriptionDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let parallelismConfigurationDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ParallelismConfiguration.self, forKey: .parallelismConfiguration)
        parallelismConfiguration = parallelismConfigurationDecoded
    }
}
