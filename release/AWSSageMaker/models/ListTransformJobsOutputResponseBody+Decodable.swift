// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTransformJobsOutputResponseBody: Swift.Equatable {
    let transformJobSummaries: [SageMakerClientTypes.TransformJobSummary]?
    let nextToken: Swift.String?
}

extension ListTransformJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case transformJobSummaries = "TransformJobSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transformJobSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.TransformJobSummary?].self, forKey: .transformJobSummaries)
        var transformJobSummariesDecoded0:[SageMakerClientTypes.TransformJobSummary]? = nil
        if let transformJobSummariesContainer = transformJobSummariesContainer {
            transformJobSummariesDecoded0 = [SageMakerClientTypes.TransformJobSummary]()
            for structure0 in transformJobSummariesContainer {
                if let structure0 = structure0 {
                    transformJobSummariesDecoded0?.append(structure0)
                }
            }
        }
        transformJobSummaries = transformJobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
