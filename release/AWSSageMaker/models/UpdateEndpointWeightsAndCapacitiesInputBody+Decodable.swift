// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateEndpointWeightsAndCapacitiesInputBody: Swift.Equatable {
    let endpointName: Swift.String?
    let desiredWeightsAndCapacities: [SageMakerClientTypes.DesiredWeightAndCapacity]?
}

extension UpdateEndpointWeightsAndCapacitiesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case desiredWeightsAndCapacities = "DesiredWeightsAndCapacities"
        case endpointName = "EndpointName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .endpointName)
        endpointName = endpointNameDecoded
        let desiredWeightsAndCapacitiesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.DesiredWeightAndCapacity?].self, forKey: .desiredWeightsAndCapacities)
        var desiredWeightsAndCapacitiesDecoded0:[SageMakerClientTypes.DesiredWeightAndCapacity]? = nil
        if let desiredWeightsAndCapacitiesContainer = desiredWeightsAndCapacitiesContainer {
            desiredWeightsAndCapacitiesDecoded0 = [SageMakerClientTypes.DesiredWeightAndCapacity]()
            for structure0 in desiredWeightsAndCapacitiesContainer {
                if let structure0 = structure0 {
                    desiredWeightsAndCapacitiesDecoded0?.append(structure0)
                }
            }
        }
        desiredWeightsAndCapacities = desiredWeightsAndCapacitiesDecoded0
    }
}
