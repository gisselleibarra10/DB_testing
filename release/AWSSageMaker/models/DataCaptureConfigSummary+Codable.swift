// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.DataCaptureConfigSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case captureStatus = "CaptureStatus"
        case currentSamplingPercentage = "CurrentSamplingPercentage"
        case destinationS3Uri = "DestinationS3Uri"
        case enableCapture = "EnableCapture"
        case kmsKeyId = "KmsKeyId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let captureStatus = self.captureStatus {
            try encodeContainer.encode(captureStatus.rawValue, forKey: .captureStatus)
        }
        if let currentSamplingPercentage = self.currentSamplingPercentage {
            try encodeContainer.encode(currentSamplingPercentage, forKey: .currentSamplingPercentage)
        }
        if let destinationS3Uri = self.destinationS3Uri {
            try encodeContainer.encode(destinationS3Uri, forKey: .destinationS3Uri)
        }
        if enableCapture != false {
            try encodeContainer.encode(enableCapture, forKey: .enableCapture)
        }
        if let kmsKeyId = self.kmsKeyId {
            try encodeContainer.encode(kmsKeyId, forKey: .kmsKeyId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enableCaptureDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enableCapture) ?? false
        enableCapture = enableCaptureDecoded
        let captureStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.CaptureStatus.self, forKey: .captureStatus)
        captureStatus = captureStatusDecoded
        let currentSamplingPercentageDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .currentSamplingPercentage)
        currentSamplingPercentage = currentSamplingPercentageDecoded
        let destinationS3UriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .destinationS3Uri)
        destinationS3Uri = destinationS3UriDecoded
        let kmsKeyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyId)
        kmsKeyId = kmsKeyIdDecoded
    }
}
