// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDataQualityJobDefinitionsOutputResponseBody: Swift.Equatable {
    let jobDefinitionSummaries: [SageMakerClientTypes.MonitoringJobDefinitionSummary]?
    let nextToken: Swift.String?
}

extension ListDataQualityJobDefinitionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case jobDefinitionSummaries = "JobDefinitionSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobDefinitionSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.MonitoringJobDefinitionSummary?].self, forKey: .jobDefinitionSummaries)
        var jobDefinitionSummariesDecoded0:[SageMakerClientTypes.MonitoringJobDefinitionSummary]? = nil
        if let jobDefinitionSummariesContainer = jobDefinitionSummariesContainer {
            jobDefinitionSummariesDecoded0 = [SageMakerClientTypes.MonitoringJobDefinitionSummary]()
            for structure0 in jobDefinitionSummariesContainer {
                if let structure0 = structure0 {
                    jobDefinitionSummariesDecoded0?.append(structure0)
                }
            }
        }
        jobDefinitionSummaries = jobDefinitionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
