// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLabelingJobsForWorkteamOutputResponseBody: Swift.Equatable {
    let labelingJobSummaryList: [SageMakerClientTypes.LabelingJobForWorkteamSummary]?
    let nextToken: Swift.String?
}

extension ListLabelingJobsForWorkteamOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case labelingJobSummaryList = "LabelingJobSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelingJobSummaryListContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.LabelingJobForWorkteamSummary?].self, forKey: .labelingJobSummaryList)
        var labelingJobSummaryListDecoded0:[SageMakerClientTypes.LabelingJobForWorkteamSummary]? = nil
        if let labelingJobSummaryListContainer = labelingJobSummaryListContainer {
            labelingJobSummaryListDecoded0 = [SageMakerClientTypes.LabelingJobForWorkteamSummary]()
            for structure0 in labelingJobSummaryListContainer {
                if let structure0 = structure0 {
                    labelingJobSummaryListDecoded0?.append(structure0)
                }
            }
        }
        labelingJobSummaryList = labelingJobSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
