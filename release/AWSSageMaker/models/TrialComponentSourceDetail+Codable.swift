// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.TrialComponentSourceDetail: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case processingJob = "ProcessingJob"
        case sourceArn = "SourceArn"
        case trainingJob = "TrainingJob"
        case transformJob = "TransformJob"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let processingJob = self.processingJob {
            try encodeContainer.encode(processingJob, forKey: .processingJob)
        }
        if let sourceArn = self.sourceArn {
            try encodeContainer.encode(sourceArn, forKey: .sourceArn)
        }
        if let trainingJob = self.trainingJob {
            try encodeContainer.encode(trainingJob, forKey: .trainingJob)
        }
        if let transformJob = self.transformJob {
            try encodeContainer.encode(transformJob, forKey: .transformJob)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceArn)
        sourceArn = sourceArnDecoded
        let trainingJobDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.TrainingJob.self, forKey: .trainingJob)
        trainingJob = trainingJobDecoded
        let processingJobDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ProcessingJob.self, forKey: .processingJob)
        processingJob = processingJobDecoded
        let transformJobDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.TransformJob.self, forKey: .transformJob)
        transformJob = transformJobDecoded
    }
}
