// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.RecommendationJobStoppingConditions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxInvocations = "MaxInvocations"
        case modelLatencyThresholds = "ModelLatencyThresholds"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if maxInvocations != 0 {
            try encodeContainer.encode(maxInvocations, forKey: .maxInvocations)
        }
        if let modelLatencyThresholds = modelLatencyThresholds {
            var modelLatencyThresholdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .modelLatencyThresholds)
            for modellatencythresholds0 in modelLatencyThresholds {
                try modelLatencyThresholdsContainer.encode(modellatencythresholds0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maxInvocationsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxInvocations) ?? 0
        maxInvocations = maxInvocationsDecoded
        let modelLatencyThresholdsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.ModelLatencyThreshold?].self, forKey: .modelLatencyThresholds)
        var modelLatencyThresholdsDecoded0:[SageMakerClientTypes.ModelLatencyThreshold]? = nil
        if let modelLatencyThresholdsContainer = modelLatencyThresholdsContainer {
            modelLatencyThresholdsDecoded0 = [SageMakerClientTypes.ModelLatencyThreshold]()
            for structure0 in modelLatencyThresholdsContainer {
                if let structure0 = structure0 {
                    modelLatencyThresholdsDecoded0?.append(structure0)
                }
            }
        }
        modelLatencyThresholds = modelLatencyThresholdsDecoded0
    }
}
