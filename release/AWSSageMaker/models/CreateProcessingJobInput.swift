// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateProcessingJobInput: Swift.Equatable {
    /// Configures the processing job to run a specified Docker container image.
    /// This member is required.
    public var appSpecification: SageMakerClientTypes.AppSpecification?
    /// The environment variables to set in the Docker container. Up to 100 key and values entries in the map are supported.
    public var environment: [Swift.String:Swift.String]?
    /// Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs:
    ///
    /// * [CreateProcessingJob]
    ///
    /// * [CreateTrainingJob]
    ///
    /// * [CreateTransformJob]
    public var experimentConfig: SageMakerClientTypes.ExperimentConfig?
    /// Networking options for a processing job, such as whether to allow inbound and outbound network calls to and from processing containers, and the VPC subnets and security groups to use for VPC-enabled processing jobs.
    public var networkConfig: SageMakerClientTypes.NetworkConfig?
    /// An array of inputs configuring the data to download into the processing container.
    public var processingInputs: [SageMakerClientTypes.ProcessingInput]?
    /// The name of the processing job. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.
    /// This member is required.
    public var processingJobName: Swift.String?
    /// Output configuration for the processing job.
    public var processingOutputConfig: SageMakerClientTypes.ProcessingOutputConfig?
    /// Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.
    /// This member is required.
    public var processingResources: SageMakerClientTypes.ProcessingResources?
    /// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
    /// This member is required.
    public var roleArn: Swift.String?
    /// The time limit for how long the processing job is allowed to run.
    public var stoppingCondition: SageMakerClientTypes.ProcessingStoppingCondition?
    /// (Optional) An array of key-value pairs. For more information, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the Amazon Web Services Billing and Cost Management User Guide.
    public var tags: [SageMakerClientTypes.Tag]?

    public init (
        appSpecification: SageMakerClientTypes.AppSpecification? = nil,
        environment: [Swift.String:Swift.String]? = nil,
        experimentConfig: SageMakerClientTypes.ExperimentConfig? = nil,
        networkConfig: SageMakerClientTypes.NetworkConfig? = nil,
        processingInputs: [SageMakerClientTypes.ProcessingInput]? = nil,
        processingJobName: Swift.String? = nil,
        processingOutputConfig: SageMakerClientTypes.ProcessingOutputConfig? = nil,
        processingResources: SageMakerClientTypes.ProcessingResources? = nil,
        roleArn: Swift.String? = nil,
        stoppingCondition: SageMakerClientTypes.ProcessingStoppingCondition? = nil,
        tags: [SageMakerClientTypes.Tag]? = nil
    )
    {
        self.appSpecification = appSpecification
        self.environment = environment
        self.experimentConfig = experimentConfig
        self.networkConfig = networkConfig
        self.processingInputs = processingInputs
        self.processingJobName = processingJobName
        self.processingOutputConfig = processingOutputConfig
        self.processingResources = processingResources
        self.roleArn = roleArn
        self.stoppingCondition = stoppingCondition
        self.tags = tags
    }
}
