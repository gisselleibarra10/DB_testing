// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateArtifactInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case artifactArn = "ArtifactArn"
        case artifactName = "ArtifactName"
        case properties = "Properties"
        case propertiesToRemove = "PropertiesToRemove"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let artifactArn = self.artifactArn {
            try encodeContainer.encode(artifactArn, forKey: .artifactArn)
        }
        if let artifactName = self.artifactName {
            try encodeContainer.encode(artifactName, forKey: .artifactName)
        }
        if let properties = properties {
            var propertiesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .properties)
            for (dictKey0, lineageentityparameters0) in properties {
                try propertiesContainer.encode(lineageentityparameters0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let propertiesToRemove = propertiesToRemove {
            var propertiesToRemoveContainer = encodeContainer.nestedUnkeyedContainer(forKey: .propertiesToRemove)
            for listlineageentityparameterkey0 in propertiesToRemove {
                try propertiesToRemoveContainer.encode(listlineageentityparameterkey0)
            }
        }
    }
}
