// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssociationsOutputResponseBody: Swift.Equatable {
    let associationSummaries: [SageMakerClientTypes.AssociationSummary]?
    let nextToken: Swift.String?
}

extension ListAssociationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case associationSummaries = "AssociationSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let associationSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.AssociationSummary?].self, forKey: .associationSummaries)
        var associationSummariesDecoded0:[SageMakerClientTypes.AssociationSummary]? = nil
        if let associationSummariesContainer = associationSummariesContainer {
            associationSummariesDecoded0 = [SageMakerClientTypes.AssociationSummary]()
            for structure0 in associationSummariesContainer {
                if let structure0 = structure0 {
                    associationSummariesDecoded0?.append(structure0)
                }
            }
        }
        associationSummaries = associationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
