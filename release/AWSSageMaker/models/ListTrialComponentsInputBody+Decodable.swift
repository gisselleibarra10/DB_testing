// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTrialComponentsInputBody: Swift.Equatable {
    let experimentName: Swift.String?
    let trialName: Swift.String?
    let sourceArn: Swift.String?
    let createdAfter: ClientRuntime.Date?
    let createdBefore: ClientRuntime.Date?
    let sortBy: SageMakerClientTypes.SortTrialComponentsBy?
    let sortOrder: SageMakerClientTypes.SortOrder?
    let maxResults: Swift.Int?
    let nextToken: Swift.String?
}

extension ListTrialComponentsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdAfter = "CreatedAfter"
        case createdBefore = "CreatedBefore"
        case experimentName = "ExperimentName"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case sortBy = "SortBy"
        case sortOrder = "SortOrder"
        case sourceArn = "SourceArn"
        case trialName = "TrialName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let experimentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .experimentName)
        experimentName = experimentNameDecoded
        let trialNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trialName)
        trialName = trialNameDecoded
        let sourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceArn)
        sourceArn = sourceArnDecoded
        let createdAfterDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAfter)
        createdAfter = createdAfterDecoded
        let createdBeforeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdBefore)
        createdBefore = createdBeforeDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.SortTrialComponentsBy.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let sortOrderDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.SortOrder.self, forKey: .sortOrder)
        sortOrder = sortOrderDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
