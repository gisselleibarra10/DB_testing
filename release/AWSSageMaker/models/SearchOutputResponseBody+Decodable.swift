// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchOutputResponseBody: Swift.Equatable {
    let results: [SageMakerClientTypes.SearchRecord]?
    let nextToken: Swift.String?
}

extension SearchOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case results = "Results"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.SearchRecord?].self, forKey: .results)
        var resultsDecoded0:[SageMakerClientTypes.SearchRecord]? = nil
        if let resultsContainer = resultsContainer {
            resultsDecoded0 = [SageMakerClientTypes.SearchRecord]()
            for structure0 in resultsContainer {
                if let structure0 = structure0 {
                    resultsDecoded0?.append(structure0)
                }
            }
        }
        results = resultsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
