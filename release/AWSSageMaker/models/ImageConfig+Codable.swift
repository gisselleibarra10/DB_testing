// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.ImageConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case repositoryAccessMode = "RepositoryAccessMode"
        case repositoryAuthConfig = "RepositoryAuthConfig"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let repositoryAccessMode = self.repositoryAccessMode {
            try encodeContainer.encode(repositoryAccessMode.rawValue, forKey: .repositoryAccessMode)
        }
        if let repositoryAuthConfig = self.repositoryAuthConfig {
            try encodeContainer.encode(repositoryAuthConfig, forKey: .repositoryAuthConfig)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryAccessModeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.RepositoryAccessMode.self, forKey: .repositoryAccessMode)
        repositoryAccessMode = repositoryAccessModeDecoded
        let repositoryAuthConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.RepositoryAuthConfig.self, forKey: .repositoryAuthConfig)
        repositoryAuthConfig = repositoryAuthConfigDecoded
    }
}
