// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.OfflineStoreConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataCatalogConfig = "DataCatalogConfig"
        case disableGlueTableCreation = "DisableGlueTableCreation"
        case s3StorageConfig = "S3StorageConfig"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataCatalogConfig = self.dataCatalogConfig {
            try encodeContainer.encode(dataCatalogConfig, forKey: .dataCatalogConfig)
        }
        if disableGlueTableCreation != false {
            try encodeContainer.encode(disableGlueTableCreation, forKey: .disableGlueTableCreation)
        }
        if let s3StorageConfig = self.s3StorageConfig {
            try encodeContainer.encode(s3StorageConfig, forKey: .s3StorageConfig)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3StorageConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.S3StorageConfig.self, forKey: .s3StorageConfig)
        s3StorageConfig = s3StorageConfigDecoded
        let disableGlueTableCreationDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .disableGlueTableCreation) ?? false
        disableGlueTableCreation = disableGlueTableCreationDecoded
        let dataCatalogConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.DataCatalogConfig.self, forKey: .dataCatalogConfig)
        dataCatalogConfig = dataCatalogConfigDecoded
    }
}
