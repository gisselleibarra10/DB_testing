// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEdgeDeploymentPlansOutputResponseBody: Swift.Equatable {
    let edgeDeploymentPlanSummaries: [SageMakerClientTypes.EdgeDeploymentPlanSummary]?
    let nextToken: Swift.String?
}

extension ListEdgeDeploymentPlansOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case edgeDeploymentPlanSummaries = "EdgeDeploymentPlanSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let edgeDeploymentPlanSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.EdgeDeploymentPlanSummary?].self, forKey: .edgeDeploymentPlanSummaries)
        var edgeDeploymentPlanSummariesDecoded0:[SageMakerClientTypes.EdgeDeploymentPlanSummary]? = nil
        if let edgeDeploymentPlanSummariesContainer = edgeDeploymentPlanSummariesContainer {
            edgeDeploymentPlanSummariesDecoded0 = [SageMakerClientTypes.EdgeDeploymentPlanSummary]()
            for structure0 in edgeDeploymentPlanSummariesContainer {
                if let structure0 = structure0 {
                    edgeDeploymentPlanSummariesDecoded0?.append(structure0)
                }
            }
        }
        edgeDeploymentPlanSummaries = edgeDeploymentPlanSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
