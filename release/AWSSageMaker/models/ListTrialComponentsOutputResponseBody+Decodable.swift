// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTrialComponentsOutputResponseBody: Swift.Equatable {
    let trialComponentSummaries: [SageMakerClientTypes.TrialComponentSummary]?
    let nextToken: Swift.String?
}

extension ListTrialComponentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case trialComponentSummaries = "TrialComponentSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trialComponentSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.TrialComponentSummary?].self, forKey: .trialComponentSummaries)
        var trialComponentSummariesDecoded0:[SageMakerClientTypes.TrialComponentSummary]? = nil
        if let trialComponentSummariesContainer = trialComponentSummariesContainer {
            trialComponentSummariesDecoded0 = [SageMakerClientTypes.TrialComponentSummary]()
            for structure0 in trialComponentSummariesContainer {
                if let structure0 = structure0 {
                    trialComponentSummariesDecoded0?.append(structure0)
                }
            }
        }
        trialComponentSummaries = trialComponentSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
