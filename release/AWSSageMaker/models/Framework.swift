// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    public enum Framework: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case darknet
        case keras
        case mxnet
        case onnx
        case pytorch
        case sklearn
        case tensorflow
        case tflite
        case xgboost
        case sdkUnknown(Swift.String)

        public static var allCases: [Framework] {
            return [
                .darknet,
                .keras,
                .mxnet,
                .onnx,
                .pytorch,
                .sklearn,
                .tensorflow,
                .tflite,
                .xgboost,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .darknet: return "DARKNET"
            case .keras: return "KERAS"
            case .mxnet: return "MXNET"
            case .onnx: return "ONNX"
            case .pytorch: return "PYTORCH"
            case .sklearn: return "SKLEARN"
            case .tensorflow: return "TENSORFLOW"
            case .tflite: return "TFLITE"
            case .xgboost: return "XGBOOST"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = Framework(rawValue: rawValue) ?? Framework.sdkUnknown(rawValue)
        }
    }
}
