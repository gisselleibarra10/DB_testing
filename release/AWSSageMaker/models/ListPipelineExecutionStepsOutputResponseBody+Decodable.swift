// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelineExecutionStepsOutputResponseBody: Swift.Equatable {
    let pipelineExecutionSteps: [SageMakerClientTypes.PipelineExecutionStep]?
    let nextToken: Swift.String?
}

extension ListPipelineExecutionStepsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case pipelineExecutionSteps = "PipelineExecutionSteps"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineExecutionStepsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.PipelineExecutionStep?].self, forKey: .pipelineExecutionSteps)
        var pipelineExecutionStepsDecoded0:[SageMakerClientTypes.PipelineExecutionStep]? = nil
        if let pipelineExecutionStepsContainer = pipelineExecutionStepsContainer {
            pipelineExecutionStepsDecoded0 = [SageMakerClientTypes.PipelineExecutionStep]()
            for structure0 in pipelineExecutionStepsContainer {
                if let structure0 = structure0 {
                    pipelineExecutionStepsDecoded0?.append(structure0)
                }
            }
        }
        pipelineExecutionSteps = pipelineExecutionStepsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
