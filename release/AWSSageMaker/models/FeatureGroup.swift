// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes {
    /// Amazon SageMaker Feature Store stores features in a collection called Feature Group. A Feature Group can be visualized as a table which has rows, with a unique identifier for each row where each column in the table is a feature. In principle, a Feature Group is composed of features and values per features.
    public struct FeatureGroup: Swift.Equatable {
        /// The time a FeatureGroup was created.
        public var creationTime: ClientRuntime.Date?
        /// A free form description of a FeatureGroup.
        public var description: Swift.String?
        /// The name of the feature that stores the EventTime of a Record in a FeatureGroup. A EventTime is point in time when a new event occurs that corresponds to the creation or update of a Record in FeatureGroup. All Records in the FeatureGroup must have a corresponding EventTime.
        public var eventTimeFeatureName: Swift.String?
        /// The reason that the FeatureGroup failed to be replicated in the OfflineStore. This is failure may be due to a failure to create a FeatureGroup in or delete a FeatureGroup from the OfflineStore.
        public var failureReason: Swift.String?
        /// A list of Features. Each Feature must include a FeatureName and a FeatureType. Valid FeatureTypes are Integral, Fractional and String. FeatureNames cannot be any of the following: is_deleted, write_time, api_invocation_time. You can create up to 2,500 FeatureDefinitions per FeatureGroup.
        public var featureDefinitions: [SageMakerClientTypes.FeatureDefinition]?
        /// The Amazon Resource Name (ARN) of a FeatureGroup.
        public var featureGroupArn: Swift.String?
        /// The name of the FeatureGroup.
        public var featureGroupName: Swift.String?
        /// A FeatureGroup status.
        public var featureGroupStatus: SageMakerClientTypes.FeatureGroupStatus?
        /// A timestamp indicating the last time you updated the feature group.
        public var lastModifiedTime: ClientRuntime.Date?
        /// A value that indicates whether the feature group was updated successfully.
        public var lastUpdateStatus: SageMakerClientTypes.LastUpdateStatus?
        /// The configuration of an OfflineStore. Provide an OfflineStoreConfig in a request to CreateFeatureGroup to create an OfflineStore. To encrypt an OfflineStore using at rest data encryption, specify Amazon Web Services Key Management Service (KMS) key ID, or KMSKeyId, in S3StorageConfig.
        public var offlineStoreConfig: SageMakerClientTypes.OfflineStoreConfig?
        /// The status of OfflineStore.
        public var offlineStoreStatus: SageMakerClientTypes.OfflineStoreStatus?
        /// Use this to specify the Amazon Web Services Key Management Service (KMS) Key ID, or KMSKeyId, for at rest data encryption. You can turn OnlineStore on or off by specifying the EnableOnlineStore flag at General Assembly; the default value is False.
        public var onlineStoreConfig: SageMakerClientTypes.OnlineStoreConfig?
        /// The name of the Feature whose value uniquely identifies a Record defined in the FeatureGroupFeatureDefinitions.
        public var recordIdentifierFeatureName: Swift.String?
        /// The Amazon Resource Name (ARN) of the IAM execution role used to create the feature group.
        public var roleArn: Swift.String?
        /// Tags used to define a FeatureGroup.
        public var tags: [SageMakerClientTypes.Tag]?

        public init (
            creationTime: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            eventTimeFeatureName: Swift.String? = nil,
            failureReason: Swift.String? = nil,
            featureDefinitions: [SageMakerClientTypes.FeatureDefinition]? = nil,
            featureGroupArn: Swift.String? = nil,
            featureGroupName: Swift.String? = nil,
            featureGroupStatus: SageMakerClientTypes.FeatureGroupStatus? = nil,
            lastModifiedTime: ClientRuntime.Date? = nil,
            lastUpdateStatus: SageMakerClientTypes.LastUpdateStatus? = nil,
            offlineStoreConfig: SageMakerClientTypes.OfflineStoreConfig? = nil,
            offlineStoreStatus: SageMakerClientTypes.OfflineStoreStatus? = nil,
            onlineStoreConfig: SageMakerClientTypes.OnlineStoreConfig? = nil,
            recordIdentifierFeatureName: Swift.String? = nil,
            roleArn: Swift.String? = nil,
            tags: [SageMakerClientTypes.Tag]? = nil
        )
        {
            self.creationTime = creationTime
            self.description = description
            self.eventTimeFeatureName = eventTimeFeatureName
            self.failureReason = failureReason
            self.featureDefinitions = featureDefinitions
            self.featureGroupArn = featureGroupArn
            self.featureGroupName = featureGroupName
            self.featureGroupStatus = featureGroupStatus
            self.lastModifiedTime = lastModifiedTime
            self.lastUpdateStatus = lastUpdateStatus
            self.offlineStoreConfig = offlineStoreConfig
            self.offlineStoreStatus = offlineStoreStatus
            self.onlineStoreConfig = onlineStoreConfig
            self.recordIdentifierFeatureName = recordIdentifierFeatureName
            self.roleArn = roleArn
            self.tags = tags
        }
    }

}
