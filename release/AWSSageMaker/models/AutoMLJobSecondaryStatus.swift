// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    public enum AutoMLJobSecondaryStatus: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case analyzingData
        case candidateDefinitionsGenerated
        case completed
        case deployingModel
        case explainabilityError
        case failed
        case featureEngineering
        case generatingExplainabilityReport
        case generatingModelInsightsReport
        case maxAutoMlJobRuntimeReached
        case maxCandidatesReached
        case modelDeploymentError
        case modelInsightsError
        case modelTuning
        case starting
        case stopped
        case stopping
        case sdkUnknown(Swift.String)

        public static var allCases: [AutoMLJobSecondaryStatus] {
            return [
                .analyzingData,
                .candidateDefinitionsGenerated,
                .completed,
                .deployingModel,
                .explainabilityError,
                .failed,
                .featureEngineering,
                .generatingExplainabilityReport,
                .generatingModelInsightsReport,
                .maxAutoMlJobRuntimeReached,
                .maxCandidatesReached,
                .modelDeploymentError,
                .modelInsightsError,
                .modelTuning,
                .starting,
                .stopped,
                .stopping,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .analyzingData: return "AnalyzingData"
            case .candidateDefinitionsGenerated: return "CandidateDefinitionsGenerated"
            case .completed: return "Completed"
            case .deployingModel: return "DeployingModel"
            case .explainabilityError: return "ExplainabilityError"
            case .failed: return "Failed"
            case .featureEngineering: return "FeatureEngineering"
            case .generatingExplainabilityReport: return "GeneratingExplainabilityReport"
            case .generatingModelInsightsReport: return "GeneratingModelInsightsReport"
            case .maxAutoMlJobRuntimeReached: return "MaxAutoMLJobRuntimeReached"
            case .maxCandidatesReached: return "MaxCandidatesReached"
            case .modelDeploymentError: return "ModelDeploymentError"
            case .modelInsightsError: return "ModelInsightsError"
            case .modelTuning: return "ModelTuning"
            case .starting: return "Starting"
            case .stopped: return "Stopped"
            case .stopping: return "Stopping"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = AutoMLJobSecondaryStatus(rawValue: rawValue) ?? AutoMLJobSecondaryStatus.sdkUnknown(rawValue)
        }
    }
}
