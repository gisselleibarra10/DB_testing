// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    public enum ProductionVariantInstanceType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case mlC42xlarge
        case mlC44xlarge
        case mlC48xlarge
        case mlC4Large
        case mlC4Xlarge
        case mlC5d18xlarge
        case mlC5d2xlarge
        case mlC5d4xlarge
        case mlC5d9xlarge
        case mlC5dLarge
        case mlC5dXlarge
        case mlC518xlarge
        case mlC52xlarge
        case mlC54xlarge
        case mlC59xlarge
        case mlC5Large
        case mlC5Xlarge
        case mlC6i12xlarge
        case mlC6i16xlarge
        case mlC6i24xlarge
        case mlC6i2xlarge
        case mlC6i32xlarge
        case mlC6i4xlarge
        case mlC6i8xlarge
        case mlC6iLarge
        case mlC6iXlarge
        case mlG4dn12xlarge
        case mlG4dn16xlarge
        case mlG4dn2xlarge
        case mlG4dn4xlarge
        case mlG4dn8xlarge
        case mlG4dnXlarge
        case mlG512xlarge
        case mlG516xlarge
        case mlG524xlarge
        case mlG52xlarge
        case mlG548xlarge
        case mlG54xlarge
        case mlG58xlarge
        case mlG5Xlarge
        case mlInf124xlarge
        case mlInf12xlarge
        case mlInf16xlarge
        case mlInf1Xlarge
        case mlM410xlarge
        case mlM416xlarge
        case mlM42xlarge
        case mlM44xlarge
        case mlM4Xlarge
        case mlM5d12xlarge
        case mlM5d24xlarge
        case mlM5d2xlarge
        case mlM5d4xlarge
        case mlM5dLarge
        case mlM5dXlarge
        case mlM512xlarge
        case mlM524xlarge
        case mlM52xlarge
        case mlM54xlarge
        case mlM5Large
        case mlM5Xlarge
        case mlP216xlarge
        case mlP28xlarge
        case mlP2Xlarge
        case mlP316xlarge
        case mlP32xlarge
        case mlP38xlarge
        case mlP4d24xlarge
        case mlR5d12xlarge
        case mlR5d24xlarge
        case mlR5d2xlarge
        case mlR5d4xlarge
        case mlR5dLarge
        case mlR5dXlarge
        case mlR512xlarge
        case mlR524xlarge
        case mlR52xlarge
        case mlR54xlarge
        case mlR5Large
        case mlR5Xlarge
        case mlT22xlarge
        case mlT2Large
        case mlT2Medium
        case mlT2Xlarge
        case sdkUnknown(Swift.String)

        public static var allCases: [ProductionVariantInstanceType] {
            return [
                .mlC42xlarge,
                .mlC44xlarge,
                .mlC48xlarge,
                .mlC4Large,
                .mlC4Xlarge,
                .mlC5d18xlarge,
                .mlC5d2xlarge,
                .mlC5d4xlarge,
                .mlC5d9xlarge,
                .mlC5dLarge,
                .mlC5dXlarge,
                .mlC518xlarge,
                .mlC52xlarge,
                .mlC54xlarge,
                .mlC59xlarge,
                .mlC5Large,
                .mlC5Xlarge,
                .mlC6i12xlarge,
                .mlC6i16xlarge,
                .mlC6i24xlarge,
                .mlC6i2xlarge,
                .mlC6i32xlarge,
                .mlC6i4xlarge,
                .mlC6i8xlarge,
                .mlC6iLarge,
                .mlC6iXlarge,
                .mlG4dn12xlarge,
                .mlG4dn16xlarge,
                .mlG4dn2xlarge,
                .mlG4dn4xlarge,
                .mlG4dn8xlarge,
                .mlG4dnXlarge,
                .mlG512xlarge,
                .mlG516xlarge,
                .mlG524xlarge,
                .mlG52xlarge,
                .mlG548xlarge,
                .mlG54xlarge,
                .mlG58xlarge,
                .mlG5Xlarge,
                .mlInf124xlarge,
                .mlInf12xlarge,
                .mlInf16xlarge,
                .mlInf1Xlarge,
                .mlM410xlarge,
                .mlM416xlarge,
                .mlM42xlarge,
                .mlM44xlarge,
                .mlM4Xlarge,
                .mlM5d12xlarge,
                .mlM5d24xlarge,
                .mlM5d2xlarge,
                .mlM5d4xlarge,
                .mlM5dLarge,
                .mlM5dXlarge,
                .mlM512xlarge,
                .mlM524xlarge,
                .mlM52xlarge,
                .mlM54xlarge,
                .mlM5Large,
                .mlM5Xlarge,
                .mlP216xlarge,
                .mlP28xlarge,
                .mlP2Xlarge,
                .mlP316xlarge,
                .mlP32xlarge,
                .mlP38xlarge,
                .mlP4d24xlarge,
                .mlR5d12xlarge,
                .mlR5d24xlarge,
                .mlR5d2xlarge,
                .mlR5d4xlarge,
                .mlR5dLarge,
                .mlR5dXlarge,
                .mlR512xlarge,
                .mlR524xlarge,
                .mlR52xlarge,
                .mlR54xlarge,
                .mlR5Large,
                .mlR5Xlarge,
                .mlT22xlarge,
                .mlT2Large,
                .mlT2Medium,
                .mlT2Xlarge,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .mlC42xlarge: return "ml.c4.2xlarge"
            case .mlC44xlarge: return "ml.c4.4xlarge"
            case .mlC48xlarge: return "ml.c4.8xlarge"
            case .mlC4Large: return "ml.c4.large"
            case .mlC4Xlarge: return "ml.c4.xlarge"
            case .mlC5d18xlarge: return "ml.c5d.18xlarge"
            case .mlC5d2xlarge: return "ml.c5d.2xlarge"
            case .mlC5d4xlarge: return "ml.c5d.4xlarge"
            case .mlC5d9xlarge: return "ml.c5d.9xlarge"
            case .mlC5dLarge: return "ml.c5d.large"
            case .mlC5dXlarge: return "ml.c5d.xlarge"
            case .mlC518xlarge: return "ml.c5.18xlarge"
            case .mlC52xlarge: return "ml.c5.2xlarge"
            case .mlC54xlarge: return "ml.c5.4xlarge"
            case .mlC59xlarge: return "ml.c5.9xlarge"
            case .mlC5Large: return "ml.c5.large"
            case .mlC5Xlarge: return "ml.c5.xlarge"
            case .mlC6i12xlarge: return "ml.c6i.12xlarge"
            case .mlC6i16xlarge: return "ml.c6i.16xlarge"
            case .mlC6i24xlarge: return "ml.c6i.24xlarge"
            case .mlC6i2xlarge: return "ml.c6i.2xlarge"
            case .mlC6i32xlarge: return "ml.c6i.32xlarge"
            case .mlC6i4xlarge: return "ml.c6i.4xlarge"
            case .mlC6i8xlarge: return "ml.c6i.8xlarge"
            case .mlC6iLarge: return "ml.c6i.large"
            case .mlC6iXlarge: return "ml.c6i.xlarge"
            case .mlG4dn12xlarge: return "ml.g4dn.12xlarge"
            case .mlG4dn16xlarge: return "ml.g4dn.16xlarge"
            case .mlG4dn2xlarge: return "ml.g4dn.2xlarge"
            case .mlG4dn4xlarge: return "ml.g4dn.4xlarge"
            case .mlG4dn8xlarge: return "ml.g4dn.8xlarge"
            case .mlG4dnXlarge: return "ml.g4dn.xlarge"
            case .mlG512xlarge: return "ml.g5.12xlarge"
            case .mlG516xlarge: return "ml.g5.16xlarge"
            case .mlG524xlarge: return "ml.g5.24xlarge"
            case .mlG52xlarge: return "ml.g5.2xlarge"
            case .mlG548xlarge: return "ml.g5.48xlarge"
            case .mlG54xlarge: return "ml.g5.4xlarge"
            case .mlG58xlarge: return "ml.g5.8xlarge"
            case .mlG5Xlarge: return "ml.g5.xlarge"
            case .mlInf124xlarge: return "ml.inf1.24xlarge"
            case .mlInf12xlarge: return "ml.inf1.2xlarge"
            case .mlInf16xlarge: return "ml.inf1.6xlarge"
            case .mlInf1Xlarge: return "ml.inf1.xlarge"
            case .mlM410xlarge: return "ml.m4.10xlarge"
            case .mlM416xlarge: return "ml.m4.16xlarge"
            case .mlM42xlarge: return "ml.m4.2xlarge"
            case .mlM44xlarge: return "ml.m4.4xlarge"
            case .mlM4Xlarge: return "ml.m4.xlarge"
            case .mlM5d12xlarge: return "ml.m5d.12xlarge"
            case .mlM5d24xlarge: return "ml.m5d.24xlarge"
            case .mlM5d2xlarge: return "ml.m5d.2xlarge"
            case .mlM5d4xlarge: return "ml.m5d.4xlarge"
            case .mlM5dLarge: return "ml.m5d.large"
            case .mlM5dXlarge: return "ml.m5d.xlarge"
            case .mlM512xlarge: return "ml.m5.12xlarge"
            case .mlM524xlarge: return "ml.m5.24xlarge"
            case .mlM52xlarge: return "ml.m5.2xlarge"
            case .mlM54xlarge: return "ml.m5.4xlarge"
            case .mlM5Large: return "ml.m5.large"
            case .mlM5Xlarge: return "ml.m5.xlarge"
            case .mlP216xlarge: return "ml.p2.16xlarge"
            case .mlP28xlarge: return "ml.p2.8xlarge"
            case .mlP2Xlarge: return "ml.p2.xlarge"
            case .mlP316xlarge: return "ml.p3.16xlarge"
            case .mlP32xlarge: return "ml.p3.2xlarge"
            case .mlP38xlarge: return "ml.p3.8xlarge"
            case .mlP4d24xlarge: return "ml.p4d.24xlarge"
            case .mlR5d12xlarge: return "ml.r5d.12xlarge"
            case .mlR5d24xlarge: return "ml.r5d.24xlarge"
            case .mlR5d2xlarge: return "ml.r5d.2xlarge"
            case .mlR5d4xlarge: return "ml.r5d.4xlarge"
            case .mlR5dLarge: return "ml.r5d.large"
            case .mlR5dXlarge: return "ml.r5d.xlarge"
            case .mlR512xlarge: return "ml.r5.12xlarge"
            case .mlR524xlarge: return "ml.r5.24xlarge"
            case .mlR52xlarge: return "ml.r5.2xlarge"
            case .mlR54xlarge: return "ml.r5.4xlarge"
            case .mlR5Large: return "ml.r5.large"
            case .mlR5Xlarge: return "ml.r5.xlarge"
            case .mlT22xlarge: return "ml.t2.2xlarge"
            case .mlT2Large: return "ml.t2.large"
            case .mlT2Medium: return "ml.t2.medium"
            case .mlT2Xlarge: return "ml.t2.xlarge"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ProductionVariantInstanceType(rawValue: rawValue) ?? ProductionVariantInstanceType.sdkUnknown(rawValue)
        }
    }
}
