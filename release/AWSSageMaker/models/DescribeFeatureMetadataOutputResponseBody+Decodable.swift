// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFeatureMetadataOutputResponseBody: Swift.Equatable {
    let featureGroupArn: Swift.String?
    let featureGroupName: Swift.String?
    let featureName: Swift.String?
    let featureType: SageMakerClientTypes.FeatureType?
    let creationTime: ClientRuntime.Date?
    let lastModifiedTime: ClientRuntime.Date?
    let description: Swift.String?
    let parameters: [SageMakerClientTypes.FeatureParameter]?
}

extension DescribeFeatureMetadataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case description = "Description"
        case featureGroupArn = "FeatureGroupArn"
        case featureGroupName = "FeatureGroupName"
        case featureName = "FeatureName"
        case featureType = "FeatureType"
        case lastModifiedTime = "LastModifiedTime"
        case parameters = "Parameters"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let featureGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .featureGroupArn)
        featureGroupArn = featureGroupArnDecoded
        let featureGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .featureGroupName)
        featureGroupName = featureGroupNameDecoded
        let featureNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .featureName)
        featureName = featureNameDecoded
        let featureTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.FeatureType.self, forKey: .featureType)
        featureType = featureTypeDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let parametersContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.FeatureParameter?].self, forKey: .parameters)
        var parametersDecoded0:[SageMakerClientTypes.FeatureParameter]? = nil
        if let parametersContainer = parametersContainer {
            parametersDecoded0 = [SageMakerClientTypes.FeatureParameter]()
            for structure0 in parametersContainer {
                if let structure0 = structure0 {
                    parametersDecoded0?.append(structure0)
                }
            }
        }
        parameters = parametersDecoded0
    }
}
