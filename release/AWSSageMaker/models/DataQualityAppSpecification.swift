// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    /// Information about the container that a data quality monitoring job runs.
    public struct DataQualityAppSpecification: Swift.Equatable {
        /// The arguments to send to the container that the monitoring job runs.
        public var containerArguments: [Swift.String]?
        /// The entrypoint for a container used to run a monitoring job.
        public var containerEntrypoint: [Swift.String]?
        /// Sets the environment variables in the container that the monitoring job runs.
        public var environment: [Swift.String:Swift.String]?
        /// The container image that the data quality monitoring job runs.
        /// This member is required.
        public var imageUri: Swift.String?
        /// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
        public var postAnalyticsProcessorSourceUri: Swift.String?
        /// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
        public var recordPreprocessorSourceUri: Swift.String?

        public init (
            containerArguments: [Swift.String]? = nil,
            containerEntrypoint: [Swift.String]? = nil,
            environment: [Swift.String:Swift.String]? = nil,
            imageUri: Swift.String? = nil,
            postAnalyticsProcessorSourceUri: Swift.String? = nil,
            recordPreprocessorSourceUri: Swift.String? = nil
        )
        {
            self.containerArguments = containerArguments
            self.containerEntrypoint = containerEntrypoint
            self.environment = environment
            self.imageUri = imageUri
            self.postAnalyticsProcessorSourceUri = postAnalyticsProcessorSourceUri
            self.recordPreprocessorSourceUri = recordPreprocessorSourceUri
        }
    }

}
