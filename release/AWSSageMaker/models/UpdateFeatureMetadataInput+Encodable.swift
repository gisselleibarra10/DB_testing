// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateFeatureMetadataInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case featureGroupName = "FeatureGroupName"
        case featureName = "FeatureName"
        case parameterAdditions = "ParameterAdditions"
        case parameterRemovals = "ParameterRemovals"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let featureGroupName = self.featureGroupName {
            try encodeContainer.encode(featureGroupName, forKey: .featureGroupName)
        }
        if let featureName = self.featureName {
            try encodeContainer.encode(featureName, forKey: .featureName)
        }
        if let parameterAdditions = parameterAdditions {
            var parameterAdditionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .parameterAdditions)
            for featureparameteradditions0 in parameterAdditions {
                try parameterAdditionsContainer.encode(featureparameteradditions0)
            }
        }
        if let parameterRemovals = parameterRemovals {
            var parameterRemovalsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .parameterRemovals)
            for featureparameterremovals0 in parameterRemovals {
                try parameterRemovalsContainer.encode(featureparameterremovals0)
            }
        }
    }
}
