// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.PipelineExecutionSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case pipelineExecutionArn = "PipelineExecutionArn"
        case pipelineExecutionDescription = "PipelineExecutionDescription"
        case pipelineExecutionDisplayName = "PipelineExecutionDisplayName"
        case pipelineExecutionFailureReason = "PipelineExecutionFailureReason"
        case pipelineExecutionStatus = "PipelineExecutionStatus"
        case startTime = "StartTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let pipelineExecutionArn = self.pipelineExecutionArn {
            try encodeContainer.encode(pipelineExecutionArn, forKey: .pipelineExecutionArn)
        }
        if let pipelineExecutionDescription = self.pipelineExecutionDescription {
            try encodeContainer.encode(pipelineExecutionDescription, forKey: .pipelineExecutionDescription)
        }
        if let pipelineExecutionDisplayName = self.pipelineExecutionDisplayName {
            try encodeContainer.encode(pipelineExecutionDisplayName, forKey: .pipelineExecutionDisplayName)
        }
        if let pipelineExecutionFailureReason = self.pipelineExecutionFailureReason {
            try encodeContainer.encode(pipelineExecutionFailureReason, forKey: .pipelineExecutionFailureReason)
        }
        if let pipelineExecutionStatus = self.pipelineExecutionStatus {
            try encodeContainer.encode(pipelineExecutionStatus.rawValue, forKey: .pipelineExecutionStatus)
        }
        if let startTime = self.startTime {
            try encodeContainer.encode(startTime.timeIntervalSince1970, forKey: .startTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineExecutionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineExecutionArn)
        pipelineExecutionArn = pipelineExecutionArnDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let pipelineExecutionStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.PipelineExecutionStatus.self, forKey: .pipelineExecutionStatus)
        pipelineExecutionStatus = pipelineExecutionStatusDecoded
        let pipelineExecutionDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineExecutionDescription)
        pipelineExecutionDescription = pipelineExecutionDescriptionDecoded
        let pipelineExecutionDisplayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineExecutionDisplayName)
        pipelineExecutionDisplayName = pipelineExecutionDisplayNameDecoded
        let pipelineExecutionFailureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .pipelineExecutionFailureReason)
        pipelineExecutionFailureReason = pipelineExecutionFailureReasonDecoded
    }
}
