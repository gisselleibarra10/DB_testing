// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListStageDevicesInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case edgeDeploymentPlanName = "EdgeDeploymentPlanName"
        case excludeDevicesDeployedInOtherStage = "ExcludeDevicesDeployedInOtherStage"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case stageName = "StageName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let edgeDeploymentPlanName = self.edgeDeploymentPlanName {
            try encodeContainer.encode(edgeDeploymentPlanName, forKey: .edgeDeploymentPlanName)
        }
        if excludeDevicesDeployedInOtherStage != false {
            try encodeContainer.encode(excludeDevicesDeployedInOtherStage, forKey: .excludeDevicesDeployedInOtherStage)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let stageName = self.stageName {
            try encodeContainer.encode(stageName, forKey: .stageName)
        }
    }
}
