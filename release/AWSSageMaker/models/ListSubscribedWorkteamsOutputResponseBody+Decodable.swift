// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSubscribedWorkteamsOutputResponseBody: Swift.Equatable {
    let subscribedWorkteams: [SageMakerClientTypes.SubscribedWorkteam]?
    let nextToken: Swift.String?
}

extension ListSubscribedWorkteamsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case subscribedWorkteams = "SubscribedWorkteams"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subscribedWorkteamsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.SubscribedWorkteam?].self, forKey: .subscribedWorkteams)
        var subscribedWorkteamsDecoded0:[SageMakerClientTypes.SubscribedWorkteam]? = nil
        if let subscribedWorkteamsContainer = subscribedWorkteamsContainer {
            subscribedWorkteamsDecoded0 = [SageMakerClientTypes.SubscribedWorkteam]()
            for structure0 in subscribedWorkteamsContainer {
                if let structure0 = structure0 {
                    subscribedWorkteamsDecoded0?.append(structure0)
                }
            }
        }
        subscribedWorkteams = subscribedWorkteamsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
