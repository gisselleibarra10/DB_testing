// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCodeRepositoriesOutputResponseBody: Swift.Equatable {
    let codeRepositorySummaryList: [SageMakerClientTypes.CodeRepositorySummary]?
    let nextToken: Swift.String?
}

extension ListCodeRepositoriesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case codeRepositorySummaryList = "CodeRepositorySummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeRepositorySummaryListContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.CodeRepositorySummary?].self, forKey: .codeRepositorySummaryList)
        var codeRepositorySummaryListDecoded0:[SageMakerClientTypes.CodeRepositorySummary]? = nil
        if let codeRepositorySummaryListContainer = codeRepositorySummaryListContainer {
            codeRepositorySummaryListDecoded0 = [SageMakerClientTypes.CodeRepositorySummary]()
            for structure0 in codeRepositorySummaryListContainer {
                if let structure0 = structure0 {
                    codeRepositorySummaryListDecoded0?.append(structure0)
                }
            }
        }
        codeRepositorySummaryList = codeRepositorySummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
