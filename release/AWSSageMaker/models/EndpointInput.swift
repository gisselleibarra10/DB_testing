// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    /// Input object for the endpoint
    public struct EndpointInput: Swift.Equatable {
        /// If specified, monitoring jobs substract this time from the end time. For information about using offsets for scheduling monitoring jobs, see [Schedule Model Quality Monitoring Jobs](https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-model-quality-schedule.html).
        public var endTimeOffset: Swift.String?
        /// An endpoint in customer's account which has enabled DataCaptureConfig enabled.
        /// This member is required.
        public var endpointName: Swift.String?
        /// The attributes of the input data that are the input features.
        public var featuresAttribute: Swift.String?
        /// The attribute of the input data that represents the ground truth label.
        public var inferenceAttribute: Swift.String?
        /// Path to the filesystem where the endpoint data is available to the container.
        /// This member is required.
        public var localPath: Swift.String?
        /// In a classification problem, the attribute that represents the class probability.
        public var probabilityAttribute: Swift.String?
        /// The threshold for the class probability to be evaluated as a positive result.
        public var probabilityThresholdAttribute: Swift.Double?
        /// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to FullyReplicated
        public var s3DataDistributionType: SageMakerClientTypes.ProcessingS3DataDistributionType?
        /// Whether the Pipe or File is used as the input mode for transferring data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
        public var s3InputMode: SageMakerClientTypes.ProcessingS3InputMode?
        /// If specified, monitoring jobs substract this time from the start time. For information about using offsets for scheduling monitoring jobs, see [Schedule Model Quality Monitoring Jobs](https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-model-quality-schedule.html).
        public var startTimeOffset: Swift.String?

        public init (
            endTimeOffset: Swift.String? = nil,
            endpointName: Swift.String? = nil,
            featuresAttribute: Swift.String? = nil,
            inferenceAttribute: Swift.String? = nil,
            localPath: Swift.String? = nil,
            probabilityAttribute: Swift.String? = nil,
            probabilityThresholdAttribute: Swift.Double? = nil,
            s3DataDistributionType: SageMakerClientTypes.ProcessingS3DataDistributionType? = nil,
            s3InputMode: SageMakerClientTypes.ProcessingS3InputMode? = nil,
            startTimeOffset: Swift.String? = nil
        )
        {
            self.endTimeOffset = endTimeOffset
            self.endpointName = endpointName
            self.featuresAttribute = featuresAttribute
            self.inferenceAttribute = inferenceAttribute
            self.localPath = localPath
            self.probabilityAttribute = probabilityAttribute
            self.probabilityThresholdAttribute = probabilityThresholdAttribute
            self.s3DataDistributionType = s3DataDistributionType
            self.s3InputMode = s3InputMode
            self.startTimeOffset = startTimeOffset
        }
    }

}
