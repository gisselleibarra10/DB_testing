// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes {
    /// A schedule for a model monitoring job. For information about model monitor, see [Amazon SageMaker Model Monitor](https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor.html).
    public struct MonitoringSchedule: Swift.Equatable {
        /// The time that the monitoring schedule was created.
        public var creationTime: ClientRuntime.Date?
        /// The endpoint that hosts the model being monitored.
        public var endpointName: Swift.String?
        /// If the monitoring schedule failed, the reason it failed.
        public var failureReason: Swift.String?
        /// The last time the monitoring schedule was changed.
        public var lastModifiedTime: ClientRuntime.Date?
        /// Summary of information about the last monitoring job to run.
        public var lastMonitoringExecutionSummary: SageMakerClientTypes.MonitoringExecutionSummary?
        /// The Amazon Resource Name (ARN) of the monitoring schedule.
        public var monitoringScheduleArn: Swift.String?
        /// Configures the monitoring schedule and defines the monitoring job.
        public var monitoringScheduleConfig: SageMakerClientTypes.MonitoringScheduleConfig?
        /// The name of the monitoring schedule.
        public var monitoringScheduleName: Swift.String?
        /// The status of the monitoring schedule. This can be one of the following values.
        ///
        /// * PENDING - The schedule is pending being created.
        ///
        /// * FAILED - The schedule failed.
        ///
        /// * SCHEDULED - The schedule was successfully created.
        ///
        /// * STOPPED - The schedule was stopped.
        public var monitoringScheduleStatus: SageMakerClientTypes.ScheduleStatus?
        /// The type of the monitoring job definition to schedule.
        public var monitoringType: SageMakerClientTypes.MonitoringType?
        /// A list of the tags associated with the monitoring schedlue. For more information, see [Tagging Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the Amazon Web Services General Reference Guide.
        public var tags: [SageMakerClientTypes.Tag]?

        public init (
            creationTime: ClientRuntime.Date? = nil,
            endpointName: Swift.String? = nil,
            failureReason: Swift.String? = nil,
            lastModifiedTime: ClientRuntime.Date? = nil,
            lastMonitoringExecutionSummary: SageMakerClientTypes.MonitoringExecutionSummary? = nil,
            monitoringScheduleArn: Swift.String? = nil,
            monitoringScheduleConfig: SageMakerClientTypes.MonitoringScheduleConfig? = nil,
            monitoringScheduleName: Swift.String? = nil,
            monitoringScheduleStatus: SageMakerClientTypes.ScheduleStatus? = nil,
            monitoringType: SageMakerClientTypes.MonitoringType? = nil,
            tags: [SageMakerClientTypes.Tag]? = nil
        )
        {
            self.creationTime = creationTime
            self.endpointName = endpointName
            self.failureReason = failureReason
            self.lastModifiedTime = lastModifiedTime
            self.lastMonitoringExecutionSummary = lastMonitoringExecutionSummary
            self.monitoringScheduleArn = monitoringScheduleArn
            self.monitoringScheduleConfig = monitoringScheduleConfig
            self.monitoringScheduleName = monitoringScheduleName
            self.monitoringScheduleStatus = monitoringScheduleStatus
            self.monitoringType = monitoringType
            self.tags = tags
        }
    }

}
