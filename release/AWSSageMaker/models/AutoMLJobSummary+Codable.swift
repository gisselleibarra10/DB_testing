// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.AutoMLJobSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case autoMLJobArn = "AutoMLJobArn"
        case autoMLJobName = "AutoMLJobName"
        case autoMLJobSecondaryStatus = "AutoMLJobSecondaryStatus"
        case autoMLJobStatus = "AutoMLJobStatus"
        case creationTime = "CreationTime"
        case endTime = "EndTime"
        case failureReason = "FailureReason"
        case lastModifiedTime = "LastModifiedTime"
        case partialFailureReasons = "PartialFailureReasons"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let autoMLJobArn = self.autoMLJobArn {
            try encodeContainer.encode(autoMLJobArn, forKey: .autoMLJobArn)
        }
        if let autoMLJobName = self.autoMLJobName {
            try encodeContainer.encode(autoMLJobName, forKey: .autoMLJobName)
        }
        if let autoMLJobSecondaryStatus = self.autoMLJobSecondaryStatus {
            try encodeContainer.encode(autoMLJobSecondaryStatus.rawValue, forKey: .autoMLJobSecondaryStatus)
        }
        if let autoMLJobStatus = self.autoMLJobStatus {
            try encodeContainer.encode(autoMLJobStatus.rawValue, forKey: .autoMLJobStatus)
        }
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let endTime = self.endTime {
            try encodeContainer.encode(endTime.timeIntervalSince1970, forKey: .endTime)
        }
        if let failureReason = self.failureReason {
            try encodeContainer.encode(failureReason, forKey: .failureReason)
        }
        if let lastModifiedTime = self.lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
        if let partialFailureReasons = partialFailureReasons {
            var partialFailureReasonsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .partialFailureReasons)
            for automlpartialfailurereasons0 in partialFailureReasons {
                try partialFailureReasonsContainer.encode(automlpartialfailurereasons0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let autoMLJobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .autoMLJobName)
        autoMLJobName = autoMLJobNameDecoded
        let autoMLJobArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .autoMLJobArn)
        autoMLJobArn = autoMLJobArnDecoded
        let autoMLJobStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.AutoMLJobStatus.self, forKey: .autoMLJobStatus)
        autoMLJobStatus = autoMLJobStatusDecoded
        let autoMLJobSecondaryStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.AutoMLJobSecondaryStatus.self, forKey: .autoMLJobSecondaryStatus)
        autoMLJobSecondaryStatus = autoMLJobSecondaryStatusDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let partialFailureReasonsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.AutoMLPartialFailureReason?].self, forKey: .partialFailureReasons)
        var partialFailureReasonsDecoded0:[SageMakerClientTypes.AutoMLPartialFailureReason]? = nil
        if let partialFailureReasonsContainer = partialFailureReasonsContainer {
            partialFailureReasonsDecoded0 = [SageMakerClientTypes.AutoMLPartialFailureReason]()
            for structure0 in partialFailureReasonsContainer {
                if let structure0 = structure0 {
                    partialFailureReasonsDecoded0?.append(structure0)
                }
            }
        }
        partialFailureReasons = partialFailureReasonsDecoded0
    }
}
