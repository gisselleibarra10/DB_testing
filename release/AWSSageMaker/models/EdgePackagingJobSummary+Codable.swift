// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.EdgePackagingJobSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case compilationJobName = "CompilationJobName"
        case creationTime = "CreationTime"
        case edgePackagingJobArn = "EdgePackagingJobArn"
        case edgePackagingJobName = "EdgePackagingJobName"
        case edgePackagingJobStatus = "EdgePackagingJobStatus"
        case lastModifiedTime = "LastModifiedTime"
        case modelName = "ModelName"
        case modelVersion = "ModelVersion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let compilationJobName = self.compilationJobName {
            try encodeContainer.encode(compilationJobName, forKey: .compilationJobName)
        }
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let edgePackagingJobArn = self.edgePackagingJobArn {
            try encodeContainer.encode(edgePackagingJobArn, forKey: .edgePackagingJobArn)
        }
        if let edgePackagingJobName = self.edgePackagingJobName {
            try encodeContainer.encode(edgePackagingJobName, forKey: .edgePackagingJobName)
        }
        if let edgePackagingJobStatus = self.edgePackagingJobStatus {
            try encodeContainer.encode(edgePackagingJobStatus.rawValue, forKey: .edgePackagingJobStatus)
        }
        if let lastModifiedTime = self.lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
        if let modelName = self.modelName {
            try encodeContainer.encode(modelName, forKey: .modelName)
        }
        if let modelVersion = self.modelVersion {
            try encodeContainer.encode(modelVersion, forKey: .modelVersion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let edgePackagingJobArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .edgePackagingJobArn)
        edgePackagingJobArn = edgePackagingJobArnDecoded
        let edgePackagingJobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .edgePackagingJobName)
        edgePackagingJobName = edgePackagingJobNameDecoded
        let edgePackagingJobStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.EdgePackagingJobStatus.self, forKey: .edgePackagingJobStatus)
        edgePackagingJobStatus = edgePackagingJobStatusDecoded
        let compilationJobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .compilationJobName)
        compilationJobName = compilationJobNameDecoded
        let modelNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelName)
        modelName = modelNameDecoded
        let modelVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .modelVersion)
        modelVersion = modelVersionDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
    }
}
