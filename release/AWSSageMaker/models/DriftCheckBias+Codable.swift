// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.DriftCheckBias: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configFile = "ConfigFile"
        case postTrainingConstraints = "PostTrainingConstraints"
        case preTrainingConstraints = "PreTrainingConstraints"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configFile = self.configFile {
            try encodeContainer.encode(configFile, forKey: .configFile)
        }
        if let postTrainingConstraints = self.postTrainingConstraints {
            try encodeContainer.encode(postTrainingConstraints, forKey: .postTrainingConstraints)
        }
        if let preTrainingConstraints = self.preTrainingConstraints {
            try encodeContainer.encode(preTrainingConstraints, forKey: .preTrainingConstraints)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configFileDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.FileSource.self, forKey: .configFile)
        configFile = configFileDecoded
        let preTrainingConstraintsDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MetricsSource.self, forKey: .preTrainingConstraints)
        preTrainingConstraints = preTrainingConstraintsDecoded
        let postTrainingConstraintsDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MetricsSource.self, forKey: .postTrainingConstraints)
        postTrainingConstraints = postTrainingConstraintsDecoded
    }
}
