// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListInferenceRecommendationsJobsOutputResponseBody: Swift.Equatable {
    let inferenceRecommendationsJobs: [SageMakerClientTypes.InferenceRecommendationsJob]?
    let nextToken: Swift.String?
}

extension ListInferenceRecommendationsJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inferenceRecommendationsJobs = "InferenceRecommendationsJobs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inferenceRecommendationsJobsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.InferenceRecommendationsJob?].self, forKey: .inferenceRecommendationsJobs)
        var inferenceRecommendationsJobsDecoded0:[SageMakerClientTypes.InferenceRecommendationsJob]? = nil
        if let inferenceRecommendationsJobsContainer = inferenceRecommendationsJobsContainer {
            inferenceRecommendationsJobsDecoded0 = [SageMakerClientTypes.InferenceRecommendationsJob]()
            for structure0 in inferenceRecommendationsJobsContainer {
                if let structure0 = structure0 {
                    inferenceRecommendationsJobsDecoded0?.append(structure0)
                }
            }
        }
        inferenceRecommendationsJobs = inferenceRecommendationsJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
