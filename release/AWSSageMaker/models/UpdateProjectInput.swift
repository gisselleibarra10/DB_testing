// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateProjectInput: Swift.Equatable {
    /// The description for the project.
    public var projectDescription: Swift.String?
    /// The name of the project.
    /// This member is required.
    public var projectName: Swift.String?
    /// The product ID and provisioning artifact ID to provision a service catalog. The provisioning artifact ID will default to the latest provisioning artifact ID of the product, if you don't provide the provisioning artifact ID. For more information, see [What is Amazon Web Services Service Catalog](https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html).
    public var serviceCatalogProvisioningUpdateDetails: SageMakerClientTypes.ServiceCatalogProvisioningUpdateDetails?
    /// An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see [Tagging Amazon Web Services Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). In addition, the project must have tag update constraints set in order to include this parameter in the request. For more information, see [Amazon Web Services Service Catalog Tag Update Constraints](https://docs.aws.amazon.com/servicecatalog/latest/adminguide/constraints-resourceupdate.html).
    public var tags: [SageMakerClientTypes.Tag]?

    public init (
        projectDescription: Swift.String? = nil,
        projectName: Swift.String? = nil,
        serviceCatalogProvisioningUpdateDetails: SageMakerClientTypes.ServiceCatalogProvisioningUpdateDetails? = nil,
        tags: [SageMakerClientTypes.Tag]? = nil
    )
    {
        self.projectDescription = projectDescription
        self.projectName = projectName
        self.serviceCatalogProvisioningUpdateDetails = serviceCatalogProvisioningUpdateDetails
        self.tags = tags
    }
}
