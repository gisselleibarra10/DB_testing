// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNotebookInstancesOutputResponseBody: Swift.Equatable {
    let nextToken: Swift.String?
    let notebookInstances: [SageMakerClientTypes.NotebookInstanceSummary]?
}

extension ListNotebookInstancesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case notebookInstances = "NotebookInstances"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let notebookInstancesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.NotebookInstanceSummary?].self, forKey: .notebookInstances)
        var notebookInstancesDecoded0:[SageMakerClientTypes.NotebookInstanceSummary]? = nil
        if let notebookInstancesContainer = notebookInstancesContainer {
            notebookInstancesDecoded0 = [SageMakerClientTypes.NotebookInstanceSummary]()
            for structure0 in notebookInstancesContainer {
                if let structure0 = structure0 {
                    notebookInstancesDecoded0?.append(structure0)
                }
            }
        }
        notebookInstances = notebookInstancesDecoded0
    }
}
