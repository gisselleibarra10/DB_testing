// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes {
    /// An entity returned by the [SearchRecord](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_SearchRecord.html) API containing the properties of a hyperparameter tuning job.
    public struct HyperParameterTuningJobSearchEntity: Swift.Equatable {
        /// The container for the summary information about a training job.
        public var bestTrainingJob: SageMakerClientTypes.HyperParameterTrainingJobSummary?
        /// The time that a hyperparameter tuning job was created.
        public var creationTime: ClientRuntime.Date?
        /// The error that was created when a hyperparameter tuning job failed.
        public var failureReason: Swift.String?
        /// The time that a hyperparameter tuning job ended.
        public var hyperParameterTuningEndTime: ClientRuntime.Date?
        /// The Amazon Resource Name (ARN) of a hyperparameter tuning job.
        public var hyperParameterTuningJobArn: Swift.String?
        /// Configures a hyperparameter tuning job.
        public var hyperParameterTuningJobConfig: SageMakerClientTypes.HyperParameterTuningJobConfig?
        /// The name of a hyperparameter tuning job.
        public var hyperParameterTuningJobName: Swift.String?
        /// The status of a hyperparameter tuning job.
        public var hyperParameterTuningJobStatus: SageMakerClientTypes.HyperParameterTuningJobStatus?
        /// The time that a hyperparameter tuning job was last modified.
        public var lastModifiedTime: ClientRuntime.Date?
        /// Specifies the number of training jobs that this hyperparameter tuning job launched, categorized by the status of their objective metric. The objective metric status shows whether the final objective metric for the training job has been evaluated by the tuning job and used in the hyperparameter tuning process.
        public var objectiveStatusCounters: SageMakerClientTypes.ObjectiveStatusCounters?
        /// The container for the summary information about a training job.
        public var overallBestTrainingJob: SageMakerClientTypes.HyperParameterTrainingJobSummary?
        /// The tags associated with a hyperparameter tuning job. For more information see [Tagging Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
        public var tags: [SageMakerClientTypes.Tag]?
        /// Defines the training jobs launched by a hyperparameter tuning job.
        public var trainingJobDefinition: SageMakerClientTypes.HyperParameterTrainingJobDefinition?
        /// The job definitions included in a hyperparameter tuning job.
        public var trainingJobDefinitions: [SageMakerClientTypes.HyperParameterTrainingJobDefinition]?
        /// The numbers of training jobs launched by a hyperparameter tuning job, categorized by status.
        public var trainingJobStatusCounters: SageMakerClientTypes.TrainingJobStatusCounters?
        /// Specifies the configuration for a hyperparameter tuning job that uses one or more previous hyperparameter tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job. All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric, and the training job that performs the best is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job. All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.
        public var warmStartConfig: SageMakerClientTypes.HyperParameterTuningJobWarmStartConfig?

        public init (
            bestTrainingJob: SageMakerClientTypes.HyperParameterTrainingJobSummary? = nil,
            creationTime: ClientRuntime.Date? = nil,
            failureReason: Swift.String? = nil,
            hyperParameterTuningEndTime: ClientRuntime.Date? = nil,
            hyperParameterTuningJobArn: Swift.String? = nil,
            hyperParameterTuningJobConfig: SageMakerClientTypes.HyperParameterTuningJobConfig? = nil,
            hyperParameterTuningJobName: Swift.String? = nil,
            hyperParameterTuningJobStatus: SageMakerClientTypes.HyperParameterTuningJobStatus? = nil,
            lastModifiedTime: ClientRuntime.Date? = nil,
            objectiveStatusCounters: SageMakerClientTypes.ObjectiveStatusCounters? = nil,
            overallBestTrainingJob: SageMakerClientTypes.HyperParameterTrainingJobSummary? = nil,
            tags: [SageMakerClientTypes.Tag]? = nil,
            trainingJobDefinition: SageMakerClientTypes.HyperParameterTrainingJobDefinition? = nil,
            trainingJobDefinitions: [SageMakerClientTypes.HyperParameterTrainingJobDefinition]? = nil,
            trainingJobStatusCounters: SageMakerClientTypes.TrainingJobStatusCounters? = nil,
            warmStartConfig: SageMakerClientTypes.HyperParameterTuningJobWarmStartConfig? = nil
        )
        {
            self.bestTrainingJob = bestTrainingJob
            self.creationTime = creationTime
            self.failureReason = failureReason
            self.hyperParameterTuningEndTime = hyperParameterTuningEndTime
            self.hyperParameterTuningJobArn = hyperParameterTuningJobArn
            self.hyperParameterTuningJobConfig = hyperParameterTuningJobConfig
            self.hyperParameterTuningJobName = hyperParameterTuningJobName
            self.hyperParameterTuningJobStatus = hyperParameterTuningJobStatus
            self.lastModifiedTime = lastModifiedTime
            self.objectiveStatusCounters = objectiveStatusCounters
            self.overallBestTrainingJob = overallBestTrainingJob
            self.tags = tags
            self.trainingJobDefinition = trainingJobDefinition
            self.trainingJobDefinitions = trainingJobDefinitions
            self.trainingJobStatusCounters = trainingJobStatusCounters
            self.warmStartConfig = warmStartConfig
        }
    }

}
