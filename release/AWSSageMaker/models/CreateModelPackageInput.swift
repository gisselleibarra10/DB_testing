// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateModelPackageInput: Swift.Equatable {
    /// An array of additional Inference Specification objects. Each additional Inference Specification specifies artifacts based on this model package that can be used on inference endpoints. Generally used with SageMaker Neo to store the compiled artifacts.
    public var additionalInferenceSpecifications: [SageMakerClientTypes.AdditionalInferenceSpecificationDefinition]?
    /// Whether to certify the model package for listing on Amazon Web Services Marketplace. This parameter is optional for unversioned models, and does not apply to versioned models.
    public var certifyForMarketplace: Swift.Bool
    /// A unique token that guarantees that the call to this API is idempotent.
    public var clientToken: Swift.String?
    /// The metadata properties associated with the model package versions.
    public var customerMetadataProperties: [Swift.String:Swift.String]?
    /// The machine learning domain of your model package and its components. Common machine learning domains include computer vision and natural language processing.
    public var domain: Swift.String?
    /// Represents the drift check baselines that can be used when the model monitor is set using the model package. For more information, see the topic on [Drift Detection against Previous Baselines in SageMaker Pipelines](https://docs.aws.amazon.com/sagemaker/latest/dg/pipelines-quality-clarify-baseline-lifecycle.html#pipelines-quality-clarify-baseline-drift-detection) in the Amazon SageMaker Developer Guide.
    public var driftCheckBaselines: SageMakerClientTypes.DriftCheckBaselines?
    /// Specifies details about inference jobs that can be run with models based on this model package, including the following:
    ///
    /// * The Amazon ECR paths of containers that contain the inference code and model artifacts.
    ///
    /// * The instance types that the model package supports for transform jobs and real-time endpoints used for inference.
    ///
    /// * The input and output content formats that the model package supports for inference.
    public var inferenceSpecification: SageMakerClientTypes.InferenceSpecification?
    /// Metadata properties of the tracking entity, trial, or trial component.
    public var metadataProperties: SageMakerClientTypes.MetadataProperties?
    /// Whether the model is approved for deployment. This parameter is optional for versioned models, and does not apply to unversioned models. For versioned models, the value of this parameter must be set to Approved to deploy the model.
    public var modelApprovalStatus: SageMakerClientTypes.ModelApprovalStatus?
    /// A structure that contains model metrics reports.
    public var modelMetrics: SageMakerClientTypes.ModelMetrics?
    /// A description of the model package.
    public var modelPackageDescription: Swift.String?
    /// The name or Amazon Resource Name (ARN) of the model package group that this model version belongs to. This parameter is required for versioned models, and does not apply to unversioned models.
    public var modelPackageGroupName: Swift.String?
    /// The name of the model package. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen). This parameter is required for unversioned models. It is not applicable to versioned models.
    public var modelPackageName: Swift.String?
    /// The Amazon Simple Storage Service (Amazon S3) path where the sample payload are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
    public var samplePayloadUrl: Swift.String?
    /// Details about the algorithm that was used to create the model package.
    public var sourceAlgorithmSpecification: SageMakerClientTypes.SourceAlgorithmSpecification?
    /// A list of key value pairs associated with the model. For more information, see [Tagging Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the Amazon Web Services General Reference Guide.
    public var tags: [SageMakerClientTypes.Tag]?
    /// The machine learning task your model package accomplishes. Common machine learning tasks include object detection and image classification. The following tasks are supported by Inference Recommender: "IMAGE_CLASSIFICATION" | "OBJECT_DETECTION" | "TEXT_GENERATION" |"IMAGE_SEGMENTATION" | "FILL_MASK" | "CLASSIFICATION" | "REGRESSION" | "OTHER". Specify "OTHER" if none of the tasks listed fit your use case.
    public var task: Swift.String?
    /// Specifies configurations for one or more transform jobs that SageMaker runs to test the model package.
    public var validationSpecification: SageMakerClientTypes.ModelPackageValidationSpecification?

    public init (
        additionalInferenceSpecifications: [SageMakerClientTypes.AdditionalInferenceSpecificationDefinition]? = nil,
        certifyForMarketplace: Swift.Bool = false,
        clientToken: Swift.String? = nil,
        customerMetadataProperties: [Swift.String:Swift.String]? = nil,
        domain: Swift.String? = nil,
        driftCheckBaselines: SageMakerClientTypes.DriftCheckBaselines? = nil,
        inferenceSpecification: SageMakerClientTypes.InferenceSpecification? = nil,
        metadataProperties: SageMakerClientTypes.MetadataProperties? = nil,
        modelApprovalStatus: SageMakerClientTypes.ModelApprovalStatus? = nil,
        modelMetrics: SageMakerClientTypes.ModelMetrics? = nil,
        modelPackageDescription: Swift.String? = nil,
        modelPackageGroupName: Swift.String? = nil,
        modelPackageName: Swift.String? = nil,
        samplePayloadUrl: Swift.String? = nil,
        sourceAlgorithmSpecification: SageMakerClientTypes.SourceAlgorithmSpecification? = nil,
        tags: [SageMakerClientTypes.Tag]? = nil,
        task: Swift.String? = nil,
        validationSpecification: SageMakerClientTypes.ModelPackageValidationSpecification? = nil
    )
    {
        self.additionalInferenceSpecifications = additionalInferenceSpecifications
        self.certifyForMarketplace = certifyForMarketplace
        self.clientToken = clientToken
        self.customerMetadataProperties = customerMetadataProperties
        self.domain = domain
        self.driftCheckBaselines = driftCheckBaselines
        self.inferenceSpecification = inferenceSpecification
        self.metadataProperties = metadataProperties
        self.modelApprovalStatus = modelApprovalStatus
        self.modelMetrics = modelMetrics
        self.modelPackageDescription = modelPackageDescription
        self.modelPackageGroupName = modelPackageGroupName
        self.modelPackageName = modelPackageName
        self.samplePayloadUrl = samplePayloadUrl
        self.sourceAlgorithmSpecification = sourceAlgorithmSpecification
        self.tags = tags
        self.task = task
        self.validationSpecification = validationSpecification
    }
}
