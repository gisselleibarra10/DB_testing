// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDeviceFleetReportOutputResponseBody: Swift.Equatable {
    let deviceFleetArn: Swift.String?
    let deviceFleetName: Swift.String?
    let outputConfig: SageMakerClientTypes.EdgeOutputConfig?
    let description: Swift.String?
    let reportGenerated: ClientRuntime.Date?
    let deviceStats: SageMakerClientTypes.DeviceStats?
    let agentVersions: [SageMakerClientTypes.AgentVersion]?
    let modelStats: [SageMakerClientTypes.EdgeModelStat]?
}

extension GetDeviceFleetReportOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case agentVersions = "AgentVersions"
        case description = "Description"
        case deviceFleetArn = "DeviceFleetArn"
        case deviceFleetName = "DeviceFleetName"
        case deviceStats = "DeviceStats"
        case modelStats = "ModelStats"
        case outputConfig = "OutputConfig"
        case reportGenerated = "ReportGenerated"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceFleetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceFleetArn)
        deviceFleetArn = deviceFleetArnDecoded
        let deviceFleetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceFleetName)
        deviceFleetName = deviceFleetNameDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.EdgeOutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let reportGeneratedDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .reportGenerated)
        reportGenerated = reportGeneratedDecoded
        let deviceStatsDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.DeviceStats.self, forKey: .deviceStats)
        deviceStats = deviceStatsDecoded
        let agentVersionsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.AgentVersion?].self, forKey: .agentVersions)
        var agentVersionsDecoded0:[SageMakerClientTypes.AgentVersion]? = nil
        if let agentVersionsContainer = agentVersionsContainer {
            agentVersionsDecoded0 = [SageMakerClientTypes.AgentVersion]()
            for structure0 in agentVersionsContainer {
                if let structure0 = structure0 {
                    agentVersionsDecoded0?.append(structure0)
                }
            }
        }
        agentVersions = agentVersionsDecoded0
        let modelStatsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.EdgeModelStat?].self, forKey: .modelStats)
        var modelStatsDecoded0:[SageMakerClientTypes.EdgeModelStat]? = nil
        if let modelStatsContainer = modelStatsContainer {
            modelStatsDecoded0 = [SageMakerClientTypes.EdgeModelStat]()
            for structure0 in modelStatsContainer {
                if let structure0 = structure0 {
                    modelStatsDecoded0?.append(structure0)
                }
            }
        }
        modelStats = modelStatsDecoded0
    }
}
