// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateHyperParameterTuningJobInputBody: Swift.Equatable {
    let hyperParameterTuningJobName: Swift.String?
    let hyperParameterTuningJobConfig: SageMakerClientTypes.HyperParameterTuningJobConfig?
    let trainingJobDefinition: SageMakerClientTypes.HyperParameterTrainingJobDefinition?
    let trainingJobDefinitions: [SageMakerClientTypes.HyperParameterTrainingJobDefinition]?
    let warmStartConfig: SageMakerClientTypes.HyperParameterTuningJobWarmStartConfig?
    let tags: [SageMakerClientTypes.Tag]?
}

extension CreateHyperParameterTuningJobInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hyperParameterTuningJobConfig = "HyperParameterTuningJobConfig"
        case hyperParameterTuningJobName = "HyperParameterTuningJobName"
        case tags = "Tags"
        case trainingJobDefinition = "TrainingJobDefinition"
        case trainingJobDefinitions = "TrainingJobDefinitions"
        case warmStartConfig = "WarmStartConfig"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hyperParameterTuningJobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hyperParameterTuningJobName)
        hyperParameterTuningJobName = hyperParameterTuningJobNameDecoded
        let hyperParameterTuningJobConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.HyperParameterTuningJobConfig.self, forKey: .hyperParameterTuningJobConfig)
        hyperParameterTuningJobConfig = hyperParameterTuningJobConfigDecoded
        let trainingJobDefinitionDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.HyperParameterTrainingJobDefinition.self, forKey: .trainingJobDefinition)
        trainingJobDefinition = trainingJobDefinitionDecoded
        let trainingJobDefinitionsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.HyperParameterTrainingJobDefinition?].self, forKey: .trainingJobDefinitions)
        var trainingJobDefinitionsDecoded0:[SageMakerClientTypes.HyperParameterTrainingJobDefinition]? = nil
        if let trainingJobDefinitionsContainer = trainingJobDefinitionsContainer {
            trainingJobDefinitionsDecoded0 = [SageMakerClientTypes.HyperParameterTrainingJobDefinition]()
            for structure0 in trainingJobDefinitionsContainer {
                if let structure0 = structure0 {
                    trainingJobDefinitionsDecoded0?.append(structure0)
                }
            }
        }
        trainingJobDefinitions = trainingJobDefinitionsDecoded0
        let warmStartConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.HyperParameterTuningJobWarmStartConfig.self, forKey: .warmStartConfig)
        warmStartConfig = warmStartConfigDecoded
        let tagsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[SageMakerClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [SageMakerClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
