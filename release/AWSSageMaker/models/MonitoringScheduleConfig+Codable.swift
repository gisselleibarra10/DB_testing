// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.MonitoringScheduleConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case monitoringJobDefinition = "MonitoringJobDefinition"
        case monitoringJobDefinitionName = "MonitoringJobDefinitionName"
        case monitoringType = "MonitoringType"
        case scheduleConfig = "ScheduleConfig"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let monitoringJobDefinition = self.monitoringJobDefinition {
            try encodeContainer.encode(monitoringJobDefinition, forKey: .monitoringJobDefinition)
        }
        if let monitoringJobDefinitionName = self.monitoringJobDefinitionName {
            try encodeContainer.encode(monitoringJobDefinitionName, forKey: .monitoringJobDefinitionName)
        }
        if let monitoringType = self.monitoringType {
            try encodeContainer.encode(monitoringType.rawValue, forKey: .monitoringType)
        }
        if let scheduleConfig = self.scheduleConfig {
            try encodeContainer.encode(scheduleConfig, forKey: .scheduleConfig)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scheduleConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ScheduleConfig.self, forKey: .scheduleConfig)
        scheduleConfig = scheduleConfigDecoded
        let monitoringJobDefinitionDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MonitoringJobDefinition.self, forKey: .monitoringJobDefinition)
        monitoringJobDefinition = monitoringJobDefinitionDecoded
        let monitoringJobDefinitionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .monitoringJobDefinitionName)
        monitoringJobDefinitionName = monitoringJobDefinitionNameDecoded
        let monitoringTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MonitoringType.self, forKey: .monitoringType)
        monitoringType = monitoringTypeDecoded
    }
}
