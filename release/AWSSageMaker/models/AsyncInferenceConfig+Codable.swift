// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.AsyncInferenceConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientConfig = "ClientConfig"
        case outputConfig = "OutputConfig"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientConfig = self.clientConfig {
            try encodeContainer.encode(clientConfig, forKey: .clientConfig)
        }
        if let outputConfig = self.outputConfig {
            try encodeContainer.encode(outputConfig, forKey: .outputConfig)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.AsyncInferenceClientConfig.self, forKey: .clientConfig)
        clientConfig = clientConfigDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.AsyncInferenceOutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
    }
}
