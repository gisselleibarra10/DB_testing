// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.Phase: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case durationInSeconds = "DurationInSeconds"
        case initialNumberOfUsers = "InitialNumberOfUsers"
        case spawnRate = "SpawnRate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let durationInSeconds = self.durationInSeconds {
            try encodeContainer.encode(durationInSeconds, forKey: .durationInSeconds)
        }
        if let initialNumberOfUsers = self.initialNumberOfUsers {
            try encodeContainer.encode(initialNumberOfUsers, forKey: .initialNumberOfUsers)
        }
        if let spawnRate = self.spawnRate {
            try encodeContainer.encode(spawnRate, forKey: .spawnRate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let initialNumberOfUsersDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .initialNumberOfUsers)
        initialNumberOfUsers = initialNumberOfUsersDecoded
        let spawnRateDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .spawnRate)
        spawnRate = spawnRateDecoded
        let durationInSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .durationInSeconds)
        durationInSeconds = durationInSecondsDecoded
    }
}
