// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListExperimentsOutputResponseBody: Swift.Equatable {
    let experimentSummaries: [SageMakerClientTypes.ExperimentSummary]?
    let nextToken: Swift.String?
}

extension ListExperimentsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case experimentSummaries = "ExperimentSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let experimentSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.ExperimentSummary?].self, forKey: .experimentSummaries)
        var experimentSummariesDecoded0:[SageMakerClientTypes.ExperimentSummary]? = nil
        if let experimentSummariesContainer = experimentSummariesContainer {
            experimentSummariesDecoded0 = [SageMakerClientTypes.ExperimentSummary]()
            for structure0 in experimentSummariesContainer {
                if let structure0 = structure0 {
                    experimentSummariesDecoded0?.append(structure0)
                }
            }
        }
        experimentSummaries = experimentSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
