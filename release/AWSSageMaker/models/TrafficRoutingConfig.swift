// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    /// Defines the traffic routing strategy during an endpoint deployment to shift traffic from the old fleet to the new fleet.
    public struct TrafficRoutingConfig: Swift.Equatable {
        /// Batch size for the first step to turn on traffic on the new endpoint fleet. Value must be less than or equal to 50% of the variant's total instance count.
        public var canarySize: SageMakerClientTypes.CapacitySize?
        /// Batch size for each step to turn on traffic on the new endpoint fleet. Value must be 10-50% of the variant's total instance count.
        public var linearStepSize: SageMakerClientTypes.CapacitySize?
        /// Traffic routing strategy type.
        ///
        /// * ALL_AT_ONCE: Endpoint traffic shifts to the new fleet in a single step.
        ///
        /// * CANARY: Endpoint traffic shifts to the new fleet in two steps. The first step is the canary, which is a small portion of the traffic. The second step is the remainder of the traffic.
        ///
        /// * LINEAR: Endpoint traffic shifts to the new fleet in n steps of a configurable size.
        /// This member is required.
        public var type: SageMakerClientTypes.TrafficRoutingConfigType?
        /// The waiting time (in seconds) between incremental steps to turn on traffic on the new endpoint fleet.
        /// This member is required.
        public var waitIntervalInSeconds: Swift.Int?

        public init (
            canarySize: SageMakerClientTypes.CapacitySize? = nil,
            linearStepSize: SageMakerClientTypes.CapacitySize? = nil,
            type: SageMakerClientTypes.TrafficRoutingConfigType? = nil,
            waitIntervalInSeconds: Swift.Int? = nil
        )
        {
            self.canarySize = canarySize
            self.linearStepSize = linearStepSize
            self.type = type
            self.waitIntervalInSeconds = waitIntervalInSeconds
        }
    }

}
