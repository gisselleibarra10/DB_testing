// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.LabelingJobStoppingConditions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case maxHumanLabeledObjectCount = "MaxHumanLabeledObjectCount"
        case maxPercentageOfInputDatasetLabeled = "MaxPercentageOfInputDatasetLabeled"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxHumanLabeledObjectCount = self.maxHumanLabeledObjectCount {
            try encodeContainer.encode(maxHumanLabeledObjectCount, forKey: .maxHumanLabeledObjectCount)
        }
        if let maxPercentageOfInputDatasetLabeled = self.maxPercentageOfInputDatasetLabeled {
            try encodeContainer.encode(maxPercentageOfInputDatasetLabeled, forKey: .maxPercentageOfInputDatasetLabeled)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maxHumanLabeledObjectCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxHumanLabeledObjectCount)
        maxHumanLabeledObjectCount = maxHumanLabeledObjectCountDecoded
        let maxPercentageOfInputDatasetLabeledDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxPercentageOfInputDatasetLabeled)
        maxPercentageOfInputDatasetLabeled = maxPercentageOfInputDatasetLabeledDecoded
    }
}
