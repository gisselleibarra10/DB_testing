// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProjectOutputResponseBody: Swift.Equatable {
    let projectArn: Swift.String?
    let projectName: Swift.String?
    let projectId: Swift.String?
    let projectDescription: Swift.String?
    let serviceCatalogProvisioningDetails: SageMakerClientTypes.ServiceCatalogProvisioningDetails?
    let serviceCatalogProvisionedProductDetails: SageMakerClientTypes.ServiceCatalogProvisionedProductDetails?
    let projectStatus: SageMakerClientTypes.ProjectStatus?
    let createdBy: SageMakerClientTypes.UserContext?
    let creationTime: ClientRuntime.Date?
    let lastModifiedTime: ClientRuntime.Date?
    let lastModifiedBy: SageMakerClientTypes.UserContext?
}

extension DescribeProjectOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdBy = "CreatedBy"
        case creationTime = "CreationTime"
        case lastModifiedBy = "LastModifiedBy"
        case lastModifiedTime = "LastModifiedTime"
        case projectArn = "ProjectArn"
        case projectDescription = "ProjectDescription"
        case projectId = "ProjectId"
        case projectName = "ProjectName"
        case projectStatus = "ProjectStatus"
        case serviceCatalogProvisionedProductDetails = "ServiceCatalogProvisionedProductDetails"
        case serviceCatalogProvisioningDetails = "ServiceCatalogProvisioningDetails"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectArn)
        projectArn = projectArnDecoded
        let projectNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectName)
        projectName = projectNameDecoded
        let projectIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectId)
        projectId = projectIdDecoded
        let projectDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .projectDescription)
        projectDescription = projectDescriptionDecoded
        let serviceCatalogProvisioningDetailsDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ServiceCatalogProvisioningDetails.self, forKey: .serviceCatalogProvisioningDetails)
        serviceCatalogProvisioningDetails = serviceCatalogProvisioningDetailsDecoded
        let serviceCatalogProvisionedProductDetailsDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ServiceCatalogProvisionedProductDetails.self, forKey: .serviceCatalogProvisionedProductDetails)
        serviceCatalogProvisionedProductDetails = serviceCatalogProvisionedProductDetailsDecoded
        let projectStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ProjectStatus.self, forKey: .projectStatus)
        projectStatus = projectStatusDecoded
        let createdByDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.UserContext.self, forKey: .createdBy)
        createdBy = createdByDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let lastModifiedByDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.UserContext.self, forKey: .lastModifiedBy)
        lastModifiedBy = lastModifiedByDecoded
    }
}
