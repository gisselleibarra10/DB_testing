// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTrialOutputResponseBody: Swift.Equatable {
    let trialName: Swift.String?
    let trialArn: Swift.String?
    let displayName: Swift.String?
    let experimentName: Swift.String?
    let source: SageMakerClientTypes.TrialSource?
    let creationTime: ClientRuntime.Date?
    let createdBy: SageMakerClientTypes.UserContext?
    let lastModifiedTime: ClientRuntime.Date?
    let lastModifiedBy: SageMakerClientTypes.UserContext?
    let metadataProperties: SageMakerClientTypes.MetadataProperties?
}

extension DescribeTrialOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createdBy = "CreatedBy"
        case creationTime = "CreationTime"
        case displayName = "DisplayName"
        case experimentName = "ExperimentName"
        case lastModifiedBy = "LastModifiedBy"
        case lastModifiedTime = "LastModifiedTime"
        case metadataProperties = "MetadataProperties"
        case source = "Source"
        case trialArn = "TrialArn"
        case trialName = "TrialName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trialNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trialName)
        trialName = trialNameDecoded
        let trialArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trialArn)
        trialArn = trialArnDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let experimentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .experimentName)
        experimentName = experimentNameDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.TrialSource.self, forKey: .source)
        source = sourceDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let createdByDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.UserContext.self, forKey: .createdBy)
        createdBy = createdByDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let lastModifiedByDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.UserContext.self, forKey: .lastModifiedBy)
        lastModifiedBy = lastModifiedByDecoded
        let metadataPropertiesDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MetadataProperties.self, forKey: .metadataProperties)
        metadataProperties = metadataPropertiesDecoded
    }
}
