// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.ExperimentSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case displayName = "DisplayName"
        case experimentArn = "ExperimentArn"
        case experimentName = "ExperimentName"
        case experimentSource = "ExperimentSource"
        case lastModifiedTime = "LastModifiedTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let displayName = self.displayName {
            try encodeContainer.encode(displayName, forKey: .displayName)
        }
        if let experimentArn = self.experimentArn {
            try encodeContainer.encode(experimentArn, forKey: .experimentArn)
        }
        if let experimentName = self.experimentName {
            try encodeContainer.encode(experimentName, forKey: .experimentName)
        }
        if let experimentSource = self.experimentSource {
            try encodeContainer.encode(experimentSource, forKey: .experimentSource)
        }
        if let lastModifiedTime = self.lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let experimentArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .experimentArn)
        experimentArn = experimentArnDecoded
        let experimentNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .experimentName)
        experimentName = experimentNameDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let experimentSourceDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ExperimentSource.self, forKey: .experimentSource)
        experimentSource = experimentSourceDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
    }
}
