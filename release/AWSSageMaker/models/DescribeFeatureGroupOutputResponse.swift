// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeFeatureGroupOutputResponse: Swift.Equatable {
    /// A timestamp indicating when SageMaker created the FeatureGroup.
    /// This member is required.
    public var creationTime: ClientRuntime.Date?
    /// A free form description of the feature group.
    public var description: Swift.String?
    /// The name of the feature that stores the EventTime of a Record in a FeatureGroup. An EventTime is a point in time when a new event occurs that corresponds to the creation or update of a Record in a FeatureGroup. All Records in the FeatureGroup have a corresponding EventTime.
    /// This member is required.
    public var eventTimeFeatureName: Swift.String?
    /// The reason that the FeatureGroup failed to be replicated in the OfflineStore. This is failure can occur because:
    ///
    /// * The FeatureGroup could not be created in the OfflineStore.
    ///
    /// * The FeatureGroup could not be deleted from the OfflineStore.
    public var failureReason: Swift.String?
    /// A list of the Features in the FeatureGroup. Each feature is defined by a FeatureName and FeatureType.
    /// This member is required.
    public var featureDefinitions: [SageMakerClientTypes.FeatureDefinition]?
    /// The Amazon Resource Name (ARN) of the FeatureGroup.
    /// This member is required.
    public var featureGroupArn: Swift.String?
    /// he name of the FeatureGroup.
    /// This member is required.
    public var featureGroupName: Swift.String?
    /// The status of the feature group.
    public var featureGroupStatus: SageMakerClientTypes.FeatureGroupStatus?
    /// A timestamp indicating when the feature group was last updated.
    public var lastModifiedTime: ClientRuntime.Date?
    /// A value indicating whether the update made to the feature group was successful.
    public var lastUpdateStatus: SageMakerClientTypes.LastUpdateStatus?
    /// A token to resume pagination of the list of Features (FeatureDefinitions).
    /// This member is required.
    public var nextToken: Swift.String?
    /// The configuration of the OfflineStore, inducing the S3 location of the OfflineStore, Amazon Web Services Glue or Amazon Web Services Hive data catalogue configurations, and the security configuration.
    public var offlineStoreConfig: SageMakerClientTypes.OfflineStoreConfig?
    /// The status of the OfflineStore. Notifies you if replicating data into the OfflineStore has failed. Returns either: Active or Blocked
    public var offlineStoreStatus: SageMakerClientTypes.OfflineStoreStatus?
    /// The configuration for the OnlineStore.
    public var onlineStoreConfig: SageMakerClientTypes.OnlineStoreConfig?
    /// The size of the OnlineStore in bytes.
    public var onlineStoreTotalSizeBytes: Swift.Int?
    /// The name of the Feature used for RecordIdentifier, whose value uniquely identifies a record stored in the feature store.
    /// This member is required.
    public var recordIdentifierFeatureName: Swift.String?
    /// The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the OfflineStore if an OfflineStoreConfig is provided.
    public var roleArn: Swift.String?

    public init (
        creationTime: ClientRuntime.Date? = nil,
        description: Swift.String? = nil,
        eventTimeFeatureName: Swift.String? = nil,
        failureReason: Swift.String? = nil,
        featureDefinitions: [SageMakerClientTypes.FeatureDefinition]? = nil,
        featureGroupArn: Swift.String? = nil,
        featureGroupName: Swift.String? = nil,
        featureGroupStatus: SageMakerClientTypes.FeatureGroupStatus? = nil,
        lastModifiedTime: ClientRuntime.Date? = nil,
        lastUpdateStatus: SageMakerClientTypes.LastUpdateStatus? = nil,
        nextToken: Swift.String? = nil,
        offlineStoreConfig: SageMakerClientTypes.OfflineStoreConfig? = nil,
        offlineStoreStatus: SageMakerClientTypes.OfflineStoreStatus? = nil,
        onlineStoreConfig: SageMakerClientTypes.OnlineStoreConfig? = nil,
        onlineStoreTotalSizeBytes: Swift.Int? = nil,
        recordIdentifierFeatureName: Swift.String? = nil,
        roleArn: Swift.String? = nil
    )
    {
        self.creationTime = creationTime
        self.description = description
        self.eventTimeFeatureName = eventTimeFeatureName
        self.failureReason = failureReason
        self.featureDefinitions = featureDefinitions
        self.featureGroupArn = featureGroupArn
        self.featureGroupName = featureGroupName
        self.featureGroupStatus = featureGroupStatus
        self.lastModifiedTime = lastModifiedTime
        self.lastUpdateStatus = lastUpdateStatus
        self.nextToken = nextToken
        self.offlineStoreConfig = offlineStoreConfig
        self.offlineStoreStatus = offlineStoreStatus
        self.onlineStoreConfig = onlineStoreConfig
        self.onlineStoreTotalSizeBytes = onlineStoreTotalSizeBytes
        self.recordIdentifierFeatureName = recordIdentifierFeatureName
        self.roleArn = roleArn
    }
}
