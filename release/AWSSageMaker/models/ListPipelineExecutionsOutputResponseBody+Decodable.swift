// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelineExecutionsOutputResponseBody: Swift.Equatable {
    let pipelineExecutionSummaries: [SageMakerClientTypes.PipelineExecutionSummary]?
    let nextToken: Swift.String?
}

extension ListPipelineExecutionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case pipelineExecutionSummaries = "PipelineExecutionSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineExecutionSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.PipelineExecutionSummary?].self, forKey: .pipelineExecutionSummaries)
        var pipelineExecutionSummariesDecoded0:[SageMakerClientTypes.PipelineExecutionSummary]? = nil
        if let pipelineExecutionSummariesContainer = pipelineExecutionSummariesContainer {
            pipelineExecutionSummariesDecoded0 = [SageMakerClientTypes.PipelineExecutionSummary]()
            for structure0 in pipelineExecutionSummariesContainer {
                if let structure0 = structure0 {
                    pipelineExecutionSummariesDecoded0?.append(structure0)
                }
            }
        }
        pipelineExecutionSummaries = pipelineExecutionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
