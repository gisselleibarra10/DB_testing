// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTrialsOutputResponseBody: Swift.Equatable {
    let trialSummaries: [SageMakerClientTypes.TrialSummary]?
    let nextToken: Swift.String?
}

extension ListTrialsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case trialSummaries = "TrialSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trialSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.TrialSummary?].self, forKey: .trialSummaries)
        var trialSummariesDecoded0:[SageMakerClientTypes.TrialSummary]? = nil
        if let trialSummariesContainer = trialSummariesContainer {
            trialSummariesDecoded0 = [SageMakerClientTypes.TrialSummary]()
            for structure0 in trialSummariesContainer {
                if let structure0 = structure0 {
                    trialSummariesDecoded0?.append(structure0)
                }
            }
        }
        trialSummaries = trialSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
