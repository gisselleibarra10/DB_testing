// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.CodeRepositorySummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case codeRepositoryArn = "CodeRepositoryArn"
        case codeRepositoryName = "CodeRepositoryName"
        case creationTime = "CreationTime"
        case gitConfig = "GitConfig"
        case lastModifiedTime = "LastModifiedTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let codeRepositoryArn = self.codeRepositoryArn {
            try encodeContainer.encode(codeRepositoryArn, forKey: .codeRepositoryArn)
        }
        if let codeRepositoryName = self.codeRepositoryName {
            try encodeContainer.encode(codeRepositoryName, forKey: .codeRepositoryName)
        }
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let gitConfig = self.gitConfig {
            try encodeContainer.encode(gitConfig, forKey: .gitConfig)
        }
        if let lastModifiedTime = self.lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeRepositoryNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .codeRepositoryName)
        codeRepositoryName = codeRepositoryNameDecoded
        let codeRepositoryArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .codeRepositoryArn)
        codeRepositoryArn = codeRepositoryArnDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let gitConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.GitConfig.self, forKey: .gitConfig)
        gitConfig = gitConfigDecoded
    }
}
