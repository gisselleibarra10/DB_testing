// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RenderUiTemplateInputBody: Swift.Equatable {
    let uiTemplate: SageMakerClientTypes.UiTemplate?
    let task: SageMakerClientTypes.RenderableTask?
    let roleArn: Swift.String?
    let humanTaskUiArn: Swift.String?
}

extension RenderUiTemplateInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case humanTaskUiArn = "HumanTaskUiArn"
        case roleArn = "RoleArn"
        case task = "Task"
        case uiTemplate = "UiTemplate"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let uiTemplateDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.UiTemplate.self, forKey: .uiTemplate)
        uiTemplate = uiTemplateDecoded
        let taskDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.RenderableTask.self, forKey: .task)
        task = taskDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let humanTaskUiArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .humanTaskUiArn)
        humanTaskUiArn = humanTaskUiArnDecoded
    }
}
