// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContextsOutputResponseBody: Swift.Equatable {
    let contextSummaries: [SageMakerClientTypes.ContextSummary]?
    let nextToken: Swift.String?
}

extension ListContextsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contextSummaries = "ContextSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contextSummariesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.ContextSummary?].self, forKey: .contextSummaries)
        var contextSummariesDecoded0:[SageMakerClientTypes.ContextSummary]? = nil
        if let contextSummariesContainer = contextSummariesContainer {
            contextSummariesDecoded0 = [SageMakerClientTypes.ContextSummary]()
            for structure0 in contextSummariesContainer {
                if let structure0 = structure0 {
                    contextSummariesDecoded0?.append(structure0)
                }
            }
        }
        contextSummaries = contextSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
