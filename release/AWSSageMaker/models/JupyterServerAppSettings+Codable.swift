// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.JupyterServerAppSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultResourceSpec = "DefaultResourceSpec"
        case lifecycleConfigArns = "LifecycleConfigArns"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultResourceSpec = self.defaultResourceSpec {
            try encodeContainer.encode(defaultResourceSpec, forKey: .defaultResourceSpec)
        }
        if let lifecycleConfigArns = lifecycleConfigArns {
            var lifecycleConfigArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .lifecycleConfigArns)
            for lifecycleconfigarns0 in lifecycleConfigArns {
                try lifecycleConfigArnsContainer.encode(lifecycleconfigarns0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let defaultResourceSpecDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ResourceSpec.self, forKey: .defaultResourceSpec)
        defaultResourceSpec = defaultResourceSpecDecoded
        let lifecycleConfigArnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .lifecycleConfigArns)
        var lifecycleConfigArnsDecoded0:[Swift.String]? = nil
        if let lifecycleConfigArnsContainer = lifecycleConfigArnsContainer {
            lifecycleConfigArnsDecoded0 = [Swift.String]()
            for string0 in lifecycleConfigArnsContainer {
                if let string0 = string0 {
                    lifecycleConfigArnsDecoded0?.append(string0)
                }
            }
        }
        lifecycleConfigArns = lifecycleConfigArnsDecoded0
    }
}
