// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDeviceFleetOutputResponseBody: Swift.Equatable {
    let deviceFleetName: Swift.String?
    let deviceFleetArn: Swift.String?
    let outputConfig: SageMakerClientTypes.EdgeOutputConfig?
    let description: Swift.String?
    let creationTime: ClientRuntime.Date?
    let lastModifiedTime: ClientRuntime.Date?
    let roleArn: Swift.String?
    let iotRoleAlias: Swift.String?
}

extension DescribeDeviceFleetOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case description = "Description"
        case deviceFleetArn = "DeviceFleetArn"
        case deviceFleetName = "DeviceFleetName"
        case iotRoleAlias = "IotRoleAlias"
        case lastModifiedTime = "LastModifiedTime"
        case outputConfig = "OutputConfig"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceFleetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceFleetName)
        deviceFleetName = deviceFleetNameDecoded
        let deviceFleetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceFleetArn)
        deviceFleetArn = deviceFleetArnDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.EdgeOutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let iotRoleAliasDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .iotRoleAlias)
        iotRoleAlias = iotRoleAliasDecoded
    }
}
