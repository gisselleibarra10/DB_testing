// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.FileSystemDataSource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case directoryPath = "DirectoryPath"
        case fileSystemAccessMode = "FileSystemAccessMode"
        case fileSystemId = "FileSystemId"
        case fileSystemType = "FileSystemType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let directoryPath = self.directoryPath {
            try encodeContainer.encode(directoryPath, forKey: .directoryPath)
        }
        if let fileSystemAccessMode = self.fileSystemAccessMode {
            try encodeContainer.encode(fileSystemAccessMode.rawValue, forKey: .fileSystemAccessMode)
        }
        if let fileSystemId = self.fileSystemId {
            try encodeContainer.encode(fileSystemId, forKey: .fileSystemId)
        }
        if let fileSystemType = self.fileSystemType {
            try encodeContainer.encode(fileSystemType.rawValue, forKey: .fileSystemType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fileSystemIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .fileSystemId)
        fileSystemId = fileSystemIdDecoded
        let fileSystemAccessModeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.FileSystemAccessMode.self, forKey: .fileSystemAccessMode)
        fileSystemAccessMode = fileSystemAccessModeDecoded
        let fileSystemTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.FileSystemType.self, forKey: .fileSystemType)
        fileSystemType = fileSystemTypeDecoded
        let directoryPathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .directoryPath)
        directoryPath = directoryPathDecoded
    }
}
