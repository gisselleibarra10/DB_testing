// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.RStudioServerProAppSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessStatus = "AccessStatus"
        case userGroup = "UserGroup"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessStatus = self.accessStatus {
            try encodeContainer.encode(accessStatus.rawValue, forKey: .accessStatus)
        }
        if let userGroup = self.userGroup {
            try encodeContainer.encode(userGroup.rawValue, forKey: .userGroup)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessStatusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.RStudioServerProAccessStatus.self, forKey: .accessStatus)
        accessStatus = accessStatusDecoded
        let userGroupDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.RStudioServerProUserGroup.self, forKey: .userGroup)
        userGroup = userGroupDecoded
    }
}
