// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.StudioLifecycleConfigDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case lastModifiedTime = "LastModifiedTime"
        case studioLifecycleConfigAppType = "StudioLifecycleConfigAppType"
        case studioLifecycleConfigArn = "StudioLifecycleConfigArn"
        case studioLifecycleConfigName = "StudioLifecycleConfigName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let lastModifiedTime = self.lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
        if let studioLifecycleConfigAppType = self.studioLifecycleConfigAppType {
            try encodeContainer.encode(studioLifecycleConfigAppType.rawValue, forKey: .studioLifecycleConfigAppType)
        }
        if let studioLifecycleConfigArn = self.studioLifecycleConfigArn {
            try encodeContainer.encode(studioLifecycleConfigArn, forKey: .studioLifecycleConfigArn)
        }
        if let studioLifecycleConfigName = self.studioLifecycleConfigName {
            try encodeContainer.encode(studioLifecycleConfigName, forKey: .studioLifecycleConfigName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let studioLifecycleConfigArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioLifecycleConfigArn)
        studioLifecycleConfigArn = studioLifecycleConfigArnDecoded
        let studioLifecycleConfigNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioLifecycleConfigName)
        studioLifecycleConfigName = studioLifecycleConfigNameDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let studioLifecycleConfigAppTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.StudioLifecycleConfigAppType.self, forKey: .studioLifecycleConfigAppType)
        studioLifecycleConfigAppType = studioLifecycleConfigAppTypeDecoded
    }
}
