// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeStudioLifecycleConfigOutputResponseBody: Swift.Equatable {
    let studioLifecycleConfigArn: Swift.String?
    let studioLifecycleConfigName: Swift.String?
    let creationTime: ClientRuntime.Date?
    let lastModifiedTime: ClientRuntime.Date?
    let studioLifecycleConfigContent: Swift.String?
    let studioLifecycleConfigAppType: SageMakerClientTypes.StudioLifecycleConfigAppType?
}

extension DescribeStudioLifecycleConfigOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case lastModifiedTime = "LastModifiedTime"
        case studioLifecycleConfigAppType = "StudioLifecycleConfigAppType"
        case studioLifecycleConfigArn = "StudioLifecycleConfigArn"
        case studioLifecycleConfigContent = "StudioLifecycleConfigContent"
        case studioLifecycleConfigName = "StudioLifecycleConfigName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let studioLifecycleConfigArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioLifecycleConfigArn)
        studioLifecycleConfigArn = studioLifecycleConfigArnDecoded
        let studioLifecycleConfigNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioLifecycleConfigName)
        studioLifecycleConfigName = studioLifecycleConfigNameDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let studioLifecycleConfigContentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioLifecycleConfigContent)
        studioLifecycleConfigContent = studioLifecycleConfigContentDecoded
        let studioLifecycleConfigAppTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.StudioLifecycleConfigAppType.self, forKey: .studioLifecycleConfigAppType)
        studioLifecycleConfigAppType = studioLifecycleConfigAppTypeDecoded
    }
}
