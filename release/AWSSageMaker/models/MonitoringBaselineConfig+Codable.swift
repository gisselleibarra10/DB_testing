// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.MonitoringBaselineConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case baseliningJobName = "BaseliningJobName"
        case constraintsResource = "ConstraintsResource"
        case statisticsResource = "StatisticsResource"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let baseliningJobName = self.baseliningJobName {
            try encodeContainer.encode(baseliningJobName, forKey: .baseliningJobName)
        }
        if let constraintsResource = self.constraintsResource {
            try encodeContainer.encode(constraintsResource, forKey: .constraintsResource)
        }
        if let statisticsResource = self.statisticsResource {
            try encodeContainer.encode(statisticsResource, forKey: .statisticsResource)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let baseliningJobNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .baseliningJobName)
        baseliningJobName = baseliningJobNameDecoded
        let constraintsResourceDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MonitoringConstraintsResource.self, forKey: .constraintsResource)
        constraintsResource = constraintsResourceDecoded
        let statisticsResourceDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MonitoringStatisticsResource.self, forKey: .statisticsResource)
        statisticsResource = statisticsResourceDecoded
    }
}
