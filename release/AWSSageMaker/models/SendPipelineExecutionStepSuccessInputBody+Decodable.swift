// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendPipelineExecutionStepSuccessInputBody: Swift.Equatable {
    let callbackToken: Swift.String?
    let outputParameters: [SageMakerClientTypes.OutputParameter]?
    let clientRequestToken: Swift.String?
}

extension SendPipelineExecutionStepSuccessInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case callbackToken = "CallbackToken"
        case clientRequestToken = "ClientRequestToken"
        case outputParameters = "OutputParameters"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let callbackTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .callbackToken)
        callbackToken = callbackTokenDecoded
        let outputParametersContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.OutputParameter?].self, forKey: .outputParameters)
        var outputParametersDecoded0:[SageMakerClientTypes.OutputParameter]? = nil
        if let outputParametersContainer = outputParametersContainer {
            outputParametersDecoded0 = [SageMakerClientTypes.OutputParameter]()
            for structure0 in outputParametersContainer {
                if let structure0 = structure0 {
                    outputParametersDecoded0?.append(structure0)
                }
            }
        }
        outputParameters = outputParametersDecoded0
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
