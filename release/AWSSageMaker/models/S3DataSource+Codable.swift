// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.S3DataSource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributeNames = "AttributeNames"
        case instanceGroupNames = "InstanceGroupNames"
        case s3DataDistributionType = "S3DataDistributionType"
        case s3DataType = "S3DataType"
        case s3Uri = "S3Uri"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributeNames = attributeNames {
            var attributeNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .attributeNames)
            for attributenames0 in attributeNames {
                try attributeNamesContainer.encode(attributenames0)
            }
        }
        if let instanceGroupNames = instanceGroupNames {
            var instanceGroupNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .instanceGroupNames)
            for instancegroupnames0 in instanceGroupNames {
                try instanceGroupNamesContainer.encode(instancegroupnames0)
            }
        }
        if let s3DataDistributionType = self.s3DataDistributionType {
            try encodeContainer.encode(s3DataDistributionType.rawValue, forKey: .s3DataDistributionType)
        }
        if let s3DataType = self.s3DataType {
            try encodeContainer.encode(s3DataType.rawValue, forKey: .s3DataType)
        }
        if let s3Uri = self.s3Uri {
            try encodeContainer.encode(s3Uri, forKey: .s3Uri)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3DataTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.S3DataType.self, forKey: .s3DataType)
        s3DataType = s3DataTypeDecoded
        let s3UriDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .s3Uri)
        s3Uri = s3UriDecoded
        let s3DataDistributionTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.S3DataDistribution.self, forKey: .s3DataDistributionType)
        s3DataDistributionType = s3DataDistributionTypeDecoded
        let attributeNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .attributeNames)
        var attributeNamesDecoded0:[Swift.String]? = nil
        if let attributeNamesContainer = attributeNamesContainer {
            attributeNamesDecoded0 = [Swift.String]()
            for string0 in attributeNamesContainer {
                if let string0 = string0 {
                    attributeNamesDecoded0?.append(string0)
                }
            }
        }
        attributeNames = attributeNamesDecoded0
        let instanceGroupNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .instanceGroupNames)
        var instanceGroupNamesDecoded0:[Swift.String]? = nil
        if let instanceGroupNamesContainer = instanceGroupNamesContainer {
            instanceGroupNamesDecoded0 = [Swift.String]()
            for string0 in instanceGroupNamesContainer {
                if let string0 = string0 {
                    instanceGroupNamesDecoded0?.append(string0)
                }
            }
        }
        instanceGroupNames = instanceGroupNamesDecoded0
    }
}
