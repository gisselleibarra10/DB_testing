// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes {
    /// A versioned model that can be deployed for SageMaker inference.
    public struct ModelPackage: Swift.Equatable {
        /// An array of additional Inference Specification objects.
        public var additionalInferenceSpecifications: [SageMakerClientTypes.AdditionalInferenceSpecificationDefinition]?
        /// A description provided when the model approval is set.
        public var approvalDescription: Swift.String?
        /// Whether the model package is to be certified to be listed on Amazon Web Services Marketplace. For information about listing model packages on Amazon Web Services Marketplace, see [List Your Algorithm or Model Package on Amazon Web Services Marketplace](https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-mkt-list.html).
        public var certifyForMarketplace: Swift.Bool
        /// Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.
        public var createdBy: SageMakerClientTypes.UserContext?
        /// The time that the model package was created.
        public var creationTime: ClientRuntime.Date?
        /// The metadata properties for the model package.
        public var customerMetadataProperties: [Swift.String:Swift.String]?
        /// The machine learning domain of your model package and its components. Common machine learning domains include computer vision and natural language processing.
        public var domain: Swift.String?
        /// Represents the drift check baselines that can be used when the model monitor is set using the model package.
        public var driftCheckBaselines: SageMakerClientTypes.DriftCheckBaselines?
        /// Defines how to perform inference generation after a training job is run.
        public var inferenceSpecification: SageMakerClientTypes.InferenceSpecification?
        /// Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.
        public var lastModifiedBy: SageMakerClientTypes.UserContext?
        /// The last time the model package was modified.
        public var lastModifiedTime: ClientRuntime.Date?
        /// Metadata properties of the tracking entity, trial, or trial component.
        public var metadataProperties: SageMakerClientTypes.MetadataProperties?
        /// The approval status of the model. This can be one of the following values.
        ///
        /// * APPROVED - The model is approved
        ///
        /// * REJECTED - The model is rejected.
        ///
        /// * PENDING_MANUAL_APPROVAL - The model is waiting for manual approval.
        public var modelApprovalStatus: SageMakerClientTypes.ModelApprovalStatus?
        /// Metrics for the model.
        public var modelMetrics: SageMakerClientTypes.ModelMetrics?
        /// The Amazon Resource Name (ARN) of the model package.
        public var modelPackageArn: Swift.String?
        /// The description of the model package.
        public var modelPackageDescription: Swift.String?
        /// The model group to which the model belongs.
        public var modelPackageGroupName: Swift.String?
        /// The name of the model.
        public var modelPackageName: Swift.String?
        /// The status of the model package. This can be one of the following values.
        ///
        /// * PENDING - The model package is pending being created.
        ///
        /// * IN_PROGRESS - The model package is in the process of being created.
        ///
        /// * COMPLETED - The model package was successfully created.
        ///
        /// * FAILED - The model package failed.
        ///
        /// * DELETING - The model package is in the process of being deleted.
        public var modelPackageStatus: SageMakerClientTypes.ModelPackageStatus?
        /// Specifies the validation and image scan statuses of the model package.
        public var modelPackageStatusDetails: SageMakerClientTypes.ModelPackageStatusDetails?
        /// The version number of a versioned model.
        public var modelPackageVersion: Swift.Int?
        /// The Amazon Simple Storage Service path where the sample payload are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
        public var samplePayloadUrl: Swift.String?
        /// A list of algorithms that were used to create a model package.
        public var sourceAlgorithmSpecification: SageMakerClientTypes.SourceAlgorithmSpecification?
        /// A list of the tags associated with the model package. For more information, see [Tagging Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the Amazon Web Services General Reference Guide.
        public var tags: [SageMakerClientTypes.Tag]?
        /// The machine learning task your model package accomplishes. Common machine learning tasks include object detection and image classification.
        public var task: Swift.String?
        /// Specifies batch transform jobs that SageMaker runs to validate your model package.
        public var validationSpecification: SageMakerClientTypes.ModelPackageValidationSpecification?

        public init (
            additionalInferenceSpecifications: [SageMakerClientTypes.AdditionalInferenceSpecificationDefinition]? = nil,
            approvalDescription: Swift.String? = nil,
            certifyForMarketplace: Swift.Bool = false,
            createdBy: SageMakerClientTypes.UserContext? = nil,
            creationTime: ClientRuntime.Date? = nil,
            customerMetadataProperties: [Swift.String:Swift.String]? = nil,
            domain: Swift.String? = nil,
            driftCheckBaselines: SageMakerClientTypes.DriftCheckBaselines? = nil,
            inferenceSpecification: SageMakerClientTypes.InferenceSpecification? = nil,
            lastModifiedBy: SageMakerClientTypes.UserContext? = nil,
            lastModifiedTime: ClientRuntime.Date? = nil,
            metadataProperties: SageMakerClientTypes.MetadataProperties? = nil,
            modelApprovalStatus: SageMakerClientTypes.ModelApprovalStatus? = nil,
            modelMetrics: SageMakerClientTypes.ModelMetrics? = nil,
            modelPackageArn: Swift.String? = nil,
            modelPackageDescription: Swift.String? = nil,
            modelPackageGroupName: Swift.String? = nil,
            modelPackageName: Swift.String? = nil,
            modelPackageStatus: SageMakerClientTypes.ModelPackageStatus? = nil,
            modelPackageStatusDetails: SageMakerClientTypes.ModelPackageStatusDetails? = nil,
            modelPackageVersion: Swift.Int? = nil,
            samplePayloadUrl: Swift.String? = nil,
            sourceAlgorithmSpecification: SageMakerClientTypes.SourceAlgorithmSpecification? = nil,
            tags: [SageMakerClientTypes.Tag]? = nil,
            task: Swift.String? = nil,
            validationSpecification: SageMakerClientTypes.ModelPackageValidationSpecification? = nil
        )
        {
            self.additionalInferenceSpecifications = additionalInferenceSpecifications
            self.approvalDescription = approvalDescription
            self.certifyForMarketplace = certifyForMarketplace
            self.createdBy = createdBy
            self.creationTime = creationTime
            self.customerMetadataProperties = customerMetadataProperties
            self.domain = domain
            self.driftCheckBaselines = driftCheckBaselines
            self.inferenceSpecification = inferenceSpecification
            self.lastModifiedBy = lastModifiedBy
            self.lastModifiedTime = lastModifiedTime
            self.metadataProperties = metadataProperties
            self.modelApprovalStatus = modelApprovalStatus
            self.modelMetrics = modelMetrics
            self.modelPackageArn = modelPackageArn
            self.modelPackageDescription = modelPackageDescription
            self.modelPackageGroupName = modelPackageGroupName
            self.modelPackageName = modelPackageName
            self.modelPackageStatus = modelPackageStatus
            self.modelPackageStatusDetails = modelPackageStatusDetails
            self.modelPackageVersion = modelPackageVersion
            self.samplePayloadUrl = samplePayloadUrl
            self.sourceAlgorithmSpecification = sourceAlgorithmSpecification
            self.tags = tags
            self.task = task
            self.validationSpecification = validationSpecification
        }
    }

}
