// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.ModelLatencyThreshold: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case percentile = "Percentile"
        case valueInMilliseconds = "ValueInMilliseconds"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let percentile = self.percentile {
            try encodeContainer.encode(percentile, forKey: .percentile)
        }
        if valueInMilliseconds != 0 {
            try encodeContainer.encode(valueInMilliseconds, forKey: .valueInMilliseconds)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let percentileDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .percentile)
        percentile = percentileDecoded
        let valueInMillisecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .valueInMilliseconds) ?? 0
        valueInMilliseconds = valueInMillisecondsDecoded
    }
}
