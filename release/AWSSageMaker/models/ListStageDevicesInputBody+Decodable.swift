// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStageDevicesInputBody: Swift.Equatable {
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
    let edgeDeploymentPlanName: Swift.String?
    let excludeDevicesDeployedInOtherStage: Swift.Bool
    let stageName: Swift.String?
}

extension ListStageDevicesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case edgeDeploymentPlanName = "EdgeDeploymentPlanName"
        case excludeDevicesDeployedInOtherStage = "ExcludeDevicesDeployedInOtherStage"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case stageName = "StageName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let edgeDeploymentPlanNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .edgeDeploymentPlanName)
        edgeDeploymentPlanName = edgeDeploymentPlanNameDecoded
        let excludeDevicesDeployedInOtherStageDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .excludeDevicesDeployedInOtherStage) ?? false
        excludeDevicesDeployedInOtherStage = excludeDevicesDeployedInOtherStageDecoded
        let stageNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stageName)
        stageName = stageNameDecoded
    }
}
