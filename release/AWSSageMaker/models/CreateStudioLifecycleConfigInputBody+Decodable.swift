// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateStudioLifecycleConfigInputBody: Swift.Equatable {
    let studioLifecycleConfigName: Swift.String?
    let studioLifecycleConfigContent: Swift.String?
    let studioLifecycleConfigAppType: SageMakerClientTypes.StudioLifecycleConfigAppType?
    let tags: [SageMakerClientTypes.Tag]?
}

extension CreateStudioLifecycleConfigInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case studioLifecycleConfigAppType = "StudioLifecycleConfigAppType"
        case studioLifecycleConfigContent = "StudioLifecycleConfigContent"
        case studioLifecycleConfigName = "StudioLifecycleConfigName"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let studioLifecycleConfigNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioLifecycleConfigName)
        studioLifecycleConfigName = studioLifecycleConfigNameDecoded
        let studioLifecycleConfigContentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioLifecycleConfigContent)
        studioLifecycleConfigContent = studioLifecycleConfigContentDecoded
        let studioLifecycleConfigAppTypeDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.StudioLifecycleConfigAppType.self, forKey: .studioLifecycleConfigAppType)
        studioLifecycleConfigAppType = studioLifecycleConfigAppTypeDecoded
        let tagsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[SageMakerClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [SageMakerClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
