// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    /// Configuration to control how SageMaker captures inference data.
    public struct DataCaptureConfig: Swift.Equatable {
        /// Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data.
        public var captureContentTypeHeader: SageMakerClientTypes.CaptureContentTypeHeader?
        /// Specifies data Model Monitor will capture. You can configure whether to collect only input, only output, or both
        /// This member is required.
        public var captureOptions: [SageMakerClientTypes.CaptureOption]?
        /// The Amazon S3 location used to capture the data.
        /// This member is required.
        public var destinationS3Uri: Swift.String?
        /// Whether data capture should be enabled or disabled (defaults to enabled).
        public var enableCapture: Swift.Bool
        /// The percentage of requests SageMaker will capture. A lower value is recommended for Endpoints with high traffic.
        /// This member is required.
        public var initialSamplingPercentage: Swift.Int?
        /// The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service key that SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint. The KmsKeyId can be any of the following formats:
        ///
        /// * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab
        ///
        /// * Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
        ///
        /// * Alias name: alias/ExampleAlias
        ///
        /// * Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias
        public var kmsKeyId: Swift.String?

        public init (
            captureContentTypeHeader: SageMakerClientTypes.CaptureContentTypeHeader? = nil,
            captureOptions: [SageMakerClientTypes.CaptureOption]? = nil,
            destinationS3Uri: Swift.String? = nil,
            enableCapture: Swift.Bool = false,
            initialSamplingPercentage: Swift.Int? = nil,
            kmsKeyId: Swift.String? = nil
        )
        {
            self.captureContentTypeHeader = captureContentTypeHeader
            self.captureOptions = captureOptions
            self.destinationS3Uri = destinationS3Uri
            self.enableCapture = enableCapture
            self.initialSamplingPercentage = initialSamplingPercentage
            self.kmsKeyId = kmsKeyId
        }
    }

}
