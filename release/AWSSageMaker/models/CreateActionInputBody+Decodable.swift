// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateActionInputBody: Swift.Equatable {
    let actionName: Swift.String?
    let source: SageMakerClientTypes.ActionSource?
    let actionType: Swift.String?
    let description: Swift.String?
    let status: SageMakerClientTypes.ActionStatus?
    let properties: [Swift.String:Swift.String]?
    let metadataProperties: SageMakerClientTypes.MetadataProperties?
    let tags: [SageMakerClientTypes.Tag]?
}

extension CreateActionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionName = "ActionName"
        case actionType = "ActionType"
        case description = "Description"
        case metadataProperties = "MetadataProperties"
        case properties = "Properties"
        case source = "Source"
        case status = "Status"
        case tags = "Tags"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionName)
        actionName = actionNameDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ActionSource.self, forKey: .source)
        source = sourceDecoded
        let actionTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionType)
        actionType = actionTypeDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ActionStatus.self, forKey: .status)
        status = statusDecoded
        let propertiesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .properties)
        var propertiesDecoded0: [Swift.String:Swift.String]? = nil
        if let propertiesContainer = propertiesContainer {
            propertiesDecoded0 = [Swift.String:Swift.String]()
            for (key0, stringparametervalue0) in propertiesContainer {
                if let stringparametervalue0 = stringparametervalue0 {
                    propertiesDecoded0?[key0] = stringparametervalue0
                }
            }
        }
        properties = propertiesDecoded0
        let metadataPropertiesDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.MetadataProperties.self, forKey: .metadataProperties)
        metadataProperties = metadataPropertiesDecoded
        let tagsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[SageMakerClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [SageMakerClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
