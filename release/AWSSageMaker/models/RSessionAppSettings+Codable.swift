// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.RSessionAppSettings: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customImages = "CustomImages"
        case defaultResourceSpec = "DefaultResourceSpec"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customImages = customImages {
            var customImagesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .customImages)
            for customimages0 in customImages {
                try customImagesContainer.encode(customimages0)
            }
        }
        if let defaultResourceSpec = self.defaultResourceSpec {
            try encodeContainer.encode(defaultResourceSpec, forKey: .defaultResourceSpec)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let defaultResourceSpecDecoded = try containerValues.decodeIfPresent(SageMakerClientTypes.ResourceSpec.self, forKey: .defaultResourceSpec)
        defaultResourceSpec = defaultResourceSpecDecoded
        let customImagesContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.CustomImage?].self, forKey: .customImages)
        var customImagesDecoded0:[SageMakerClientTypes.CustomImage]? = nil
        if let customImagesContainer = customImagesContainer {
            customImagesDecoded0 = [SageMakerClientTypes.CustomImage]()
            for structure0 in customImagesContainer {
                if let structure0 = structure0 {
                    customImagesDecoded0?.append(structure0)
                }
            }
        }
        customImages = customImagesDecoded0
    }
}
