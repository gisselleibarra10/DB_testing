// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SageMakerClientTypes {
    /// A list of nested [Filter] objects. A resource must satisfy the conditions of all filters to be included in the results returned from the [Search] API. For example, to filter on a training job's InputDataConfig property with a specific channel name and S3Uri prefix, define the following filters:
    ///
    /// * '{Name:"InputDataConfig.ChannelName", "Operator":"Equals", "Value":"train"}',
    ///
    /// * '{Name:"InputDataConfig.DataSource.S3DataSource.S3Uri", "Operator":"Contains", "Value":"mybucket/catdata"}'
    public struct NestedFilters: Swift.Equatable {
        /// A list of filters. Each filter acts on a property. Filters must contain at least one Filters value. For example, a NestedFilters call might include a filter on the PropertyName parameter of the InputDataConfig property: InputDataConfig.DataSource.S3DataSource.S3Uri.
        /// This member is required.
        public var filters: [SageMakerClientTypes.Filter]?
        /// The name of the property to use in the nested filters. The value must match a listed property name, such as InputDataConfig.
        /// This member is required.
        public var nestedPropertyName: Swift.String?

        public init (
            filters: [SageMakerClientTypes.Filter]? = nil,
            nestedPropertyName: Swift.String? = nil
        )
        {
            self.filters = filters
            self.nestedPropertyName = nestedPropertyName
        }
    }

}
