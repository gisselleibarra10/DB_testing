// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SageMakerClientTypes.ModelClientConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case invocationsMaxRetries = "InvocationsMaxRetries"
        case invocationsTimeoutInSeconds = "InvocationsTimeoutInSeconds"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let invocationsMaxRetries = self.invocationsMaxRetries {
            try encodeContainer.encode(invocationsMaxRetries, forKey: .invocationsMaxRetries)
        }
        if let invocationsTimeoutInSeconds = self.invocationsTimeoutInSeconds {
            try encodeContainer.encode(invocationsTimeoutInSeconds, forKey: .invocationsTimeoutInSeconds)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let invocationsTimeoutInSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .invocationsTimeoutInSeconds)
        invocationsTimeoutInSeconds = invocationsTimeoutInSecondsDecoded
        let invocationsMaxRetriesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .invocationsMaxRetries)
        invocationsMaxRetries = invocationsMaxRetriesDecoded
    }
}
