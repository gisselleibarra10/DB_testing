// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImageVersionsOutputResponseBody: Swift.Equatable {
    let imageVersions: [SageMakerClientTypes.ImageVersion]?
    let nextToken: Swift.String?
}

extension ListImageVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case imageVersions = "ImageVersions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageVersionsContainer = try containerValues.decodeIfPresent([SageMakerClientTypes.ImageVersion?].self, forKey: .imageVersions)
        var imageVersionsDecoded0:[SageMakerClientTypes.ImageVersion]? = nil
        if let imageVersionsContainer = imageVersionsContainer {
            imageVersionsDecoded0 = [SageMakerClientTypes.ImageVersion]()
            for structure0 in imageVersionsContainer {
                if let structure0 = structure0 {
                    imageVersionsDecoded0?.append(structure0)
                }
            }
        }
        imageVersions = imageVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
