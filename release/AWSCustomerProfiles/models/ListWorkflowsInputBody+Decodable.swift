// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorkflowsInputBody: Swift.Equatable {
    let workflowType: CustomerProfilesClientTypes.WorkflowType?
    let status: CustomerProfilesClientTypes.Status?
    let queryStartDate: ClientRuntime.Date?
    let queryEndDate: ClientRuntime.Date?
}

extension ListWorkflowsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case queryEndDate = "QueryEndDate"
        case queryStartDate = "QueryStartDate"
        case status = "Status"
        case workflowType = "WorkflowType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workflowTypeDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.WorkflowType.self, forKey: .workflowType)
        workflowType = workflowTypeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.Status.self, forKey: .status)
        status = statusDecoded
        let queryStartDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .queryStartDate)
        queryStartDate = queryStartDateDecoded
        let queryEndDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .queryEndDate)
        queryEndDate = queryEndDateDecoded
    }
}
