// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetWorkflowOutputResponseBody: Swift.Equatable {
    let workflowId: Swift.String?
    let workflowType: CustomerProfilesClientTypes.WorkflowType?
    let status: CustomerProfilesClientTypes.Status?
    let errorDescription: Swift.String?
    let startDate: ClientRuntime.Date?
    let lastUpdatedAt: ClientRuntime.Date?
    let attributes: CustomerProfilesClientTypes.WorkflowAttributes?
    let metrics: CustomerProfilesClientTypes.WorkflowMetrics?
}

extension GetWorkflowOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributes = "Attributes"
        case errorDescription = "ErrorDescription"
        case lastUpdatedAt = "LastUpdatedAt"
        case metrics = "Metrics"
        case startDate = "StartDate"
        case status = "Status"
        case workflowId = "WorkflowId"
        case workflowType = "WorkflowType"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workflowIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .workflowId)
        workflowId = workflowIdDecoded
        let workflowTypeDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.WorkflowType.self, forKey: .workflowType)
        workflowType = workflowTypeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.Status.self, forKey: .status)
        status = statusDecoded
        let errorDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorDescription)
        errorDescription = errorDescriptionDecoded
        let startDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startDate)
        startDate = startDateDecoded
        let lastUpdatedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedAt)
        lastUpdatedAt = lastUpdatedAtDecoded
        let attributesDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.WorkflowAttributes.self, forKey: .attributes)
        attributes = attributesDecoded
        let metricsDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.WorkflowMetrics.self, forKey: .metrics)
        metrics = metricsDecoded
    }
}
