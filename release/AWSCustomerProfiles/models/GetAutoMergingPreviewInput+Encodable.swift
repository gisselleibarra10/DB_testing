// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetAutoMergingPreviewInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conflictResolution = "ConflictResolution"
        case consolidation = "Consolidation"
        case minAllowedConfidenceScoreForMerging = "MinAllowedConfidenceScoreForMerging"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let conflictResolution = self.conflictResolution {
            try encodeContainer.encode(conflictResolution, forKey: .conflictResolution)
        }
        if let consolidation = self.consolidation {
            try encodeContainer.encode(consolidation, forKey: .consolidation)
        }
        if let minAllowedConfidenceScoreForMerging = self.minAllowedConfidenceScoreForMerging {
            try encodeContainer.encode(minAllowedConfidenceScoreForMerging, forKey: .minAllowedConfidenceScoreForMerging)
        }
    }
}
