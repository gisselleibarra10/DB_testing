// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomerProfilesClientTypes {
    /// Information about the Identity Resolution Job.
    public struct IdentityResolutionJob: Swift.Equatable {
        /// The unique name of the domain.
        public var domainName: Swift.String?
        /// The S3 location where the Identity Resolution Job writes result files.
        public var exportingLocation: CustomerProfilesClientTypes.ExportingLocation?
        /// The timestamp of when the job was completed.
        public var jobEndTime: ClientRuntime.Date?
        /// The unique identifier of the Identity Resolution Job.
        public var jobId: Swift.String?
        /// The timestamp of when the job was started or will be started.
        public var jobStartTime: ClientRuntime.Date?
        /// Statistics about an Identity Resolution Job.
        public var jobStats: CustomerProfilesClientTypes.JobStats?
        /// The error messages that are generated when the Identity Resolution Job runs.
        public var message: Swift.String?
        /// The status of the Identity Resolution Job.
        ///
        /// * PENDING: The Identity Resolution Job is scheduled but has not started yet. If you turn off the Identity Resolution feature in your domain, jobs in the PENDING state are deleted.
        ///
        /// * PREPROCESSING: The Identity Resolution Job is loading your data.
        ///
        /// * FIND_MATCHING: The Identity Resolution Job is using the machine learning model to identify profiles that belong to the same matching group.
        ///
        /// * MERGING: The Identity Resolution Job is merging duplicate profiles.
        ///
        /// * COMPLETED: The Identity Resolution Job completed successfully.
        ///
        /// * PARTIAL_SUCCESS: There's a system error and not all of the data is merged. The Identity Resolution Job writes a message indicating the source of the problem.
        ///
        /// * FAILED: The Identity Resolution Job did not merge any data. It writes a message indicating the source of the problem.
        public var status: CustomerProfilesClientTypes.IdentityResolutionJobStatus?

        public init (
            domainName: Swift.String? = nil,
            exportingLocation: CustomerProfilesClientTypes.ExportingLocation? = nil,
            jobEndTime: ClientRuntime.Date? = nil,
            jobId: Swift.String? = nil,
            jobStartTime: ClientRuntime.Date? = nil,
            jobStats: CustomerProfilesClientTypes.JobStats? = nil,
            message: Swift.String? = nil,
            status: CustomerProfilesClientTypes.IdentityResolutionJobStatus? = nil
        )
        {
            self.domainName = domainName
            self.exportingLocation = exportingLocation
            self.jobEndTime = jobEndTime
            self.jobId = jobId
            self.jobStartTime = jobStartTime
            self.jobStats = jobStats
            self.message = message
            self.status = status
        }
    }

}
