// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomerProfilesClientTypes {
    /// Workflow step details for APPFLOW_INTEGRATION workflow.
    public struct AppflowIntegrationWorkflowStep: Swift.Equatable {
        /// End datetime of records pulled in batch during execution of workflow step for APPFLOW_INTEGRATION workflow.
        /// This member is required.
        public var batchRecordsEndTime: Swift.String?
        /// Start datetime of records pulled in batch during execution of workflow step for APPFLOW_INTEGRATION workflow.
        /// This member is required.
        public var batchRecordsStartTime: Swift.String?
        /// Creation timestamp of workflow step for APPFLOW_INTEGRATION workflow.
        /// This member is required.
        public var createdAt: ClientRuntime.Date?
        /// Message indicating execution of workflow step for APPFLOW_INTEGRATION workflow.
        /// This member is required.
        public var executionMessage: Swift.String?
        /// Name of the flow created during execution of workflow step. APPFLOW_INTEGRATION workflow type creates an appflow flow during workflow step execution on the customers behalf.
        /// This member is required.
        public var flowName: Swift.String?
        /// Last updated timestamp for workflow step for APPFLOW_INTEGRATION workflow.
        /// This member is required.
        public var lastUpdatedAt: ClientRuntime.Date?
        /// Total number of records processed during execution of workflow step for APPFLOW_INTEGRATION workflow.
        /// This member is required.
        public var recordsProcessed: Swift.Int
        /// Workflow step status for APPFLOW_INTEGRATION workflow.
        /// This member is required.
        public var status: CustomerProfilesClientTypes.Status?

        public init (
            batchRecordsEndTime: Swift.String? = nil,
            batchRecordsStartTime: Swift.String? = nil,
            createdAt: ClientRuntime.Date? = nil,
            executionMessage: Swift.String? = nil,
            flowName: Swift.String? = nil,
            lastUpdatedAt: ClientRuntime.Date? = nil,
            recordsProcessed: Swift.Int = 0,
            status: CustomerProfilesClientTypes.Status? = nil
        )
        {
            self.batchRecordsEndTime = batchRecordsEndTime
            self.batchRecordsStartTime = batchRecordsStartTime
            self.createdAt = createdAt
            self.executionMessage = executionMessage
            self.flowName = flowName
            self.lastUpdatedAt = lastUpdatedAt
            self.recordsProcessed = recordsProcessed
            self.status = status
        }
    }

}
