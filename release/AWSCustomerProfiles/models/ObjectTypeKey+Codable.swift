// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomerProfilesClientTypes.ObjectTypeKey: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fieldNames = "FieldNames"
        case standardIdentifiers = "StandardIdentifiers"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fieldNames = fieldNames {
            var fieldNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .fieldNames)
            for fieldnamelist0 in fieldNames {
                try fieldNamesContainer.encode(fieldnamelist0)
            }
        }
        if let standardIdentifiers = standardIdentifiers {
            var standardIdentifiersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .standardIdentifiers)
            for standardidentifierlist0 in standardIdentifiers {
                try standardIdentifiersContainer.encode(standardidentifierlist0.rawValue)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let standardIdentifiersContainer = try containerValues.decodeIfPresent([CustomerProfilesClientTypes.StandardIdentifier?].self, forKey: .standardIdentifiers)
        var standardIdentifiersDecoded0:[CustomerProfilesClientTypes.StandardIdentifier]? = nil
        if let standardIdentifiersContainer = standardIdentifiersContainer {
            standardIdentifiersDecoded0 = [CustomerProfilesClientTypes.StandardIdentifier]()
            for string0 in standardIdentifiersContainer {
                if let string0 = string0 {
                    standardIdentifiersDecoded0?.append(string0)
                }
            }
        }
        standardIdentifiers = standardIdentifiersDecoded0
        let fieldNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .fieldNames)
        var fieldNamesDecoded0:[Swift.String]? = nil
        if let fieldNamesContainer = fieldNamesContainer {
            fieldNamesDecoded0 = [Swift.String]()
            for string0 in fieldNamesContainer {
                if let string0 = string0 {
                    fieldNamesDecoded0?.append(string0)
                }
            }
        }
        fieldNames = fieldNamesDecoded0
    }
}
