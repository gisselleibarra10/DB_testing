// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct MergeProfilesInputBody: Swift.Equatable {
    let mainProfileId: Swift.String?
    let profileIdsToBeMerged: [Swift.String]?
    let fieldSourceProfileIds: CustomerProfilesClientTypes.FieldSourceProfileIds?
}

extension MergeProfilesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fieldSourceProfileIds = "FieldSourceProfileIds"
        case mainProfileId = "MainProfileId"
        case profileIdsToBeMerged = "ProfileIdsToBeMerged"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mainProfileIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .mainProfileId)
        mainProfileId = mainProfileIdDecoded
        let profileIdsToBeMergedContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .profileIdsToBeMerged)
        var profileIdsToBeMergedDecoded0:[Swift.String]? = nil
        if let profileIdsToBeMergedContainer = profileIdsToBeMergedContainer {
            profileIdsToBeMergedDecoded0 = [Swift.String]()
            for string0 in profileIdsToBeMergedContainer {
                if let string0 = string0 {
                    profileIdsToBeMergedDecoded0?.append(string0)
                }
            }
        }
        profileIdsToBeMerged = profileIdsToBeMergedDecoded0
        let fieldSourceProfileIdsDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.FieldSourceProfileIds.self, forKey: .fieldSourceProfileIds)
        fieldSourceProfileIds = fieldSourceProfileIdsDecoded
    }
}
