// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetProfileObjectTypeTemplateOutputResponseBody: Swift.Equatable {
    let templateId: Swift.String?
    let sourceName: Swift.String?
    let sourceObject: Swift.String?
    let allowProfileCreation: Swift.Bool
    let sourceLastUpdatedTimestampFormat: Swift.String?
    let fields: [Swift.String:CustomerProfilesClientTypes.ObjectTypeField]?
    let keys: [Swift.String:[CustomerProfilesClientTypes.ObjectTypeKey]]?
}

extension GetProfileObjectTypeTemplateOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allowProfileCreation = "AllowProfileCreation"
        case fields = "Fields"
        case keys = "Keys"
        case sourceLastUpdatedTimestampFormat = "SourceLastUpdatedTimestampFormat"
        case sourceName = "SourceName"
        case sourceObject = "SourceObject"
        case templateId = "TemplateId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let templateIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .templateId)
        templateId = templateIdDecoded
        let sourceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceName)
        sourceName = sourceNameDecoded
        let sourceObjectDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceObject)
        sourceObject = sourceObjectDecoded
        let allowProfileCreationDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .allowProfileCreation) ?? false
        allowProfileCreation = allowProfileCreationDecoded
        let sourceLastUpdatedTimestampFormatDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceLastUpdatedTimestampFormat)
        sourceLastUpdatedTimestampFormat = sourceLastUpdatedTimestampFormatDecoded
        let fieldsContainer = try containerValues.decodeIfPresent([Swift.String: CustomerProfilesClientTypes.ObjectTypeField?].self, forKey: .fields)
        var fieldsDecoded0: [Swift.String:CustomerProfilesClientTypes.ObjectTypeField]? = nil
        if let fieldsContainer = fieldsContainer {
            fieldsDecoded0 = [Swift.String:CustomerProfilesClientTypes.ObjectTypeField]()
            for (key0, objecttypefield0) in fieldsContainer {
                if let objecttypefield0 = objecttypefield0 {
                    fieldsDecoded0?[key0] = objecttypefield0
                }
            }
        }
        fields = fieldsDecoded0
        let keysContainer = try containerValues.decodeIfPresent([Swift.String: [CustomerProfilesClientTypes.ObjectTypeKey?]?].self, forKey: .keys)
        var keysDecoded0: [Swift.String:[CustomerProfilesClientTypes.ObjectTypeKey]]? = nil
        if let keysContainer = keysContainer {
            keysDecoded0 = [Swift.String:[CustomerProfilesClientTypes.ObjectTypeKey]]()
            for (key0, objecttypekeylist0) in keysContainer {
                var objecttypekeylist0Decoded0: [CustomerProfilesClientTypes.ObjectTypeKey]? = nil
                if let objecttypekeylist0 = objecttypekeylist0 {
                    objecttypekeylist0Decoded0 = [CustomerProfilesClientTypes.ObjectTypeKey]()
                    for structure1 in objecttypekeylist0 {
                        if let structure1 = structure1 {
                            objecttypekeylist0Decoded0?.append(structure1)
                        }
                    }
                }
                keysDecoded0?[key0] = objecttypekeylist0Decoded0
            }
        }
        keys = keysDecoded0
    }
}
