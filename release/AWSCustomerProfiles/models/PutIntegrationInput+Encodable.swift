// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutIntegrationInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case flowDefinition = "FlowDefinition"
        case objectTypeName = "ObjectTypeName"
        case objectTypeNames = "ObjectTypeNames"
        case tags = "Tags"
        case uri = "Uri"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let flowDefinition = self.flowDefinition {
            try encodeContainer.encode(flowDefinition, forKey: .flowDefinition)
        }
        if let objectTypeName = self.objectTypeName {
            try encodeContainer.encode(objectTypeName, forKey: .objectTypeName)
        }
        if let objectTypeNames = objectTypeNames {
            var objectTypeNamesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .objectTypeNames)
            for (dictKey0, objecttypenames0) in objectTypeNames {
                try objectTypeNamesContainer.encode(objecttypenames0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .tags)
            for (dictKey0, tagmap0) in tags {
                try tagsContainer.encode(tagmap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let uri = self.uri {
            try encodeContainer.encode(uri, forKey: .uri)
        }
    }
}
