// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIdentityResolutionJobsOutputResponseBody: Swift.Equatable {
    let identityResolutionJobsList: [CustomerProfilesClientTypes.IdentityResolutionJob]?
    let nextToken: Swift.String?
}

extension ListIdentityResolutionJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identityResolutionJobsList = "IdentityResolutionJobsList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityResolutionJobsListContainer = try containerValues.decodeIfPresent([CustomerProfilesClientTypes.IdentityResolutionJob?].self, forKey: .identityResolutionJobsList)
        var identityResolutionJobsListDecoded0:[CustomerProfilesClientTypes.IdentityResolutionJob]? = nil
        if let identityResolutionJobsListContainer = identityResolutionJobsListContainer {
            identityResolutionJobsListDecoded0 = [CustomerProfilesClientTypes.IdentityResolutionJob]()
            for structure0 in identityResolutionJobsListContainer {
                if let structure0 = structure0 {
                    identityResolutionJobsListDecoded0?.append(structure0)
                }
            }
        }
        identityResolutionJobsList = identityResolutionJobsListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
