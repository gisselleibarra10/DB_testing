// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAutoMergingPreviewInputBody: Swift.Equatable {
    let consolidation: CustomerProfilesClientTypes.Consolidation?
    let conflictResolution: CustomerProfilesClientTypes.ConflictResolution?
    let minAllowedConfidenceScoreForMerging: Swift.Double?
}

extension GetAutoMergingPreviewInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conflictResolution = "ConflictResolution"
        case consolidation = "Consolidation"
        case minAllowedConfidenceScoreForMerging = "MinAllowedConfidenceScoreForMerging"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let consolidationDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.Consolidation.self, forKey: .consolidation)
        consolidation = consolidationDecoded
        let conflictResolutionDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.ConflictResolution.self, forKey: .conflictResolution)
        conflictResolution = conflictResolutionDecoded
        let minAllowedConfidenceScoreForMergingDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .minAllowedConfidenceScoreForMerging)
        minAllowedConfidenceScoreForMerging = minAllowedConfidenceScoreForMergingDecoded
    }
}
