// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension CustomerProfilesClientTypes {
    public enum StandardIdentifier: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case asset
        case `case`
        case lookupOnly
        case newOnly
        case order
        case profile
        case secondary
        case unique
        case sdkUnknown(Swift.String)

        public static var allCases: [StandardIdentifier] {
            return [
                .asset,
                .case,
                .lookupOnly,
                .newOnly,
                .order,
                .profile,
                .secondary,
                .unique,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .asset: return "ASSET"
            case .case: return "CASE"
            case .lookupOnly: return "LOOKUP_ONLY"
            case .newOnly: return "NEW_ONLY"
            case .order: return "ORDER"
            case .profile: return "PROFILE"
            case .secondary: return "SECONDARY"
            case .unique: return "UNIQUE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = StandardIdentifier(rawValue: rawValue) ?? StandardIdentifier.sdkUnknown(rawValue)
        }
    }
}
