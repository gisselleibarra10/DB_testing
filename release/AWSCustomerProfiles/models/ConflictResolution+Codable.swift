// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomerProfilesClientTypes.ConflictResolution: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conflictResolvingModel = "ConflictResolvingModel"
        case sourceName = "SourceName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let conflictResolvingModel = self.conflictResolvingModel {
            try encodeContainer.encode(conflictResolvingModel.rawValue, forKey: .conflictResolvingModel)
        }
        if let sourceName = self.sourceName {
            try encodeContainer.encode(sourceName, forKey: .sourceName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conflictResolvingModelDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.ConflictResolvingModel.self, forKey: .conflictResolvingModel)
        conflictResolvingModel = conflictResolvingModelDecoded
        let sourceNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceName)
        sourceName = sourceNameDecoded
    }
}
