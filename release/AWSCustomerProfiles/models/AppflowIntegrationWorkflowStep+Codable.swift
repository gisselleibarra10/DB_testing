// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomerProfilesClientTypes.AppflowIntegrationWorkflowStep: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case batchRecordsEndTime = "BatchRecordsEndTime"
        case batchRecordsStartTime = "BatchRecordsStartTime"
        case createdAt = "CreatedAt"
        case executionMessage = "ExecutionMessage"
        case flowName = "FlowName"
        case lastUpdatedAt = "LastUpdatedAt"
        case recordsProcessed = "RecordsProcessed"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let batchRecordsEndTime = self.batchRecordsEndTime {
            try encodeContainer.encode(batchRecordsEndTime, forKey: .batchRecordsEndTime)
        }
        if let batchRecordsStartTime = self.batchRecordsStartTime {
            try encodeContainer.encode(batchRecordsStartTime, forKey: .batchRecordsStartTime)
        }
        if let createdAt = self.createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let executionMessage = self.executionMessage {
            try encodeContainer.encode(executionMessage, forKey: .executionMessage)
        }
        if let flowName = self.flowName {
            try encodeContainer.encode(flowName, forKey: .flowName)
        }
        if let lastUpdatedAt = self.lastUpdatedAt {
            try encodeContainer.encode(lastUpdatedAt.timeIntervalSince1970, forKey: .lastUpdatedAt)
        }
        if recordsProcessed != 0 {
            try encodeContainer.encode(recordsProcessed, forKey: .recordsProcessed)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .flowName)
        flowName = flowNameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.Status.self, forKey: .status)
        status = statusDecoded
        let executionMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executionMessage)
        executionMessage = executionMessageDecoded
        let recordsProcessedDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .recordsProcessed) ?? 0
        recordsProcessed = recordsProcessedDecoded
        let batchRecordsStartTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .batchRecordsStartTime)
        batchRecordsStartTime = batchRecordsStartTimeDecoded
        let batchRecordsEndTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .batchRecordsEndTime)
        batchRecordsEndTime = batchRecordsEndTimeDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let lastUpdatedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedAt)
        lastUpdatedAt = lastUpdatedAtDecoded
    }
}
