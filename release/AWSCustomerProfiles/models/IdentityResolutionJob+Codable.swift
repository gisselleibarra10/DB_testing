// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomerProfilesClientTypes.IdentityResolutionJob: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainName = "DomainName"
        case exportingLocation = "ExportingLocation"
        case jobEndTime = "JobEndTime"
        case jobId = "JobId"
        case jobStartTime = "JobStartTime"
        case jobStats = "JobStats"
        case message = "Message"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let domainName = self.domainName {
            try encodeContainer.encode(domainName, forKey: .domainName)
        }
        if let exportingLocation = self.exportingLocation {
            try encodeContainer.encode(exportingLocation, forKey: .exportingLocation)
        }
        if let jobEndTime = self.jobEndTime {
            try encodeContainer.encode(jobEndTime.timeIntervalSince1970, forKey: .jobEndTime)
        }
        if let jobId = self.jobId {
            try encodeContainer.encode(jobId, forKey: .jobId)
        }
        if let jobStartTime = self.jobStartTime {
            try encodeContainer.encode(jobStartTime.timeIntervalSince1970, forKey: .jobStartTime)
        }
        if let jobStats = self.jobStats {
            try encodeContainer.encode(jobStats, forKey: .jobStats)
        }
        if let message = self.message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let jobIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobId)
        jobId = jobIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.IdentityResolutionJobStatus.self, forKey: .status)
        status = statusDecoded
        let jobStartTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .jobStartTime)
        jobStartTime = jobStartTimeDecoded
        let jobEndTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .jobEndTime)
        jobEndTime = jobEndTimeDecoded
        let jobStatsDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.JobStats.self, forKey: .jobStats)
        jobStats = jobStatsDecoded
        let exportingLocationDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.ExportingLocation.self, forKey: .exportingLocation)
        exportingLocation = exportingLocationDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
    }
}
