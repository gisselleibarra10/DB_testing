// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomerProfilesClientTypes.MatchingResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case autoMerging = "AutoMerging"
        case enabled = "Enabled"
        case exportingConfig = "ExportingConfig"
        case jobSchedule = "JobSchedule"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let autoMerging = self.autoMerging {
            try encodeContainer.encode(autoMerging, forKey: .autoMerging)
        }
        if let enabled = self.enabled {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if let exportingConfig = self.exportingConfig {
            try encodeContainer.encode(exportingConfig, forKey: .exportingConfig)
        }
        if let jobSchedule = self.jobSchedule {
            try encodeContainer.encode(jobSchedule, forKey: .jobSchedule)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let jobScheduleDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.JobSchedule.self, forKey: .jobSchedule)
        jobSchedule = jobScheduleDecoded
        let autoMergingDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.AutoMerging.self, forKey: .autoMerging)
        autoMerging = autoMergingDecoded
        let exportingConfigDecoded = try containerValues.decodeIfPresent(CustomerProfilesClientTypes.ExportingConfig.self, forKey: .exportingConfig)
        exportingConfig = exportingConfigDecoded
    }
}
