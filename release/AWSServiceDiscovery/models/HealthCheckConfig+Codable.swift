// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ServiceDiscoveryClientTypes.HealthCheckConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case failureThreshold = "FailureThreshold"
        case resourcePath = "ResourcePath"
        case type = "Type"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let failureThreshold = self.failureThreshold {
            try encodeContainer.encode(failureThreshold, forKey: .failureThreshold)
        }
        if let resourcePath = self.resourcePath {
            try encodeContainer.encode(resourcePath, forKey: .resourcePath)
        }
        if let type = self.type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(ServiceDiscoveryClientTypes.HealthCheckType.self, forKey: .type)
        type = typeDecoded
        let resourcePathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourcePath)
        resourcePath = resourcePathDecoded
        let failureThresholdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failureThreshold)
        failureThreshold = failureThresholdDecoded
    }
}
