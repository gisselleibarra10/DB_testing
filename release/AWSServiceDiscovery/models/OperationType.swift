// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension ServiceDiscoveryClientTypes {
    public enum OperationType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case createNamespace
        case deleteNamespace
        case deregisterInstance
        case registerInstance
        case updateNamespace
        case updateService
        case sdkUnknown(Swift.String)

        public static var allCases: [OperationType] {
            return [
                .createNamespace,
                .deleteNamespace,
                .deregisterInstance,
                .registerInstance,
                .updateNamespace,
                .updateService,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .createNamespace: return "CREATE_NAMESPACE"
            case .deleteNamespace: return "DELETE_NAMESPACE"
            case .deregisterInstance: return "DEREGISTER_INSTANCE"
            case .registerInstance: return "REGISTER_INSTANCE"
            case .updateNamespace: return "UPDATE_NAMESPACE"
            case .updateService: return "UPDATE_SERVICE"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = OperationType(rawValue: rawValue) ?? OperationType.sdkUnknown(rawValue)
        }
    }
}
