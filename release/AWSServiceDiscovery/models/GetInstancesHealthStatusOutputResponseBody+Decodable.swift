// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInstancesHealthStatusOutputResponseBody: Swift.Equatable {
    let status: [Swift.String:ServiceDiscoveryClientTypes.HealthStatus]?
    let nextToken: Swift.String?
}

extension GetInstancesHealthStatusOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusContainer = try containerValues.decodeIfPresent([Swift.String: ServiceDiscoveryClientTypes.HealthStatus?].self, forKey: .status)
        var statusDecoded0: [Swift.String:ServiceDiscoveryClientTypes.HealthStatus]? = nil
        if let statusContainer = statusContainer {
            statusDecoded0 = [Swift.String:ServiceDiscoveryClientTypes.HealthStatus]()
            for (key0, healthstatus0) in statusContainer {
                if let healthstatus0 = healthstatus0 {
                    statusDecoded0?[key0] = healthstatus0
                }
            }
        }
        status = statusDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
