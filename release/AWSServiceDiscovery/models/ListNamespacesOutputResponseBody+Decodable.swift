// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNamespacesOutputResponseBody: Swift.Equatable {
    let namespaces: [ServiceDiscoveryClientTypes.NamespaceSummary]?
    let nextToken: Swift.String?
}

extension ListNamespacesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case namespaces = "Namespaces"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let namespacesContainer = try containerValues.decodeIfPresent([ServiceDiscoveryClientTypes.NamespaceSummary?].self, forKey: .namespaces)
        var namespacesDecoded0:[ServiceDiscoveryClientTypes.NamespaceSummary]? = nil
        if let namespacesContainer = namespacesContainer {
            namespacesDecoded0 = [ServiceDiscoveryClientTypes.NamespaceSummary]()
            for structure0 in namespacesContainer {
                if let structure0 = structure0 {
                    namespacesDecoded0?.append(structure0)
                }
            }
        }
        namespaces = namespacesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
