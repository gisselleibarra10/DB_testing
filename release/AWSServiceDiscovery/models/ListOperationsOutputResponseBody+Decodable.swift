// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOperationsOutputResponseBody: Swift.Equatable {
    let operations: [ServiceDiscoveryClientTypes.OperationSummary]?
    let nextToken: Swift.String?
}

extension ListOperationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case operations = "Operations"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let operationsContainer = try containerValues.decodeIfPresent([ServiceDiscoveryClientTypes.OperationSummary?].self, forKey: .operations)
        var operationsDecoded0:[ServiceDiscoveryClientTypes.OperationSummary]? = nil
        if let operationsContainer = operationsContainer {
            operationsDecoded0 = [ServiceDiscoveryClientTypes.OperationSummary]()
            for structure0 in operationsContainer {
                if let structure0 = structure0 {
                    operationsDecoded0?.append(structure0)
                }
            }
        }
        operations = operationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
