// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DynamoDbClientTypes {
    /// The capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. ConsumedCapacity is only returned if the request asked for it. For more information, see [Provisioned Throughput](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html) in the Amazon DynamoDB Developer Guide.
    public struct ConsumedCapacity: Swift.Equatable {
        /// The total number of capacity units consumed by the operation.
        public var capacityUnits: Swift.Double?
        /// The amount of throughput consumed on each global index affected by the operation.
        public var globalSecondaryIndexes: [Swift.String:DynamoDbClientTypes.Capacity]?
        /// The amount of throughput consumed on each local index affected by the operation.
        public var localSecondaryIndexes: [Swift.String:DynamoDbClientTypes.Capacity]?
        /// The total number of read capacity units consumed by the operation.
        public var readCapacityUnits: Swift.Double?
        /// The amount of throughput consumed on the table affected by the operation.
        public var table: DynamoDbClientTypes.Capacity?
        /// The name of the table that was affected by the operation.
        public var tableName: Swift.String?
        /// The total number of write capacity units consumed by the operation.
        public var writeCapacityUnits: Swift.Double?

        public init (
            capacityUnits: Swift.Double? = nil,
            globalSecondaryIndexes: [Swift.String:DynamoDbClientTypes.Capacity]? = nil,
            localSecondaryIndexes: [Swift.String:DynamoDbClientTypes.Capacity]? = nil,
            readCapacityUnits: Swift.Double? = nil,
            table: DynamoDbClientTypes.Capacity? = nil,
            tableName: Swift.String? = nil,
            writeCapacityUnits: Swift.Double? = nil
        )
        {
            self.capacityUnits = capacityUnits
            self.globalSecondaryIndexes = globalSecondaryIndexes
            self.localSecondaryIndexes = localSecondaryIndexes
            self.readCapacityUnits = readCapacityUnits
            self.table = table
            self.tableName = tableName
            self.writeCapacityUnits = writeCapacityUnits
        }
    }

}
