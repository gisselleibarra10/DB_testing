// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetItemOutputResponseBody: Swift.Equatable {
    let item: [Swift.String:DynamoDbClientTypes.AttributeValue]?
    let consumedCapacity: DynamoDbClientTypes.ConsumedCapacity?
}

extension GetItemOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case consumedCapacity = "ConsumedCapacity"
        case item = "Item"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemContainer = try containerValues.decodeIfPresent([Swift.String: DynamoDbClientTypes.AttributeValue?].self, forKey: .item)
        var itemDecoded0: [Swift.String:DynamoDbClientTypes.AttributeValue]? = nil
        if let itemContainer = itemContainer {
            itemDecoded0 = [Swift.String:DynamoDbClientTypes.AttributeValue]()
            for (key0, attributevalue0) in itemContainer {
                if let attributevalue0 = attributevalue0 {
                    itemDecoded0?[key0] = attributevalue0
                }
            }
        }
        item = itemDecoded0
        let consumedCapacityDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.ConsumedCapacity.self, forKey: .consumedCapacity)
        consumedCapacity = consumedCapacityDecoded
    }
}
