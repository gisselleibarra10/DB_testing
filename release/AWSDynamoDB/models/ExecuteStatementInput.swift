// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ExecuteStatementInput: Swift.Equatable {
    /// The consistency of a read operation. If set to true, then a strongly consistent read is used; otherwise, an eventually consistent read is used.
    public var consistentRead: Swift.Bool?
    /// The maximum number of items to evaluate (not necessarily the number of matching items). If DynamoDB processes the number of items up to the limit while processing the results, it stops the operation and returns the matching values up to that point, along with a key in LastEvaluatedKey to apply in a subsequent operation so you can pick up where you left off. Also, if the processed dataset size exceeds 1 MB before DynamoDB reaches this limit, it stops the operation and returns the matching values up to the limit, and a key in LastEvaluatedKey to apply in a subsequent operation to continue the operation.
    public var limit: Swift.Int?
    /// Set this value to get remaining results, if NextToken was returned in the statement response.
    public var nextToken: Swift.String?
    /// The parameters for the PartiQL statement, if any.
    public var parameters: [DynamoDbClientTypes.AttributeValue]?
    /// Determines the level of detail about either provisioned or on-demand throughput consumption that is returned in the response:
    ///
    /// * INDEXES - The response includes the aggregate ConsumedCapacity for the operation, together with ConsumedCapacity for each table and secondary index that was accessed. Note that some operations, such as GetItem and BatchGetItem, do not access any indexes at all. In these cases, specifying INDEXES will only return ConsumedCapacity information for table(s).
    ///
    /// * TOTAL - The response includes only the aggregate ConsumedCapacity for the operation.
    ///
    /// * NONE - No ConsumedCapacity details are included in the response.
    public var returnConsumedCapacity: DynamoDbClientTypes.ReturnConsumedCapacity?
    /// The PartiQL statement representing the operation to run.
    /// This member is required.
    public var statement: Swift.String?

    public init (
        consistentRead: Swift.Bool? = nil,
        limit: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        parameters: [DynamoDbClientTypes.AttributeValue]? = nil,
        returnConsumedCapacity: DynamoDbClientTypes.ReturnConsumedCapacity? = nil,
        statement: Swift.String? = nil
    )
    {
        self.consistentRead = consistentRead
        self.limit = limit
        self.nextToken = nextToken
        self.parameters = parameters
        self.returnConsumedCapacity = returnConsumedCapacity
        self.statement = statement
    }
}
