// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Represents the input of an UpdateTable operation.
public struct UpdateTableInput: Swift.Equatable {
    /// An array of attributes that describe the key schema for the table and indexes. If you are adding a new global secondary index to the table, AttributeDefinitions must include the key element(s) of the new index.
    public var attributeDefinitions: [DynamoDbClientTypes.AttributeDefinition]?
    /// Controls how you are charged for read and write throughput and how you manage capacity. When switching from pay-per-request to provisioned capacity, initial provisioned capacity values must be set. The initial provisioned capacity values are estimated based on the consumed read and write capacity of your table and global secondary indexes over the past 30 minutes.
    ///
    /// * PROVISIONED - We recommend using PROVISIONED for predictable workloads. PROVISIONED sets the billing mode to [Provisioned Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual).
    ///
    /// * PAY_PER_REQUEST - We recommend using PAY_PER_REQUEST for unpredictable workloads. PAY_PER_REQUEST sets the billing mode to [On-Demand Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand).
    public var billingMode: DynamoDbClientTypes.BillingMode?
    /// An array of one or more global secondary indexes for the table. For each index in the array, you can request one action:
    ///
    /// * Create - add a new global secondary index to the table.
    ///
    /// * Update - modify the provisioned throughput settings of an existing global secondary index.
    ///
    /// * Delete - remove a global secondary index from the table.
    ///
    ///
    /// You can create or delete only one global secondary index per UpdateTable operation. For more information, see [Managing Global Secondary Indexes](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.OnlineOps.html) in the Amazon DynamoDB Developer Guide.
    public var globalSecondaryIndexUpdates: [DynamoDbClientTypes.GlobalSecondaryIndexUpdate]?
    /// The new provisioned throughput settings for the specified table or index.
    public var provisionedThroughput: DynamoDbClientTypes.ProvisionedThroughput?
    /// A list of replica update actions (create, delete, or update) for the table. This property only applies to [Version 2019.11.21](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html) of global tables.
    public var replicaUpdates: [DynamoDbClientTypes.ReplicationGroupUpdate]?
    /// The new server-side encryption settings for the specified table.
    public var sSESpecification: DynamoDbClientTypes.SSESpecification?
    /// Represents the DynamoDB Streams configuration for the table. You receive a ResourceInUseException if you try to enable a stream on a table that already has a stream, or if you try to disable a stream on a table that doesn't have a stream.
    public var streamSpecification: DynamoDbClientTypes.StreamSpecification?
    /// The table class of the table to be updated. Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.
    public var tableClass: DynamoDbClientTypes.TableClass?
    /// The name of the table to be updated.
    /// This member is required.
    public var tableName: Swift.String?

    public init (
        attributeDefinitions: [DynamoDbClientTypes.AttributeDefinition]? = nil,
        billingMode: DynamoDbClientTypes.BillingMode? = nil,
        globalSecondaryIndexUpdates: [DynamoDbClientTypes.GlobalSecondaryIndexUpdate]? = nil,
        provisionedThroughput: DynamoDbClientTypes.ProvisionedThroughput? = nil,
        replicaUpdates: [DynamoDbClientTypes.ReplicationGroupUpdate]? = nil,
        sSESpecification: DynamoDbClientTypes.SSESpecification? = nil,
        streamSpecification: DynamoDbClientTypes.StreamSpecification? = nil,
        tableClass: DynamoDbClientTypes.TableClass? = nil,
        tableName: Swift.String? = nil
    )
    {
        self.attributeDefinitions = attributeDefinitions
        self.billingMode = billingMode
        self.globalSecondaryIndexUpdates = globalSecondaryIndexUpdates
        self.provisionedThroughput = provisionedThroughput
        self.replicaUpdates = replicaUpdates
        self.sSESpecification = sSESpecification
        self.streamSpecification = streamSpecification
        self.tableClass = tableClass
        self.tableName = tableName
    }
}
