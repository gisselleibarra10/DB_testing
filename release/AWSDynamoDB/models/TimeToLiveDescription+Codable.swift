// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.TimeToLiveDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributeName = "AttributeName"
        case timeToLiveStatus = "TimeToLiveStatus"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributeName = self.attributeName {
            try encodeContainer.encode(attributeName, forKey: .attributeName)
        }
        if let timeToLiveStatus = self.timeToLiveStatus {
            try encodeContainer.encode(timeToLiveStatus.rawValue, forKey: .timeToLiveStatus)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timeToLiveStatusDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.TimeToLiveStatus.self, forKey: .timeToLiveStatus)
        timeToLiveStatus = timeToLiveStatusDecoded
        let attributeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .attributeName)
        attributeName = attributeNameDecoded
    }
}
