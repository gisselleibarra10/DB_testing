// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupsOutputResponseBody: Swift.Equatable {
    let backupSummaries: [DynamoDbClientTypes.BackupSummary]?
    let lastEvaluatedBackupArn: Swift.String?
}

extension ListBackupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case backupSummaries = "BackupSummaries"
        case lastEvaluatedBackupArn = "LastEvaluatedBackupArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupSummariesContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.BackupSummary?].self, forKey: .backupSummaries)
        var backupSummariesDecoded0:[DynamoDbClientTypes.BackupSummary]? = nil
        if let backupSummariesContainer = backupSummariesContainer {
            backupSummariesDecoded0 = [DynamoDbClientTypes.BackupSummary]()
            for structure0 in backupSummariesContainer {
                if let structure0 = structure0 {
                    backupSummariesDecoded0?.append(structure0)
                }
            }
        }
        backupSummaries = backupSummariesDecoded0
        let lastEvaluatedBackupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastEvaluatedBackupArn)
        lastEvaluatedBackupArn = lastEvaluatedBackupArnDecoded
    }
}
