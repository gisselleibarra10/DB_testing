// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.DeleteRequest: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case key = "Key"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let key = key {
            var keyContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .key)
            for (dictKey0, key0) in key {
                try keyContainer.encode(key0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyContainer = try containerValues.decodeIfPresent([Swift.String: DynamoDbClientTypes.AttributeValue?].self, forKey: .key)
        var keyDecoded0: [Swift.String:DynamoDbClientTypes.AttributeValue]? = nil
        if let keyContainer = keyContainer {
            keyDecoded0 = [Swift.String:DynamoDbClientTypes.AttributeValue]()
            for (key0, attributevalue0) in keyContainer {
                if let attributevalue0 = attributevalue0 {
                    keyDecoded0?[key0] = attributevalue0
                }
            }
        }
        key = keyDecoded0
    }
}
