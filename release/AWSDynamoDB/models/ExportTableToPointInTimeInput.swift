// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ExportTableToPointInTimeInput: Swift.Equatable {
    /// Providing a ClientToken makes the call to ExportTableToPointInTimeInput idempotent, meaning that multiple identical calls have the same effect as one single call. A client token is valid for 8 hours after the first request that uses it is completed. After 8 hours, any request with the same client token is treated as a new request. Do not resubmit the same request with the same client token for more than 8 hours, or the result might not be idempotent. If you submit a request with the same client token but a change in other parameters within the 8-hour idempotency window, DynamoDB returns an ImportConflictException.
    public var clientToken: Swift.String?
    /// The format for the exported data. Valid values for ExportFormat are DYNAMODB_JSON or ION.
    public var exportFormat: DynamoDbClientTypes.ExportFormat?
    /// Time in the past from which to export table data, counted in seconds from the start of the Unix epoch. The table export will be a snapshot of the table's state at this point in time.
    public var exportTime: ClientRuntime.Date?
    /// The name of the Amazon S3 bucket to export the snapshot to.
    /// This member is required.
    public var s3Bucket: Swift.String?
    /// The ID of the Amazon Web Services account that owns the bucket the export will be stored in.
    public var s3BucketOwner: Swift.String?
    /// The Amazon S3 bucket prefix to use as the file name and path of the exported snapshot.
    public var s3Prefix: Swift.String?
    /// Type of encryption used on the bucket where export data will be stored. Valid values for S3SseAlgorithm are:
    ///
    /// * AES256 - server-side encryption with Amazon S3 managed keys
    ///
    /// * KMS - server-side encryption with KMS managed keys
    public var s3SseAlgorithm: DynamoDbClientTypes.S3SseAlgorithm?
    /// The ID of the KMS managed key used to encrypt the S3 bucket where export data will be stored (if applicable).
    public var s3SseKmsKeyId: Swift.String?
    /// The Amazon Resource Name (ARN) associated with the table to export.
    /// This member is required.
    public var tableArn: Swift.String?

    public init (
        clientToken: Swift.String? = nil,
        exportFormat: DynamoDbClientTypes.ExportFormat? = nil,
        exportTime: ClientRuntime.Date? = nil,
        s3Bucket: Swift.String? = nil,
        s3BucketOwner: Swift.String? = nil,
        s3Prefix: Swift.String? = nil,
        s3SseAlgorithm: DynamoDbClientTypes.S3SseAlgorithm? = nil,
        s3SseKmsKeyId: Swift.String? = nil,
        tableArn: Swift.String? = nil
    )
    {
        self.clientToken = clientToken
        self.exportFormat = exportFormat
        self.exportTime = exportTime
        self.s3Bucket = s3Bucket
        self.s3BucketOwner = s3BucketOwner
        self.s3Prefix = s3Prefix
        self.s3SseAlgorithm = s3SseAlgorithm
        self.s3SseKmsKeyId = s3SseKmsKeyId
        self.tableArn = tableArn
    }
}
