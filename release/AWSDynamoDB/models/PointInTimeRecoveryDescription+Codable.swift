// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.PointInTimeRecoveryDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case earliestRestorableDateTime = "EarliestRestorableDateTime"
        case latestRestorableDateTime = "LatestRestorableDateTime"
        case pointInTimeRecoveryStatus = "PointInTimeRecoveryStatus"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let earliestRestorableDateTime = self.earliestRestorableDateTime {
            try encodeContainer.encode(earliestRestorableDateTime.timeIntervalSince1970, forKey: .earliestRestorableDateTime)
        }
        if let latestRestorableDateTime = self.latestRestorableDateTime {
            try encodeContainer.encode(latestRestorableDateTime.timeIntervalSince1970, forKey: .latestRestorableDateTime)
        }
        if let pointInTimeRecoveryStatus = self.pointInTimeRecoveryStatus {
            try encodeContainer.encode(pointInTimeRecoveryStatus.rawValue, forKey: .pointInTimeRecoveryStatus)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pointInTimeRecoveryStatusDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.PointInTimeRecoveryStatus.self, forKey: .pointInTimeRecoveryStatus)
        pointInTimeRecoveryStatus = pointInTimeRecoveryStatusDecoded
        let earliestRestorableDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .earliestRestorableDateTime)
        earliestRestorableDateTime = earliestRestorableDateTimeDecoded
        let latestRestorableDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .latestRestorableDateTime)
        latestRestorableDateTime = latestRestorableDateTimeDecoded
    }
}
