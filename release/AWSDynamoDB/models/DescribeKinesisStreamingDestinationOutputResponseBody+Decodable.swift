// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeKinesisStreamingDestinationOutputResponseBody: Swift.Equatable {
    let tableName: Swift.String?
    let kinesisDataStreamDestinations: [DynamoDbClientTypes.KinesisDataStreamDestination]?
}

extension DescribeKinesisStreamingDestinationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case kinesisDataStreamDestinations = "KinesisDataStreamDestinations"
        case tableName = "TableName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let kinesisDataStreamDestinationsContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.KinesisDataStreamDestination?].self, forKey: .kinesisDataStreamDestinations)
        var kinesisDataStreamDestinationsDecoded0:[DynamoDbClientTypes.KinesisDataStreamDestination]? = nil
        if let kinesisDataStreamDestinationsContainer = kinesisDataStreamDestinationsContainer {
            kinesisDataStreamDestinationsDecoded0 = [DynamoDbClientTypes.KinesisDataStreamDestination]()
            for structure0 in kinesisDataStreamDestinationsContainer {
                if let structure0 = structure0 {
                    kinesisDataStreamDestinationsDecoded0?.append(structure0)
                }
            }
        }
        kinesisDataStreamDestinations = kinesisDataStreamDestinationsDecoded0
    }
}
