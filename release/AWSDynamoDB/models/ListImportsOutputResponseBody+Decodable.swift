// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImportsOutputResponseBody: Swift.Equatable {
    let importSummaryList: [DynamoDbClientTypes.ImportSummary]?
    let nextToken: Swift.String?
}

extension ListImportsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case importSummaryList = "ImportSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let importSummaryListContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.ImportSummary?].self, forKey: .importSummaryList)
        var importSummaryListDecoded0:[DynamoDbClientTypes.ImportSummary]? = nil
        if let importSummaryListContainer = importSummaryListContainer {
            importSummaryListDecoded0 = [DynamoDbClientTypes.ImportSummary]()
            for structure0 in importSummaryListContainer {
                if let structure0 = structure0 {
                    importSummaryListDecoded0?.append(structure0)
                }
            }
        }
        importSummaryList = importSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
