// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes {
    /// Represents the properties of the table being imported into.
    public struct ImportTableDescription: Swift.Equatable {
        /// The client token that was provided for the import task. Reusing the client token on retry makes a call to ImportTable idempotent.
        public var clientToken: Swift.String?
        /// The Amazon Resource Number (ARN) of the Cloudwatch Log Group associated with the target table.
        public var cloudWatchLogGroupArn: Swift.String?
        /// The time at which the creation of the table associated with this import task completed.
        public var endTime: ClientRuntime.Date?
        /// The number of errors occurred on importing the source file into the target table.
        public var errorCount: Swift.Int
        /// The error code corresponding to the failure that the import job ran into during execution.
        public var failureCode: Swift.String?
        /// The error message corresponding to the failure that the import job ran into during execution.
        public var failureMessage: Swift.String?
        /// The Amazon Resource Number (ARN) corresponding to the import request.
        public var importArn: Swift.String?
        /// The status of the import.
        public var importStatus: DynamoDbClientTypes.ImportStatus?
        /// The number of items successfully imported into the new table.
        public var importedItemCount: Swift.Int
        /// The compression options for the data that has been imported into the target table. The values are NONE, GZIP, or ZSTD.
        public var inputCompressionType: DynamoDbClientTypes.InputCompressionType?
        /// The format of the source data going into the target table.
        public var inputFormat: DynamoDbClientTypes.InputFormat?
        /// The format options for the data that was imported into the target table. There is one value, CsvOption.
        public var inputFormatOptions: DynamoDbClientTypes.InputFormatOptions?
        /// The total number of items processed from the source file.
        public var processedItemCount: Swift.Int
        /// The total size of data processed from the source file, in Bytes.
        public var processedSizeBytes: Swift.Int
        /// Values for the S3 bucket the source file is imported from. Includes bucket name (required), key prefix (optional) and bucket account owner ID (optional).
        public var s3BucketSource: DynamoDbClientTypes.S3BucketSource?
        /// The time when this import task started.
        public var startTime: ClientRuntime.Date?
        /// The Amazon Resource Number (ARN) of the table being imported into.
        public var tableArn: Swift.String?
        /// The parameters for the new table that is being imported into.
        public var tableCreationParameters: DynamoDbClientTypes.TableCreationParameters?
        /// The table id corresponding to the table created by import table process.
        public var tableId: Swift.String?

        public init (
            clientToken: Swift.String? = nil,
            cloudWatchLogGroupArn: Swift.String? = nil,
            endTime: ClientRuntime.Date? = nil,
            errorCount: Swift.Int = 0,
            failureCode: Swift.String? = nil,
            failureMessage: Swift.String? = nil,
            importArn: Swift.String? = nil,
            importStatus: DynamoDbClientTypes.ImportStatus? = nil,
            importedItemCount: Swift.Int = 0,
            inputCompressionType: DynamoDbClientTypes.InputCompressionType? = nil,
            inputFormat: DynamoDbClientTypes.InputFormat? = nil,
            inputFormatOptions: DynamoDbClientTypes.InputFormatOptions? = nil,
            processedItemCount: Swift.Int = 0,
            processedSizeBytes: Swift.Int = 0,
            s3BucketSource: DynamoDbClientTypes.S3BucketSource? = nil,
            startTime: ClientRuntime.Date? = nil,
            tableArn: Swift.String? = nil,
            tableCreationParameters: DynamoDbClientTypes.TableCreationParameters? = nil,
            tableId: Swift.String? = nil
        )
        {
            self.clientToken = clientToken
            self.cloudWatchLogGroupArn = cloudWatchLogGroupArn
            self.endTime = endTime
            self.errorCount = errorCount
            self.failureCode = failureCode
            self.failureMessage = failureMessage
            self.importArn = importArn
            self.importStatus = importStatus
            self.importedItemCount = importedItemCount
            self.inputCompressionType = inputCompressionType
            self.inputFormat = inputFormat
            self.inputFormatOptions = inputFormatOptions
            self.processedItemCount = processedItemCount
            self.processedSizeBytes = processedSizeBytes
            self.s3BucketSource = s3BucketSource
            self.startTime = startTime
            self.tableArn = tableArn
            self.tableCreationParameters = tableCreationParameters
            self.tableId = tableId
        }
    }

}
