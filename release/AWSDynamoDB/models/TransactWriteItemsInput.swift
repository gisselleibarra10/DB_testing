// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct TransactWriteItemsInput: Swift.Equatable {
    /// Providing a ClientRequestToken makes the call to TransactWriteItems idempotent, meaning that multiple identical calls have the same effect as one single call. Although multiple identical calls using the same client request token produce the same result on the server (no side effects), the responses to the calls might not be the same. If the ReturnConsumedCapacity> parameter is set, then the initial TransactWriteItems call returns the amount of write capacity units consumed in making the changes. Subsequent TransactWriteItems calls with the same client token return the number of read capacity units consumed in reading the item. A client request token is valid for 10 minutes after the first request that uses it is completed. After 10 minutes, any request with the same client token is treated as a new request. Do not resubmit the same request with the same client token for more than 10 minutes, or the result might not be idempotent. If you submit a request with the same client token but a change in other parameters within the 10-minute idempotency window, DynamoDB returns an IdempotentParameterMismatch exception.
    public var clientRequestToken: Swift.String?
    /// Determines the level of detail about either provisioned or on-demand throughput consumption that is returned in the response:
    ///
    /// * INDEXES - The response includes the aggregate ConsumedCapacity for the operation, together with ConsumedCapacity for each table and secondary index that was accessed. Note that some operations, such as GetItem and BatchGetItem, do not access any indexes at all. In these cases, specifying INDEXES will only return ConsumedCapacity information for table(s).
    ///
    /// * TOTAL - The response includes only the aggregate ConsumedCapacity for the operation.
    ///
    /// * NONE - No ConsumedCapacity details are included in the response.
    public var returnConsumedCapacity: DynamoDbClientTypes.ReturnConsumedCapacity?
    /// Determines whether item collection metrics are returned. If set to SIZE, the response includes statistics about item collections (if any), that were modified during the operation and are returned in the response. If set to NONE (the default), no statistics are returned.
    public var returnItemCollectionMetrics: DynamoDbClientTypes.ReturnItemCollectionMetrics?
    /// An ordered array of up to 100 TransactWriteItem objects, each of which contains a ConditionCheck, Put, Update, or Delete object. These can operate on items in different tables, but the tables must reside in the same Amazon Web Services account and Region, and no two of them can operate on the same item.
    /// This member is required.
    public var transactItems: [DynamoDbClientTypes.TransactWriteItem]?

    public init (
        clientRequestToken: Swift.String? = nil,
        returnConsumedCapacity: DynamoDbClientTypes.ReturnConsumedCapacity? = nil,
        returnItemCollectionMetrics: DynamoDbClientTypes.ReturnItemCollectionMetrics? = nil,
        transactItems: [DynamoDbClientTypes.TransactWriteItem]? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.returnConsumedCapacity = returnConsumedCapacity
        self.returnItemCollectionMetrics = returnItemCollectionMetrics
        self.transactItems = transactItems
    }
}
