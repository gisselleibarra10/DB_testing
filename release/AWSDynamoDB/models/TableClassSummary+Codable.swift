// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.TableClassSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastUpdateDateTime = "LastUpdateDateTime"
        case tableClass = "TableClass"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lastUpdateDateTime = self.lastUpdateDateTime {
            try encodeContainer.encode(lastUpdateDateTime.timeIntervalSince1970, forKey: .lastUpdateDateTime)
        }
        if let tableClass = self.tableClass {
            try encodeContainer.encode(tableClass.rawValue, forKey: .tableClass)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableClassDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.TableClass.self, forKey: .tableClass)
        tableClass = tableClassDecoded
        let lastUpdateDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdateDateTime)
        lastUpdateDateTime = lastUpdateDateTimeDecoded
    }
}
