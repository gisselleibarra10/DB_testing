// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.AutoScalingPolicyDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case policyName = "PolicyName"
        case targetTrackingScalingPolicyConfiguration = "TargetTrackingScalingPolicyConfiguration"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let policyName = self.policyName {
            try encodeContainer.encode(policyName, forKey: .policyName)
        }
        if let targetTrackingScalingPolicyConfiguration = self.targetTrackingScalingPolicyConfiguration {
            try encodeContainer.encode(targetTrackingScalingPolicyConfiguration, forKey: .targetTrackingScalingPolicyConfiguration)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .policyName)
        policyName = policyNameDecoded
        let targetTrackingScalingPolicyConfigurationDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.AutoScalingTargetTrackingScalingPolicyConfigurationDescription.self, forKey: .targetTrackingScalingPolicyConfiguration)
        targetTrackingScalingPolicyConfiguration = targetTrackingScalingPolicyConfigurationDecoded
    }
}
