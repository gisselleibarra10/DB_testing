// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTableReplicaAutoScalingInputBody: Swift.Equatable {
    let globalSecondaryIndexUpdates: [DynamoDbClientTypes.GlobalSecondaryIndexAutoScalingUpdate]?
    let tableName: Swift.String?
    let provisionedWriteCapacityAutoScalingUpdate: DynamoDbClientTypes.AutoScalingSettingsUpdate?
    let replicaUpdates: [DynamoDbClientTypes.ReplicaAutoScalingUpdate]?
}

extension UpdateTableReplicaAutoScalingInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case globalSecondaryIndexUpdates = "GlobalSecondaryIndexUpdates"
        case provisionedWriteCapacityAutoScalingUpdate = "ProvisionedWriteCapacityAutoScalingUpdate"
        case replicaUpdates = "ReplicaUpdates"
        case tableName = "TableName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let globalSecondaryIndexUpdatesContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.GlobalSecondaryIndexAutoScalingUpdate?].self, forKey: .globalSecondaryIndexUpdates)
        var globalSecondaryIndexUpdatesDecoded0:[DynamoDbClientTypes.GlobalSecondaryIndexAutoScalingUpdate]? = nil
        if let globalSecondaryIndexUpdatesContainer = globalSecondaryIndexUpdatesContainer {
            globalSecondaryIndexUpdatesDecoded0 = [DynamoDbClientTypes.GlobalSecondaryIndexAutoScalingUpdate]()
            for structure0 in globalSecondaryIndexUpdatesContainer {
                if let structure0 = structure0 {
                    globalSecondaryIndexUpdatesDecoded0?.append(structure0)
                }
            }
        }
        globalSecondaryIndexUpdates = globalSecondaryIndexUpdatesDecoded0
        let tableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let provisionedWriteCapacityAutoScalingUpdateDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.AutoScalingSettingsUpdate.self, forKey: .provisionedWriteCapacityAutoScalingUpdate)
        provisionedWriteCapacityAutoScalingUpdate = provisionedWriteCapacityAutoScalingUpdateDecoded
        let replicaUpdatesContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.ReplicaAutoScalingUpdate?].self, forKey: .replicaUpdates)
        var replicaUpdatesDecoded0:[DynamoDbClientTypes.ReplicaAutoScalingUpdate]? = nil
        if let replicaUpdatesContainer = replicaUpdatesContainer {
            replicaUpdatesDecoded0 = [DynamoDbClientTypes.ReplicaAutoScalingUpdate]()
            for structure0 in replicaUpdatesContainer {
                if let structure0 = structure0 {
                    replicaUpdatesDecoded0?.append(structure0)
                }
            }
        }
        replicaUpdates = replicaUpdatesDecoded0
    }
}
