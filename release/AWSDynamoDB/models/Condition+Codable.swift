// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.Condition: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributeValueList = "AttributeValueList"
        case comparisonOperator = "ComparisonOperator"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributeValueList = attributeValueList {
            var attributeValueListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .attributeValueList)
            for attributevaluelist0 in attributeValueList {
                try attributeValueListContainer.encode(attributevaluelist0)
            }
        }
        if let comparisonOperator = self.comparisonOperator {
            try encodeContainer.encode(comparisonOperator.rawValue, forKey: .comparisonOperator)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributeValueListContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.AttributeValue?].self, forKey: .attributeValueList)
        var attributeValueListDecoded0:[DynamoDbClientTypes.AttributeValue]? = nil
        if let attributeValueListContainer = attributeValueListContainer {
            attributeValueListDecoded0 = [DynamoDbClientTypes.AttributeValue]()
            for union0 in attributeValueListContainer {
                if let union0 = union0 {
                    attributeValueListDecoded0?.append(union0)
                }
            }
        }
        attributeValueList = attributeValueListDecoded0
        let comparisonOperatorDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.ComparisonOperator.self, forKey: .comparisonOperator)
        comparisonOperator = comparisonOperatorDecoded
    }
}
