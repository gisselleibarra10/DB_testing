// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.SSEDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inaccessibleEncryptionDateTime = "InaccessibleEncryptionDateTime"
        case kMSMasterKeyArn = "KMSMasterKeyArn"
        case sSEType = "SSEType"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inaccessibleEncryptionDateTime = self.inaccessibleEncryptionDateTime {
            try encodeContainer.encode(inaccessibleEncryptionDateTime.timeIntervalSince1970, forKey: .inaccessibleEncryptionDateTime)
        }
        if let kMSMasterKeyArn = self.kMSMasterKeyArn {
            try encodeContainer.encode(kMSMasterKeyArn, forKey: .kMSMasterKeyArn)
        }
        if let sSEType = self.sSEType {
            try encodeContainer.encode(sSEType.rawValue, forKey: .sSEType)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.SSEStatus.self, forKey: .status)
        status = statusDecoded
        let sSETypeDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.SSEType.self, forKey: .sSEType)
        sSEType = sSETypeDecoded
        let kMSMasterKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kMSMasterKeyArn)
        kMSMasterKeyArn = kMSMasterKeyArnDecoded
        let inaccessibleEncryptionDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .inaccessibleEncryptionDateTime)
        inaccessibleEncryptionDateTime = inaccessibleEncryptionDateTimeDecoded
    }
}
