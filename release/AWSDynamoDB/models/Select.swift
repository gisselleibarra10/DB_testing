// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DynamoDbClientTypes {
    public enum Select: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case allAttributes
        case allProjectedAttributes
        case count
        case specificAttributes
        case sdkUnknown(Swift.String)

        public static var allCases: [Select] {
            return [
                .allAttributes,
                .allProjectedAttributes,
                .count,
                .specificAttributes,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .allAttributes: return "ALL_ATTRIBUTES"
            case .allProjectedAttributes: return "ALL_PROJECTED_ATTRIBUTES"
            case .count: return "COUNT"
            case .specificAttributes: return "SPECIFIC_ATTRIBUTES"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = Select(rawValue: rawValue) ?? Select.sdkUnknown(rawValue)
        }
    }
}
