// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.ReplicaGlobalSecondaryIndexSettingsDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case indexName = "IndexName"
        case indexStatus = "IndexStatus"
        case provisionedReadCapacityAutoScalingSettings = "ProvisionedReadCapacityAutoScalingSettings"
        case provisionedReadCapacityUnits = "ProvisionedReadCapacityUnits"
        case provisionedWriteCapacityAutoScalingSettings = "ProvisionedWriteCapacityAutoScalingSettings"
        case provisionedWriteCapacityUnits = "ProvisionedWriteCapacityUnits"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let indexName = self.indexName {
            try encodeContainer.encode(indexName, forKey: .indexName)
        }
        if let indexStatus = self.indexStatus {
            try encodeContainer.encode(indexStatus.rawValue, forKey: .indexStatus)
        }
        if let provisionedReadCapacityAutoScalingSettings = self.provisionedReadCapacityAutoScalingSettings {
            try encodeContainer.encode(provisionedReadCapacityAutoScalingSettings, forKey: .provisionedReadCapacityAutoScalingSettings)
        }
        if let provisionedReadCapacityUnits = self.provisionedReadCapacityUnits {
            try encodeContainer.encode(provisionedReadCapacityUnits, forKey: .provisionedReadCapacityUnits)
        }
        if let provisionedWriteCapacityAutoScalingSettings = self.provisionedWriteCapacityAutoScalingSettings {
            try encodeContainer.encode(provisionedWriteCapacityAutoScalingSettings, forKey: .provisionedWriteCapacityAutoScalingSettings)
        }
        if let provisionedWriteCapacityUnits = self.provisionedWriteCapacityUnits {
            try encodeContainer.encode(provisionedWriteCapacityUnits, forKey: .provisionedWriteCapacityUnits)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexName)
        indexName = indexNameDecoded
        let indexStatusDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.IndexStatus.self, forKey: .indexStatus)
        indexStatus = indexStatusDecoded
        let provisionedReadCapacityUnitsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .provisionedReadCapacityUnits)
        provisionedReadCapacityUnits = provisionedReadCapacityUnitsDecoded
        let provisionedReadCapacityAutoScalingSettingsDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.AutoScalingSettingsDescription.self, forKey: .provisionedReadCapacityAutoScalingSettings)
        provisionedReadCapacityAutoScalingSettings = provisionedReadCapacityAutoScalingSettingsDecoded
        let provisionedWriteCapacityUnitsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .provisionedWriteCapacityUnits)
        provisionedWriteCapacityUnits = provisionedWriteCapacityUnitsDecoded
        let provisionedWriteCapacityAutoScalingSettingsDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.AutoScalingSettingsDescription.self, forKey: .provisionedWriteCapacityAutoScalingSettings)
        provisionedWriteCapacityAutoScalingSettings = provisionedWriteCapacityAutoScalingSettingsDecoded
    }
}
