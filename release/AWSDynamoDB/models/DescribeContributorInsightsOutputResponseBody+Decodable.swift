// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeContributorInsightsOutputResponseBody: Swift.Equatable {
    let tableName: Swift.String?
    let indexName: Swift.String?
    let contributorInsightsRuleList: [Swift.String]?
    let contributorInsightsStatus: DynamoDbClientTypes.ContributorInsightsStatus?
    let lastUpdateDateTime: ClientRuntime.Date?
    let failureException: DynamoDbClientTypes.FailureException?
}

extension DescribeContributorInsightsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contributorInsightsRuleList = "ContributorInsightsRuleList"
        case contributorInsightsStatus = "ContributorInsightsStatus"
        case failureException = "FailureException"
        case indexName = "IndexName"
        case lastUpdateDateTime = "LastUpdateDateTime"
        case tableName = "TableName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let indexNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexName)
        indexName = indexNameDecoded
        let contributorInsightsRuleListContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .contributorInsightsRuleList)
        var contributorInsightsRuleListDecoded0:[Swift.String]? = nil
        if let contributorInsightsRuleListContainer = contributorInsightsRuleListContainer {
            contributorInsightsRuleListDecoded0 = [Swift.String]()
            for string0 in contributorInsightsRuleListContainer {
                if let string0 = string0 {
                    contributorInsightsRuleListDecoded0?.append(string0)
                }
            }
        }
        contributorInsightsRuleList = contributorInsightsRuleListDecoded0
        let contributorInsightsStatusDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.ContributorInsightsStatus.self, forKey: .contributorInsightsStatus)
        contributorInsightsStatus = contributorInsightsStatusDecoded
        let lastUpdateDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdateDateTime)
        lastUpdateDateTime = lastUpdateDateTimeDecoded
        let failureExceptionDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.FailureException.self, forKey: .failureException)
        failureException = failureExceptionDecoded
    }
}
