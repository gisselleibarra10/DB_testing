// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGlobalTablesInputBody: Swift.Equatable {
    let exclusiveStartGlobalTableName: Swift.String?
    let limit: Swift.Int?
    let regionName: Swift.String?
}

extension ListGlobalTablesInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exclusiveStartGlobalTableName = "ExclusiveStartGlobalTableName"
        case limit = "Limit"
        case regionName = "RegionName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exclusiveStartGlobalTableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exclusiveStartGlobalTableName)
        exclusiveStartGlobalTableName = exclusiveStartGlobalTableNameDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let regionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .regionName)
        regionName = regionNameDecoded
    }
}
