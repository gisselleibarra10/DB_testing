// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ExecuteStatementOutputResponse: Swift.Equatable {
    /// The capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. ConsumedCapacity is only returned if the request asked for it. For more information, see [Provisioned Throughput](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html) in the Amazon DynamoDB Developer Guide.
    public var consumedCapacity: DynamoDbClientTypes.ConsumedCapacity?
    /// If a read operation was used, this property will contain the result of the read operation; a map of attribute names and their values. For the write operations this value will be empty.
    public var items: [[Swift.String:DynamoDbClientTypes.AttributeValue]]?
    /// The primary key of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request. If LastEvaluatedKey is empty, then the "last page" of results has been processed and there is no more data to be retrieved. If LastEvaluatedKey is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when LastEvaluatedKey is empty.
    public var lastEvaluatedKey: [Swift.String:DynamoDbClientTypes.AttributeValue]?
    /// If the response of a read request exceeds the response payload limit DynamoDB will set this value in the response. If set, you can use that this value in the subsequent request to get the remaining results.
    public var nextToken: Swift.String?

    public init (
        consumedCapacity: DynamoDbClientTypes.ConsumedCapacity? = nil,
        items: [[Swift.String:DynamoDbClientTypes.AttributeValue]]? = nil,
        lastEvaluatedKey: [Swift.String:DynamoDbClientTypes.AttributeValue]? = nil,
        nextToken: Swift.String? = nil
    )
    {
        self.consumedCapacity = consumedCapacity
        self.items = items
        self.lastEvaluatedKey = lastEvaluatedKey
        self.nextToken = nextToken
    }
}
