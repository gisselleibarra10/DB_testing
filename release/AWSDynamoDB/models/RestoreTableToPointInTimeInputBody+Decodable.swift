// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RestoreTableToPointInTimeInputBody: Swift.Equatable {
    let sourceTableArn: Swift.String?
    let sourceTableName: Swift.String?
    let targetTableName: Swift.String?
    let useLatestRestorableTime: Swift.Bool?
    let restoreDateTime: ClientRuntime.Date?
    let billingModeOverride: DynamoDbClientTypes.BillingMode?
    let globalSecondaryIndexOverride: [DynamoDbClientTypes.GlobalSecondaryIndex]?
    let localSecondaryIndexOverride: [DynamoDbClientTypes.LocalSecondaryIndex]?
    let provisionedThroughputOverride: DynamoDbClientTypes.ProvisionedThroughput?
    let sSESpecificationOverride: DynamoDbClientTypes.SSESpecification?
}

extension RestoreTableToPointInTimeInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case billingModeOverride = "BillingModeOverride"
        case globalSecondaryIndexOverride = "GlobalSecondaryIndexOverride"
        case localSecondaryIndexOverride = "LocalSecondaryIndexOverride"
        case provisionedThroughputOverride = "ProvisionedThroughputOverride"
        case restoreDateTime = "RestoreDateTime"
        case sSESpecificationOverride = "SSESpecificationOverride"
        case sourceTableArn = "SourceTableArn"
        case sourceTableName = "SourceTableName"
        case targetTableName = "TargetTableName"
        case useLatestRestorableTime = "UseLatestRestorableTime"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceTableArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceTableArn)
        sourceTableArn = sourceTableArnDecoded
        let sourceTableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceTableName)
        sourceTableName = sourceTableNameDecoded
        let targetTableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetTableName)
        targetTableName = targetTableNameDecoded
        let useLatestRestorableTimeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .useLatestRestorableTime)
        useLatestRestorableTime = useLatestRestorableTimeDecoded
        let restoreDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .restoreDateTime)
        restoreDateTime = restoreDateTimeDecoded
        let billingModeOverrideDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.BillingMode.self, forKey: .billingModeOverride)
        billingModeOverride = billingModeOverrideDecoded
        let globalSecondaryIndexOverrideContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.GlobalSecondaryIndex?].self, forKey: .globalSecondaryIndexOverride)
        var globalSecondaryIndexOverrideDecoded0:[DynamoDbClientTypes.GlobalSecondaryIndex]? = nil
        if let globalSecondaryIndexOverrideContainer = globalSecondaryIndexOverrideContainer {
            globalSecondaryIndexOverrideDecoded0 = [DynamoDbClientTypes.GlobalSecondaryIndex]()
            for structure0 in globalSecondaryIndexOverrideContainer {
                if let structure0 = structure0 {
                    globalSecondaryIndexOverrideDecoded0?.append(structure0)
                }
            }
        }
        globalSecondaryIndexOverride = globalSecondaryIndexOverrideDecoded0
        let localSecondaryIndexOverrideContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.LocalSecondaryIndex?].self, forKey: .localSecondaryIndexOverride)
        var localSecondaryIndexOverrideDecoded0:[DynamoDbClientTypes.LocalSecondaryIndex]? = nil
        if let localSecondaryIndexOverrideContainer = localSecondaryIndexOverrideContainer {
            localSecondaryIndexOverrideDecoded0 = [DynamoDbClientTypes.LocalSecondaryIndex]()
            for structure0 in localSecondaryIndexOverrideContainer {
                if let structure0 = structure0 {
                    localSecondaryIndexOverrideDecoded0?.append(structure0)
                }
            }
        }
        localSecondaryIndexOverride = localSecondaryIndexOverrideDecoded0
        let provisionedThroughputOverrideDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.ProvisionedThroughput.self, forKey: .provisionedThroughputOverride)
        provisionedThroughputOverride = provisionedThroughputOverrideDecoded
        let sSESpecificationOverrideDecoded = try containerValues.decodeIfPresent(DynamoDbClientTypes.SSESpecification.self, forKey: .sSESpecificationOverride)
        sSESpecificationOverride = sSESpecificationOverrideDecoded
    }
}
