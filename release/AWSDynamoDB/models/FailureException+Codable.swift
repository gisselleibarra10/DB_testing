// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.FailureException: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exceptionDescription = "ExceptionDescription"
        case exceptionName = "ExceptionName"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let exceptionDescription = self.exceptionDescription {
            try encodeContainer.encode(exceptionDescription, forKey: .exceptionDescription)
        }
        if let exceptionName = self.exceptionName {
            try encodeContainer.encode(exceptionName, forKey: .exceptionName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exceptionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exceptionName)
        exceptionName = exceptionNameDecoded
        let exceptionDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exceptionDescription)
        exceptionDescription = exceptionDescriptionDecoded
    }
}
