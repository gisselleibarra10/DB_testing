// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContributorInsightsOutputResponseBody: Swift.Equatable {
    let contributorInsightsSummaries: [DynamoDbClientTypes.ContributorInsightsSummary]?
    let nextToken: Swift.String?
}

extension ListContributorInsightsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contributorInsightsSummaries = "ContributorInsightsSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contributorInsightsSummariesContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.ContributorInsightsSummary?].self, forKey: .contributorInsightsSummaries)
        var contributorInsightsSummariesDecoded0:[DynamoDbClientTypes.ContributorInsightsSummary]? = nil
        if let contributorInsightsSummariesContainer = contributorInsightsSummariesContainer {
            contributorInsightsSummariesDecoded0 = [DynamoDbClientTypes.ContributorInsightsSummary]()
            for structure0 in contributorInsightsSummariesContainer {
                if let structure0 = structure0 {
                    contributorInsightsSummariesDecoded0?.append(structure0)
                }
            }
        }
        contributorInsightsSummaries = contributorInsightsSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
