// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DynamoDbClientTypes {
    /// Represents a request to perform a DeleteItem operation.
    public struct Delete: Swift.Equatable {
        /// A condition that must be satisfied in order for a conditional delete to succeed.
        public var conditionExpression: Swift.String?
        /// One or more substitution tokens for attribute names in an expression.
        public var expressionAttributeNames: [Swift.String:Swift.String]?
        /// One or more values that can be substituted in an expression.
        public var expressionAttributeValues: [Swift.String:DynamoDbClientTypes.AttributeValue]?
        /// The primary key of the item to be deleted. Each element consists of an attribute name and a value for that attribute.
        /// This member is required.
        public var key: [Swift.String:DynamoDbClientTypes.AttributeValue]?
        /// Use ReturnValuesOnConditionCheckFailure to get the item attributes if the Delete condition fails. For ReturnValuesOnConditionCheckFailure, the valid values are: NONE and ALL_OLD.
        public var returnValuesOnConditionCheckFailure: DynamoDbClientTypes.ReturnValuesOnConditionCheckFailure?
        /// Name of the table in which the item to be deleted resides.
        /// This member is required.
        public var tableName: Swift.String?

        public init (
            conditionExpression: Swift.String? = nil,
            expressionAttributeNames: [Swift.String:Swift.String]? = nil,
            expressionAttributeValues: [Swift.String:DynamoDbClientTypes.AttributeValue]? = nil,
            key: [Swift.String:DynamoDbClientTypes.AttributeValue]? = nil,
            returnValuesOnConditionCheckFailure: DynamoDbClientTypes.ReturnValuesOnConditionCheckFailure? = nil,
            tableName: Swift.String? = nil
        )
        {
            self.conditionExpression = conditionExpression
            self.expressionAttributeNames = expressionAttributeNames
            self.expressionAttributeValues = expressionAttributeValues
            self.key = key
            self.returnValuesOnConditionCheckFailure = returnValuesOnConditionCheckFailure
            self.tableName = tableName
        }
    }

}
