// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTablesOutputResponseBody: Swift.Equatable {
    let tableNames: [Swift.String]?
    let lastEvaluatedTableName: Swift.String?
}

extension ListTablesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastEvaluatedTableName = "LastEvaluatedTableName"
        case tableNames = "TableNames"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .tableNames)
        var tableNamesDecoded0:[Swift.String]? = nil
        if let tableNamesContainer = tableNamesContainer {
            tableNamesDecoded0 = [Swift.String]()
            for string0 in tableNamesContainer {
                if let string0 = string0 {
                    tableNamesDecoded0?.append(string0)
                }
            }
        }
        tableNames = tableNamesDecoded0
        let lastEvaluatedTableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastEvaluatedTableName)
        lastEvaluatedTableName = lastEvaluatedTableNameDecoded
    }
}
