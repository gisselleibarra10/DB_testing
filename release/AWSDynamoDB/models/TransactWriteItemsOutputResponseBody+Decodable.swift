// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TransactWriteItemsOutputResponseBody: Swift.Equatable {
    let consumedCapacity: [DynamoDbClientTypes.ConsumedCapacity]?
    let itemCollectionMetrics: [Swift.String:[DynamoDbClientTypes.ItemCollectionMetrics]]?
}

extension TransactWriteItemsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case consumedCapacity = "ConsumedCapacity"
        case itemCollectionMetrics = "ItemCollectionMetrics"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let consumedCapacityContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.ConsumedCapacity?].self, forKey: .consumedCapacity)
        var consumedCapacityDecoded0:[DynamoDbClientTypes.ConsumedCapacity]? = nil
        if let consumedCapacityContainer = consumedCapacityContainer {
            consumedCapacityDecoded0 = [DynamoDbClientTypes.ConsumedCapacity]()
            for structure0 in consumedCapacityContainer {
                if let structure0 = structure0 {
                    consumedCapacityDecoded0?.append(structure0)
                }
            }
        }
        consumedCapacity = consumedCapacityDecoded0
        let itemCollectionMetricsContainer = try containerValues.decodeIfPresent([Swift.String: [DynamoDbClientTypes.ItemCollectionMetrics?]?].self, forKey: .itemCollectionMetrics)
        var itemCollectionMetricsDecoded0: [Swift.String:[DynamoDbClientTypes.ItemCollectionMetrics]]? = nil
        if let itemCollectionMetricsContainer = itemCollectionMetricsContainer {
            itemCollectionMetricsDecoded0 = [Swift.String:[DynamoDbClientTypes.ItemCollectionMetrics]]()
            for (key0, itemcollectionmetricsmultiple0) in itemCollectionMetricsContainer {
                var itemcollectionmetricsmultiple0Decoded0: [DynamoDbClientTypes.ItemCollectionMetrics]? = nil
                if let itemcollectionmetricsmultiple0 = itemcollectionmetricsmultiple0 {
                    itemcollectionmetricsmultiple0Decoded0 = [DynamoDbClientTypes.ItemCollectionMetrics]()
                    for structure1 in itemcollectionmetricsmultiple0 {
                        if let structure1 = structure1 {
                            itemcollectionmetricsmultiple0Decoded0?.append(structure1)
                        }
                    }
                }
                itemCollectionMetricsDecoded0?[key0] = itemcollectionmetricsmultiple0Decoded0
            }
        }
        itemCollectionMetrics = itemCollectionMetricsDecoded0
    }
}
