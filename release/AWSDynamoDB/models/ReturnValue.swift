// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension DynamoDbClientTypes {
    public enum ReturnValue: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case allNew
        case allOld
        case `none`
        case updatedNew
        case updatedOld
        case sdkUnknown(Swift.String)

        public static var allCases: [ReturnValue] {
            return [
                .allNew,
                .allOld,
                .none,
                .updatedNew,
                .updatedOld,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .allNew: return "ALL_NEW"
            case .allOld: return "ALL_OLD"
            case .none: return "NONE"
            case .updatedNew: return "UPDATED_NEW"
            case .updatedOld: return "UPDATED_OLD"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ReturnValue(rawValue: rawValue) ?? ReturnValue.sdkUnknown(rawValue)
        }
    }
}
