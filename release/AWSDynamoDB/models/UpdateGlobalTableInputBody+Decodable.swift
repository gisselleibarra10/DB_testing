// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGlobalTableInputBody: Swift.Equatable {
    let globalTableName: Swift.String?
    let replicaUpdates: [DynamoDbClientTypes.ReplicaUpdate]?
}

extension UpdateGlobalTableInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case globalTableName = "GlobalTableName"
        case replicaUpdates = "ReplicaUpdates"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let globalTableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .globalTableName)
        globalTableName = globalTableNameDecoded
        let replicaUpdatesContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.ReplicaUpdate?].self, forKey: .replicaUpdates)
        var replicaUpdatesDecoded0:[DynamoDbClientTypes.ReplicaUpdate]? = nil
        if let replicaUpdatesContainer = replicaUpdatesContainer {
            replicaUpdatesDecoded0 = [DynamoDbClientTypes.ReplicaUpdate]()
            for structure0 in replicaUpdatesContainer {
                if let structure0 = structure0 {
                    replicaUpdatesDecoded0?.append(structure0)
                }
            }
        }
        replicaUpdates = replicaUpdatesDecoded0
    }
}
