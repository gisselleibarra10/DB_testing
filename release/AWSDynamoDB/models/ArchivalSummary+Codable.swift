// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbClientTypes.ArchivalSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case archivalBackupArn = "ArchivalBackupArn"
        case archivalDateTime = "ArchivalDateTime"
        case archivalReason = "ArchivalReason"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let archivalBackupArn = self.archivalBackupArn {
            try encodeContainer.encode(archivalBackupArn, forKey: .archivalBackupArn)
        }
        if let archivalDateTime = self.archivalDateTime {
            try encodeContainer.encode(archivalDateTime.timeIntervalSince1970, forKey: .archivalDateTime)
        }
        if let archivalReason = self.archivalReason {
            try encodeContainer.encode(archivalReason, forKey: .archivalReason)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let archivalDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .archivalDateTime)
        archivalDateTime = archivalDateTimeDecoded
        let archivalReasonDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .archivalReason)
        archivalReason = archivalReasonDecoded
        let archivalBackupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .archivalBackupArn)
        archivalBackupArn = archivalBackupArnDecoded
    }
}
