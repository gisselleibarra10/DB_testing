// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct BatchExecuteStatementInput: Swift.Equatable {
    /// Determines the level of detail about either provisioned or on-demand throughput consumption that is returned in the response:
    ///
    /// * INDEXES - The response includes the aggregate ConsumedCapacity for the operation, together with ConsumedCapacity for each table and secondary index that was accessed. Note that some operations, such as GetItem and BatchGetItem, do not access any indexes at all. In these cases, specifying INDEXES will only return ConsumedCapacity information for table(s).
    ///
    /// * TOTAL - The response includes only the aggregate ConsumedCapacity for the operation.
    ///
    /// * NONE - No ConsumedCapacity details are included in the response.
    public var returnConsumedCapacity: DynamoDbClientTypes.ReturnConsumedCapacity?
    /// The list of PartiQL statements representing the batch to run.
    /// This member is required.
    public var statements: [DynamoDbClientTypes.BatchStatementRequest]?

    public init (
        returnConsumedCapacity: DynamoDbClientTypes.ReturnConsumedCapacity? = nil,
        statements: [DynamoDbClientTypes.BatchStatementRequest]? = nil
    )
    {
        self.returnConsumedCapacity = returnConsumedCapacity
        self.statements = statements
    }
}
