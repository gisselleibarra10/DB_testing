// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImportTableInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clientToken = "ClientToken"
        case inputCompressionType = "InputCompressionType"
        case inputFormat = "InputFormat"
        case inputFormatOptions = "InputFormatOptions"
        case s3BucketSource = "S3BucketSource"
        case tableCreationParameters = "TableCreationParameters"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientToken = self.clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let inputCompressionType = self.inputCompressionType {
            try encodeContainer.encode(inputCompressionType.rawValue, forKey: .inputCompressionType)
        }
        if let inputFormat = self.inputFormat {
            try encodeContainer.encode(inputFormat.rawValue, forKey: .inputFormat)
        }
        if let inputFormatOptions = self.inputFormatOptions {
            try encodeContainer.encode(inputFormatOptions, forKey: .inputFormatOptions)
        }
        if let s3BucketSource = self.s3BucketSource {
            try encodeContainer.encode(s3BucketSource, forKey: .s3BucketSource)
        }
        if let tableCreationParameters = self.tableCreationParameters {
            try encodeContainer.encode(tableCreationParameters, forKey: .tableCreationParameters)
        }
    }
}
