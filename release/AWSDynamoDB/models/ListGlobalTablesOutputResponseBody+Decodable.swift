// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGlobalTablesOutputResponseBody: Swift.Equatable {
    let globalTables: [DynamoDbClientTypes.GlobalTable]?
    let lastEvaluatedGlobalTableName: Swift.String?
}

extension ListGlobalTablesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case globalTables = "GlobalTables"
        case lastEvaluatedGlobalTableName = "LastEvaluatedGlobalTableName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let globalTablesContainer = try containerValues.decodeIfPresent([DynamoDbClientTypes.GlobalTable?].self, forKey: .globalTables)
        var globalTablesDecoded0:[DynamoDbClientTypes.GlobalTable]? = nil
        if let globalTablesContainer = globalTablesContainer {
            globalTablesDecoded0 = [DynamoDbClientTypes.GlobalTable]()
            for structure0 in globalTablesContainer {
                if let structure0 = structure0 {
                    globalTablesDecoded0?.append(structure0)
                }
            }
        }
        globalTables = globalTablesDecoded0
        let lastEvaluatedGlobalTableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastEvaluatedGlobalTableName)
        lastEvaluatedGlobalTableName = lastEvaluatedGlobalTableNameDecoded
    }
}
