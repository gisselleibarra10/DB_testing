// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateBusinessReportScheduleInput: Swift.Equatable {
    /// The client request token.
    public var clientRequestToken: Swift.String?
    /// The content range of the reports.
    /// This member is required.
    public var contentRange: AlexaForBusinessClientTypes.BusinessReportContentRange?
    /// The format of the generated report (individual CSV files or zipped files of individual files).
    /// This member is required.
    public var format: AlexaForBusinessClientTypes.BusinessReportFormat?
    /// The recurrence of the reports. If this isn't specified, the report will only be delivered one time when the API is called.
    public var recurrence: AlexaForBusinessClientTypes.BusinessReportRecurrence?
    /// The S3 bucket name of the output reports. If this isn't specified, the report can be retrieved from a download link by calling ListBusinessReportSchedule.
    public var s3BucketName: Swift.String?
    /// The S3 key where the report is delivered.
    public var s3KeyPrefix: Swift.String?
    /// The name identifier of the schedule.
    public var scheduleName: Swift.String?
    /// The tags for the business report schedule.
    public var tags: [AlexaForBusinessClientTypes.Tag]?

    public init (
        clientRequestToken: Swift.String? = nil,
        contentRange: AlexaForBusinessClientTypes.BusinessReportContentRange? = nil,
        format: AlexaForBusinessClientTypes.BusinessReportFormat? = nil,
        recurrence: AlexaForBusinessClientTypes.BusinessReportRecurrence? = nil,
        s3BucketName: Swift.String? = nil,
        s3KeyPrefix: Swift.String? = nil,
        scheduleName: Swift.String? = nil,
        tags: [AlexaForBusinessClientTypes.Tag]? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.contentRange = contentRange
        self.format = format
        self.recurrence = recurrence
        self.s3BucketName = s3BucketName
        self.s3KeyPrefix = s3KeyPrefix
        self.scheduleName = scheduleName
        self.tags = tags
    }
}
