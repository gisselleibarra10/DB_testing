// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListSkillsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enablementType = "EnablementType"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case skillGroupArn = "SkillGroupArn"
        case skillType = "SkillType"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let enablementType = self.enablementType {
            try encodeContainer.encode(enablementType.rawValue, forKey: .enablementType)
        }
        if let maxResults = self.maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = self.nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let skillGroupArn = self.skillGroupArn {
            try encodeContainer.encode(skillGroupArn, forKey: .skillGroupArn)
        }
        if let skillType = self.skillType {
            try encodeContainer.encode(skillType.rawValue, forKey: .skillType)
        }
    }
}
