// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AlexaForBusinessClientTypes.NetworkProfileData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateAuthorityArn = "CertificateAuthorityArn"
        case description = "Description"
        case eapMethod = "EapMethod"
        case networkProfileArn = "NetworkProfileArn"
        case networkProfileName = "NetworkProfileName"
        case securityType = "SecurityType"
        case ssid = "Ssid"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificateAuthorityArn = self.certificateAuthorityArn {
            try encodeContainer.encode(certificateAuthorityArn, forKey: .certificateAuthorityArn)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let eapMethod = self.eapMethod {
            try encodeContainer.encode(eapMethod.rawValue, forKey: .eapMethod)
        }
        if let networkProfileArn = self.networkProfileArn {
            try encodeContainer.encode(networkProfileArn, forKey: .networkProfileArn)
        }
        if let networkProfileName = self.networkProfileName {
            try encodeContainer.encode(networkProfileName, forKey: .networkProfileName)
        }
        if let securityType = self.securityType {
            try encodeContainer.encode(securityType.rawValue, forKey: .securityType)
        }
        if let ssid = self.ssid {
            try encodeContainer.encode(ssid, forKey: .ssid)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let networkProfileArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkProfileArn)
        networkProfileArn = networkProfileArnDecoded
        let networkProfileNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkProfileName)
        networkProfileName = networkProfileNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let ssidDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .ssid)
        ssid = ssidDecoded
        let securityTypeDecoded = try containerValues.decodeIfPresent(AlexaForBusinessClientTypes.NetworkSecurityType.self, forKey: .securityType)
        securityType = securityTypeDecoded
        let eapMethodDecoded = try containerValues.decodeIfPresent(AlexaForBusinessClientTypes.NetworkEapMethod.self, forKey: .eapMethod)
        eapMethod = eapMethodDecoded
        let certificateAuthorityArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificateAuthorityArn)
        certificateAuthorityArn = certificateAuthorityArnDecoded
    }
}
