// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AlexaForBusinessClientTypes.Content: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case audioList = "AudioList"
        case ssmlList = "SsmlList"
        case textList = "TextList"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let audioList = audioList {
            var audioListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .audioList)
            for audiolist0 in audioList {
                try audioListContainer.encode(audiolist0)
            }
        }
        if let ssmlList = ssmlList {
            var ssmlListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ssmlList)
            for ssmllist0 in ssmlList {
                try ssmlListContainer.encode(ssmllist0)
            }
        }
        if let textList = textList {
            var textListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .textList)
            for textlist0 in textList {
                try textListContainer.encode(textlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let textListContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.Text?].self, forKey: .textList)
        var textListDecoded0:[AlexaForBusinessClientTypes.Text]? = nil
        if let textListContainer = textListContainer {
            textListDecoded0 = [AlexaForBusinessClientTypes.Text]()
            for structure0 in textListContainer {
                if let structure0 = structure0 {
                    textListDecoded0?.append(structure0)
                }
            }
        }
        textList = textListDecoded0
        let ssmlListContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.Ssml?].self, forKey: .ssmlList)
        var ssmlListDecoded0:[AlexaForBusinessClientTypes.Ssml]? = nil
        if let ssmlListContainer = ssmlListContainer {
            ssmlListDecoded0 = [AlexaForBusinessClientTypes.Ssml]()
            for structure0 in ssmlListContainer {
                if let structure0 = structure0 {
                    ssmlListDecoded0?.append(structure0)
                }
            }
        }
        ssmlList = ssmlListDecoded0
        let audioListContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.Audio?].self, forKey: .audioList)
        var audioListDecoded0:[AlexaForBusinessClientTypes.Audio]? = nil
        if let audioListContainer = audioListContainer {
            audioListDecoded0 = [AlexaForBusinessClientTypes.Audio]()
            for structure0 in audioListContainer {
                if let structure0 = structure0 {
                    audioListDecoded0?.append(structure0)
                }
            }
        }
        audioList = audioListDecoded0
    }
}
