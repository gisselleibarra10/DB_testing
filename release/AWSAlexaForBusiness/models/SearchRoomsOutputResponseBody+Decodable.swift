// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchRoomsOutputResponseBody: Swift.Equatable {
    let rooms: [AlexaForBusinessClientTypes.RoomData]?
    let nextToken: Swift.String?
    let totalCount: Swift.Int?
}

extension SearchRoomsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case rooms = "Rooms"
        case totalCount = "TotalCount"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roomsContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.RoomData?].self, forKey: .rooms)
        var roomsDecoded0:[AlexaForBusinessClientTypes.RoomData]? = nil
        if let roomsContainer = roomsContainer {
            roomsDecoded0 = [AlexaForBusinessClientTypes.RoomData]()
            for structure0 in roomsContainer {
                if let structure0 = structure0 {
                    roomsDecoded0?.append(structure0)
                }
            }
        }
        rooms = roomsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let totalCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
    }
}
