// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutSkillAuthorizationInputBody: Swift.Equatable {
    let authorizationResult: [Swift.String:Swift.String]?
    let skillId: Swift.String?
    let roomArn: Swift.String?
}

extension PutSkillAuthorizationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authorizationResult = "AuthorizationResult"
        case roomArn = "RoomArn"
        case skillId = "SkillId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authorizationResultContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .authorizationResult)
        var authorizationResultDecoded0: [Swift.String:Swift.String]? = nil
        if let authorizationResultContainer = authorizationResultContainer {
            authorizationResultDecoded0 = [Swift.String:Swift.String]()
            for (key0, value0) in authorizationResultContainer {
                if let value0 = value0 {
                    authorizationResultDecoded0?[key0] = value0
                }
            }
        }
        authorizationResult = authorizationResultDecoded0
        let skillIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .skillId)
        skillId = skillIdDecoded
        let roomArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roomArn)
        roomArn = roomArnDecoded
    }
}
