// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeviceEventsOutputResponseBody: Swift.Equatable {
    let deviceEvents: [AlexaForBusinessClientTypes.DeviceEvent]?
    let nextToken: Swift.String?
}

extension ListDeviceEventsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceEvents = "DeviceEvents"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceEventsContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.DeviceEvent?].self, forKey: .deviceEvents)
        var deviceEventsDecoded0:[AlexaForBusinessClientTypes.DeviceEvent]? = nil
        if let deviceEventsContainer = deviceEventsContainer {
            deviceEventsDecoded0 = [AlexaForBusinessClientTypes.DeviceEvent]()
            for structure0 in deviceEventsContainer {
                if let structure0 = structure0 {
                    deviceEventsDecoded0?.append(structure0)
                }
            }
        }
        deviceEvents = deviceEventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
