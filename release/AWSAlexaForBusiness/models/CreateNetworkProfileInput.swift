// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateNetworkProfileInput: Swift.Equatable {
    /// The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices.
    public var certificateAuthorityArn: Swift.String?
    /// A unique, user-specified identifier for the request that ensures idempotency.
    /// This member is required.
    public var clientRequestToken: Swift.String?
    /// The current password of the Wi-Fi network.
    public var currentPassword: Swift.String?
    /// Detailed information about a device's network profile.
    public var description: Swift.String?
    /// The authentication standard that is used in the EAP framework. Currently, EAP_TLS is supported.
    public var eapMethod: AlexaForBusinessClientTypes.NetworkEapMethod?
    /// The name of the network profile associated with a device.
    /// This member is required.
    public var networkProfileName: Swift.String?
    /// The next, or subsequent, password of the Wi-Fi network. This password is asynchronously transmitted to the device and is used when the password of the network changes to NextPassword.
    public var nextPassword: Swift.String?
    /// The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE, WPA2_PSK, WPA_PSK, WEP, or OPEN.
    /// This member is required.
    public var securityType: AlexaForBusinessClientTypes.NetworkSecurityType?
    /// The SSID of the Wi-Fi network.
    /// This member is required.
    public var ssid: Swift.String?
    /// The tags to be added to the specified resource. Do not provide system tags.
    public var tags: [AlexaForBusinessClientTypes.Tag]?
    /// The root certificates of your authentication server that is installed on your devices and used to trust your authentication server during EAP negotiation.
    public var trustAnchors: [Swift.String]?

    public init (
        certificateAuthorityArn: Swift.String? = nil,
        clientRequestToken: Swift.String? = nil,
        currentPassword: Swift.String? = nil,
        description: Swift.String? = nil,
        eapMethod: AlexaForBusinessClientTypes.NetworkEapMethod? = nil,
        networkProfileName: Swift.String? = nil,
        nextPassword: Swift.String? = nil,
        securityType: AlexaForBusinessClientTypes.NetworkSecurityType? = nil,
        ssid: Swift.String? = nil,
        tags: [AlexaForBusinessClientTypes.Tag]? = nil,
        trustAnchors: [Swift.String]? = nil
    )
    {
        self.certificateAuthorityArn = certificateAuthorityArn
        self.clientRequestToken = clientRequestToken
        self.currentPassword = currentPassword
        self.description = description
        self.eapMethod = eapMethod
        self.networkProfileName = networkProfileName
        self.nextPassword = nextPassword
        self.securityType = securityType
        self.ssid = ssid
        self.tags = tags
        self.trustAnchors = trustAnchors
    }
}
