// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AlexaForBusinessClientTypes {
    public enum CommsProtocol: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case h323
        case sip
        case sips
        case sdkUnknown(Swift.String)

        public static var allCases: [CommsProtocol] {
            return [
                .h323,
                .sip,
                .sips,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .h323: return "H323"
            case .sip: return "SIP"
            case .sips: return "SIPS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = CommsProtocol(rawValue: rawValue) ?? CommsProtocol.sdkUnknown(rawValue)
        }
    }
}
