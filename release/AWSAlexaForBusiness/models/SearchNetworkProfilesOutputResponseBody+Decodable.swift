// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchNetworkProfilesOutputResponseBody: Swift.Equatable {
    let networkProfiles: [AlexaForBusinessClientTypes.NetworkProfileData]?
    let nextToken: Swift.String?
    let totalCount: Swift.Int?
}

extension SearchNetworkProfilesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case networkProfiles = "NetworkProfiles"
        case nextToken = "NextToken"
        case totalCount = "TotalCount"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let networkProfilesContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.NetworkProfileData?].self, forKey: .networkProfiles)
        var networkProfilesDecoded0:[AlexaForBusinessClientTypes.NetworkProfileData]? = nil
        if let networkProfilesContainer = networkProfilesContainer {
            networkProfilesDecoded0 = [AlexaForBusinessClientTypes.NetworkProfileData]()
            for structure0 in networkProfilesContainer {
                if let structure0 = structure0 {
                    networkProfilesDecoded0?.append(structure0)
                }
            }
        }
        networkProfiles = networkProfilesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let totalCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
    }
}
