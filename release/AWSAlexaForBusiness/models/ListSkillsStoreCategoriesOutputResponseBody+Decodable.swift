// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSkillsStoreCategoriesOutputResponseBody: Swift.Equatable {
    let categoryList: [AlexaForBusinessClientTypes.Category]?
    let nextToken: Swift.String?
}

extension ListSkillsStoreCategoriesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case categoryList = "CategoryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let categoryListContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.Category?].self, forKey: .categoryList)
        var categoryListDecoded0:[AlexaForBusinessClientTypes.Category]? = nil
        if let categoryListContainer = categoryListContainer {
            categoryListDecoded0 = [AlexaForBusinessClientTypes.Category]()
            for structure0 in categoryListContainer {
                if let structure0 = structure0 {
                    categoryListDecoded0?.append(structure0)
                }
            }
        }
        categoryList = categoryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
