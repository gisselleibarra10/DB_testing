// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AlexaForBusinessClientTypes {
    public enum ConferenceProviderType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case bluejeans
        case chime
        case custom
        case fuze
        case googleHangouts
        case polycom
        case ringcentral
        case skypeForBusiness
        case webex
        case zoom
        case sdkUnknown(Swift.String)

        public static var allCases: [ConferenceProviderType] {
            return [
                .bluejeans,
                .chime,
                .custom,
                .fuze,
                .googleHangouts,
                .polycom,
                .ringcentral,
                .skypeForBusiness,
                .webex,
                .zoom,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .bluejeans: return "BLUEJEANS"
            case .chime: return "CHIME"
            case .custom: return "CUSTOM"
            case .fuze: return "FUZE"
            case .googleHangouts: return "GOOGLE_HANGOUTS"
            case .polycom: return "POLYCOM"
            case .ringcentral: return "RINGCENTRAL"
            case .skypeForBusiness: return "SKYPE_FOR_BUSINESS"
            case .webex: return "WEBEX"
            case .zoom: return "ZOOM"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ConferenceProviderType(rawValue: rawValue) ?? ConferenceProviderType.sdkUnknown(rawValue)
        }
    }
}
