// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartDeviceSyncInputBody: Swift.Equatable {
    let roomArn: Swift.String?
    let deviceArn: Swift.String?
    let features: [AlexaForBusinessClientTypes.Feature]?
}

extension StartDeviceSyncInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deviceArn = "DeviceArn"
        case features = "Features"
        case roomArn = "RoomArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roomArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roomArn)
        roomArn = roomArnDecoded
        let deviceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .deviceArn)
        deviceArn = deviceArnDecoded
        let featuresContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.Feature?].self, forKey: .features)
        var featuresDecoded0:[AlexaForBusinessClientTypes.Feature]? = nil
        if let featuresContainer = featuresContainer {
            featuresDecoded0 = [AlexaForBusinessClientTypes.Feature]()
            for string0 in featuresContainer {
                if let string0 = string0 {
                    featuresDecoded0?.append(string0)
                }
            }
        }
        features = featuresDecoded0
    }
}
