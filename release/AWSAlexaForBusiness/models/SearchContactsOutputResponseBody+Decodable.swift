// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchContactsOutputResponseBody: Swift.Equatable {
    let contacts: [AlexaForBusinessClientTypes.ContactData]?
    let nextToken: Swift.String?
    let totalCount: Swift.Int?
}

extension SearchContactsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case contacts = "Contacts"
        case nextToken = "NextToken"
        case totalCount = "TotalCount"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactsContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.ContactData?].self, forKey: .contacts)
        var contactsDecoded0:[AlexaForBusinessClientTypes.ContactData]? = nil
        if let contactsContainer = contactsContainer {
            contactsDecoded0 = [AlexaForBusinessClientTypes.ContactData]()
            for structure0 in contactsContainer {
                if let structure0 = structure0 {
                    contactsDecoded0?.append(structure0)
                }
            }
        }
        contacts = contactsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let totalCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
    }
}
