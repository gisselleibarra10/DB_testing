// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSkillsOutputResponseBody: Swift.Equatable {
    let skillSummaries: [AlexaForBusinessClientTypes.SkillSummary]?
    let nextToken: Swift.String?
}

extension ListSkillsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case skillSummaries = "SkillSummaries"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let skillSummariesContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.SkillSummary?].self, forKey: .skillSummaries)
        var skillSummariesDecoded0:[AlexaForBusinessClientTypes.SkillSummary]? = nil
        if let skillSummariesContainer = skillSummariesContainer {
            skillSummariesDecoded0 = [AlexaForBusinessClientTypes.SkillSummary]()
            for structure0 in skillSummariesContainer {
                if let structure0 = structure0 {
                    skillSummariesDecoded0?.append(structure0)
                }
            }
        }
        skillSummaries = skillSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
