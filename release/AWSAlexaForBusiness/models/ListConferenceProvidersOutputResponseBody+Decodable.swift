// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConferenceProvidersOutputResponseBody: Swift.Equatable {
    let conferenceProviders: [AlexaForBusinessClientTypes.ConferenceProvider]?
    let nextToken: Swift.String?
}

extension ListConferenceProvidersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case conferenceProviders = "ConferenceProviders"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conferenceProvidersContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.ConferenceProvider?].self, forKey: .conferenceProviders)
        var conferenceProvidersDecoded0:[AlexaForBusinessClientTypes.ConferenceProvider]? = nil
        if let conferenceProvidersContainer = conferenceProvidersContainer {
            conferenceProvidersDecoded0 = [AlexaForBusinessClientTypes.ConferenceProvider]()
            for structure0 in conferenceProvidersContainer {
                if let structure0 = structure0 {
                    conferenceProvidersDecoded0?.append(structure0)
                }
            }
        }
        conferenceProviders = conferenceProvidersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
