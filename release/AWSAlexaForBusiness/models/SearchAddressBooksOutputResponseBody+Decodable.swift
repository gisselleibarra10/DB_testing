// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchAddressBooksOutputResponseBody: Swift.Equatable {
    let addressBooks: [AlexaForBusinessClientTypes.AddressBookData]?
    let nextToken: Swift.String?
    let totalCount: Swift.Int?
}

extension SearchAddressBooksOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case addressBooks = "AddressBooks"
        case nextToken = "NextToken"
        case totalCount = "TotalCount"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let addressBooksContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.AddressBookData?].self, forKey: .addressBooks)
        var addressBooksDecoded0:[AlexaForBusinessClientTypes.AddressBookData]? = nil
        if let addressBooksContainer = addressBooksContainer {
            addressBooksDecoded0 = [AlexaForBusinessClientTypes.AddressBookData]()
            for structure0 in addressBooksContainer {
                if let structure0 = structure0 {
                    addressBooksDecoded0?.append(structure0)
                }
            }
        }
        addressBooks = addressBooksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let totalCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
    }
}
