// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBusinessReportSchedulesOutputResponseBody: Swift.Equatable {
    let businessReportSchedules: [AlexaForBusinessClientTypes.BusinessReportSchedule]?
    let nextToken: Swift.String?
}

extension ListBusinessReportSchedulesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case businessReportSchedules = "BusinessReportSchedules"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let businessReportSchedulesContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.BusinessReportSchedule?].self, forKey: .businessReportSchedules)
        var businessReportSchedulesDecoded0:[AlexaForBusinessClientTypes.BusinessReportSchedule]? = nil
        if let businessReportSchedulesContainer = businessReportSchedulesContainer {
            businessReportSchedulesDecoded0 = [AlexaForBusinessClientTypes.BusinessReportSchedule]()
            for structure0 in businessReportSchedulesContainer {
                if let structure0 = structure0 {
                    businessReportSchedulesDecoded0?.append(structure0)
                }
            }
        }
        businessReportSchedules = businessReportSchedulesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
