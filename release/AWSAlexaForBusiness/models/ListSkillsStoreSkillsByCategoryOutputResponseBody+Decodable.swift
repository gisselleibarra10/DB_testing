// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSkillsStoreSkillsByCategoryOutputResponseBody: Swift.Equatable {
    let skillsStoreSkills: [AlexaForBusinessClientTypes.SkillsStoreSkill]?
    let nextToken: Swift.String?
}

extension ListSkillsStoreSkillsByCategoryOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case skillsStoreSkills = "SkillsStoreSkills"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let skillsStoreSkillsContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.SkillsStoreSkill?].self, forKey: .skillsStoreSkills)
        var skillsStoreSkillsDecoded0:[AlexaForBusinessClientTypes.SkillsStoreSkill]? = nil
        if let skillsStoreSkillsContainer = skillsStoreSkillsContainer {
            skillsStoreSkillsDecoded0 = [AlexaForBusinessClientTypes.SkillsStoreSkill]()
            for structure0 in skillsStoreSkillsContainer {
                if let structure0 = structure0 {
                    skillsStoreSkillsDecoded0?.append(structure0)
                }
            }
        }
        skillsStoreSkills = skillsStoreSkillsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
