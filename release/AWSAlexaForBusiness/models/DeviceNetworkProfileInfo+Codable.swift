// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AlexaForBusinessClientTypes.DeviceNetworkProfileInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateArn = "CertificateArn"
        case certificateExpirationTime = "CertificateExpirationTime"
        case networkProfileArn = "NetworkProfileArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificateArn = self.certificateArn {
            try encodeContainer.encode(certificateArn, forKey: .certificateArn)
        }
        if let certificateExpirationTime = self.certificateExpirationTime {
            try encodeContainer.encode(certificateExpirationTime.timeIntervalSince1970, forKey: .certificateExpirationTime)
        }
        if let networkProfileArn = self.networkProfileArn {
            try encodeContainer.encode(networkProfileArn, forKey: .networkProfileArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let networkProfileArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .networkProfileArn)
        networkProfileArn = networkProfileArnDecoded
        let certificateArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificateArn)
        certificateArn = certificateArnDecoded
        let certificateExpirationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .certificateExpirationTime)
        certificateExpirationTime = certificateExpirationTimeDecoded
    }
}
