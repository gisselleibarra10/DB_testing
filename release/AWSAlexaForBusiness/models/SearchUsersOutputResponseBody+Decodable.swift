// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchUsersOutputResponseBody: Swift.Equatable {
    let users: [AlexaForBusinessClientTypes.UserData]?
    let nextToken: Swift.String?
    let totalCount: Swift.Int?
}

extension SearchUsersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case totalCount = "TotalCount"
        case users = "Users"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let usersContainer = try containerValues.decodeIfPresent([AlexaForBusinessClientTypes.UserData?].self, forKey: .users)
        var usersDecoded0:[AlexaForBusinessClientTypes.UserData]? = nil
        if let usersContainer = usersContainer {
            usersDecoded0 = [AlexaForBusinessClientTypes.UserData]()
            for structure0 in usersContainer {
                if let structure0 = structure0 {
                    usersDecoded0?.append(structure0)
                }
            }
        }
        users = usersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let totalCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
    }
}
