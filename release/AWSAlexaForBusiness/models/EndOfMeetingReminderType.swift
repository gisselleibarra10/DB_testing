// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension AlexaForBusinessClientTypes {
    public enum EndOfMeetingReminderType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case announcementTimeCheck
        case announcementVariableTimeLeft
        case chime
        case knock
        case sdkUnknown(Swift.String)

        public static var allCases: [EndOfMeetingReminderType] {
            return [
                .announcementTimeCheck,
                .announcementVariableTimeLeft,
                .chime,
                .knock,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .announcementTimeCheck: return "ANNOUNCEMENT_TIME_CHECK"
            case .announcementVariableTimeLeft: return "ANNOUNCEMENT_VARIABLE_TIME_LEFT"
            case .chime: return "CHIME"
            case .knock: return "KNOCK"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = EndOfMeetingReminderType(rawValue: rawValue) ?? EndOfMeetingReminderType.sdkUnknown(rawValue)
        }
    }
}
