// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudHsmV2ClientTypes.Certificates: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case awsHardwareCertificate = "AwsHardwareCertificate"
        case clusterCertificate = "ClusterCertificate"
        case clusterCsr = "ClusterCsr"
        case hsmCertificate = "HsmCertificate"
        case manufacturerHardwareCertificate = "ManufacturerHardwareCertificate"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let awsHardwareCertificate = self.awsHardwareCertificate {
            try encodeContainer.encode(awsHardwareCertificate, forKey: .awsHardwareCertificate)
        }
        if let clusterCertificate = self.clusterCertificate {
            try encodeContainer.encode(clusterCertificate, forKey: .clusterCertificate)
        }
        if let clusterCsr = self.clusterCsr {
            try encodeContainer.encode(clusterCsr, forKey: .clusterCsr)
        }
        if let hsmCertificate = self.hsmCertificate {
            try encodeContainer.encode(hsmCertificate, forKey: .hsmCertificate)
        }
        if let manufacturerHardwareCertificate = self.manufacturerHardwareCertificate {
            try encodeContainer.encode(manufacturerHardwareCertificate, forKey: .manufacturerHardwareCertificate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterCsrDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterCsr)
        clusterCsr = clusterCsrDecoded
        let hsmCertificateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hsmCertificate)
        hsmCertificate = hsmCertificateDecoded
        let awsHardwareCertificateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .awsHardwareCertificate)
        awsHardwareCertificate = awsHardwareCertificateDecoded
        let manufacturerHardwareCertificateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .manufacturerHardwareCertificate)
        manufacturerHardwareCertificate = manufacturerHardwareCertificateDecoded
        let clusterCertificateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterCertificate)
        clusterCertificate = clusterCertificateDecoded
    }
}
