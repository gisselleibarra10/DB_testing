// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InitializeClusterInputBody: Swift.Equatable {
    let clusterId: Swift.String?
    let signedCert: Swift.String?
    let trustAnchor: Swift.String?
}

extension InitializeClusterInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusterId = "ClusterId"
        case signedCert = "SignedCert"
        case trustAnchor = "TrustAnchor"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterId)
        clusterId = clusterIdDecoded
        let signedCertDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .signedCert)
        signedCert = signedCertDecoded
        let trustAnchorDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .trustAnchor)
        trustAnchor = trustAnchorDecoded
    }
}
