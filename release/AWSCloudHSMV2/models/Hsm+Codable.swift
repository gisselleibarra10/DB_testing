// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudHsmV2ClientTypes.Hsm: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case availabilityZone = "AvailabilityZone"
        case clusterId = "ClusterId"
        case eniId = "EniId"
        case eniIp = "EniIp"
        case hsmId = "HsmId"
        case state = "State"
        case stateMessage = "StateMessage"
        case subnetId = "SubnetId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let availabilityZone = self.availabilityZone {
            try encodeContainer.encode(availabilityZone, forKey: .availabilityZone)
        }
        if let clusterId = self.clusterId {
            try encodeContainer.encode(clusterId, forKey: .clusterId)
        }
        if let eniId = self.eniId {
            try encodeContainer.encode(eniId, forKey: .eniId)
        }
        if let eniIp = self.eniIp {
            try encodeContainer.encode(eniIp, forKey: .eniIp)
        }
        if let hsmId = self.hsmId {
            try encodeContainer.encode(hsmId, forKey: .hsmId)
        }
        if let state = self.state {
            try encodeContainer.encode(state.rawValue, forKey: .state)
        }
        if let stateMessage = self.stateMessage {
            try encodeContainer.encode(stateMessage, forKey: .stateMessage)
        }
        if let subnetId = self.subnetId {
            try encodeContainer.encode(subnetId, forKey: .subnetId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let availabilityZoneDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .availabilityZone)
        availabilityZone = availabilityZoneDecoded
        let clusterIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterId)
        clusterId = clusterIdDecoded
        let subnetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .subnetId)
        subnetId = subnetIdDecoded
        let eniIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eniId)
        eniId = eniIdDecoded
        let eniIpDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eniIp)
        eniIp = eniIpDecoded
        let hsmIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hsmId)
        hsmId = hsmIdDecoded
        let stateDecoded = try containerValues.decodeIfPresent(CloudHsmV2ClientTypes.HsmState.self, forKey: .state)
        state = stateDecoded
        let stateMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stateMessage)
        stateMessage = stateMessageDecoded
    }
}
