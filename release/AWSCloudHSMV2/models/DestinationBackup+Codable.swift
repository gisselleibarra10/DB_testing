// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudHsmV2ClientTypes.DestinationBackup: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case createTimestamp = "CreateTimestamp"
        case sourceBackup = "SourceBackup"
        case sourceCluster = "SourceCluster"
        case sourceRegion = "SourceRegion"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createTimestamp = self.createTimestamp {
            try encodeContainer.encode(createTimestamp.timeIntervalSince1970, forKey: .createTimestamp)
        }
        if let sourceBackup = self.sourceBackup {
            try encodeContainer.encode(sourceBackup, forKey: .sourceBackup)
        }
        if let sourceCluster = self.sourceCluster {
            try encodeContainer.encode(sourceCluster, forKey: .sourceCluster)
        }
        if let sourceRegion = self.sourceRegion {
            try encodeContainer.encode(sourceRegion, forKey: .sourceRegion)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let createTimestampDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createTimestamp)
        createTimestamp = createTimestampDecoded
        let sourceRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceRegion)
        sourceRegion = sourceRegionDecoded
        let sourceBackupDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceBackup)
        sourceBackup = sourceBackupDecoded
        let sourceClusterDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceCluster)
        sourceCluster = sourceClusterDecoded
    }
}
