// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConfigurationSetInputBody: Swift.Equatable {
    let configurationSetName: Swift.String?
    let configurationSetAttributeNames: [SesClientTypes.ConfigurationSetAttribute]?
}

extension DescribeConfigurationSetInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurationSetAttributeNames = "ConfigurationSetAttributeNames"
        case configurationSetName = "ConfigurationSetName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationSetNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .configurationSetName)
        configurationSetName = configurationSetNameDecoded
        if containerValues.contains(.configurationSetAttributeNames) {
            struct KeyVal0{struct member{}}
            let configurationSetAttributeNamesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .configurationSetAttributeNames)
            if let configurationSetAttributeNamesWrappedContainer = configurationSetAttributeNamesWrappedContainer {
                let configurationSetAttributeNamesContainer = try configurationSetAttributeNamesWrappedContainer.decodeIfPresent([SesClientTypes.ConfigurationSetAttribute].self, forKey: .member)
                var configurationSetAttributeNamesBuffer:[SesClientTypes.ConfigurationSetAttribute]? = nil
                if let configurationSetAttributeNamesContainer = configurationSetAttributeNamesContainer {
                    configurationSetAttributeNamesBuffer = [SesClientTypes.ConfigurationSetAttribute]()
                    for stringContainer0 in configurationSetAttributeNamesContainer {
                        configurationSetAttributeNamesBuffer?.append(stringContainer0)
                    }
                }
                configurationSetAttributeNames = configurationSetAttributeNamesBuffer
            } else {
                configurationSetAttributeNames = []
            }
        } else {
            configurationSetAttributeNames = nil
        }
    }
}
