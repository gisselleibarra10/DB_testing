// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SesClientTypes.BounceAction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case message = "Message"
        case sender = "Sender"
        case smtpReplyCode = "SmtpReplyCode"
        case statusCode = "StatusCode"
        case topicArn = "TopicArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: ClientRuntime.Key.self)
        if let message = message {
            try container.encode(message, forKey: ClientRuntime.Key("Message"))
        }
        if let sender = sender {
            try container.encode(sender, forKey: ClientRuntime.Key("Sender"))
        }
        if let smtpReplyCode = smtpReplyCode {
            try container.encode(smtpReplyCode, forKey: ClientRuntime.Key("SmtpReplyCode"))
        }
        if let statusCode = statusCode {
            try container.encode(statusCode, forKey: ClientRuntime.Key("StatusCode"))
        }
        if let topicArn = topicArn {
            try container.encode(topicArn, forKey: ClientRuntime.Key("TopicArn"))
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let topicArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .topicArn)
        topicArn = topicArnDecoded
        let smtpReplyCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .smtpReplyCode)
        smtpReplyCode = smtpReplyCodeDecoded
        let statusCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusCode)
        statusCode = statusCodeDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
        let senderDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sender)
        sender = senderDecoded
    }
}
