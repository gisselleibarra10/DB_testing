// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SesClientTypes {
    /// An action that Amazon SES can take when it receives an email on behalf of one or more email addresses or domains that you own. An instance of this data type can represent only one action. For information about setting up receipt rules, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html).
    public struct ReceiptAction: Swift.Equatable {
        /// Adds a header to the received email.
        public var addHeaderAction: SesClientTypes.AddHeaderAction?
        /// Rejects the received email by returning a bounce response to the sender and, optionally, publishes a notification to Amazon Simple Notification Service (Amazon SNS).
        public var bounceAction: SesClientTypes.BounceAction?
        /// Calls an AWS Lambda function, and optionally, publishes a notification to Amazon SNS.
        public var lambdaAction: SesClientTypes.LambdaAction?
        /// Saves the received message to an Amazon Simple Storage Service (Amazon S3) bucket and, optionally, publishes a notification to Amazon SNS.
        public var s3Action: SesClientTypes.S3Action?
        /// Publishes the email content within a notification to Amazon SNS.
        public var sNSAction: SesClientTypes.SNSAction?
        /// Terminates the evaluation of the receipt rule set and optionally publishes a notification to Amazon SNS.
        public var stopAction: SesClientTypes.StopAction?
        /// Calls Amazon WorkMail and, optionally, publishes a notification to Amazon Amazon SNS.
        public var workmailAction: SesClientTypes.WorkmailAction?

        public init (
            addHeaderAction: SesClientTypes.AddHeaderAction? = nil,
            bounceAction: SesClientTypes.BounceAction? = nil,
            lambdaAction: SesClientTypes.LambdaAction? = nil,
            s3Action: SesClientTypes.S3Action? = nil,
            sNSAction: SesClientTypes.SNSAction? = nil,
            stopAction: SesClientTypes.StopAction? = nil,
            workmailAction: SesClientTypes.WorkmailAction? = nil
        )
        {
            self.addHeaderAction = addHeaderAction
            self.bounceAction = bounceAction
            self.lambdaAction = lambdaAction
            self.s3Action = s3Action
            self.sNSAction = sNSAction
            self.stopAction = stopAction
            self.workmailAction = workmailAction
        }
    }

}
