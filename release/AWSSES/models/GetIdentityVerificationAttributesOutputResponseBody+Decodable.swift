// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetIdentityVerificationAttributesOutputResponseBody: Swift.Equatable {
    let verificationAttributes: [Swift.String:SesClientTypes.IdentityVerificationAttributes]?
}

extension GetIdentityVerificationAttributesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case verificationAttributes = "VerificationAttributes"
    }

    public init (from decoder: Swift.Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: ClientRuntime.Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: ClientRuntime.Key("GetIdentityVerificationAttributesResult"))
        if containerValues.contains(.verificationAttributes) {
            struct KeyVal0{struct key{}; struct value{}}
            let verificationAttributesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: ClientRuntime.MapEntry<Swift.String, SesClientTypes.IdentityVerificationAttributes, KeyVal0.key, KeyVal0.value>.CodingKeys.self, forKey: .verificationAttributes)
            if let verificationAttributesWrappedContainer = verificationAttributesWrappedContainer {
                let verificationAttributesContainer = try verificationAttributesWrappedContainer.decodeIfPresent([ClientRuntime.MapKeyValue<Swift.String, SesClientTypes.IdentityVerificationAttributes, KeyVal0.key, KeyVal0.value>].self, forKey: .entry)
                var verificationAttributesBuffer: [Swift.String:SesClientTypes.IdentityVerificationAttributes]? = nil
                if let verificationAttributesContainer = verificationAttributesContainer {
                    verificationAttributesBuffer = [Swift.String:SesClientTypes.IdentityVerificationAttributes]()
                    for structureContainer0 in verificationAttributesContainer {
                        verificationAttributesBuffer?[structureContainer0.key] = structureContainer0.value
                    }
                }
                verificationAttributes = verificationAttributesBuffer
            } else {
                verificationAttributes = [:]
            }
        } else {
            verificationAttributes = nil
        }
    }
}
