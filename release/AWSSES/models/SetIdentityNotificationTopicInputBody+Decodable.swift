// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SetIdentityNotificationTopicInputBody: Swift.Equatable {
    let identity: Swift.String?
    let notificationType: SesClientTypes.NotificationType?
    let snsTopic: Swift.String?
}

extension SetIdentityNotificationTopicInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case identity = "Identity"
        case notificationType = "NotificationType"
        case snsTopic = "SnsTopic"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identity)
        identity = identityDecoded
        let notificationTypeDecoded = try containerValues.decodeIfPresent(SesClientTypes.NotificationType.self, forKey: .notificationType)
        notificationType = notificationTypeDecoded
        let snsTopicDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snsTopic)
        snsTopic = snsTopicDecoded
    }
}
