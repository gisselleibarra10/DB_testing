// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrClientTypes.ScalingAction: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case market = "Market"
        case simpleScalingPolicyConfiguration = "SimpleScalingPolicyConfiguration"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let market = self.market {
            try encodeContainer.encode(market.rawValue, forKey: .market)
        }
        if let simpleScalingPolicyConfiguration = self.simpleScalingPolicyConfiguration {
            try encodeContainer.encode(simpleScalingPolicyConfiguration, forKey: .simpleScalingPolicyConfiguration)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let marketDecoded = try containerValues.decodeIfPresent(EmrClientTypes.MarketType.self, forKey: .market)
        market = marketDecoded
        let simpleScalingPolicyConfigurationDecoded = try containerValues.decodeIfPresent(EmrClientTypes.SimpleScalingPolicyConfiguration.self, forKey: .simpleScalingPolicyConfiguration)
        simpleScalingPolicyConfiguration = simpleScalingPolicyConfigurationDecoded
    }
}
