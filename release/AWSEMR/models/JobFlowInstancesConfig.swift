// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EmrClientTypes {
    /// A description of the Amazon EC2 instance on which the cluster (job flow) runs. A valid JobFlowInstancesConfig must contain either InstanceGroups or InstanceFleets. They cannot be used together. You may also have MasterInstanceType, SlaveInstanceType, and InstanceCount (all three must be present), but we don't recommend this configuration.
    public struct JobFlowInstancesConfig: Swift.Equatable {
        /// A list of additional Amazon EC2 security group IDs for the master node.
        public var additionalMasterSecurityGroups: [Swift.String]?
        /// A list of additional Amazon EC2 security group IDs for the core and task nodes.
        public var additionalSlaveSecurityGroups: [Swift.String]?
        /// The name of the EC2 key pair that can be used to connect to the master node using SSH as the user called "hadoop."
        public var ec2KeyName: Swift.String?
        /// Applies to clusters that use the uniform instance group configuration. To launch the cluster in Amazon Virtual Private Cloud (Amazon VPC), set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify this value and your account supports EC2-Classic, the cluster launches in EC2-Classic.
        public var ec2SubnetId: Swift.String?
        /// Applies to clusters that use the instance fleet configuration. When multiple EC2 subnet IDs are specified, Amazon EMR evaluates them and launches instances in the optimal subnet. The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.
        public var ec2SubnetIds: [Swift.String]?
        /// The identifier of the Amazon EC2 security group for the master node. If you specify EmrManagedMasterSecurityGroup, you must also specify EmrManagedSlaveSecurityGroup.
        public var emrManagedMasterSecurityGroup: Swift.String?
        /// The identifier of the Amazon EC2 security group for the core and task nodes. If you specify EmrManagedSlaveSecurityGroup, you must also specify EmrManagedMasterSecurityGroup.
        public var emrManagedSlaveSecurityGroup: Swift.String?
        /// Applies only to Amazon EMR release versions earlier than 4.0. The Hadoop version for the cluster. Valid inputs are "0.18" (no longer maintained), "0.20" (no longer maintained), "0.20.205" (no longer maintained), "1.0.3", "2.2.0", or "2.4.0". If you do not set this value, the default of 0.18 is used, unless the AmiVersion parameter is set in the RunJobFlow call, in which case the default version of Hadoop for that AMI version is used.
        public var hadoopVersion: Swift.String?
        /// The number of EC2 instances in the cluster.
        public var instanceCount: Swift.Int?
        /// The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. Describes the EC2 instances and instance configurations for clusters that use the instance fleet configuration.
        public var instanceFleets: [EmrClientTypes.InstanceFleetConfig]?
        /// Configuration for the instance groups in a cluster.
        public var instanceGroups: [EmrClientTypes.InstanceGroupConfig]?
        /// Specifies whether the cluster should remain available after completing all steps. Defaults to true. For more information about configuring cluster termination, see [Control Cluster Termination](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html) in the EMR Management Guide.
        public var keepJobFlowAliveWhenNoSteps: Swift.Bool
        /// The EC2 instance type of the master node.
        public var masterInstanceType: Swift.String?
        /// The Availability Zone in which the cluster runs.
        public var placement: EmrClientTypes.PlacementType?
        /// The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.
        public var serviceAccessSecurityGroup: Swift.String?
        /// The EC2 instance type of the core and task nodes.
        public var slaveInstanceType: Swift.String?
        /// Specifies whether to lock the cluster to prevent the Amazon EC2 instances from being terminated by API call, user intervention, or in the event of a job-flow error.
        public var terminationProtected: Swift.Bool

        public init (
            additionalMasterSecurityGroups: [Swift.String]? = nil,
            additionalSlaveSecurityGroups: [Swift.String]? = nil,
            ec2KeyName: Swift.String? = nil,
            ec2SubnetId: Swift.String? = nil,
            ec2SubnetIds: [Swift.String]? = nil,
            emrManagedMasterSecurityGroup: Swift.String? = nil,
            emrManagedSlaveSecurityGroup: Swift.String? = nil,
            hadoopVersion: Swift.String? = nil,
            instanceCount: Swift.Int? = nil,
            instanceFleets: [EmrClientTypes.InstanceFleetConfig]? = nil,
            instanceGroups: [EmrClientTypes.InstanceGroupConfig]? = nil,
            keepJobFlowAliveWhenNoSteps: Swift.Bool = false,
            masterInstanceType: Swift.String? = nil,
            placement: EmrClientTypes.PlacementType? = nil,
            serviceAccessSecurityGroup: Swift.String? = nil,
            slaveInstanceType: Swift.String? = nil,
            terminationProtected: Swift.Bool = false
        )
        {
            self.additionalMasterSecurityGroups = additionalMasterSecurityGroups
            self.additionalSlaveSecurityGroups = additionalSlaveSecurityGroups
            self.ec2KeyName = ec2KeyName
            self.ec2SubnetId = ec2SubnetId
            self.ec2SubnetIds = ec2SubnetIds
            self.emrManagedMasterSecurityGroup = emrManagedMasterSecurityGroup
            self.emrManagedSlaveSecurityGroup = emrManagedSlaveSecurityGroup
            self.hadoopVersion = hadoopVersion
            self.instanceCount = instanceCount
            self.instanceFleets = instanceFleets
            self.instanceGroups = instanceGroups
            self.keepJobFlowAliveWhenNoSteps = keepJobFlowAliveWhenNoSteps
            self.masterInstanceType = masterInstanceType
            self.placement = placement
            self.serviceAccessSecurityGroup = serviceAccessSecurityGroup
            self.slaveInstanceType = slaveInstanceType
            self.terminationProtected = terminationProtected
        }
    }

}
