// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrClientTypes.OnDemandProvisioningSpecification: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case allocationStrategy = "AllocationStrategy"
        case capacityReservationOptions = "CapacityReservationOptions"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allocationStrategy = self.allocationStrategy {
            try encodeContainer.encode(allocationStrategy.rawValue, forKey: .allocationStrategy)
        }
        if let capacityReservationOptions = self.capacityReservationOptions {
            try encodeContainer.encode(capacityReservationOptions, forKey: .capacityReservationOptions)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allocationStrategyDecoded = try containerValues.decodeIfPresent(EmrClientTypes.OnDemandProvisioningAllocationStrategy.self, forKey: .allocationStrategy)
        allocationStrategy = allocationStrategyDecoded
        let capacityReservationOptionsDecoded = try containerValues.decodeIfPresent(EmrClientTypes.OnDemandCapacityReservationOptions.self, forKey: .capacityReservationOptions)
        capacityReservationOptions = capacityReservationOptionsDecoded
    }
}
