// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrClientTypes.SessionMappingDetail: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationTime = "CreationTime"
        case identityId = "IdentityId"
        case identityName = "IdentityName"
        case identityType = "IdentityType"
        case lastModifiedTime = "LastModifiedTime"
        case sessionPolicyArn = "SessionPolicyArn"
        case studioId = "StudioId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = self.creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let identityId = self.identityId {
            try encodeContainer.encode(identityId, forKey: .identityId)
        }
        if let identityName = self.identityName {
            try encodeContainer.encode(identityName, forKey: .identityName)
        }
        if let identityType = self.identityType {
            try encodeContainer.encode(identityType.rawValue, forKey: .identityType)
        }
        if let lastModifiedTime = self.lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
        if let sessionPolicyArn = self.sessionPolicyArn {
            try encodeContainer.encode(sessionPolicyArn, forKey: .sessionPolicyArn)
        }
        if let studioId = self.studioId {
            try encodeContainer.encode(studioId, forKey: .studioId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let studioIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .studioId)
        studioId = studioIdDecoded
        let identityIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityId)
        identityId = identityIdDecoded
        let identityNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .identityName)
        identityName = identityNameDecoded
        let identityTypeDecoded = try containerValues.decodeIfPresent(EmrClientTypes.IdentityType.self, forKey: .identityType)
        identityType = identityTypeDecoded
        let sessionPolicyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sessionPolicyArn)
        sessionPolicyArn = sessionPolicyArnDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
    }
}
