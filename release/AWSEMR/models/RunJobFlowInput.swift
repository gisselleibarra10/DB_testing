// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Input to the [RunJobFlow] operation.
public struct RunJobFlowInput: Swift.Equatable {
    /// A JSON string for selecting additional features.
    public var additionalInfo: Swift.String?
    /// Applies only to Amazon EMR AMI versions 3.x and 2.x. For Amazon EMR releases 4.0 and later, ReleaseLabel is used. To specify a custom AMI, use CustomAmiID.
    public var amiVersion: Swift.String?
    /// Applies to Amazon EMR releases 4.0 and later. A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMRRelease Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/).
    public var applications: [EmrClientTypes.Application]?
    /// An IAM role for automatic scaling policies. The default role is EMR_AutoScaling_DefaultRole. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
    public var autoScalingRole: Swift.String?
    /// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. For alternative cluster termination options, see [Control cluster termination](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html).
    public var autoTerminationPolicy: EmrClientTypes.AutoTerminationPolicy?
    /// A list of bootstrap actions to run before Hadoop starts on the cluster nodes.
    public var bootstrapActions: [EmrClientTypes.BootstrapActionConfig]?
    /// For Amazon EMR releases 4.0 and later. The list of configurations supplied for the EMR cluster you are creating.
    public var configurations: [EmrClientTypes.Configuration]?
    /// Available only in Amazon EMR version 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI. If specified, Amazon EMR uses this AMI when it launches cluster EC2 instances. For more information about custom AMIs in Amazon EMR, see [Using a Custom AMI](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-custom-ami.html) in the Amazon EMR Management Guide. If omitted, the cluster uses the base Linux AMI for the ReleaseLabel specified. For Amazon EMR versions 2.x and 3.x, use AmiVersion instead. For information about creating a custom AMI, see [Creating an Amazon EBS-Backed Linux AMI](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html) in the Amazon Elastic Compute Cloud User Guide for Linux Instances. For information about finding an AMI ID, see [Finding a Linux AMI](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html).
    public var customAmiId: Swift.String?
    /// The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
    public var ebsRootVolumeSize: Swift.Int?
    /// A specification of the number and type of Amazon EC2 instances.
    /// This member is required.
    public var instances: EmrClientTypes.JobFlowInstancesConfig?
    /// Also called instance profile and EC2 role. An IAM role for an EMR cluster. The EC2 instances of the cluster assume this role. The default role is EMR_EC2_DefaultRole. In order to use the default role, you must have already created it using the CLI or console.
    public var jobFlowRole: Swift.String?
    /// Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration. For more information see [Use Kerberos Authentication](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html) in the Amazon EMR Management Guide.
    public var kerberosAttributes: EmrClientTypes.KerberosAttributes?
    /// The KMS key used for encrypting log files. If a value is not provided, the logs remain encrypted by AES-256. This attribute is only available with Amazon EMR version 5.30.0 and later, excluding Amazon EMR 6.0.0.
    public var logEncryptionKmsKeyId: Swift.String?
    /// The location in Amazon S3 to write the log files of the job flow. If a value is not provided, logs are not created.
    public var logUri: Swift.String?
    /// The specified managed scaling policy for an Amazon EMR cluster.
    public var managedScalingPolicy: EmrClientTypes.ManagedScalingPolicy?
    /// The name of the job flow.
    /// This member is required.
    public var name: Swift.String?
    /// For Amazon EMR releases 3.x and 2.x. For Amazon EMR releases 4.x and later, use Applications. A list of strings that indicates third-party software to use with the job flow that accepts a user argument list. EMR accepts and forwards the argument list to the corresponding installation script as bootstrap action arguments. For more information, see "Launch a Job Flow on the MapR Distribution for Hadoop" in the [Amazon EMR Developer Guide](https://docs.aws.amazon.com/emr/latest/DeveloperGuide/emr-dg.pdf). Supported values are:
    ///
    /// * "mapr-m3" - launch the cluster using MapR M3 Edition.
    ///
    /// * "mapr-m5" - launch the cluster using MapR M5 Edition.
    ///
    /// * "mapr" with the user arguments specifying "--edition,m3" or "--edition,m5" - launch the job flow using MapR M3 or M5 Edition respectively.
    ///
    /// * "mapr-m7" - launch the cluster using MapR M7 Edition.
    ///
    /// * "hunk" - launch the cluster with the Hunk Big Data Analytics Platform.
    ///
    /// * "hue"- launch the cluster with Hue installed.
    ///
    /// * "spark" - launch the cluster with Apache Spark installed.
    ///
    /// * "ganglia" - launch the cluster with the Ganglia Monitoring System installed.
    public var newSupportedProducts: [EmrClientTypes.SupportedProductConfig]?
    /// Specifies a particular Amazon Linux release for all nodes in a cluster launch RunJobFlow request. If a release is not specified, Amazon EMR uses the latest validated Amazon Linux release for cluster launch.
    public var oSReleaseLabel: Swift.String?
    /// The specified placement group configuration for an Amazon EMR cluster.
    public var placementGroupConfigs: [EmrClientTypes.PlacementGroupConfig]?
    /// The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster. Release labels are in the form emr-x.x.x, where x.x.x is an Amazon EMR release version such as emr-5.14.0. For more information about Amazon EMR release versions and included application versions and features, see [https://docs.aws.amazon.com/emr/latest/ReleaseGuide/](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/). The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use AmiVersion.
    public var releaseLabel: Swift.String?
    /// Applies only when CustomAmiID is used. Specifies which updates from the Amazon Linux AMI package repositories to apply automatically when the instance boots using the AMI. If omitted, the default is SECURITY, which indicates that only security updates are applied. If NONE is specified, no updates are applied, and all updates must be applied manually.
    public var repoUpgradeOnBoot: EmrClientTypes.RepoUpgradeOnBoot?
    /// Specifies the way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized. TERMINATE_AT_INSTANCE_HOUR indicates that Amazon EMR terminates nodes at the instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option is only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version. TERMINATE_AT_TASK_COMPLETION indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could lead to HDFS corruption. TERMINATE_AT_TASK_COMPLETION available only in Amazon EMR version 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.
    public var scaleDownBehavior: EmrClientTypes.ScaleDownBehavior?
    /// The name of a security configuration to apply to the cluster.
    public var securityConfiguration: Swift.String?
    /// The IAM role that Amazon EMR assumes in order to access Amazon Web Services resources on your behalf.
    public var serviceRole: Swift.String?
    /// Specifies the number of steps that can be executed concurrently. The default value is 1. The maximum value is 256.
    public var stepConcurrencyLevel: Swift.Int?
    /// A list of steps to run.
    public var steps: [EmrClientTypes.StepConfig]?
    /// For Amazon EMR releases 3.x and 2.x. For Amazon EMR releases 4.x and later, use Applications. A list of strings that indicates third-party software to use. For more information, see the [Amazon EMR Developer Guide](https://docs.aws.amazon.com/emr/latest/DeveloperGuide/emr-dg.pdf). Currently supported values are:
    ///
    /// * "mapr-m3" - launch the job flow using MapR M3 Edition.
    ///
    /// * "mapr-m5" - launch the job flow using MapR M5 Edition.
    public var supportedProducts: [Swift.String]?
    /// A list of tags to associate with a cluster and propagate to Amazon EC2 instances.
    public var tags: [EmrClientTypes.Tag]?
    /// The VisibleToAllUsers parameter is no longer supported. By default, the value is set to true. Setting it to false now has no effect. Set this value to true so that IAM principals in the Amazon Web Services account associated with the cluster can perform EMR actions on the cluster that their IAM policies allow. This value defaults to true for clusters created using the EMR API or the CLI [create-cluster](https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html) command. When set to false, only the IAM principal that created the cluster and the Amazon Web Services account root user can perform EMR actions for the cluster, regardless of the IAM permissions policies attached to other IAM principals. For more information, see [Understanding the EMR Cluster VisibleToAllUsers Setting](https://docs.aws.amazon.com/emr/latest/ManagementGuide/security_iam_emr-with-iam.html#security_set_visible_to_all_users) in the Amazon EMRManagement Guide.
    public var visibleToAllUsers: Swift.Bool

    public init (
        additionalInfo: Swift.String? = nil,
        amiVersion: Swift.String? = nil,
        applications: [EmrClientTypes.Application]? = nil,
        autoScalingRole: Swift.String? = nil,
        autoTerminationPolicy: EmrClientTypes.AutoTerminationPolicy? = nil,
        bootstrapActions: [EmrClientTypes.BootstrapActionConfig]? = nil,
        configurations: [EmrClientTypes.Configuration]? = nil,
        customAmiId: Swift.String? = nil,
        ebsRootVolumeSize: Swift.Int? = nil,
        instances: EmrClientTypes.JobFlowInstancesConfig? = nil,
        jobFlowRole: Swift.String? = nil,
        kerberosAttributes: EmrClientTypes.KerberosAttributes? = nil,
        logEncryptionKmsKeyId: Swift.String? = nil,
        logUri: Swift.String? = nil,
        managedScalingPolicy: EmrClientTypes.ManagedScalingPolicy? = nil,
        name: Swift.String? = nil,
        newSupportedProducts: [EmrClientTypes.SupportedProductConfig]? = nil,
        oSReleaseLabel: Swift.String? = nil,
        placementGroupConfigs: [EmrClientTypes.PlacementGroupConfig]? = nil,
        releaseLabel: Swift.String? = nil,
        repoUpgradeOnBoot: EmrClientTypes.RepoUpgradeOnBoot? = nil,
        scaleDownBehavior: EmrClientTypes.ScaleDownBehavior? = nil,
        securityConfiguration: Swift.String? = nil,
        serviceRole: Swift.String? = nil,
        stepConcurrencyLevel: Swift.Int? = nil,
        steps: [EmrClientTypes.StepConfig]? = nil,
        supportedProducts: [Swift.String]? = nil,
        tags: [EmrClientTypes.Tag]? = nil,
        visibleToAllUsers: Swift.Bool = false
    )
    {
        self.additionalInfo = additionalInfo
        self.amiVersion = amiVersion
        self.applications = applications
        self.autoScalingRole = autoScalingRole
        self.autoTerminationPolicy = autoTerminationPolicy
        self.bootstrapActions = bootstrapActions
        self.configurations = configurations
        self.customAmiId = customAmiId
        self.ebsRootVolumeSize = ebsRootVolumeSize
        self.instances = instances
        self.jobFlowRole = jobFlowRole
        self.kerberosAttributes = kerberosAttributes
        self.logEncryptionKmsKeyId = logEncryptionKmsKeyId
        self.logUri = logUri
        self.managedScalingPolicy = managedScalingPolicy
        self.name = name
        self.newSupportedProducts = newSupportedProducts
        self.oSReleaseLabel = oSReleaseLabel
        self.placementGroupConfigs = placementGroupConfigs
        self.releaseLabel = releaseLabel
        self.repoUpgradeOnBoot = repoUpgradeOnBoot
        self.scaleDownBehavior = scaleDownBehavior
        self.securityConfiguration = securityConfiguration
        self.serviceRole = serviceRole
        self.stepConcurrencyLevel = stepConcurrencyLevel
        self.steps = steps
        self.supportedProducts = supportedProducts
        self.tags = tags
        self.visibleToAllUsers = visibleToAllUsers
    }
}
