// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddInstanceGroupsOutputResponseBody: Swift.Equatable {
    let jobFlowId: Swift.String?
    let instanceGroupIds: [Swift.String]?
    let clusterArn: Swift.String?
}

extension AddInstanceGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusterArn = "ClusterArn"
        case instanceGroupIds = "InstanceGroupIds"
        case jobFlowId = "JobFlowId"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobFlowIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobFlowId)
        jobFlowId = jobFlowIdDecoded
        let instanceGroupIdsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .instanceGroupIds)
        var instanceGroupIdsDecoded0:[Swift.String]? = nil
        if let instanceGroupIdsContainer = instanceGroupIdsContainer {
            instanceGroupIdsDecoded0 = [Swift.String]()
            for string0 in instanceGroupIdsContainer {
                if let string0 = string0 {
                    instanceGroupIdsDecoded0?.append(string0)
                }
            }
        }
        instanceGroupIds = instanceGroupIdsDecoded0
        let clusterArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .clusterArn)
        clusterArn = clusterArnDecoded
    }
}
