// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListInstanceFleetsOutputResponseBody: Swift.Equatable {
    let instanceFleets: [EmrClientTypes.InstanceFleet]?
    let marker: Swift.String?
}

extension ListInstanceFleetsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case instanceFleets = "InstanceFleets"
        case marker = "Marker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceFleetsContainer = try containerValues.decodeIfPresent([EmrClientTypes.InstanceFleet?].self, forKey: .instanceFleets)
        var instanceFleetsDecoded0:[EmrClientTypes.InstanceFleet]? = nil
        if let instanceFleetsContainer = instanceFleetsContainer {
            instanceFleetsDecoded0 = [EmrClientTypes.InstanceFleet]()
            for structure0 in instanceFleetsContainer {
                if let structure0 = structure0 {
                    instanceFleetsDecoded0?.append(structure0)
                }
            }
        }
        instanceFleets = instanceFleetsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
