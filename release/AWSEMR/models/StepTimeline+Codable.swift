// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrClientTypes.StepTimeline: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationDateTime = "CreationDateTime"
        case endDateTime = "EndDateTime"
        case startDateTime = "StartDateTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationDateTime = self.creationDateTime {
            try encodeContainer.encode(creationDateTime.timeIntervalSince1970, forKey: .creationDateTime)
        }
        if let endDateTime = self.endDateTime {
            try encodeContainer.encode(endDateTime.timeIntervalSince1970, forKey: .endDateTime)
        }
        if let startDateTime = self.startDateTime {
            try encodeContainer.encode(startDateTime.timeIntervalSince1970, forKey: .startDateTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let creationDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDateTime)
        creationDateTime = creationDateTimeDecoded
        let startDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startDateTime)
        startDateTime = startDateTimeDecoded
        let endDateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .endDateTime)
        endDateTime = endDateTimeDecoded
    }
}
