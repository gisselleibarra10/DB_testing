// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNotebookExecutionsOutputResponseBody: Swift.Equatable {
    let notebookExecutions: [EmrClientTypes.NotebookExecutionSummary]?
    let marker: Swift.String?
}

extension ListNotebookExecutionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case notebookExecutions = "NotebookExecutions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let notebookExecutionsContainer = try containerValues.decodeIfPresent([EmrClientTypes.NotebookExecutionSummary?].self, forKey: .notebookExecutions)
        var notebookExecutionsDecoded0:[EmrClientTypes.NotebookExecutionSummary]? = nil
        if let notebookExecutionsContainer = notebookExecutionsContainer {
            notebookExecutionsDecoded0 = [EmrClientTypes.NotebookExecutionSummary]()
            for structure0 in notebookExecutionsContainer {
                if let structure0 = structure0 {
                    notebookExecutionsDecoded0?.append(structure0)
                }
            }
        }
        notebookExecutions = notebookExecutionsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
