// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBootstrapActionsOutputResponseBody: Swift.Equatable {
    let bootstrapActions: [EmrClientTypes.Command]?
    let marker: Swift.String?
}

extension ListBootstrapActionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bootstrapActions = "BootstrapActions"
        case marker = "Marker"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bootstrapActionsContainer = try containerValues.decodeIfPresent([EmrClientTypes.Command?].self, forKey: .bootstrapActions)
        var bootstrapActionsDecoded0:[EmrClientTypes.Command]? = nil
        if let bootstrapActionsContainer = bootstrapActionsContainer {
            bootstrapActionsDecoded0 = [EmrClientTypes.Command]()
            for structure0 in bootstrapActionsContainer {
                if let structure0 = structure0 {
                    bootstrapActionsDecoded0?.append(structure0)
                }
            }
        }
        bootstrapActions = bootstrapActionsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
