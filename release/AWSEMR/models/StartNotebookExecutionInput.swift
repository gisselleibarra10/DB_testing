// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartNotebookExecutionInput: Swift.Equatable {
    /// The unique identifier of the EMR Notebook to use for notebook execution.
    /// This member is required.
    public var editorId: Swift.String?
    /// Specifies the execution engine (cluster) that runs the notebook execution.
    /// This member is required.
    public var executionEngine: EmrClientTypes.ExecutionEngineConfig?
    /// An optional name for the notebook execution.
    public var notebookExecutionName: Swift.String?
    /// The unique identifier of the Amazon EC2 security group to associate with the EMR Notebook for this notebook execution.
    public var notebookInstanceSecurityGroupId: Swift.String?
    /// Input parameters in JSON format passed to the EMR Notebook at runtime for execution.
    public var notebookParams: Swift.String?
    /// The path and file name of the notebook file for this execution, relative to the path specified for the EMR Notebook. For example, if you specify a path of s3://MyBucket/MyNotebooks when you create an EMR Notebook for a notebook with an ID of e-ABCDEFGHIJK1234567890ABCD (the EditorID of this request), and you specify a RelativePath of my_notebook_executions/notebook_execution.ipynb, the location of the file for the notebook execution is s3://MyBucket/MyNotebooks/e-ABCDEFGHIJK1234567890ABCD/my_notebook_executions/notebook_execution.ipynb.
    /// This member is required.
    public var relativePath: Swift.String?
    /// The name or ARN of the IAM role that is used as the service role for Amazon EMR (the EMR role) for the notebook execution.
    /// This member is required.
    public var serviceRole: Swift.String?
    /// A list of tags associated with a notebook execution. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters and an optional value string with a maximum of 256 characters.
    public var tags: [EmrClientTypes.Tag]?

    public init (
        editorId: Swift.String? = nil,
        executionEngine: EmrClientTypes.ExecutionEngineConfig? = nil,
        notebookExecutionName: Swift.String? = nil,
        notebookInstanceSecurityGroupId: Swift.String? = nil,
        notebookParams: Swift.String? = nil,
        relativePath: Swift.String? = nil,
        serviceRole: Swift.String? = nil,
        tags: [EmrClientTypes.Tag]? = nil
    )
    {
        self.editorId = editorId
        self.executionEngine = executionEngine
        self.notebookExecutionName = notebookExecutionName
        self.notebookInstanceSecurityGroupId = notebookInstanceSecurityGroupId
        self.notebookParams = notebookParams
        self.relativePath = relativePath
        self.serviceRole = serviceRole
        self.tags = tags
    }
}
