// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EmrClientTypes {
    /// Configuration defining a new instance group.
    public struct InstanceGroupConfig: Swift.Equatable {
        /// An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. See [PutAutoScalingPolicy].
        public var autoScalingPolicy: EmrClientTypes.AutoScalingPolicy?
        /// If specified, indicates that the instance group uses Spot Instances. This is the maximum price you are willing to pay for Spot Instances. Specify OnDemandPrice to set the amount equal to the On-Demand price, or specify an amount in USD.
        public var bidPrice: Swift.String?
        /// Amazon EMR releases 4.x or later. The list of configurations supplied for an EMR cluster instance group. You can specify a separate configuration for each instance group (master, core, and task).
        public var configurations: [EmrClientTypes.Configuration]?
        /// The custom AMI ID to use for the provisioned instance group.
        public var customAmiId: Swift.String?
        /// EBS configurations that will be attached to each EC2 instance in the instance group.
        public var ebsConfiguration: EmrClientTypes.EbsConfiguration?
        /// Target number of instances for the instance group.
        /// This member is required.
        public var instanceCount: Swift.Int?
        /// The role of the instance group in the cluster.
        /// This member is required.
        public var instanceRole: EmrClientTypes.InstanceRoleType?
        /// The EC2 instance type for all instances in the instance group.
        /// This member is required.
        public var instanceType: Swift.String?
        /// Market type of the EC2 instances used to create a cluster node.
        public var market: EmrClientTypes.MarketType?
        /// Friendly name given to the instance group.
        public var name: Swift.String?

        public init (
            autoScalingPolicy: EmrClientTypes.AutoScalingPolicy? = nil,
            bidPrice: Swift.String? = nil,
            configurations: [EmrClientTypes.Configuration]? = nil,
            customAmiId: Swift.String? = nil,
            ebsConfiguration: EmrClientTypes.EbsConfiguration? = nil,
            instanceCount: Swift.Int? = nil,
            instanceRole: EmrClientTypes.InstanceRoleType? = nil,
            instanceType: Swift.String? = nil,
            market: EmrClientTypes.MarketType? = nil,
            name: Swift.String? = nil
        )
        {
            self.autoScalingPolicy = autoScalingPolicy
            self.bidPrice = bidPrice
            self.configurations = configurations
            self.customAmiId = customAmiId
            self.ebsConfiguration = ebsConfiguration
            self.instanceCount = instanceCount
            self.instanceRole = instanceRole
            self.instanceType = instanceType
            self.market = market
            self.name = name
        }
    }

}
