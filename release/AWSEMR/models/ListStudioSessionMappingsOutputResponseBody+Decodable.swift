// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStudioSessionMappingsOutputResponseBody: Swift.Equatable {
    let sessionMappings: [EmrClientTypes.SessionMappingSummary]?
    let marker: Swift.String?
}

extension ListStudioSessionMappingsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case sessionMappings = "SessionMappings"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sessionMappingsContainer = try containerValues.decodeIfPresent([EmrClientTypes.SessionMappingSummary?].self, forKey: .sessionMappings)
        var sessionMappingsDecoded0:[EmrClientTypes.SessionMappingSummary]? = nil
        if let sessionMappingsContainer = sessionMappingsContainer {
            sessionMappingsDecoded0 = [EmrClientTypes.SessionMappingSummary]()
            for structure0 in sessionMappingsContainer {
                if let structure0 = structure0 {
                    sessionMappingsDecoded0?.append(structure0)
                }
            }
        }
        sessionMappings = sessionMappingsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
