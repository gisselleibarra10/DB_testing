// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListNotebookExecutionsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case editorId = "EditorId"
        case from = "From"
        case marker = "Marker"
        case status = "Status"
        case to = "To"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let editorId = self.editorId {
            try encodeContainer.encode(editorId, forKey: .editorId)
        }
        if let from = self.from {
            try encodeContainer.encode(from.timeIntervalSince1970, forKey: .from)
        }
        if let marker = self.marker {
            try encodeContainer.encode(marker, forKey: .marker)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let to = self.to {
            try encodeContainer.encode(to.timeIntervalSince1970, forKey: .to)
        }
    }
}
