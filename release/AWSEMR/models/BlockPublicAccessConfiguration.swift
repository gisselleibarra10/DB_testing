// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension EmrClientTypes {
    /// A configuration for Amazon EMR block public access. When BlockPublicSecurityGroupRules is set to true, Amazon EMR prevents cluster creation if one of the cluster's security groups has a rule that allows inbound traffic from 0.0.0.0/0 or ::/0 on a port, unless the port is specified as an exception using PermittedPublicSecurityGroupRuleRanges.
    public struct BlockPublicAccessConfiguration: Swift.Equatable {
        /// Indicates whether Amazon EMR block public access is enabled (true) or disabled (false). By default, the value is false for accounts that have created EMR clusters before July 2019. For accounts created after this, the default is true.
        /// This member is required.
        public var blockPublicSecurityGroupRules: Swift.Bool
        /// The classification within a configuration.
        public var classification: Swift.String?
        /// A list of additional configurations to apply within a configuration object.
        public var configurations: [EmrClientTypes.Configuration]?
        /// Specifies ports and port ranges that are permitted to have security group rules that allow inbound traffic from all public sources. For example, if Port 23 (Telnet) is specified for PermittedPublicSecurityGroupRuleRanges, Amazon EMR allows cluster creation if a security group associated with the cluster has a rule that allows inbound traffic on Port 23 from IPv4 0.0.0.0/0 or IPv6 port ::/0 as the source. By default, Port 22, which is used for SSH access to the cluster EC2 instances, is in the list of PermittedPublicSecurityGroupRuleRanges.
        public var permittedPublicSecurityGroupRuleRanges: [EmrClientTypes.PortRange]?
        /// A set of properties specified within a configuration classification.
        public var properties: [Swift.String:Swift.String]?

        public init (
            blockPublicSecurityGroupRules: Swift.Bool = false,
            classification: Swift.String? = nil,
            configurations: [EmrClientTypes.Configuration]? = nil,
            permittedPublicSecurityGroupRuleRanges: [EmrClientTypes.PortRange]? = nil,
            properties: [Swift.String:Swift.String]? = nil
        )
        {
            self.blockPublicSecurityGroupRules = blockPublicSecurityGroupRules
            self.classification = classification
            self.configurations = configurations
            self.permittedPublicSecurityGroupRuleRanges = permittedPublicSecurityGroupRuleRanges
            self.properties = properties
        }
    }

}
