// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrClientTypes.StepSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionOnFailure = "ActionOnFailure"
        case config = "Config"
        case id = "Id"
        case name = "Name"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionOnFailure = self.actionOnFailure {
            try encodeContainer.encode(actionOnFailure.rawValue, forKey: .actionOnFailure)
        }
        if let config = self.config {
            try encodeContainer.encode(config, forKey: .config)
        }
        if let id = self.id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .id)
        id = idDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let configDecoded = try containerValues.decodeIfPresent(EmrClientTypes.HadoopStepConfig.self, forKey: .config)
        config = configDecoded
        let actionOnFailureDecoded = try containerValues.decodeIfPresent(EmrClientTypes.ActionOnFailure.self, forKey: .actionOnFailure)
        actionOnFailure = actionOnFailureDecoded
        let statusDecoded = try containerValues.decodeIfPresent(EmrClientTypes.StepStatus.self, forKey: .status)
        status = statusDecoded
    }
}
