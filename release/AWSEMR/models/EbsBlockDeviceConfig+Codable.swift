// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrClientTypes.EbsBlockDeviceConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case volumeSpecification = "VolumeSpecification"
        case volumesPerInstance = "VolumesPerInstance"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let volumeSpecification = self.volumeSpecification {
            try encodeContainer.encode(volumeSpecification, forKey: .volumeSpecification)
        }
        if let volumesPerInstance = self.volumesPerInstance {
            try encodeContainer.encode(volumesPerInstance, forKey: .volumesPerInstance)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let volumeSpecificationDecoded = try containerValues.decodeIfPresent(EmrClientTypes.VolumeSpecification.self, forKey: .volumeSpecification)
        volumeSpecification = volumeSpecificationDecoded
        let volumesPerInstanceDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .volumesPerInstance)
        volumesPerInstance = volumesPerInstanceDecoded
    }
}
