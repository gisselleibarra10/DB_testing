// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrClientTypes.OnDemandCapacityReservationOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case capacityReservationPreference = "CapacityReservationPreference"
        case capacityReservationResourceGroupArn = "CapacityReservationResourceGroupArn"
        case usageStrategy = "UsageStrategy"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let capacityReservationPreference = self.capacityReservationPreference {
            try encodeContainer.encode(capacityReservationPreference.rawValue, forKey: .capacityReservationPreference)
        }
        if let capacityReservationResourceGroupArn = self.capacityReservationResourceGroupArn {
            try encodeContainer.encode(capacityReservationResourceGroupArn, forKey: .capacityReservationResourceGroupArn)
        }
        if let usageStrategy = self.usageStrategy {
            try encodeContainer.encode(usageStrategy.rawValue, forKey: .usageStrategy)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let usageStrategyDecoded = try containerValues.decodeIfPresent(EmrClientTypes.OnDemandCapacityReservationUsageStrategy.self, forKey: .usageStrategy)
        usageStrategy = usageStrategyDecoded
        let capacityReservationPreferenceDecoded = try containerValues.decodeIfPresent(EmrClientTypes.OnDemandCapacityReservationPreference.self, forKey: .capacityReservationPreference)
        capacityReservationPreference = capacityReservationPreferenceDecoded
        let capacityReservationResourceGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .capacityReservationResourceGroupArn)
        capacityReservationResourceGroupArn = capacityReservationResourceGroupArnDecoded
    }
}
