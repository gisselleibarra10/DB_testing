// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddJobFlowStepsInputBody: Swift.Equatable {
    let jobFlowId: Swift.String?
    let steps: [EmrClientTypes.StepConfig]?
    let executionRoleArn: Swift.String?
}

extension AddJobFlowStepsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case executionRoleArn = "ExecutionRoleArn"
        case jobFlowId = "JobFlowId"
        case steps = "Steps"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobFlowIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobFlowId)
        jobFlowId = jobFlowIdDecoded
        let stepsContainer = try containerValues.decodeIfPresent([EmrClientTypes.StepConfig?].self, forKey: .steps)
        var stepsDecoded0:[EmrClientTypes.StepConfig]? = nil
        if let stepsContainer = stepsContainer {
            stepsDecoded0 = [EmrClientTypes.StepConfig]()
            for structure0 in stepsContainer {
                if let structure0 = structure0 {
                    stepsDecoded0?.append(structure0)
                }
            }
        }
        steps = stepsDecoded0
        let executionRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .executionRoleArn)
        executionRoleArn = executionRoleArnDecoded
    }
}
