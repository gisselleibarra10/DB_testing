// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrClientTypes.SimpleScalingPolicyConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case adjustmentType = "AdjustmentType"
        case coolDown = "CoolDown"
        case scalingAdjustment = "ScalingAdjustment"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let adjustmentType = self.adjustmentType {
            try encodeContainer.encode(adjustmentType.rawValue, forKey: .adjustmentType)
        }
        if let coolDown = self.coolDown {
            try encodeContainer.encode(coolDown, forKey: .coolDown)
        }
        if let scalingAdjustment = self.scalingAdjustment {
            try encodeContainer.encode(scalingAdjustment, forKey: .scalingAdjustment)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let adjustmentTypeDecoded = try containerValues.decodeIfPresent(EmrClientTypes.AdjustmentType.self, forKey: .adjustmentType)
        adjustmentType = adjustmentTypeDecoded
        let scalingAdjustmentDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .scalingAdjustment)
        scalingAdjustment = scalingAdjustmentDecoded
        let coolDownDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .coolDown)
        coolDown = coolDownDecoded
    }
}
