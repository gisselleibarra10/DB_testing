// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStepsOutputResponseBody: Swift.Equatable {
    let steps: [EmrClientTypes.StepSummary]?
    let marker: Swift.String?
}

extension ListStepsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case steps = "Steps"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stepsContainer = try containerValues.decodeIfPresent([EmrClientTypes.StepSummary?].self, forKey: .steps)
        var stepsDecoded0:[EmrClientTypes.StepSummary]? = nil
        if let stepsContainer = stepsContainer {
            stepsDecoded0 = [EmrClientTypes.StepSummary]()
            for structure0 in stepsContainer {
                if let structure0 = structure0 {
                    stepsDecoded0?.append(structure0)
                }
            }
        }
        steps = stepsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
