// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmrClientTypes.InstanceFleetModifyConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case instanceFleetId = "InstanceFleetId"
        case targetOnDemandCapacity = "TargetOnDemandCapacity"
        case targetSpotCapacity = "TargetSpotCapacity"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let instanceFleetId = self.instanceFleetId {
            try encodeContainer.encode(instanceFleetId, forKey: .instanceFleetId)
        }
        if let targetOnDemandCapacity = self.targetOnDemandCapacity {
            try encodeContainer.encode(targetOnDemandCapacity, forKey: .targetOnDemandCapacity)
        }
        if let targetSpotCapacity = self.targetSpotCapacity {
            try encodeContainer.encode(targetSpotCapacity, forKey: .targetSpotCapacity)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceFleetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceFleetId)
        instanceFleetId = instanceFleetIdDecoded
        let targetOnDemandCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .targetOnDemandCapacity)
        targetOnDemandCapacity = targetOnDemandCapacityDecoded
        let targetSpotCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .targetSpotCapacity)
        targetSpotCapacity = targetSpotCapacityDecoded
    }
}
