// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListClustersInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case clusterStates = "ClusterStates"
        case createdAfter = "CreatedAfter"
        case createdBefore = "CreatedBefore"
        case marker = "Marker"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clusterStates = clusterStates {
            var clusterStatesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .clusterStates)
            for clusterstatelist0 in clusterStates {
                try clusterStatesContainer.encode(clusterstatelist0.rawValue)
            }
        }
        if let createdAfter = self.createdAfter {
            try encodeContainer.encode(createdAfter.timeIntervalSince1970, forKey: .createdAfter)
        }
        if let createdBefore = self.createdBefore {
            try encodeContainer.encode(createdBefore.timeIntervalSince1970, forKey: .createdBefore)
        }
        if let marker = self.marker {
            try encodeContainer.encode(marker, forKey: .marker)
        }
    }
}
