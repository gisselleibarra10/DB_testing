// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStudiosOutputResponseBody: Swift.Equatable {
    let studios: [EmrClientTypes.StudioSummary]?
    let marker: Swift.String?
}

extension ListStudiosOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case marker = "Marker"
        case studios = "Studios"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let studiosContainer = try containerValues.decodeIfPresent([EmrClientTypes.StudioSummary?].self, forKey: .studios)
        var studiosDecoded0:[EmrClientTypes.StudioSummary]? = nil
        if let studiosContainer = studiosContainer {
            studiosDecoded0 = [EmrClientTypes.StudioSummary]()
            for structure0 in studiosContainer {
                if let structure0 = structure0 {
                    studiosDecoded0?.append(structure0)
                }
            }
        }
        studios = studiosDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .marker)
        marker = markerDecoded
    }
}
