// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMembersOutputResponseBody: Swift.Equatable {
    let memberDetails: [DetectiveClientTypes.MemberDetail]?
    let nextToken: Swift.String?
}

extension ListMembersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case memberDetails = "MemberDetails"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let memberDetailsContainer = try containerValues.decodeIfPresent([DetectiveClientTypes.MemberDetail?].self, forKey: .memberDetails)
        var memberDetailsDecoded0:[DetectiveClientTypes.MemberDetail]? = nil
        if let memberDetailsContainer = memberDetailsContainer {
            memberDetailsDecoded0 = [DetectiveClientTypes.MemberDetail]()
            for structure0 in memberDetailsContainer {
                if let structure0 = structure0 {
                    memberDetailsDecoded0?.append(structure0)
                }
            }
        }
        memberDetails = memberDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
