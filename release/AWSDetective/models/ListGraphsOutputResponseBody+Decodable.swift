// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGraphsOutputResponseBody: Swift.Equatable {
    let graphList: [DetectiveClientTypes.Graph]?
    let nextToken: Swift.String?
}

extension ListGraphsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case graphList = "GraphList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let graphListContainer = try containerValues.decodeIfPresent([DetectiveClientTypes.Graph?].self, forKey: .graphList)
        var graphListDecoded0:[DetectiveClientTypes.Graph]? = nil
        if let graphListContainer = graphListContainer {
            graphListDecoded0 = [DetectiveClientTypes.Graph]()
            for structure0 in graphListContainer {
                if let structure0 = structure0 {
                    graphListDecoded0?.append(structure0)
                }
            }
        }
        graphList = graphListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
