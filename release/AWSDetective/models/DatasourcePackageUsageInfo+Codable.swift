// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DetectiveClientTypes.DatasourcePackageUsageInfo: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case volumeUsageInBytes = "VolumeUsageInBytes"
        case volumeUsageUpdateTime = "VolumeUsageUpdateTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let volumeUsageInBytes = self.volumeUsageInBytes {
            try encodeContainer.encode(volumeUsageInBytes, forKey: .volumeUsageInBytes)
        }
        if let volumeUsageUpdateTime = self.volumeUsageUpdateTime {
            try encodeContainer.encode(volumeUsageUpdateTime.timeIntervalSince1970, forKey: .volumeUsageUpdateTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let volumeUsageInBytesDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .volumeUsageInBytes)
        volumeUsageInBytes = volumeUsageInBytesDecoded
        let volumeUsageUpdateTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .volumeUsageUpdateTime)
        volumeUsageUpdateTime = volumeUsageUpdateTimeDecoded
    }
}
