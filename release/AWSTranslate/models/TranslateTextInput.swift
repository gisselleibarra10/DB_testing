// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct TranslateTextInput: Swift.Equatable {
    /// Settings to configure your translation output, including the option to set the formality level of the output text and the option to mask profane words and phrases.
    public var settings: TranslateClientTypes.TranslationSettings?
    /// The language code for the language of the source text. The language must be a language supported by Amazon Translate. For a list of language codes, see [what-is-languages]. To have Amazon Translate determine the source language of your text, you can specify auto in the SourceLanguageCode field. If you specify auto, Amazon Translate will call [Amazon Comprehend](https://docs.aws.amazon.com/comprehend/latest/dg/comprehend-general.html) to determine the source language. If you specify auto, you must send the TranslateText request in a region that supports Amazon Comprehend. Otherwise, the request returns an error indicating that autodetect is not supported.
    /// This member is required.
    public var sourceLanguageCode: Swift.String?
    /// The language code requested for the language of the target text. The language must be a language supported by Amazon Translate.
    /// This member is required.
    public var targetLanguageCode: Swift.String?
    /// The name of the terminology list file to be used in the TranslateText request. You can use 1 terminology list at most in a TranslateText request. Terminology lists can contain a maximum of 256 terms.
    public var terminologyNames: [Swift.String]?
    /// The text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.
    /// This member is required.
    public var text: Swift.String?

    public init (
        settings: TranslateClientTypes.TranslationSettings? = nil,
        sourceLanguageCode: Swift.String? = nil,
        targetLanguageCode: Swift.String? = nil,
        terminologyNames: [Swift.String]? = nil,
        text: Swift.String? = nil
    )
    {
        self.settings = settings
        self.sourceLanguageCode = sourceLanguageCode
        self.targetLanguageCode = targetLanguageCode
        self.terminologyNames = terminologyNames
        self.text = text
    }
}
