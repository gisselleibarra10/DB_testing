// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTerminologyOutputResponseBody: Swift.Equatable {
    let terminologyProperties: TranslateClientTypes.TerminologyProperties?
    let terminologyDataLocation: TranslateClientTypes.TerminologyDataLocation?
    let auxiliaryDataLocation: TranslateClientTypes.TerminologyDataLocation?
}

extension GetTerminologyOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case auxiliaryDataLocation = "AuxiliaryDataLocation"
        case terminologyDataLocation = "TerminologyDataLocation"
        case terminologyProperties = "TerminologyProperties"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let terminologyPropertiesDecoded = try containerValues.decodeIfPresent(TranslateClientTypes.TerminologyProperties.self, forKey: .terminologyProperties)
        terminologyProperties = terminologyPropertiesDecoded
        let terminologyDataLocationDecoded = try containerValues.decodeIfPresent(TranslateClientTypes.TerminologyDataLocation.self, forKey: .terminologyDataLocation)
        terminologyDataLocation = terminologyDataLocationDecoded
        let auxiliaryDataLocationDecoded = try containerValues.decodeIfPresent(TranslateClientTypes.TerminologyDataLocation.self, forKey: .auxiliaryDataLocation)
        auxiliaryDataLocation = auxiliaryDataLocationDecoded
    }
}
