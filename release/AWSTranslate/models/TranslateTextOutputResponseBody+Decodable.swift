// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TranslateTextOutputResponseBody: Swift.Equatable {
    let translatedText: Swift.String?
    let sourceLanguageCode: Swift.String?
    let targetLanguageCode: Swift.String?
    let appliedTerminologies: [TranslateClientTypes.AppliedTerminology]?
    let appliedSettings: TranslateClientTypes.TranslationSettings?
}

extension TranslateTextOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case appliedSettings = "AppliedSettings"
        case appliedTerminologies = "AppliedTerminologies"
        case sourceLanguageCode = "SourceLanguageCode"
        case targetLanguageCode = "TargetLanguageCode"
        case translatedText = "TranslatedText"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let translatedTextDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .translatedText)
        translatedText = translatedTextDecoded
        let sourceLanguageCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sourceLanguageCode)
        sourceLanguageCode = sourceLanguageCodeDecoded
        let targetLanguageCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .targetLanguageCode)
        targetLanguageCode = targetLanguageCodeDecoded
        let appliedTerminologiesContainer = try containerValues.decodeIfPresent([TranslateClientTypes.AppliedTerminology?].self, forKey: .appliedTerminologies)
        var appliedTerminologiesDecoded0:[TranslateClientTypes.AppliedTerminology]? = nil
        if let appliedTerminologiesContainer = appliedTerminologiesContainer {
            appliedTerminologiesDecoded0 = [TranslateClientTypes.AppliedTerminology]()
            for structure0 in appliedTerminologiesContainer {
                if let structure0 = structure0 {
                    appliedTerminologiesDecoded0?.append(structure0)
                }
            }
        }
        appliedTerminologies = appliedTerminologiesDecoded0
        let appliedSettingsDecoded = try containerValues.decodeIfPresent(TranslateClientTypes.TranslationSettings.self, forKey: .appliedSettings)
        appliedSettings = appliedSettingsDecoded
    }
}
