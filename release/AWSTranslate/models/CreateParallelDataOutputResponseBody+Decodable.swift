// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateParallelDataOutputResponseBody: Swift.Equatable {
    let name: Swift.String?
    let status: TranslateClientTypes.ParallelDataStatus?
}

extension CreateParallelDataOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name = "Name"
        case status = "Status"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(TranslateClientTypes.ParallelDataStatus.self, forKey: .status)
        status = statusDecoded
    }
}
