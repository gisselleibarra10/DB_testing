// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTextTranslationJobsOutputResponseBody: Swift.Equatable {
    let textTranslationJobPropertiesList: [TranslateClientTypes.TextTranslationJobProperties]?
    let nextToken: Swift.String?
}

extension ListTextTranslationJobsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case textTranslationJobPropertiesList = "TextTranslationJobPropertiesList"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let textTranslationJobPropertiesListContainer = try containerValues.decodeIfPresent([TranslateClientTypes.TextTranslationJobProperties?].self, forKey: .textTranslationJobPropertiesList)
        var textTranslationJobPropertiesListDecoded0:[TranslateClientTypes.TextTranslationJobProperties]? = nil
        if let textTranslationJobPropertiesListContainer = textTranslationJobPropertiesListContainer {
            textTranslationJobPropertiesListDecoded0 = [TranslateClientTypes.TextTranslationJobProperties]()
            for structure0 in textTranslationJobPropertiesListContainer {
                if let structure0 = structure0 {
                    textTranslationJobPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        textTranslationJobPropertiesList = textTranslationJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
