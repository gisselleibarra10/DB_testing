// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TranslateClientTypes {
    /// The properties of a parallel data resource.
    public struct ParallelDataProperties: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the parallel data resource.
        public var arn: Swift.String?
        /// The time at which the parallel data resource was created.
        public var createdAt: ClientRuntime.Date?
        /// The description assigned to the parallel data resource.
        public var description: Swift.String?
        /// The encryption key used to encrypt this object.
        public var encryptionKey: TranslateClientTypes.EncryptionKey?
        /// The number of records unsuccessfully imported from the parallel data input file.
        public var failedRecordCount: Swift.Int?
        /// The number of UTF-8 characters that Amazon Translate imported from the parallel data input file. This number includes only the characters in your translation examples. It does not include characters that are used to format your file. For example, if you provided a Translation Memory Exchange (.tmx) file, this number does not include the tags.
        public var importedDataSize: Swift.Int?
        /// The number of records successfully imported from the parallel data input file.
        public var importedRecordCount: Swift.Int?
        /// The time at which the parallel data resource was last updated.
        public var lastUpdatedAt: ClientRuntime.Date?
        /// The time that the most recent update was attempted.
        public var latestUpdateAttemptAt: ClientRuntime.Date?
        /// The status of the most recent update attempt for the parallel data resource.
        public var latestUpdateAttemptStatus: TranslateClientTypes.ParallelDataStatus?
        /// Additional information from Amazon Translate about the parallel data resource.
        public var message: Swift.String?
        /// The custom name assigned to the parallel data resource.
        public var name: Swift.String?
        /// Specifies the format and S3 location of the parallel data input file.
        public var parallelDataConfig: TranslateClientTypes.ParallelDataConfig?
        /// The number of items in the input file that Amazon Translate skipped when you created or updated the parallel data resource. For example, Amazon Translate skips empty records, empty target texts, and empty lines.
        public var skippedRecordCount: Swift.Int?
        /// The source language of the translations in the parallel data file.
        public var sourceLanguageCode: Swift.String?
        /// The status of the parallel data resource. When the parallel data is ready for you to use, the status is ACTIVE.
        public var status: TranslateClientTypes.ParallelDataStatus?
        /// The language codes for the target languages available in the parallel data file. All possible target languages are returned as an array.
        public var targetLanguageCodes: [Swift.String]?

        public init (
            arn: Swift.String? = nil,
            createdAt: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            encryptionKey: TranslateClientTypes.EncryptionKey? = nil,
            failedRecordCount: Swift.Int? = nil,
            importedDataSize: Swift.Int? = nil,
            importedRecordCount: Swift.Int? = nil,
            lastUpdatedAt: ClientRuntime.Date? = nil,
            latestUpdateAttemptAt: ClientRuntime.Date? = nil,
            latestUpdateAttemptStatus: TranslateClientTypes.ParallelDataStatus? = nil,
            message: Swift.String? = nil,
            name: Swift.String? = nil,
            parallelDataConfig: TranslateClientTypes.ParallelDataConfig? = nil,
            skippedRecordCount: Swift.Int? = nil,
            sourceLanguageCode: Swift.String? = nil,
            status: TranslateClientTypes.ParallelDataStatus? = nil,
            targetLanguageCodes: [Swift.String]? = nil
        )
        {
            self.arn = arn
            self.createdAt = createdAt
            self.description = description
            self.encryptionKey = encryptionKey
            self.failedRecordCount = failedRecordCount
            self.importedDataSize = importedDataSize
            self.importedRecordCount = importedRecordCount
            self.lastUpdatedAt = lastUpdatedAt
            self.latestUpdateAttemptAt = latestUpdateAttemptAt
            self.latestUpdateAttemptStatus = latestUpdateAttemptStatus
            self.message = message
            self.name = name
            self.parallelDataConfig = parallelDataConfig
            self.skippedRecordCount = skippedRecordCount
            self.sourceLanguageCode = sourceLanguageCode
            self.status = status
            self.targetLanguageCodes = targetLanguageCodes
        }
    }

}
