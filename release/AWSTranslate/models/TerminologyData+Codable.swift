// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TranslateClientTypes.TerminologyData: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case directionality = "Directionality"
        case file = "File"
        case format = "Format"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let directionality = self.directionality {
            try encodeContainer.encode(directionality.rawValue, forKey: .directionality)
        }
        if let file = self.file {
            try encodeContainer.encode(file.base64EncodedString(), forKey: .file)
        }
        if let format = self.format {
            try encodeContainer.encode(format.rawValue, forKey: .format)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fileDecoded = try containerValues.decodeIfPresent(ClientRuntime.Data.self, forKey: .file)
        file = fileDecoded
        let formatDecoded = try containerValues.decodeIfPresent(TranslateClientTypes.TerminologyDataFormat.self, forKey: .format)
        format = formatDecoded
        let directionalityDecoded = try containerValues.decodeIfPresent(TranslateClientTypes.Directionality.self, forKey: .directionality)
        directionality = directionalityDecoded
    }
}
