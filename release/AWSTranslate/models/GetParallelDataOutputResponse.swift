// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetParallelDataOutputResponse: Swift.Equatable {
    /// The Amazon S3 location of a file that provides any errors or warnings that were produced by your input file. This file was created when Amazon Translate attempted to create a parallel data resource. The location is returned as a presigned URL to that has a 30-minute expiration.
    public var auxiliaryDataLocation: TranslateClientTypes.ParallelDataDataLocation?
    /// The Amazon S3 location of the most recent parallel data input file that was successfully imported into Amazon Translate. The location is returned as a presigned URL that has a 30-minute expiration. Amazon Translate doesn't scan all input files for the risk of CSV injection attacks. CSV injection occurs when a .csv or .tsv file is altered so that a record contains malicious code. The record begins with a special character, such as =, +, -, or @. When the file is opened in a spreadsheet program, the program might interpret the record as a formula and run the code within it. Before you download an input file from Amazon S3, ensure that you recognize the file and trust its creator.
    public var dataLocation: TranslateClientTypes.ParallelDataDataLocation?
    /// The Amazon S3 location of a file that provides any errors or warnings that were produced by your input file. This file was created when Amazon Translate attempted to update a parallel data resource. The location is returned as a presigned URL to that has a 30-minute expiration.
    public var latestUpdateAttemptAuxiliaryDataLocation: TranslateClientTypes.ParallelDataDataLocation?
    /// The properties of the parallel data resource that is being retrieved.
    public var parallelDataProperties: TranslateClientTypes.ParallelDataProperties?

    public init (
        auxiliaryDataLocation: TranslateClientTypes.ParallelDataDataLocation? = nil,
        dataLocation: TranslateClientTypes.ParallelDataDataLocation? = nil,
        latestUpdateAttemptAuxiliaryDataLocation: TranslateClientTypes.ParallelDataDataLocation? = nil,
        parallelDataProperties: TranslateClientTypes.ParallelDataProperties? = nil
    )
    {
        self.auxiliaryDataLocation = auxiliaryDataLocation
        self.dataLocation = dataLocation
        self.latestUpdateAttemptAuxiliaryDataLocation = latestUpdateAttemptAuxiliaryDataLocation
        self.parallelDataProperties = parallelDataProperties
    }
}
