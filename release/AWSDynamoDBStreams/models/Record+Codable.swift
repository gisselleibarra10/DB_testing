// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DynamoDbStreamsClientTypes.Record: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case awsRegion
        case dynamodb
        case eventID
        case eventName
        case eventSource
        case eventVersion
        case userIdentity
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let awsRegion = self.awsRegion {
            try encodeContainer.encode(awsRegion, forKey: .awsRegion)
        }
        if let dynamodb = self.dynamodb {
            try encodeContainer.encode(dynamodb, forKey: .dynamodb)
        }
        if let eventID = self.eventID {
            try encodeContainer.encode(eventID, forKey: .eventID)
        }
        if let eventName = self.eventName {
            try encodeContainer.encode(eventName.rawValue, forKey: .eventName)
        }
        if let eventSource = self.eventSource {
            try encodeContainer.encode(eventSource, forKey: .eventSource)
        }
        if let eventVersion = self.eventVersion {
            try encodeContainer.encode(eventVersion, forKey: .eventVersion)
        }
        if let userIdentity = self.userIdentity {
            try encodeContainer.encode(userIdentity, forKey: .userIdentity)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventIDDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventID)
        eventID = eventIDDecoded
        let eventNameDecoded = try containerValues.decodeIfPresent(DynamoDbStreamsClientTypes.OperationType.self, forKey: .eventName)
        eventName = eventNameDecoded
        let eventVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventVersion)
        eventVersion = eventVersionDecoded
        let eventSourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eventSource)
        eventSource = eventSourceDecoded
        let awsRegionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .awsRegion)
        awsRegion = awsRegionDecoded
        let dynamodbDecoded = try containerValues.decodeIfPresent(DynamoDbStreamsClientTypes.StreamRecord.self, forKey: .dynamodb)
        dynamodb = dynamodbDecoded
        let userIdentityDecoded = try containerValues.decodeIfPresent(DynamoDbStreamsClientTypes.Identity.self, forKey: .userIdentity)
        userIdentity = userIdentityDecoded
    }
}
