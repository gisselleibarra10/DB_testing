// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamsInputBody: Swift.Equatable {
    let tableName: Swift.String?
    let limit: Swift.Int?
    let exclusiveStartStreamArn: Swift.String?
}

extension ListStreamsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case exclusiveStartStreamArn = "ExclusiveStartStreamArn"
        case limit = "Limit"
        case tableName = "TableName"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .limit)
        limit = limitDecoded
        let exclusiveStartStreamArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .exclusiveStartStreamArn)
        exclusiveStartStreamArn = exclusiveStartStreamArnDecoded
    }
}
