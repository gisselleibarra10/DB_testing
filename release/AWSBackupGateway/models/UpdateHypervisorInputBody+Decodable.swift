// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateHypervisorInputBody: Swift.Equatable {
    let hypervisorArn: Swift.String?
    let host: Swift.String?
    let username: Swift.String?
    let password: Swift.String?
    let name: Swift.String?
}

extension UpdateHypervisorInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case host = "Host"
        case hypervisorArn = "HypervisorArn"
        case name = "Name"
        case password = "Password"
        case username = "Username"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hypervisorArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hypervisorArn)
        hypervisorArn = hypervisorArnDecoded
        let hostDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .host)
        host = hostDecoded
        let usernameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .username)
        username = usernameDecoded
        let passwordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .password)
        password = passwordDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
    }
}
