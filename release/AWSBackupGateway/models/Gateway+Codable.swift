// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BackupGatewayClientTypes.Gateway: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case gatewayArn = "GatewayArn"
        case gatewayDisplayName = "GatewayDisplayName"
        case gatewayType = "GatewayType"
        case hypervisorId = "HypervisorId"
        case lastSeenTime = "LastSeenTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let gatewayArn = self.gatewayArn {
            try encodeContainer.encode(gatewayArn, forKey: .gatewayArn)
        }
        if let gatewayDisplayName = self.gatewayDisplayName {
            try encodeContainer.encode(gatewayDisplayName, forKey: .gatewayDisplayName)
        }
        if let gatewayType = self.gatewayType {
            try encodeContainer.encode(gatewayType.rawValue, forKey: .gatewayType)
        }
        if let hypervisorId = self.hypervisorId {
            try encodeContainer.encode(hypervisorId, forKey: .hypervisorId)
        }
        if let lastSeenTime = self.lastSeenTime {
            try encodeContainer.encode(lastSeenTime.timeIntervalSince1970, forKey: .lastSeenTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gatewayArn)
        gatewayArn = gatewayArnDecoded
        let gatewayDisplayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .gatewayDisplayName)
        gatewayDisplayName = gatewayDisplayNameDecoded
        let gatewayTypeDecoded = try containerValues.decodeIfPresent(BackupGatewayClientTypes.GatewayType.self, forKey: .gatewayType)
        gatewayType = gatewayTypeDecoded
        let hypervisorIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hypervisorId)
        hypervisorId = hypervisorIdDecoded
        let lastSeenTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastSeenTime)
        lastSeenTime = lastSeenTimeDecoded
    }
}
