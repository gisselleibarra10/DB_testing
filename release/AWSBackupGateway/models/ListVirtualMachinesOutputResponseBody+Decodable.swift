// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVirtualMachinesOutputResponseBody: Swift.Equatable {
    let virtualMachines: [BackupGatewayClientTypes.VirtualMachine]?
    let nextToken: Swift.String?
}

extension ListVirtualMachinesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken = "NextToken"
        case virtualMachines = "VirtualMachines"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let virtualMachinesContainer = try containerValues.decodeIfPresent([BackupGatewayClientTypes.VirtualMachine?].self, forKey: .virtualMachines)
        var virtualMachinesDecoded0:[BackupGatewayClientTypes.VirtualMachine]? = nil
        if let virtualMachinesContainer = virtualMachinesContainer {
            virtualMachinesDecoded0 = [BackupGatewayClientTypes.VirtualMachine]()
            for structure0 in virtualMachinesContainer {
                if let structure0 = structure0 {
                    virtualMachinesDecoded0?.append(structure0)
                }
            }
        }
        virtualMachines = virtualMachinesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
