// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ImportHypervisorConfigurationInputBody: Swift.Equatable {
    let name: Swift.String?
    let host: Swift.String?
    let username: Swift.String?
    let password: Swift.String?
    let kmsKeyArn: Swift.String?
    let tags: [BackupGatewayClientTypes.Tag]?
}

extension ImportHypervisorConfigurationInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case host = "Host"
        case kmsKeyArn = "KmsKeyArn"
        case name = "Name"
        case password = "Password"
        case tags = "Tags"
        case username = "Username"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let hostDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .host)
        host = hostDecoded
        let usernameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .username)
        username = usernameDecoded
        let passwordDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .password)
        password = passwordDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
        let tagsContainer = try containerValues.decodeIfPresent([BackupGatewayClientTypes.Tag?].self, forKey: .tags)
        var tagsDecoded0:[BackupGatewayClientTypes.Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [BackupGatewayClientTypes.Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
