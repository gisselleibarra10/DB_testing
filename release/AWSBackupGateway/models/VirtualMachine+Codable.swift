// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BackupGatewayClientTypes.VirtualMachine: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hostName = "HostName"
        case hypervisorId = "HypervisorId"
        case lastBackupDate = "LastBackupDate"
        case name = "Name"
        case path = "Path"
        case resourceArn = "ResourceArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hostName = self.hostName {
            try encodeContainer.encode(hostName, forKey: .hostName)
        }
        if let hypervisorId = self.hypervisorId {
            try encodeContainer.encode(hypervisorId, forKey: .hypervisorId)
        }
        if let lastBackupDate = self.lastBackupDate {
            try encodeContainer.encode(lastBackupDate.timeIntervalSince1970, forKey: .lastBackupDate)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let path = self.path {
            try encodeContainer.encode(path, forKey: .path)
        }
        if let resourceArn = self.resourceArn {
            try encodeContainer.encode(resourceArn, forKey: .resourceArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hostName)
        hostName = hostNameDecoded
        let hypervisorIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .hypervisorId)
        hypervisorId = hypervisorIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let pathDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .path)
        path = pathDecoded
        let resourceArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let lastBackupDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastBackupDate)
        lastBackupDate = lastBackupDateDecoded
    }
}
