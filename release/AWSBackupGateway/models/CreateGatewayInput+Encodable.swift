// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateGatewayInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activationKey = "ActivationKey"
        case gatewayDisplayName = "GatewayDisplayName"
        case gatewayType = "GatewayType"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let activationKey = self.activationKey {
            try encodeContainer.encode(activationKey, forKey: .activationKey)
        }
        if let gatewayDisplayName = self.gatewayDisplayName {
            try encodeContainer.encode(gatewayDisplayName, forKey: .gatewayDisplayName)
        }
        if let gatewayType = self.gatewayType {
            try encodeContainer.encode(gatewayType.rawValue, forKey: .gatewayType)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for tags0 in tags {
                try tagsContainer.encode(tags0)
            }
        }
    }
}
