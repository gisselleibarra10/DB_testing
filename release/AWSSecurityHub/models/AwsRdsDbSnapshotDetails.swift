// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Provides details about an Amazon RDS DB cluster snapshot.
    public struct AwsRdsDbSnapshotDetails: Swift.Equatable {
        /// The amount of storage (in gigabytes) to be initially allocated for the database instance.
        public var allocatedStorage: Swift.Int
        /// Specifies the name of the Availability Zone in which the DB instance was located at the time of the DB snapshot.
        public var availabilityZone: Swift.String?
        /// A name for the DB instance.
        public var dbInstanceIdentifier: Swift.String?
        /// The name or ARN of the DB snapshot that is used to restore the DB instance.
        public var dbSnapshotIdentifier: Swift.String?
        /// The identifier for the source DB instance.
        public var dbiResourceId: Swift.String?
        /// Whether the DB snapshot is encrypted.
        public var encrypted: Swift.Bool
        /// The name of the database engine to use for this DB instance. Valid values are as follows:
        ///
        /// * aurora
        ///
        /// * aurora-mysql
        ///
        /// * aurora-postgresql
        ///
        /// * c
        ///
        /// * mariadb
        ///
        /// * mysql
        ///
        /// * oracle-ee
        ///
        /// * oracle-se
        ///
        /// * oracle-se1
        ///
        /// * oracle-se2
        ///
        /// * sqlserver-ee
        ///
        /// * sqlserver-ex
        ///
        /// * sqlserver-se
        ///
        /// * sqlserver-web
        public var engine: Swift.String?
        /// The version of the database engine.
        public var engineVersion: Swift.String?
        /// Whether mapping of IAM accounts to database accounts is enabled.
        public var iamDatabaseAuthenticationEnabled: Swift.Bool
        /// Specifies the time in Coordinated Universal Time (UTC) when the DB instance, from which the snapshot was taken, was created.
        public var instanceCreateTime: Swift.String?
        /// The provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.
        public var iops: Swift.Int
        /// If Encrypted is true, the KMS key identifier for the encrypted DB snapshot.
        public var kmsKeyId: Swift.String?
        /// License model information for the restored DB instance.
        public var licenseModel: Swift.String?
        /// The master user name for the DB snapshot.
        public var masterUsername: Swift.String?
        /// The option group name for the DB snapshot.
        public var optionGroupName: Swift.String?
        /// The percentage of the estimated data that has been transferred.
        public var percentProgress: Swift.Int
        /// The port that the database engine was listening on at the time of the snapshot.
        public var port: Swift.Int
        /// The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
        public var processorFeatures: [SecurityHubClientTypes.AwsRdsDbProcessorFeature]?
        /// When the snapshot was taken in Coordinated Universal Time (UTC).
        public var snapshotCreateTime: Swift.String?
        /// The type of the DB snapshot.
        public var snapshotType: Swift.String?
        /// The DB snapshot ARN that the DB snapshot was copied from.
        public var sourceDbSnapshotIdentifier: Swift.String?
        /// The Amazon Web Services Region that the DB snapshot was created in or copied from.
        public var sourceRegion: Swift.String?
        /// The status of this DB snapshot.
        public var status: Swift.String?
        /// The storage type associated with the DB snapshot. Valid values are as follows:
        ///
        /// * gp2
        ///
        /// * io1
        ///
        /// * standard
        public var storageType: Swift.String?
        /// The ARN from the key store with which to associate the instance for TDE encryption.
        public var tdeCredentialArn: Swift.String?
        /// The time zone of the DB snapshot.
        public var timezone: Swift.String?
        /// The VPC ID associated with the DB snapshot.
        public var vpcId: Swift.String?

        public init (
            allocatedStorage: Swift.Int = 0,
            availabilityZone: Swift.String? = nil,
            dbInstanceIdentifier: Swift.String? = nil,
            dbSnapshotIdentifier: Swift.String? = nil,
            dbiResourceId: Swift.String? = nil,
            encrypted: Swift.Bool = false,
            engine: Swift.String? = nil,
            engineVersion: Swift.String? = nil,
            iamDatabaseAuthenticationEnabled: Swift.Bool = false,
            instanceCreateTime: Swift.String? = nil,
            iops: Swift.Int = 0,
            kmsKeyId: Swift.String? = nil,
            licenseModel: Swift.String? = nil,
            masterUsername: Swift.String? = nil,
            optionGroupName: Swift.String? = nil,
            percentProgress: Swift.Int = 0,
            port: Swift.Int = 0,
            processorFeatures: [SecurityHubClientTypes.AwsRdsDbProcessorFeature]? = nil,
            snapshotCreateTime: Swift.String? = nil,
            snapshotType: Swift.String? = nil,
            sourceDbSnapshotIdentifier: Swift.String? = nil,
            sourceRegion: Swift.String? = nil,
            status: Swift.String? = nil,
            storageType: Swift.String? = nil,
            tdeCredentialArn: Swift.String? = nil,
            timezone: Swift.String? = nil,
            vpcId: Swift.String? = nil
        )
        {
            self.allocatedStorage = allocatedStorage
            self.availabilityZone = availabilityZone
            self.dbInstanceIdentifier = dbInstanceIdentifier
            self.dbSnapshotIdentifier = dbSnapshotIdentifier
            self.dbiResourceId = dbiResourceId
            self.encrypted = encrypted
            self.engine = engine
            self.engineVersion = engineVersion
            self.iamDatabaseAuthenticationEnabled = iamDatabaseAuthenticationEnabled
            self.instanceCreateTime = instanceCreateTime
            self.iops = iops
            self.kmsKeyId = kmsKeyId
            self.licenseModel = licenseModel
            self.masterUsername = masterUsername
            self.optionGroupName = optionGroupName
            self.percentProgress = percentProgress
            self.port = port
            self.processorFeatures = processorFeatures
            self.snapshotCreateTime = snapshotCreateTime
            self.snapshotType = snapshotType
            self.sourceDbSnapshotIdentifier = sourceDbSnapshotIdentifier
            self.sourceRegion = sourceRegion
            self.status = status
            self.storageType = storageType
            self.tdeCredentialArn = tdeCredentialArn
            self.timezone = timezone
            self.vpcId = vpcId
        }
    }

}
