// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Contains finding details that are specific to control-based findings. Only returned for findings generated from controls.
    public struct Compliance: Swift.Equatable {
        /// For a control, the industry or regulatory framework requirements that are related to the control. The check for that control is aligned with these requirements.
        public var relatedRequirements: [Swift.String]?
        /// The result of a standards check. The valid values for Status are as follows.
        ///
        ///
        /// * PASSED - Standards check passed for all evaluated resources.
        ///
        /// * WARNING - Some information is missing or this check is not supported for your configuration.
        ///
        /// * FAILED - Standards check failed for at least one evaluated resource.
        ///
        /// * NOT_AVAILABLE - Check could not be performed due to a service outage, API error, or because the result of the Config evaluation was NOT_APPLICABLE. If the Config evaluation result was NOT_APPLICABLE, then after 3 days, Security Hub automatically archives the finding.
        public var status: SecurityHubClientTypes.ComplianceStatus?
        /// For findings generated from controls, a list of reasons behind the value of Status. For the list of status reason codes and their meanings, see [Standards-related information in the ASFF](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-results.html#securityhub-standards-results-asff) in the Security Hub User Guide.
        public var statusReasons: [SecurityHubClientTypes.StatusReason]?

        public init (
            relatedRequirements: [Swift.String]? = nil,
            status: SecurityHubClientTypes.ComplianceStatus? = nil,
            statusReasons: [SecurityHubClientTypes.StatusReason]? = nil
        )
        {
            self.relatedRequirements = relatedRequirements
            self.status = status
            self.statusReasons = statusReasons
        }
    }

}
