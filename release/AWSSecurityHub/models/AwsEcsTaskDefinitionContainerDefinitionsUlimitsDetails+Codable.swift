// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case hardLimit = "HardLimit"
        case name = "Name"
        case softLimit = "SoftLimit"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if hardLimit != 0 {
            try encodeContainer.encode(hardLimit, forKey: .hardLimit)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if softLimit != 0 {
            try encodeContainer.encode(softLimit, forKey: .softLimit)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hardLimitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .hardLimit) ?? 0
        hardLimit = hardLimitDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let softLimitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .softLimit) ?? 0
        softLimit = softLimitDecoded
    }
}
