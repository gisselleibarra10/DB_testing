// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsKmsKeyDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aWSAccountId = "AWSAccountId"
        case creationDate = "CreationDate"
        case description = "Description"
        case keyId = "KeyId"
        case keyManager = "KeyManager"
        case keyRotationStatus = "KeyRotationStatus"
        case keyState = "KeyState"
        case origin = "Origin"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aWSAccountId = self.aWSAccountId {
            try encodeContainer.encode(aWSAccountId, forKey: .aWSAccountId)
        }
        if creationDate != 0.0 {
            try encodeContainer.encode(creationDate, forKey: .creationDate)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let keyId = self.keyId {
            try encodeContainer.encode(keyId, forKey: .keyId)
        }
        if let keyManager = self.keyManager {
            try encodeContainer.encode(keyManager, forKey: .keyManager)
        }
        if keyRotationStatus != false {
            try encodeContainer.encode(keyRotationStatus, forKey: .keyRotationStatus)
        }
        if let keyState = self.keyState {
            try encodeContainer.encode(keyState, forKey: .keyState)
        }
        if let origin = self.origin {
            try encodeContainer.encode(origin, forKey: .origin)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aWSAccountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .aWSAccountId)
        aWSAccountId = aWSAccountIdDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .creationDate) ?? 0.0
        creationDate = creationDateDecoded
        let keyIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let keyManagerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyManager)
        keyManager = keyManagerDecoded
        let keyStateDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .keyState)
        keyState = keyStateDecoded
        let originDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .origin)
        origin = originDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let keyRotationStatusDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .keyRotationStatus) ?? false
        keyRotationStatus = keyRotationStatusDecoded
    }
}
