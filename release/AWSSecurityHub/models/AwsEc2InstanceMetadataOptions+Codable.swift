// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsEc2InstanceMetadataOptions: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case httpEndpoint = "HttpEndpoint"
        case httpProtocolIpv6 = "HttpProtocolIpv6"
        case httpPutResponseHopLimit = "HttpPutResponseHopLimit"
        case httpTokens = "HttpTokens"
        case instanceMetadataTags = "InstanceMetadataTags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let httpEndpoint = self.httpEndpoint {
            try encodeContainer.encode(httpEndpoint, forKey: .httpEndpoint)
        }
        if let httpProtocolIpv6 = self.httpProtocolIpv6 {
            try encodeContainer.encode(httpProtocolIpv6, forKey: .httpProtocolIpv6)
        }
        if httpPutResponseHopLimit != 0 {
            try encodeContainer.encode(httpPutResponseHopLimit, forKey: .httpPutResponseHopLimit)
        }
        if let httpTokens = self.httpTokens {
            try encodeContainer.encode(httpTokens, forKey: .httpTokens)
        }
        if let instanceMetadataTags = self.instanceMetadataTags {
            try encodeContainer.encode(instanceMetadataTags, forKey: .instanceMetadataTags)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let httpEndpointDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .httpEndpoint)
        httpEndpoint = httpEndpointDecoded
        let httpProtocolIpv6Decoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .httpProtocolIpv6)
        httpProtocolIpv6 = httpProtocolIpv6Decoded
        let httpPutResponseHopLimitDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .httpPutResponseHopLimit) ?? 0
        httpPutResponseHopLimit = httpPutResponseHopLimitDecoded
        let httpTokensDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .httpTokens)
        httpTokens = httpTokensDecoded
        let instanceMetadataTagsDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .instanceMetadataTags)
        instanceMetadataTags = instanceMetadataTagsDecoded
    }
}
