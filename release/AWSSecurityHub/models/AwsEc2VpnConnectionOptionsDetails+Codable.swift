// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsEc2VpnConnectionOptionsDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case staticRoutesOnly = "StaticRoutesOnly"
        case tunnelOptions = "TunnelOptions"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if staticRoutesOnly != false {
            try encodeContainer.encode(staticRoutesOnly, forKey: .staticRoutesOnly)
        }
        if let tunnelOptions = tunnelOptions {
            var tunnelOptionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tunnelOptions)
            for awsec2vpnconnectionoptionstunneloptionslist0 in tunnelOptions {
                try tunnelOptionsContainer.encode(awsec2vpnconnectionoptionstunneloptionslist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let staticRoutesOnlyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .staticRoutesOnly) ?? false
        staticRoutesOnly = staticRoutesOnlyDecoded
        let tunnelOptionsContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.AwsEc2VpnConnectionOptionsTunnelOptionsDetails?].self, forKey: .tunnelOptions)
        var tunnelOptionsDecoded0:[SecurityHubClientTypes.AwsEc2VpnConnectionOptionsTunnelOptionsDetails]? = nil
        if let tunnelOptionsContainer = tunnelOptionsContainer {
            tunnelOptionsDecoded0 = [SecurityHubClientTypes.AwsEc2VpnConnectionOptionsTunnelOptionsDetails]()
            for structure0 in tunnelOptionsContainer {
                if let structure0 = structure0 {
                    tunnelOptionsDecoded0?.append(structure0)
                }
            }
        }
        tunnelOptions = tunnelOptionsDecoded0
    }
}
