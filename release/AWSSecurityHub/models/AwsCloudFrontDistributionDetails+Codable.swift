// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsCloudFrontDistributionDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case cacheBehaviors = "CacheBehaviors"
        case defaultCacheBehavior = "DefaultCacheBehavior"
        case defaultRootObject = "DefaultRootObject"
        case domainName = "DomainName"
        case eTag = "ETag"
        case lastModifiedTime = "LastModifiedTime"
        case logging = "Logging"
        case originGroups = "OriginGroups"
        case origins = "Origins"
        case status = "Status"
        case viewerCertificate = "ViewerCertificate"
        case webAclId = "WebAclId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cacheBehaviors = self.cacheBehaviors {
            try encodeContainer.encode(cacheBehaviors, forKey: .cacheBehaviors)
        }
        if let defaultCacheBehavior = self.defaultCacheBehavior {
            try encodeContainer.encode(defaultCacheBehavior, forKey: .defaultCacheBehavior)
        }
        if let defaultRootObject = self.defaultRootObject {
            try encodeContainer.encode(defaultRootObject, forKey: .defaultRootObject)
        }
        if let domainName = self.domainName {
            try encodeContainer.encode(domainName, forKey: .domainName)
        }
        if let eTag = self.eTag {
            try encodeContainer.encode(eTag, forKey: .eTag)
        }
        if let lastModifiedTime = self.lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime, forKey: .lastModifiedTime)
        }
        if let logging = self.logging {
            try encodeContainer.encode(logging, forKey: .logging)
        }
        if let originGroups = self.originGroups {
            try encodeContainer.encode(originGroups, forKey: .originGroups)
        }
        if let origins = self.origins {
            try encodeContainer.encode(origins, forKey: .origins)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let viewerCertificate = self.viewerCertificate {
            try encodeContainer.encode(viewerCertificate, forKey: .viewerCertificate)
        }
        if let webAclId = self.webAclId {
            try encodeContainer.encode(webAclId, forKey: .webAclId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cacheBehaviorsDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsCloudFrontDistributionCacheBehaviors.self, forKey: .cacheBehaviors)
        cacheBehaviors = cacheBehaviorsDecoded
        let defaultCacheBehaviorDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsCloudFrontDistributionDefaultCacheBehavior.self, forKey: .defaultCacheBehavior)
        defaultCacheBehavior = defaultCacheBehaviorDecoded
        let defaultRootObjectDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .defaultRootObject)
        defaultRootObject = defaultRootObjectDecoded
        let domainNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let eTagDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .eTag)
        eTag = eTagDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let loggingDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsCloudFrontDistributionLogging.self, forKey: .logging)
        logging = loggingDecoded
        let originsDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsCloudFrontDistributionOrigins.self, forKey: .origins)
        origins = originsDecoded
        let originGroupsDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsCloudFrontDistributionOriginGroups.self, forKey: .originGroups)
        originGroups = originGroupsDecoded
        let viewerCertificateDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsCloudFrontDistributionViewerCertificate.self, forKey: .viewerCertificate)
        viewerCertificate = viewerCertificateDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let webAclIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .webAclId)
        webAclId = webAclIdDecoded
    }
}
