// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Details about an Amazon RDS event notification subscription. The subscription allows Amazon RDS to post events to an SNS topic.
    public struct AwsRdsEventSubscriptionDetails: Swift.Equatable {
        /// The identifier of the account that is associated with the event notification subscription.
        public var custSubscriptionId: Swift.String?
        /// The identifier of the event notification subscription.
        public var customerAwsId: Swift.String?
        /// Whether the event notification subscription is enabled.
        public var enabled: Swift.Bool
        /// The list of event categories for the event notification subscription.
        public var eventCategoriesList: [Swift.String]?
        /// The ARN of the event notification subscription.
        public var eventSubscriptionArn: Swift.String?
        /// The ARN of the SNS topic to post the event notifications to.
        public var snsTopicArn: Swift.String?
        /// A list of source identifiers for the event notification subscription.
        public var sourceIdsList: [Swift.String]?
        /// The source type for the event notification subscription.
        public var sourceType: Swift.String?
        /// The status of the event notification subscription. Valid values: creating | modifying | deleting | active | no-permission | topic-not-exist
        public var status: Swift.String?
        /// The datetime when the event notification subscription was created. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var subscriptionCreationTime: Swift.String?

        public init (
            custSubscriptionId: Swift.String? = nil,
            customerAwsId: Swift.String? = nil,
            enabled: Swift.Bool = false,
            eventCategoriesList: [Swift.String]? = nil,
            eventSubscriptionArn: Swift.String? = nil,
            snsTopicArn: Swift.String? = nil,
            sourceIdsList: [Swift.String]? = nil,
            sourceType: Swift.String? = nil,
            status: Swift.String? = nil,
            subscriptionCreationTime: Swift.String? = nil
        )
        {
            self.custSubscriptionId = custSubscriptionId
            self.customerAwsId = customerAwsId
            self.enabled = enabled
            self.eventCategoriesList = eventCategoriesList
            self.eventSubscriptionArn = eventSubscriptionArn
            self.snsTopicArn = snsTopicArn
            self.sourceIdsList = sourceIdsList
            self.sourceType = sourceType
            self.status = status
            self.subscriptionCreationTime = subscriptionCreationTime
        }
    }

}
