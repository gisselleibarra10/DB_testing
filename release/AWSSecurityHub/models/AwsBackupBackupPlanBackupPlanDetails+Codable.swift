// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsBackupBackupPlanBackupPlanDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case advancedBackupSettings = "AdvancedBackupSettings"
        case backupPlanName = "BackupPlanName"
        case backupPlanRule = "BackupPlanRule"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let advancedBackupSettings = advancedBackupSettings {
            var advancedBackupSettingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .advancedBackupSettings)
            for awsbackupbackupplanadvancedbackupsettingslist0 in advancedBackupSettings {
                try advancedBackupSettingsContainer.encode(awsbackupbackupplanadvancedbackupsettingslist0)
            }
        }
        if let backupPlanName = self.backupPlanName {
            try encodeContainer.encode(backupPlanName, forKey: .backupPlanName)
        }
        if let backupPlanRule = backupPlanRule {
            var backupPlanRuleContainer = encodeContainer.nestedUnkeyedContainer(forKey: .backupPlanRule)
            for awsbackupbackupplanrulelist0 in backupPlanRule {
                try backupPlanRuleContainer.encode(awsbackupbackupplanrulelist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupPlanNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .backupPlanName)
        backupPlanName = backupPlanNameDecoded
        let advancedBackupSettingsContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.AwsBackupBackupPlanAdvancedBackupSettingsDetails?].self, forKey: .advancedBackupSettings)
        var advancedBackupSettingsDecoded0:[SecurityHubClientTypes.AwsBackupBackupPlanAdvancedBackupSettingsDetails]? = nil
        if let advancedBackupSettingsContainer = advancedBackupSettingsContainer {
            advancedBackupSettingsDecoded0 = [SecurityHubClientTypes.AwsBackupBackupPlanAdvancedBackupSettingsDetails]()
            for structure0 in advancedBackupSettingsContainer {
                if let structure0 = structure0 {
                    advancedBackupSettingsDecoded0?.append(structure0)
                }
            }
        }
        advancedBackupSettings = advancedBackupSettingsDecoded0
        let backupPlanRuleContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.AwsBackupBackupPlanRuleDetails?].self, forKey: .backupPlanRule)
        var backupPlanRuleDecoded0:[SecurityHubClientTypes.AwsBackupBackupPlanRuleDetails]? = nil
        if let backupPlanRuleContainer = backupPlanRuleContainer {
            backupPlanRuleDecoded0 = [SecurityHubClientTypes.AwsBackupBackupPlanRuleDetails]()
            for structure0 in backupPlanRuleContainer {
                if let structure0 = structure0 {
                    backupPlanRuleDecoded0?.append(structure0)
                }
            }
        }
        backupPlanRule = backupPlanRuleDecoded0
    }
}
