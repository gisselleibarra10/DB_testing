// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsBackupBackupVaultDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accessPolicy = "AccessPolicy"
        case backupVaultArn = "BackupVaultArn"
        case backupVaultName = "BackupVaultName"
        case encryptionKeyArn = "EncryptionKeyArn"
        case notifications = "Notifications"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessPolicy = self.accessPolicy {
            try encodeContainer.encode(accessPolicy, forKey: .accessPolicy)
        }
        if let backupVaultArn = self.backupVaultArn {
            try encodeContainer.encode(backupVaultArn, forKey: .backupVaultArn)
        }
        if let backupVaultName = self.backupVaultName {
            try encodeContainer.encode(backupVaultName, forKey: .backupVaultName)
        }
        if let encryptionKeyArn = self.encryptionKeyArn {
            try encodeContainer.encode(encryptionKeyArn, forKey: .encryptionKeyArn)
        }
        if let notifications = self.notifications {
            try encodeContainer.encode(notifications, forKey: .notifications)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupVaultArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .backupVaultArn)
        backupVaultArn = backupVaultArnDecoded
        let backupVaultNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .backupVaultName)
        backupVaultName = backupVaultNameDecoded
        let encryptionKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .encryptionKeyArn)
        encryptionKeyArn = encryptionKeyArnDecoded
        let notificationsDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsBackupBackupVaultNotificationsDetails.self, forKey: .notifications)
        notifications = notificationsDecoded
        let accessPolicyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accessPolicy)
        accessPolicy = accessPolicyDecoded
    }
}
