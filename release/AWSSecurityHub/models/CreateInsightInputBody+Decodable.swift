// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateInsightInputBody: Swift.Equatable {
    let name: Swift.String?
    let filters: SecurityHubClientTypes.AwsSecurityFindingFilters?
    let groupByAttribute: Swift.String?
}

extension CreateInsightInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filters = "Filters"
        case groupByAttribute = "GroupByAttribute"
        case name = "Name"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let filtersDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsSecurityFindingFilters.self, forKey: .filters)
        filters = filtersDecoded
        let groupByAttributeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .groupByAttribute)
        groupByAttribute = groupByAttributeDecoded
    }
}
