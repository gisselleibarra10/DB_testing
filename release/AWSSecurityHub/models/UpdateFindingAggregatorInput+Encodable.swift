// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateFindingAggregatorInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case findingAggregatorArn = "FindingAggregatorArn"
        case regionLinkingMode = "RegionLinkingMode"
        case regions = "Regions"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let findingAggregatorArn = self.findingAggregatorArn {
            try encodeContainer.encode(findingAggregatorArn, forKey: .findingAggregatorArn)
        }
        if let regionLinkingMode = self.regionLinkingMode {
            try encodeContainer.encode(regionLinkingMode, forKey: .regionLinkingMode)
        }
        if let regions = regions {
            var regionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .regions)
            for stringlist0 in regions {
                try regionsContainer.encode(stringlist0)
            }
        }
    }
}
