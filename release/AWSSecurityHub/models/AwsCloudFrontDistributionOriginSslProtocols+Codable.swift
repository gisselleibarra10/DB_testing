// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsCloudFrontDistributionOriginSslProtocols: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case items = "Items"
        case quantity = "Quantity"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let items = items {
            var itemsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .items)
            for nonemptystringlist0 in items {
                try itemsContainer.encode(nonemptystringlist0)
            }
        }
        if quantity != 0 {
            try encodeContainer.encode(quantity, forKey: .quantity)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .items)
        var itemsDecoded0:[Swift.String]? = nil
        if let itemsContainer = itemsContainer {
            itemsDecoded0 = [Swift.String]()
            for string0 in itemsContainer {
                if let string0 = string0 {
                    itemsDecoded0?.append(string0)
                }
            }
        }
        items = itemsDecoded0
        let quantityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .quantity) ?? 0
        quantity = quantityDecoded
    }
}
