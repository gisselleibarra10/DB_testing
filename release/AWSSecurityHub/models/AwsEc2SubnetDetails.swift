// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Contains information about a subnet in Amazon EC2.
    public struct AwsEc2SubnetDetails: Swift.Equatable {
        /// Whether to assign an IPV6 address to a network interface that is created in this subnet.
        public var assignIpv6AddressOnCreation: Swift.Bool
        /// The Availability Zone for the subnet.
        public var availabilityZone: Swift.String?
        /// The identifier of the Availability Zone for the subnet.
        public var availabilityZoneId: Swift.String?
        /// The number of available IPV4 addresses in the subnet. Does not include addresses for stopped instances.
        public var availableIpAddressCount: Swift.Int
        /// The IPV4 CIDR block that is assigned to the subnet.
        public var cidrBlock: Swift.String?
        /// Whether this subnet is the default subnet for the Availability Zone.
        public var defaultForAz: Swift.Bool
        /// The IPV6 CIDR blocks that are associated with the subnet.
        public var ipv6CidrBlockAssociationSet: [SecurityHubClientTypes.Ipv6CidrBlockAssociation]?
        /// Whether instances in this subnet receive a public IP address.
        public var mapPublicIpOnLaunch: Swift.Bool
        /// The identifier of the Amazon Web Services account that owns the subnet.
        public var ownerId: Swift.String?
        /// The current state of the subnet. Valid values are available or pending.
        public var state: Swift.String?
        /// The ARN of the subnet.
        public var subnetArn: Swift.String?
        /// The identifier of the subnet.
        public var subnetId: Swift.String?
        /// The identifier of the VPC that contains the subnet.
        public var vpcId: Swift.String?

        public init (
            assignIpv6AddressOnCreation: Swift.Bool = false,
            availabilityZone: Swift.String? = nil,
            availabilityZoneId: Swift.String? = nil,
            availableIpAddressCount: Swift.Int = 0,
            cidrBlock: Swift.String? = nil,
            defaultForAz: Swift.Bool = false,
            ipv6CidrBlockAssociationSet: [SecurityHubClientTypes.Ipv6CidrBlockAssociation]? = nil,
            mapPublicIpOnLaunch: Swift.Bool = false,
            ownerId: Swift.String? = nil,
            state: Swift.String? = nil,
            subnetArn: Swift.String? = nil,
            subnetId: Swift.String? = nil,
            vpcId: Swift.String? = nil
        )
        {
            self.assignIpv6AddressOnCreation = assignIpv6AddressOnCreation
            self.availabilityZone = availabilityZone
            self.availabilityZoneId = availabilityZoneId
            self.availableIpAddressCount = availableIpAddressCount
            self.cidrBlock = cidrBlock
            self.defaultForAz = defaultForAz
            self.ipv6CidrBlockAssociationSet = ipv6CidrBlockAssociationSet
            self.mapPublicIpOnLaunch = mapPublicIpOnLaunch
            self.ownerId = ownerId
            self.state = state
            self.subnetArn = subnetArn
            self.subnetId = subnetId
            self.vpcId = vpcId
        }
    }

}
