// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// The inspection criteria for a stateful rule.
    public struct RuleGroupSourceStatefulRulesHeaderDetails: Swift.Equatable {
        /// The destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify ANY.
        public var destination: Swift.String?
        /// The destination port to inspect for. You can specify an individual port, such as 1994. You also can specify a port range, such as 1990:1994. To match with any port, specify ANY.
        public var destinationPort: Swift.String?
        /// The direction of traffic flow to inspect. If set to ANY, the inspection matches bidirectional traffic, both from the source to the destination and from the destination to the source. If set to FORWARD, the inspection only matches traffic going from the source to the destination.
        public var direction: Swift.String?
        /// The protocol to inspect for. To inspector for all protocols, use IP.
        public var `protocol`: Swift.String?
        /// The source IP address or address range to inspect for, in CIDR notation. To match with any address, specify ANY.
        public var source: Swift.String?
        /// The source port to inspect for. You can specify an individual port, such as 1994. You also can specify a port range, such as 1990:1994. To match with any port, specify ANY.
        public var sourcePort: Swift.String?

        public init (
            destination: Swift.String? = nil,
            destinationPort: Swift.String? = nil,
            direction: Swift.String? = nil,
            `protocol`: Swift.String? = nil,
            source: Swift.String? = nil,
            sourcePort: Swift.String? = nil
        )
        {
            self.destination = destination
            self.destinationPort = destinationPort
            self.direction = direction
            self.`protocol` = `protocol`
            self.source = source
            self.sourcePort = sourcePort
        }
    }

}
