// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Details about the configuration of an OpenSearch cluster.
    public struct AwsOpenSearchServiceDomainClusterConfigDetails: Swift.Equatable {
        /// The number of instances to use for the master node. If this attribute is specified, then DedicatedMasterEnabled must be true.
        public var dedicatedMasterCount: Swift.Int
        /// Whether to use a dedicated master node for the OpenSearch domain. A dedicated master node performs cluster management tasks, but does not hold data or respond to data upload requests.
        public var dedicatedMasterEnabled: Swift.Bool
        /// The hardware configuration of the computer that hosts the dedicated master node. If this attribute is specified, then DedicatedMasterEnabled must be true.
        public var dedicatedMasterType: Swift.String?
        /// The number of data nodes to use in the OpenSearch domain.
        public var instanceCount: Swift.Int
        /// The instance type for your data nodes. For a list of valid values, see [Supported instance types in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html) in the Amazon OpenSearch Service Developer Guide.
        public var instanceType: Swift.String?
        /// The number of UltraWarm instances.
        public var warmCount: Swift.Int
        /// Whether UltraWarm is enabled.
        public var warmEnabled: Swift.Bool
        /// The type of UltraWarm instance.
        public var warmType: Swift.String?
        /// Configuration options for zone awareness. Provided if ZoneAwarenessEnabled is true.
        public var zoneAwarenessConfig: SecurityHubClientTypes.AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails?
        /// Whether to enable zone awareness for the OpenSearch domain. When zone awareness is enabled, OpenSearch Service allocates the cluster's nodes and replica index shards across Availability Zones (AZs) in the same Region. This prevents data loss and minimizes downtime if a node or data center fails.
        public var zoneAwarenessEnabled: Swift.Bool

        public init (
            dedicatedMasterCount: Swift.Int = 0,
            dedicatedMasterEnabled: Swift.Bool = false,
            dedicatedMasterType: Swift.String? = nil,
            instanceCount: Swift.Int = 0,
            instanceType: Swift.String? = nil,
            warmCount: Swift.Int = 0,
            warmEnabled: Swift.Bool = false,
            warmType: Swift.String? = nil,
            zoneAwarenessConfig: SecurityHubClientTypes.AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails? = nil,
            zoneAwarenessEnabled: Swift.Bool = false
        )
        {
            self.dedicatedMasterCount = dedicatedMasterCount
            self.dedicatedMasterEnabled = dedicatedMasterEnabled
            self.dedicatedMasterType = dedicatedMasterType
            self.instanceCount = instanceCount
            self.instanceType = instanceType
            self.warmCount = warmCount
            self.warmEnabled = warmEnabled
            self.warmType = warmType
            self.zoneAwarenessConfig = zoneAwarenessConfig
            self.zoneAwarenessEnabled = zoneAwarenessEnabled
        }
    }

}
