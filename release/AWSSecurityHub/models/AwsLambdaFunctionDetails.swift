// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Details about a function's configuration.
    public struct AwsLambdaFunctionDetails: Swift.Equatable {
        /// An AwsLambdaFunctionCode object.
        public var code: SecurityHubClientTypes.AwsLambdaFunctionCode?
        /// The SHA256 hash of the function's deployment package.
        public var codeSha256: Swift.String?
        /// The function's dead letter queue.
        public var deadLetterConfig: SecurityHubClientTypes.AwsLambdaFunctionDeadLetterConfig?
        /// The function's environment variables.
        public var environment: SecurityHubClientTypes.AwsLambdaFunctionEnvironment?
        /// The name of the function.
        public var functionName: Swift.String?
        /// The function that Lambda calls to begin executing your function.
        public var handler: Swift.String?
        /// The KMS key that is used to encrypt the function's environment variables. This key is only returned if you've configured a customer managed customer managed key.
        public var kmsKeyArn: Swift.String?
        /// Indicates when the function was last updated. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var lastModified: Swift.String?
        /// The function's layers.
        public var layers: [SecurityHubClientTypes.AwsLambdaFunctionLayer]?
        /// For Lambda@Edge functions, the ARN of the master function.
        public var masterArn: Swift.String?
        /// The memory that is allocated to the function.
        public var memorySize: Swift.Int
        /// The latest updated revision of the function or alias.
        public var revisionId: Swift.String?
        /// The function's execution role.
        public var role: Swift.String?
        /// The runtime environment for the Lambda function.
        public var runtime: Swift.String?
        /// The amount of time that Lambda allows a function to run before stopping it.
        public var timeout: Swift.Int
        /// The function's X-Ray tracing configuration.
        public var tracingConfig: SecurityHubClientTypes.AwsLambdaFunctionTracingConfig?
        /// The version of the Lambda function.
        public var version: Swift.String?
        /// The function's networking configuration.
        public var vpcConfig: SecurityHubClientTypes.AwsLambdaFunctionVpcConfig?

        public init (
            code: SecurityHubClientTypes.AwsLambdaFunctionCode? = nil,
            codeSha256: Swift.String? = nil,
            deadLetterConfig: SecurityHubClientTypes.AwsLambdaFunctionDeadLetterConfig? = nil,
            environment: SecurityHubClientTypes.AwsLambdaFunctionEnvironment? = nil,
            functionName: Swift.String? = nil,
            handler: Swift.String? = nil,
            kmsKeyArn: Swift.String? = nil,
            lastModified: Swift.String? = nil,
            layers: [SecurityHubClientTypes.AwsLambdaFunctionLayer]? = nil,
            masterArn: Swift.String? = nil,
            memorySize: Swift.Int = 0,
            revisionId: Swift.String? = nil,
            role: Swift.String? = nil,
            runtime: Swift.String? = nil,
            timeout: Swift.Int = 0,
            tracingConfig: SecurityHubClientTypes.AwsLambdaFunctionTracingConfig? = nil,
            version: Swift.String? = nil,
            vpcConfig: SecurityHubClientTypes.AwsLambdaFunctionVpcConfig? = nil
        )
        {
            self.code = code
            self.codeSha256 = codeSha256
            self.deadLetterConfig = deadLetterConfig
            self.environment = environment
            self.functionName = functionName
            self.handler = handler
            self.kmsKeyArn = kmsKeyArn
            self.lastModified = lastModified
            self.layers = layers
            self.masterArn = masterArn
            self.memorySize = memorySize
            self.revisionId = revisionId
            self.role = role
            self.runtime = runtime
            self.timeout = timeout
            self.tracingConfig = tracingConfig
            self.version = version
            self.vpcConfig = vpcConfig
        }
    }

}
