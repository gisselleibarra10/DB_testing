// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Information about the provisioned throughput for the table or for a global secondary index.
    public struct AwsDynamoDbTableProvisionedThroughput: Swift.Equatable {
        /// Indicates when the provisioned throughput was last decreased. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var lastDecreaseDateTime: Swift.String?
        /// Indicates when the provisioned throughput was last increased. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var lastIncreaseDateTime: Swift.String?
        /// The number of times during the current UTC calendar day that the provisioned throughput was decreased.
        public var numberOfDecreasesToday: Swift.Int
        /// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.
        public var readCapacityUnits: Swift.Int
        /// The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.
        public var writeCapacityUnits: Swift.Int

        public init (
            lastDecreaseDateTime: Swift.String? = nil,
            lastIncreaseDateTime: Swift.String? = nil,
            numberOfDecreasesToday: Swift.Int = 0,
            readCapacityUnits: Swift.Int = 0,
            writeCapacityUnits: Swift.Int = 0
        )
        {
            self.lastDecreaseDateTime = lastDecreaseDateTime
            self.lastIncreaseDateTime = lastIncreaseDateTime
            self.numberOfDecreasesToday = numberOfDecreasesToday
            self.readCapacityUnits = readCapacityUnits
            self.writeCapacityUnits = writeCapacityUnits
        }
    }

}
