// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// An IP permission for an EC2 security group.
    public struct AwsEc2SecurityGroupIpPermission: Swift.Equatable {
        /// The start of the port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
        public var fromPort: Swift.Int
        /// The IP protocol name (tcp, udp, icmp, icmpv6) or number. [VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp, udp, icmp, or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp, udp, and icmp, you must specify a port range. For icmpv6, the port range is optional. If you omit the port range, traffic for all types and codes is allowed.
        public var ipProtocol: Swift.String?
        /// The IPv4 ranges.
        public var ipRanges: [SecurityHubClientTypes.AwsEc2SecurityGroupIpRange]?
        /// The IPv6 ranges.
        public var ipv6Ranges: [SecurityHubClientTypes.AwsEc2SecurityGroupIpv6Range]?
        /// [VPC only] The prefix list IDs for an Amazon Web Services service. With outbound rules, this is the Amazon Web Services service to access through a VPC endpoint from instances associated with the security group.
        public var prefixListIds: [SecurityHubClientTypes.AwsEc2SecurityGroupPrefixListId]?
        /// The end of the port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
        public var toPort: Swift.Int
        /// The security group and Amazon Web Services account ID pairs.
        public var userIdGroupPairs: [SecurityHubClientTypes.AwsEc2SecurityGroupUserIdGroupPair]?

        public init (
            fromPort: Swift.Int = 0,
            ipProtocol: Swift.String? = nil,
            ipRanges: [SecurityHubClientTypes.AwsEc2SecurityGroupIpRange]? = nil,
            ipv6Ranges: [SecurityHubClientTypes.AwsEc2SecurityGroupIpv6Range]? = nil,
            prefixListIds: [SecurityHubClientTypes.AwsEc2SecurityGroupPrefixListId]? = nil,
            toPort: Swift.Int = 0,
            userIdGroupPairs: [SecurityHubClientTypes.AwsEc2SecurityGroupUserIdGroupPair]? = nil
        )
        {
            self.fromPort = fromPort
            self.ipProtocol = ipProtocol
            self.ipRanges = ipRanges
            self.ipv6Ranges = ipv6Ranges
            self.prefixListIds = prefixListIds
            self.toPort = toPort
            self.userIdGroupPairs = userIdGroupPairs
        }
    }

}
