// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Criteria for the stateless rule.
    public struct RuleGroupSourceStatelessRuleMatchAttributes: Swift.Equatable {
        /// A list of port ranges to specify the destination ports to inspect for.
        public var destinationPorts: [SecurityHubClientTypes.RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts]?
        /// The destination IP addresses and address ranges to inspect for, in CIDR notation.
        public var destinations: [SecurityHubClientTypes.RuleGroupSourceStatelessRuleMatchAttributesDestinations]?
        /// The protocols to inspect for.
        public var protocols: [Swift.Int]?
        /// A list of port ranges to specify the source ports to inspect for.
        public var sourcePorts: [SecurityHubClientTypes.RuleGroupSourceStatelessRuleMatchAttributesSourcePorts]?
        /// The source IP addresses and address ranges to inspect for, in CIDR notation.
        public var sources: [SecurityHubClientTypes.RuleGroupSourceStatelessRuleMatchAttributesSources]?
        /// The TCP flags and masks to inspect for.
        public var tcpFlags: [SecurityHubClientTypes.RuleGroupSourceStatelessRuleMatchAttributesTcpFlags]?

        public init (
            destinationPorts: [SecurityHubClientTypes.RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts]? = nil,
            destinations: [SecurityHubClientTypes.RuleGroupSourceStatelessRuleMatchAttributesDestinations]? = nil,
            protocols: [Swift.Int]? = nil,
            sourcePorts: [SecurityHubClientTypes.RuleGroupSourceStatelessRuleMatchAttributesSourcePorts]? = nil,
            sources: [SecurityHubClientTypes.RuleGroupSourceStatelessRuleMatchAttributesSources]? = nil,
            tcpFlags: [SecurityHubClientTypes.RuleGroupSourceStatelessRuleMatchAttributesTcpFlags]? = nil
        )
        {
            self.destinationPorts = destinationPorts
            self.destinations = destinations
            self.protocols = protocols
            self.sourcePorts = sourcePorts
            self.sources = sources
            self.tcpFlags = tcpFlags
        }
    }

}
