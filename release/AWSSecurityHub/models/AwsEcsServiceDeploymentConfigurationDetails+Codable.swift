// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsEcsServiceDeploymentConfigurationDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case deploymentCircuitBreaker = "DeploymentCircuitBreaker"
        case maximumPercent = "MaximumPercent"
        case minimumHealthyPercent = "MinimumHealthyPercent"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deploymentCircuitBreaker = self.deploymentCircuitBreaker {
            try encodeContainer.encode(deploymentCircuitBreaker, forKey: .deploymentCircuitBreaker)
        }
        if maximumPercent != 0 {
            try encodeContainer.encode(maximumPercent, forKey: .maximumPercent)
        }
        if minimumHealthyPercent != 0 {
            try encodeContainer.encode(minimumHealthyPercent, forKey: .minimumHealthyPercent)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentCircuitBreakerDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails.self, forKey: .deploymentCircuitBreaker)
        deploymentCircuitBreaker = deploymentCircuitBreakerDecoded
        let maximumPercentDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maximumPercent) ?? 0
        maximumPercent = maximumPercentDecoded
        let minimumHealthyPercentDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .minimumHealthyPercent) ?? 0
        minimumHealthyPercent = minimumHealthyPercentDecoded
    }
}
