// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Defines the behavior of the firewall.
    public struct FirewallPolicyDetails: Swift.Equatable {
        /// The stateful rule groups that are used in the firewall policy.
        public var statefulRuleGroupReferences: [SecurityHubClientTypes.FirewallPolicyStatefulRuleGroupReferencesDetails]?
        /// The custom action definitions that are available to use in the firewall policy's StatelessDefaultActions setting.
        public var statelessCustomActions: [SecurityHubClientTypes.FirewallPolicyStatelessCustomActionsDetails]?
        /// The actions to take on a packet if it doesn't match any of the stateless rules in the policy. You must specify a standard action (aws:pass, aws:drop, aws:forward_to_sfe), and can optionally include a custom action from StatelessCustomActions.
        public var statelessDefaultActions: [Swift.String]?
        /// The actions to take on a fragmented UDP packet if it doesn't match any of the stateless rules in the policy. You must specify a standard action (aws:pass, aws:drop, aws:forward_to_sfe), and can optionally include a custom action from StatelessCustomActions.
        public var statelessFragmentDefaultActions: [Swift.String]?
        /// The stateless rule groups that are used in the firewall policy.
        public var statelessRuleGroupReferences: [SecurityHubClientTypes.FirewallPolicyStatelessRuleGroupReferencesDetails]?

        public init (
            statefulRuleGroupReferences: [SecurityHubClientTypes.FirewallPolicyStatefulRuleGroupReferencesDetails]? = nil,
            statelessCustomActions: [SecurityHubClientTypes.FirewallPolicyStatelessCustomActionsDetails]? = nil,
            statelessDefaultActions: [Swift.String]? = nil,
            statelessFragmentDefaultActions: [Swift.String]? = nil,
            statelessRuleGroupReferences: [SecurityHubClientTypes.FirewallPolicyStatelessRuleGroupReferencesDetails]? = nil
        )
        {
            self.statefulRuleGroupReferences = statefulRuleGroupReferences
            self.statelessCustomActions = statelessCustomActions
            self.statelessDefaultActions = statelessDefaultActions
            self.statelessFragmentDefaultActions = statelessFragmentDefaultActions
            self.statelessRuleGroupReferences = statelessRuleGroupReferences
        }
    }

}
