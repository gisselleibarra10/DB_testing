// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsEc2VpcPeeringConnectionDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accepterVpcInfo = "AccepterVpcInfo"
        case expirationTime = "ExpirationTime"
        case requesterVpcInfo = "RequesterVpcInfo"
        case status = "Status"
        case vpcPeeringConnectionId = "VpcPeeringConnectionId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accepterVpcInfo = self.accepterVpcInfo {
            try encodeContainer.encode(accepterVpcInfo, forKey: .accepterVpcInfo)
        }
        if let expirationTime = self.expirationTime {
            try encodeContainer.encode(expirationTime, forKey: .expirationTime)
        }
        if let requesterVpcInfo = self.requesterVpcInfo {
            try encodeContainer.encode(requesterVpcInfo, forKey: .requesterVpcInfo)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let vpcPeeringConnectionId = self.vpcPeeringConnectionId {
            try encodeContainer.encode(vpcPeeringConnectionId, forKey: .vpcPeeringConnectionId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accepterVpcInfoDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsEc2VpcPeeringConnectionVpcInfoDetails.self, forKey: .accepterVpcInfo)
        accepterVpcInfo = accepterVpcInfoDecoded
        let expirationTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .expirationTime)
        expirationTime = expirationTimeDecoded
        let requesterVpcInfoDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsEc2VpcPeeringConnectionVpcInfoDetails.self, forKey: .requesterVpcInfo)
        requesterVpcInfo = requesterVpcInfoDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsEc2VpcPeeringConnectionStatusDetails.self, forKey: .status)
        status = statusDecoded
        let vpcPeeringConnectionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .vpcPeeringConnectionId)
        vpcPeeringConnectionId = vpcPeeringConnectionIdDecoded
    }
}
