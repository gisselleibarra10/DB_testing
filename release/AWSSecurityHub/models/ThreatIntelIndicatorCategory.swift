// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    public enum ThreatIntelIndicatorCategory: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case backdoor
        case cardStealer
        case commandAndControl
        case dropSite
        case exploitSite
        case keylogger
        case sdkUnknown(Swift.String)

        public static var allCases: [ThreatIntelIndicatorCategory] {
            return [
                .backdoor,
                .cardStealer,
                .commandAndControl,
                .dropSite,
                .exploitSite,
                .keylogger,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .backdoor: return "BACKDOOR"
            case .cardStealer: return "CARD_STEALER"
            case .commandAndControl: return "COMMAND_AND_CONTROL"
            case .dropSite: return "DROP_SITE"
            case .exploitSite: return "EXPLOIT_SITE"
            case .keylogger: return "KEYLOGGER"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ThreatIntelIndicatorCategory(rawValue: rawValue) ?? ThreatIntelIndicatorCategory.sdkUnknown(rawValue)
        }
    }
}
