// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsDynamoDbTableProvisionedThroughput: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case lastDecreaseDateTime = "LastDecreaseDateTime"
        case lastIncreaseDateTime = "LastIncreaseDateTime"
        case numberOfDecreasesToday = "NumberOfDecreasesToday"
        case readCapacityUnits = "ReadCapacityUnits"
        case writeCapacityUnits = "WriteCapacityUnits"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lastDecreaseDateTime = self.lastDecreaseDateTime {
            try encodeContainer.encode(lastDecreaseDateTime, forKey: .lastDecreaseDateTime)
        }
        if let lastIncreaseDateTime = self.lastIncreaseDateTime {
            try encodeContainer.encode(lastIncreaseDateTime, forKey: .lastIncreaseDateTime)
        }
        if numberOfDecreasesToday != 0 {
            try encodeContainer.encode(numberOfDecreasesToday, forKey: .numberOfDecreasesToday)
        }
        if readCapacityUnits != 0 {
            try encodeContainer.encode(readCapacityUnits, forKey: .readCapacityUnits)
        }
        if writeCapacityUnits != 0 {
            try encodeContainer.encode(writeCapacityUnits, forKey: .writeCapacityUnits)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lastDecreaseDateTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastDecreaseDateTime)
        lastDecreaseDateTime = lastDecreaseDateTimeDecoded
        let lastIncreaseDateTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastIncreaseDateTime)
        lastIncreaseDateTime = lastIncreaseDateTimeDecoded
        let numberOfDecreasesTodayDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .numberOfDecreasesToday) ?? 0
        numberOfDecreasesToday = numberOfDecreasesTodayDecoded
        let readCapacityUnitsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .readCapacityUnits) ?? 0
        readCapacityUnits = readCapacityUnitsDecoded
        let writeCapacityUnitsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .writeCapacityUnits) ?? 0
        writeCapacityUnits = writeCapacityUnitsDecoded
    }
}
