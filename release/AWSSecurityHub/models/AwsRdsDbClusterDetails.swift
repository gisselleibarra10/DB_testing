// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Information about an Amazon RDS DB cluster.
    public struct AwsRdsDbClusterDetails: Swift.Equatable {
        /// The status of the database activity stream. Valid values are as follows:
        ///
        /// * started
        ///
        /// * starting
        ///
        /// * stopped
        ///
        /// * stopping
        public var activityStreamStatus: Swift.String?
        /// For all database engines except Aurora, specifies the allocated storage size in gibibytes (GiB).
        public var allocatedStorage: Swift.Int
        /// A list of the IAM roles that are associated with the DB cluster.
        public var associatedRoles: [SecurityHubClientTypes.AwsRdsDbClusterAssociatedRole]?
        /// A list of Availability Zones (AZs) where instances in the DB cluster can be created.
        public var availabilityZones: [Swift.String]?
        /// The number of days for which automated backups are retained.
        public var backupRetentionPeriod: Swift.Int
        /// Indicates when the DB cluster was created, in Universal Coordinated Time (UTC). Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var clusterCreateTime: Swift.String?
        /// Whether tags are copied from the DB cluster to snapshots of the DB cluster.
        public var copyTagsToSnapshot: Swift.Bool
        /// Whether the DB cluster is a clone of a DB cluster owned by a different Amazon Web Services account.
        public var crossAccountClone: Swift.Bool
        /// A list of custom endpoints for the DB cluster.
        public var customEndpoints: [Swift.String]?
        /// The name of the database.
        public var databaseName: Swift.String?
        /// The DB cluster identifier that the user assigned to the cluster. This identifier is the unique key that identifies a DB cluster.
        public var dbClusterIdentifier: Swift.String?
        /// The list of instances that make up the DB cluster.
        public var dbClusterMembers: [SecurityHubClientTypes.AwsRdsDbClusterMember]?
        /// The list of option group memberships for this DB cluster.
        public var dbClusterOptionGroupMemberships: [SecurityHubClientTypes.AwsRdsDbClusterOptionGroupMembership]?
        /// The name of the DB cluster parameter group for the DB cluster.
        public var dbClusterParameterGroup: Swift.String?
        /// The identifier of the DB cluster. The identifier must be unique within each Amazon Web Services Region and is immutable.
        public var dbClusterResourceId: Swift.String?
        /// The subnet group that is associated with the DB cluster, including the name, description, and subnets in the subnet group.
        public var dbSubnetGroup: Swift.String?
        /// Whether the DB cluster has deletion protection enabled.
        public var deletionProtection: Swift.Bool
        /// The Active Directory domain membership records that are associated with the DB cluster.
        public var domainMemberships: [SecurityHubClientTypes.AwsRdsDbDomainMembership]?
        /// A list of log types that this DB cluster is configured to export to CloudWatch Logs.
        public var enabledCloudWatchLogsExports: [Swift.String]?
        /// The connection endpoint for the primary instance of the DB cluster.
        public var endpoint: Swift.String?
        /// The name of the database engine to use for this DB cluster. Valid values are as follows:
        ///
        /// * aurora
        ///
        /// * aurora-mysql
        ///
        /// * aurora-postgresql
        public var engine: Swift.String?
        /// The database engine mode of the DB cluster.Valid values are as follows:
        ///
        /// * global
        ///
        /// * multimaster
        ///
        /// * parallelquery
        ///
        /// * provisioned
        ///
        /// * serverless
        public var engineMode: Swift.String?
        /// The version number of the database engine to use.
        public var engineVersion: Swift.String?
        /// Specifies the identifier that Amazon Route 53 assigns when you create a hosted zone.
        public var hostedZoneId: Swift.String?
        /// Whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
        public var httpEndpointEnabled: Swift.Bool
        /// Whether the mapping of IAM accounts to database accounts is enabled.
        public var iamDatabaseAuthenticationEnabled: Swift.Bool
        /// The ARN of the KMS master key that is used to encrypt the database instances in the DB cluster.
        public var kmsKeyId: Swift.String?
        /// The name of the master user for the DB cluster.
        public var masterUsername: Swift.String?
        /// Whether the DB cluster has instances in multiple Availability Zones.
        public var multiAz: Swift.Bool
        /// The port number on which the DB instances in the DB cluster accept connections.
        public var port: Swift.Int
        /// The range of time each day when automated backups are created, if automated backups are enabled. Uses the format HH:MM-HH:MM. For example, 04:52-05:22.
        public var preferredBackupWindow: Swift.String?
        /// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC). Uses the format :HH:MM-:HH:MM. For the day values, use mon|tue|wed|thu|fri|sat|sun. For example, sun:09:32-sun:10:02.
        public var preferredMaintenanceWindow: Swift.String?
        /// The identifiers of the read replicas that are associated with this DB cluster.
        public var readReplicaIdentifiers: [Swift.String]?
        /// The reader endpoint for the DB cluster.
        public var readerEndpoint: Swift.String?
        /// The current status of this DB cluster.
        public var status: Swift.String?
        /// Whether the DB cluster is encrypted.
        public var storageEncrypted: Swift.Bool
        /// A list of VPC security groups that the DB cluster belongs to.
        public var vpcSecurityGroups: [SecurityHubClientTypes.AwsRdsDbInstanceVpcSecurityGroup]?

        public init (
            activityStreamStatus: Swift.String? = nil,
            allocatedStorage: Swift.Int = 0,
            associatedRoles: [SecurityHubClientTypes.AwsRdsDbClusterAssociatedRole]? = nil,
            availabilityZones: [Swift.String]? = nil,
            backupRetentionPeriod: Swift.Int = 0,
            clusterCreateTime: Swift.String? = nil,
            copyTagsToSnapshot: Swift.Bool = false,
            crossAccountClone: Swift.Bool = false,
            customEndpoints: [Swift.String]? = nil,
            databaseName: Swift.String? = nil,
            dbClusterIdentifier: Swift.String? = nil,
            dbClusterMembers: [SecurityHubClientTypes.AwsRdsDbClusterMember]? = nil,
            dbClusterOptionGroupMemberships: [SecurityHubClientTypes.AwsRdsDbClusterOptionGroupMembership]? = nil,
            dbClusterParameterGroup: Swift.String? = nil,
            dbClusterResourceId: Swift.String? = nil,
            dbSubnetGroup: Swift.String? = nil,
            deletionProtection: Swift.Bool = false,
            domainMemberships: [SecurityHubClientTypes.AwsRdsDbDomainMembership]? = nil,
            enabledCloudWatchLogsExports: [Swift.String]? = nil,
            endpoint: Swift.String? = nil,
            engine: Swift.String? = nil,
            engineMode: Swift.String? = nil,
            engineVersion: Swift.String? = nil,
            hostedZoneId: Swift.String? = nil,
            httpEndpointEnabled: Swift.Bool = false,
            iamDatabaseAuthenticationEnabled: Swift.Bool = false,
            kmsKeyId: Swift.String? = nil,
            masterUsername: Swift.String? = nil,
            multiAz: Swift.Bool = false,
            port: Swift.Int = 0,
            preferredBackupWindow: Swift.String? = nil,
            preferredMaintenanceWindow: Swift.String? = nil,
            readReplicaIdentifiers: [Swift.String]? = nil,
            readerEndpoint: Swift.String? = nil,
            status: Swift.String? = nil,
            storageEncrypted: Swift.Bool = false,
            vpcSecurityGroups: [SecurityHubClientTypes.AwsRdsDbInstanceVpcSecurityGroup]? = nil
        )
        {
            self.activityStreamStatus = activityStreamStatus
            self.allocatedStorage = allocatedStorage
            self.associatedRoles = associatedRoles
            self.availabilityZones = availabilityZones
            self.backupRetentionPeriod = backupRetentionPeriod
            self.clusterCreateTime = clusterCreateTime
            self.copyTagsToSnapshot = copyTagsToSnapshot
            self.crossAccountClone = crossAccountClone
            self.customEndpoints = customEndpoints
            self.databaseName = databaseName
            self.dbClusterIdentifier = dbClusterIdentifier
            self.dbClusterMembers = dbClusterMembers
            self.dbClusterOptionGroupMemberships = dbClusterOptionGroupMemberships
            self.dbClusterParameterGroup = dbClusterParameterGroup
            self.dbClusterResourceId = dbClusterResourceId
            self.dbSubnetGroup = dbSubnetGroup
            self.deletionProtection = deletionProtection
            self.domainMemberships = domainMemberships
            self.enabledCloudWatchLogsExports = enabledCloudWatchLogsExports
            self.endpoint = endpoint
            self.engine = engine
            self.engineMode = engineMode
            self.engineVersion = engineVersion
            self.hostedZoneId = hostedZoneId
            self.httpEndpointEnabled = httpEndpointEnabled
            self.iamDatabaseAuthenticationEnabled = iamDatabaseAuthenticationEnabled
            self.kmsKeyId = kmsKeyId
            self.masterUsername = masterUsername
            self.multiAz = multiAz
            self.port = port
            self.preferredBackupWindow = preferredBackupWindow
            self.preferredMaintenanceWindow = preferredMaintenanceWindow
            self.readReplicaIdentifiers = readReplicaIdentifiers
            self.readerEndpoint = readerEndpoint
            self.status = status
            self.storageEncrypted = storageEncrypted
            self.vpcSecurityGroups = vpcSecurityGroups
        }
    }

}
