// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.Standard: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description = "Description"
        case enabledByDefault = "EnabledByDefault"
        case name = "Name"
        case standardsArn = "StandardsArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if enabledByDefault != false {
            try encodeContainer.encode(enabledByDefault, forKey: .enabledByDefault)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let standardsArn = self.standardsArn {
            try encodeContainer.encode(standardsArn, forKey: .standardsArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let standardsArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .standardsArn)
        standardsArn = standardsArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let enabledByDefaultDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabledByDefault) ?? false
        enabledByDefault = enabledByDefaultDecoded
    }
}
