// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Contains information about an IAM role, including all of the role's policies.
    public struct AwsIamRoleDetails: Swift.Equatable {
        /// The trust policy that grants permission to assume the role.
        public var assumeRolePolicyDocument: Swift.String?
        /// The list of the managed policies that are attached to the role.
        public var attachedManagedPolicies: [SecurityHubClientTypes.AwsIamAttachedManagedPolicy]?
        /// Indicates when the role was created. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var createDate: Swift.String?
        /// The list of instance profiles that contain this role.
        public var instanceProfileList: [SecurityHubClientTypes.AwsIamInstanceProfile]?
        /// The maximum session duration (in seconds) that you want to set for the specified role.
        public var maxSessionDuration: Swift.Int
        /// The path to the role.
        public var path: Swift.String?
        /// Information about the policy used to set the permissions boundary for an IAM principal.
        public var permissionsBoundary: SecurityHubClientTypes.AwsIamPermissionsBoundary?
        /// The stable and unique string identifying the role.
        public var roleId: Swift.String?
        /// The friendly name that identifies the role.
        public var roleName: Swift.String?
        /// The list of inline policies that are embedded in the role.
        public var rolePolicyList: [SecurityHubClientTypes.AwsIamRolePolicy]?

        public init (
            assumeRolePolicyDocument: Swift.String? = nil,
            attachedManagedPolicies: [SecurityHubClientTypes.AwsIamAttachedManagedPolicy]? = nil,
            createDate: Swift.String? = nil,
            instanceProfileList: [SecurityHubClientTypes.AwsIamInstanceProfile]? = nil,
            maxSessionDuration: Swift.Int = 0,
            path: Swift.String? = nil,
            permissionsBoundary: SecurityHubClientTypes.AwsIamPermissionsBoundary? = nil,
            roleId: Swift.String? = nil,
            roleName: Swift.String? = nil,
            rolePolicyList: [SecurityHubClientTypes.AwsIamRolePolicy]? = nil
        )
        {
            self.assumeRolePolicyDocument = assumeRolePolicyDocument
            self.attachedManagedPolicies = attachedManagedPolicies
            self.createDate = createDate
            self.instanceProfileList = instanceProfileList
            self.maxSessionDuration = maxSessionDuration
            self.path = path
            self.permissionsBoundary = permissionsBoundary
            self.roleId = roleId
            self.roleName = roleName
            self.rolePolicyList = rolePolicyList
        }
    }

}
