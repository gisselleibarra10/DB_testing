// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Details about a task definition. A task definition describes the container and volume definitions of an Amazon Elastic Container Service task.
    public struct AwsEcsTaskDefinitionDetails: Swift.Equatable {
        /// The container definitions that describe the containers that make up the task.
        public var containerDefinitions: [SecurityHubClientTypes.AwsEcsTaskDefinitionContainerDefinitionsDetails]?
        /// The number of CPU units used by the task.Valid values are as follows:
        ///
        /// * 256 (.25 vCPU)
        ///
        /// * 512 (.5 vCPU)
        ///
        /// * 1024 (1 vCPU)
        ///
        /// * 2048 (2 vCPU)
        ///
        /// * 4096 (4 vCPU)
        public var cpu: Swift.String?
        /// The ARN of the task execution role that grants the container agent permission to make API calls on behalf of the container user.
        public var executionRoleArn: Swift.String?
        /// The name of a family that this task definition is registered to.
        public var family: Swift.String?
        /// The Elastic Inference accelerators to use for the containers in the task.
        public var inferenceAccelerators: [SecurityHubClientTypes.AwsEcsTaskDefinitionInferenceAcceleratorsDetails]?
        /// The inter-process communication (IPC) resource namespace to use for the containers in the task. Valid values are as follows:
        ///
        /// * host
        ///
        /// * none
        ///
        /// * task
        public var ipcMode: Swift.String?
        /// The amount (in MiB) of memory used by the task. For tasks that are hosted on Amazon EC2, you can provide a task-level memory value or a container-level memory value. For tasks that are hosted on Fargate, you must use one of the [specified values](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size) in the Amazon Elastic Container Service Developer Guide , which determines your range of supported values for the Cpu and Memory parameters.
        public var memory: Swift.String?
        /// The Docker networking mode to use for the containers in the task. Valid values are as follows:
        ///
        /// * awsvpc
        ///
        /// * bridge
        ///
        /// * host
        ///
        /// * none
        public var networkMode: Swift.String?
        /// The process namespace to use for the containers in the task. Valid values are host or task.
        public var pidMode: Swift.String?
        /// The placement constraint objects to use for tasks.
        public var placementConstraints: [SecurityHubClientTypes.AwsEcsTaskDefinitionPlacementConstraintsDetails]?
        /// The configuration details for the App Mesh proxy.
        public var proxyConfiguration: SecurityHubClientTypes.AwsEcsTaskDefinitionProxyConfigurationDetails?
        /// The task launch types that the task definition was validated against.
        public var requiresCompatibilities: [Swift.String]?
        /// The short name or ARN of the IAM role that grants containers in the task permission to call Amazon Web Services API operations on your behalf.
        public var taskRoleArn: Swift.String?
        /// The data volume definitions for the task.
        public var volumes: [SecurityHubClientTypes.AwsEcsTaskDefinitionVolumesDetails]?

        public init (
            containerDefinitions: [SecurityHubClientTypes.AwsEcsTaskDefinitionContainerDefinitionsDetails]? = nil,
            cpu: Swift.String? = nil,
            executionRoleArn: Swift.String? = nil,
            family: Swift.String? = nil,
            inferenceAccelerators: [SecurityHubClientTypes.AwsEcsTaskDefinitionInferenceAcceleratorsDetails]? = nil,
            ipcMode: Swift.String? = nil,
            memory: Swift.String? = nil,
            networkMode: Swift.String? = nil,
            pidMode: Swift.String? = nil,
            placementConstraints: [SecurityHubClientTypes.AwsEcsTaskDefinitionPlacementConstraintsDetails]? = nil,
            proxyConfiguration: SecurityHubClientTypes.AwsEcsTaskDefinitionProxyConfigurationDetails? = nil,
            requiresCompatibilities: [Swift.String]? = nil,
            taskRoleArn: Swift.String? = nil,
            volumes: [SecurityHubClientTypes.AwsEcsTaskDefinitionVolumesDetails]? = nil
        )
        {
            self.containerDefinitions = containerDefinitions
            self.cpu = cpu
            self.executionRoleArn = executionRoleArn
            self.family = family
            self.inferenceAccelerators = inferenceAccelerators
            self.ipcMode = ipcMode
            self.memory = memory
            self.networkMode = networkMode
            self.pidMode = pidMode
            self.placementConstraints = placementConstraints
            self.proxyConfiguration = proxyConfiguration
            self.requiresCompatibilities = requiresCompatibilities
            self.taskRoleArn = taskRoleArn
            self.volumes = volumes
        }
    }

}
