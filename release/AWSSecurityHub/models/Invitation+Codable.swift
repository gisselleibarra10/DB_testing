// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.Invitation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case accountId = "AccountId"
        case invitationId = "InvitationId"
        case invitedAt = "InvitedAt"
        case memberStatus = "MemberStatus"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountId = self.accountId {
            try encodeContainer.encode(accountId, forKey: .accountId)
        }
        if let invitationId = self.invitationId {
            try encodeContainer.encode(invitationId, forKey: .invitationId)
        }
        if let invitedAt = self.invitedAt {
            try encodeContainer.encode(invitedAt.timeIntervalSince1970, forKey: .invitedAt)
        }
        if let memberStatus = self.memberStatus {
            try encodeContainer.encode(memberStatus, forKey: .memberStatus)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let invitationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .invitationId)
        invitationId = invitationIdDecoded
        let invitedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .invitedAt)
        invitedAt = invitedAtDecoded
        let memberStatusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .memberStatus)
        memberStatus = memberStatusDecoded
    }
}
