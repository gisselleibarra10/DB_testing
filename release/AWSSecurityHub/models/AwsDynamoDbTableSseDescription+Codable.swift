// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsDynamoDbTableSseDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case inaccessibleEncryptionDateTime = "InaccessibleEncryptionDateTime"
        case kmsMasterKeyArn = "KmsMasterKeyArn"
        case sseType = "SseType"
        case status = "Status"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inaccessibleEncryptionDateTime = self.inaccessibleEncryptionDateTime {
            try encodeContainer.encode(inaccessibleEncryptionDateTime, forKey: .inaccessibleEncryptionDateTime)
        }
        if let kmsMasterKeyArn = self.kmsMasterKeyArn {
            try encodeContainer.encode(kmsMasterKeyArn, forKey: .kmsMasterKeyArn)
        }
        if let sseType = self.sseType {
            try encodeContainer.encode(sseType, forKey: .sseType)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inaccessibleEncryptionDateTimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .inaccessibleEncryptionDateTime)
        inaccessibleEncryptionDateTime = inaccessibleEncryptionDateTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let sseTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sseType)
        sseType = sseTypeDecoded
        let kmsMasterKeyArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .kmsMasterKeyArn)
        kmsMasterKeyArn = kmsMasterKeyArnDecoded
    }
}
