// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsCloudFrontDistributionOriginCustomOriginConfig: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case httpPort = "HttpPort"
        case httpsPort = "HttpsPort"
        case originKeepaliveTimeout = "OriginKeepaliveTimeout"
        case originProtocolPolicy = "OriginProtocolPolicy"
        case originReadTimeout = "OriginReadTimeout"
        case originSslProtocols = "OriginSslProtocols"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if httpPort != 0 {
            try encodeContainer.encode(httpPort, forKey: .httpPort)
        }
        if httpsPort != 0 {
            try encodeContainer.encode(httpsPort, forKey: .httpsPort)
        }
        if originKeepaliveTimeout != 0 {
            try encodeContainer.encode(originKeepaliveTimeout, forKey: .originKeepaliveTimeout)
        }
        if let originProtocolPolicy = self.originProtocolPolicy {
            try encodeContainer.encode(originProtocolPolicy, forKey: .originProtocolPolicy)
        }
        if originReadTimeout != 0 {
            try encodeContainer.encode(originReadTimeout, forKey: .originReadTimeout)
        }
        if let originSslProtocols = self.originSslProtocols {
            try encodeContainer.encode(originSslProtocols, forKey: .originSslProtocols)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let httpPortDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .httpPort) ?? 0
        httpPort = httpPortDecoded
        let httpsPortDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .httpsPort) ?? 0
        httpsPort = httpsPortDecoded
        let originKeepaliveTimeoutDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .originKeepaliveTimeout) ?? 0
        originKeepaliveTimeout = originKeepaliveTimeoutDecoded
        let originProtocolPolicyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .originProtocolPolicy)
        originProtocolPolicy = originProtocolPolicyDecoded
        let originReadTimeoutDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .originReadTimeout) ?? 0
        originReadTimeout = originReadTimeoutDecoded
        let originSslProtocolsDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsCloudFrontDistributionOriginSslProtocols.self, forKey: .originSslProtocols)
        originSslProtocols = originSslProtocolsDecoded
    }
}
