// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsS3BucketNotificationConfigurationS3KeyFilter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filterRules = "FilterRules"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filterRules = filterRules {
            var filterRulesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filterRules)
            for awss3bucketnotificationconfigurations3keyfilterrules0 in filterRules {
                try filterRulesContainer.encode(awss3bucketnotificationconfigurations3keyfilterrules0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterRulesContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.AwsS3BucketNotificationConfigurationS3KeyFilterRule?].self, forKey: .filterRules)
        var filterRulesDecoded0:[SecurityHubClientTypes.AwsS3BucketNotificationConfigurationS3KeyFilterRule]? = nil
        if let filterRulesContainer = filterRulesContainer {
            filterRulesDecoded0 = [SecurityHubClientTypes.AwsS3BucketNotificationConfigurationS3KeyFilterRule]()
            for structure0 in filterRulesContainer {
                if let structure0 = structure0 {
                    filterRulesDecoded0?.append(structure0)
                }
            }
        }
        filterRules = filterRulesDecoded0
    }
}
