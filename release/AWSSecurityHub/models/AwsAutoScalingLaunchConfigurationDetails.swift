// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Details about a launch configuration.
    public struct AwsAutoScalingLaunchConfigurationDetails: Swift.Equatable {
        /// For Auto Scaling groups that run in a VPC, specifies whether to assign a public IP address to the group's instances.
        public var associatePublicIpAddress: Swift.Bool
        /// Specifies the block devices for the instance.
        public var blockDeviceMappings: [SecurityHubClientTypes.AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails]?
        /// The identifier of a ClassicLink-enabled VPC that EC2-Classic instances are linked to.
        public var classicLinkVpcId: Swift.String?
        /// The identifiers of one or more security groups for the VPC that is specified in ClassicLinkVPCId.
        public var classicLinkVpcSecurityGroups: [Swift.String]?
        /// The creation date and time for the launch configuration. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var createdTime: Swift.String?
        /// Whether the launch configuration is optimized for Amazon EBS I/O.
        public var ebsOptimized: Swift.Bool
        /// The name or the ARN of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.
        public var iamInstanceProfile: Swift.String?
        /// The identifier of the Amazon Machine Image (AMI) that is used to launch EC2 instances.
        public var imageId: Swift.String?
        /// Indicates the type of monitoring for instances in the group.
        public var instanceMonitoring: SecurityHubClientTypes.AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails?
        /// The instance type for the instances.
        public var instanceType: Swift.String?
        /// The identifier of the kernel associated with the AMI.
        public var kernelId: Swift.String?
        /// The name of the key pair.
        public var keyName: Swift.String?
        /// The name of the launch configuration.
        public var launchConfigurationName: Swift.String?
        /// The metadata options for the instances.
        public var metadataOptions: SecurityHubClientTypes.AwsAutoScalingLaunchConfigurationMetadataOptions?
        /// The tenancy of the instance. An instance with dedicated tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC.
        public var placementTenancy: Swift.String?
        /// The identifier of the RAM disk associated with the AMI.
        public var ramdiskId: Swift.String?
        /// The security groups to assign to the instances in the Auto Scaling group.
        public var securityGroups: [Swift.String]?
        /// The maximum hourly price to be paid for any Spot Instance that is launched to fulfill the request.
        public var spotPrice: Swift.String?
        /// The user data to make available to the launched EC2 instances. Must be base64-encoded text.
        public var userData: Swift.String?

        public init (
            associatePublicIpAddress: Swift.Bool = false,
            blockDeviceMappings: [SecurityHubClientTypes.AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails]? = nil,
            classicLinkVpcId: Swift.String? = nil,
            classicLinkVpcSecurityGroups: [Swift.String]? = nil,
            createdTime: Swift.String? = nil,
            ebsOptimized: Swift.Bool = false,
            iamInstanceProfile: Swift.String? = nil,
            imageId: Swift.String? = nil,
            instanceMonitoring: SecurityHubClientTypes.AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails? = nil,
            instanceType: Swift.String? = nil,
            kernelId: Swift.String? = nil,
            keyName: Swift.String? = nil,
            launchConfigurationName: Swift.String? = nil,
            metadataOptions: SecurityHubClientTypes.AwsAutoScalingLaunchConfigurationMetadataOptions? = nil,
            placementTenancy: Swift.String? = nil,
            ramdiskId: Swift.String? = nil,
            securityGroups: [Swift.String]? = nil,
            spotPrice: Swift.String? = nil,
            userData: Swift.String? = nil
        )
        {
            self.associatePublicIpAddress = associatePublicIpAddress
            self.blockDeviceMappings = blockDeviceMappings
            self.classicLinkVpcId = classicLinkVpcId
            self.classicLinkVpcSecurityGroups = classicLinkVpcSecurityGroups
            self.createdTime = createdTime
            self.ebsOptimized = ebsOptimized
            self.iamInstanceProfile = iamInstanceProfile
            self.imageId = imageId
            self.instanceMonitoring = instanceMonitoring
            self.instanceType = instanceType
            self.kernelId = kernelId
            self.keyName = keyName
            self.launchConfigurationName = launchConfigurationName
            self.metadataOptions = metadataOptions
            self.placementTenancy = placementTenancy
            self.ramdiskId = ramdiskId
            self.securityGroups = securityGroups
            self.spotPrice = spotPrice
            self.userData = userData
        }
    }

}
