// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsBackupBackupVaultNotificationsDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case backupVaultEvents = "BackupVaultEvents"
        case snsTopicArn = "SnsTopicArn"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let backupVaultEvents = backupVaultEvents {
            var backupVaultEventsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .backupVaultEvents)
            for nonemptystringlist0 in backupVaultEvents {
                try backupVaultEventsContainer.encode(nonemptystringlist0)
            }
        }
        if let snsTopicArn = self.snsTopicArn {
            try encodeContainer.encode(snsTopicArn, forKey: .snsTopicArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupVaultEventsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .backupVaultEvents)
        var backupVaultEventsDecoded0:[Swift.String]? = nil
        if let backupVaultEventsContainer = backupVaultEventsContainer {
            backupVaultEventsDecoded0 = [Swift.String]()
            for string0 in backupVaultEventsContainer {
                if let string0 = string0 {
                    backupVaultEventsDecoded0?.append(string0)
                }
            }
        }
        backupVaultEvents = backupVaultEventsDecoded0
        let snsTopicArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .snsTopicArn)
        snsTopicArn = snsTopicArnDecoded
    }
}
