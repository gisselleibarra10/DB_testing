// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.RuleGroupSourceStatelessRulesAndCustomActionsDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customActions = "CustomActions"
        case statelessRules = "StatelessRules"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customActions = customActions {
            var customActionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .customActions)
            for rulegroupsourcecustomactionslist0 in customActions {
                try customActionsContainer.encode(rulegroupsourcecustomactionslist0)
            }
        }
        if let statelessRules = statelessRules {
            var statelessRulesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .statelessRules)
            for rulegroupsourcestatelessruleslist0 in statelessRules {
                try statelessRulesContainer.encode(rulegroupsourcestatelessruleslist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customActionsContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.RuleGroupSourceCustomActionsDetails?].self, forKey: .customActions)
        var customActionsDecoded0:[SecurityHubClientTypes.RuleGroupSourceCustomActionsDetails]? = nil
        if let customActionsContainer = customActionsContainer {
            customActionsDecoded0 = [SecurityHubClientTypes.RuleGroupSourceCustomActionsDetails]()
            for structure0 in customActionsContainer {
                if let structure0 = structure0 {
                    customActionsDecoded0?.append(structure0)
                }
            }
        }
        customActions = customActionsDecoded0
        let statelessRulesContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.RuleGroupSourceStatelessRulesDetails?].self, forKey: .statelessRules)
        var statelessRulesDecoded0:[SecurityHubClientTypes.RuleGroupSourceStatelessRulesDetails]? = nil
        if let statelessRulesContainer = statelessRulesContainer {
            statelessRulesDecoded0 = [SecurityHubClientTypes.RuleGroupSourceStatelessRulesDetails]()
            for structure0 in statelessRulesContainer {
                if let structure0 = structure0 {
                    statelessRulesDecoded0?.append(structure0)
                }
            }
        }
        statelessRules = statelessRulesDecoded0
    }
}
