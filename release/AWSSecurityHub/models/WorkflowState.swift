// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    @available(*, deprecated, message: "This filter is deprecated. Instead, use SeverityLabel or FindingProviderFieldsSeverityLabel.")
    public enum WorkflowState: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case assigned
        case deferred
        case inProgress
        case new
        case resolved
        case sdkUnknown(Swift.String)

        public static var allCases: [WorkflowState] {
            return [
                .assigned,
                .deferred,
                .inProgress,
                .new,
                .resolved,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .assigned: return "ASSIGNED"
            case .deferred: return "DEFERRED"
            case .inProgress: return "IN_PROGRESS"
            case .new: return "NEW"
            case .resolved: return "RESOLVED"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = WorkflowState(rawValue: rawValue) ?? WorkflowState.sdkUnknown(rawValue)
        }
    }
}
