// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.ContainerDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case containerRuntime = "ContainerRuntime"
        case imageId = "ImageId"
        case imageName = "ImageName"
        case launchedAt = "LaunchedAt"
        case name = "Name"
        case privileged = "Privileged"
        case volumeMounts = "VolumeMounts"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let containerRuntime = self.containerRuntime {
            try encodeContainer.encode(containerRuntime, forKey: .containerRuntime)
        }
        if let imageId = self.imageId {
            try encodeContainer.encode(imageId, forKey: .imageId)
        }
        if let imageName = self.imageName {
            try encodeContainer.encode(imageName, forKey: .imageName)
        }
        if let launchedAt = self.launchedAt {
            try encodeContainer.encode(launchedAt, forKey: .launchedAt)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if privileged != false {
            try encodeContainer.encode(privileged, forKey: .privileged)
        }
        if let volumeMounts = volumeMounts {
            var volumeMountsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .volumeMounts)
            for volumemountlist0 in volumeMounts {
                try volumeMountsContainer.encode(volumemountlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let containerRuntimeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .containerRuntime)
        containerRuntime = containerRuntimeDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let imageIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imageId)
        imageId = imageIdDecoded
        let imageNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .imageName)
        imageName = imageNameDecoded
        let launchedAtDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .launchedAt)
        launchedAt = launchedAtDecoded
        let volumeMountsContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.VolumeMount?].self, forKey: .volumeMounts)
        var volumeMountsDecoded0:[SecurityHubClientTypes.VolumeMount]? = nil
        if let volumeMountsContainer = volumeMountsContainer {
            volumeMountsDecoded0 = [SecurityHubClientTypes.VolumeMount]()
            for structure0 in volumeMountsContainer {
                if let structure0 = structure0 {
                    volumeMountsDecoded0?.append(structure0)
                }
            }
        }
        volumeMounts = volumeMountsDecoded0
        let privilegedDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .privileged) ?? false
        privileged = privilegedDecoded
    }
}
