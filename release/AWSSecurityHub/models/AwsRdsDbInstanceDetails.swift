// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Contains the details of an Amazon RDS DB instance.
    public struct AwsRdsDbInstanceDetails: Swift.Equatable {
        /// The amount of storage (in gigabytes) to initially allocate for the DB instance.
        public var allocatedStorage: Swift.Int
        /// The IAM roles associated with the DB instance.
        public var associatedRoles: [SecurityHubClientTypes.AwsRdsDbInstanceAssociatedRole]?
        /// Indicates whether minor version patches are applied automatically.
        public var autoMinorVersionUpgrade: Swift.Bool
        /// The Availability Zone where the DB instance will be created.
        public var availabilityZone: Swift.String?
        /// The number of days for which to retain automated backups.
        public var backupRetentionPeriod: Swift.Int
        /// The identifier of the CA certificate for this DB instance.
        public var cACertificateIdentifier: Swift.String?
        /// The name of the character set that this DB instance is associated with.
        public var characterSetName: Swift.String?
        /// Whether to copy resource tags to snapshots of the DB instance.
        public var copyTagsToSnapshot: Swift.Bool
        /// If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.
        public var dBClusterIdentifier: Swift.String?
        /// Contains the name of the compute and memory capacity class of the DB instance.
        public var dBInstanceClass: Swift.String?
        /// Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.
        public var dBInstanceIdentifier: Swift.String?
        /// The meaning of this parameter differs according to the database engine you use. MySQL, MariaDB, SQL Server, PostgreSQL Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance. Oracle Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.
        public var dBName: Swift.String?
        /// Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.
        public var dbInstancePort: Swift.Int
        /// The current status of the DB instance.
        public var dbInstanceStatus: Swift.String?
        /// A list of the DB parameter groups to assign to the DB instance.
        public var dbParameterGroups: [SecurityHubClientTypes.AwsRdsDbParameterGroup]?
        /// A list of the DB security groups to assign to the DB instance.
        public var dbSecurityGroups: [Swift.String]?
        /// Information about the subnet group that is associated with the DB instance.
        public var dbSubnetGroup: SecurityHubClientTypes.AwsRdsDbSubnetGroup?
        /// The Amazon Web Services Region-unique, immutable identifier for the DB instance. This identifier is found in CloudTrail log entries whenever the KMS key for the DB instance is accessed.
        public var dbiResourceId: Swift.String?
        /// Indicates whether the DB instance has deletion protection enabled. When deletion protection is enabled, the database cannot be deleted.
        public var deletionProtection: Swift.Bool
        /// The Active Directory domain membership records associated with the DB instance.
        public var domainMemberships: [SecurityHubClientTypes.AwsRdsDbDomainMembership]?
        /// A list of log types that this DB instance is configured to export to CloudWatch Logs.
        public var enabledCloudWatchLogsExports: [Swift.String]?
        /// Specifies the connection endpoint.
        public var endpoint: SecurityHubClientTypes.AwsRdsDbInstanceEndpoint?
        /// Provides the name of the database engine to use for this DB instance.
        public var engine: Swift.String?
        /// Indicates the database engine version.
        public var engineVersion: Swift.String?
        /// The ARN of the CloudWatch Logs log stream that receives the enhanced monitoring metrics data for the DB instance.
        public var enhancedMonitoringResourceArn: Swift.String?
        /// True if mapping of IAM accounts to database accounts is enabled, and otherwise false. IAM database authentication can be enabled for the following database engines.
        ///
        /// * For MySQL 5.6, minor version 5.6.34 or higher
        ///
        /// * For MySQL 5.7, minor version 5.7.16 or higher
        ///
        /// * Aurora 5.6 or higher
        public var iAMDatabaseAuthenticationEnabled: Swift.Bool
        /// Indicates when the DB instance was created. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var instanceCreateTime: Swift.String?
        /// Specifies the provisioned IOPS (I/O operations per second) for this DB instance.
        public var iops: Swift.Int
        /// If StorageEncrypted is true, the KMS key identifier for the encrypted DB instance.
        public var kmsKeyId: Swift.String?
        /// Specifies the latest time to which a database can be restored with point-in-time restore. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var latestRestorableTime: Swift.String?
        /// License model information for this DB instance.
        public var licenseModel: Swift.String?
        /// Specifies the connection endpoint.
        public var listenerEndpoint: SecurityHubClientTypes.AwsRdsDbInstanceEndpoint?
        /// The master user name of the DB instance.
        public var masterUsername: Swift.String?
        /// The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
        public var maxAllocatedStorage: Swift.Int
        /// The interval, in seconds, between points when enhanced monitoring metrics are collected for the DB instance.
        public var monitoringInterval: Swift.Int
        /// The ARN for the IAM role that permits Amazon RDS to send enhanced monitoring metrics to CloudWatch Logs.
        public var monitoringRoleArn: Swift.String?
        /// Whether the DB instance is a multiple Availability Zone deployment.
        public var multiAz: Swift.Bool
        /// The list of option group memberships for this DB instance.
        public var optionGroupMemberships: [SecurityHubClientTypes.AwsRdsDbOptionGroupMembership]?
        /// Changes to the DB instance that are currently pending.
        public var pendingModifiedValues: SecurityHubClientTypes.AwsRdsDbPendingModifiedValues?
        /// Indicates whether Performance Insights is enabled for the DB instance.
        public var performanceInsightsEnabled: Swift.Bool
        /// The identifier of the KMS key used to encrypt the Performance Insights data.
        public var performanceInsightsKmsKeyId: Swift.String?
        /// The number of days to retain Performance Insights data.
        public var performanceInsightsRetentionPeriod: Swift.Int
        /// The range of time each day when automated backups are created, if automated backups are enabled. Uses the format HH:MM-HH:MM. For example, 04:52-05:22.
        public var preferredBackupWindow: Swift.String?
        /// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC). Uses the format :HH:MM-:HH:MM. For the day values, use mon|tue|wed|thu|fri|sat|sun. For example, sun:09:32-sun:10:02.
        public var preferredMaintenanceWindow: Swift.String?
        /// The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
        public var processorFeatures: [SecurityHubClientTypes.AwsRdsDbProcessorFeature]?
        /// The order in which to promote an Aurora replica to the primary instance after a failure of the existing primary instance.
        public var promotionTier: Swift.Int
        /// Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.
        public var publiclyAccessible: Swift.Bool
        /// List of identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica.
        public var readReplicaDBClusterIdentifiers: [Swift.String]?
        /// List of identifiers of the read replicas associated with this DB instance.
        public var readReplicaDBInstanceIdentifiers: [Swift.String]?
        /// If this DB instance is a read replica, contains the identifier of the source DB instance.
        public var readReplicaSourceDBInstanceIdentifier: Swift.String?
        /// For a DB instance with multi-Availability Zone support, the name of the secondary Availability Zone.
        public var secondaryAvailabilityZone: Swift.String?
        /// The status of a read replica. If the instance isn't a read replica, this is empty.
        public var statusInfos: [SecurityHubClientTypes.AwsRdsDbStatusInfo]?
        /// Specifies whether the DB instance is encrypted.
        public var storageEncrypted: Swift.Bool
        /// The storage type for the DB instance.
        public var storageType: Swift.String?
        /// The ARN from the key store with which the instance is associated for TDE encryption.
        public var tdeCredentialArn: Swift.String?
        /// The time zone of the DB instance.
        public var timezone: Swift.String?
        /// A list of VPC security groups that the DB instance belongs to.
        public var vpcSecurityGroups: [SecurityHubClientTypes.AwsRdsDbInstanceVpcSecurityGroup]?

        public init (
            allocatedStorage: Swift.Int = 0,
            associatedRoles: [SecurityHubClientTypes.AwsRdsDbInstanceAssociatedRole]? = nil,
            autoMinorVersionUpgrade: Swift.Bool = false,
            availabilityZone: Swift.String? = nil,
            backupRetentionPeriod: Swift.Int = 0,
            cACertificateIdentifier: Swift.String? = nil,
            characterSetName: Swift.String? = nil,
            copyTagsToSnapshot: Swift.Bool = false,
            dBClusterIdentifier: Swift.String? = nil,
            dBInstanceClass: Swift.String? = nil,
            dBInstanceIdentifier: Swift.String? = nil,
            dBName: Swift.String? = nil,
            dbInstancePort: Swift.Int = 0,
            dbInstanceStatus: Swift.String? = nil,
            dbParameterGroups: [SecurityHubClientTypes.AwsRdsDbParameterGroup]? = nil,
            dbSecurityGroups: [Swift.String]? = nil,
            dbSubnetGroup: SecurityHubClientTypes.AwsRdsDbSubnetGroup? = nil,
            dbiResourceId: Swift.String? = nil,
            deletionProtection: Swift.Bool = false,
            domainMemberships: [SecurityHubClientTypes.AwsRdsDbDomainMembership]? = nil,
            enabledCloudWatchLogsExports: [Swift.String]? = nil,
            endpoint: SecurityHubClientTypes.AwsRdsDbInstanceEndpoint? = nil,
            engine: Swift.String? = nil,
            engineVersion: Swift.String? = nil,
            enhancedMonitoringResourceArn: Swift.String? = nil,
            iAMDatabaseAuthenticationEnabled: Swift.Bool = false,
            instanceCreateTime: Swift.String? = nil,
            iops: Swift.Int = 0,
            kmsKeyId: Swift.String? = nil,
            latestRestorableTime: Swift.String? = nil,
            licenseModel: Swift.String? = nil,
            listenerEndpoint: SecurityHubClientTypes.AwsRdsDbInstanceEndpoint? = nil,
            masterUsername: Swift.String? = nil,
            maxAllocatedStorage: Swift.Int = 0,
            monitoringInterval: Swift.Int = 0,
            monitoringRoleArn: Swift.String? = nil,
            multiAz: Swift.Bool = false,
            optionGroupMemberships: [SecurityHubClientTypes.AwsRdsDbOptionGroupMembership]? = nil,
            pendingModifiedValues: SecurityHubClientTypes.AwsRdsDbPendingModifiedValues? = nil,
            performanceInsightsEnabled: Swift.Bool = false,
            performanceInsightsKmsKeyId: Swift.String? = nil,
            performanceInsightsRetentionPeriod: Swift.Int = 0,
            preferredBackupWindow: Swift.String? = nil,
            preferredMaintenanceWindow: Swift.String? = nil,
            processorFeatures: [SecurityHubClientTypes.AwsRdsDbProcessorFeature]? = nil,
            promotionTier: Swift.Int = 0,
            publiclyAccessible: Swift.Bool = false,
            readReplicaDBClusterIdentifiers: [Swift.String]? = nil,
            readReplicaDBInstanceIdentifiers: [Swift.String]? = nil,
            readReplicaSourceDBInstanceIdentifier: Swift.String? = nil,
            secondaryAvailabilityZone: Swift.String? = nil,
            statusInfos: [SecurityHubClientTypes.AwsRdsDbStatusInfo]? = nil,
            storageEncrypted: Swift.Bool = false,
            storageType: Swift.String? = nil,
            tdeCredentialArn: Swift.String? = nil,
            timezone: Swift.String? = nil,
            vpcSecurityGroups: [SecurityHubClientTypes.AwsRdsDbInstanceVpcSecurityGroup]? = nil
        )
        {
            self.allocatedStorage = allocatedStorage
            self.associatedRoles = associatedRoles
            self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
            self.availabilityZone = availabilityZone
            self.backupRetentionPeriod = backupRetentionPeriod
            self.cACertificateIdentifier = cACertificateIdentifier
            self.characterSetName = characterSetName
            self.copyTagsToSnapshot = copyTagsToSnapshot
            self.dBClusterIdentifier = dBClusterIdentifier
            self.dBInstanceClass = dBInstanceClass
            self.dBInstanceIdentifier = dBInstanceIdentifier
            self.dBName = dBName
            self.dbInstancePort = dbInstancePort
            self.dbInstanceStatus = dbInstanceStatus
            self.dbParameterGroups = dbParameterGroups
            self.dbSecurityGroups = dbSecurityGroups
            self.dbSubnetGroup = dbSubnetGroup
            self.dbiResourceId = dbiResourceId
            self.deletionProtection = deletionProtection
            self.domainMemberships = domainMemberships
            self.enabledCloudWatchLogsExports = enabledCloudWatchLogsExports
            self.endpoint = endpoint
            self.engine = engine
            self.engineVersion = engineVersion
            self.enhancedMonitoringResourceArn = enhancedMonitoringResourceArn
            self.iAMDatabaseAuthenticationEnabled = iAMDatabaseAuthenticationEnabled
            self.instanceCreateTime = instanceCreateTime
            self.iops = iops
            self.kmsKeyId = kmsKeyId
            self.latestRestorableTime = latestRestorableTime
            self.licenseModel = licenseModel
            self.listenerEndpoint = listenerEndpoint
            self.masterUsername = masterUsername
            self.maxAllocatedStorage = maxAllocatedStorage
            self.monitoringInterval = monitoringInterval
            self.monitoringRoleArn = monitoringRoleArn
            self.multiAz = multiAz
            self.optionGroupMemberships = optionGroupMemberships
            self.pendingModifiedValues = pendingModifiedValues
            self.performanceInsightsEnabled = performanceInsightsEnabled
            self.performanceInsightsKmsKeyId = performanceInsightsKmsKeyId
            self.performanceInsightsRetentionPeriod = performanceInsightsRetentionPeriod
            self.preferredBackupWindow = preferredBackupWindow
            self.preferredMaintenanceWindow = preferredMaintenanceWindow
            self.processorFeatures = processorFeatures
            self.promotionTier = promotionTier
            self.publiclyAccessible = publiclyAccessible
            self.readReplicaDBClusterIdentifiers = readReplicaDBClusterIdentifiers
            self.readReplicaDBInstanceIdentifiers = readReplicaDBInstanceIdentifiers
            self.readReplicaSourceDBInstanceIdentifier = readReplicaSourceDBInstanceIdentifier
            self.secondaryAvailabilityZone = secondaryAvailabilityZone
            self.statusInfos = statusInfos
            self.storageEncrypted = storageEncrypted
            self.storageType = storageType
            self.tdeCredentialArn = tdeCredentialArn
            self.timezone = timezone
            self.vpcSecurityGroups = vpcSecurityGroups
        }
    }

}
