// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsS3BucketWebsiteConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case errorDocument = "ErrorDocument"
        case indexDocumentSuffix = "IndexDocumentSuffix"
        case redirectAllRequestsTo = "RedirectAllRequestsTo"
        case routingRules = "RoutingRules"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errorDocument = self.errorDocument {
            try encodeContainer.encode(errorDocument, forKey: .errorDocument)
        }
        if let indexDocumentSuffix = self.indexDocumentSuffix {
            try encodeContainer.encode(indexDocumentSuffix, forKey: .indexDocumentSuffix)
        }
        if let redirectAllRequestsTo = self.redirectAllRequestsTo {
            try encodeContainer.encode(redirectAllRequestsTo, forKey: .redirectAllRequestsTo)
        }
        if let routingRules = routingRules {
            var routingRulesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .routingRules)
            for awss3bucketwebsiteconfigurationroutingrules0 in routingRules {
                try routingRulesContainer.encode(awss3bucketwebsiteconfigurationroutingrules0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let errorDocumentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorDocument)
        errorDocument = errorDocumentDecoded
        let indexDocumentSuffixDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexDocumentSuffix)
        indexDocumentSuffix = indexDocumentSuffixDecoded
        let redirectAllRequestsToDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsS3BucketWebsiteConfigurationRedirectTo.self, forKey: .redirectAllRequestsTo)
        redirectAllRequestsTo = redirectAllRequestsToDecoded
        let routingRulesContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.AwsS3BucketWebsiteConfigurationRoutingRule?].self, forKey: .routingRules)
        var routingRulesDecoded0:[SecurityHubClientTypes.AwsS3BucketWebsiteConfigurationRoutingRule]? = nil
        if let routingRulesContainer = routingRulesContainer {
            routingRulesDecoded0 = [SecurityHubClientTypes.AwsS3BucketWebsiteConfigurationRoutingRule]()
            for structure0 in routingRulesContainer {
                if let structure0 = structure0 {
                    routingRulesDecoded0?.append(structure0)
                }
            }
        }
        routingRules = routingRulesDecoded0
    }
}
