// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsS3BucketNotificationConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case configurations = "Configurations"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configurations = configurations {
            var configurationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .configurations)
            for awss3bucketnotificationconfigurationdetails0 in configurations {
                try configurationsContainer.encode(awss3bucketnotificationconfigurationdetails0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationsContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.AwsS3BucketNotificationConfigurationDetail?].self, forKey: .configurations)
        var configurationsDecoded0:[SecurityHubClientTypes.AwsS3BucketNotificationConfigurationDetail]? = nil
        if let configurationsContainer = configurationsContainer {
            configurationsDecoded0 = [SecurityHubClientTypes.AwsS3BucketNotificationConfigurationDetail]()
            for structure0 in configurationsContainer {
                if let structure0 = structure0 {
                    configurationsDecoded0?.append(structure0)
                }
            }
        }
        configurations = configurationsDecoded0
    }
}
