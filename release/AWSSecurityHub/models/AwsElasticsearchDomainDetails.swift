// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Information about an Elasticsearch domain.
    public struct AwsElasticsearchDomainDetails: Swift.Equatable {
        /// IAM policy document specifying the access policies for the new Elasticsearch domain.
        public var accessPolicies: Swift.String?
        /// Additional options for the domain endpoint.
        public var domainEndpointOptions: SecurityHubClientTypes.AwsElasticsearchDomainDomainEndpointOptions?
        /// Unique identifier for an Elasticsearch domain.
        public var domainId: Swift.String?
        /// Name of an Elasticsearch domain. Domain names are unique across all domains owned by the same account within an Amazon Web Services Region. Domain names must start with a lowercase letter and must be between 3 and 28 characters. Valid characters are a-z (lowercase only), 0-9, and â€“ (hyphen).
        public var domainName: Swift.String?
        /// Information about an OpenSearch cluster configuration.
        public var elasticsearchClusterConfig: SecurityHubClientTypes.AwsElasticsearchDomainElasticsearchClusterConfigDetails?
        /// OpenSearch version.
        public var elasticsearchVersion: Swift.String?
        /// Details about the configuration for encryption at rest.
        public var encryptionAtRestOptions: SecurityHubClientTypes.AwsElasticsearchDomainEncryptionAtRestOptions?
        /// Domain-specific endpoint used to submit index, search, and data upload requests to an Elasticsearch domain. The endpoint is a service URL.
        public var endpoint: Swift.String?
        /// The key-value pair that exists if the Elasticsearch domain uses VPC endpoints.
        public var endpoints: [Swift.String:Swift.String]?
        /// Configures the CloudWatch Logs to publish for the Elasticsearch domain.
        public var logPublishingOptions: SecurityHubClientTypes.AwsElasticsearchDomainLogPublishingOptions?
        /// Details about the configuration for node-to-node encryption.
        public var nodeToNodeEncryptionOptions: SecurityHubClientTypes.AwsElasticsearchDomainNodeToNodeEncryptionOptions?
        /// Information about the status of a domain relative to the latest service software.
        public var serviceSoftwareOptions: SecurityHubClientTypes.AwsElasticsearchDomainServiceSoftwareOptions?
        /// Information that OpenSearch derives based on VPCOptions for the domain.
        public var vPCOptions: SecurityHubClientTypes.AwsElasticsearchDomainVPCOptions?

        public init (
            accessPolicies: Swift.String? = nil,
            domainEndpointOptions: SecurityHubClientTypes.AwsElasticsearchDomainDomainEndpointOptions? = nil,
            domainId: Swift.String? = nil,
            domainName: Swift.String? = nil,
            elasticsearchClusterConfig: SecurityHubClientTypes.AwsElasticsearchDomainElasticsearchClusterConfigDetails? = nil,
            elasticsearchVersion: Swift.String? = nil,
            encryptionAtRestOptions: SecurityHubClientTypes.AwsElasticsearchDomainEncryptionAtRestOptions? = nil,
            endpoint: Swift.String? = nil,
            endpoints: [Swift.String:Swift.String]? = nil,
            logPublishingOptions: SecurityHubClientTypes.AwsElasticsearchDomainLogPublishingOptions? = nil,
            nodeToNodeEncryptionOptions: SecurityHubClientTypes.AwsElasticsearchDomainNodeToNodeEncryptionOptions? = nil,
            serviceSoftwareOptions: SecurityHubClientTypes.AwsElasticsearchDomainServiceSoftwareOptions? = nil,
            vPCOptions: SecurityHubClientTypes.AwsElasticsearchDomainVPCOptions? = nil
        )
        {
            self.accessPolicies = accessPolicies
            self.domainEndpointOptions = domainEndpointOptions
            self.domainId = domainId
            self.domainName = domainName
            self.elasticsearchClusterConfig = elasticsearchClusterConfig
            self.elasticsearchVersion = elasticsearchVersion
            self.encryptionAtRestOptions = encryptionAtRestOptions
            self.endpoint = endpoint
            self.endpoints = endpoints
            self.logPublishingOptions = logPublishingOptions
            self.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions
            self.serviceSoftwareOptions = serviceSoftwareOptions
            self.vPCOptions = vPCOptions
        }
    }

}
