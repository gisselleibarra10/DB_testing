// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Provides the details about the compliance status for a patch.
    public struct AwsSsmComplianceSummary: Swift.Equatable {
        /// The type of resource for which the compliance was determined. For AwsSsmPatchCompliance, ComplianceType is Patch.
        public var complianceType: Swift.String?
        /// For the patches that are compliant, the number that have a severity of CRITICAL.
        public var compliantCriticalCount: Swift.Int
        /// For the patches that are compliant, the number that have a severity of HIGH.
        public var compliantHighCount: Swift.Int
        /// For the patches that are compliant, the number that have a severity of INFORMATIONAL.
        public var compliantInformationalCount: Swift.Int
        /// For the patches that are compliant, the number that have a severity of LOW.
        public var compliantLowCount: Swift.Int
        /// For the patches that are compliant, the number that have a severity of MEDIUM.
        public var compliantMediumCount: Swift.Int
        /// For the patches that are compliant, the number that have a severity of UNSPECIFIED.
        public var compliantUnspecifiedCount: Swift.Int
        /// The type of execution that was used determine compliance.
        public var executionType: Swift.String?
        /// For the patch items that are noncompliant, the number of items that have a severity of CRITICAL.
        public var nonCompliantCriticalCount: Swift.Int
        /// For the patches that are noncompliant, the number that have a severity of HIGH.
        public var nonCompliantHighCount: Swift.Int
        /// For the patches that are noncompliant, the number that have a severity of INFORMATIONAL.
        public var nonCompliantInformationalCount: Swift.Int
        /// For the patches that are noncompliant, the number that have a severity of LOW.
        public var nonCompliantLowCount: Swift.Int
        /// For the patches that are noncompliant, the number that have a severity of MEDIUM.
        public var nonCompliantMediumCount: Swift.Int
        /// For the patches that are noncompliant, the number that have a severity of UNSPECIFIED.
        public var nonCompliantUnspecifiedCount: Swift.Int
        /// The highest severity for the patches. Valid values are as follows:
        ///
        /// * CRITICAL
        ///
        /// * HIGH
        ///
        /// * MEDIUM
        ///
        /// * LOW
        ///
        /// * INFORMATIONAL
        ///
        /// * UNSPECIFIED
        public var overallSeverity: Swift.String?
        /// The identifier of the patch baseline. The patch baseline lists the patches that are approved for installation.
        public var patchBaselineId: Swift.String?
        /// The identifier of the patch group for which compliance was determined. A patch group uses tags to group EC2 instances that should have the same patch compliance.
        public var patchGroup: Swift.String?
        /// The current patch compliance status. Valid values are as follows:
        ///
        /// * COMPLIANT
        ///
        /// * NON_COMPLIANT
        ///
        /// * UNSPECIFIED_DATA
        public var status: Swift.String?

        public init (
            complianceType: Swift.String? = nil,
            compliantCriticalCount: Swift.Int = 0,
            compliantHighCount: Swift.Int = 0,
            compliantInformationalCount: Swift.Int = 0,
            compliantLowCount: Swift.Int = 0,
            compliantMediumCount: Swift.Int = 0,
            compliantUnspecifiedCount: Swift.Int = 0,
            executionType: Swift.String? = nil,
            nonCompliantCriticalCount: Swift.Int = 0,
            nonCompliantHighCount: Swift.Int = 0,
            nonCompliantInformationalCount: Swift.Int = 0,
            nonCompliantLowCount: Swift.Int = 0,
            nonCompliantMediumCount: Swift.Int = 0,
            nonCompliantUnspecifiedCount: Swift.Int = 0,
            overallSeverity: Swift.String? = nil,
            patchBaselineId: Swift.String? = nil,
            patchGroup: Swift.String? = nil,
            status: Swift.String? = nil
        )
        {
            self.complianceType = complianceType
            self.compliantCriticalCount = compliantCriticalCount
            self.compliantHighCount = compliantHighCount
            self.compliantInformationalCount = compliantInformationalCount
            self.compliantLowCount = compliantLowCount
            self.compliantMediumCount = compliantMediumCount
            self.compliantUnspecifiedCount = compliantUnspecifiedCount
            self.executionType = executionType
            self.nonCompliantCriticalCount = nonCompliantCriticalCount
            self.nonCompliantHighCount = nonCompliantHighCount
            self.nonCompliantInformationalCount = nonCompliantInformationalCount
            self.nonCompliantLowCount = nonCompliantLowCount
            self.nonCompliantMediumCount = nonCompliantMediumCount
            self.nonCompliantUnspecifiedCount = nonCompliantUnspecifiedCount
            self.overallSeverity = overallSeverity
            self.patchBaselineId = patchBaselineId
            self.patchGroup = patchGroup
            self.status = status
        }
    }

}
