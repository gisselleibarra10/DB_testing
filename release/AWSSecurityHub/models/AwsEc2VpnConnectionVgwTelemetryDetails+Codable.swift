// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsEc2VpnConnectionVgwTelemetryDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case acceptedRouteCount = "AcceptedRouteCount"
        case certificateArn = "CertificateArn"
        case lastStatusChange = "LastStatusChange"
        case outsideIpAddress = "OutsideIpAddress"
        case status = "Status"
        case statusMessage = "StatusMessage"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if acceptedRouteCount != 0 {
            try encodeContainer.encode(acceptedRouteCount, forKey: .acceptedRouteCount)
        }
        if let certificateArn = self.certificateArn {
            try encodeContainer.encode(certificateArn, forKey: .certificateArn)
        }
        if let lastStatusChange = self.lastStatusChange {
            try encodeContainer.encode(lastStatusChange, forKey: .lastStatusChange)
        }
        if let outsideIpAddress = self.outsideIpAddress {
            try encodeContainer.encode(outsideIpAddress, forKey: .outsideIpAddress)
        }
        if let status = self.status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let statusMessage = self.statusMessage {
            try encodeContainer.encode(statusMessage, forKey: .statusMessage)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceptedRouteCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .acceptedRouteCount) ?? 0
        acceptedRouteCount = acceptedRouteCountDecoded
        let certificateArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificateArn)
        certificateArn = certificateArnDecoded
        let lastStatusChangeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .lastStatusChange)
        lastStatusChange = lastStatusChangeDecoded
        let outsideIpAddressDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .outsideIpAddress)
        outsideIpAddress = outsideIpAddressDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .status)
        status = statusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
    }
}
