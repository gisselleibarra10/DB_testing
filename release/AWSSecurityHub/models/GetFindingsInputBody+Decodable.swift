// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFindingsInputBody: Swift.Equatable {
    let filters: SecurityHubClientTypes.AwsSecurityFindingFilters?
    let sortCriteria: [SecurityHubClientTypes.SortCriterion]?
    let nextToken: Swift.String?
    let maxResults: Swift.Int
}

extension GetFindingsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filters = "Filters"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case sortCriteria = "SortCriteria"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filtersDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.AwsSecurityFindingFilters.self, forKey: .filters)
        filters = filtersDecoded
        let sortCriteriaContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.SortCriterion?].self, forKey: .sortCriteria)
        var sortCriteriaDecoded0:[SecurityHubClientTypes.SortCriterion]? = nil
        if let sortCriteriaContainer = sortCriteriaContainer {
            sortCriteriaDecoded0 = [SecurityHubClientTypes.SortCriterion]()
            for structure0 in sortCriteriaContainer {
                if let structure0 = structure0 {
                    sortCriteriaDecoded0?.append(structure0)
                }
            }
        }
        sortCriteria = sortCriteriaDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults) ?? 0
        maxResults = maxResultsDecoded
    }
}
