// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case onDemandAllocationStrategy = "OnDemandAllocationStrategy"
        case onDemandBaseCapacity = "OnDemandBaseCapacity"
        case onDemandPercentageAboveBaseCapacity = "OnDemandPercentageAboveBaseCapacity"
        case spotAllocationStrategy = "SpotAllocationStrategy"
        case spotInstancePools = "SpotInstancePools"
        case spotMaxPrice = "SpotMaxPrice"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let onDemandAllocationStrategy = self.onDemandAllocationStrategy {
            try encodeContainer.encode(onDemandAllocationStrategy, forKey: .onDemandAllocationStrategy)
        }
        if onDemandBaseCapacity != 0 {
            try encodeContainer.encode(onDemandBaseCapacity, forKey: .onDemandBaseCapacity)
        }
        if onDemandPercentageAboveBaseCapacity != 0 {
            try encodeContainer.encode(onDemandPercentageAboveBaseCapacity, forKey: .onDemandPercentageAboveBaseCapacity)
        }
        if let spotAllocationStrategy = self.spotAllocationStrategy {
            try encodeContainer.encode(spotAllocationStrategy, forKey: .spotAllocationStrategy)
        }
        if spotInstancePools != 0 {
            try encodeContainer.encode(spotInstancePools, forKey: .spotInstancePools)
        }
        if let spotMaxPrice = self.spotMaxPrice {
            try encodeContainer.encode(spotMaxPrice, forKey: .spotMaxPrice)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let onDemandAllocationStrategyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .onDemandAllocationStrategy)
        onDemandAllocationStrategy = onDemandAllocationStrategyDecoded
        let onDemandBaseCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .onDemandBaseCapacity) ?? 0
        onDemandBaseCapacity = onDemandBaseCapacityDecoded
        let onDemandPercentageAboveBaseCapacityDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .onDemandPercentageAboveBaseCapacity) ?? 0
        onDemandPercentageAboveBaseCapacity = onDemandPercentageAboveBaseCapacityDecoded
        let spotAllocationStrategyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .spotAllocationStrategy)
        spotAllocationStrategy = spotAllocationStrategyDecoded
        let spotInstancePoolsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .spotInstancePools) ?? 0
        spotInstancePools = spotInstancePoolsDecoded
        let spotMaxPriceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .spotMaxPrice)
        spotMaxPrice = spotMaxPriceDecoded
    }
}
