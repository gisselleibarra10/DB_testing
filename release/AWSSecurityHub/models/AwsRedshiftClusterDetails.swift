// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Details about an Amazon Redshift cluster.
    public struct AwsRedshiftClusterDetails: Swift.Equatable {
        /// Indicates whether major version upgrades are applied automatically to the cluster during the maintenance window.
        public var allowVersionUpgrade: Swift.Bool
        /// The number of days that automatic cluster snapshots are retained.
        public var automatedSnapshotRetentionPeriod: Swift.Int
        /// The name of the Availability Zone in which the cluster is located.
        public var availabilityZone: Swift.String?
        /// The availability status of the cluster for queries. Possible values are the following:
        ///
        /// * Available - The cluster is available for queries.
        ///
        /// * Unavailable - The cluster is not available for queries.
        ///
        /// * Maintenance - The cluster is intermittently available for queries due to maintenance activities.
        ///
        /// * Modifying -The cluster is intermittently available for queries due to changes that modify the cluster.
        ///
        /// * Failed - The cluster failed and is not available for queries.
        public var clusterAvailabilityStatus: Swift.String?
        /// Indicates when the cluster was created. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var clusterCreateTime: Swift.String?
        /// The unique identifier of the cluster.
        public var clusterIdentifier: Swift.String?
        /// The nodes in the cluster.
        public var clusterNodes: [SecurityHubClientTypes.AwsRedshiftClusterClusterNode]?
        /// The list of cluster parameter groups that are associated with this cluster.
        public var clusterParameterGroups: [SecurityHubClientTypes.AwsRedshiftClusterClusterParameterGroup]?
        /// The public key for the cluster.
        public var clusterPublicKey: Swift.String?
        /// The specific revision number of the database in the cluster.
        public var clusterRevisionNumber: Swift.String?
        /// A list of cluster security groups that are associated with the cluster.
        public var clusterSecurityGroups: [SecurityHubClientTypes.AwsRedshiftClusterClusterSecurityGroup]?
        /// Information about the destination Region and retention period for the cross-Region snapshot copy.
        public var clusterSnapshotCopyStatus: SecurityHubClientTypes.AwsRedshiftClusterClusterSnapshotCopyStatus?
        /// The current status of the cluster. Valid values: available | available, prep-for-resize | available, resize-cleanup | cancelling-resize | creating | deleting | final-snapshot | hardware-failure | incompatible-hsm | incompatible-network | incompatible-parameters | incompatible-restore | modifying | paused | rebooting | renaming | resizing | rotating-keys | storage-full | updating-hsm
        public var clusterStatus: Swift.String?
        /// The name of the subnet group that is associated with the cluster. This parameter is valid only when the cluster is in a VPC.
        public var clusterSubnetGroupName: Swift.String?
        /// The version ID of the Amazon Redshift engine that runs on the cluster.
        public var clusterVersion: Swift.String?
        /// The name of the initial database that was created when the cluster was created. The same name is returned for the life of the cluster. If an initial database is not specified, a database named devdev is created by default.
        public var dBName: Swift.String?
        /// List of time windows during which maintenance was deferred.
        public var deferredMaintenanceWindows: [SecurityHubClientTypes.AwsRedshiftClusterDeferredMaintenanceWindow]?
        /// Information about the status of the Elastic IP (EIP) address.
        public var elasticIpStatus: SecurityHubClientTypes.AwsRedshiftClusterElasticIpStatus?
        /// The number of nodes that you can use the elastic resize method to resize the cluster to.
        public var elasticResizeNumberOfNodeOptions: Swift.String?
        /// Indicates whether the data in the cluster is encrypted at rest.
        public var encrypted: Swift.Bool
        /// The connection endpoint.
        public var endpoint: SecurityHubClientTypes.AwsRedshiftClusterEndpoint?
        /// Indicates whether to create the cluster with enhanced VPC routing enabled.
        public var enhancedVpcRouting: Swift.Bool
        /// Indicates when the next snapshot is expected to be taken. The cluster must have a valid snapshot schedule and have backups enabled. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var expectedNextSnapshotScheduleTime: Swift.String?
        /// The status of the next expected snapshot. Valid values: OnTrack | Pending
        public var expectedNextSnapshotScheduleTimeStatus: Swift.String?
        /// Information about whether the Amazon Redshift cluster finished applying any changes to hardware security module (HSM) settings that were specified in a modify cluster command.
        public var hsmStatus: SecurityHubClientTypes.AwsRedshiftClusterHsmStatus?
        /// A list of IAM roles that the cluster can use to access other Amazon Web Services services.
        public var iamRoles: [SecurityHubClientTypes.AwsRedshiftClusterIamRole]?
        /// The identifier of the KMS encryption key that is used to encrypt data in the cluster.
        public var kmsKeyId: Swift.String?
        /// Information about the logging status of the cluster.
        public var loggingStatus: SecurityHubClientTypes.AwsRedshiftClusterLoggingStatus?
        /// The name of the maintenance track for the cluster.
        public var maintenanceTrackName: Swift.String?
        /// The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots. Valid values: Either -1 or an integer between 1 and 3,653
        public var manualSnapshotRetentionPeriod: Swift.Int
        /// The master user name for the cluster. This name is used to connect to the database that is specified in as the value of DBName.
        public var masterUsername: Swift.String?
        /// Indicates the start of the next maintenance window. Uses the date-time format specified in [RFC 3339 section 5.6, Internet Date/Time Format](https://tools.ietf.org/html/rfc3339#section-5.6). The value cannot contain spaces. For example, 2020-03-22T13:22:13.933Z.
        public var nextMaintenanceWindowStartTime: Swift.String?
        /// The node type for the nodes in the cluster.
        public var nodeType: Swift.String?
        /// The number of compute nodes in the cluster.
        public var numberOfNodes: Swift.Int
        /// A list of cluster operations that are waiting to start.
        public var pendingActions: [Swift.String]?
        /// A list of changes to the cluster that are currently pending.
        public var pendingModifiedValues: SecurityHubClientTypes.AwsRedshiftClusterPendingModifiedValues?
        /// The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance can occur. Format:  :HH:MM-:HH:MM For the day values, use mon | tue | wed | thu | fri | sat | sun For example, sun:09:32-sun:10:02
        public var preferredMaintenanceWindow: Swift.String?
        /// Whether the cluster can be accessed from a public network.
        public var publiclyAccessible: Swift.Bool
        /// Information about the resize operation for the cluster.
        public var resizeInfo: SecurityHubClientTypes.AwsRedshiftClusterResizeInfo?
        /// Information about the status of a cluster restore action. Only applies to a cluster that was created by restoring a snapshot.
        public var restoreStatus: SecurityHubClientTypes.AwsRedshiftClusterRestoreStatus?
        /// A unique identifier for the cluster snapshot schedule.
        public var snapshotScheduleIdentifier: Swift.String?
        /// The current state of the cluster snapshot schedule. Valid values: MODIFYING | ACTIVE | FAILED
        public var snapshotScheduleState: Swift.String?
        /// The identifier of the VPC that the cluster is in, if the cluster is in a VPC.
        public var vpcId: Swift.String?
        /// The list of VPC security groups that the cluster belongs to, if the cluster is in a VPC.
        public var vpcSecurityGroups: [SecurityHubClientTypes.AwsRedshiftClusterVpcSecurityGroup]?

        public init (
            allowVersionUpgrade: Swift.Bool = false,
            automatedSnapshotRetentionPeriod: Swift.Int = 0,
            availabilityZone: Swift.String? = nil,
            clusterAvailabilityStatus: Swift.String? = nil,
            clusterCreateTime: Swift.String? = nil,
            clusterIdentifier: Swift.String? = nil,
            clusterNodes: [SecurityHubClientTypes.AwsRedshiftClusterClusterNode]? = nil,
            clusterParameterGroups: [SecurityHubClientTypes.AwsRedshiftClusterClusterParameterGroup]? = nil,
            clusterPublicKey: Swift.String? = nil,
            clusterRevisionNumber: Swift.String? = nil,
            clusterSecurityGroups: [SecurityHubClientTypes.AwsRedshiftClusterClusterSecurityGroup]? = nil,
            clusterSnapshotCopyStatus: SecurityHubClientTypes.AwsRedshiftClusterClusterSnapshotCopyStatus? = nil,
            clusterStatus: Swift.String? = nil,
            clusterSubnetGroupName: Swift.String? = nil,
            clusterVersion: Swift.String? = nil,
            dBName: Swift.String? = nil,
            deferredMaintenanceWindows: [SecurityHubClientTypes.AwsRedshiftClusterDeferredMaintenanceWindow]? = nil,
            elasticIpStatus: SecurityHubClientTypes.AwsRedshiftClusterElasticIpStatus? = nil,
            elasticResizeNumberOfNodeOptions: Swift.String? = nil,
            encrypted: Swift.Bool = false,
            endpoint: SecurityHubClientTypes.AwsRedshiftClusterEndpoint? = nil,
            enhancedVpcRouting: Swift.Bool = false,
            expectedNextSnapshotScheduleTime: Swift.String? = nil,
            expectedNextSnapshotScheduleTimeStatus: Swift.String? = nil,
            hsmStatus: SecurityHubClientTypes.AwsRedshiftClusterHsmStatus? = nil,
            iamRoles: [SecurityHubClientTypes.AwsRedshiftClusterIamRole]? = nil,
            kmsKeyId: Swift.String? = nil,
            loggingStatus: SecurityHubClientTypes.AwsRedshiftClusterLoggingStatus? = nil,
            maintenanceTrackName: Swift.String? = nil,
            manualSnapshotRetentionPeriod: Swift.Int = 0,
            masterUsername: Swift.String? = nil,
            nextMaintenanceWindowStartTime: Swift.String? = nil,
            nodeType: Swift.String? = nil,
            numberOfNodes: Swift.Int = 0,
            pendingActions: [Swift.String]? = nil,
            pendingModifiedValues: SecurityHubClientTypes.AwsRedshiftClusterPendingModifiedValues? = nil,
            preferredMaintenanceWindow: Swift.String? = nil,
            publiclyAccessible: Swift.Bool = false,
            resizeInfo: SecurityHubClientTypes.AwsRedshiftClusterResizeInfo? = nil,
            restoreStatus: SecurityHubClientTypes.AwsRedshiftClusterRestoreStatus? = nil,
            snapshotScheduleIdentifier: Swift.String? = nil,
            snapshotScheduleState: Swift.String? = nil,
            vpcId: Swift.String? = nil,
            vpcSecurityGroups: [SecurityHubClientTypes.AwsRedshiftClusterVpcSecurityGroup]? = nil
        )
        {
            self.allowVersionUpgrade = allowVersionUpgrade
            self.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod
            self.availabilityZone = availabilityZone
            self.clusterAvailabilityStatus = clusterAvailabilityStatus
            self.clusterCreateTime = clusterCreateTime
            self.clusterIdentifier = clusterIdentifier
            self.clusterNodes = clusterNodes
            self.clusterParameterGroups = clusterParameterGroups
            self.clusterPublicKey = clusterPublicKey
            self.clusterRevisionNumber = clusterRevisionNumber
            self.clusterSecurityGroups = clusterSecurityGroups
            self.clusterSnapshotCopyStatus = clusterSnapshotCopyStatus
            self.clusterStatus = clusterStatus
            self.clusterSubnetGroupName = clusterSubnetGroupName
            self.clusterVersion = clusterVersion
            self.dBName = dBName
            self.deferredMaintenanceWindows = deferredMaintenanceWindows
            self.elasticIpStatus = elasticIpStatus
            self.elasticResizeNumberOfNodeOptions = elasticResizeNumberOfNodeOptions
            self.encrypted = encrypted
            self.endpoint = endpoint
            self.enhancedVpcRouting = enhancedVpcRouting
            self.expectedNextSnapshotScheduleTime = expectedNextSnapshotScheduleTime
            self.expectedNextSnapshotScheduleTimeStatus = expectedNextSnapshotScheduleTimeStatus
            self.hsmStatus = hsmStatus
            self.iamRoles = iamRoles
            self.kmsKeyId = kmsKeyId
            self.loggingStatus = loggingStatus
            self.maintenanceTrackName = maintenanceTrackName
            self.manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriod
            self.masterUsername = masterUsername
            self.nextMaintenanceWindowStartTime = nextMaintenanceWindowStartTime
            self.nodeType = nodeType
            self.numberOfNodes = numberOfNodes
            self.pendingActions = pendingActions
            self.pendingModifiedValues = pendingModifiedValues
            self.preferredMaintenanceWindow = preferredMaintenanceWindow
            self.publiclyAccessible = publiclyAccessible
            self.resizeInfo = resizeInfo
            self.restoreStatus = restoreStatus
            self.snapshotScheduleIdentifier = snapshotScheduleIdentifier
            self.snapshotScheduleState = snapshotScheduleState
            self.vpcId = vpcId
            self.vpcSecurityGroups = vpcSecurityGroups
        }
    }

}
