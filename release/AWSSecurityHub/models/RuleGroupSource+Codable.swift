// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityHubClientTypes.RuleGroupSource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case rulesSourceList = "RulesSourceList"
        case rulesString = "RulesString"
        case statefulRules = "StatefulRules"
        case statelessRulesAndCustomActions = "StatelessRulesAndCustomActions"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let rulesSourceList = self.rulesSourceList {
            try encodeContainer.encode(rulesSourceList, forKey: .rulesSourceList)
        }
        if let rulesString = self.rulesString {
            try encodeContainer.encode(rulesString, forKey: .rulesString)
        }
        if let statefulRules = statefulRules {
            var statefulRulesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .statefulRules)
            for rulegroupsourcestatefulruleslist0 in statefulRules {
                try statefulRulesContainer.encode(rulegroupsourcestatefulruleslist0)
            }
        }
        if let statelessRulesAndCustomActions = self.statelessRulesAndCustomActions {
            try encodeContainer.encode(statelessRulesAndCustomActions, forKey: .statelessRulesAndCustomActions)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rulesSourceListDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.RuleGroupSourceListDetails.self, forKey: .rulesSourceList)
        rulesSourceList = rulesSourceListDecoded
        let rulesStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .rulesString)
        rulesString = rulesStringDecoded
        let statefulRulesContainer = try containerValues.decodeIfPresent([SecurityHubClientTypes.RuleGroupSourceStatefulRulesDetails?].self, forKey: .statefulRules)
        var statefulRulesDecoded0:[SecurityHubClientTypes.RuleGroupSourceStatefulRulesDetails]? = nil
        if let statefulRulesContainer = statefulRulesContainer {
            statefulRulesDecoded0 = [SecurityHubClientTypes.RuleGroupSourceStatefulRulesDetails]()
            for structure0 in statefulRulesContainer {
                if let structure0 = structure0 {
                    statefulRulesDecoded0?.append(structure0)
                }
            }
        }
        statefulRules = statefulRulesDecoded0
        let statelessRulesAndCustomActionsDecoded = try containerValues.decodeIfPresent(SecurityHubClientTypes.RuleGroupSourceStatelessRulesAndCustomActionsDetails.self, forKey: .statelessRulesAndCustomActions)
        statelessRulesAndCustomActions = statelessRulesAndCustomActionsDecoded
    }
}
