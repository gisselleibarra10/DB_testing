// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension SecurityHubClientTypes {
    /// Provides information about an Amazon SNS topic to which notifications can be published.
    public struct AwsSnsTopicDetails: Swift.Equatable {
        /// Indicates failed message delivery status for an Amazon SNS topic that is subscribed to a platform application endpoint.
        public var applicationSuccessFeedbackRoleArn: Swift.String?
        /// Indicates failed message delivery status for an Amazon SNS topic that is subscribed to an Amazon Kinesis Data Firehose endpoint.
        public var firehoseFailureFeedbackRoleArn: Swift.String?
        /// Indicates successful message delivery status for an Amazon SNS topic that is subscribed to an Amazon Kinesis Data Firehose endpoint.
        public var firehoseSuccessFeedbackRoleArn: Swift.String?
        /// Indicates failed message delivery status for an Amazon SNS topic that is subscribed to an HTTP endpoint.
        public var httpFailureFeedbackRoleArn: Swift.String?
        /// Indicates successful message delivery status for an Amazon SNS topic that is subscribed to an HTTP endpoint.
        public var httpSuccessFeedbackRoleArn: Swift.String?
        /// The ID of an Amazon Web Services managed key for Amazon SNS or a customer managed key.
        public var kmsMasterKeyId: Swift.String?
        /// The subscription's owner.
        public var owner: Swift.String?
        /// Indicates failed message delivery status for an Amazon SNS topic that is subscribed to an Amazon SQS endpoint.
        public var sqsFailureFeedbackRoleArn: Swift.String?
        /// Indicates successful message delivery status for an Amazon SNS topic that is subscribed to an Amazon SQS endpoint.
        public var sqsSuccessFeedbackRoleArn: Swift.String?
        /// Subscription is an embedded property that describes the subscription endpoints of an Amazon SNS topic.
        public var subscription: [SecurityHubClientTypes.AwsSnsTopicSubscription]?
        /// The name of the Amazon SNS topic.
        public var topicName: Swift.String?

        public init (
            applicationSuccessFeedbackRoleArn: Swift.String? = nil,
            firehoseFailureFeedbackRoleArn: Swift.String? = nil,
            firehoseSuccessFeedbackRoleArn: Swift.String? = nil,
            httpFailureFeedbackRoleArn: Swift.String? = nil,
            httpSuccessFeedbackRoleArn: Swift.String? = nil,
            kmsMasterKeyId: Swift.String? = nil,
            owner: Swift.String? = nil,
            sqsFailureFeedbackRoleArn: Swift.String? = nil,
            sqsSuccessFeedbackRoleArn: Swift.String? = nil,
            subscription: [SecurityHubClientTypes.AwsSnsTopicSubscription]? = nil,
            topicName: Swift.String? = nil
        )
        {
            self.applicationSuccessFeedbackRoleArn = applicationSuccessFeedbackRoleArn
            self.firehoseFailureFeedbackRoleArn = firehoseFailureFeedbackRoleArn
            self.firehoseSuccessFeedbackRoleArn = firehoseSuccessFeedbackRoleArn
            self.httpFailureFeedbackRoleArn = httpFailureFeedbackRoleArn
            self.httpSuccessFeedbackRoleArn = httpSuccessFeedbackRoleArn
            self.kmsMasterKeyId = kmsMasterKeyId
            self.owner = owner
            self.sqsFailureFeedbackRoleArn = sqsFailureFeedbackRoleArn
            self.sqsSuccessFeedbackRoleArn = sqsSuccessFeedbackRoleArn
            self.subscription = subscription
            self.topicName = topicName
        }
    }

}
