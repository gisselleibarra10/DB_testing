// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes {
    /// Describes a CA certificate.
    public struct CACertificateDescription: Swift.Equatable {
        /// Whether the CA certificate configured for auto registration of device certificates. Valid values are "ENABLE" and "DISABLE"
        public var autoRegistrationStatus: IotClientTypes.AutoRegistrationStatus?
        /// The CA certificate ARN.
        public var certificateArn: Swift.String?
        /// The CA certificate ID.
        public var certificateId: Swift.String?
        /// The mode of the CA. All the device certificates that are registered using this CA will be registered in the same mode as the CA. For more information about certificate mode for device certificates, see [certificate mode](https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode).
        public var certificateMode: IotClientTypes.CertificateMode?
        /// The CA certificate data, in PEM format.
        public var certificatePem: Swift.String?
        /// The date the CA certificate was created.
        public var creationDate: ClientRuntime.Date?
        /// The customer version of the CA certificate.
        public var customerVersion: Swift.Int?
        /// The generation ID of the CA certificate.
        public var generationId: Swift.String?
        /// The date the CA certificate was last modified.
        public var lastModifiedDate: ClientRuntime.Date?
        /// The owner of the CA certificate.
        public var ownedBy: Swift.String?
        /// The status of a CA certificate.
        public var status: IotClientTypes.CACertificateStatus?
        /// When the CA certificate is valid.
        public var validity: IotClientTypes.CertificateValidity?

        public init (
            autoRegistrationStatus: IotClientTypes.AutoRegistrationStatus? = nil,
            certificateArn: Swift.String? = nil,
            certificateId: Swift.String? = nil,
            certificateMode: IotClientTypes.CertificateMode? = nil,
            certificatePem: Swift.String? = nil,
            creationDate: ClientRuntime.Date? = nil,
            customerVersion: Swift.Int? = nil,
            generationId: Swift.String? = nil,
            lastModifiedDate: ClientRuntime.Date? = nil,
            ownedBy: Swift.String? = nil,
            status: IotClientTypes.CACertificateStatus? = nil,
            validity: IotClientTypes.CertificateValidity? = nil
        )
        {
            self.autoRegistrationStatus = autoRegistrationStatus
            self.certificateArn = certificateArn
            self.certificateId = certificateId
            self.certificateMode = certificateMode
            self.certificatePem = certificatePem
            self.creationDate = creationDate
            self.customerVersion = customerVersion
            self.generationId = generationId
            self.lastModifiedDate = lastModifiedDate
            self.ownedBy = ownedBy
            self.status = status
            self.validity = validity
        }
    }

}
