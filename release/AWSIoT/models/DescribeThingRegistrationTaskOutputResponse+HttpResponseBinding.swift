// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeThingRegistrationTaskOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: DescribeThingRegistrationTaskOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.creationDate = output.creationDate
            self.failureCount = output.failureCount
            self.inputFileBucket = output.inputFileBucket
            self.inputFileKey = output.inputFileKey
            self.lastModifiedDate = output.lastModifiedDate
            self.message = output.message
            self.percentageProgress = output.percentageProgress
            self.roleArn = output.roleArn
            self.status = output.status
            self.successCount = output.successCount
            self.taskId = output.taskId
            self.templateBody = output.templateBody
        } else {
            self.creationDate = nil
            self.failureCount = 0
            self.inputFileBucket = nil
            self.inputFileKey = nil
            self.lastModifiedDate = nil
            self.message = nil
            self.percentageProgress = 0
            self.roleArn = nil
            self.status = nil
            self.successCount = 0
            self.taskId = nil
            self.templateBody = nil
        }
    }
}
