// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartDetectMitigationActionsTaskInput: Swift.Equatable {
    /// The actions to be performed when a device has unexpected behavior.
    /// This member is required.
    public var actions: [Swift.String]?
    /// Each mitigation action task must have a unique client request token. If you try to create a new task with the same token as a task that already exists, an exception occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request.
    /// This member is required.
    public var clientRequestToken: Swift.String?
    /// Specifies to list only active violations.
    public var includeOnlyActiveViolations: Swift.Bool?
    /// Specifies to include suppressed alerts.
    public var includeSuppressedAlerts: Swift.Bool?
    /// Specifies the ML Detect findings to which the mitigation actions are applied.
    /// This member is required.
    public var target: IotClientTypes.DetectMitigationActionsTaskTarget?
    /// The unique identifier of the task.
    /// This member is required.
    public var taskId: Swift.String?
    /// Specifies the time period of which violation events occurred between.
    public var violationEventOccurrenceRange: IotClientTypes.ViolationEventOccurrenceRange?

    public init (
        actions: [Swift.String]? = nil,
        clientRequestToken: Swift.String? = nil,
        includeOnlyActiveViolations: Swift.Bool? = nil,
        includeSuppressedAlerts: Swift.Bool? = nil,
        target: IotClientTypes.DetectMitigationActionsTaskTarget? = nil,
        taskId: Swift.String? = nil,
        violationEventOccurrenceRange: IotClientTypes.ViolationEventOccurrenceRange? = nil
    )
    {
        self.actions = actions
        self.clientRequestToken = clientRequestToken
        self.includeOnlyActiveViolations = includeOnlyActiveViolations
        self.includeSuppressedAlerts = includeSuppressedAlerts
        self.target = target
        self.taskId = taskId
        self.violationEventOccurrenceRange = violationEventOccurrenceRange
    }
}
