// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotClientTypes {
    /// Sends an input to an IoT Events detector.
    public struct IotEventsAction: Swift.Equatable {
        /// Whether to process the event actions as a batch. The default value is false. When batchMode is true, you can't specify a messageId. When batchMode is true and the rule SQL statement evaluates to an Array, each Array element is treated as a separate message when it's sent to IoT Events by calling [BatchPutMessage](https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html). The resulting array can't have more than 10 messages.
        public var batchMode: Swift.Bool?
        /// The name of the IoT Events input.
        /// This member is required.
        public var inputName: Swift.String?
        /// The ID of the message. The default messageId is a new UUID value. When batchMode is true, you can't specify a messageId--a new UUID value will be assigned. Assign a value to this property to ensure that only one input (message) with a given messageId will be processed by an IoT Events detector.
        public var messageId: Swift.String?
        /// The ARN of the role that grants IoT permission to send an input to an IoT Events detector. ("Action":"iotevents:BatchPutMessage").
        /// This member is required.
        public var roleArn: Swift.String?

        public init (
            batchMode: Swift.Bool? = nil,
            inputName: Swift.String? = nil,
            messageId: Swift.String? = nil,
            roleArn: Swift.String? = nil
        )
        {
            self.batchMode = batchMode
            self.inputName = inputName
            self.messageId = messageId
            self.roleArn = roleArn
        }
    }

}
