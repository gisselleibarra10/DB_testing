// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.DetectMitigationActionExecution: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionName
        case errorCode
        case executionEndDate
        case executionStartDate
        case message
        case status
        case taskId
        case thingName
        case violationId
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionName = self.actionName {
            try encodeContainer.encode(actionName, forKey: .actionName)
        }
        if let errorCode = self.errorCode {
            try encodeContainer.encode(errorCode, forKey: .errorCode)
        }
        if let executionEndDate = self.executionEndDate {
            try encodeContainer.encode(executionEndDate.timeIntervalSince1970, forKey: .executionEndDate)
        }
        if let executionStartDate = self.executionStartDate {
            try encodeContainer.encode(executionStartDate.timeIntervalSince1970, forKey: .executionStartDate)
        }
        if let message = self.message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let taskId = self.taskId {
            try encodeContainer.encode(taskId, forKey: .taskId)
        }
        if let thingName = self.thingName {
            try encodeContainer.encode(thingName, forKey: .thingName)
        }
        if let violationId = self.violationId {
            try encodeContainer.encode(violationId, forKey: .violationId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .taskId)
        taskId = taskIdDecoded
        let violationIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .violationId)
        violationId = violationIdDecoded
        let actionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionName)
        actionName = actionNameDecoded
        let thingNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingName)
        thingName = thingNameDecoded
        let executionStartDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .executionStartDate)
        executionStartDate = executionStartDateDecoded
        let executionEndDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .executionEndDate)
        executionEndDate = executionEndDateDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IotClientTypes.DetectMitigationActionExecutionStatus.self, forKey: .status)
        status = statusDecoded
        let errorCodeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .errorCode)
        errorCode = errorCodeDecoded
        let messageDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .message)
        message = messageDecoded
    }
}
