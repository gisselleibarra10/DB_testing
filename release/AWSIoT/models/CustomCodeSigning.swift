// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotClientTypes {
    /// Describes a custom method used to code sign a file.
    public struct CustomCodeSigning: Swift.Equatable {
        /// The certificate chain.
        public var certificateChain: IotClientTypes.CodeSigningCertificateChain?
        /// The hash algorithm used to code sign the file. You can use a string as the algorithm name if the target over-the-air (OTA) update devices are able to verify the signature that was generated using the same signature algorithm. For example, FreeRTOS uses SHA256 or SHA1, so you can pass either of them based on which was used for generating the signature.
        public var hashAlgorithm: Swift.String?
        /// The signature for the file.
        public var signature: IotClientTypes.CodeSigningSignature?
        /// The signature algorithm used to code sign the file. You can use a string as the algorithm name if the target over-the-air (OTA) update devices are able to verify the signature that was generated using the same signature algorithm. For example, FreeRTOS uses ECDSA or RSA, so you can pass either of them based on which was used for generating the signature.
        public var signatureAlgorithm: Swift.String?

        public init (
            certificateChain: IotClientTypes.CodeSigningCertificateChain? = nil,
            hashAlgorithm: Swift.String? = nil,
            signature: IotClientTypes.CodeSigningSignature? = nil,
            signatureAlgorithm: Swift.String? = nil
        )
        {
            self.certificateChain = certificateChain
            self.hashAlgorithm = hashAlgorithm
            self.signature = signature
            self.signatureAlgorithm = signatureAlgorithm
        }
    }

}
