// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotClientTypes {
    /// The authorizer result.
    public struct AuthResult: Swift.Equatable {
        /// The policies and statements that allowed the specified action.
        public var allowed: IotClientTypes.Allowed?
        /// The final authorization decision of this scenario. Multiple statements are taken into account when determining the authorization decision. An explicit deny statement can override multiple allow statements.
        public var authDecision: IotClientTypes.AuthDecision?
        /// Authorization information.
        public var authInfo: IotClientTypes.AuthInfo?
        /// The policies and statements that denied the specified action.
        public var denied: IotClientTypes.Denied?
        /// Contains any missing context values found while evaluating policy.
        public var missingContextValues: [Swift.String]?

        public init (
            allowed: IotClientTypes.Allowed? = nil,
            authDecision: IotClientTypes.AuthDecision? = nil,
            authInfo: IotClientTypes.AuthInfo? = nil,
            denied: IotClientTypes.Denied? = nil,
            missingContextValues: [Swift.String]? = nil
        )
        {
            self.allowed = allowed
            self.authDecision = authDecision
            self.authInfo = authInfo
            self.denied = denied
            self.missingContextValues = missingContextValues
        }
    }

}
