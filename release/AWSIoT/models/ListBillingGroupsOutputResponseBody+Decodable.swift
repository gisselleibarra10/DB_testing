// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBillingGroupsOutputResponseBody: Swift.Equatable {
    let billingGroups: [IotClientTypes.GroupNameAndArn]?
    let nextToken: Swift.String?
}

extension ListBillingGroupsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case billingGroups
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let billingGroupsContainer = try containerValues.decodeIfPresent([IotClientTypes.GroupNameAndArn?].self, forKey: .billingGroups)
        var billingGroupsDecoded0:[IotClientTypes.GroupNameAndArn]? = nil
        if let billingGroupsContainer = billingGroupsContainer {
            billingGroupsDecoded0 = [IotClientTypes.GroupNameAndArn]()
            for structure0 in billingGroupsContainer {
                if let structure0 = structure0 {
                    billingGroupsDecoded0?.append(structure0)
                }
            }
        }
        billingGroups = billingGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
