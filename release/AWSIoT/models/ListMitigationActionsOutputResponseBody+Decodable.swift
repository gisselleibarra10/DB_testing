// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMitigationActionsOutputResponseBody: Swift.Equatable {
    let actionIdentifiers: [IotClientTypes.MitigationActionIdentifier]?
    let nextToken: Swift.String?
}

extension ListMitigationActionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionIdentifiers
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionIdentifiersContainer = try containerValues.decodeIfPresent([IotClientTypes.MitigationActionIdentifier?].self, forKey: .actionIdentifiers)
        var actionIdentifiersDecoded0:[IotClientTypes.MitigationActionIdentifier]? = nil
        if let actionIdentifiersContainer = actionIdentifiersContainer {
            actionIdentifiersDecoded0 = [IotClientTypes.MitigationActionIdentifier]()
            for structure0 in actionIdentifiersContainer {
                if let structure0 = structure0 {
                    actionIdentifiersDecoded0?.append(structure0)
                }
            }
        }
        actionIdentifiers = actionIdentifiersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
