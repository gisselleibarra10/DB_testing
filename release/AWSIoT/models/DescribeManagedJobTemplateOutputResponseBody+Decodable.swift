// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeManagedJobTemplateOutputResponseBody: Swift.Equatable {
    let templateName: Swift.String?
    let templateArn: Swift.String?
    let description: Swift.String?
    let templateVersion: Swift.String?
    let environments: [Swift.String]?
    let documentParameters: [IotClientTypes.DocumentParameter]?
    let document: Swift.String?
}

extension DescribeManagedJobTemplateOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description
        case document
        case documentParameters
        case environments
        case templateArn
        case templateName
        case templateVersion
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let templateNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .templateName)
        templateName = templateNameDecoded
        let templateArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .templateArn)
        templateArn = templateArnDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let templateVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .templateVersion)
        templateVersion = templateVersionDecoded
        let environmentsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .environments)
        var environmentsDecoded0:[Swift.String]? = nil
        if let environmentsContainer = environmentsContainer {
            environmentsDecoded0 = [Swift.String]()
            for string0 in environmentsContainer {
                if let string0 = string0 {
                    environmentsDecoded0?.append(string0)
                }
            }
        }
        environments = environmentsDecoded0
        let documentParametersContainer = try containerValues.decodeIfPresent([IotClientTypes.DocumentParameter?].self, forKey: .documentParameters)
        var documentParametersDecoded0:[IotClientTypes.DocumentParameter]? = nil
        if let documentParametersContainer = documentParametersContainer {
            documentParametersDecoded0 = [IotClientTypes.DocumentParameter]()
            for structure0 in documentParametersContainer {
                if let structure0 = structure0 {
                    documentParametersDecoded0?.append(structure0)
                }
            }
        }
        documentParameters = documentParametersDecoded0
        let documentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .document)
        document = documentDecoded
    }
}
