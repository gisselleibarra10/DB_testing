// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeAuditMitigationActionsTaskOutputResponse: Swift.Equatable {
    /// Specifies the mitigation actions and their parameters that are applied as part of this task.
    public var actionsDefinition: [IotClientTypes.MitigationAction]?
    /// Specifies the mitigation actions that should be applied to specific audit checks.
    public var auditCheckToActionsMapping: [Swift.String:[Swift.String]]?
    /// The date and time when the task was completed or canceled.
    public var endTime: ClientRuntime.Date?
    /// The date and time when the task was started.
    public var startTime: ClientRuntime.Date?
    /// Identifies the findings to which the mitigation actions are applied. This can be by audit checks, by audit task, or a set of findings.
    public var target: IotClientTypes.AuditMitigationActionsTaskTarget?
    /// Aggregate counts of the results when the mitigation tasks were applied to the findings for this audit mitigation actions task.
    public var taskStatistics: [Swift.String:IotClientTypes.TaskStatisticsForAuditCheck]?
    /// The current status of the task.
    public var taskStatus: IotClientTypes.AuditMitigationActionsTaskStatus?

    public init (
        actionsDefinition: [IotClientTypes.MitigationAction]? = nil,
        auditCheckToActionsMapping: [Swift.String:[Swift.String]]? = nil,
        endTime: ClientRuntime.Date? = nil,
        startTime: ClientRuntime.Date? = nil,
        target: IotClientTypes.AuditMitigationActionsTaskTarget? = nil,
        taskStatistics: [Swift.String:IotClientTypes.TaskStatisticsForAuditCheck]? = nil,
        taskStatus: IotClientTypes.AuditMitigationActionsTaskStatus? = nil
    )
    {
        self.actionsDefinition = actionsDefinition
        self.auditCheckToActionsMapping = auditCheckToActionsMapping
        self.endTime = endTime
        self.startTime = startTime
        self.target = target
        self.taskStatistics = taskStatistics
        self.taskStatus = taskStatus
    }
}
