// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotClientTypes {
    public enum ResourceType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case accountSettings
        case caCertificate
        case clientId
        case cognitoIdentityPool
        case deviceCertificate
        case iamRole
        case iotPolicy
        case roleAlias
        case sdkUnknown(Swift.String)

        public static var allCases: [ResourceType] {
            return [
                .accountSettings,
                .caCertificate,
                .clientId,
                .cognitoIdentityPool,
                .deviceCertificate,
                .iamRole,
                .iotPolicy,
                .roleAlias,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .accountSettings: return "ACCOUNT_SETTINGS"
            case .caCertificate: return "CA_CERTIFICATE"
            case .clientId: return "CLIENT_ID"
            case .cognitoIdentityPool: return "COGNITO_IDENTITY_POOL"
            case .deviceCertificate: return "DEVICE_CERTIFICATE"
            case .iamRole: return "IAM_ROLE"
            case .iotPolicy: return "IOT_POLICY"
            case .roleAlias: return "ROLE_ALIAS"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ResourceType(rawValue: rawValue) ?? ResourceType.sdkUnknown(rawValue)
        }
    }
}
