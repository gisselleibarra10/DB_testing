// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDomainConfigurationOutputResponse: Swift.Equatable {
    /// An object that specifies the authorization service for a domain.
    public var authorizerConfig: IotClientTypes.AuthorizerConfig?
    /// The ARN of the domain configuration.
    public var domainConfigurationArn: Swift.String?
    /// The name of the domain configuration.
    public var domainConfigurationName: Swift.String?
    /// A Boolean value that specifies the current state of the domain configuration.
    public var domainConfigurationStatus: IotClientTypes.DomainConfigurationStatus?
    /// The name of the domain.
    public var domainName: Swift.String?
    /// The type of the domain.
    public var domainType: IotClientTypes.DomainType?
    /// The date and time the domain configuration's status was last changed.
    public var lastStatusChangeDate: ClientRuntime.Date?
    /// A list containing summary information about the server certificate included in the domain configuration.
    public var serverCertificates: [IotClientTypes.ServerCertificateSummary]?
    /// The type of service delivered by the endpoint.
    public var serviceType: IotClientTypes.ServiceType?

    public init (
        authorizerConfig: IotClientTypes.AuthorizerConfig? = nil,
        domainConfigurationArn: Swift.String? = nil,
        domainConfigurationName: Swift.String? = nil,
        domainConfigurationStatus: IotClientTypes.DomainConfigurationStatus? = nil,
        domainName: Swift.String? = nil,
        domainType: IotClientTypes.DomainType? = nil,
        lastStatusChangeDate: ClientRuntime.Date? = nil,
        serverCertificates: [IotClientTypes.ServerCertificateSummary]? = nil,
        serviceType: IotClientTypes.ServiceType? = nil
    )
    {
        self.authorizerConfig = authorizerConfig
        self.domainConfigurationArn = domainConfigurationArn
        self.domainConfigurationName = domainConfigurationName
        self.domainConfigurationStatus = domainConfigurationStatus
        self.domainName = domainName
        self.domainType = domainType
        self.lastStatusChangeDate = lastStatusChangeDate
        self.serverCertificates = serverCertificates
        self.serviceType = serviceType
    }
}
