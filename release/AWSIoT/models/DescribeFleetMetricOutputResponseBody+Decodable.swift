// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFleetMetricOutputResponseBody: Swift.Equatable {
    let metricName: Swift.String?
    let queryString: Swift.String?
    let aggregationType: IotClientTypes.AggregationType?
    let period: Swift.Int?
    let aggregationField: Swift.String?
    let description: Swift.String?
    let queryVersion: Swift.String?
    let indexName: Swift.String?
    let creationDate: ClientRuntime.Date?
    let lastModifiedDate: ClientRuntime.Date?
    let unit: IotClientTypes.FleetMetricUnit?
    let version: Swift.Int
    let metricArn: Swift.String?
}

extension DescribeFleetMetricOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aggregationField
        case aggregationType
        case creationDate
        case description
        case indexName
        case lastModifiedDate
        case metricArn
        case metricName
        case period
        case queryString
        case queryVersion
        case unit
        case version
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metricName)
        metricName = metricNameDecoded
        let queryStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryString)
        queryString = queryStringDecoded
        let aggregationTypeDecoded = try containerValues.decodeIfPresent(IotClientTypes.AggregationType.self, forKey: .aggregationType)
        aggregationType = aggregationTypeDecoded
        let periodDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .period)
        period = periodDecoded
        let aggregationFieldDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .aggregationField)
        aggregationField = aggregationFieldDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let queryVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryVersion)
        queryVersion = queryVersionDecoded
        let indexNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexName)
        indexName = indexNameDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
        let unitDecoded = try containerValues.decodeIfPresent(IotClientTypes.FleetMetricUnit.self, forKey: .unit)
        unit = unitDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .version) ?? 0
        version = versionDecoded
        let metricArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metricArn)
        metricArn = metricArnDecoded
    }
}
