// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.SigningProfileParameter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateArn
        case certificatePathOnDevice
        case platform
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificateArn = self.certificateArn {
            try encodeContainer.encode(certificateArn, forKey: .certificateArn)
        }
        if let certificatePathOnDevice = self.certificatePathOnDevice {
            try encodeContainer.encode(certificatePathOnDevice, forKey: .certificatePathOnDevice)
        }
        if let platform = self.platform {
            try encodeContainer.encode(platform, forKey: .platform)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificateArn)
        certificateArn = certificateArnDecoded
        let platformDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .platform)
        platform = platformDecoded
        let certificatePathOnDeviceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificatePathOnDevice)
        certificatePathOnDevice = certificatePathOnDeviceDecoded
    }
}
