// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RegisterCACertificateInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case caCertificate
        case certificateMode
        case registrationConfig
        case tags
        case verificationCertificate
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let caCertificate = self.caCertificate {
            try encodeContainer.encode(caCertificate, forKey: .caCertificate)
        }
        if let certificateMode = self.certificateMode {
            try encodeContainer.encode(certificateMode.rawValue, forKey: .certificateMode)
        }
        if let registrationConfig = self.registrationConfig {
            try encodeContainer.encode(registrationConfig, forKey: .registrationConfig)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
        if let verificationCertificate = self.verificationCertificate {
            try encodeContainer.encode(verificationCertificate, forKey: .verificationCertificate)
        }
    }
}
