// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMetricValuesOutputResponseBody: Swift.Equatable {
    let metricDatumList: [IotClientTypes.MetricDatum]?
    let nextToken: Swift.String?
}

extension ListMetricValuesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case metricDatumList
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricDatumListContainer = try containerValues.decodeIfPresent([IotClientTypes.MetricDatum?].self, forKey: .metricDatumList)
        var metricDatumListDecoded0:[IotClientTypes.MetricDatum]? = nil
        if let metricDatumListContainer = metricDatumListContainer {
            metricDatumListDecoded0 = [IotClientTypes.MetricDatum]()
            for structure0 in metricDatumListContainer {
                if let structure0 = structure0 {
                    metricDatumListDecoded0?.append(structure0)
                }
            }
        }
        metricDatumList = metricDatumListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
