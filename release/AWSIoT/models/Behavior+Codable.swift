// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.Behavior: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case criteria
        case metric
        case metricDimension
        case name
        case suppressAlerts
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let criteria = self.criteria {
            try encodeContainer.encode(criteria, forKey: .criteria)
        }
        if let metric = self.metric {
            try encodeContainer.encode(metric, forKey: .metric)
        }
        if let metricDimension = self.metricDimension {
            try encodeContainer.encode(metricDimension, forKey: .metricDimension)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let suppressAlerts = self.suppressAlerts {
            try encodeContainer.encode(suppressAlerts, forKey: .suppressAlerts)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let metricDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metric)
        metric = metricDecoded
        let metricDimensionDecoded = try containerValues.decodeIfPresent(IotClientTypes.MetricDimension.self, forKey: .metricDimension)
        metricDimension = metricDimensionDecoded
        let criteriaDecoded = try containerValues.decodeIfPresent(IotClientTypes.BehaviorCriteria.self, forKey: .criteria)
        criteria = criteriaDecoded
        let suppressAlertsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .suppressAlerts)
        suppressAlerts = suppressAlertsDecoded
    }
}
