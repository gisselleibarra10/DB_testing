// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotClientTypes {
    /// Information that identifies the noncompliant resource.
    public struct ResourceIdentifier: Swift.Equatable {
        /// The account with which the resource is associated.
        public var account: Swift.String?
        /// The ID of the CA certificate used to authorize the certificate.
        public var caCertificateId: Swift.String?
        /// The client ID.
        public var clientId: Swift.String?
        /// The ID of the Amazon Cognito identity pool.
        public var cognitoIdentityPoolId: Swift.String?
        /// The ID of the certificate attached to the resource.
        public var deviceCertificateId: Swift.String?
        /// The ARN of the IAM role that has overly permissive actions.
        public var iamRoleArn: Swift.String?
        /// The version of the policy associated with the resource.
        public var policyVersionIdentifier: IotClientTypes.PolicyVersionIdentifier?
        /// The ARN of the role alias that has overly permissive actions.
        public var roleAliasArn: Swift.String?

        public init (
            account: Swift.String? = nil,
            caCertificateId: Swift.String? = nil,
            clientId: Swift.String? = nil,
            cognitoIdentityPoolId: Swift.String? = nil,
            deviceCertificateId: Swift.String? = nil,
            iamRoleArn: Swift.String? = nil,
            policyVersionIdentifier: IotClientTypes.PolicyVersionIdentifier? = nil,
            roleAliasArn: Swift.String? = nil
        )
        {
            self.account = account
            self.caCertificateId = caCertificateId
            self.clientId = clientId
            self.cognitoIdentityPoolId = cognitoIdentityPoolId
            self.deviceCertificateId = deviceCertificateId
            self.iamRoleArn = iamRoleArn
            self.policyVersionIdentifier = policyVersionIdentifier
            self.roleAliasArn = roleAliasArn
        }
    }

}
