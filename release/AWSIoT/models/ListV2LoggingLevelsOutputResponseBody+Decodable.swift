// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListV2LoggingLevelsOutputResponseBody: Swift.Equatable {
    let logTargetConfigurations: [IotClientTypes.LogTargetConfiguration]?
    let nextToken: Swift.String?
}

extension ListV2LoggingLevelsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case logTargetConfigurations
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logTargetConfigurationsContainer = try containerValues.decodeIfPresent([IotClientTypes.LogTargetConfiguration?].self, forKey: .logTargetConfigurations)
        var logTargetConfigurationsDecoded0:[IotClientTypes.LogTargetConfiguration]? = nil
        if let logTargetConfigurationsContainer = logTargetConfigurationsContainer {
            logTargetConfigurationsDecoded0 = [IotClientTypes.LogTargetConfiguration]()
            for structure0 in logTargetConfigurationsContainer {
                if let structure0 = structure0 {
                    logTargetConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        logTargetConfigurations = logTargetConfigurationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
