// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.DomainConfigurationSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainConfigurationArn
        case domainConfigurationName
        case serviceType
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let domainConfigurationArn = self.domainConfigurationArn {
            try encodeContainer.encode(domainConfigurationArn, forKey: .domainConfigurationArn)
        }
        if let domainConfigurationName = self.domainConfigurationName {
            try encodeContainer.encode(domainConfigurationName, forKey: .domainConfigurationName)
        }
        if let serviceType = self.serviceType {
            try encodeContainer.encode(serviceType.rawValue, forKey: .serviceType)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainConfigurationNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainConfigurationName)
        domainConfigurationName = domainConfigurationNameDecoded
        let domainConfigurationArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .domainConfigurationArn)
        domainConfigurationArn = domainConfigurationArnDecoded
        let serviceTypeDecoded = try containerValues.decodeIfPresent(IotClientTypes.ServiceType.self, forKey: .serviceType)
        serviceType = serviceTypeDecoded
    }
}
