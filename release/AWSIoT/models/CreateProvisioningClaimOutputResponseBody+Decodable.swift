// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateProvisioningClaimOutputResponseBody: Swift.Equatable {
    let certificateId: Swift.String?
    let certificatePem: Swift.String?
    let keyPair: IotClientTypes.KeyPair?
    let expiration: ClientRuntime.Date?
}

extension CreateProvisioningClaimOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificateId
        case certificatePem
        case expiration
        case keyPair
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificateId)
        certificateId = certificateIdDecoded
        let certificatePemDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificatePem)
        certificatePem = certificatePemDecoded
        let keyPairDecoded = try containerValues.decodeIfPresent(IotClientTypes.KeyPair.self, forKey: .keyPair)
        keyPair = keyPairDecoded
        let expirationDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .expiration)
        expiration = expirationDecoded
    }
}
