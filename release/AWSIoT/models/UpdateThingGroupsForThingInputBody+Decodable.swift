// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateThingGroupsForThingInputBody: Swift.Equatable {
    let thingName: Swift.String?
    let thingGroupsToAdd: [Swift.String]?
    let thingGroupsToRemove: [Swift.String]?
    let overrideDynamicGroups: Swift.Bool
}

extension UpdateThingGroupsForThingInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case overrideDynamicGroups
        case thingGroupsToAdd
        case thingGroupsToRemove
        case thingName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingName)
        thingName = thingNameDecoded
        let thingGroupsToAddContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .thingGroupsToAdd)
        var thingGroupsToAddDecoded0:[Swift.String]? = nil
        if let thingGroupsToAddContainer = thingGroupsToAddContainer {
            thingGroupsToAddDecoded0 = [Swift.String]()
            for string0 in thingGroupsToAddContainer {
                if let string0 = string0 {
                    thingGroupsToAddDecoded0?.append(string0)
                }
            }
        }
        thingGroupsToAdd = thingGroupsToAddDecoded0
        let thingGroupsToRemoveContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .thingGroupsToRemove)
        var thingGroupsToRemoveDecoded0:[Swift.String]? = nil
        if let thingGroupsToRemoveContainer = thingGroupsToRemoveContainer {
            thingGroupsToRemoveDecoded0 = [Swift.String]()
            for string0 in thingGroupsToRemoveContainer {
                if let string0 = string0 {
                    thingGroupsToRemoveDecoded0?.append(string0)
                }
            }
        }
        thingGroupsToRemove = thingGroupsToRemoveDecoded0
        let overrideDynamicGroupsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .overrideDynamicGroups) ?? false
        overrideDynamicGroups = overrideDynamicGroupsDecoded
    }
}
