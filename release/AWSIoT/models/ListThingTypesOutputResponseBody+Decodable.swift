// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListThingTypesOutputResponseBody: Swift.Equatable {
    let thingTypes: [IotClientTypes.ThingTypeDefinition]?
    let nextToken: Swift.String?
}

extension ListThingTypesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case thingTypes
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingTypesContainer = try containerValues.decodeIfPresent([IotClientTypes.ThingTypeDefinition?].self, forKey: .thingTypes)
        var thingTypesDecoded0:[IotClientTypes.ThingTypeDefinition]? = nil
        if let thingTypesContainer = thingTypesContainer {
            thingTypesDecoded0 = [IotClientTypes.ThingTypeDefinition]()
            for structure0 in thingTypesContainer {
                if let structure0 = structure0 {
                    thingTypesDecoded0?.append(structure0)
                }
            }
        }
        thingTypes = thingTypesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
