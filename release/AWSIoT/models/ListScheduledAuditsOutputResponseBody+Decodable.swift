// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListScheduledAuditsOutputResponseBody: Swift.Equatable {
    let scheduledAudits: [IotClientTypes.ScheduledAuditMetadata]?
    let nextToken: Swift.String?
}

extension ListScheduledAuditsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case scheduledAudits
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scheduledAuditsContainer = try containerValues.decodeIfPresent([IotClientTypes.ScheduledAuditMetadata?].self, forKey: .scheduledAudits)
        var scheduledAuditsDecoded0:[IotClientTypes.ScheduledAuditMetadata]? = nil
        if let scheduledAuditsContainer = scheduledAuditsContainer {
            scheduledAuditsDecoded0 = [IotClientTypes.ScheduledAuditMetadata]()
            for structure0 in scheduledAuditsContainer {
                if let structure0 = structure0 {
                    scheduledAuditsDecoded0?.append(structure0)
                }
            }
        }
        scheduledAudits = scheduledAuditsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
