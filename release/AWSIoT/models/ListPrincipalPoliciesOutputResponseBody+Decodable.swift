// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPrincipalPoliciesOutputResponseBody: Swift.Equatable {
    let policies: [IotClientTypes.Policy]?
    let nextMarker: Swift.String?
}

extension ListPrincipalPoliciesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextMarker
        case policies
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policiesContainer = try containerValues.decodeIfPresent([IotClientTypes.Policy?].self, forKey: .policies)
        var policiesDecoded0:[IotClientTypes.Policy]? = nil
        if let policiesContainer = policiesContainer {
            policiesDecoded0 = [IotClientTypes.Policy]()
            for structure0 in policiesContainer {
                if let structure0 = structure0 {
                    policiesDecoded0?.append(structure0)
                }
            }
        }
        policies = policiesDecoded0
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
    }
}
