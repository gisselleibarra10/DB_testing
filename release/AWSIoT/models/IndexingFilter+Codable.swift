// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.IndexingFilter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case namedShadowNames
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let namedShadowNames = namedShadowNames {
            var namedShadowNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .namedShadowNames)
            for namedshadownamesfilter0 in namedShadowNames {
                try namedShadowNamesContainer.encode(namedshadownamesfilter0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let namedShadowNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .namedShadowNames)
        var namedShadowNamesDecoded0:[Swift.String]? = nil
        if let namedShadowNamesContainer = namedShadowNamesContainer {
            namedShadowNamesDecoded0 = [Swift.String]()
            for string0 in namedShadowNamesContainer {
                if let string0 = string0 {
                    namedShadowNamesDecoded0?.append(string0)
                }
            }
        }
        namedShadowNames = namedShadowNamesDecoded0
    }
}
