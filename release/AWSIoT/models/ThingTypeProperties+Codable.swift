// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.ThingTypeProperties: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case searchableAttributes
        case thingTypeDescription
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let searchableAttributes = searchableAttributes {
            var searchableAttributesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .searchableAttributes)
            for searchableattributes0 in searchableAttributes {
                try searchableAttributesContainer.encode(searchableattributes0)
            }
        }
        if let thingTypeDescription = self.thingTypeDescription {
            try encodeContainer.encode(thingTypeDescription, forKey: .thingTypeDescription)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingTypeDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingTypeDescription)
        thingTypeDescription = thingTypeDescriptionDecoded
        let searchableAttributesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .searchableAttributes)
        var searchableAttributesDecoded0:[Swift.String]? = nil
        if let searchableAttributesContainer = searchableAttributesContainer {
            searchableAttributesDecoded0 = [Swift.String]()
            for string0 in searchableAttributesContainer {
                if let string0 = string0 {
                    searchableAttributesDecoded0?.append(string0)
                }
            }
        }
        searchableAttributes = searchableAttributesDecoded0
    }
}
