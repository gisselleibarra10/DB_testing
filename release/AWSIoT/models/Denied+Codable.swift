// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.Denied: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case explicitDeny
        case implicitDeny
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let explicitDeny = self.explicitDeny {
            try encodeContainer.encode(explicitDeny, forKey: .explicitDeny)
        }
        if let implicitDeny = self.implicitDeny {
            try encodeContainer.encode(implicitDeny, forKey: .implicitDeny)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let implicitDenyDecoded = try containerValues.decodeIfPresent(IotClientTypes.ImplicitDeny.self, forKey: .implicitDeny)
        implicitDeny = implicitDenyDecoded
        let explicitDenyDecoded = try containerValues.decodeIfPresent(IotClientTypes.ExplicitDeny.self, forKey: .explicitDeny)
        explicitDeny = explicitDenyDecoded
    }
}
