// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotClientTypes {
    /// Send data to an HTTPS endpoint.
    public struct HttpAction: Swift.Equatable {
        /// The authentication method to use when sending data to an HTTPS endpoint.
        public var auth: IotClientTypes.HttpAuthorization?
        /// The URL to which IoT sends a confirmation message. The value of the confirmation URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL IoT uses the endpoint URL as the confirmation URL. If you use substitution templates in the confirmationUrl, you must create and enable topic rule destinations that match each possible value of the substitution template before traffic is allowed to your endpoint URL.
        public var confirmationUrl: Swift.String?
        /// The HTTP headers to send with the message data.
        public var headers: [IotClientTypes.HttpActionHeader]?
        /// The endpoint URL. If substitution templates are used in the URL, you must also specify a confirmationUrl. If this is a new destination, a new TopicRuleDestination is created if possible.
        /// This member is required.
        public var url: Swift.String?

        public init (
            auth: IotClientTypes.HttpAuthorization? = nil,
            confirmationUrl: Swift.String? = nil,
            headers: [IotClientTypes.HttpActionHeader]? = nil,
            url: Swift.String? = nil
        )
        {
            self.auth = auth
            self.confirmationUrl = confirmationUrl
            self.headers = headers
            self.url = url
        }
    }

}
