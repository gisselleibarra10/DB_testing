// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotClientTypes {
    /// The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).
    public struct MitigationActionParams: Swift.Equatable {
        /// Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.
        public var addThingsToThingGroupParams: IotClientTypes.AddThingsToThingGroupParams?
        /// Parameters to define a mitigation action that enables Amazon Web Services IoT Core logging at a specified level of detail.
        public var enableIoTLoggingParams: IotClientTypes.EnableIoTLoggingParams?
        /// Parameters to define a mitigation action that publishes findings to Amazon Simple Notification Service (Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
        public var publishFindingToSnsParams: IotClientTypes.PublishFindingToSnsParams?
        /// Parameters to define a mitigation action that adds a blank policy to restrict permissions.
        public var replaceDefaultPolicyVersionParams: IotClientTypes.ReplaceDefaultPolicyVersionParams?
        /// Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
        public var updateCACertificateParams: IotClientTypes.UpdateCACertificateParams?
        /// Parameters to define a mitigation action that changes the state of the device certificate to inactive.
        public var updateDeviceCertificateParams: IotClientTypes.UpdateDeviceCertificateParams?

        public init (
            addThingsToThingGroupParams: IotClientTypes.AddThingsToThingGroupParams? = nil,
            enableIoTLoggingParams: IotClientTypes.EnableIoTLoggingParams? = nil,
            publishFindingToSnsParams: IotClientTypes.PublishFindingToSnsParams? = nil,
            replaceDefaultPolicyVersionParams: IotClientTypes.ReplaceDefaultPolicyVersionParams? = nil,
            updateCACertificateParams: IotClientTypes.UpdateCACertificateParams? = nil,
            updateDeviceCertificateParams: IotClientTypes.UpdateDeviceCertificateParams? = nil
        )
        {
            self.addThingsToThingGroupParams = addThingsToThingGroupParams
            self.enableIoTLoggingParams = enableIoTLoggingParams
            self.publishFindingToSnsParams = publishFindingToSnsParams
            self.replaceDefaultPolicyVersionParams = replaceDefaultPolicyVersionParams
            self.updateCACertificateParams = updateCACertificateParams
            self.updateDeviceCertificateParams = updateDeviceCertificateParams
        }
    }

}
