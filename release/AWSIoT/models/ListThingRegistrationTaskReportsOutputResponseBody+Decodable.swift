// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListThingRegistrationTaskReportsOutputResponseBody: Swift.Equatable {
    let resourceLinks: [Swift.String]?
    let reportType: IotClientTypes.ReportType?
    let nextToken: Swift.String?
}

extension ListThingRegistrationTaskReportsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case reportType
        case resourceLinks
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceLinksContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .resourceLinks)
        var resourceLinksDecoded0:[Swift.String]? = nil
        if let resourceLinksContainer = resourceLinksContainer {
            resourceLinksDecoded0 = [Swift.String]()
            for string0 in resourceLinksContainer {
                if let string0 = string0 {
                    resourceLinksDecoded0?.append(string0)
                }
            }
        }
        resourceLinks = resourceLinksDecoded0
        let reportTypeDecoded = try containerValues.decodeIfPresent(IotClientTypes.ReportType.self, forKey: .reportType)
        reportType = reportTypeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
