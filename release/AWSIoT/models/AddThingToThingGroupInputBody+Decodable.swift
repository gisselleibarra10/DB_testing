// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddThingToThingGroupInputBody: Swift.Equatable {
    let thingGroupName: Swift.String?
    let thingGroupArn: Swift.String?
    let thingName: Swift.String?
    let thingArn: Swift.String?
    let overrideDynamicGroups: Swift.Bool
}

extension AddThingToThingGroupInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case overrideDynamicGroups
        case thingArn
        case thingGroupArn
        case thingGroupName
        case thingName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingGroupName)
        thingGroupName = thingGroupNameDecoded
        let thingGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingGroupArn)
        thingGroupArn = thingGroupArnDecoded
        let thingNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingName)
        thingName = thingNameDecoded
        let thingArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingArn)
        thingArn = thingArnDecoded
        let overrideDynamicGroupsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .overrideDynamicGroups) ?? false
        overrideDynamicGroups = overrideDynamicGroupsDecoded
    }
}
