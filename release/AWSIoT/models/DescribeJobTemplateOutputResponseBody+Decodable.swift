// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeJobTemplateOutputResponseBody: Swift.Equatable {
    let jobTemplateArn: Swift.String?
    let jobTemplateId: Swift.String?
    let description: Swift.String?
    let documentSource: Swift.String?
    let document: Swift.String?
    let createdAt: ClientRuntime.Date?
    let presignedUrlConfig: IotClientTypes.PresignedUrlConfig?
    let jobExecutionsRolloutConfig: IotClientTypes.JobExecutionsRolloutConfig?
    let abortConfig: IotClientTypes.AbortConfig?
    let timeoutConfig: IotClientTypes.TimeoutConfig?
    let jobExecutionsRetryConfig: IotClientTypes.JobExecutionsRetryConfig?
}

extension DescribeJobTemplateOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case abortConfig
        case createdAt
        case description
        case document
        case documentSource
        case jobExecutionsRetryConfig
        case jobExecutionsRolloutConfig
        case jobTemplateArn
        case jobTemplateId
        case presignedUrlConfig
        case timeoutConfig
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobTemplateArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobTemplateArn)
        jobTemplateArn = jobTemplateArnDecoded
        let jobTemplateIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .jobTemplateId)
        jobTemplateId = jobTemplateIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let documentSourceDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .documentSource)
        documentSource = documentSourceDecoded
        let documentDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .document)
        document = documentDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let presignedUrlConfigDecoded = try containerValues.decodeIfPresent(IotClientTypes.PresignedUrlConfig.self, forKey: .presignedUrlConfig)
        presignedUrlConfig = presignedUrlConfigDecoded
        let jobExecutionsRolloutConfigDecoded = try containerValues.decodeIfPresent(IotClientTypes.JobExecutionsRolloutConfig.self, forKey: .jobExecutionsRolloutConfig)
        jobExecutionsRolloutConfig = jobExecutionsRolloutConfigDecoded
        let abortConfigDecoded = try containerValues.decodeIfPresent(IotClientTypes.AbortConfig.self, forKey: .abortConfig)
        abortConfig = abortConfigDecoded
        let timeoutConfigDecoded = try containerValues.decodeIfPresent(IotClientTypes.TimeoutConfig.self, forKey: .timeoutConfig)
        timeoutConfig = timeoutConfigDecoded
        let jobExecutionsRetryConfigDecoded = try containerValues.decodeIfPresent(IotClientTypes.JobExecutionsRetryConfig.self, forKey: .jobExecutionsRetryConfig)
        jobExecutionsRetryConfig = jobExecutionsRetryConfigDecoded
    }
}
