// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProvisioningTemplatesOutputResponseBody: Swift.Equatable {
    let templates: [IotClientTypes.ProvisioningTemplateSummary]?
    let nextToken: Swift.String?
}

extension ListProvisioningTemplatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case templates
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let templatesContainer = try containerValues.decodeIfPresent([IotClientTypes.ProvisioningTemplateSummary?].self, forKey: .templates)
        var templatesDecoded0:[IotClientTypes.ProvisioningTemplateSummary]? = nil
        if let templatesContainer = templatesContainer {
            templatesDecoded0 = [IotClientTypes.ProvisioningTemplateSummary]()
            for structure0 in templatesContainer {
                if let structure0 = structure0 {
                    templatesDecoded0?.append(structure0)
                }
            }
        }
        templates = templatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
