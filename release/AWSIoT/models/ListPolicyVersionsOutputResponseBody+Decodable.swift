// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPolicyVersionsOutputResponseBody: Swift.Equatable {
    let policyVersions: [IotClientTypes.PolicyVersion]?
}

extension ListPolicyVersionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case policyVersions
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyVersionsContainer = try containerValues.decodeIfPresent([IotClientTypes.PolicyVersion?].self, forKey: .policyVersions)
        var policyVersionsDecoded0:[IotClientTypes.PolicyVersion]? = nil
        if let policyVersionsContainer = policyVersionsContainer {
            policyVersionsDecoded0 = [IotClientTypes.PolicyVersion]()
            for structure0 in policyVersionsContainer {
                if let structure0 = structure0 {
                    policyVersionsDecoded0?.append(structure0)
                }
            }
        }
        policyVersions = policyVersionsDecoded0
    }
}
