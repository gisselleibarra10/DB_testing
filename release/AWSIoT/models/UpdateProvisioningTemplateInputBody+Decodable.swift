// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateProvisioningTemplateInputBody: Swift.Equatable {
    let description: Swift.String?
    let enabled: Swift.Bool
    let defaultVersionId: Swift.Int?
    let provisioningRoleArn: Swift.String?
    let preProvisioningHook: IotClientTypes.ProvisioningHook?
    let removePreProvisioningHook: Swift.Bool?
}

extension UpdateProvisioningTemplateInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultVersionId
        case description
        case enabled
        case preProvisioningHook
        case provisioningRoleArn
        case removePreProvisioningHook
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let enabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabled) ?? false
        enabled = enabledDecoded
        let defaultVersionIdDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .defaultVersionId)
        defaultVersionId = defaultVersionIdDecoded
        let provisioningRoleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .provisioningRoleArn)
        provisioningRoleArn = provisioningRoleArnDecoded
        let preProvisioningHookDecoded = try containerValues.decodeIfPresent(IotClientTypes.ProvisioningHook.self, forKey: .preProvisioningHook)
        preProvisioningHook = preProvisioningHookDecoded
        let removePreProvisioningHookDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .removePreProvisioningHook)
        removePreProvisioningHook = removePreProvisioningHookDecoded
    }
}
