// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.AddThingsToThingGroupParams: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case overrideDynamicGroups
        case thingGroupNames
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let overrideDynamicGroups = self.overrideDynamicGroups {
            try encodeContainer.encode(overrideDynamicGroups, forKey: .overrideDynamicGroups)
        }
        if let thingGroupNames = thingGroupNames {
            var thingGroupNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .thingGroupNames)
            for thinggroupnames0 in thingGroupNames {
                try thingGroupNamesContainer.encode(thinggroupnames0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingGroupNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .thingGroupNames)
        var thingGroupNamesDecoded0:[Swift.String]? = nil
        if let thingGroupNamesContainer = thingGroupNamesContainer {
            thingGroupNamesDecoded0 = [Swift.String]()
            for string0 in thingGroupNamesContainer {
                if let string0 = string0 {
                    thingGroupNamesDecoded0?.append(string0)
                }
            }
        }
        thingGroupNames = thingGroupNamesDecoded0
        let overrideDynamicGroupsDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .overrideDynamicGroups)
        overrideDynamicGroups = overrideDynamicGroupsDecoded
    }
}
