// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.ThingGroupDocument: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributes
        case parentGroupNames
        case thingGroupDescription
        case thingGroupId
        case thingGroupName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributes = attributes {
            var attributesContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .attributes)
            for (dictKey0, attributes0) in attributes {
                try attributesContainer.encode(attributes0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let parentGroupNames = parentGroupNames {
            var parentGroupNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .parentGroupNames)
            for thinggroupnamelist0 in parentGroupNames {
                try parentGroupNamesContainer.encode(thinggroupnamelist0)
            }
        }
        if let thingGroupDescription = self.thingGroupDescription {
            try encodeContainer.encode(thingGroupDescription, forKey: .thingGroupDescription)
        }
        if let thingGroupId = self.thingGroupId {
            try encodeContainer.encode(thingGroupId, forKey: .thingGroupId)
        }
        if let thingGroupName = self.thingGroupName {
            try encodeContainer.encode(thingGroupName, forKey: .thingGroupName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingGroupName)
        thingGroupName = thingGroupNameDecoded
        let thingGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingGroupId)
        thingGroupId = thingGroupIdDecoded
        let thingGroupDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingGroupDescription)
        thingGroupDescription = thingGroupDescriptionDecoded
        let attributesContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .attributes)
        var attributesDecoded0: [Swift.String:Swift.String]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [Swift.String:Swift.String]()
            for (key0, attributevalue0) in attributesContainer {
                if let attributevalue0 = attributevalue0 {
                    attributesDecoded0?[key0] = attributevalue0
                }
            }
        }
        attributes = attributesDecoded0
        let parentGroupNamesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .parentGroupNames)
        var parentGroupNamesDecoded0:[Swift.String]? = nil
        if let parentGroupNamesContainer = parentGroupNamesContainer {
            parentGroupNamesDecoded0 = [Swift.String]()
            for string0 in parentGroupNamesContainer {
                if let string0 = string0 {
                    parentGroupNamesDecoded0?.append(string0)
                }
            }
        }
        parentGroupNames = parentGroupNamesDecoded0
    }
}
