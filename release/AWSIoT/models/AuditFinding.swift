// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes {
    /// The findings (results) of the audit.
    public struct AuditFinding: Swift.Equatable {
        /// The audit check that generated this result.
        public var checkName: Swift.String?
        /// A unique identifier for this set of audit findings. This identifier is used to apply mitigation tasks to one or more sets of findings.
        public var findingId: Swift.String?
        /// The time the result (finding) was discovered.
        public var findingTime: ClientRuntime.Date?
        /// Indicates whether the audit finding was suppressed or not during reporting.
        public var isSuppressed: Swift.Bool?
        /// The resource that was found to be noncompliant with the audit check.
        public var nonCompliantResource: IotClientTypes.NonCompliantResource?
        /// The reason the resource was noncompliant.
        public var reasonForNonCompliance: Swift.String?
        /// A code that indicates the reason that the resource was noncompliant.
        public var reasonForNonComplianceCode: Swift.String?
        /// The list of related resources.
        public var relatedResources: [IotClientTypes.RelatedResource]?
        /// The severity of the result (finding).
        public var severity: IotClientTypes.AuditFindingSeverity?
        /// The ID of the audit that generated this result (finding).
        public var taskId: Swift.String?
        /// The time the audit started.
        public var taskStartTime: ClientRuntime.Date?

        public init (
            checkName: Swift.String? = nil,
            findingId: Swift.String? = nil,
            findingTime: ClientRuntime.Date? = nil,
            isSuppressed: Swift.Bool? = nil,
            nonCompliantResource: IotClientTypes.NonCompliantResource? = nil,
            reasonForNonCompliance: Swift.String? = nil,
            reasonForNonComplianceCode: Swift.String? = nil,
            relatedResources: [IotClientTypes.RelatedResource]? = nil,
            severity: IotClientTypes.AuditFindingSeverity? = nil,
            taskId: Swift.String? = nil,
            taskStartTime: ClientRuntime.Date? = nil
        )
        {
            self.checkName = checkName
            self.findingId = findingId
            self.findingTime = findingTime
            self.isSuppressed = isSuppressed
            self.nonCompliantResource = nonCompliantResource
            self.reasonForNonCompliance = reasonForNonCompliance
            self.reasonForNonComplianceCode = reasonForNonComplianceCode
            self.relatedResources = relatedResources
            self.severity = severity
            self.taskId = taskId
            self.taskStartTime = taskStartTime
        }
    }

}
