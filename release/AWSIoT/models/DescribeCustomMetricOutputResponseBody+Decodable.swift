// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCustomMetricOutputResponseBody: Swift.Equatable {
    let metricName: Swift.String?
    let metricArn: Swift.String?
    let metricType: IotClientTypes.CustomMetricType?
    let displayName: Swift.String?
    let creationDate: ClientRuntime.Date?
    let lastModifiedDate: ClientRuntime.Date?
}

extension DescribeCustomMetricOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationDate
        case displayName
        case lastModifiedDate
        case metricArn
        case metricName
        case metricType
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metricName)
        metricName = metricNameDecoded
        let metricArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .metricArn)
        metricArn = metricArnDecoded
        let metricTypeDecoded = try containerValues.decodeIfPresent(IotClientTypes.CustomMetricType.self, forKey: .metricType)
        metricType = metricTypeDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
    }
}
