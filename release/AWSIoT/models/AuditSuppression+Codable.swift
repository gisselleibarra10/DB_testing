// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.AuditSuppression: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case checkName
        case description
        case expirationDate
        case resourceIdentifier
        case suppressIndefinitely
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let checkName = self.checkName {
            try encodeContainer.encode(checkName, forKey: .checkName)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let expirationDate = self.expirationDate {
            try encodeContainer.encode(expirationDate.timeIntervalSince1970, forKey: .expirationDate)
        }
        if let resourceIdentifier = self.resourceIdentifier {
            try encodeContainer.encode(resourceIdentifier, forKey: .resourceIdentifier)
        }
        if let suppressIndefinitely = self.suppressIndefinitely {
            try encodeContainer.encode(suppressIndefinitely, forKey: .suppressIndefinitely)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let checkNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .checkName)
        checkName = checkNameDecoded
        let resourceIdentifierDecoded = try containerValues.decodeIfPresent(IotClientTypes.ResourceIdentifier.self, forKey: .resourceIdentifier)
        resourceIdentifier = resourceIdentifierDecoded
        let expirationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .expirationDate)
        expirationDate = expirationDateDecoded
        let suppressIndefinitelyDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .suppressIndefinitely)
        suppressIndefinitely = suppressIndefinitelyDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
    }
}
