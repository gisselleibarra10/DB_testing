// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateJobInput: Swift.Equatable {
    /// Allows you to create criteria to abort a job.
    public var abortConfig: IotClientTypes.AbortConfig?
    /// A short text description of the job.
    public var description: Swift.String?
    /// Allows you to create the criteria to retry a job.
    public var jobExecutionsRetryConfig: IotClientTypes.JobExecutionsRetryConfig?
    /// Allows you to create a staged rollout of the job.
    public var jobExecutionsRolloutConfig: IotClientTypes.JobExecutionsRolloutConfig?
    /// The ID of the job to be updated.
    /// This member is required.
    public var jobId: Swift.String?
    /// The namespace used to indicate that a job is a customer-managed job. When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format. $aws/things/THING_NAME/jobs/JOB_ID/notify-namespace-NAMESPACE_ID/ The namespaceId feature is in public preview.
    public var namespaceId: Swift.String?
    /// Configuration information for pre-signed S3 URLs.
    public var presignedUrlConfig: IotClientTypes.PresignedUrlConfig?
    /// Specifies the amount of time each device has to finish its execution of the job. The timer is started when the job execution status is set to IN_PROGRESS. If the job execution status is not set to another terminal state before the time expires, it will be automatically set to TIMED_OUT.
    public var timeoutConfig: IotClientTypes.TimeoutConfig?

    public init (
        abortConfig: IotClientTypes.AbortConfig? = nil,
        description: Swift.String? = nil,
        jobExecutionsRetryConfig: IotClientTypes.JobExecutionsRetryConfig? = nil,
        jobExecutionsRolloutConfig: IotClientTypes.JobExecutionsRolloutConfig? = nil,
        jobId: Swift.String? = nil,
        namespaceId: Swift.String? = nil,
        presignedUrlConfig: IotClientTypes.PresignedUrlConfig? = nil,
        timeoutConfig: IotClientTypes.TimeoutConfig? = nil
    )
    {
        self.abortConfig = abortConfig
        self.description = description
        self.jobExecutionsRetryConfig = jobExecutionsRetryConfig
        self.jobExecutionsRolloutConfig = jobExecutionsRolloutConfig
        self.jobId = jobId
        self.namespaceId = namespaceId
        self.presignedUrlConfig = presignedUrlConfig
        self.timeoutConfig = timeoutConfig
    }
}
