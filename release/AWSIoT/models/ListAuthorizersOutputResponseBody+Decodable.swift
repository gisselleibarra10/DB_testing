// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAuthorizersOutputResponseBody: Swift.Equatable {
    let authorizers: [IotClientTypes.AuthorizerSummary]?
    let nextMarker: Swift.String?
}

extension ListAuthorizersOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authorizers
        case nextMarker
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authorizersContainer = try containerValues.decodeIfPresent([IotClientTypes.AuthorizerSummary?].self, forKey: .authorizers)
        var authorizersDecoded0:[IotClientTypes.AuthorizerSummary]? = nil
        if let authorizersContainer = authorizersContainer {
            authorizersDecoded0 = [IotClientTypes.AuthorizerSummary]()
            for structure0 in authorizersContainer {
                if let structure0 = structure0 {
                    authorizersDecoded0?.append(structure0)
                }
            }
        }
        authorizers = authorizersDecoded0
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
    }
}
