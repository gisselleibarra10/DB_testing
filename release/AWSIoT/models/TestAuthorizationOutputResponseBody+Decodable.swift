// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestAuthorizationOutputResponseBody: Swift.Equatable {
    let authResults: [IotClientTypes.AuthResult]?
}

extension TestAuthorizationOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case authResults
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authResultsContainer = try containerValues.decodeIfPresent([IotClientTypes.AuthResult?].self, forKey: .authResults)
        var authResultsDecoded0:[IotClientTypes.AuthResult]? = nil
        if let authResultsContainer = authResultsContainer {
            authResultsDecoded0 = [IotClientTypes.AuthResult]()
            for structure0 in authResultsContainer {
                if let structure0 = structure0 {
                    authResultsDecoded0?.append(structure0)
                }
            }
        }
        authResults = authResultsDecoded0
    }
}
