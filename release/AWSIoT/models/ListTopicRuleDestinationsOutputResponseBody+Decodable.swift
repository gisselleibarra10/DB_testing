// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTopicRuleDestinationsOutputResponseBody: Swift.Equatable {
    let destinationSummaries: [IotClientTypes.TopicRuleDestinationSummary]?
    let nextToken: Swift.String?
}

extension ListTopicRuleDestinationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case destinationSummaries
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationSummariesContainer = try containerValues.decodeIfPresent([IotClientTypes.TopicRuleDestinationSummary?].self, forKey: .destinationSummaries)
        var destinationSummariesDecoded0:[IotClientTypes.TopicRuleDestinationSummary]? = nil
        if let destinationSummariesContainer = destinationSummariesContainer {
            destinationSummariesDecoded0 = [IotClientTypes.TopicRuleDestinationSummary]()
            for structure0 in destinationSummariesContainer {
                if let structure0 = structure0 {
                    destinationSummariesDecoded0?.append(structure0)
                }
            }
        }
        destinationSummaries = destinationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
