// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOTAUpdatesOutputResponseBody: Swift.Equatable {
    let otaUpdates: [IotClientTypes.OTAUpdateSummary]?
    let nextToken: Swift.String?
}

extension ListOTAUpdatesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextToken
        case otaUpdates
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let otaUpdatesContainer = try containerValues.decodeIfPresent([IotClientTypes.OTAUpdateSummary?].self, forKey: .otaUpdates)
        var otaUpdatesDecoded0:[IotClientTypes.OTAUpdateSummary]? = nil
        if let otaUpdatesContainer = otaUpdatesContainer {
            otaUpdatesDecoded0 = [IotClientTypes.OTAUpdateSummary]()
            for structure0 in otaUpdatesContainer {
                if let structure0 = structure0 {
                    otaUpdatesDecoded0?.append(structure0)
                }
            }
        }
        otaUpdates = otaUpdatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
