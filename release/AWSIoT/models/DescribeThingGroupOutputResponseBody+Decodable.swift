// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeThingGroupOutputResponseBody: Swift.Equatable {
    let thingGroupName: Swift.String?
    let thingGroupId: Swift.String?
    let thingGroupArn: Swift.String?
    let version: Swift.Int
    let thingGroupProperties: IotClientTypes.ThingGroupProperties?
    let thingGroupMetadata: IotClientTypes.ThingGroupMetadata?
    let indexName: Swift.String?
    let queryString: Swift.String?
    let queryVersion: Swift.String?
    let status: IotClientTypes.DynamicGroupStatus?
}

extension DescribeThingGroupOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case indexName
        case queryString
        case queryVersion
        case status
        case thingGroupArn
        case thingGroupId
        case thingGroupMetadata
        case thingGroupName
        case thingGroupProperties
        case version
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingGroupNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingGroupName)
        thingGroupName = thingGroupNameDecoded
        let thingGroupIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingGroupId)
        thingGroupId = thingGroupIdDecoded
        let thingGroupArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingGroupArn)
        thingGroupArn = thingGroupArnDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .version) ?? 0
        version = versionDecoded
        let thingGroupPropertiesDecoded = try containerValues.decodeIfPresent(IotClientTypes.ThingGroupProperties.self, forKey: .thingGroupProperties)
        thingGroupProperties = thingGroupPropertiesDecoded
        let thingGroupMetadataDecoded = try containerValues.decodeIfPresent(IotClientTypes.ThingGroupMetadata.self, forKey: .thingGroupMetadata)
        thingGroupMetadata = thingGroupMetadataDecoded
        let indexNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .indexName)
        indexName = indexNameDecoded
        let queryStringDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryString)
        queryString = queryStringDecoded
        let queryVersionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .queryVersion)
        queryVersion = queryVersionDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IotClientTypes.DynamicGroupStatus.self, forKey: .status)
        status = statusDecoded
    }
}
