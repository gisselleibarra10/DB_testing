// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateThingTypeOutputResponseBody: Swift.Equatable {
    let thingTypeName: Swift.String?
    let thingTypeArn: Swift.String?
    let thingTypeId: Swift.String?
}

extension CreateThingTypeOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case thingTypeArn
        case thingTypeId
        case thingTypeName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingTypeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingTypeName)
        thingTypeName = thingTypeNameDecoded
        let thingTypeArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingTypeArn)
        thingTypeArn = thingTypeArnDecoded
        let thingTypeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingTypeId)
        thingTypeId = thingTypeIdDecoded
    }
}
