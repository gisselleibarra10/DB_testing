// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.RoleAliasDescription: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case creationDate
        case credentialDurationSeconds
        case lastModifiedDate
        case owner
        case roleAlias
        case roleAliasArn
        case roleArn
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationDate = self.creationDate {
            try encodeContainer.encode(creationDate.timeIntervalSince1970, forKey: .creationDate)
        }
        if let credentialDurationSeconds = self.credentialDurationSeconds {
            try encodeContainer.encode(credentialDurationSeconds, forKey: .credentialDurationSeconds)
        }
        if let lastModifiedDate = self.lastModifiedDate {
            try encodeContainer.encode(lastModifiedDate.timeIntervalSince1970, forKey: .lastModifiedDate)
        }
        if let owner = self.owner {
            try encodeContainer.encode(owner, forKey: .owner)
        }
        if let roleAlias = self.roleAlias {
            try encodeContainer.encode(roleAlias, forKey: .roleAlias)
        }
        if let roleAliasArn = self.roleAliasArn {
            try encodeContainer.encode(roleAliasArn, forKey: .roleAliasArn)
        }
        if let roleArn = self.roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleAliasDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleAlias)
        roleAlias = roleAliasDecoded
        let roleAliasArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleAliasArn)
        roleAliasArn = roleAliasArnDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let ownerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .owner)
        owner = ownerDecoded
        let credentialDurationSecondsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .credentialDurationSeconds)
        credentialDurationSeconds = credentialDurationSecondsDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
    }
}
