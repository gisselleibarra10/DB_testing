// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListActiveViolationsOutputResponseBody: Swift.Equatable {
    let activeViolations: [IotClientTypes.ActiveViolation]?
    let nextToken: Swift.String?
}

extension ListActiveViolationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case activeViolations
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activeViolationsContainer = try containerValues.decodeIfPresent([IotClientTypes.ActiveViolation?].self, forKey: .activeViolations)
        var activeViolationsDecoded0:[IotClientTypes.ActiveViolation]? = nil
        if let activeViolationsContainer = activeViolationsContainer {
            activeViolationsDecoded0 = [IotClientTypes.ActiveViolation]()
            for structure0 in activeViolationsContainer {
                if let structure0 = structure0 {
                    activeViolationsDecoded0?.append(structure0)
                }
            }
        }
        activeViolations = activeViolationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
