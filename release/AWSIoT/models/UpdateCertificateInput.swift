// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The input for the UpdateCertificate operation.
public struct UpdateCertificateInput: Swift.Equatable {
    /// The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
    /// This member is required.
    public var certificateId: Swift.String?
    /// The new status. Note: Setting the status to PENDING_TRANSFER or PENDING_ACTIVATION will result in an exception being thrown. PENDING_TRANSFER and PENDING_ACTIVATION are statuses used internally by IoT. They are not intended for developer use. Note: The status value REGISTER_INACTIVE is deprecated and should not be used.
    /// This member is required.
    public var newStatus: IotClientTypes.CertificateStatus?

    public init (
        certificateId: Swift.String? = nil,
        newStatus: IotClientTypes.CertificateStatus? = nil
    )
    {
        self.certificateId = certificateId
        self.newStatus = newStatus
    }
}
