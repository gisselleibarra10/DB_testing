// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterCertificateWithoutCAInputBody: Swift.Equatable {
    let certificatePem: Swift.String?
    let status: IotClientTypes.CertificateStatus?
}

extension RegisterCertificateWithoutCAInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificatePem
        case status
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificatePemDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificatePem)
        certificatePem = certificatePemDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IotClientTypes.CertificateStatus.self, forKey: .status)
        status = statusDecoded
    }
}
