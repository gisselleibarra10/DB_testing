// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMitigationActionOutputResponseBody: Swift.Equatable {
    let actionName: Swift.String?
    let actionType: IotClientTypes.MitigationActionType?
    let actionArn: Swift.String?
    let actionId: Swift.String?
    let roleArn: Swift.String?
    let actionParams: IotClientTypes.MitigationActionParams?
    let creationDate: ClientRuntime.Date?
    let lastModifiedDate: ClientRuntime.Date?
}

extension DescribeMitigationActionOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionArn
        case actionId
        case actionName
        case actionParams
        case actionType
        case creationDate
        case lastModifiedDate
        case roleArn
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionName)
        actionName = actionNameDecoded
        let actionTypeDecoded = try containerValues.decodeIfPresent(IotClientTypes.MitigationActionType.self, forKey: .actionType)
        actionType = actionTypeDecoded
        let actionArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionArn)
        actionArn = actionArnDecoded
        let actionIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .actionId)
        actionId = actionIdDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let actionParamsDecoded = try containerValues.decodeIfPresent(IotClientTypes.MitigationActionParams.self, forKey: .actionParams)
        actionParams = actionParamsDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
    }
}
