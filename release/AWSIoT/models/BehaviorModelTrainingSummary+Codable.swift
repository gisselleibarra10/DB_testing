// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.BehaviorModelTrainingSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case behaviorName
        case datapointsCollectionPercentage
        case lastModelRefreshDate
        case modelStatus
        case securityProfileName
        case trainingDataCollectionStartDate
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let behaviorName = self.behaviorName {
            try encodeContainer.encode(behaviorName, forKey: .behaviorName)
        }
        if let datapointsCollectionPercentage = self.datapointsCollectionPercentage {
            try encodeContainer.encode(datapointsCollectionPercentage, forKey: .datapointsCollectionPercentage)
        }
        if let lastModelRefreshDate = self.lastModelRefreshDate {
            try encodeContainer.encode(lastModelRefreshDate.timeIntervalSince1970, forKey: .lastModelRefreshDate)
        }
        if let modelStatus = self.modelStatus {
            try encodeContainer.encode(modelStatus.rawValue, forKey: .modelStatus)
        }
        if let securityProfileName = self.securityProfileName {
            try encodeContainer.encode(securityProfileName, forKey: .securityProfileName)
        }
        if let trainingDataCollectionStartDate = self.trainingDataCollectionStartDate {
            try encodeContainer.encode(trainingDataCollectionStartDate.timeIntervalSince1970, forKey: .trainingDataCollectionStartDate)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let securityProfileNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .securityProfileName)
        securityProfileName = securityProfileNameDecoded
        let behaviorNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .behaviorName)
        behaviorName = behaviorNameDecoded
        let trainingDataCollectionStartDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .trainingDataCollectionStartDate)
        trainingDataCollectionStartDate = trainingDataCollectionStartDateDecoded
        let modelStatusDecoded = try containerValues.decodeIfPresent(IotClientTypes.ModelStatus.self, forKey: .modelStatus)
        modelStatus = modelStatusDecoded
        let datapointsCollectionPercentageDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .datapointsCollectionPercentage)
        datapointsCollectionPercentage = datapointsCollectionPercentageDecoded
        let lastModelRefreshDateDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastModelRefreshDate)
        lastModelRefreshDate = lastModelRefreshDateDecoded
    }
}
