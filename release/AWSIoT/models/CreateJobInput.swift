// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateJobInput: Swift.Equatable {
    /// Allows you to create the criteria to abort a job.
    public var abortConfig: IotClientTypes.AbortConfig?
    /// A short text description of the job.
    public var description: Swift.String?
    /// The job document. Required if you don't specify a value for documentSource.
    public var document: Swift.String?
    /// Parameters of an Amazon Web Services managed template that you can specify to create the job document. documentParameters can only be used when creating jobs from Amazon Web Services managed templates. This parameter can't be used with custom job templates or to create jobs from them.
    public var documentParameters: [Swift.String:Swift.String]?
    /// An S3 link to the job document. Required if you don't specify a value for document. If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document. The placeholder link is of the following form: ${aws:iot:s3-presigned-url:https://s3.amazonaws.com/bucket/key} where bucket is your bucket name and key is the object in the bucket to which you are linking.
    public var documentSource: Swift.String?
    /// Allows you to create the criteria to retry a job.
    public var jobExecutionsRetryConfig: IotClientTypes.JobExecutionsRetryConfig?
    /// Allows you to create a staged rollout of the job.
    public var jobExecutionsRolloutConfig: IotClientTypes.JobExecutionsRolloutConfig?
    /// A job identifier which must be unique for your Amazon Web Services account. We recommend using a UUID. Alpha-numeric characters, "-" and "_" are valid for use here.
    /// This member is required.
    public var jobId: Swift.String?
    /// The ARN of the job template used to create the job.
    public var jobTemplateArn: Swift.String?
    /// The namespace used to indicate that a job is a customer-managed job. When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format. $aws/things/THING_NAME/jobs/JOB_ID/notify-namespace-NAMESPACE_ID/ The namespaceId feature is in public preview.
    public var namespaceId: Swift.String?
    /// Configuration information for pre-signed S3 URLs.
    public var presignedUrlConfig: IotClientTypes.PresignedUrlConfig?
    /// Metadata which can be used to manage the job.
    public var tags: [IotClientTypes.Tag]?
    /// Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group. We recommend that you use continuous jobs instead of snapshot jobs for dynamic thing group targets. By using continuous jobs, devices that join the group receive the job execution even after the job has been created.
    public var targetSelection: IotClientTypes.TargetSelection?
    /// A list of things and thing groups to which the job should be sent.
    /// This member is required.
    public var targets: [Swift.String]?
    /// Specifies the amount of time each device has to finish its execution of the job. The timer is started when the job execution status is set to IN_PROGRESS. If the job execution status is not set to another terminal state before the time expires, it will be automatically set to TIMED_OUT.
    public var timeoutConfig: IotClientTypes.TimeoutConfig?

    public init (
        abortConfig: IotClientTypes.AbortConfig? = nil,
        description: Swift.String? = nil,
        document: Swift.String? = nil,
        documentParameters: [Swift.String:Swift.String]? = nil,
        documentSource: Swift.String? = nil,
        jobExecutionsRetryConfig: IotClientTypes.JobExecutionsRetryConfig? = nil,
        jobExecutionsRolloutConfig: IotClientTypes.JobExecutionsRolloutConfig? = nil,
        jobId: Swift.String? = nil,
        jobTemplateArn: Swift.String? = nil,
        namespaceId: Swift.String? = nil,
        presignedUrlConfig: IotClientTypes.PresignedUrlConfig? = nil,
        tags: [IotClientTypes.Tag]? = nil,
        targetSelection: IotClientTypes.TargetSelection? = nil,
        targets: [Swift.String]? = nil,
        timeoutConfig: IotClientTypes.TimeoutConfig? = nil
    )
    {
        self.abortConfig = abortConfig
        self.description = description
        self.document = document
        self.documentParameters = documentParameters
        self.documentSource = documentSource
        self.jobExecutionsRetryConfig = jobExecutionsRetryConfig
        self.jobExecutionsRolloutConfig = jobExecutionsRolloutConfig
        self.jobId = jobId
        self.jobTemplateArn = jobTemplateArn
        self.namespaceId = namespaceId
        self.presignedUrlConfig = presignedUrlConfig
        self.tags = tags
        self.targetSelection = targetSelection
        self.targets = targets
        self.timeoutConfig = timeoutConfig
    }
}
