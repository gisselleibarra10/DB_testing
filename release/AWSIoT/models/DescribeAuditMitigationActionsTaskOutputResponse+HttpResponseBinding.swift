// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeAuditMitigationActionsTaskOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: DescribeAuditMitigationActionsTaskOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.actionsDefinition = output.actionsDefinition
            self.auditCheckToActionsMapping = output.auditCheckToActionsMapping
            self.endTime = output.endTime
            self.startTime = output.startTime
            self.target = output.target
            self.taskStatistics = output.taskStatistics
            self.taskStatus = output.taskStatus
        } else {
            self.actionsDefinition = nil
            self.auditCheckToActionsMapping = nil
            self.endTime = nil
            self.startTime = nil
            self.target = nil
            self.taskStatistics = nil
            self.taskStatus = nil
        }
    }
}
