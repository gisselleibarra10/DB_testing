// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes {
    /// Information about the topic rule destination.
    public struct TopicRuleDestinationSummary: Swift.Equatable {
        /// The topic rule destination ARN.
        public var arn: Swift.String?
        /// The date and time when the topic rule destination was created.
        public var createdAt: ClientRuntime.Date?
        /// Information about the HTTP URL.
        public var httpUrlSummary: IotClientTypes.HttpUrlDestinationSummary?
        /// The date and time when the topic rule destination was last updated.
        public var lastUpdatedAt: ClientRuntime.Date?
        /// The status of the topic rule destination. Valid values are: IN_PROGRESS A topic rule destination was created but has not been confirmed. You can set status to IN_PROGRESS by calling UpdateTopicRuleDestination. Calling UpdateTopicRuleDestination causes a new confirmation challenge to be sent to your confirmation endpoint. ENABLED Confirmation was completed, and traffic to this destination is allowed. You can set status to DISABLED by calling UpdateTopicRuleDestination. DISABLED Confirmation was completed, and traffic to this destination is not allowed. You can set status to ENABLED by calling UpdateTopicRuleDestination. ERROR Confirmation could not be completed, for example if the confirmation timed out. You can call GetTopicRuleDestination for details about the error. You can set status to IN_PROGRESS by calling UpdateTopicRuleDestination. Calling UpdateTopicRuleDestination causes a new confirmation challenge to be sent to your confirmation endpoint.
        public var status: IotClientTypes.TopicRuleDestinationStatus?
        /// The reason the topic rule destination is in the current status.
        public var statusReason: Swift.String?
        /// Information about the virtual private cloud (VPC) connection.
        public var vpcDestinationSummary: IotClientTypes.VpcDestinationSummary?

        public init (
            arn: Swift.String? = nil,
            createdAt: ClientRuntime.Date? = nil,
            httpUrlSummary: IotClientTypes.HttpUrlDestinationSummary? = nil,
            lastUpdatedAt: ClientRuntime.Date? = nil,
            status: IotClientTypes.TopicRuleDestinationStatus? = nil,
            statusReason: Swift.String? = nil,
            vpcDestinationSummary: IotClientTypes.VpcDestinationSummary? = nil
        )
        {
            self.arn = arn
            self.createdAt = createdAt
            self.httpUrlSummary = httpUrlSummary
            self.lastUpdatedAt = lastUpdatedAt
            self.status = status
            self.statusReason = statusReason
            self.vpcDestinationSummary = vpcDestinationSummary
        }
    }

}
