// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.DocumentParameter: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case description
        case example
        case key
        case `optional` = "optional"
        case regex
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let example = self.example {
            try encodeContainer.encode(example, forKey: .example)
        }
        if let key = self.key {
            try encodeContainer.encode(key, forKey: .key)
        }
        if `optional` != false {
            try encodeContainer.encode(`optional`, forKey: .`optional`)
        }
        if let regex = self.regex {
            try encodeContainer.encode(regex, forKey: .regex)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .key)
        key = keyDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .description)
        description = descriptionDecoded
        let regexDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .regex)
        regex = regexDecoded
        let exampleDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .example)
        example = exampleDecoded
        let optionalDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .optional) ?? false
        `optional` = optionalDecoded
    }
}
