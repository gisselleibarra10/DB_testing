// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateThingGroupsForThingInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case overrideDynamicGroups
        case thingGroupsToAdd
        case thingGroupsToRemove
        case thingName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if overrideDynamicGroups != false {
            try encodeContainer.encode(overrideDynamicGroups, forKey: .overrideDynamicGroups)
        }
        if let thingGroupsToAdd = thingGroupsToAdd {
            var thingGroupsToAddContainer = encodeContainer.nestedUnkeyedContainer(forKey: .thingGroupsToAdd)
            for thinggrouplist0 in thingGroupsToAdd {
                try thingGroupsToAddContainer.encode(thinggrouplist0)
            }
        }
        if let thingGroupsToRemove = thingGroupsToRemove {
            var thingGroupsToRemoveContainer = encodeContainer.nestedUnkeyedContainer(forKey: .thingGroupsToRemove)
            for thinggrouplist0 in thingGroupsToRemove {
                try thingGroupsToRemoveContainer.encode(thinggrouplist0)
            }
        }
        if let thingName = self.thingName {
            try encodeContainer.encode(thingName, forKey: .thingName)
        }
    }
}
