// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes {
    /// Information about an OTA update.
    public struct OTAUpdateInfo: Swift.Equatable {
        /// A collection of name/value pairs
        public var additionalParameters: [Swift.String:Swift.String]?
        /// The IoT job ARN associated with the OTA update.
        public var awsIotJobArn: Swift.String?
        /// The IoT job ID associated with the OTA update.
        public var awsIotJobId: Swift.String?
        /// Configuration for the rollout of OTA updates.
        public var awsJobExecutionsRolloutConfig: IotClientTypes.AwsJobExecutionsRolloutConfig?
        /// Configuration information for pre-signed URLs. Valid when protocols contains HTTP.
        public var awsJobPresignedUrlConfig: IotClientTypes.AwsJobPresignedUrlConfig?
        /// The date when the OTA update was created.
        public var creationDate: ClientRuntime.Date?
        /// A description of the OTA update.
        public var description: Swift.String?
        /// Error information associated with the OTA update.
        public var errorInfo: IotClientTypes.ErrorInfo?
        /// The date when the OTA update was last updated.
        public var lastModifiedDate: ClientRuntime.Date?
        /// The OTA update ARN.
        public var otaUpdateArn: Swift.String?
        /// A list of files associated with the OTA update.
        public var otaUpdateFiles: [IotClientTypes.OTAUpdateFile]?
        /// The OTA update ID.
        public var otaUpdateId: Swift.String?
        /// The status of the OTA update.
        public var otaUpdateStatus: IotClientTypes.OTAUpdateStatus?
        /// The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.
        public var protocols: [IotClientTypes.ModelProtocol]?
        /// Specifies whether the OTA update will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the OTA update (SNAPSHOT). If continuous, the OTA update may also be run on a thing when a change is detected in a target. For example, an OTA update will run on a thing when the thing is added to a target group, even after the OTA update was completed by all things originally in the group.
        public var targetSelection: IotClientTypes.TargetSelection?
        /// The targets of the OTA update.
        public var targets: [Swift.String]?

        public init (
            additionalParameters: [Swift.String:Swift.String]? = nil,
            awsIotJobArn: Swift.String? = nil,
            awsIotJobId: Swift.String? = nil,
            awsJobExecutionsRolloutConfig: IotClientTypes.AwsJobExecutionsRolloutConfig? = nil,
            awsJobPresignedUrlConfig: IotClientTypes.AwsJobPresignedUrlConfig? = nil,
            creationDate: ClientRuntime.Date? = nil,
            description: Swift.String? = nil,
            errorInfo: IotClientTypes.ErrorInfo? = nil,
            lastModifiedDate: ClientRuntime.Date? = nil,
            otaUpdateArn: Swift.String? = nil,
            otaUpdateFiles: [IotClientTypes.OTAUpdateFile]? = nil,
            otaUpdateId: Swift.String? = nil,
            otaUpdateStatus: IotClientTypes.OTAUpdateStatus? = nil,
            protocols: [IotClientTypes.ModelProtocol]? = nil,
            targetSelection: IotClientTypes.TargetSelection? = nil,
            targets: [Swift.String]? = nil
        )
        {
            self.additionalParameters = additionalParameters
            self.awsIotJobArn = awsIotJobArn
            self.awsIotJobId = awsIotJobId
            self.awsJobExecutionsRolloutConfig = awsJobExecutionsRolloutConfig
            self.awsJobPresignedUrlConfig = awsJobPresignedUrlConfig
            self.creationDate = creationDate
            self.description = description
            self.errorInfo = errorInfo
            self.lastModifiedDate = lastModifiedDate
            self.otaUpdateArn = otaUpdateArn
            self.otaUpdateFiles = otaUpdateFiles
            self.otaUpdateId = otaUpdateId
            self.otaUpdateStatus = otaUpdateStatus
            self.protocols = protocols
            self.targetSelection = targetSelection
            self.targets = targets
        }
    }

}
