// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAuditMitigationActionsExecutionsOutputResponseBody: Swift.Equatable {
    let actionsExecutions: [IotClientTypes.AuditMitigationActionExecutionMetadata]?
    let nextToken: Swift.String?
}

extension ListAuditMitigationActionsExecutionsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case actionsExecutions
        case nextToken
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionsExecutionsContainer = try containerValues.decodeIfPresent([IotClientTypes.AuditMitigationActionExecutionMetadata?].self, forKey: .actionsExecutions)
        var actionsExecutionsDecoded0:[IotClientTypes.AuditMitigationActionExecutionMetadata]? = nil
        if let actionsExecutionsContainer = actionsExecutionsContainer {
            actionsExecutionsDecoded0 = [IotClientTypes.AuditMitigationActionExecutionMetadata]()
            for structure0 in actionsExecutionsContainer {
                if let structure0 = structure0 {
                    actionsExecutionsDecoded0?.append(structure0)
                }
            }
        }
        actionsExecutions = actionsExecutionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
