// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateProvisioningTemplateVersionOutputResponse: ClientRuntime.HttpResponseBinding {
    public init (httpResponse: ClientRuntime.HttpResponse, decoder: ClientRuntime.ResponseDecoder? = nil) throws {
        if case .stream(let reader) = httpResponse.body,
            let responseDecoder = decoder {
            let data = reader.toBytes().toData()
            let output: CreateProvisioningTemplateVersionOutputResponseBody = try responseDecoder.decode(responseBody: data)
            self.isDefaultVersion = output.isDefaultVersion
            self.templateArn = output.templateArn
            self.templateName = output.templateName
            self.versionId = output.versionId
        } else {
            self.isDefaultVersion = false
            self.templateArn = nil
            self.templateName = nil
            self.versionId = nil
        }
    }
}
