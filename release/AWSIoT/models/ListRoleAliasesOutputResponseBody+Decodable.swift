// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRoleAliasesOutputResponseBody: Swift.Equatable {
    let roleAliases: [Swift.String]?
    let nextMarker: Swift.String?
}

extension ListRoleAliasesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nextMarker
        case roleAliases
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleAliasesContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .roleAliases)
        var roleAliasesDecoded0:[Swift.String]? = nil
        if let roleAliasesContainer = roleAliasesContainer {
            roleAliasesDecoded0 = [Swift.String]()
            for string0 in roleAliasesContainer {
                if let string0 = string0 {
                    roleAliasesDecoded0?.append(string0)
                }
            }
        }
        roleAliases = roleAliasesDecoded0
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
    }
}
