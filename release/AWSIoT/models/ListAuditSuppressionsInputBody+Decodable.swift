// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAuditSuppressionsInputBody: Swift.Equatable {
    let checkName: Swift.String?
    let resourceIdentifier: IotClientTypes.ResourceIdentifier?
    let ascendingOrder: Swift.Bool
    let nextToken: Swift.String?
    let maxResults: Swift.Int?
}

extension ListAuditSuppressionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case ascendingOrder
        case checkName
        case maxResults
        case nextToken
        case resourceIdentifier
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let checkNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .checkName)
        checkName = checkNameDecoded
        let resourceIdentifierDecoded = try containerValues.decodeIfPresent(IotClientTypes.ResourceIdentifier.self, forKey: .resourceIdentifier)
        resourceIdentifier = resourceIdentifierDecoded
        let ascendingOrderDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .ascendingOrder) ?? false
        ascendingOrder = ascendingOrderDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
