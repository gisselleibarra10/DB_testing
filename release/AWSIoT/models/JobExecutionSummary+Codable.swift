// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.JobExecutionSummary: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case executionNumber
        case lastUpdatedAt
        case queuedAt
        case retryAttempt
        case startedAt
        case status
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let executionNumber = self.executionNumber {
            try encodeContainer.encode(executionNumber, forKey: .executionNumber)
        }
        if let lastUpdatedAt = self.lastUpdatedAt {
            try encodeContainer.encode(lastUpdatedAt.timeIntervalSince1970, forKey: .lastUpdatedAt)
        }
        if let queuedAt = self.queuedAt {
            try encodeContainer.encode(queuedAt.timeIntervalSince1970, forKey: .queuedAt)
        }
        if let retryAttempt = self.retryAttempt {
            try encodeContainer.encode(retryAttempt, forKey: .retryAttempt)
        }
        if let startedAt = self.startedAt {
            try encodeContainer.encode(startedAt.timeIntervalSince1970, forKey: .startedAt)
        }
        if let status = self.status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(IotClientTypes.JobExecutionStatus.self, forKey: .status)
        status = statusDecoded
        let queuedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .queuedAt)
        queuedAt = queuedAtDecoded
        let startedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .startedAt)
        startedAt = startedAtDecoded
        let lastUpdatedAtDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .lastUpdatedAt)
        lastUpdatedAt = lastUpdatedAtDecoded
        let executionNumberDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .executionNumber)
        executionNumber = executionNumberDecoded
        let retryAttemptDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .retryAttempt)
        retryAttempt = retryAttemptDecoded
    }
}
