// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterThingOutputResponseBody: Swift.Equatable {
    let certificatePem: Swift.String?
    let resourceArns: [Swift.String:Swift.String]?
}

extension RegisterThingOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case certificatePem
        case resourceArns
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificatePemDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .certificatePem)
        certificatePem = certificatePemDecoded
        let resourceArnsContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .resourceArns)
        var resourceArnsDecoded0: [Swift.String:Swift.String]? = nil
        if let resourceArnsContainer = resourceArnsContainer {
            resourceArnsDecoded0 = [Swift.String:Swift.String]()
            for (key0, resourcearn0) in resourceArnsContainer {
                if let resourcearn0 = resourcearn0 {
                    resourceArnsDecoded0?[key0] = resourcearn0
                }
            }
        }
        resourceArns = resourceArnsDecoded0
    }
}
