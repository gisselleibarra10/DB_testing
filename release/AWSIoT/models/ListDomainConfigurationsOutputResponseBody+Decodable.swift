// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainConfigurationsOutputResponseBody: Swift.Equatable {
    let domainConfigurations: [IotClientTypes.DomainConfigurationSummary]?
    let nextMarker: Swift.String?
}

extension ListDomainConfigurationsOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case domainConfigurations
        case nextMarker
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainConfigurationsContainer = try containerValues.decodeIfPresent([IotClientTypes.DomainConfigurationSummary?].self, forKey: .domainConfigurations)
        var domainConfigurationsDecoded0:[IotClientTypes.DomainConfigurationSummary]? = nil
        if let domainConfigurationsContainer = domainConfigurationsContainer {
            domainConfigurationsDecoded0 = [IotClientTypes.DomainConfigurationSummary]()
            for structure0 in domainConfigurationsContainer {
                if let structure0 = structure0 {
                    domainConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        domainConfigurations = domainConfigurationsDecoded0
        let nextMarkerDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
    }
}
