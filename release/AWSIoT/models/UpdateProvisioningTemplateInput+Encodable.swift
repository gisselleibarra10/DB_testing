// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateProvisioningTemplateInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case defaultVersionId
        case description
        case enabled
        case preProvisioningHook
        case provisioningRoleArn
        case removePreProvisioningHook
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultVersionId = self.defaultVersionId {
            try encodeContainer.encode(defaultVersionId, forKey: .defaultVersionId)
        }
        if let description = self.description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if enabled != false {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if let preProvisioningHook = self.preProvisioningHook {
            try encodeContainer.encode(preProvisioningHook, forKey: .preProvisioningHook)
        }
        if let provisioningRoleArn = self.provisioningRoleArn {
            try encodeContainer.encode(provisioningRoleArn, forKey: .provisioningRoleArn)
        }
        if let removePreProvisioningHook = self.removePreProvisioningHook {
            try encodeContainer.encode(removePreProvisioningHook, forKey: .removePreProvisioningHook)
        }
    }
}
