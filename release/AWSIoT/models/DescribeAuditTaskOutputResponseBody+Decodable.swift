// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAuditTaskOutputResponseBody: Swift.Equatable {
    let taskStatus: IotClientTypes.AuditTaskStatus?
    let taskType: IotClientTypes.AuditTaskType?
    let taskStartTime: ClientRuntime.Date?
    let taskStatistics: IotClientTypes.TaskStatistics?
    let scheduledAuditName: Swift.String?
    let auditDetails: [Swift.String:IotClientTypes.AuditCheckDetails]?
}

extension DescribeAuditTaskOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case auditDetails
        case scheduledAuditName
        case taskStartTime
        case taskStatistics
        case taskStatus
        case taskType
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskStatusDecoded = try containerValues.decodeIfPresent(IotClientTypes.AuditTaskStatus.self, forKey: .taskStatus)
        taskStatus = taskStatusDecoded
        let taskTypeDecoded = try containerValues.decodeIfPresent(IotClientTypes.AuditTaskType.self, forKey: .taskType)
        taskType = taskTypeDecoded
        let taskStartTimeDecoded = try containerValues.decodeIfPresent(ClientRuntime.Date.self, forKey: .taskStartTime)
        taskStartTime = taskStartTimeDecoded
        let taskStatisticsDecoded = try containerValues.decodeIfPresent(IotClientTypes.TaskStatistics.self, forKey: .taskStatistics)
        taskStatistics = taskStatisticsDecoded
        let scheduledAuditNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .scheduledAuditName)
        scheduledAuditName = scheduledAuditNameDecoded
        let auditDetailsContainer = try containerValues.decodeIfPresent([Swift.String: IotClientTypes.AuditCheckDetails?].self, forKey: .auditDetails)
        var auditDetailsDecoded0: [Swift.String:IotClientTypes.AuditCheckDetails]? = nil
        if let auditDetailsContainer = auditDetailsContainer {
            auditDetailsDecoded0 = [Swift.String:IotClientTypes.AuditCheckDetails]()
            for (key0, auditcheckdetails0) in auditDetailsContainer {
                if let auditcheckdetails0 = auditcheckdetails0 {
                    auditDetailsDecoded0?[key0] = auditcheckdetails0
                }
            }
        }
        auditDetails = auditDetailsDecoded0
    }
}
