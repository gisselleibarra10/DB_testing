// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartAuditMitigationActionsTaskInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case auditCheckToActionsMapping
        case clientRequestToken
        case target
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let auditCheckToActionsMapping = auditCheckToActionsMapping {
            var auditCheckToActionsMappingContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .auditCheckToActionsMapping)
            for (dictKey0, auditchecktoactionsmapping0) in auditCheckToActionsMapping {
                try auditCheckToActionsMappingContainer.encode(auditchecktoactionsmapping0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let clientRequestToken = self.clientRequestToken {
            try encodeContainer.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let target = self.target {
            try encodeContainer.encode(target, forKey: .target)
        }
    }
}
