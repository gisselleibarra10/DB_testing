// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateThingInputBody: Swift.Equatable {
    let thingTypeName: Swift.String?
    let attributePayload: IotClientTypes.AttributePayload?
    let expectedVersion: Swift.Int?
    let removeThingType: Swift.Bool
}

extension UpdateThingInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case attributePayload
        case expectedVersion
        case removeThingType
        case thingTypeName
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingTypeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingTypeName)
        thingTypeName = thingTypeNameDecoded
        let attributePayloadDecoded = try containerValues.decodeIfPresent(IotClientTypes.AttributePayload.self, forKey: .attributePayload)
        attributePayload = attributePayloadDecoded
        let expectedVersionDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .expectedVersion)
        expectedVersion = expectedVersionDecoded
        let removeThingTypeDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .removeThingType) ?? false
        removeThingType = removeThingTypeDecoded
    }
}
