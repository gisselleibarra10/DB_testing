// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.TaskStatisticsForAuditCheck: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case canceledFindingsCount
        case failedFindingsCount
        case skippedFindingsCount
        case succeededFindingsCount
        case totalFindingsCount
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let canceledFindingsCount = self.canceledFindingsCount {
            try encodeContainer.encode(canceledFindingsCount, forKey: .canceledFindingsCount)
        }
        if let failedFindingsCount = self.failedFindingsCount {
            try encodeContainer.encode(failedFindingsCount, forKey: .failedFindingsCount)
        }
        if let skippedFindingsCount = self.skippedFindingsCount {
            try encodeContainer.encode(skippedFindingsCount, forKey: .skippedFindingsCount)
        }
        if let succeededFindingsCount = self.succeededFindingsCount {
            try encodeContainer.encode(succeededFindingsCount, forKey: .succeededFindingsCount)
        }
        if let totalFindingsCount = self.totalFindingsCount {
            try encodeContainer.encode(totalFindingsCount, forKey: .totalFindingsCount)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalFindingsCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .totalFindingsCount)
        totalFindingsCount = totalFindingsCountDecoded
        let failedFindingsCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .failedFindingsCount)
        failedFindingsCount = failedFindingsCountDecoded
        let succeededFindingsCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .succeededFindingsCount)
        succeededFindingsCount = succeededFindingsCountDecoded
        let skippedFindingsCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .skippedFindingsCount)
        skippedFindingsCount = skippedFindingsCountDecoded
        let canceledFindingsCountDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .canceledFindingsCount)
        canceledFindingsCount = canceledFindingsCountDecoded
    }
}
