// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetEffectivePoliciesOutputResponseBody: Swift.Equatable {
    let effectivePolicies: [IotClientTypes.EffectivePolicy]?
}

extension GetEffectivePoliciesOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case effectivePolicies
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let effectivePoliciesContainer = try containerValues.decodeIfPresent([IotClientTypes.EffectivePolicy?].self, forKey: .effectivePolicies)
        var effectivePoliciesDecoded0:[IotClientTypes.EffectivePolicy]? = nil
        if let effectivePoliciesContainer = effectivePoliciesContainer {
            effectivePoliciesDecoded0 = [IotClientTypes.EffectivePolicy]()
            for structure0 in effectivePoliciesContainer {
                if let structure0 = structure0 {
                    effectivePoliciesDecoded0?.append(structure0)
                }
            }
        }
        effectivePolicies = effectivePoliciesDecoded0
    }
}
