// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension IotClientTypes {
    public enum ComparisonOperator: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case greaterThan
        case greaterThanEquals
        case inCidrSet
        case inPortSet
        case inSet
        case lessThan
        case lessThanEquals
        case notInCidrSet
        case notInPortSet
        case notInSet
        case sdkUnknown(Swift.String)

        public static var allCases: [ComparisonOperator] {
            return [
                .greaterThan,
                .greaterThanEquals,
                .inCidrSet,
                .inPortSet,
                .inSet,
                .lessThan,
                .lessThanEquals,
                .notInCidrSet,
                .notInPortSet,
                .notInSet,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .greaterThan: return "greater-than"
            case .greaterThanEquals: return "greater-than-equals"
            case .inCidrSet: return "in-cidr-set"
            case .inPortSet: return "in-port-set"
            case .inSet: return "in-set"
            case .lessThan: return "less-than"
            case .lessThanEquals: return "less-than-equals"
            case .notInCidrSet: return "not-in-cidr-set"
            case .notInPortSet: return "not-in-port-set"
            case .notInSet: return "not-in-set"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ComparisonOperator(rawValue: rawValue) ?? ComparisonOperator.sdkUnknown(rawValue)
        }
    }
}
