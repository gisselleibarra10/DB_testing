// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes.ThingGroupIndexingConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case customFields
        case managedFields
        case thingGroupIndexingMode
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customFields = customFields {
            var customFieldsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .customFields)
            for fields0 in customFields {
                try customFieldsContainer.encode(fields0)
            }
        }
        if let managedFields = managedFields {
            var managedFieldsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .managedFields)
            for fields0 in managedFields {
                try managedFieldsContainer.encode(fields0)
            }
        }
        if let thingGroupIndexingMode = self.thingGroupIndexingMode {
            try encodeContainer.encode(thingGroupIndexingMode.rawValue, forKey: .thingGroupIndexingMode)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingGroupIndexingModeDecoded = try containerValues.decodeIfPresent(IotClientTypes.ThingGroupIndexingMode.self, forKey: .thingGroupIndexingMode)
        thingGroupIndexingMode = thingGroupIndexingModeDecoded
        let managedFieldsContainer = try containerValues.decodeIfPresent([IotClientTypes.Field?].self, forKey: .managedFields)
        var managedFieldsDecoded0:[IotClientTypes.Field]? = nil
        if let managedFieldsContainer = managedFieldsContainer {
            managedFieldsDecoded0 = [IotClientTypes.Field]()
            for structure0 in managedFieldsContainer {
                if let structure0 = structure0 {
                    managedFieldsDecoded0?.append(structure0)
                }
            }
        }
        managedFields = managedFieldsDecoded0
        let customFieldsContainer = try containerValues.decodeIfPresent([IotClientTypes.Field?].self, forKey: .customFields)
        var customFieldsDecoded0:[IotClientTypes.Field]? = nil
        if let customFieldsContainer = customFieldsContainer {
            customFieldsDecoded0 = [IotClientTypes.Field]()
            for structure0 in customFieldsContainer {
                if let structure0 = structure0 {
                    customFieldsDecoded0?.append(structure0)
                }
            }
        }
        customFields = customFieldsDecoded0
    }
}
