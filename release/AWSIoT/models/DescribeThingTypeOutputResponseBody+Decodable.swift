// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeThingTypeOutputResponseBody: Swift.Equatable {
    let thingTypeName: Swift.String?
    let thingTypeId: Swift.String?
    let thingTypeArn: Swift.String?
    let thingTypeProperties: IotClientTypes.ThingTypeProperties?
    let thingTypeMetadata: IotClientTypes.ThingTypeMetadata?
}

extension DescribeThingTypeOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case thingTypeArn
        case thingTypeId
        case thingTypeMetadata
        case thingTypeName
        case thingTypeProperties
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingTypeNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingTypeName)
        thingTypeName = thingTypeNameDecoded
        let thingTypeIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingTypeId)
        thingTypeId = thingTypeIdDecoded
        let thingTypeArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .thingTypeArn)
        thingTypeArn = thingTypeArnDecoded
        let thingTypePropertiesDecoded = try containerValues.decodeIfPresent(IotClientTypes.ThingTypeProperties.self, forKey: .thingTypeProperties)
        thingTypeProperties = thingTypePropertiesDecoded
        let thingTypeMetadataDecoded = try containerValues.decodeIfPresent(IotClientTypes.ThingTypeMetadata.self, forKey: .thingTypeMetadata)
        thingTypeMetadata = thingTypeMetadataDecoded
    }
}
