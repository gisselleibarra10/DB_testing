// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotClientTypes {
    /// The job execution object represents the execution of a job on a particular device.
    public struct JobExecution: Swift.Equatable {
        /// The estimated number of seconds that remain before the job execution status will be changed to TIMED_OUT. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The actual job execution timeout can occur up to 60 seconds later than the estimated duration. This value will not be included if the job execution has reached a terminal status.
        public var approximateSecondsBeforeTimedOut: Swift.Int?
        /// A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used in commands which return or update job execution information.
        public var executionNumber: Swift.Int?
        /// Will be true if the job execution was canceled with the optional force parameter set to true.
        public var forceCanceled: Swift.Bool?
        /// The unique identifier you assigned to the job when it was created.
        public var jobId: Swift.String?
        /// The time, in seconds since the epoch, when the job execution was last updated.
        public var lastUpdatedAt: ClientRuntime.Date?
        /// The time, in seconds since the epoch, when the job execution was queued.
        public var queuedAt: ClientRuntime.Date?
        /// The time, in seconds since the epoch, when the job execution started.
        public var startedAt: ClientRuntime.Date?
        /// The status of the job execution (IN_PROGRESS, QUEUED, FAILED, SUCCEEDED, TIMED_OUT, CANCELED, or REJECTED).
        public var status: IotClientTypes.JobExecutionStatus?
        /// A collection of name/value pairs that describe the status of the job execution.
        public var statusDetails: IotClientTypes.JobExecutionStatusDetails?
        /// The ARN of the thing on which the job execution is running.
        public var thingArn: Swift.String?
        /// The version of the job execution. Job execution versions are incremented each time they are updated by a device.
        public var versionNumber: Swift.Int

        public init (
            approximateSecondsBeforeTimedOut: Swift.Int? = nil,
            executionNumber: Swift.Int? = nil,
            forceCanceled: Swift.Bool? = nil,
            jobId: Swift.String? = nil,
            lastUpdatedAt: ClientRuntime.Date? = nil,
            queuedAt: ClientRuntime.Date? = nil,
            startedAt: ClientRuntime.Date? = nil,
            status: IotClientTypes.JobExecutionStatus? = nil,
            statusDetails: IotClientTypes.JobExecutionStatusDetails? = nil,
            thingArn: Swift.String? = nil,
            versionNumber: Swift.Int = 0
        )
        {
            self.approximateSecondsBeforeTimedOut = approximateSecondsBeforeTimedOut
            self.executionNumber = executionNumber
            self.forceCanceled = forceCanceled
            self.jobId = jobId
            self.lastUpdatedAt = lastUpdatedAt
            self.queuedAt = queuedAt
            self.startedAt = startedAt
            self.status = status
            self.statusDetails = statusDetails
            self.thingArn = thingArn
            self.versionNumber = versionNumber
        }
    }

}
