// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchGroupsInputBody: Swift.Equatable {
    let filters: [QuickSightClientTypes.GroupSearchFilter]?
}

extension SearchGroupsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case filters = "Filters"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filtersContainer = try containerValues.decodeIfPresent([QuickSightClientTypes.GroupSearchFilter?].self, forKey: .filters)
        var filtersDecoded0:[QuickSightClientTypes.GroupSearchFilter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [QuickSightClientTypes.GroupSearchFilter]()
            for structure0 in filtersContainer {
                if let structure0 = structure0 {
                    filtersDecoded0?.append(structure0)
                }
            }
        }
        filters = filtersDecoded0
    }
}
