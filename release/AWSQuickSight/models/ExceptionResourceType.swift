// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension QuickSightClientTypes {
    public enum ExceptionResourceType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case accountSettings
        case dataSet
        case dataSource
        case group
        case iampolicyAssignment
        case ingestion
        case namespace
        case user
        case vpcConnection
        case sdkUnknown(Swift.String)

        public static var allCases: [ExceptionResourceType] {
            return [
                .accountSettings,
                .dataSet,
                .dataSource,
                .group,
                .iampolicyAssignment,
                .ingestion,
                .namespace,
                .user,
                .vpcConnection,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .accountSettings: return "ACCOUNT_SETTINGS"
            case .dataSet: return "DATA_SET"
            case .dataSource: return "DATA_SOURCE"
            case .group: return "GROUP"
            case .iampolicyAssignment: return "IAMPOLICY_ASSIGNMENT"
            case .ingestion: return "INGESTION"
            case .namespace: return "NAMESPACE"
            case .user: return "USER"
            case .vpcConnection: return "VPC_CONNECTION"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = ExceptionResourceType(rawValue: rawValue) ?? ExceptionResourceType.sdkUnknown(rawValue)
        }
    }
}
