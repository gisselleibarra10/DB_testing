// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuickSightClientTypes {
    /// A template object. A template is an entity in Amazon QuickSight that encapsulates the metadata required to create an analysis and that you can use to create a dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with an analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template. You can share templates across Amazon Web Services accounts by allowing users in other Amazon Web Services accounts to create a template or a dashboard from an existing template.
    public struct Template: Swift.Equatable {
        /// The Amazon Resource Name (ARN) of the template.
        public var arn: Swift.String?
        /// Time when this was created.
        public var createdTime: ClientRuntime.Date?
        /// Time when this was last updated.
        public var lastUpdatedTime: ClientRuntime.Date?
        /// The display name of the template.
        public var name: Swift.String?
        /// The ID for the template. This is unique per Amazon Web Services Region for each Amazon Web Services account.
        public var templateId: Swift.String?
        /// A structure describing the versions of the template.
        public var version: QuickSightClientTypes.TemplateVersion?

        public init (
            arn: Swift.String? = nil,
            createdTime: ClientRuntime.Date? = nil,
            lastUpdatedTime: ClientRuntime.Date? = nil,
            name: Swift.String? = nil,
            templateId: Swift.String? = nil,
            version: QuickSightClientTypes.TemplateVersion? = nil
        )
        {
            self.arn = arn
            self.createdTime = createdTime
            self.lastUpdatedTime = lastUpdatedTime
            self.name = name
            self.templateId = templateId
            self.version = version
        }
    }

}
