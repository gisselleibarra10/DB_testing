// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuickSightClientTypes.LogicalTableSource: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataSetArn = "DataSetArn"
        case joinInstruction = "JoinInstruction"
        case physicalTableId = "PhysicalTableId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataSetArn = self.dataSetArn {
            try encodeContainer.encode(dataSetArn, forKey: .dataSetArn)
        }
        if let joinInstruction = self.joinInstruction {
            try encodeContainer.encode(joinInstruction, forKey: .joinInstruction)
        }
        if let physicalTableId = self.physicalTableId {
            try encodeContainer.encode(physicalTableId, forKey: .physicalTableId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let joinInstructionDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.JoinInstruction.self, forKey: .joinInstruction)
        joinInstruction = joinInstructionDecoded
        let physicalTableIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .physicalTableId)
        physicalTableId = physicalTableIdDecoded
        let dataSetArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dataSetArn)
        dataSetArn = dataSetArnDecoded
    }
}
