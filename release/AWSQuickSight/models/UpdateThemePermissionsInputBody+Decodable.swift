// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateThemePermissionsInputBody: Swift.Equatable {
    let grantPermissions: [QuickSightClientTypes.ResourcePermission]?
    let revokePermissions: [QuickSightClientTypes.ResourcePermission]?
}

extension UpdateThemePermissionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case grantPermissions = "GrantPermissions"
        case revokePermissions = "RevokePermissions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let grantPermissionsContainer = try containerValues.decodeIfPresent([QuickSightClientTypes.ResourcePermission?].self, forKey: .grantPermissions)
        var grantPermissionsDecoded0:[QuickSightClientTypes.ResourcePermission]? = nil
        if let grantPermissionsContainer = grantPermissionsContainer {
            grantPermissionsDecoded0 = [QuickSightClientTypes.ResourcePermission]()
            for structure0 in grantPermissionsContainer {
                if let structure0 = structure0 {
                    grantPermissionsDecoded0?.append(structure0)
                }
            }
        }
        grantPermissions = grantPermissionsDecoded0
        let revokePermissionsContainer = try containerValues.decodeIfPresent([QuickSightClientTypes.ResourcePermission?].self, forKey: .revokePermissions)
        var revokePermissionsDecoded0:[QuickSightClientTypes.ResourcePermission]? = nil
        if let revokePermissionsContainer = revokePermissionsContainer {
            revokePermissionsDecoded0 = [QuickSightClientTypes.ResourcePermission]()
            for structure0 in revokePermissionsContainer {
                if let structure0 = structure0 {
                    revokePermissionsDecoded0?.append(structure0)
                }
            }
        }
        revokePermissions = revokePermissionsDecoded0
    }
}
