// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuickSightClientTypes.SignupResponse: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case iAMUser = "IAMUser"
        case accountName
        case directoryType
        case userLoginName
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if iAMUser != false {
            try encodeContainer.encode(iAMUser, forKey: .iAMUser)
        }
        if let accountName = self.accountName {
            try encodeContainer.encode(accountName, forKey: .accountName)
        }
        if let directoryType = self.directoryType {
            try encodeContainer.encode(directoryType, forKey: .directoryType)
        }
        if let userLoginName = self.userLoginName {
            try encodeContainer.encode(userLoginName, forKey: .userLoginName)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iAMUserDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .iAMUser) ?? false
        iAMUser = iAMUserDecoded
        let userLoginNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .userLoginName)
        userLoginName = userLoginNameDecoded
        let accountNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .accountName)
        accountName = accountNameDecoded
        let directoryTypeDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .directoryType)
        directoryType = directoryTypeDecoded
    }
}
