// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateAnalysisInputBody: Swift.Equatable {
    let name: Swift.String?
    let parameters: QuickSightClientTypes.Parameters?
    let sourceEntity: QuickSightClientTypes.AnalysisSourceEntity?
    let themeArn: Swift.String?
}

extension UpdateAnalysisInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name = "Name"
        case parameters = "Parameters"
        case sourceEntity = "SourceEntity"
        case themeArn = "ThemeArn"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let parametersDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.Parameters.self, forKey: .parameters)
        parameters = parametersDecoded
        let sourceEntityDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.AnalysisSourceEntity.self, forKey: .sourceEntity)
        sourceEntity = sourceEntityDecoded
        let themeArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .themeArn)
        themeArn = themeArnDecoded
    }
}
