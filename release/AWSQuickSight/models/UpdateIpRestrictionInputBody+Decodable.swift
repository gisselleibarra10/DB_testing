// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateIpRestrictionInputBody: Swift.Equatable {
    let ipRestrictionRuleMap: [Swift.String:Swift.String]?
    let enabled: Swift.Bool?
}

extension UpdateIpRestrictionInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enabled = "Enabled"
        case ipRestrictionRuleMap = "IpRestrictionRuleMap"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ipRestrictionRuleMapContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .ipRestrictionRuleMap)
        var ipRestrictionRuleMapDecoded0: [Swift.String:Swift.String]? = nil
        if let ipRestrictionRuleMapContainer = ipRestrictionRuleMapContainer {
            ipRestrictionRuleMapDecoded0 = [Swift.String:Swift.String]()
            for (key0, iprestrictionruledescription0) in ipRestrictionRuleMapContainer {
                if let iprestrictionruledescription0 = iprestrictionruledescription0 {
                    ipRestrictionRuleMapDecoded0?[key0] = iprestrictionruledescription0
                }
            }
        }
        ipRestrictionRuleMap = ipRestrictionRuleMapDecoded0
        let enabledDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .enabled)
        enabled = enabledDecoded
    }
}
