// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateFolderInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case folderType = "FolderType"
        case name = "Name"
        case parentFolderArn = "ParentFolderArn"
        case permissions = "Permissions"
        case tags = "Tags"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let folderType = self.folderType {
            try encodeContainer.encode(folderType.rawValue, forKey: .folderType)
        }
        if let name = self.name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let parentFolderArn = self.parentFolderArn {
            try encodeContainer.encode(parentFolderArn, forKey: .parentFolderArn)
        }
        if let permissions = permissions {
            var permissionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .permissions)
            for resourcepermissionlist0 in permissions {
                try permissionsContainer.encode(resourcepermissionlist0)
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
