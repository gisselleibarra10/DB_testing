// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuickSightClientTypes.ProjectOperation: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case projectedColumns = "ProjectedColumns"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let projectedColumns = projectedColumns {
            var projectedColumnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .projectedColumns)
            for projectedcolumnlist0 in projectedColumns {
                try projectedColumnsContainer.encode(projectedcolumnlist0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectedColumnsContainer = try containerValues.decodeIfPresent([Swift.String?].self, forKey: .projectedColumns)
        var projectedColumnsDecoded0:[Swift.String]? = nil
        if let projectedColumnsContainer = projectedColumnsContainer {
            projectedColumnsDecoded0 = [Swift.String]()
            for string0 in projectedColumnsContainer {
                if let string0 = string0 {
                    projectedColumnsDecoded0?.append(string0)
                }
            }
        }
        projectedColumns = projectedColumnsDecoded0
    }
}
