// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateIpRestrictionInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case enabled = "Enabled"
        case ipRestrictionRuleMap = "IpRestrictionRuleMap"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let enabled = self.enabled {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if let ipRestrictionRuleMap = ipRestrictionRuleMap {
            var ipRestrictionRuleMapContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .ipRestrictionRuleMap)
            for (dictKey0, iprestrictionrulemap0) in ipRestrictionRuleMap {
                try ipRestrictionRuleMapContainer.encode(iprestrictionrulemap0, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
    }
}
