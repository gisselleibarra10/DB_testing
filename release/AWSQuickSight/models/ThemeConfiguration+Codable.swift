// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuickSightClientTypes.ThemeConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dataColorPalette = "DataColorPalette"
        case sheet = "Sheet"
        case uIColorPalette = "UIColorPalette"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataColorPalette = self.dataColorPalette {
            try encodeContainer.encode(dataColorPalette, forKey: .dataColorPalette)
        }
        if let sheet = self.sheet {
            try encodeContainer.encode(sheet, forKey: .sheet)
        }
        if let uIColorPalette = self.uIColorPalette {
            try encodeContainer.encode(uIColorPalette, forKey: .uIColorPalette)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataColorPaletteDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.DataColorPalette.self, forKey: .dataColorPalette)
        dataColorPalette = dataColorPaletteDecoded
        let uIColorPaletteDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.UIColorPalette.self, forKey: .uIColorPalette)
        uIColorPalette = uIColorPaletteDecoded
        let sheetDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.SheetStyle.self, forKey: .sheet)
        sheet = sheetDecoded
    }
}
