// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDashboardInputBody: Swift.Equatable {
    let name: Swift.String?
    let sourceEntity: QuickSightClientTypes.DashboardSourceEntity?
    let parameters: QuickSightClientTypes.Parameters?
    let versionDescription: Swift.String?
    let dashboardPublishOptions: QuickSightClientTypes.DashboardPublishOptions?
    let themeArn: Swift.String?
}

extension UpdateDashboardInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dashboardPublishOptions = "DashboardPublishOptions"
        case name = "Name"
        case parameters = "Parameters"
        case sourceEntity = "SourceEntity"
        case themeArn = "ThemeArn"
        case versionDescription = "VersionDescription"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
        let sourceEntityDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.DashboardSourceEntity.self, forKey: .sourceEntity)
        sourceEntity = sourceEntityDecoded
        let parametersDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.Parameters.self, forKey: .parameters)
        parameters = parametersDecoded
        let versionDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .versionDescription)
        versionDescription = versionDescriptionDecoded
        let dashboardPublishOptionsDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.DashboardPublishOptions.self, forKey: .dashboardPublishOptions)
        dashboardPublishOptions = dashboardPublishOptionsDecoded
        let themeArnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .themeArn)
        themeArn = themeArnDecoded
    }
}
