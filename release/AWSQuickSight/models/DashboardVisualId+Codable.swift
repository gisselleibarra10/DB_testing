// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuickSightClientTypes.DashboardVisualId: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case dashboardId = "DashboardId"
        case sheetId = "SheetId"
        case visualId = "VisualId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dashboardId = self.dashboardId {
            try encodeContainer.encode(dashboardId, forKey: .dashboardId)
        }
        if let sheetId = self.sheetId {
            try encodeContainer.encode(sheetId, forKey: .sheetId)
        }
        if let visualId = self.visualId {
            try encodeContainer.encode(visualId, forKey: .visualId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dashboardIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .dashboardId)
        dashboardId = dashboardIdDecoded
        let sheetIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .sheetId)
        sheetId = sheetIdDecoded
        let visualIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .visualId)
        visualId = visualIdDecoded
    }
}
