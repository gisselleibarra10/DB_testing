// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GenerateEmbedUrlForAnonymousUserInput: Swift.Equatable {
    /// The domains that you want to add to the allow list for access to the generated URL that is then embedded. This optional parameter overrides the static domains that are configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead, it allows only the domains that you include in this parameter. You can list up to three domains or subdomains in each API call. To include all subdomains under a specific domain to the allow list, use *. For example, https://*.sapp.amazon.com includes all subdomains under https://sapp.amazon.com.
    public var allowedDomains: [Swift.String]?
    /// The Amazon Resource Names (ARNs) for the Amazon QuickSight resources that the user is authorized to access during the lifetime of the session. If you choose Dashboard embedding experience, pass the list of dashboard ARNs in the account that you want the user to be able to view. Currently, you can pass up to 25 dashboard ARNs in each API call.
    /// This member is required.
    public var authorizedResourceArns: [Swift.String]?
    /// The ID for the Amazon Web Services account that contains the dashboard that you're embedding.
    /// This member is required.
    public var awsAccountId: Swift.String?
    /// The configuration of the experience that you are embedding.
    /// This member is required.
    public var experienceConfiguration: QuickSightClientTypes.AnonymousUserEmbeddingExperienceConfiguration?
    /// The Amazon QuickSight namespace that the anonymous user virtually belongs to. If you are not using an Amazon QuickSight custom namespace, set this to default.
    /// This member is required.
    public var namespace: Swift.String?
    /// How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.
    public var sessionLifetimeInMinutes: Swift.Int?
    /// The session tags used for row-level security. Before you use this parameter, make sure that you have configured the relevant datasets using the DataSet$RowLevelPermissionTagConfiguration parameter so that session tags can be used to provide row-level security. These are not the tags used for the Amazon Web Services resource tagging feature. For more information, see [Using Row-Level Security (RLS) with Tags](https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html)in the Amazon QuickSight User Guide.
    public var sessionTags: [QuickSightClientTypes.SessionTag]?

    public init (
        allowedDomains: [Swift.String]? = nil,
        authorizedResourceArns: [Swift.String]? = nil,
        awsAccountId: Swift.String? = nil,
        experienceConfiguration: QuickSightClientTypes.AnonymousUserEmbeddingExperienceConfiguration? = nil,
        namespace: Swift.String? = nil,
        sessionLifetimeInMinutes: Swift.Int? = nil,
        sessionTags: [QuickSightClientTypes.SessionTag]? = nil
    )
    {
        self.allowedDomains = allowedDomains
        self.authorizedResourceArns = authorizedResourceArns
        self.awsAccountId = awsAccountId
        self.experienceConfiguration = experienceConfiguration
        self.namespace = namespace
        self.sessionLifetimeInMinutes = sessionLifetimeInMinutes
        self.sessionTags = sessionTags
    }
}
