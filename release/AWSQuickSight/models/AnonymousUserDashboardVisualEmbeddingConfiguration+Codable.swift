// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuickSightClientTypes.AnonymousUserDashboardVisualEmbeddingConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case initialDashboardVisualId = "InitialDashboardVisualId"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let initialDashboardVisualId = self.initialDashboardVisualId {
            try encodeContainer.encode(initialDashboardVisualId, forKey: .initialDashboardVisualId)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let initialDashboardVisualIdDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.DashboardVisualId.self, forKey: .initialDashboardVisualId)
        initialDashboardVisualId = initialDashboardVisualIdDecoded
    }
}
