// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTemplateInputBody: Swift.Equatable {
    let sourceEntity: QuickSightClientTypes.TemplateSourceEntity?
    let versionDescription: Swift.String?
    let name: Swift.String?
}

extension UpdateTemplateInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case name = "Name"
        case sourceEntity = "SourceEntity"
        case versionDescription = "VersionDescription"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceEntityDecoded = try containerValues.decodeIfPresent(QuickSightClientTypes.TemplateSourceEntity.self, forKey: .sourceEntity)
        sourceEntity = sourceEntityDecoded
        let versionDescriptionDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .versionDescription)
        versionDescription = versionDescriptionDecoded
        let nameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .name)
        name = nameDecoded
    }
}
