// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDashboardPermissionsInputBody: Swift.Equatable {
    let grantPermissions: [QuickSightClientTypes.ResourcePermission]?
    let revokePermissions: [QuickSightClientTypes.ResourcePermission]?
    let grantLinkPermissions: [QuickSightClientTypes.ResourcePermission]?
    let revokeLinkPermissions: [QuickSightClientTypes.ResourcePermission]?
}

extension UpdateDashboardPermissionsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case grantLinkPermissions = "GrantLinkPermissions"
        case grantPermissions = "GrantPermissions"
        case revokeLinkPermissions = "RevokeLinkPermissions"
        case revokePermissions = "RevokePermissions"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let grantPermissionsContainer = try containerValues.decodeIfPresent([QuickSightClientTypes.ResourcePermission?].self, forKey: .grantPermissions)
        var grantPermissionsDecoded0:[QuickSightClientTypes.ResourcePermission]? = nil
        if let grantPermissionsContainer = grantPermissionsContainer {
            grantPermissionsDecoded0 = [QuickSightClientTypes.ResourcePermission]()
            for structure0 in grantPermissionsContainer {
                if let structure0 = structure0 {
                    grantPermissionsDecoded0?.append(structure0)
                }
            }
        }
        grantPermissions = grantPermissionsDecoded0
        let revokePermissionsContainer = try containerValues.decodeIfPresent([QuickSightClientTypes.ResourcePermission?].self, forKey: .revokePermissions)
        var revokePermissionsDecoded0:[QuickSightClientTypes.ResourcePermission]? = nil
        if let revokePermissionsContainer = revokePermissionsContainer {
            revokePermissionsDecoded0 = [QuickSightClientTypes.ResourcePermission]()
            for structure0 in revokePermissionsContainer {
                if let structure0 = structure0 {
                    revokePermissionsDecoded0?.append(structure0)
                }
            }
        }
        revokePermissions = revokePermissionsDecoded0
        let grantLinkPermissionsContainer = try containerValues.decodeIfPresent([QuickSightClientTypes.ResourcePermission?].self, forKey: .grantLinkPermissions)
        var grantLinkPermissionsDecoded0:[QuickSightClientTypes.ResourcePermission]? = nil
        if let grantLinkPermissionsContainer = grantLinkPermissionsContainer {
            grantLinkPermissionsDecoded0 = [QuickSightClientTypes.ResourcePermission]()
            for structure0 in grantLinkPermissionsContainer {
                if let structure0 = structure0 {
                    grantLinkPermissionsDecoded0?.append(structure0)
                }
            }
        }
        grantLinkPermissions = grantLinkPermissionsDecoded0
        let revokeLinkPermissionsContainer = try containerValues.decodeIfPresent([QuickSightClientTypes.ResourcePermission?].self, forKey: .revokeLinkPermissions)
        var revokeLinkPermissionsDecoded0:[QuickSightClientTypes.ResourcePermission]? = nil
        if let revokeLinkPermissionsContainer = revokeLinkPermissionsContainer {
            revokeLinkPermissionsDecoded0 = [QuickSightClientTypes.ResourcePermission]()
            for structure0 in revokeLinkPermissionsContainer {
                if let structure0 = structure0 {
                    revokeLinkPermissionsDecoded0?.append(structure0)
                }
            }
        }
        revokeLinkPermissions = revokeLinkPermissionsDecoded0
    }
}
