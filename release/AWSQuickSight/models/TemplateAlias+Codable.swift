// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuickSightClientTypes.TemplateAlias: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case aliasName = "AliasName"
        case arn = "Arn"
        case templateVersionNumber = "TemplateVersionNumber"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aliasName = self.aliasName {
            try encodeContainer.encode(aliasName, forKey: .aliasName)
        }
        if let arn = self.arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let templateVersionNumber = self.templateVersionNumber {
            try encodeContainer.encode(templateVersionNumber, forKey: .templateVersionNumber)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aliasNameDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .aliasName)
        aliasName = aliasNameDecoded
        let arnDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .arn)
        arn = arnDecoded
        let templateVersionNumberDecoded = try containerValues.decodeIfPresent(Swift.Int.self, forKey: .templateVersionNumber)
        templateVersionNumber = templateVersionNumberDecoded
    }
}
