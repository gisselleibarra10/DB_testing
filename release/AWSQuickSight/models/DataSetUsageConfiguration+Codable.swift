// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuickSightClientTypes.DataSetUsageConfiguration: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case disableUseAsDirectQuerySource = "DisableUseAsDirectQuerySource"
        case disableUseAsImportedSource = "DisableUseAsImportedSource"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if disableUseAsDirectQuerySource != false {
            try encodeContainer.encode(disableUseAsDirectQuerySource, forKey: .disableUseAsDirectQuerySource)
        }
        if disableUseAsImportedSource != false {
            try encodeContainer.encode(disableUseAsImportedSource, forKey: .disableUseAsImportedSource)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let disableUseAsDirectQuerySourceDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .disableUseAsDirectQuerySource) ?? false
        disableUseAsDirectQuerySource = disableUseAsDirectQuerySourceDecoded
        let disableUseAsImportedSourceDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .disableUseAsImportedSource) ?? false
        disableUseAsImportedSource = disableUseAsImportedSourceDecoded
    }
}
