{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"spotAllocationStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/awsautoscaling\/autoscalingclienttypes\/instancesdistribution\/spotallocationstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/AWSAutoScaling\/documentation\/AWSAutoScaling\/AutoScalingClientTypes\/InstancesDistribution\/spotAllocationStrategy","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined by the launch template overrides that you specify. The following lists the valid values: capacity-optimized Requests Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized. capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify [InstanceRequirements]. lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone, across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption rates because this strategy only considers instance price and not available capacity. price-capacity-optimized (recommended) Amazon EC2 Auto Scaling identifies the pools with the highest capacity availability for the number of instances that are launching. This means that we will request Spot Instances from the pools that we believe have the lowest chance of interruption in the near term. Amazon EC2 Auto Scaling then requests Spot Instances from the lowest priced of these pools."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"spotAllocationStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"title":"spotAllocationStrategy","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:14AWSAutoScaling04AutoB11ClientTypesO21InstancesDistributionV22spotAllocationStrategySSSgvp","modules":[{"name":"AWSAutoScaling"}]},"hierarchy":{"paths":[["doc:\/\/AWSAutoScaling\/documentation\/AWSAutoScaling","doc:\/\/AWSAutoScaling\/documentation\/AWSAutoScaling\/AutoScalingClientTypes","doc:\/\/AWSAutoScaling\/documentation\/AWSAutoScaling\/AutoScalingClientTypes\/InstancesDistribution"]]},"references":{"doc://AWSAutoScaling/documentation/AWSAutoScaling":{"role":"collection","title":"AWSAutoScaling","abstract":[],"identifier":"doc:\/\/AWSAutoScaling\/documentation\/AWSAutoScaling","kind":"symbol","type":"topic","url":"\/documentation\/awsautoscaling"},"doc://AWSAutoScaling/documentation/AWSAutoScaling/AutoScalingClientTypes/InstancesDistribution/spotAllocationStrategy":{"role":"symbol","title":"spotAllocationStrategy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"spotAllocationStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined by the launch template overrides that you specify. The following lists the valid values: capacity-optimized Requests Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized. capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify [InstanceRequirements]. lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone, across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption rates because this strategy only considers instance price and not available capacity. price-capacity-optimized (recommended) Amazon EC2 Auto Scaling identifies the pools with the highest capacity availability for the number of instances that are launching. This means that we will request Spot Instances from the pools that we believe have the lowest chance of interruption in the near term. Amazon EC2 Auto Scaling then requests Spot Instances from the lowest priced of these pools."}],"identifier":"doc:\/\/AWSAutoScaling\/documentation\/AWSAutoScaling\/AutoScalingClientTypes\/InstancesDistribution\/spotAllocationStrategy","kind":"symbol","type":"topic","url":"\/documentation\/awsautoscaling\/autoscalingclienttypes\/instancesdistribution\/spotallocationstrategy"},"doc://AWSAutoScaling/documentation/AWSAutoScaling/AutoScalingClientTypes":{"role":"symbol","title":"AutoScalingClientTypes","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoScalingClientTypes"}],"abstract":[],"identifier":"doc:\/\/AWSAutoScaling\/documentation\/AWSAutoScaling\/AutoScalingClientTypes","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AutoScalingClientTypes"}],"url":"\/documentation\/awsautoscaling\/autoscalingclienttypes"},"doc://AWSAutoScaling/documentation/AWSAutoScaling/AutoScalingClientTypes/InstancesDistribution":{"role":"symbol","title":"AutoScalingClientTypes.InstancesDistribution","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InstancesDistribution"}],"abstract":[{"type":"text","text":"Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy."}],"identifier":"doc:\/\/AWSAutoScaling\/documentation\/AWSAutoScaling\/AutoScalingClientTypes\/InstancesDistribution","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InstancesDistribution"}],"url":"\/documentation\/awsautoscaling\/autoscalingclienttypes\/instancesdistribution"}}}