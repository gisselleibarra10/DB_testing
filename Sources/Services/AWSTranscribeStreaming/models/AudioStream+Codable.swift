// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TranscribeStreamingClientTypes.AudioStream: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case audioevent = "AudioEvent"
        case configurationevent = "ConfigurationEvent"
        case sdkUnknown
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .audioevent(audioevent):
                try container.encode(audioevent, forKey: .audioevent)
            case let .configurationevent(configurationevent):
                try container.encode(configurationevent, forKey: .configurationevent)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let audioeventDecoded = try values.decodeIfPresent(TranscribeStreamingClientTypes.AudioEvent.self, forKey: .audioevent)
        if let audioevent = audioeventDecoded {
            self = .audioevent(audioevent)
            return
        }
        let configurationeventDecoded = try values.decodeIfPresent(TranscribeStreamingClientTypes.ConfigurationEvent.self, forKey: .configurationevent)
        if let configurationevent = configurationeventDecoded {
            self = .configurationevent(configurationevent)
            return
        }
        self = .sdkUnknown("")
    }
}
