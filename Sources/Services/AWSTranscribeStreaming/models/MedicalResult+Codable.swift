// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TranscribeStreamingClientTypes.MedicalResult: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case alternatives = "Alternatives"
        case channelId = "ChannelId"
        case endTime = "EndTime"
        case isPartial = "IsPartial"
        case resultId = "ResultId"
        case startTime = "StartTime"
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let alternatives = alternatives {
            var alternativesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .alternatives)
            for medicalalternative0 in alternatives {
                try alternativesContainer.encode(medicalalternative0)
            }
        }
        if let channelId = self.channelId {
            try encodeContainer.encode(channelId, forKey: .channelId)
        }
        if endTime != 0.0 {
            try encodeContainer.encode(endTime, forKey: .endTime)
        }
        if isPartial != false {
            try encodeContainer.encode(isPartial, forKey: .isPartial)
        }
        if let resultId = self.resultId {
            try encodeContainer.encode(resultId, forKey: .resultId)
        }
        if startTime != 0.0 {
            try encodeContainer.encode(startTime, forKey: .startTime)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .resultId)
        resultId = resultIdDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .startTime) ?? 0.0
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Swift.Double.self, forKey: .endTime) ?? 0.0
        endTime = endTimeDecoded
        let isPartialDecoded = try containerValues.decodeIfPresent(Swift.Bool.self, forKey: .isPartial) ?? false
        isPartial = isPartialDecoded
        let alternativesContainer = try containerValues.decodeIfPresent([TranscribeStreamingClientTypes.MedicalAlternative?].self, forKey: .alternatives)
        var alternativesDecoded0:[TranscribeStreamingClientTypes.MedicalAlternative]? = nil
        if let alternativesContainer = alternativesContainer {
            alternativesDecoded0 = [TranscribeStreamingClientTypes.MedicalAlternative]()
            for structure0 in alternativesContainer {
                if let structure0 = structure0 {
                    alternativesDecoded0?.append(structure0)
                }
            }
        }
        alternatives = alternativesDecoded0
        let channelIdDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .channelId)
        channelId = channelIdDecoded
    }
}
