// Code generated by smithy-swift-codegen. DO NOT EDIT!

@testable import aws_restjson
import ClientRuntime
import SmithyTestUtil
import XCTest


class HttpPayloadWithStructureResponseTest: HttpResponseTestBase {
    /// Serializes a structure in the payload
    func testRestJsonHttpPayloadWithStructure() async throws {
        guard let httpResponse = buildHttpResponse(
            code: 200,
            headers: [
                "Content-Type": "application/json"
            ],
            content: HttpBody.stream(ByteStream.from(data: """
            {
                "greeting": "hello",
                "name": "Phreddy"
            }
            """.data(using: .utf8)!))
        ) else {
            XCTFail("Something is wrong with the created http response")
            return
        }

        let decoder = ClientRuntime.JSONDecoder()
        decoder.dateDecodingStrategy = .secondsSince1970
        decoder.nonConformingFloatDecodingStrategy = .convertFromString(positiveInfinity: "Infinity", negativeInfinity: "-Infinity", nan: "NaN")
        let actual = try HttpPayloadWithStructureOutputResponse(httpResponse: httpResponse, decoder: decoder)

        let expected = HttpPayloadWithStructureOutputResponse(
            nested: RestJsonClientTypes.NestedPayload(
                greeting: "hello",
                name: "Phreddy"
            )
        )

        XCTAssertEqual(expected.nested, actual.nested)

    }
}
