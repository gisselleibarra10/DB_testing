// Code generated by smithy-swift-codegen. DO NOT EDIT!

@testable import aws_restjson
import ClientRuntime
import SmithyTestUtil
import XCTest


class EmptyInputAndEmptyOutputResponseTest: HttpResponseTestBase {
    /// As of January 2021, server implementations are expected to respond with a JSON object regardless of if the output parameters are empty.
    func testRestJsonEmptyInputAndEmptyOutput() async throws {
        guard let httpResponse = buildHttpResponse(
            code: 200,
            headers: [
                "Content-Type": "application/json"
            ],
            content: HttpBody.stream(ByteStream.from(data: """
            {}
            """.data(using: .utf8)!))
        ) else {
            XCTFail("Something is wrong with the created http response")
            return
        }

        let decoder = ClientRuntime.JSONDecoder()
        decoder.dateDecodingStrategy = .secondsSince1970
        decoder.nonConformingFloatDecodingStrategy = .convertFromString(positiveInfinity: "Infinity", negativeInfinity: "-Infinity", nan: "NaN")
        let actual = try EmptyInputAndEmptyOutputOutputResponse(httpResponse: httpResponse, decoder: decoder)

        let expected = EmptyInputAndEmptyOutputOutputResponse(
        )

    }
    /// This test ensures that clients can gracefully handle situations where a service omits a JSON payload entirely.
    func testRestJsonEmptyInputAndEmptyOutputJsonObjectOutput() async throws {
        guard let httpResponse = buildHttpResponse(
            code: 200,
            headers: nil,
            content: HttpBody.empty
        ) else {
            XCTFail("Something is wrong with the created http response")
            return
        }

        let actual = try EmptyInputAndEmptyOutputOutputResponse(httpResponse: httpResponse)

        let expected = EmptyInputAndEmptyOutputOutputResponse(
        )

    }
}
