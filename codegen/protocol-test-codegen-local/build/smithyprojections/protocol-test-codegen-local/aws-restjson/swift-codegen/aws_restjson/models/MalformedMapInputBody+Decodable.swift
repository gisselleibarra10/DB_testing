// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct MalformedMapInputBody: Swift.Equatable {
    let bodyMap: [Swift.String:Swift.String]?
}

extension MalformedMapInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bodyMap
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bodyMapContainer = try containerValues.decodeIfPresent([Swift.String: Swift.String?].self, forKey: .bodyMap)
        var bodyMapDecoded0: [Swift.String:Swift.String]? = nil
        if let bodyMapContainer = bodyMapContainer {
            bodyMapDecoded0 = [Swift.String:Swift.String]()
            for (key0, string0) in bodyMapContainer {
                if let string0 = string0 {
                    bodyMapDecoded0?[key0] = string0
                }
            }
        }
        bodyMap = bodyMapDecoded0
    }
}
