// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ComplexErrorBody: Swift.Equatable {
    let topLevel: Swift.String?
    let nested: RestJsonClientTypes.ComplexNestedErrorData?
}

extension ComplexErrorBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case nested = "Nested"
        case topLevel = "TopLevel"
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let topLevelDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .topLevel)
        topLevel = topLevelDecoded
        let nestedDecoded = try containerValues.decodeIfPresent(RestJsonClientTypes.ComplexNestedErrorData.self, forKey: .nested)
        nested = nestedDecoded
    }
}
