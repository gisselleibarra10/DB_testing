// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RestJsonClientTypes.SimpleUnion: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case int
        case sdkUnknown
        case string
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .int(int):
                try container.encode(int, forKey: .int)
            case let .string(string):
                try container.encode(string, forKey: .string)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let intDecoded = try values.decodeIfPresent(Swift.Int.self, forKey: .int)
        if let int = intDecoded {
            self = .int(int)
            return
        }
        let stringDecoded = try values.decodeIfPresent(Swift.String.self, forKey: .string)
        if let string = stringDecoded {
            self = .string(string)
            return
        }
        self = .sdkUnknown("")
    }
}
