// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct JsonEnumsInputBody: Swift.Equatable {
    let fooEnum1: RestJsonClientTypes.FooEnum?
    let fooEnum2: RestJsonClientTypes.FooEnum?
    let fooEnum3: RestJsonClientTypes.FooEnum?
    let fooEnumList: [RestJsonClientTypes.FooEnum]?
    let fooEnumSet: [RestJsonClientTypes.FooEnum]?
    let fooEnumMap: [Swift.String:RestJsonClientTypes.FooEnum]?
}

extension JsonEnumsInputBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fooEnum1
        case fooEnum2
        case fooEnum3
        case fooEnumList
        case fooEnumMap
        case fooEnumSet
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fooEnum1Decoded = try containerValues.decodeIfPresent(RestJsonClientTypes.FooEnum.self, forKey: .fooEnum1)
        fooEnum1 = fooEnum1Decoded
        let fooEnum2Decoded = try containerValues.decodeIfPresent(RestJsonClientTypes.FooEnum.self, forKey: .fooEnum2)
        fooEnum2 = fooEnum2Decoded
        let fooEnum3Decoded = try containerValues.decodeIfPresent(RestJsonClientTypes.FooEnum.self, forKey: .fooEnum3)
        fooEnum3 = fooEnum3Decoded
        let fooEnumListContainer = try containerValues.decodeIfPresent([RestJsonClientTypes.FooEnum?].self, forKey: .fooEnumList)
        var fooEnumListDecoded0:[RestJsonClientTypes.FooEnum]? = nil
        if let fooEnumListContainer = fooEnumListContainer {
            fooEnumListDecoded0 = [RestJsonClientTypes.FooEnum]()
            for enum0 in fooEnumListContainer {
                if let enum0 = enum0 {
                    fooEnumListDecoded0?.append(enum0)
                }
            }
        }
        fooEnumList = fooEnumListDecoded0
        let fooEnumSetContainer = try containerValues.decodeIfPresent([RestJsonClientTypes.FooEnum?].self, forKey: .fooEnumSet)
        var fooEnumSetDecoded0:[RestJsonClientTypes.FooEnum]? = nil
        if let fooEnumSetContainer = fooEnumSetContainer {
            fooEnumSetDecoded0 = [RestJsonClientTypes.FooEnum]()
            for enum0 in fooEnumSetContainer {
                if let enum0 = enum0 {
                    fooEnumSetDecoded0?.append(enum0)
                }
            }
        }
        fooEnumSet = fooEnumSetDecoded0
        let fooEnumMapContainer = try containerValues.decodeIfPresent([Swift.String: RestJsonClientTypes.FooEnum?].self, forKey: .fooEnumMap)
        var fooEnumMapDecoded0: [Swift.String:RestJsonClientTypes.FooEnum]? = nil
        if let fooEnumMapContainer = fooEnumMapContainer {
            fooEnumMapDecoded0 = [Swift.String:RestJsonClientTypes.FooEnum]()
            for (key0, fooenum0) in fooEnumMapContainer {
                if let fooenum0 = fooenum0 {
                    fooEnumMapDecoded0?[key0] = fooenum0
                }
            }
        }
        fooEnumMap = fooEnumMapDecoded0
    }
}
