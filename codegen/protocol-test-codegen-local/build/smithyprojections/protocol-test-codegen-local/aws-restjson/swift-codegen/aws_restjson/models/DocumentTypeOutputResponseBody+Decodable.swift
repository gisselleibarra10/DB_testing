// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DocumentTypeOutputResponseBody: Swift.Equatable {
    let stringValue: Swift.String?
    let documentValue: ClientRuntime.Document?
}

extension DocumentTypeOutputResponseBody: Swift.Decodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case documentValue
        case stringValue
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stringValueDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .stringValue)
        stringValue = stringValueDecoded
        let documentValueDecoded = try containerValues.decodeIfPresent(ClientRuntime.Document.self, forKey: .documentValue)
        documentValue = documentValueDecoded
    }
}
