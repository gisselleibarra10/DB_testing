// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct MalformedContentTypeWithGenericStringInputBodyMiddleware: ClientRuntime.Middleware {
    public let id: Swift.String = "MalformedContentTypeWithGenericStringInputBodyMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: ClientRuntime.SerializeStepInput<MalformedContentTypeWithGenericStringInput>,
                  next: H) async throws -> ClientRuntime.OperationOutput<MalformedContentTypeWithGenericStringOutputResponse>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context
    {
        if let payload = input.operationInput.payload {
            let payloaddata = payload.data(using: .utf8)
            let payloadbody = ClientRuntime.HttpBody.data(payloaddata)
            input.builder.withBody(payloadbody)
        }
        return try await next.handle(context: context, input: input)
    }

    public typealias MInput = ClientRuntime.SerializeStepInput<MalformedContentTypeWithGenericStringInput>
    public typealias MOutput = ClientRuntime.OperationOutput<MalformedContentTypeWithGenericStringOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
}
