// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct StreamingTraitsWithMediaTypeInputBodyMiddleware: ClientRuntime.Middleware {
    public let id: Swift.String = "StreamingTraitsWithMediaTypeInputBodyMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: ClientRuntime.SerializeStepInput<StreamingTraitsWithMediaTypeInput>,
                  next: H) async throws -> ClientRuntime.OperationOutput<StreamingTraitsWithMediaTypeOutputResponse>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context
    {
        if let blob = input.operationInput.blob {
            let blobdata = blob
            let blobbody = ClientRuntime.HttpBody.stream(blobdata)
            input.builder.withBody(blobbody)
        }
        return try await next.handle(context: context, input: input)
    }

    public typealias MInput = ClientRuntime.SerializeStepInput<StreamingTraitsWithMediaTypeInput>
    public typealias MOutput = ClientRuntime.OperationOutput<StreamingTraitsWithMediaTypeOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
}
