// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HttpRequestWithLabelsAndTimestampFormatInput: ClientRuntime.URLPathProvider {
    public var urlPath: Swift.String? {
        guard let memberEpochSeconds = memberEpochSeconds else {
            return nil
        }
        guard let memberHttpDate = memberHttpDate else {
            return nil
        }
        guard let memberDateTime = memberDateTime else {
            return nil
        }
        guard let defaultFormat = defaultFormat else {
            return nil
        }
        guard let targetEpochSeconds = targetEpochSeconds else {
            return nil
        }
        guard let targetHttpDate = targetHttpDate else {
            return nil
        }
        guard let targetDateTime = targetDateTime else {
            return nil
        }
        return "/HttpRequestWithLabelsAndTimestampFormat/\(TimestampFormatter(format: .epochSeconds).string(from: memberEpochSeconds).urlPercentEncoding())/\(TimestampFormatter(format: .httpDate).string(from: memberHttpDate).urlPercentEncoding())/\(TimestampFormatter(format: .dateTime).string(from: memberDateTime).urlPercentEncoding())/\(TimestampFormatter(format: .dateTime).string(from: defaultFormat).urlPercentEncoding())/\(TimestampFormatter(format: .epochSeconds).string(from: targetEpochSeconds).urlPercentEncoding())/\(TimestampFormatter(format: .httpDate).string(from: targetHttpDate).urlPercentEncoding())/\(TimestampFormatter(format: .dateTime).string(from: targetDateTime).urlPercentEncoding())"
    }
}
