// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JsonEnumsInput: Swift.Encodable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case fooEnum1
        case fooEnum2
        case fooEnum3
        case fooEnumList
        case fooEnumMap
        case fooEnumSet
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fooEnum1 = self.fooEnum1 {
            try encodeContainer.encode(fooEnum1.rawValue, forKey: .fooEnum1)
        }
        if let fooEnum2 = self.fooEnum2 {
            try encodeContainer.encode(fooEnum2.rawValue, forKey: .fooEnum2)
        }
        if let fooEnum3 = self.fooEnum3 {
            try encodeContainer.encode(fooEnum3.rawValue, forKey: .fooEnum3)
        }
        if let fooEnumList = fooEnumList {
            var fooEnumListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .fooEnumList)
            for fooenumlist0 in fooEnumList {
                try fooEnumListContainer.encode(fooenumlist0.rawValue)
            }
        }
        if let fooEnumMap = fooEnumMap {
            var fooEnumMapContainer = encodeContainer.nestedContainer(keyedBy: ClientRuntime.Key.self, forKey: .fooEnumMap)
            for (dictKey0, fooenummap0) in fooEnumMap {
                try fooEnumMapContainer.encode(fooenummap0.rawValue, forKey: ClientRuntime.Key(stringValue: dictKey0))
            }
        }
        if let fooEnumSet = fooEnumSet {
            var fooEnumSetContainer = encodeContainer.nestedUnkeyedContainer(forKey: .fooEnumSet)
            for fooenumset0 in fooEnumSet {
                try fooEnumSetContainer.encode(fooenumset0.rawValue)
            }
        }
    }
}
