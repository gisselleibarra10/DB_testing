// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RestJsonClientTypes.RecursiveShapesInputOutputNested2: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bar
        case recursiveMember
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bar = self.bar {
            try encodeContainer.encode(bar, forKey: .bar)
        }
        if let recursiveMember = self.recursiveMember {
            try encodeContainer.encode(recursiveMember, forKey: .recursiveMember)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let barDecoded = try containerValues.decodeIfPresent(Swift.String.self, forKey: .bar)
        bar = barDecoded
        let recursiveMemberDecoded = try containerValues.decodeIfPresent(RestJsonClientTypes.RecursiveShapesInputOutputNested1.self, forKey: .recursiveMember)
        recursiveMember = recursiveMemberDecoded
    }
}
