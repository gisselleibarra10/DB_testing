// Code generated by smithy-swift-codegen. DO NOT EDIT!



extension RestJsonClientTypes {
    public enum FooEnum: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Codable, Swift.Hashable {
        case bar
        case baz
        case foo
        case one
        case zero
        case sdkUnknown(Swift.String)

        public static var allCases: [FooEnum] {
            return [
                .bar,
                .baz,
                .foo,
                .one,
                .zero,
                .sdkUnknown("")
            ]
        }
        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }
        public var rawValue: Swift.String {
            switch self {
            case .bar: return "Bar"
            case .baz: return "Baz"
            case .foo: return "Foo"
            case .one: return "1"
            case .zero: return "0"
            case let .sdkUnknown(s): return s
            }
        }
        public init(from decoder: Swift.Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(RawValue.self)
            self = FooEnum(rawValue: rawValue) ?? FooEnum.sdkUnknown(rawValue)
        }
    }
}
