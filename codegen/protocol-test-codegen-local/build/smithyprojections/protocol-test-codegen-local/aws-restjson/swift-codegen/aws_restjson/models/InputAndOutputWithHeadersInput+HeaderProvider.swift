// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InputAndOutputWithHeadersInput: ClientRuntime.HeaderProvider {
    public var headers: ClientRuntime.Headers {
        var items = ClientRuntime.Headers()
        if let headerBooleanList = headerBooleanList {
            headerBooleanList.forEach { headerValue in
                items.add(Header(name: "X-BooleanList", value: quoteHeaderValue(Swift.String(headerValue))))
            }
        }
        if let headerByte = headerByte {
            items.add(Header(name: "X-Byte", value: Swift.String(headerByte)))
        }
        if let headerDouble = headerDouble {
            items.add(Header(name: "X-Double", value: Swift.String(headerDouble)))
        }
        if let headerEnum = headerEnum {
            items.add(Header(name: "X-Enum", value: Swift.String(headerEnum.rawValue)))
        }
        if let headerEnumList = headerEnumList {
            headerEnumList.forEach { headerValue in
                items.add(Header(name: "X-EnumList", value: quoteHeaderValue(Swift.String(headerValue.rawValue))))
            }
        }
        if let headerFalseBool = headerFalseBool {
            items.add(Header(name: "X-Boolean2", value: Swift.String(headerFalseBool)))
        }
        if let headerFloat = headerFloat {
            items.add(Header(name: "X-Float", value: Swift.String(headerFloat)))
        }
        if let headerInteger = headerInteger {
            items.add(Header(name: "X-Integer", value: Swift.String(headerInteger)))
        }
        if let headerIntegerEnum = headerIntegerEnum {
            items.add(Header(name: "X-IntegerEnum", value: Swift.String(headerIntegerEnum.rawValue)))
        }
        if let headerIntegerEnumList = headerIntegerEnumList {
            headerIntegerEnumList.forEach { headerValue in
                items.add(Header(name: "X-IntegerEnumList", value: quoteHeaderValue(Swift.String(headerValue.rawValue))))
            }
        }
        if let headerIntegerList = headerIntegerList {
            headerIntegerList.forEach { headerValue in
                items.add(Header(name: "X-IntegerList", value: quoteHeaderValue(Swift.String(headerValue))))
            }
        }
        if let headerLong = headerLong {
            items.add(Header(name: "X-Long", value: Swift.String(headerLong)))
        }
        if let headerShort = headerShort {
            items.add(Header(name: "X-Short", value: Swift.String(headerShort)))
        }
        if let headerString = headerString {
            items.add(Header(name: "X-String", value: Swift.String(headerString)))
        }
        if let headerStringList = headerStringList {
            headerStringList.forEach { headerValue in
                items.add(Header(name: "X-StringList", value: quoteHeaderValue(Swift.String(headerValue))))
            }
        }
        if let headerStringSet = headerStringSet {
            headerStringSet.forEach { headerValue in
                items.add(Header(name: "X-StringSet", value: quoteHeaderValue(Swift.String(headerValue))))
            }
        }
        if let headerTimestampList = headerTimestampList {
            headerTimestampList.forEach { headerValue in
                items.add(Header(name: "X-TimestampList", value: Swift.String(TimestampFormatter(format: .httpDate).string(from: headerValue))))
            }
        }
        if let headerTrueBool = headerTrueBool {
            items.add(Header(name: "X-Boolean1", value: Swift.String(headerTrueBool)))
        }
        return items
    }
}
