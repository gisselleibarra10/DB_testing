// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RestJsonClientTypes.UnionWithJsonName: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case bar
        case baz = "_baz"
        case foo = "FOO"
        case sdkUnknown
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .bar(bar):
                try container.encode(bar, forKey: .bar)
            case let .baz(baz):
                try container.encode(baz, forKey: .baz)
            case let .foo(foo):
                try container.encode(foo, forKey: .foo)
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let fooDecoded = try values.decodeIfPresent(Swift.String.self, forKey: .foo)
        if let foo = fooDecoded {
            self = .foo(foo)
            return
        }
        let barDecoded = try values.decodeIfPresent(Swift.String.self, forKey: .bar)
        if let bar = barDecoded {
            self = .bar(bar)
            return
        }
        let bazDecoded = try values.decodeIfPresent(Swift.String.self, forKey: .baz)
        if let baz = bazDecoded {
            self = .baz(baz)
            return
        }
        self = .sdkUnknown("")
    }
}
