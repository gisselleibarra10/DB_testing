// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WaitersClientTypes.Child: Swift.Codable {
    enum CodingKeys: Swift.String, Swift.CodingKey {
        case grandchildren
    }

    public func encode(to encoder: Swift.Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let grandchildren = grandchildren {
            var grandchildrenContainer = encodeContainer.nestedUnkeyedContainer(forKey: .grandchildren)
            for grandchildarray0 in grandchildren {
                try grandchildrenContainer.encode(grandchildarray0)
            }
        }
    }

    public init (from decoder: Swift.Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let grandchildrenContainer = try containerValues.decodeIfPresent([WaitersClientTypes.Grandchild?].self, forKey: .grandchildren)
        var grandchildrenDecoded0:[WaitersClientTypes.Grandchild]? = nil
        if let grandchildrenContainer = grandchildrenContainer {
            grandchildrenDecoded0 = [WaitersClientTypes.Grandchild]()
            for structure0 in grandchildrenContainer {
                if let structure0 = structure0 {
                    grandchildrenDecoded0?.append(structure0)
                }
            }
        }
        grandchildren = grandchildrenDecoded0
    }
}
